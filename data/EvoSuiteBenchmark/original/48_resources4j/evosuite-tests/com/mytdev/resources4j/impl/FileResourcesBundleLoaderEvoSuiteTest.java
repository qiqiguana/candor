/*
 * This file was automatically generated by EvoSuite
 */

package com.mytdev.resources4j.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.mytdev.resources4j.ResourcesException;
import com.mytdev.resources4j.impl.FileResourcesBundleLoader;
import java.io.File;
import java.nio.charset.Charset;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FileResourcesBundleLoaderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Class<?> class0 = FileResourcesBundleLoader.class;
      FileResourcesBundleLoader fileResourcesBundleLoader0 = new FileResourcesBundleLoader(class0, "GRAa");
      File file0 = fileResourcesBundleLoader0.getDirectory();
      assertNotNull(file0);
      
      fileResourcesBundleLoader0.setDirectory(file0);
      assertEquals(2, fileResourcesBundleLoader0.getDateFormatStyle());
  }

  @Test
  public void test1()  throws Throwable  {
      FileResourcesBundleLoader fileResourcesBundleLoader0 = new FileResourcesBundleLoader("YU;xX!yz", "YU;xX!yz");
      assertEquals(2, fileResourcesBundleLoader0.getDateFormatStyle());
      
      fileResourcesBundleLoader0.setDateFormatStyle(0);
      assertEquals(0, fileResourcesBundleLoader0.getDateFormatStyle());
  }

  @Test
  public void test2()  throws Throwable  {
      FileResourcesBundleLoader fileResourcesBundleLoader0 = new FileResourcesBundleLoader("-", "-");
      fileResourcesBundleLoader0.setFileBasename("-");
      assertEquals(2, fileResourcesBundleLoader0.getDateFormatStyle());
  }

  @Test
  public void test3()  throws Throwable  {
      Class<?> class0 = FileResourcesBundleLoader.class;
      FileResourcesBundleLoader fileResourcesBundleLoader0 = new FileResourcesBundleLoader(class0, "GRAa");
      int int0 = fileResourcesBundleLoader0.getDateFormatStyle();
      assertEquals(2, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      FileResourcesBundleLoader fileResourcesBundleLoader0 = new FileResourcesBundleLoader("-", "-");
      String string0 = fileResourcesBundleLoader0.getFileBasename();
      assertNotNull(string0);
      assertEquals(2, fileResourcesBundleLoader0.getDateFormatStyle());
  }

  @Test
  public void test5()  throws Throwable  {
      FileResourcesBundleLoader fileResourcesBundleLoader0 = new FileResourcesBundleLoader("YU;xX!yz", "YU;xX!yz");
      Charset charset0 = fileResourcesBundleLoader0.getCharset();
      assertNotNull(charset0);
      
      fileResourcesBundleLoader0.setCharset(charset0);
      assertEquals(2, fileResourcesBundleLoader0.getDateFormatStyle());
  }

  @Test
  public void test6()  throws Throwable  {
      FileResourcesBundleLoader fileResourcesBundleLoader0 = new FileResourcesBundleLoader("YU;xX!yz", "YU;xX!yz");
      fileResourcesBundleLoader0.getDateFormat();
      assertEquals(2, fileResourcesBundleLoader0.getDateFormatStyle());
  }

  @Test
  public void test7()  throws Throwable  {
      FileResourcesBundleLoader fileResourcesBundleLoader0 = new FileResourcesBundleLoader("-", "-");
      SimpleDateFormat simpleDateFormat0 = (SimpleDateFormat)DateFormat.getTimeInstance();
      fileResourcesBundleLoader0.setDateFormat((DateFormat) simpleDateFormat0);
      assertEquals(2, fileResourcesBundleLoader0.getDateFormatStyle());
  }

  @Test
  public void test8()  throws Throwable  {
      File file0 = new File("", "");
      FileResourcesBundleLoader fileResourcesBundleLoader0 = new FileResourcesBundleLoader(file0, "");
      try {
        fileResourcesBundleLoader0.loadBundle();
        fail("Expecting exception: ResourcesException");
      } catch(ResourcesException e) {
        /*
         * java.io.FileNotFoundException: /.properties (No such file or directory)
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      FileResourcesBundleLoader fileResourcesBundleLoader0 = new FileResourcesBundleLoader("YU;xX!yz", "YU;xX!yz");
      // Undeclared exception!
      try {
        fileResourcesBundleLoader0.loadBundle();
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * not a directory: YU;xX!yz
         */
      }
  }
}
