/*
 * This file was automatically generated by EvoSuite
 */

package org.javathena.conf;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.File;
import org.javathena.conf.FiltreSimple;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FiltreSimpleEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FiltreSimple filtreSimple0 = new FiltreSimple("?H@Hp0Vstdf5", "?H@Hp0Vstdf5");
      String string0 = filtreSimple0.getDescription();
      assertEquals("?H@Hp0Vstdf5", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      FiltreSimple filtreSimple0 = null;
      try {
        filtreSimple0 = new FiltreSimple((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * La description (ou extension) ne peutetre null.
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      FiltreSimple filtreSimple0 = null;
      try {
        filtreSimple0 = new FiltreSimple("", (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * La description (ou extension) ne peutetre null.
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      FiltreSimple filtreSimple0 = new FiltreSimple("?H@Hp0Vstdf5", "?H@Hp0Vstdf5");
      assertNotNull(filtreSimple0);
      
      File file0 = new File("?H@Hp0Vstdf5", "?H@Hp0Vstdf5");
      boolean boolean0 = filtreSimple0.accept(file0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      FiltreSimple filtreSimple0 = new FiltreSimple("~U\"u\"#;Iyy3:[FEk", "");
      assertNotNull(filtreSimple0);
      
      File file0 = new File("", "");
      boolean boolean0 = filtreSimple0.accept(file0);
      assertEquals(true, boolean0);
      assertEquals("~U\"u\"#;Iyy3:[FEk", filtreSimple0.getDescription());
  }
}
