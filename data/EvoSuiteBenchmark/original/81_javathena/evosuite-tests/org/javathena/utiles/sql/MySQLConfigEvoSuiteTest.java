/*
 * This file was automatically generated by EvoSuite
 */

package org.javathena.utiles.sql;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.runtime.System;
import org.evosuite.sandbox.Sandbox;
import org.javathena.utiles.sql.MySQLConfig;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MySQLConfigEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = MySQLConfig.getDynamic_account_ban();
      assertEquals(1, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      String string0 = MySQLConfig.getGm_db();
      assertEquals("gm_accounts", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      MySQLConfig.setLogin_server_port(0);
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = MySQLConfig.getDynamic_account_ban_class();
      assertEquals(0, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      MySQLConfig.setLogin_db("-qeG(qO75bA!)o");
  }

  @Test
  public void test5()  throws Throwable  {
      MySQLConfig.setLogin_server_db("");
  }

  @Test
  public void test6()  throws Throwable  {
      String string0 = MySQLConfig.getLogin_db_userid();
      assertEquals("userid", string0);
  }

  @Test
  public void test7()  throws Throwable  {
      MySQLConfig.setDynamic_account_ban((-1));
  }

  @Test
  public void test8()  throws Throwable  {
      MySQLConfig.setLogin_db_account_id("");
  }

  @Test
  public void test9()  throws Throwable  {
      String string0 = MySQLConfig.getLogin_db();
      assertEquals("conf/inter_athena.conf", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      String string0 = MySQLConfig.getLogin_db_user_pass();
      assertEquals("user_pass", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      String string0 = MySQLConfig.getLoginlog_db();
      assertEquals("loginlog", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      MySQLConfig.setLoginlog_db("-qeG(qO75bA!)o");
  }

  @Test
  public void test13()  throws Throwable  {
      MySQLConfig.setLogin_server_ip("BL2<G@[pCwNM|");
  }

  @Test
  public void test14()  throws Throwable  {
      String string0 = MySQLConfig.getLogin_db_account_id();
      assertEquals("conf/inter_athena.conf", string0);
  }

  @Test
  public void test15()  throws Throwable  {
      boolean boolean0 = MySQLConfig.isLogin_gm_read();
      assertEquals(true, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      MySQLConfig.setLogin_gm_read(true);
  }

  @Test
  public void test17()  throws Throwable  {
      MySQLConfig.setLogin_db_userid("!TBo");
  }

  @Test
  public void test18()  throws Throwable  {
      String string0 = MySQLConfig.getLogin_db_level();
      assertEquals("level", string0);
  }

  @Test
  public void test19()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          try {
            MySQLConfig.initConnection();
            fail("Expecting exception: MySQLNonTransientConnectionException");
          } catch(MySQLNonTransientConnectionException e) {
            /*
             * Could not create connection to database server. Attempted reconnect 3 times. Giving up.
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test20()  throws Throwable  {
      MySQLConfig.setLogin_db_level("NF11");
  }

  @Test
  public void test21()  throws Throwable  {
      String string0 = MySQLConfig.getDefault_codepage();
      assertEquals("", string0);
  }

  @Test
  public void test22()  throws Throwable  {
      String string0 = MySQLConfig.getMd5key();
      assertNull(string0);
  }

  @Test
  public void test23()  throws Throwable  {
      MySQLConfig.setUse_md5_passwds(0);
  }

  @Test
  public void test24()  throws Throwable  {
      MySQLConfig.setMd5key("9");
  }

  @Test
  public void test25()  throws Throwable  {
      MySQLConfig.setLogin_server_id("");
  }

  @Test
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try {
        MySQLConfig.executeQuery("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test27()  throws Throwable  {
      MySQLConfig.setGm_db("x_fZO{Z'AE\"C() .R");
  }

  @Test
  public void test28()  throws Throwable  {
      MySQLConfig.setDefault_codepage("login_db");
  }

  @Test
  public void test29()  throws Throwable  {
      String string0 = MySQLConfig.getReg_db();
      assertEquals("global_reg_value", string0);
  }

  @Test
  public void test30()  throws Throwable  {
      MySQLConfig.setReg_db("BL2<G@[pCwNM|");
  }

  @Test
  public void test31()  throws Throwable  {
      int int0 = MySQLConfig.getConnection_ping_interval();
      assertEquals(0, int0);
  }

  @Test
  public void test32()  throws Throwable  {
      MySQLConfig.setLogin_db_user_pass("_Yff3lC1ruX38[Y/");
  }

  @Test
  public void test33()  throws Throwable  {
      MySQLConfig.setDynamic_account_ban_class((-1679));
  }

  @Test
  public void test34()  throws Throwable  {
      MySQLConfig.setConnection_ping_interval(464);
  }

  @Test
  public void test35()  throws Throwable  {
      int int0 = MySQLConfig.getUse_md5_passwds();
      assertEquals((-1), int0);
  }

  @Test
  public void test36()  throws Throwable  {
      MySQLConfig.setLogin_server_pw("NF11");
  }

  @Test
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try {
        MySQLConfig.sql_config_read("x_fZO{Z'AE\"C() .R");
        fail("Expecting exception: System.SystemExitException");
      } catch(System.SystemExitException e) {
      }
  }

  @Test
  public void test38()  throws Throwable  {
      MySQLConfig.login_log("", "", "NF11", "NF11");
  }
}
