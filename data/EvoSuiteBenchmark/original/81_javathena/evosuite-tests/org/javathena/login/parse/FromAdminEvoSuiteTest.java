/*
 * This file was automatically generated by EvoSuite
 */

package org.javathena.login.parse;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.net.Socket;
import org.javathena.core.data.IParse;
import org.javathena.core.data.Socket_data;
import org.javathena.login.Login;
import org.javathena.login.parse.FromAdmin;
import org.javathena.login.parse.FromChar;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FromAdminEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FromAdmin fromAdmin0 = new FromAdmin();
      byte[] byteArray0 = new byte[22];
      Socket socket0 = new Socket();
      FromChar fromChar0 = new FromChar();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) fromChar0);
      int int0 = fromAdmin0.parse(byteArray0, socket_data0, (Login) null);
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      FromAdmin fromAdmin0 = new FromAdmin();
      Socket socket0 = new Socket();
      FromChar fromChar0 = new FromChar();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) fromChar0);
      socket0.close();
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte)80;
      int int0 = fromAdmin0.parse(socket_data0, byteArray0);
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      Socket socket0 = new Socket();
      FromAdmin fromAdmin0 = new FromAdmin();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)1;
      socket0.close();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) fromAdmin0);
      int int0 = fromAdmin0.parse(socket_data0, byteArray0);
      assertEquals(0, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      FromAdmin fromAdmin0 = new FromAdmin();
      Socket socket0 = new Socket();
      FromChar fromChar0 = new FromChar();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) fromChar0);
      byte[] byteArray0 = new byte[10];
      byteArray0[1] = (byte)122;
      byteArray0[0] = (byte)55;
      socket0.close();
      int int0 = fromAdmin0.parse(socket_data0, byteArray0);
      assertEquals(0, int0);
  }
}
