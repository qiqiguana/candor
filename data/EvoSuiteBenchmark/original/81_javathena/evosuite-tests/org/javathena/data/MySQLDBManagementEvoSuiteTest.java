/*
 * This file was automatically generated by EvoSuite
 */

package org.javathena.data;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.NoSuchElementException;
import org.javathena.core.data.Auth_data;
import org.javathena.data.MySQLDBManagement;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MySQLDBManagementEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MySQLDBManagement mySQLDBManagement0 = new MySQLDBManagement();
      // Undeclared exception!
      try {
        mySQLDBManagement0.login_config_read("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      MySQLDBManagement mySQLDBManagement0 = new MySQLDBManagement();
      mySQLDBManagement0.login_log("", "", "", "");
      assertEquals(0, mySQLDBManagement0.mmo_auth_init());
  }

  @Test
  public void test2()  throws Throwable  {
      MySQLDBManagement mySQLDBManagement0 = new MySQLDBManagement();
      // Undeclared exception!
      try {
        mySQLDBManagement0.dynamicFailBanCheck("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      MySQLDBManagement mySQLDBManagement0 = new MySQLDBManagement();
      // Undeclared exception!
      try {
        mySQLDBManagement0.isIpBan("");
        fail("Expecting exception: NoSuchElementException");
      } catch(NoSuchElementException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      MySQLDBManagement mySQLDBManagement0 = new MySQLDBManagement();
      // Undeclared exception!
      try {
        mySQLDBManagement0.getUser("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      MySQLDBManagement mySQLDBManagement0 = new MySQLDBManagement();
      mySQLDBManagement0.login_log("%d\t%s\t%s\t%s\t%s\t%d\t%d\t%s\t%s\t%d\t%s\t%s\t");
      assertEquals(0, mySQLDBManagement0.mmo_auth_init());
  }

  @Test
  public void test6()  throws Throwable  {
      MySQLDBManagement mySQLDBManagement0 = new MySQLDBManagement();
      Auth_data auth_data0 = mySQLDBManagement0.addUser("%d\t%s\t%s\t%s\t%s\t%d\t%d\t%s\t%s\t%d\t%s\t%s\t", "%d\t%s\t%s\t%s\t%s\t%d\t%d\t%s\t%s\t%d\t%s\t%s\t", "%d\t%s\t%s\t%s\t%s\t%d\t%d\t%s\t%s\t%d\t%s\t%s\t", 'U');
      assertNull(auth_data0);
  }

  @Test
  public void test7()  throws Throwable  {
      MySQLDBManagement mySQLDBManagement0 = new MySQLDBManagement();
      Integer integer0 = new Integer((-1));
      // Undeclared exception!
      try {
        mySQLDBManagement0.getUser(integer0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
