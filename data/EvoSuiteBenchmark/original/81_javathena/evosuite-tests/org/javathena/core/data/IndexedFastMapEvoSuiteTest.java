/*
 * This file was automatically generated by EvoSuite
 */

package org.javathena.core.data;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import javolution.util.FastMap;
import org.javathena.core.data.IndexedFastMap;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class IndexedFastMapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      IndexedFastMap<Object, Integer> indexedFastMap0 = new IndexedFastMap<Object, Integer>();
      FastMap<Object, Integer> fastMap0 = indexedFastMap0.getData();
      assertEquals(0, fastMap0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      IndexedFastMap<Object, Object> indexedFastMap0 = new IndexedFastMap<Object, Object>();
      FastMap<Object, Object> fastMap0 = new FastMap<Object, Object>();
      indexedFastMap0.setData(fastMap0);
      assertEquals(false, fastMap0.isShared());
  }

  @Test
  public void test2()  throws Throwable  {
      IndexedFastMap<Object, Object> indexedFastMap0 = new IndexedFastMap<Object, Object>();
      // Undeclared exception!
      try {
        indexedFastMap0.put((Object) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
