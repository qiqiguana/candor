/*
 * This file was automatically generated by EvoSuite
 */

package org.javathena.core.data;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.net.Proxy;
import java.net.Socket;
import java.util.Calendar;
import org.javathena.core.data.Excecutable;
import org.javathena.core.data.IParse;
import org.javathena.core.data.SessionType;
import org.javathena.core.data.Socket_data;
import org.javathena.login.parse.FromAdmin;
import org.javathena.login.parse.FromClient;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class Socket_dataEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Socket socket0 = new Socket();
      Socket_data socket_data0 = new Socket_data(socket0);
      String string0 = socket_data0.getMd5key();
      assertNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      FromClient fromClient0 = new FromClient();
      Socket_data socket_data0 = new Socket_data((Socket) null, (IParse) fromClient0);
      SessionType sessionType0 = SessionType.SESSION_MAX;
      socket_data0.setType(sessionType0);
      assertEquals(0, socket_data0.getEof());
  }

  @Test
  public void test2()  throws Throwable  {
      Socket socket0 = new Socket();
      FromClient fromClient0 = new FromClient();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) fromClient0);
      Excecutable excecutable0 = socket_data0.getFunc_console();
      assertNull(excecutable0);
  }

  @Test
  public void test3()  throws Throwable  {
      Socket socket0 = new Socket();
      FromClient fromClient0 = new FromClient();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) fromClient0);
      String string0 = socket_data0.getName();
      assertNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      Socket socket0 = new Socket(proxy0);
      Socket_data socket_data0 = new Socket_data(socket0);
      socket_data0.setAccount_id(0);
      assertEquals("0.0.0.0", socket_data0.getIpStr());
  }

  @Test
  public void test5()  throws Throwable  {
      FromClient fromClient0 = new FromClient();
      Socket_data socket_data0 = new Socket_data((Socket) null, (IParse) fromClient0);
      assertNotNull(socket_data0);
      
      int int0 = socket_data0.getMaintenance();
      assertEquals(0, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      Socket socket0 = new Socket(proxy0);
      Socket_data socket_data0 = new Socket_data(socket0);
      byte[] byteArray0 = socket_data0.getIpTab();
      // Undeclared exception!
      try {
        socket_data0.func_parse(socket_data0, byteArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Socket socket0 = new Socket();
      FromAdmin fromAdmin0 = new FromAdmin();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) fromAdmin0);
      socket_data0.getType();
  }

  @Test
  public void test8()  throws Throwable  {
      Socket socket0 = new Socket();
      FromAdmin fromAdmin0 = new FromAdmin();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) fromAdmin0);
      Integer integer0 = socket_data0.getAccount_id();
      assertEquals(0, (int)integer0);
  }

  @Test
  public void test9()  throws Throwable  {
      Socket socket0 = new Socket();
      FromClient fromClient0 = new FromClient();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) fromClient0);
      socket_data0.setFunc_send((Excecutable) null);
      assertEquals(0, socket_data0.getListenPort());
  }

  @Test
  public void test10()  throws Throwable  {
      Socket_data socket_data0 = new Socket_data((Socket) null);
      Calendar calendar0 = socket_data0.getRdata_tick();
      assertNull(calendar0);
  }

  @Test
  public void test11()  throws Throwable  {
      Socket socket0 = new Socket();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) null);
      Socket socket1 = socket_data0.getClient_addr();
      assertEquals(false, socket1.isInputShutdown());
  }

  @Test
  public void test12()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      Socket socket0 = new Socket(proxy0);
      Socket_data socket_data0 = new Socket_data(socket0);
      Object[] objectArray0 = new Object[17];
      // Undeclared exception!
      try {
        socket_data0.func_console(objectArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      Socket socket0 = new Socket();
      Socket_data socket_data0 = new Socket_data(socket0);
      int int0 = socket_data0.getNew_();
      assertEquals(0, int0);
  }

  @Test
  public void test14()  throws Throwable  {
      Socket socket0 = new Socket();
      Socket_data socket_data0 = new Socket_data(socket0);
      int int0 = socket_data0.getEof();
      assertEquals(0, int0);
  }

  @Test
  public void test15()  throws Throwable  {
      Socket socket0 = new Socket();
      FromClient fromClient0 = new FromClient();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) fromClient0);
      socket_data0.setUsers(17);
      assertEquals(17, socket_data0.getUsers());
  }

  @Test
  public void test16()  throws Throwable  {
      Socket_data socket_data0 = new Socket_data((Socket) null);
      socket_data0.setRdata_tick((Calendar) null);
      assertEquals(false, socket_data0.cancel());
  }

  @Test
  public void test17()  throws Throwable  {
      Socket socket0 = new Socket();
      Socket_data socket_data0 = new Socket_data(socket0);
      int int0 = socket_data0.getListenPort();
      assertEquals(0, int0);
  }

  @Test
  public void test18()  throws Throwable  {
      Socket socket0 = new Socket();
      FromAdmin fromAdmin0 = new FromAdmin();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) fromAdmin0);
      socket_data0.setName("0.0.0.0");
      assertEquals("0.0.0.0", socket_data0.getName());
  }

  @Test
  public void test19()  throws Throwable  {
      Socket socket0 = new Socket();
      FromAdmin fromAdmin0 = new FromAdmin();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) fromAdmin0);
      String string0 = socket_data0.getIpStr();
      assertEquals("0.0.0.0", string0);
  }

  @Test
  public void test20()  throws Throwable  {
      Socket_data socket_data0 = new Socket_data((Socket) null);
      assertNotNull(socket_data0);
      
      socket_data0.setListenPort(10);
      assertEquals(10, socket_data0.getListenPort());
  }

  @Test
  public void test21()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      Socket socket0 = new Socket(proxy0);
      Socket_data socket_data0 = new Socket_data(socket0);
      socket_data0.setMaintenance((-8));
      assertEquals(-8, socket_data0.getMaintenance());
  }

  @Test
  public void test22()  throws Throwable  {
      FromClient fromClient0 = new FromClient();
      Socket_data socket_data0 = new Socket_data((Socket) null, (IParse) fromClient0);
      FromClient fromClient1 = (FromClient)socket_data0.getFunc_parse();
      assertSame(fromClient1, fromClient0);
  }

  @Test
  public void test23()  throws Throwable  {
      Socket socket0 = new Socket();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) null);
      socket_data0.setNew_(8);
      assertEquals(8, socket_data0.getNew_());
  }

  @Test
  public void test24()  throws Throwable  {
      Socket socket0 = new Socket();
      FromAdmin fromAdmin0 = new FromAdmin();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) fromAdmin0);
      socket_data0.setFunc_console((Excecutable) null);
      assertEquals(0, socket_data0.getMaintenance());
  }

  @Test
  public void test25()  throws Throwable  {
      Socket socket0 = new Socket();
      Socket_data socket_data0 = new Socket_data(socket0);
      int int0 = socket_data0.getUsers();
      assertEquals(0, int0);
  }

  @Test
  public void test26()  throws Throwable  {
      Socket socket0 = new Socket();
      FromClient fromClient0 = new FromClient();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) fromClient0);
      FromAdmin fromAdmin0 = new FromAdmin();
      socket_data0.setFunc_parse((IParse) fromAdmin0);
      assertEquals(0L, socket_data0.scheduledExecutionTime());
  }

  @Test
  public void test27()  throws Throwable  {
      Socket socket0 = new Socket();
      FromAdmin fromAdmin0 = new FromAdmin();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) fromAdmin0);
      Excecutable excecutable0 = socket_data0.getFunc_send();
      assertNull(excecutable0);
  }

  @Test
  public void test28()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      Socket socket0 = new Socket(proxy0);
      Socket_data socket_data0 = new Socket_data(socket0);
      socket_data0.setFunc_recv((Excecutable) null);
      assertEquals(0, socket_data0.getUsers());
  }

  @Test
  public void test29()  throws Throwable  {
      Socket_data socket_data0 = new Socket_data((Socket) null);
      assertNotNull(socket_data0);
      
      socket_data0.setEof((-1049));
      assertEquals(-1049, socket_data0.getEof());
  }

  @Test
  public void test30()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      Socket socket0 = new Socket(proxy0);
      Socket_data socket_data0 = new Socket_data(socket0);
      socket_data0.setMd5key("");
      assertEquals(0, socket_data0.getEof());
  }

  @Test
  public void test31()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      Socket socket0 = new Socket(proxy0);
      Socket_data socket_data0 = new Socket_data(socket0);
      Excecutable excecutable0 = socket_data0.getFunc_recv();
      assertNull(excecutable0);
  }

  @Test
  public void test32()  throws Throwable  {
      Socket socket0 = new Socket();
      Socket_data socket_data0 = new Socket_data(socket0);
      // Undeclared exception!
      try {
        socket_data0.run();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test33()  throws Throwable  {
      Socket socket0 = new Socket();
      FromClient fromClient0 = new FromClient();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) fromClient0);
      socket0.close();
      // Undeclared exception!
      try {
        socket_data0.run();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test34()  throws Throwable  {
      Socket socket0 = new Socket();
      socket0.close();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) null);
      int int0 = socket_data0.func_recv();
      assertEquals((-1), int0);
  }

  @Test
  public void test35()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      Socket socket0 = new Socket(proxy0);
      FromClient fromClient0 = new FromClient();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) fromClient0);
      // Undeclared exception!
      try {
        socket_data0.func_recv();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test36()  throws Throwable  {
      Socket socket0 = new Socket();
      FromAdmin fromAdmin0 = new FromAdmin();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) fromAdmin0);
      byte[] byteArray0 = new byte[1];
      socket0.close();
      int int0 = socket_data0.func_recv(byteArray0);
      assertEquals((-1), int0);
  }

  @Test
  public void test37()  throws Throwable  {
      Socket socket0 = new Socket();
      Socket_data socket_data0 = new Socket_data(socket0);
      byte[] byteArray0 = new byte[10];
      // Undeclared exception!
      try {
        socket_data0.func_recv(byteArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test38()  throws Throwable  {
      Socket socket0 = new Socket();
      socket0.close();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) null);
      byte[] byteArray0 = new byte[5];
      socket_data0.func_send(byteArray0);
      assertEquals(0, socket_data0.getListenPort());
  }

  @Test
  public void test39()  throws Throwable  {
      Socket socket0 = new Socket();
      FromAdmin fromAdmin0 = new FromAdmin();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) fromAdmin0);
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try {
        socket_data0.func_send(byteArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test40()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      Socket socket0 = new Socket(proxy0);
      Socket_data socket_data0 = new Socket_data(socket0);
      int[] intArray0 = new int[2];
      socket_data0.func_send(intArray0);
      assertNull(socket_data0.getMd5key());
  }

  @Test
  public void test41()  throws Throwable  {
      Socket socket0 = new Socket();
      FromAdmin fromAdmin0 = new FromAdmin();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) fromAdmin0);
      socket0.close();
      int[] intArray0 = new int[4];
      // Undeclared exception!
      try {
        socket_data0.func_send(intArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test42()  throws Throwable  {
      Socket socket0 = new Socket();
      socket0.close();
      Socket_data socket_data0 = new Socket_data(socket0, (IParse) null);
      socket_data0.func_send(8);
      assertEquals(0, socket_data0.getMaintenance());
  }

  @Test
  public void test43()  throws Throwable  {
      Socket socket0 = new Socket();
      Socket_data socket_data0 = new Socket_data(socket0);
      // Undeclared exception!
      try {
        socket_data0.func_send(0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test44()  throws Throwable  {
      FromClient fromClient0 = new FromClient();
      Socket_data socket_data0 = new Socket_data((Socket) null, (IParse) fromClient0);
      socket_data0.setClient_addr((Socket) null);
      assertNull(socket_data0.getType());
  }

  @Test
  public void test45()  throws Throwable  {
      Socket socket0 = new Socket();
      Socket_data socket_data0 = new Socket_data(socket0);
      socket_data0.setClient_addr(socket0);
      assertEquals(false, socket0.getReuseAddress());
  }
}
