/*
 * This file was automatically generated by EvoSuite
 */

package org.javathena.core.data;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.javathena.core.data.Point;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PointEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Point point0 = new Point((-1094), 0, 0);
      assertEquals(-1094, point0.getMapId());
      
      point0.setMapId(0);
      assertEquals(0, point0.getMapId());
  }

  @Test
  public void test1()  throws Throwable  {
      Point point0 = new Point((-1094), 0, 0);
      int int0 = point0.getY();
      assertEquals(-1094, point0.getMapId());
      assertEquals(0, point0.getX());
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      Point point0 = new Point((-1094), 0, 0);
      point0.setX(0);
      assertEquals(-1094, point0.getMapId());
      assertEquals(0, point0.getY());
      assertEquals(0, point0.getX());
  }

  @Test
  public void test3()  throws Throwable  {
      Point point0 = new Point((-1094), 0, 0);
      int int0 = point0.getMapId();
      assertEquals((-1094), int0);
      assertEquals(0, point0.getX());
      assertEquals(0, point0.getY());
  }

  @Test
  public void test4()  throws Throwable  {
      Point point0 = new Point((-1094), 0, 0);
      int int0 = point0.getX();
      assertEquals(0, int0);
      assertEquals(0, point0.getY());
      assertEquals(-1094, point0.getMapId());
  }

  @Test
  public void test5()  throws Throwable  {
      Point point0 = new Point(0, 1713, 1713);
      point0.setY(1713);
      assertEquals(1713, point0.getY());
      assertEquals(1713, point0.getX());
      assertEquals(0, point0.getMapId());
  }
}
