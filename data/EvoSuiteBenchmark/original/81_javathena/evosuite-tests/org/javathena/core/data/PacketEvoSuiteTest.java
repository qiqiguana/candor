/*
 * This file was automatically generated by EvoSuite
 */

package org.javathena.core.data;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.javathena.core.data.Packet;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PacketEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Packet packet0 = new Packet(1);
      assertNotNull(packet0);
      
      int int0 = packet0.getCurrentIndex();
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      Packet packet0 = new Packet(51);
      assertNotNull(packet0);
      
      packet0.getData();
      assertEquals(16, packet0.getCurrentIndex());
  }

  @Test
  public void test2()  throws Throwable  {
      Packet packet0 = new Packet(1);
      assertNotNull(packet0);
      
      byte[] byteArray0 = new byte[7];
      packet0.setData(byteArray0);
      boolean boolean0 = packet0.readBoolean();
      assertEquals(6, packet0.getCurrentIndex());
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      Packet packet0 = new Packet(0);
      assertNotNull(packet0);
      
      // Undeclared exception!
      try {
        packet0.writeString("%");
        fail("Expecting exception: AssertionError");
      } catch(AssertionError e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Packet packet0 = new Packet(137);
      assertNotNull(packet0);
      
      packet0.writeString("");
      assertEquals(16, packet0.getCurrentIndex());
  }

  @Test
  public void test5()  throws Throwable  {
      Packet packet0 = new Packet(1029);
      assertNotNull(packet0);
      
      // Undeclared exception!
      try {
        packet0.writeString("", 1029);
        fail("Expecting exception: AssertionError");
      } catch(AssertionError e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Packet packet0 = new Packet(137);
      assertNotNull(packet0);
      
      // Undeclared exception!
      try {
        packet0.writeString("", 1239);
        fail("Expecting exception: AssertionError");
      } catch(AssertionError e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Packet packet0 = new Packet(137);
      assertNotNull(packet0);
      
      packet0.setCurrentIndex((-1277));
      packet0.writeString("", 1239);
      assertEquals(-22, packet0.getCurrentIndex());
  }

  @Test
  public void test8()  throws Throwable  {
      Packet packet0 = new Packet(0);
      assertNotNull(packet0);
      
      // Undeclared exception!
      try {
        packet0.writeByte((byte)64);
        fail("Expecting exception: AssertionError");
      } catch(AssertionError e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      Packet packet0 = new Packet(51);
      assertNotNull(packet0);
      
      packet0.writeByte((byte) (-8));
      assertEquals(17, packet0.getCurrentIndex());
  }

  @Test
  public void test10()  throws Throwable  {
      Packet packet0 = new Packet(0);
      assertNotNull(packet0);
      
      // Undeclared exception!
      try {
        packet0.writeBoolean(false);
        fail("Expecting exception: AssertionError");
      } catch(AssertionError e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      Packet packet0 = new Packet(1272);
      assertNotNull(packet0);
      
      packet0.writeBoolean(true);
      assertEquals(17, packet0.getCurrentIndex());
  }

  @Test
  public void test12()  throws Throwable  {
      Packet packet0 = new Packet(146);
      assertNotNull(packet0);
      
      packet0.writeBoolean(false);
      assertEquals(17, packet0.getCurrentIndex());
  }

  @Test
  public void test13()  throws Throwable  {
      Packet packet0 = new Packet(137);
      assertNotNull(packet0);
      
      packet0.writeInteger(137);
      assertEquals(20, packet0.getCurrentIndex());
  }

  @Test
  public void test14()  throws Throwable  {
      Packet packet0 = new Packet(2);
      assertNotNull(packet0);
      
      // Undeclared exception!
      try {
        packet0.writeInteger(2);
        fail("Expecting exception: AssertionError");
      } catch(AssertionError e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      Packet packet0 = new Packet(1);
      assertNotNull(packet0);
      
      // Undeclared exception!
      try {
        packet0.writeShort((int) (byte)0);
        fail("Expecting exception: AssertionError");
      } catch(AssertionError e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      Packet packet0 = new Packet(1029);
      assertNotNull(packet0);
      
      packet0.writeShort(1029);
      assertEquals(18, packet0.getCurrentIndex());
  }

  @Test
  public void test17()  throws Throwable  {
      Packet packet0 = new Packet(146);
      assertNotNull(packet0);
      
      // Undeclared exception!
      try {
        packet0.readString(146);
        fail("Expecting exception: AssertionError");
      } catch(AssertionError e) {
      }
  }

  @Test
  public void test18()  throws Throwable  {
      Packet packet0 = new Packet(3);
      assertNotNull(packet0);
      
      String string0 = packet0.readString(0);
      assertNotNull(string0);
      assertEquals(2, packet0.getCurrentIndex());
  }

  @Test
  public void test19()  throws Throwable  {
      Packet packet0 = new Packet(0);
      assertNotNull(packet0);
      
      // Undeclared exception!
      try {
        packet0.readByte();
        fail("Expecting exception: AssertionError");
      } catch(AssertionError e) {
      }
  }

  @Test
  public void test20()  throws Throwable  {
      Packet packet0 = new Packet(146);
      assertNotNull(packet0);
      
      packet0.readByte();
      assertEquals(17, packet0.getCurrentIndex());
  }

  @Test
  public void test21()  throws Throwable  {
      Packet packet0 = new Packet(0);
      assertNotNull(packet0);
      
      // Undeclared exception!
      try {
        packet0.readBoolean();
        fail("Expecting exception: AssertionError");
      } catch(AssertionError e) {
      }
  }

  @Test
  public void test22()  throws Throwable  {
      Packet packet0 = new Packet(1);
      assertNotNull(packet0);
      
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)36;
      packet0.setData(byteArray0);
      boolean boolean0 = packet0.readBoolean();
      assertEquals(6, packet0.getCurrentIndex());
      assertEquals(false, boolean0);
  }

  @Test
  public void test23()  throws Throwable  {
      Packet packet0 = new Packet(3);
      assertNotNull(packet0);
      
      // Undeclared exception!
      try {
        packet0.readInteger();
        fail("Expecting exception: AssertionError");
      } catch(AssertionError e) {
      }
  }

  @Test
  public void test24()  throws Throwable  {
      Packet packet0 = new Packet(51);
      assertNotNull(packet0);
      
      packet0.readInteger();
      assertEquals(20, packet0.getCurrentIndex());
  }

  @Test
  public void test25()  throws Throwable  {
      Packet packet0 = new Packet(1);
      assertNotNull(packet0);
      
      // Undeclared exception!
      try {
        packet0.readShort();
        fail("Expecting exception: AssertionError");
      } catch(AssertionError e) {
      }
  }

  @Test
  public void test26()  throws Throwable  {
      Packet packet0 = new Packet(1272);
      assertNotNull(packet0);
      
      packet0.readShort();
      assertEquals(18, packet0.getCurrentIndex());
  }

  @Test
  public void test27()  throws Throwable  {
      Packet packet0 = new Packet(1272);
      assertNotNull(packet0);
      
      boolean boolean0 = packet0.setCurrentIndex(1272);
      assertEquals(16, packet0.getCurrentIndex());
      assertEquals(false, boolean0);
  }

  @Test
  public void test28()  throws Throwable  {
      Packet packet0 = new Packet(1);
      assertNotNull(packet0);
      
      packet0.resize(1);
      assertEquals(0, packet0.getCurrentIndex());
  }

  @Test
  public void test29()  throws Throwable  {
      Packet packet0 = new Packet(51);
      assertNotNull(packet0);
      
      packet0.resize(1601);
      assertEquals(16, packet0.getCurrentIndex());
  }
}
