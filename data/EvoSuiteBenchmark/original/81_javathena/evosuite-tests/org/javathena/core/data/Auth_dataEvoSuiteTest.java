/*
 * This file was automatically generated by EvoSuite
 */

package org.javathena.core.data;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Calendar;
import javolution.util.FastMap;
import org.javathena.core.data.Auth_data;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class Auth_dataEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.setLogin_id1(0);
      assertEquals(-1, auth_data0.getCharserver());
      assertEquals(0, auth_data0.getLogin_id1());
  }

  @Test
  public void test1()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.setResetLogincoun(true);
      auth_data0.setLogincount(342);
      assertEquals(true, auth_data0.isResetLogincoun());
      assertEquals("0\tnull\tnull\t\u0000\tnull\t0\t0\t0\t0\t0\t0\tnull\t", auth_data0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.getSex();
      assertEquals(-1, auth_data0.getCharserver());
  }

  @Test
  public void test3()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.setAccount_id(7);
      assertEquals("7\tnull\tnull\t\u0000\tnull\t0\t0\t0\t0\t0\t0\tnull\t", auth_data0.toString());
      assertEquals(-1, auth_data0.getCharserver());
  }

  @Test
  public void test4()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      int int0 = auth_data0.getLogin_id1();
      assertEquals(0, int0);
      assertEquals(-1, auth_data0.getCharserver());
  }

  @Test
  public void test5()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.getAccount_reg2_num();
      assertEquals(-1, auth_data0.getCharserver());
  }

  @Test
  public void test6()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      int int0 = auth_data0.getDelflag();
      assertEquals(0, int0);
      assertEquals(-1, auth_data0.getCharserver());
  }

  @Test
  public void test7()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.setBan_until_time((long) (-18));
      assertEquals((-18L), auth_data0.getBan_until_time());
      assertEquals(-1, auth_data0.getCharserver());
  }

  @Test
  public void test8()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.setSex('3');
      assertEquals("0\tnull\tnull\t3\tnull\t0\t0\t0\t0\t0\t0\tnull\t", auth_data0.toString());
      assertEquals('3', auth_data0.getSex());
  }

  @Test
  public void test9()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      int int0 = auth_data0.getClientType();
      assertEquals(0, int0);
      assertEquals(-1, auth_data0.getCharserver());
  }

  @Test
  public void test10()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.setEmail("ZR6hGO");
      assertEquals(-1, auth_data0.getCharserver());
  }

  @Test
  public void test11()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      int int0 = auth_data0.getLogin_id2();
      assertEquals(0, int0);
      assertEquals(-1, auth_data0.getCharserver());
  }

  @Test
  public void test12()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.setConnect_until_time((long) 0);
      assertEquals(-1, auth_data0.getCharserver());
  }

  @Test
  public void test13()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.setDelflag(0);
      assertEquals(-1, auth_data0.getCharserver());
      assertEquals(0, auth_data0.getDelflag());
  }

  @Test
  public void test14()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.setLastlogin();
      String string0 = auth_data0.toString();
      assertEquals(1, auth_data0.getLogincount());
      assertEquals("0\tnull\tnull\t\u0000\tnull\t0\t0\t0\t0\t1\t2013-06-02 00:14:07:71\tnull\t", string0);
  }

  @Test
  public void test15()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.setPass(":]@ic.BdUS~k[");
      assertEquals(-1, auth_data0.getCharserver());
  }

  @Test
  public void test16()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      int int0 = auth_data0.getCharserver();
      assertEquals((-1), int0);
  }

  @Test
  public void test17()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.isResetLogincoun();
      assertEquals(-1, auth_data0.getCharserver());
  }

  @Test
  public void test18()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      int int0 = auth_data0.getVersion();
      assertEquals(-1, auth_data0.getCharserver());
      assertEquals(0, int0);
  }

  @Test
  public void test19()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.setLastlogin((Calendar) null);
      assertEquals(-1, auth_data0.getCharserver());
  }

  @Test
  public void test20()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.setUserid("ZR6hGO");
      assertEquals(-1, auth_data0.getCharserver());
  }

  @Test
  public void test21()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.setLast_ip("!2");
      assertEquals(-1, auth_data0.getCharserver());
  }

  @Test
  public void test22()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.setLevel(0);
      assertEquals(-1, auth_data0.getCharserver());
      assertEquals("0\tnull\tnull\t\u0000\tnull\t0\t0\t0\t0\t0\t0\tnull\t", auth_data0.toString());
  }

  @Test
  public void test23()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      FastMap<String, String> fastMap0 = new FastMap<String, String>(0);
      auth_data0.setAccount_reg2(fastMap0);
      assertEquals(-1, auth_data0.getCharserver());
  }

  @Test
  public void test24()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      FastMap<String, String> fastMap0 = auth_data0.getAccount_reg2();
      fastMap0.put("", "");
      String string0 = auth_data0.toString();
      assertEquals("0\tnull\tnull\t\u0000\tnull\t0\t0\t0\t0\t0\t0\tnull\t,", auth_data0.toString());
      assertNotNull(string0);
      assertEquals("0\tnull\tnull\t\u0000\tnull\t0\t0\t0\t0\t0\t0\tnull\t,", string0);
  }

  @Test
  public void test25()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.setVersion((-821));
      assertEquals(-821, auth_data0.getVersion());
      assertEquals(-1, auth_data0.getCharserver());
  }

  @Test
  public void test26()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.setClientType(1784);
      assertEquals(1784, auth_data0.getClientType());
      assertEquals(-1, auth_data0.getCharserver());
  }

  @Test
  public void test27()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.setLogin_id2(342);
      assertEquals(342, auth_data0.getLogin_id2());
  }

  @Test
  public void test28()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      assertEquals(-1, auth_data0.getCharserver());
      
      auth_data0.setCharserver(0);
      assertEquals(0, auth_data0.getCharserver());
  }

  @Test
  public void test29()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.setLogincount((-18));
      assertEquals(-18, auth_data0.getLogincount());
      assertEquals(-1, auth_data0.getCharserver());
  }

  @Test
  public void test30()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.setLogincount(1269);
      assertEquals(1269, auth_data0.getLogincount());
      assertEquals(-1, auth_data0.getCharserver());
  }

  @Test
  public void test31()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.setState((-987));
      assertEquals(-1, auth_data0.getCharserver());
      assertEquals("0\tnull\tnull\t\u0000\tnull\t0\t0\t0\t0\t0\t0\tnull\t", auth_data0.toString());
      assertEquals(0, auth_data0.getState());
  }

  @Test
  public void test32()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.setState(1269);
      assertEquals("0\tnull\tnull\t\u0000\tnull\t0\t100\t0\t0\t0\t0\tnull\t", auth_data0.toString());
      assertEquals(100, auth_data0.getState());
  }

  @Test
  public void test33()  throws Throwable  {
      Auth_data auth_data0 = new Auth_data();
      auth_data0.setState(7);
      assertEquals(7, auth_data0.getState());
      assertEquals("0\tnull\tnull\t\u0000\tnull\t0\t7\t0\t0\t0\t0\tnull\t", auth_data0.toString());
  }
}
