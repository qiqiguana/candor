/*
 * This file was automatically generated by EvoSuite
 */

package mygrid.web;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import javax.xml.namespace.QName;
import mygrid.web._Logon;
import org.apache.axis.description.TypeDesc;
import org.apache.axis.encoding.ser.BeanDeserializer;
import org.apache.axis.encoding.ser.BeanSerializer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class _LogonEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Class<?> class0 = QName.class;
      QName qName0 = QName.valueOf("jRaa)version");
      BeanSerializer beanSerializer0 = (BeanSerializer)_Logon.getSerializer("jRaa)version", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanSerializer0.getMechanismType());
  }

  @Test
  public void test1()  throws Throwable  {
      _Logon _Logon0 = new _Logon();
      _Logon0.setClusterUrl("jRaa)version");
      int int0 = _Logon0.hashCode();
      assertEquals(1452733400, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      Class<?> class0 = QName.class;
      QName qName0 = QName.valueOf("jRaa)version");
      BeanDeserializer beanDeserializer0 = (BeanDeserializer)_Logon.getDeserializer("jRaa)version", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanDeserializer0.getMechanismType());
  }

  @Test
  public void test3()  throws Throwable  {
      TypeDesc typeDesc0 = _Logon.getTypeDesc();
      assertEquals(false, typeDesc0.hasAttributes());
  }

  @Test
  public void test4()  throws Throwable  {
      _Logon _Logon0 = new _Logon();
      _Logon0.setPassword("jRaa)version");
      int int0 = _Logon0.hashCode();
      assertEquals(1452733400, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      _Logon _Logon0 = new _Logon();
      boolean boolean0 = _Logon0.equals((Object) "");
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      _Logon _Logon0 = new _Logon();
      _Logon _Logon1 = new _Logon();
      assertTrue(_Logon1.equals(_Logon0));
      
      _Logon1.setPassword("jRaa)version");
      boolean boolean0 = _Logon0.equals((Object) _Logon1);
      assertFalse(_Logon1.equals(_Logon0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      _Logon _Logon0 = new _Logon();
      _Logon _Logon1 = new _Logon();
      assertTrue(_Logon1.equals(_Logon0));
      
      _Logon1.setClusterUrl("Xn7{fGY1Vv9");
      boolean boolean0 = _Logon1.equals((Object) _Logon0);
      assertFalse(_Logon1.equals(_Logon0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      _Logon _Logon0 = new _Logon();
      _Logon _Logon1 = new _Logon();
      assertTrue(_Logon1.equals(_Logon0));
      
      _Logon1.setClusterUrl("jRaa)version");
      boolean boolean0 = _Logon0.equals((Object) _Logon1);
      assertFalse(_Logon1.equals(_Logon0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      _Logon _Logon0 = new _Logon();
      _Logon _Logon1 = new _Logon();
      assertTrue(_Logon1.equals(_Logon0));
      
      _Logon1.setUser("Xn7{fGY1Vv9");
      _Logon1.setClusterUrl("Xn7{fGY1Vv9");
      _Logon0.setClusterUrl("Xn7{fGY1Vv9");
      boolean boolean0 = _Logon1.equals((Object) _Logon0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      _Logon _Logon0 = new _Logon();
      _Logon _Logon1 = new _Logon();
      assertTrue(_Logon1.equals(_Logon0));
      
      _Logon1.setUser("Internal Error: pre-checl fo9 ");
      boolean boolean0 = _Logon0.equals((Object) _Logon1);
      assertFalse(_Logon1.equals(_Logon0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      _Logon _Logon0 = new _Logon();
      _Logon _Logon1 = new _Logon();
      _Logon1.setUser("Xn7{fGY1Vv9");
      _Logon0.setUser("Xn7{fGY1Vv9");
      _Logon1.setClusterUrl("Xn7{fGY1Vv9");
      assertFalse(_Logon1.equals(_Logon0));
      
      _Logon0.setClusterUrl("Xn7{fGY1Vv9");
      boolean boolean0 = _Logon1.equals((Object) _Logon0);
      assertTrue(_Logon1.equals(_Logon0));
      assertEquals(true, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      _Logon _Logon0 = new _Logon();
      _Logon _Logon1 = new _Logon();
      assertTrue(_Logon1.equals(_Logon0));
      
      _Logon0.setPassword("log4.p2|I|perties");
      boolean boolean0 = _Logon0.equals((Object) _Logon1);
      assertFalse(_Logon1.equals(_Logon0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      _Logon _Logon0 = new _Logon();
      _Logon _Logon1 = new _Logon();
      _Logon1.setPassword("log4.p2|I|perties");
      assertFalse(_Logon1.equals(_Logon0));
      
      _Logon0.setPassword("log4.p2|I|perties");
      boolean boolean0 = _Logon0.equals((Object) _Logon1);
      assertTrue(_Logon0.equals(_Logon1));
      assertEquals(true, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      _Logon _Logon0 = new _Logon();
      _Logon0.setUser("Xn7{fGY1Vv9");
      int int0 = _Logon0.hashCode();
      assertEquals(2079451495, int0);
  }
}
