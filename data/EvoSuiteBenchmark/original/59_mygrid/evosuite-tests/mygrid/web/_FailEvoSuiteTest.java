/*
 * This file was automatically generated by EvoSuite
 */

package mygrid.web;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import javax.xml.namespace.QName;
import mygrid.web.Job;
import mygrid.web._Fail;
import org.apache.axis.description.TypeDesc;
import org.apache.axis.encoding.ser.BeanDeserializer;
import org.apache.axis.encoding.ser.BeanSerializer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class _FailEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Class<?> class0 = _Fail.class;
      QName qName0 = new QName("", "");
      BeanSerializer beanSerializer0 = (BeanSerializer)_Fail.getSerializer("", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanSerializer0.getMechanismType());
  }

  @Test
  public void test1()  throws Throwable  {
      _Fail _Fail0 = new _Fail();
      _Fail _Fail1 = new _Fail();
      boolean boolean0 = _Fail0.equals((Object) _Fail1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      Class<?> class0 = _Fail.class;
      QName qName0 = new QName("", "");
      BeanDeserializer beanDeserializer0 = (BeanDeserializer)_Fail.getDeserializer("", (Class) class0, qName0);
      assertEquals(false, beanDeserializer0.componentsReady());
  }

  @Test
  public void test3()  throws Throwable  {
      _Fail _Fail0 = new _Fail();
      Job job0 = new Job();
      _Fail0.setJob(job0);
      _Fail _Fail1 = new _Fail();
      assertFalse(_Fail1.equals(_Fail0));
      
      _Fail1.setJob(job0);
      boolean boolean0 = _Fail0.equals((Object) _Fail1);
      assertTrue(_Fail1.equals(_Fail0));
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      TypeDesc typeDesc0 = _Fail.getTypeDesc();
      assertEquals(false, typeDesc0.hasAttributes());
  }

  @Test
  public void test5()  throws Throwable  {
      _Fail _Fail0 = new _Fail();
      QName qName0 = new QName("", "");
      boolean boolean0 = _Fail0.equals((Object) qName0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      _Fail _Fail0 = new _Fail();
      Job job0 = new Job();
      _Fail0.setJob(job0);
      _Fail _Fail1 = new _Fail();
      boolean boolean0 = _Fail0.equals((Object) _Fail1);
      assertFalse(_Fail1.equals(_Fail0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      _Fail _Fail0 = new _Fail();
      _Fail _Fail1 = new _Fail();
      assertTrue(_Fail1.equals(_Fail0));
      
      Job job0 = new Job();
      _Fail1.setJob(job0);
      boolean boolean0 = _Fail0.equals((Object) _Fail1);
      assertFalse(_Fail1.equals(_Fail0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      _Fail _Fail0 = new _Fail();
      int int0 = _Fail0.hashCode();
      assertEquals(1, int0);
  }

  @Test
  public void test9()  throws Throwable  {
      _Fail _Fail0 = new _Fail();
      Job job0 = new Job();
      _Fail0.setJob(job0);
      int int0 = _Fail0.hashCode();
      assertEquals(1239, int0);
  }
}
