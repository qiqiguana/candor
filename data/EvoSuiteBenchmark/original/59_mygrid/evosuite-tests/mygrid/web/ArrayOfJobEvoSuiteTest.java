/*
 * This file was automatically generated by EvoSuite
 */

package mygrid.web;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import javax.xml.namespace.QName;
import mygrid.web.ArrayOfJob;
import mygrid.web.Job;
import org.apache.axis.description.TypeDesc;
import org.apache.axis.encoding.ser.BeanDeserializer;
import org.apache.axis.encoding.ser.BeanSerializer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ArrayOfJobEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ArrayOfJob arrayOfJob0 = new ArrayOfJob();
      // Undeclared exception!
      try {
        arrayOfJob0.setJob(2, (Job) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ArrayOfJob arrayOfJob0 = new ArrayOfJob();
      // Undeclared exception!
      try {
        arrayOfJob0.getJob(2);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TypeDesc typeDesc0 = ArrayOfJob.getTypeDesc();
      assertEquals(false, typeDesc0.hasAttributes());
  }

  @Test
  public void test3()  throws Throwable  {
      ArrayOfJob arrayOfJob0 = new ArrayOfJob();
      ArrayOfJob arrayOfJob1 = new ArrayOfJob();
      boolean boolean0 = arrayOfJob0.equals((Object) arrayOfJob1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      Class<?> class0 = Class.class;
      QName qName0 = new QName("WpU", "WpU");
      BeanDeserializer beanDeserializer0 = (BeanDeserializer)ArrayOfJob.getDeserializer("WpU", (Class) class0, qName0);
      assertEquals(false, beanDeserializer0.componentsReady());
  }

  @Test
  public void test5()  throws Throwable  {
      Class<?> class0 = Class.class;
      QName qName0 = new QName("WpU", "WpU");
      BeanSerializer beanSerializer0 = (BeanSerializer)ArrayOfJob.getSerializer("WpU", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanSerializer0.getMechanismType());
  }

  @Test
  public void test6()  throws Throwable  {
      ArrayOfJob arrayOfJob0 = new ArrayOfJob();
      boolean boolean0 = arrayOfJob0.equals((Object) "Available");
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      ArrayOfJob arrayOfJob0 = new ArrayOfJob();
      ArrayOfJob arrayOfJob1 = new ArrayOfJob();
      assertTrue(arrayOfJob1.equals(arrayOfJob0));
      
      Job[] jobArray0 = new Job[10];
      arrayOfJob1.setJob(jobArray0);
      boolean boolean0 = arrayOfJob0.equals((Object) arrayOfJob1);
      assertFalse(arrayOfJob0.equals(arrayOfJob1));
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      ArrayOfJob arrayOfJob0 = new ArrayOfJob();
      ArrayOfJob arrayOfJob1 = new ArrayOfJob();
      assertTrue(arrayOfJob1.equals(arrayOfJob0));
      
      Job[] jobArray0 = new Job[12];
      arrayOfJob1.setJob(jobArray0);
      boolean boolean0 = arrayOfJob1.equals((Object) arrayOfJob0);
      assertFalse(arrayOfJob1.equals(arrayOfJob0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      ArrayOfJob arrayOfJob0 = new ArrayOfJob();
      ArrayOfJob arrayOfJob1 = new ArrayOfJob();
      Job[] jobArray0 = new Job[12];
      arrayOfJob1.setJob(jobArray0);
      assertFalse(arrayOfJob1.equals(arrayOfJob0));
      
      arrayOfJob0.setJob(jobArray0);
      boolean boolean0 = arrayOfJob1.equals((Object) arrayOfJob0);
      assertTrue(arrayOfJob0.equals(arrayOfJob1));
      assertEquals(true, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      ArrayOfJob arrayOfJob0 = new ArrayOfJob();
      int int0 = arrayOfJob0.hashCode();
      assertEquals(1, int0);
  }

  @Test
  public void test11()  throws Throwable  {
      ArrayOfJob arrayOfJob0 = new ArrayOfJob();
      Job[] jobArray0 = new Job[13];
      Job job0 = new Job();
      jobArray0[3] = job0;
      arrayOfJob0.setJob(jobArray0);
      int int0 = arrayOfJob0.hashCode();
      assertEquals(1239, int0);
  }
}
