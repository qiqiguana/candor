/*
 * This file was automatically generated by EvoSuite
 */

package mygrid.web;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import javax.xml.namespace.QName;
import mygrid.web.Processor;
import org.apache.axis.description.TypeDesc;
import org.apache.axis.encoding.ser.BeanDeserializer;
import org.apache.axis.encoding.ser.BeanSerializer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ProcessorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TypeDesc typeDesc0 = Processor.getTypeDesc();
      assertEquals(false, typeDesc0.hasAttributes());
  }

  @Test
  public void test1()  throws Throwable  {
      Class<?> class0 = Processor.class;
      QName qName0 = new QName("\"~", "\"~");
      BeanSerializer beanSerializer0 = (BeanSerializer)Processor.getSerializer("\"~", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanSerializer0.getMechanismType());
  }

  @Test
  public void test2()  throws Throwable  {
      QName qName0 = QName.valueOf("org.apache.commons.logging.impl.");
      Class<?> class0 = Class.class;
      BeanDeserializer beanDeserializer0 = (BeanDeserializer)Processor.getDeserializer("org.apache.commons.logging.impl.", (Class) class0, qName0);
      assertEquals(false, beanDeserializer0.componentsReady());
  }

  @Test
  public void test3()  throws Throwable  {
      Processor processor0 = new Processor();
      boolean boolean0 = processor0.equals((Object) "\"@~");
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      Processor processor0 = new Processor();
      Processor processor1 = new Processor();
      assertTrue(processor1.equals(processor0));
      
      processor0.setAssembly("\"~");
      boolean boolean0 = processor1.equals((Object) processor0);
      assertFalse(processor1.equals(processor0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      Processor processor0 = new Processor();
      Processor processor1 = new Processor();
      assertTrue(processor1.equals(processor0));
      
      processor0.setType("org.apache.commons.logging.impl.");
      boolean boolean0 = processor0.equals((Object) processor1);
      assertFalse(processor0.equals(processor1));
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      Processor processor0 = new Processor();
      Processor processor1 = new Processor();
      assertTrue(processor1.equals(processor0));
      
      processor0.setType("org.apache.commons.logging.impl.");
      boolean boolean0 = processor1.equals((Object) processor0);
      assertFalse(processor1.equals(processor0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      Processor processor0 = new Processor();
      processor0.setType("\"@~");
      Processor processor1 = new Processor();
      assertFalse(processor1.equals(processor0));
      
      processor1.setType("\"@~");
      boolean boolean0 = processor0.equals((Object) processor1);
      assertTrue(processor1.equals(processor0));
      assertEquals(true, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      Processor processor0 = new Processor();
      processor0.setAssembly("H");
      Processor processor1 = new Processor();
      boolean boolean0 = processor0.equals((Object) processor1);
      assertFalse(processor1.equals(processor0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      Processor processor0 = new Processor();
      processor0.setAssembly("\"~");
      Processor processor1 = new Processor();
      assertFalse(processor1.equals(processor0));
      
      processor1.setAssembly("\"~");
      boolean boolean0 = processor1.equals((Object) processor0);
      assertTrue(processor1.equals(processor0));
      assertEquals(true, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      Processor processor0 = new Processor();
      processor0.setType("Method returns: ");
      int int0 = processor0.hashCode();
      assertEquals(1534689099, int0);
  }

  @Test
  public void test11()  throws Throwable  {
      Processor processor0 = new Processor();
      processor0.setAssembly("Method returns: ");
      int int0 = processor0.hashCode();
      assertEquals(1534689099, int0);
  }
}
