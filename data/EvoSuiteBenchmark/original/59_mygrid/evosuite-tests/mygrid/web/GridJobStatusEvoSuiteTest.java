/*
 * This file was automatically generated by EvoSuite
 */

package mygrid.web;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.ObjectStreamException;
import mygrid.web.GridJobStatus;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class GridJobStatusEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      GridJobStatus gridJobStatus0 = new GridJobStatus("");
      assertNotNull(gridJobStatus0);
      
      int int0 = gridJobStatus0.hashCode();
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      GridJobStatus gridJobStatus0 = GridJobStatus.Acquired;
      String string0 = gridJobStatus0.getValue();
      assertNotNull(string0);
      assertEquals("Acquired", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      try {
        GridJobStatus.fromString("5]1C#L");
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      GridJobStatus gridJobStatus0 = GridJobStatus.Acquired;
      GridJobStatus gridJobStatus1 = (GridJobStatus)gridJobStatus0.readResolve();
      assertNotSame(gridJobStatus1, gridJobStatus0);
      assertNotNull(gridJobStatus1);
      assertEquals("Acquired", gridJobStatus1.getValue());
  }

  @Test
  public void test4()  throws Throwable  {
      try {
        GridJobStatus.fromValue("Ath\"M?mU64Fvx|]H");
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      GridJobStatus gridJobStatus0 = GridJobStatus.fromValue("");
      assertNotNull(gridJobStatus0);
      
      boolean boolean0 = gridJobStatus0.equals((Object) "JrG|:#nbg");
      assertEquals(false, boolean0);
      assertEquals("", gridJobStatus0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      GridJobStatus gridJobStatus0 = new GridJobStatus("");
      assertNotNull(gridJobStatus0);
      
      boolean boolean0 = gridJobStatus0.equals((Object) gridJobStatus0);
      assertEquals(true, boolean0);
      assertEquals("", gridJobStatus0.getValue());
  }
}
