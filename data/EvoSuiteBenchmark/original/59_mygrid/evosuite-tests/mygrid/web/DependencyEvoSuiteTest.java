/*
 * This file was automatically generated by EvoSuite
 */

package mygrid.web;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import javax.xml.namespace.QName;
import mygrid.web.Dependency;
import org.apache.axis.description.TypeDesc;
import org.apache.axis.encoding.ser.BeanDeserializer;
import org.apache.axis.encoding.ser.BeanSerializer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DependencyEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Class<?> class0 = Dependency.class;
      QName qName0 = QName.valueOf("mD");
      BeanDeserializer beanDeserializer0 = (BeanDeserializer)Dependency.getDeserializer("mD", (Class) class0, qName0);
      assertEquals(false, beanDeserializer0.componentsReady());
  }

  @Test
  public void test1()  throws Throwable  {
      TypeDesc typeDesc0 = Dependency.getTypeDesc();
      assertEquals(false, typeDesc0.hasAttributes());
  }

  @Test
  public void test2()  throws Throwable  {
      Dependency dependency0 = new Dependency();
      Dependency dependency1 = new Dependency();
      dependency0.setId("mD");
      assertFalse(dependency0.equals(dependency1));
      
      dependency1.setId("mD");
      boolean boolean0 = dependency0.equals((Object) dependency1);
      assertTrue(dependency1.equals(dependency0));
      assertEquals(true, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      Class<?> class0 = Dependency.class;
      QName qName0 = QName.valueOf("mD");
      BeanSerializer beanSerializer0 = (BeanSerializer)Dependency.getSerializer("mD", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanSerializer0.getMechanismType());
  }

  @Test
  public void test4()  throws Throwable  {
      Dependency dependency0 = new Dependency();
      boolean boolean0 = dependency0.equals((Object) "J!7%{");
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      Dependency dependency0 = new Dependency();
      Dependency dependency1 = new Dependency();
      assertTrue(dependency1.equals(dependency0));
      
      dependency0.setId("mD");
      boolean boolean0 = dependency0.equals((Object) dependency1);
      assertFalse(dependency0.equals(dependency1));
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      Dependency dependency0 = new Dependency();
      Dependency dependency1 = new Dependency();
      boolean boolean0 = dependency0.equals((Object) dependency1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      Dependency dependency0 = new Dependency();
      Dependency dependency1 = new Dependency();
      assertTrue(dependency1.equals(dependency0));
      
      dependency1.setId(";");
      boolean boolean0 = dependency0.equals((Object) dependency1);
      assertFalse(dependency1.equals(dependency0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      Dependency dependency0 = new Dependency();
      Dependency dependency1 = new Dependency();
      assertTrue(dependency1.equals(dependency0));
      
      dependency0.setName(";");
      boolean boolean0 = dependency0.equals((Object) dependency1);
      assertFalse(dependency1.equals(dependency0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      Dependency dependency0 = new Dependency();
      Dependency dependency1 = new Dependency();
      assertTrue(dependency1.equals(dependency0));
      
      dependency1.setName("toLeve");
      boolean boolean0 = dependency0.equals((Object) dependency1);
      assertFalse(dependency0.equals(dependency1));
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      Dependency dependency0 = new Dependency();
      Dependency dependency1 = new Dependency();
      dependency1.setName("J!7%{");
      assertFalse(dependency1.equals(dependency0));
      
      dependency0.setName("J!7%{");
      boolean boolean0 = dependency0.equals((Object) dependency1);
      assertTrue(dependency0.equals(dependency1));
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      Dependency dependency0 = new Dependency();
      dependency0.setId(";");
      int int0 = dependency0.hashCode();
      assertEquals(60, int0);
  }

  @Test
  public void test12()  throws Throwable  {
      Dependency dependency0 = new Dependency();
      dependency0.setName("J!7%{");
      int int0 = dependency0.hashCode();
      assertEquals(69377783, int0);
  }
}
