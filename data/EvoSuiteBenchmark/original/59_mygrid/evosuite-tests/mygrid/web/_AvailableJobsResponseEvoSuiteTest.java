/*
 * This file was automatically generated by EvoSuite
 */

package mygrid.web;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import javax.xml.namespace.QName;
import mygrid.web.ArrayOfJob;
import mygrid.web.ContextElement;
import mygrid.web._AvailableJobsResponse;
import org.apache.axis.description.TypeDesc;
import org.apache.axis.encoding.ser.BeanDeserializer;
import org.apache.axis.encoding.ser.BeanSerializer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class _AvailableJobsResponseEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      _AvailableJobsResponse _AvailableJobsResponse0 = new _AvailableJobsResponse();
      int int0 = _AvailableJobsResponse0.hashCode();
      assertEquals(1, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      Class<?> class0 = ContextElement.class;
      QName qName0 = new QName("d{QsPnuf4L)|sn5", "d{QsPnuf4L)|sn5", "d{QsPnuf4L)|sn5");
      BeanDeserializer beanDeserializer0 = (BeanDeserializer)_AvailableJobsResponse.getDeserializer("d{QsPnuf4L)|sn5", (Class) class0, qName0);
      assertEquals(false, beanDeserializer0.componentsReady());
  }

  @Test
  public void test2()  throws Throwable  {
      Class<?> class0 = ContextElement.class;
      QName qName0 = new QName("d{QsPnuf4L)|sn5", "d{QsPnuf4L)|sn5", "d{QsPnuf4L)|sn5");
      BeanSerializer beanSerializer0 = (BeanSerializer)_AvailableJobsResponse.getSerializer("d{QsPnuf4L)|sn5", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanSerializer0.getMechanismType());
  }

  @Test
  public void test3()  throws Throwable  {
      TypeDesc typeDesc0 = _AvailableJobsResponse.getTypeDesc();
      assertEquals(false, typeDesc0.hasAttributes());
  }

  @Test
  public void test4()  throws Throwable  {
      _AvailableJobsResponse _AvailableJobsResponse0 = new _AvailableJobsResponse();
      boolean boolean0 = _AvailableJobsResponse0.equals((Object) "d{QsPnuf4L)|sn5");
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      _AvailableJobsResponse _AvailableJobsResponse0 = new _AvailableJobsResponse();
      _AvailableJobsResponse _AvailableJobsResponse1 = new _AvailableJobsResponse();
      assertTrue(_AvailableJobsResponse1.equals(_AvailableJobsResponse0));
      
      ArrayOfJob arrayOfJob0 = new ArrayOfJob();
      _AvailableJobsResponse0.setAvailableJobsResult(arrayOfJob0);
      boolean boolean0 = _AvailableJobsResponse0.equals((Object) _AvailableJobsResponse1);
      assertFalse(_AvailableJobsResponse1.equals(_AvailableJobsResponse0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      _AvailableJobsResponse _AvailableJobsResponse0 = new _AvailableJobsResponse();
      _AvailableJobsResponse _AvailableJobsResponse1 = new _AvailableJobsResponse();
      boolean boolean0 = _AvailableJobsResponse0.equals((Object) _AvailableJobsResponse1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      _AvailableJobsResponse _AvailableJobsResponse0 = new _AvailableJobsResponse();
      _AvailableJobsResponse _AvailableJobsResponse1 = new _AvailableJobsResponse();
      assertTrue(_AvailableJobsResponse1.equals(_AvailableJobsResponse0));
      
      ArrayOfJob arrayOfJob0 = new ArrayOfJob();
      _AvailableJobsResponse1.setAvailableJobsResult(arrayOfJob0);
      boolean boolean0 = _AvailableJobsResponse0.equals((Object) _AvailableJobsResponse1);
      assertFalse(_AvailableJobsResponse1.equals(_AvailableJobsResponse0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      _AvailableJobsResponse _AvailableJobsResponse0 = new _AvailableJobsResponse();
      ArrayOfJob arrayOfJob0 = new ArrayOfJob();
      _AvailableJobsResponse0.setAvailableJobsResult(arrayOfJob0);
      _AvailableJobsResponse _AvailableJobsResponse1 = new _AvailableJobsResponse();
      assertFalse(_AvailableJobsResponse1.equals(_AvailableJobsResponse0));
      
      _AvailableJobsResponse1.setAvailableJobsResult(arrayOfJob0);
      boolean boolean0 = _AvailableJobsResponse0.equals((Object) _AvailableJobsResponse1);
      assertTrue(_AvailableJobsResponse1.equals(_AvailableJobsResponse0));
      assertEquals(true, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      _AvailableJobsResponse _AvailableJobsResponse0 = new _AvailableJobsResponse();
      ArrayOfJob arrayOfJob0 = new ArrayOfJob();
      _AvailableJobsResponse0.setAvailableJobsResult(arrayOfJob0);
      int int0 = _AvailableJobsResponse0.hashCode();
      assertEquals(2, int0);
  }
}
