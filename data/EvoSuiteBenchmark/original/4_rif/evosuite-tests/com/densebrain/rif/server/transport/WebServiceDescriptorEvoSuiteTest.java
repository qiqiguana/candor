/*
 * This file was automatically generated by EvoSuite
 */

package com.densebrain.rif.server.transport;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.densebrain.rif.server.transport.WebServiceDescriptor;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class WebServiceDescriptorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Class<?> class0 = Class.class;
      WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor((Class) class0, "*In", "*In");
      webServiceDescriptor0.setTypesNamespace("*In");
      assertEquals("*In", webServiceDescriptor0.getTargetNamespace());
  }

  @Test
  public void test1()  throws Throwable  {
      Class<?> class0 = Object.class;
      WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor((Class) class0, "", "");
      webServiceDescriptor0.setServiceClazz(class0);
      assertEquals("", webServiceDescriptor0.getTypesNamespace());
  }

  @Test
  public void test2()  throws Throwable  {
      Class<?> class0 = Class.class;
      WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor((Class) class0, "*In", "*In");
      String string0 = webServiceDescriptor0.getTargetNamespace();
      assertEquals("*In", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor((Class) null, "", "");
      Class<Object> class0 = webServiceDescriptor0.getServiceClazz();
      assertNull(class0);
  }

  @Test
  public void test4()  throws Throwable  {
      Class<?> class0 = Object.class;
      WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor((Class) class0, "", "");
      String string0 = webServiceDescriptor0.getTypesNamespace();
      assertEquals("", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      Class<?> class0 = Class.class;
      WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor((Class) class0, "*In", "*In");
      webServiceDescriptor0.setTargetNamespace("*In");
      assertEquals("*In", webServiceDescriptor0.getTargetNamespace());
  }

  @Test
  public void test6()  throws Throwable  {
      Class<?> class0 = Class.class;
      WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor((Class) class0, "*In", "*In");
      int int0 = webServiceDescriptor0.hashCode();
      assertEquals(176065644, int0);
  }

  @Test
  public void test7()  throws Throwable  {
      WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor((Class) null, "", "");
      int int0 = webServiceDescriptor0.hashCode();
      assertEquals(31, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      Class<?> class0 = Object.class;
      WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor((Class) class0, "", "");
      Class<?> class1 = WebServiceDescriptor.class;
      WebServiceDescriptor webServiceDescriptor1 = new WebServiceDescriptor((Class) class1, "", "");
      boolean boolean0 = webServiceDescriptor0.equals((Object) webServiceDescriptor1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      Class<?> class0 = WebServiceDescriptor.class;
      WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor((Class) class0, (String) null, (String) null);
      boolean boolean0 = webServiceDescriptor0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      Class<?> class0 = Object.class;
      WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor((Class) class0, "", "");
      Object object0 = new Object();
      boolean boolean0 = webServiceDescriptor0.equals(object0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor((Class) null, "", "");
      WebServiceDescriptor webServiceDescriptor1 = new WebServiceDescriptor((Class) webServiceDescriptor0.serviceClazz, "", "GB)7{4!X55&l03\"5[M5");
      boolean boolean0 = webServiceDescriptor0.equals((Object) webServiceDescriptor1);
      assertEquals(true, boolean0);
      assertEquals("GB)7{4!X55&l03\"5[M5", webServiceDescriptor1.getTypesNamespace());
  }

  @Test
  public void test12()  throws Throwable  {
      WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor((Class) null, "", "");
      Class<?> class0 = WebServiceDescriptor.class;
      WebServiceDescriptor webServiceDescriptor1 = new WebServiceDescriptor((Class) class0, "", "GB)7{4!X55&l03\"5[M5");
      boolean boolean0 = webServiceDescriptor0.equals((Object) webServiceDescriptor1);
      assertFalse(webServiceDescriptor1.equals(webServiceDescriptor0));
      assertEquals("GB)7{4!X55&l03\"5[M5", webServiceDescriptor1.getTypesNamespace());
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      Class<?> class0 = Object.class;
      WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor((Class) class0, "pn$HDW*ls+", "pn$HDW*ls+");
      WebServiceDescriptor webServiceDescriptor1 = new WebServiceDescriptor((Class) class0, "pn$HDW*ls+", "pn$HDW*ls+");
      boolean boolean0 = webServiceDescriptor0.equals((Object) webServiceDescriptor1);
      assertEquals(true, boolean0);
  }
}
