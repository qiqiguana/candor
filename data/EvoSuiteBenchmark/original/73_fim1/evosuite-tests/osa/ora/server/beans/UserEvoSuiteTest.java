/*
 * This file was automatically generated by EvoSuite
 */

package osa.ora.server.beans;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.BufferedWriter;
import java.io.StringWriter;
import java.io.Writer;
import org.junit.BeforeClass;
import osa.ora.server.beans.User;

@RunWith(EvoSuiteRunner.class)
public class UserEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      User user0 = new User();
      user0.setGroup_id(0);
      assertEquals(0, user0.getGroup_id());
  }

  @Test
  public void test1()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getDirectPhone();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      User user0 = new User();
      boolean boolean0 = user0.isOnlyStartChat();
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getJobTitle();
      assertNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      User user0 = new User();
      user0.setStatus_id(0);
      assertEquals(0, user0.getStatus_id());
  }

  @Test
  public void test5()  throws Throwable  {
      User user0 = new User();
      user0.setId((-1));
      assertEquals(-1, user0.getId());
  }

  @Test
  public void test6()  throws Throwable  {
      User user0 = new User();
      user0.setShowMyStatus(true);
      assertEquals(true, user0.isShowMyStatus());
  }

  @Test
  public void test7()  throws Throwable  {
      User user0 = new User();
      boolean boolean0 = user0.isShowMyStatus();
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getName();
      assertNull(string0);
  }

  @Test
  public void test9()  throws Throwable  {
      User user0 = new User();
      user0.setJobTitle("");
      assertNull(user0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      User user0 = new User();
      int int0 = user0.getStatus_id();
      assertEquals(0, int0);
  }

  @Test
  public void test11()  throws Throwable  {
      User user0 = new User();
      int int0 = user0.getGroup_id();
      assertEquals(0, int0);
  }

  @Test
  public void test12()  throws Throwable  {
      User user0 = new User();
      user0.setEmail(")@#m<E=");
      assertEquals(false, user0.isShowMyStatus());
  }

  @Test
  public void test13()  throws Throwable  {
      User user0 = new User();
      user0.setName("");
      assertNull(user0.getJobTitle());
  }

  @Test
  public void test14()  throws Throwable  {
      User user0 = new User();
      user0.setCanJoinChatRoom(true);
      assertEquals(true, user0.isCanJoinChatRoom());
  }

  @Test
  public void test15()  throws Throwable  {
      User user0 = new User();
      user0.setOnlyStartChat(false);
      assertEquals(false, user0.isOnlyStartChat());
  }

  @Test
  public void test16()  throws Throwable  {
      User user0 = new User();
      StringWriter stringWriter0 = new StringWriter();
      BufferedWriter bufferedWriter0 = new BufferedWriter((Writer) stringWriter0, 1102);
      try {
        user0.writeToFile(bufferedWriter0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test17()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getEmail();
      assertNull(string0);
  }

  @Test
  public void test18()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.toString();
      assertNull(string0);
  }

  @Test
  public void test19()  throws Throwable  {
      User user0 = new User();
      int int0 = user0.getId();
      assertEquals(0, int0);
  }

  @Test
  public void test20()  throws Throwable  {
      User user0 = new User();
      user0.setDirectPhone("M@qM?w:");
      assertNull(user0.getEmail());
  }

  @Test
  public void test21()  throws Throwable  {
      User user0 = new User();
      boolean boolean0 = user0.isCanJoinChatRoom();
      assertEquals(false, boolean0);
  }
}
