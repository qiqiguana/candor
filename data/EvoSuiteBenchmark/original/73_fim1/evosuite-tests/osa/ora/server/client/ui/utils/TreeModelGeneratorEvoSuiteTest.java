/*
 * This file was automatically generated by EvoSuite
 */

package osa.ora.server.client.ui.utils;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Vector;
import javax.swing.tree.DefaultTreeModel;
import org.junit.BeforeClass;
import osa.ora.server.beans.Group;
import osa.ora.server.beans.User;
import osa.ora.server.client.ui.utils.TreeModelGenerator;

@RunWith(EvoSuiteRunner.class)
public class TreeModelGeneratorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TreeModelGenerator treeModelGenerator0 = new TreeModelGenerator();
      assertNotNull(treeModelGenerator0);
  }

  @Test
  public void test1()  throws Throwable  {
      Vector<Group> vector0 = new Vector<Group>();
      Group group0 = new Group();
      vector0.add(group0);
      User user0 = new User();
      Vector<User> vector1 = new Vector<User>();
      DefaultTreeModel defaultTreeModel0 = TreeModelGenerator.getModel("^Q1Q", (Vector) vector0, (Vector) vector1, user0, true, true);
      assertEquals(false, defaultTreeModel0.asksAllowsChildren());
  }

  @Test
  public void test2()  throws Throwable  {
      Vector<Group> vector0 = new Vector<Group>();
      Group group0 = new Group();
      vector0.add(group0);
      User user0 = new User();
      Vector<User> vector1 = new Vector<User>();
      DefaultTreeModel defaultTreeModel0 = TreeModelGenerator.getModel("^Q1Q", (Vector) vector0, (Vector) vector1, user0, false, false);
      assertEquals(false, defaultTreeModel0.asksAllowsChildren());
  }

  @Test
  public void test3()  throws Throwable  {
      Vector<Group> vector0 = new Vector<Group>();
      Group group0 = new Group();
      vector0.add(group0);
      User user0 = new User();
      Vector<User> vector1 = new Vector<User>();
      group0.setUsers(vector1);
      vector1.add(user0);
      DefaultTreeModel defaultTreeModel0 = TreeModelGenerator.getModel("^Q1Q", (Vector) vector0, (Vector) vector1, user0, true, true);
      assertEquals(false, defaultTreeModel0.asksAllowsChildren());
  }

  @Test
  public void test4()  throws Throwable  {
      Vector<Group> vector0 = new Vector<Group>();
      Group group0 = new Group();
      vector0.add(group0);
      User user0 = new User();
      Vector<User> vector1 = new Vector<User>();
      group0.setUsers(vector1);
      vector1.add(user0);
      DefaultTreeModel defaultTreeModel0 = TreeModelGenerator.getModel("^Q1Q", (Vector) vector0, (Vector) vector1, (User) null, true, true);
      assertEquals(false, defaultTreeModel0.asksAllowsChildren());
  }

  @Test
  public void test5()  throws Throwable  {
      Vector<Group> vector0 = new Vector<Group>();
      Group group0 = new Group();
      vector0.add(group0);
      User user0 = new User();
      Vector<User> vector1 = new Vector<User>();
      group0.setUsers(vector1);
      user0.setId(949);
      vector1.add(user0);
      User user1 = new User();
      DefaultTreeModel defaultTreeModel0 = TreeModelGenerator.getModel("^Q1Q", (Vector) vector0, (Vector) vector1, user1, true, true);
      assertEquals(false, defaultTreeModel0.asksAllowsChildren());
  }

  @Test
  public void test6()  throws Throwable  {
      Vector<Group> vector0 = new Vector<Group>();
      Group group0 = new Group();
      vector0.add(group0);
      User user0 = new User();
      Vector<User> vector1 = new Vector<User>();
      group0.setUsers(vector1);
      user0.setId(949);
      vector1.add(user0);
      User user1 = new User();
      DefaultTreeModel defaultTreeModel0 = TreeModelGenerator.getModel("^Q1Q", (Vector) vector0, (Vector) vector1, user1, false, false);
      assertEquals(false, defaultTreeModel0.asksAllowsChildren());
  }

  @Test
  public void test7()  throws Throwable  {
      Vector<Group> vector0 = new Vector<Group>();
      Group group0 = new Group();
      vector0.add(group0);
      User user0 = new User();
      Vector<User> vector1 = new Vector<User>();
      group0.setUsers(vector1);
      user0.setId(949);
      vector1.add(user0);
      User user1 = new User();
      user0.setStatus_id(949);
      DefaultTreeModel defaultTreeModel0 = TreeModelGenerator.getModel("^Q1Q", (Vector) vector0, (Vector) vector1, user1, true, true);
      assertEquals(false, defaultTreeModel0.asksAllowsChildren());
  }
}
