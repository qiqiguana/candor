/*
 * This file was automatically generated by EvoSuite
 */

package osa.ora.server.beans;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import osa.ora.server.beans.BinaryMessage;

@RunWith(EvoSuiteRunner.class)
public class BinaryMessageEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BinaryMessage binaryMessage0 = new BinaryMessage();
      binaryMessage0.setAction(0);
      assertEquals(0, binaryMessage0.getAction());
  }

  @Test
  public void test1()  throws Throwable  {
      BinaryMessage binaryMessage0 = new BinaryMessage();
      String string0 = binaryMessage0.getDesc();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      BinaryMessage binaryMessage0 = new BinaryMessage();
      int int0 = binaryMessage0.getToUserId();
      assertEquals(0, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      BinaryMessage binaryMessage0 = new BinaryMessage();
      binaryMessage0.setFromUserId(0);
      assertEquals(0, binaryMessage0.getFromUserId());
  }

  @Test
  public void test4()  throws Throwable  {
      BinaryMessage binaryMessage0 = new BinaryMessage();
      byte[] byteArray0 = binaryMessage0.getData();
      assertNull(byteArray0);
  }

  @Test
  public void test5()  throws Throwable  {
      BinaryMessage binaryMessage0 = new BinaryMessage();
      binaryMessage0.setDesc((String) null);
      assertEquals(0, binaryMessage0.getAction());
  }

  @Test
  public void test6()  throws Throwable  {
      BinaryMessage binaryMessage0 = new BinaryMessage();
      binaryMessage0.setTargetType(0);
      assertEquals(0, binaryMessage0.getTargetType());
  }

  @Test
  public void test7()  throws Throwable  {
      BinaryMessage binaryMessage0 = new BinaryMessage();
      int int0 = binaryMessage0.getAction();
      assertEquals(0, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      BinaryMessage binaryMessage0 = new BinaryMessage();
      int int0 = binaryMessage0.getFromUserId();
      assertEquals(0, int0);
  }

  @Test
  public void test9()  throws Throwable  {
      BinaryMessage binaryMessage0 = new BinaryMessage();
      String string0 = binaryMessage0.getTitle();
      assertNull(string0);
  }

  @Test
  public void test10()  throws Throwable  {
      BinaryMessage binaryMessage0 = new BinaryMessage();
      binaryMessage0.setToUserId(65);
      assertEquals(65, binaryMessage0.getToUserId());
  }

  @Test
  public void test11()  throws Throwable  {
      BinaryMessage binaryMessage0 = new BinaryMessage();
      binaryMessage0.setTitle("");
      assertEquals("", binaryMessage0.getTitle());
  }

  @Test
  public void test12()  throws Throwable  {
      BinaryMessage binaryMessage0 = new BinaryMessage();
      int int0 = binaryMessage0.getTargetType();
      assertEquals(0, int0);
  }

  @Test
  public void test13()  throws Throwable  {
      BinaryMessage binaryMessage0 = new BinaryMessage();
      binaryMessage0.setData((byte[]) null);
      assertEquals(0, binaryMessage0.getTargetType());
  }
}
