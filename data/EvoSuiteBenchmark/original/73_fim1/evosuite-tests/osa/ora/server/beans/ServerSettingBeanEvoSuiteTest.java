/*
 * This file was automatically generated by EvoSuite
 */

package osa.ora.server.beans;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import osa.ora.server.beans.ServerSettingBean;

@RunWith(EvoSuiteRunner.class)
public class ServerSettingBeanEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      ServerSettingBean serverSettingBean0 = new ServerSettingBean("(!");
      String string0 = serverSettingBean0.getServerPort();
      assertNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      ServerSettingBean serverSettingBean0 = new ServerSettingBean("(!");
      serverSettingBean0.setConnectionType("(!/config/server.properties");
      assertNull(serverSettingBean0.getLogLevel());
  }

  @Test
  public void test2()  throws Throwable  {
      ServerSettingBean serverSettingBean0 = new ServerSettingBean("(!");
      String string0 = serverSettingBean0.getLogLevel();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      ServerSettingBean serverSettingBean0 = new ServerSettingBean("g$-.%<CFVm");
      serverSettingBean0.setServerPort("g$-.%<CFVm/config/server.properties");
      assertEquals("g$-.%<CFVm/config/server.properties", serverSettingBean0.getServerPort());
  }

  @Test
  public void test4()  throws Throwable  {
      ServerSettingBean serverSettingBean0 = new ServerSettingBean("(!");
      String string0 = serverSettingBean0.getServerURL();
      assertNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      ServerSettingBean serverSettingBean0 = new ServerSettingBean("d!ZzB^");
      serverSettingBean0.setDefualtPassword("d!ZzB^/config/server.properties");
      assertNull(serverSettingBean0.getRootNode());
  }

  @Test
  public void test6()  throws Throwable  {
      ServerSettingBean serverSettingBean0 = new ServerSettingBean("(!");
      serverSettingBean0.setServerURL("(!/config/server.properties");
      assertNull(serverSettingBean0.getConnectionType());
  }

  @Test
  public void test7()  throws Throwable  {
      ServerSettingBean serverSettingBean0 = new ServerSettingBean("(!");
      String string0 = serverSettingBean0.getSecureMode();
      assertNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      ServerSettingBean serverSettingBean0 = new ServerSettingBean("g$-.%<CFVm");
      serverSettingBean0.setLogLevel("g$-.%<CFVm/config/server.properties");
      assertNull(serverSettingBean0.getSecureMode());
  }

  @Test
  public void test9()  throws Throwable  {
      ServerSettingBean serverSettingBean0 = new ServerSettingBean("g$-.%<CFVm");
      assertNotNull(serverSettingBean0);
      
      serverSettingBean0.setRootNode("g$-.%<CFVm");
      assertEquals("g$-.%<CFVm", serverSettingBean0.getRootNode());
  }

  @Test
  public void test10()  throws Throwable  {
      ServerSettingBean serverSettingBean0 = new ServerSettingBean("d!ZzB^");
      String string0 = serverSettingBean0.getDefualtPassword();
      assertNull(string0);
  }

  @Test
  public void test11()  throws Throwable  {
      ServerSettingBean serverSettingBean0 = new ServerSettingBean("(!");
      String string0 = serverSettingBean0.getRootNode();
      assertNull(string0);
  }

  @Test
  public void test12()  throws Throwable  {
      ServerSettingBean serverSettingBean0 = new ServerSettingBean("g$-.%<CFVm");
      String string0 = serverSettingBean0.getConnectionType();
      assertNull(string0);
  }

  @Test
  public void test13()  throws Throwable  {
      ServerSettingBean serverSettingBean0 = new ServerSettingBean("(!");
      serverSettingBean0.setSecureMode("(!/config/server.properties");
      assertNull(serverSettingBean0.getConnectionType());
  }

  @Test
  public void test14()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          ServerSettingBean serverSettingBean0 = new ServerSettingBean("(!");
          serverSettingBean0.updateSettings();
          assertNull(serverSettingBean0.getServerURL());
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }
}
