/*
 * This file was automatically generated by EvoSuite
 */

package osa.ora.server.client.ui.utils;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.HeadlessException;
import javax.swing.border.Border;
import javax.swing.border.EtchedBorder;
import javax.swing.border.TitledBorder;
import javax.swing.plaf.FontUIResource;
import org.junit.BeforeClass;
import osa.ora.server.client.ui.utils.FontSelectionModel;
import osa.ora.server.client.ui.utils.JFontChooser;

@RunWith(EvoSuiteRunner.class)
public class JFontChooserEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JFontChooser jFontChooser0 = new JFontChooser();
      assertNotNull(jFontChooser0);
      
      Color color0 = Color.getColor("{'|P~.Q", (-1577));
      EtchedBorder etchedBorder0 = new EtchedBorder((-1577), color0, color0);
      TitledBorder titledBorder0 = new TitledBorder((Border) etchedBorder0, "{'|P~.Q");
      FontUIResource fontUIResource0 = (FontUIResource)titledBorder0.getTitleFont();
      jFontChooser0.setFont((Font) fontUIResource0);
      assertEquals(5, jFontChooser0.getComponentCount());
      assertEquals("osa.ora.server.client.ui.utils.JFontChooser[,0,0,0x0,invalid,layout=java.awt.GridBagLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]", jFontChooser0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      JFontChooser jFontChooser0 = new JFontChooser((Font) null);
      assertNotNull(jFontChooser0);
      
      jFontChooser0.setPreviewText("osa.ora.server.client.ui.utils.JFontChooser[,0,0,0x0,invalid,layout=java.awt.GridBagLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]");
      assertEquals("osa.ora.server.client.ui.utils.JFontChooser[,0,0,0x0,invalid,layout=java.awt.GridBagLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]", jFontChooser0.getPreviewText());
      assertEquals("osa.ora.server.client.ui.utils.JFontChooser[,0,0,0x0,invalid,layout=java.awt.GridBagLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]", jFontChooser0.toString());
      assertEquals(5, jFontChooser0.getComponentCount());
  }

  @Test
  public void test2()  throws Throwable  {
      JFontChooser jFontChooser0 = new JFontChooser();
      assertNotNull(jFontChooser0);
      
      // Undeclared exception!
      try {
        jFontChooser0.showDialog((Component) jFontChooser0, "");
        fail("Expecting exception: HeadlessException");
      } catch(HeadlessException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      JFontChooser jFontChooser0 = new JFontChooser();
      assertNotNull(jFontChooser0);
      
      String string0 = jFontChooser0.getPreviewText();
      assertNull(string0);
      assertEquals("osa.ora.server.client.ui.utils.JFontChooser[,0,0,0x0,invalid,layout=java.awt.GridBagLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]", jFontChooser0.toString());
      assertEquals(5, jFontChooser0.getComponentCount());
      assertEquals(5, jFontChooser0.countComponents());
  }

  @Test
  public void test4()  throws Throwable  {
      JFontChooser jFontChooser0 = new JFontChooser();
      assertNotNull(jFontChooser0);
      
      // Undeclared exception!
      try {
        jFontChooser0.setSelectionModel((FontSelectionModel) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
