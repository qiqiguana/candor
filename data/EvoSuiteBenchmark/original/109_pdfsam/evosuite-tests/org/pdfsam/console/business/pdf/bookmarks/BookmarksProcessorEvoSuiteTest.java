/*
 * This file was automatically generated by EvoSuite
 */

package org.pdfsam.console.business.pdf.bookmarks;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.junit.BeforeClass;
import org.pdfsam.console.business.pdf.bookmarks.BookmarksProcessor;

@RunWith(EvoSuiteRunner.class)
public class BookmarksProcessorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BookmarksProcessor bookmarksProcessor0 = new BookmarksProcessor((List) null, (-746));
      List<Object> list0 = bookmarksProcessor0.processBookmarks((-1), (-1));
      assertNull(list0);
  }

  @Test
  public void test1()  throws Throwable  {
      LinkedList<HashMap<String, Integer>> linkedList0 = new LinkedList<HashMap<String, Integer>>();
      BookmarksProcessor bookmarksProcessor0 = new BookmarksProcessor((List) linkedList0, 1668);
      List<Object> list0 = bookmarksProcessor0.processBookmarks(1668, 0, 1);
      assertEquals(0, list0.size());
  }

  @Test
  public void test2()  throws Throwable  {
      LinkedList<Map.Entry<Integer, String>> linkedList0 = new LinkedList<Map.Entry<Integer, String>>();
      linkedList0.add((Map.Entry<Integer, String>) null);
      BookmarksProcessor bookmarksProcessor0 = new BookmarksProcessor((List) linkedList0, 1);
      List<Object> list0 = bookmarksProcessor0.processBookmarks(1, 1675, (-10));
      assertNotNull(list0);
      assertEquals(false, list0.isEmpty());
  }

  @Test
  public void test3()  throws Throwable  {
      LinkedList<HashMap<String, Object>> linkedList0 = new LinkedList<HashMap<String, Object>>();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      linkedList0.add(hashMap0);
      hashMap0.put("bq0D!Mmi(;SQOib_w", (Object) null);
      BookmarksProcessor bookmarksProcessor0 = new BookmarksProcessor((List) linkedList0, (-1));
      List<Object> list0 = bookmarksProcessor0.processBookmarks(1813, (-1));
      assertEquals(1, list0.size());
      assertNotNull(list0);
  }

  @Test
  public void test4()  throws Throwable  {
      LinkedList<HashMap<String, Object>> linkedList0 = new LinkedList<HashMap<String, Object>>();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      linkedList0.add(hashMap0);
      LinkedList<List<List<String>>> linkedList1 = new LinkedList<List<List<String>>>();
      hashMap0.put("OCMD", (Object) linkedList1);
      BookmarksProcessor bookmarksProcessor0 = new BookmarksProcessor((List) linkedList0, (-1));
      List<Object> list0 = bookmarksProcessor0.processBookmarks(1813, (-1));
      assertNotNull(list0);
      assertEquals(false, list0.isEmpty());
  }
}
