/*
 * This file was automatically generated by EvoSuite
 */

package org.pdfsam.console.utils.perfix;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.pdfsam.console.exceptions.console.ConsoleException;
import org.pdfsam.console.utils.perfix.FileNameRequest;
import org.pdfsam.console.utils.perfix.PrefixParser;

@RunWith(EvoSuiteRunner.class)
public class PrefixParserEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FileNameRequest fileNameRequest0 = new FileNameRequest((-1493), (-1493), "[CURRENTPAGE]");
      PrefixParser prefixParser0 = new PrefixParser("[CURRENTPAGE]", "[CURRENTPAGE]");
      // Undeclared exception!
      try {
        prefixParser0.generateFileName(fileNameRequest0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * No match found
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      PrefixParser prefixParser0 = new PrefixParser("[BOOKMARK_NAME][BOOKMARK_NAME].pdf", "B");
      FileNameRequest fileNameRequest0 = new FileNameRequest(19, 19, "");
      String string0 = prefixParser0.generateFileName(fileNameRequest0);
      assertNotNull(string0);
      assertEquals("19_[BOOKMARK_NAME][BOOKMARK_NAME].pdfB.pdf", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      PrefixParser prefixParser0 = new PrefixParser("[TIMESTAMP]", "[TIMESTAMP]");
      FileNameRequest fileNameRequest0 = new FileNameRequest((Integer) (-217), (Integer) (-217), "[TIMESTAMP]");
      String string0 = prefixParser0.generateFileName(fileNameRequest0);
      assertEquals("20130702_184352770.pdf", string0);
      assertNotNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      PrefixParser prefixParser0 = new PrefixParser("[CURRENTPAGE]", "[CURRENTPAGE]");
      String string0 = prefixParser0.generateFileName();
      assertEquals("[CURRENTPAGE][CURRENTPAGE].pdf", string0);
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      PrefixParser prefixParser0 = null;
      try {
        prefixParser0 = new PrefixParser((String) null, (String) null);
        fail("Expecting exception: ConsoleException");
      } catch(ConsoleException e) {
        /*
         * CLS003 - Original file name is empty.
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      PrefixParser prefixParser0 = new PrefixParser("[BASENAME]", "[BASENAME]");
      assertEquals("[BASENAME][BASENAME].pdf", prefixParser0.generateFileName());
  }

  @Test
  public void test6()  throws Throwable  {
      PrefixParser prefixParser0 = new PrefixParser("[FILENUMBER]", "[FILENUMBER]");
      String string0 = prefixParser0.generateFileName((FileNameRequest) null);
      assertEquals("[FILENUMBER][FILENUMBER].pdf", string0);
      assertNotNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      PrefixParser prefixParser0 = null;
      try {
        prefixParser0 = new PrefixParser("", "");
        fail("Expecting exception: ConsoleException");
      } catch(ConsoleException e) {
        /*
         * CLS003 - Original file name is empty.
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      PrefixParser prefixParser0 = new PrefixParser("[BOOKMRRKNAME][BOOKMARK_NAME].pdf<ijY>uKLY<+&!nA?P.pdf", "[BOOKMRRKNAME][BOOKMARK_NAME].pdf<ijY>uKLY<+&!nA?P.pdf");
      FileNameRequest fileNameRequest0 = new FileNameRequest((Integer) (-315), (Integer) (-315), (String) null);
      String string0 = prefixParser0.generateFileName(fileNameRequest0);
      assertNotNull(string0);
      assertEquals("--315_[BOOKMRRKNAME][BOOKMARK_NAME].pdf<ijY>uKLY<+&!nA?P.pdf[BOOKMRRKNAME][BOOKMARK_NAME].pdf<ijY>uKLY<+&!nA?P.pdf", string0);
  }

  @Test
  public void test9()  throws Throwable  {
      Integer integer0 = new Integer(19);
      PrefixParser prefixParser0 = new PrefixParser("[BOOKMARK_NAME][BOOKMARK_NAME].pdf", "B");
      FileNameRequest fileNameRequest0 = new FileNameRequest(integer0, integer0, "B");
      String string0 = prefixParser0.generateFileName(fileNameRequest0);
      assertNotNull(string0);
      assertEquals("BB.pdf", string0);
      assertEquals("[BOOKMARK_NAME][BOOKMARK_NAME].pdfB.pdf", prefixParser0.generateFileName());
  }

  @Test
  public void test10()  throws Throwable  {
      PrefixParser prefixParser0 = new PrefixParser("[FILENUMBER]", "[FILENUMBER]");
      FileNameRequest fileNameRequest0 = new FileNameRequest(20, 20, "[FILENUMBER]");
      // Undeclared exception!
      try {
        prefixParser0.generateFileName(fileNameRequest0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * No match found
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      PrefixParser prefixParser0 = new PrefixParser("[CURREN8PAGE][CURRENTPAGE].pdf", "[CURREN8PAGE][CURRENTPAGE].pdf");
      FileNameRequest fileNameRequest0 = new FileNameRequest((Integer) null, (Integer) null, "[CURREN8PAGE][CURRENTPAGE].pdf");
      String string0 = prefixParser0.generateFileName(fileNameRequest0);
      assertNotNull(string0);
      assertEquals("[CURREN8PAGE][CURRENTPAGE].pdf[CURREN8PAGE][CURRENTPAGE].pdf", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      PrefixParser prefixParser0 = new PrefixParser("[FILENUMBER]", "[FILENUMBER]");
      FileNameRequest fileNameRequest0 = new FileNameRequest((Integer) null, (Integer) null, "[FILENUMBER]");
      String string0 = prefixParser0.generateFileName(fileNameRequest0);
      assertNotNull(string0);
      assertEquals("[FILENUMBER][FILENUMBER].pdf", string0);
  }
}
