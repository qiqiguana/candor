/*
 * This file was automatically generated by EvoSuite
 */

package org.pdfsam.console.business.parser.validators;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import jcmdline.CmdLineHandler;
import jcmdline.DefaultCmdLineHandler;
import jcmdline.LongParam;
import jcmdline.Parameter;
import org.junit.BeforeClass;
import org.pdfsam.console.business.parser.validators.MixCmdValidator;
import org.pdfsam.console.exceptions.console.ConsoleException;

@RunWith(EvoSuiteRunner.class)
public class MixCmdValidatorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MixCmdValidator mixCmdValidator0 = new MixCmdValidator();
      try {
        mixCmdValidator0.validateArguments((CmdLineHandler) null);
        fail("Expecting exception: ConsoleException");
      } catch(ConsoleException e) {
        /*
         * CLS002 - Command line handler is null.
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      MixCmdValidator mixCmdValidator0 = new MixCmdValidator();
      Parameter[] parameterArray0 = new Parameter[1];
      LongParam longParam0 = new LongParam("*8-dWxX*", "*8-dWxX*");
      parameterArray0[0] = (Parameter) longParam0;
      DefaultCmdLineHandler defaultCmdLineHandler0 = new DefaultCmdLineHandler("*8-dWxX*", "*8-dWxX*", parameterArray0, parameterArray0);
      // Undeclared exception!
      try {
        mixCmdValidator0.validateArguments((CmdLineHandler) defaultCmdLineHandler0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
