/*
 * This file was automatically generated by EvoSuite
 */

package org.pdfsam.console.business.parser.validators;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.util.Collection;
import jcmdline.CmdLineHandler;
import jcmdline.FileParam;
import jcmdline.LoggerCmdLineHandler;
import org.junit.BeforeClass;
import org.pdfsam.console.business.parser.validators.PageLabelsCmdValidator;
import org.pdfsam.console.exceptions.console.ConsoleException;

@RunWith(EvoSuiteRunner.class)
public class PageLabelsCmdValidatorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PageLabelsCmdValidator pageLabelsCmdValidator0 = new PageLabelsCmdValidator();
      try {
        pageLabelsCmdValidator0.validate((CmdLineHandler) null);
        fail("Expecting exception: ConsoleException");
      } catch(ConsoleException e) {
        /*
         * CLS002 - Command line handler is null.
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      PageLabelsCmdValidator pageLabelsCmdValidator0 = new PageLabelsCmdValidator();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileParam fileParam0 = new FileParam("DKOaea+ \":mt#&", "DKOaea+ \":mt#&");
      Collection<Object> collection0 = fileParam0.getValues();
      LoggerCmdLineHandler loggerCmdLineHandler0 = new LoggerCmdLineHandler((OutputStream) pipedOutputStream0, "DKOaea+ \":mt#&", "DKOaea+ \":mt#&", (Collection) collection0, (Collection) collection0);
      // Undeclared exception!
      try {
        pageLabelsCmdValidator0.validateArguments((CmdLineHandler) loggerCmdLineHandler0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
