/*
 * This file was automatically generated by EvoSuite
 */

package org.pdfsam.console.business.parser;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.pdfsam.console.business.parser.CmdParseManager;
import org.pdfsam.console.exceptions.console.ConsoleException;
import org.pdfsam.console.exceptions.console.ParseException;

@RunWith(EvoSuiteRunner.class)
public class CmdParseManagerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CmdParseManager cmdParseManager0 = new CmdParseManager();
      String[] stringArray0 = new String[3];
      stringArray0[2] = "mix";
      cmdParseManager0.setInputArguments(stringArray0);
  }

  @Test
  public void test1()  throws Throwable  {
      CmdParseManager cmdParseManager0 = new CmdParseManager();
      String[] stringArray0 = new String[6];
      stringArray0[5] = "concat";
      cmdParseManager0.setInputArguments(stringArray0);
      try {
        cmdParseManager0.validate();
        fail("Expecting exception: ParseException");
      } catch(ParseException e) {
        /*
         * PRS015 - Missing or illegal -o option.
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      CmdParseManager cmdParseManager0 = new CmdParseManager();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "split";
      cmdParseManager0.setInputArguments(stringArray0);
  }

  @Test
  public void test3()  throws Throwable  {
      CmdParseManager cmdParseManager0 = new CmdParseManager();
      String[] stringArray0 = new String[6];
      stringArray0[5] = "encrypt";
      cmdParseManager0.setInputArguments(stringArray0);
  }

  @Test
  public void test4()  throws Throwable  {
      CmdParseManager cmdParseManager0 = new CmdParseManager();
      String[] stringArray0 = new String[10];
      stringArray0[9] = "unpack";
      // Undeclared exception!
      try {
        cmdParseManager0.parse(stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[1] = "setviewer";
      CmdParseManager cmdParseManager0 = new CmdParseManager(stringArray0);
      assertNotNull(cmdParseManager0);
  }

  @Test
  public void test6()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[3] = "slideshow";
      CmdParseManager cmdParseManager0 = new CmdParseManager(stringArray0);
      assertNotNull(cmdParseManager0);
  }

  @Test
  public void test7()  throws Throwable  {
      CmdParseManager cmdParseManager0 = new CmdParseManager();
      String[] stringArray0 = new String[4];
      stringArray0[3] = "decrypt";
      // Undeclared exception!
      try {
        cmdParseManager0.parse(stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      CmdParseManager cmdParseManager0 = new CmdParseManager();
      String[] stringArray0 = new String[4];
      stringArray0[3] = "rotate";
      cmdParseManager0.setInputArguments(stringArray0);
  }

  @Test
  public void test9()  throws Throwable  {
      CmdParseManager cmdParseManager0 = new CmdParseManager();
      String[] stringArray0 = new String[2];
      stringArray0[1] = "pagelabels";
      cmdParseManager0.setInputArguments(stringArray0);
  }

  @Test
  public void test10()  throws Throwable  {
      CmdParseManager cmdParseManager0 = new CmdParseManager();
      String[] stringArray0 = new String[10];
      stringArray0[9] = "setdocinfo";
      // Undeclared exception!
      try {
        cmdParseManager0.parse(stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      CmdParseManager cmdParseManager0 = new CmdParseManager();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "mix";
      try {
        cmdParseManager0.parse(stringArray0);
        fail("Expecting exception: ParseException");
      } catch(ParseException e) {
        /*
         * PRS001 - Parse error. Extra argument specified: <null>
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      CmdParseManager cmdParseManager0 = new CmdParseManager();
      try {
        cmdParseManager0.validate();
        fail("Expecting exception: ConsoleException");
      } catch(ConsoleException e) {
        /*
         * CLS004 - Command line validator is null.
         */
      }
  }
}
