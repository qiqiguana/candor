/*
 * This file was automatically generated by EvoSuite
 */

package org.pdfsam.console.business.dto.commands;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.File;
import org.junit.BeforeClass;
import org.pdfsam.console.business.dto.PdfFile;
import org.pdfsam.console.business.dto.commands.DocumentInfoParsedCommand;

@RunWith(EvoSuiteRunner.class)
public class DocumentInfoParsedCommandEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DocumentInfoParsedCommand documentInfoParsedCommand0 = new DocumentInfoParsedCommand();
      PdfFile pdfFile0 = documentInfoParsedCommand0.getInputFile();
      assertNull(pdfFile0);
  }

  @Test
  public void test1()  throws Throwable  {
      DocumentInfoParsedCommand documentInfoParsedCommand0 = new DocumentInfoParsedCommand();
      String string0 = documentInfoParsedCommand0.getSubject();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      DocumentInfoParsedCommand documentInfoParsedCommand0 = new DocumentInfoParsedCommand();
      documentInfoParsedCommand0.setSubject("org.pdfsam.console.business.dto.commands.DocumentInfoParsedCommand@3d9a20d0[false,false,<null>][command=setdocinfo]");
      assertEquals(false, documentInfoParsedCommand0.isCompress());
  }

  @Test
  public void test3()  throws Throwable  {
      DocumentInfoParsedCommand documentInfoParsedCommand0 = new DocumentInfoParsedCommand();
      String string0 = documentInfoParsedCommand0.getKeywords();
      assertNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      DocumentInfoParsedCommand documentInfoParsedCommand0 = new DocumentInfoParsedCommand();
      File file0 = documentInfoParsedCommand0.getOutputFile();
      documentInfoParsedCommand0.setOutputFile(file0);
      assertNull(documentInfoParsedCommand0.getSubject());
  }

  @Test
  public void test5()  throws Throwable  {
      DocumentInfoParsedCommand documentInfoParsedCommand0 = new DocumentInfoParsedCommand();
      documentInfoParsedCommand0.setTitle("org.pdfsam.console.business.dto.commands.DocumentInfoParsedCommand@f3a8317[false,false,<null>][command=setdocinfo]");
      assertEquals("setdocinfo", documentInfoParsedCommand0.getCommand());
  }

  @Test
  public void test6()  throws Throwable  {
      File file0 = new File("mix", "mix");
      PdfFile pdfFile0 = new PdfFile();
      DocumentInfoParsedCommand documentInfoParsedCommand0 = new DocumentInfoParsedCommand(file0, pdfFile0, "mix", "mix", "mix", "mix");
      documentInfoParsedCommand0.setInputFile(pdfFile0);
      assertEquals("mix", documentInfoParsedCommand0.getSubject());
      assertEquals("mix", documentInfoParsedCommand0.getTitle());
      assertEquals("mix", documentInfoParsedCommand0.getKeywords());
      assertEquals("mix", documentInfoParsedCommand0.getAuthor());
  }

  @Test
  public void test7()  throws Throwable  {
      File file0 = new File((File) null, "+b*jnVY7Z");
      PdfFile pdfFile0 = new PdfFile();
      DocumentInfoParsedCommand documentInfoParsedCommand0 = new DocumentInfoParsedCommand(file0, pdfFile0, "+b*jnVY7Z", "+b*jnVY7Z", "+b*jnVY7Z", "+b*jnVY7Z", false, true, 'l');
      String string0 = documentInfoParsedCommand0.getAuthor();
      assertNotNull(string0);
      assertEquals("+b*jnVY7Z", string0);
      assertEquals("+b*jnVY7Z", documentInfoParsedCommand0.getTitle());
      assertEquals("+b*jnVY7Z", documentInfoParsedCommand0.getSubject());
      assertEquals("+b*jnVY7Z", documentInfoParsedCommand0.getKeywords());
  }

  @Test
  public void test8()  throws Throwable  {
      DocumentInfoParsedCommand documentInfoParsedCommand0 = new DocumentInfoParsedCommand();
      documentInfoParsedCommand0.setAuthor("org.pdfsam.console.business.dto.commands.DocumentInfoParsedCommand@3d9a20d0[false,false,<null>][command=setdocinfo]");
      assertNull(documentInfoParsedCommand0.getSubject());
  }

  @Test
  public void test9()  throws Throwable  {
      DocumentInfoParsedCommand documentInfoParsedCommand0 = new DocumentInfoParsedCommand();
      documentInfoParsedCommand0.setKeywords("");
      assertEquals("", documentInfoParsedCommand0.getKeywords());
  }

  @Test
  public void test10()  throws Throwable  {
      File file0 = new File("mix", "mix");
      PdfFile pdfFile0 = new PdfFile();
      DocumentInfoParsedCommand documentInfoParsedCommand0 = new DocumentInfoParsedCommand(file0, pdfFile0, "mix", "mix", "mix", "mix");
      String string0 = documentInfoParsedCommand0.getTitle();
      assertEquals("mix", documentInfoParsedCommand0.getKeywords());
      assertEquals("mix", documentInfoParsedCommand0.getSubject());
      assertEquals("mix", string0);
      assertEquals("mix", documentInfoParsedCommand0.getAuthor());
      assertNotNull(string0);
  }

  @Test
  public void test11()  throws Throwable  {
      DocumentInfoParsedCommand documentInfoParsedCommand0 = new DocumentInfoParsedCommand();
      String string0 = documentInfoParsedCommand0.toString();
      assertEquals("setdocinfo", documentInfoParsedCommand0.getCommand());
      assertNotNull(string0);
  }

  @Test
  public void test12()  throws Throwable  {
      File file0 = new File((File) null, "+b*jnVY7Z");
      PdfFile pdfFile0 = new PdfFile();
      DocumentInfoParsedCommand documentInfoParsedCommand0 = new DocumentInfoParsedCommand(file0, pdfFile0, "+b*jnVY7Z", "+b*jnVY7Z", "+b*jnVY7Z", "+b*jnVY7Z", false, true, 'l');
      String string0 = documentInfoParsedCommand0.toString();
      assertEquals("setdocinfo", documentInfoParsedCommand0.getCommand());
      assertEquals("+b*jnVY7Z", documentInfoParsedCommand0.getSubject());
      assertEquals("+b*jnVY7Z", documentInfoParsedCommand0.getTitle());
      assertEquals("+b*jnVY7Z", documentInfoParsedCommand0.getAuthor());
      assertNotNull(string0);
      assertEquals("+b*jnVY7Z", documentInfoParsedCommand0.getKeywords());
  }
}
