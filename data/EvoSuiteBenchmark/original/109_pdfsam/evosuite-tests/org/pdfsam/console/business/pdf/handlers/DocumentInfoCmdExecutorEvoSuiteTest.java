/*
 * This file was automatically generated by EvoSuite
 */

package org.pdfsam.console.business.pdf.handlers;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.pdfsam.console.business.dto.commands.AbstractParsedCommand;
import org.pdfsam.console.business.dto.commands.DocumentInfoParsedCommand;
import org.pdfsam.console.business.dto.commands.PageLabelsParsedCommand;
import org.pdfsam.console.business.pdf.handlers.DocumentInfoCmdExecutor;
import org.pdfsam.console.exceptions.console.ConsoleException;

@RunWith(EvoSuiteRunner.class)
public class DocumentInfoCmdExecutorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DocumentInfoCmdExecutor documentInfoCmdExecutor0 = new DocumentInfoCmdExecutor();
      documentInfoCmdExecutor0.clean();
      assertEquals(false, documentInfoCmdExecutor0.hasChanged());
  }

  @Test
  public void test1()  throws Throwable  {
      DocumentInfoCmdExecutor documentInfoCmdExecutor0 = new DocumentInfoCmdExecutor();
      try {
        documentInfoCmdExecutor0.execute((AbstractParsedCommand) null);
        fail("Expecting exception: ConsoleException");
      } catch(ConsoleException e) {
        /*
         * CLS005 - Bad command.
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      DocumentInfoCmdExecutor documentInfoCmdExecutor0 = new DocumentInfoCmdExecutor();
      DocumentInfoParsedCommand documentInfoParsedCommand0 = new DocumentInfoParsedCommand();
      try {
        documentInfoCmdExecutor0.execute((AbstractParsedCommand) documentInfoParsedCommand0);
        fail("Expecting exception: ConsoleException");
      } catch(ConsoleException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      DocumentInfoCmdExecutor documentInfoCmdExecutor0 = new DocumentInfoCmdExecutor();
      PageLabelsParsedCommand pageLabelsParsedCommand0 = new PageLabelsParsedCommand();
      try {
        documentInfoCmdExecutor0.execute((AbstractParsedCommand) pageLabelsParsedCommand0);
        fail("Expecting exception: ConsoleException");
      } catch(ConsoleException e) {
        /*
         * CLS005 - Bad command.
         */
      }
  }
}
