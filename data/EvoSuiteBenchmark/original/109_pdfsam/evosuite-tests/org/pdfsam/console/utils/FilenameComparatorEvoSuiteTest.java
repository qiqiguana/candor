/*
 * This file was automatically generated by EvoSuite
 */

package org.pdfsam.console.utils;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.File;
import org.junit.BeforeClass;
import org.pdfsam.console.utils.FilenameComparator;

@RunWith(EvoSuiteRunner.class)
public class FilenameComparatorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FilenameComparator filenameComparator0 = new FilenameComparator();
      // Undeclared exception!
      try {
        filenameComparator0.compare((Object) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * Input files must not be null.
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      FilenameComparator filenameComparator0 = new FilenameComparator();
      File file0 = new File("");
      // Undeclared exception!
      try {
        filenameComparator0.compare((Object) file0, (Object) "/");
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * Input arguments must be File.
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      FilenameComparator filenameComparator0 = new FilenameComparator();
      // Undeclared exception!
      try {
        filenameComparator0.compare((Object) "Jar files", (Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * Input files must not be null.
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      FilenameComparator filenameComparator0 = new FilenameComparator();
      Object object0 = new Object();
      // Undeclared exception!
      try {
        filenameComparator0.compare(object0, object0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * Input arguments must be File.
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      FilenameComparator filenameComparator0 = new FilenameComparator();
      File file0 = new File("Input files must not be null.");
      int int0 = filenameComparator0.compare((Object) file0, (Object) file0);
      assertEquals(0, int0);
  }
}
