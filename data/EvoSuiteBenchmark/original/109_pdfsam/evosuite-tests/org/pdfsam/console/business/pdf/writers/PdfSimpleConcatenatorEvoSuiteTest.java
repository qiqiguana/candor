/*
 * This file was automatically generated by EvoSuite
 */

package org.pdfsam.console.business.pdf.writers;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.Phrase;
import com.lowagie.text.pdf.PdfReader;
import java.io.ByteArrayOutputStream;
import java.io.OutputStream;
import java.util.List;
import org.junit.BeforeClass;
import org.pdfsam.console.business.pdf.writers.PdfSimpleConcatenator;

@RunWith(EvoSuiteRunner.class)
public class PdfSimpleConcatenatorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Document document0 = new Document();
      PdfSimpleConcatenator pdfSimpleConcatenator0 = new PdfSimpleConcatenator(document0, (OutputStream) null, true);
      pdfSimpleConcatenator0.setPdfVersion('|');
  }

  @Test
  public void test1()  throws Throwable  {
      Document document0 = new Document();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      PdfSimpleConcatenator pdfSimpleConcatenator0 = new PdfSimpleConcatenator(document0, (OutputStream) byteArrayOutputStream0);
      pdfSimpleConcatenator0.close();
  }

  @Test
  public void test2()  throws Throwable  {
      Document document0 = new Document();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      PdfSimpleConcatenator pdfSimpleConcatenator0 = new PdfSimpleConcatenator(document0, (OutputStream) byteArrayOutputStream0);
      pdfSimpleConcatenator0.freeReader((PdfReader) null);
  }

  @Test
  public void test3()  throws Throwable  {
      Document document0 = new Document();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      PdfSimpleConcatenator pdfSimpleConcatenator0 = new PdfSimpleConcatenator(document0, (OutputStream) byteArrayOutputStream0);
      Phrase phrase0 = new Phrase(0.0F);
      pdfSimpleConcatenator0.setOutlines((List) phrase0);
      assertEquals(0.0F, phrase0.getLeading(), 0.01F);
  }

  @Test
  public void test4()  throws Throwable  {
      Document document0 = new Document();
      PdfSimpleConcatenator pdfSimpleConcatenator0 = new PdfSimpleConcatenator(document0, (OutputStream) null, false);
      assertNotNull(pdfSimpleConcatenator0);
  }

  @Test
  public void test5()  throws Throwable  {
      Document document0 = new Document();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      PdfSimpleConcatenator pdfSimpleConcatenator0 = new PdfSimpleConcatenator(document0, (OutputStream) byteArrayOutputStream0);
      try {
        pdfSimpleConcatenator0.addDocument((PdfReader) null, "h/0XyHE0h(.");
        fail("Expecting exception: DocumentException");
      } catch(DocumentException e) {
        /*
         * Reader is null
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Document document0 = new Document();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(293);
      PdfSimpleConcatenator pdfSimpleConcatenator0 = new PdfSimpleConcatenator(document0, (OutputStream) byteArrayOutputStream0);
      try {
        pdfSimpleConcatenator0.addDocument((PdfReader) null);
        fail("Expecting exception: DocumentException");
      } catch(DocumentException e) {
        /*
         * Reader is null
         */
      }
  }
}
