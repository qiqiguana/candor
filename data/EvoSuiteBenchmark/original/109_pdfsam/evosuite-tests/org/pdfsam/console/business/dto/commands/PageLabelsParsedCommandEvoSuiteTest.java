/*
 * This file was automatically generated by EvoSuite
 */

package org.pdfsam.console.business.dto.commands;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.File;
import org.junit.BeforeClass;
import org.pdfsam.console.business.dto.PageLabel;
import org.pdfsam.console.business.dto.PdfFile;
import org.pdfsam.console.business.dto.commands.PageLabelsParsedCommand;

@RunWith(EvoSuiteRunner.class)
public class PageLabelsParsedCommandEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PdfFile pdfFile0 = new PdfFile();
      PageLabel[] pageLabelArray0 = new PageLabel[9];
      PageLabelsParsedCommand pageLabelsParsedCommand0 = new PageLabelsParsedCommand(pdfFile0, (File) null, pageLabelArray0, true, true, 'I');
      PageLabel[] pageLabelArray1 = pageLabelsParsedCommand0.getLabels();
      assertSame(pageLabelArray0, pageLabelArray1);
  }

  @Test
  public void test1()  throws Throwable  {
      PdfFile pdfFile0 = new PdfFile("", "");
      File file0 = pdfFile0.getFile();
      PageLabel[] pageLabelArray0 = new PageLabel[8];
      PageLabelsParsedCommand pageLabelsParsedCommand0 = new PageLabelsParsedCommand(pdfFile0, file0, pageLabelArray0, true, true, '_');
      pageLabelsParsedCommand0.setInputFile((PdfFile) null);
      assertEquals(true, pageLabelsParsedCommand0.isCompress());
  }

  @Test
  public void test2()  throws Throwable  {
      PageLabelsParsedCommand pageLabelsParsedCommand0 = new PageLabelsParsedCommand();
      PdfFile pdfFile0 = pageLabelsParsedCommand0.getInputFile();
      assertNull(pdfFile0);
  }

  @Test
  public void test3()  throws Throwable  {
      PageLabelsParsedCommand pageLabelsParsedCommand0 = new PageLabelsParsedCommand();
      File file0 = pageLabelsParsedCommand0.getOutputFile();
      assertNull(file0);
  }

  @Test
  public void test4()  throws Throwable  {
      PageLabel[] pageLabelArray0 = new PageLabel[1];
      PageLabelsParsedCommand pageLabelsParsedCommand0 = new PageLabelsParsedCommand((PdfFile) null, (File) null, pageLabelArray0);
      assertEquals("pagelabels", pageLabelsParsedCommand0.getCommand());
  }

  @Test
  public void test5()  throws Throwable  {
      PageLabelsParsedCommand pageLabelsParsedCommand0 = new PageLabelsParsedCommand();
      PageLabel[] pageLabelArray0 = new PageLabel[8];
      pageLabelsParsedCommand0.setLabels(pageLabelArray0);
      assertEquals("pagelabels", pageLabelsParsedCommand0.getCommand());
  }

  @Test
  public void test6()  throws Throwable  {
      PdfFile pdfFile0 = new PdfFile("", "");
      File file0 = pdfFile0.getFile();
      PageLabel[] pageLabelArray0 = new PageLabel[8];
      PageLabelsParsedCommand pageLabelsParsedCommand0 = new PageLabelsParsedCommand(pdfFile0, file0, pageLabelArray0, true, true, '_');
      pageLabelsParsedCommand0.setOutputFile((File) null);
      assertEquals("pagelabels", pageLabelsParsedCommand0.getCommand());
  }

  @Test
  public void test7()  throws Throwable  {
      PageLabelsParsedCommand pageLabelsParsedCommand0 = new PageLabelsParsedCommand();
      String string0 = pageLabelsParsedCommand0.toString();
      assertEquals("pagelabels", pageLabelsParsedCommand0.getCommand());
      assertNotNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      File file0 = new File("asF ?^$!");
      PdfFile pdfFile0 = new PdfFile(file0, "asF ?^$!");
      PageLabel[] pageLabelArray0 = new PageLabel[10];
      PageLabel pageLabel0 = new PageLabel();
      pageLabelArray0[0] = pageLabel0;
      PageLabelsParsedCommand pageLabelsParsedCommand0 = new PageLabelsParsedCommand(pdfFile0, file0, pageLabelArray0, true, true, 'g');
      String string0 = pageLabelsParsedCommand0.toString();
      assertNotNull(string0);
      assertEquals("pagelabels", pageLabelsParsedCommand0.getCommand());
  }
}
