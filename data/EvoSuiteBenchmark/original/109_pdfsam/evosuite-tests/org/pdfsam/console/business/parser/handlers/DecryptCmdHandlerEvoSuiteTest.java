/*
 * This file was automatically generated by EvoSuite
 */

package org.pdfsam.console.business.parser.handlers;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import jcmdline.VersionCmdLineHandler;
import org.junit.BeforeClass;
import org.pdfsam.console.business.parser.handlers.DecryptCmdHandler;

@RunWith(EvoSuiteRunner.class)
public class DecryptCmdHandlerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DecryptCmdHandler decryptCmdHandler0 = new DecryptCmdHandler();
      assertNotNull(decryptCmdHandler0);
      
      VersionCmdLineHandler versionCmdLineHandler0 = (VersionCmdLineHandler)decryptCmdHandler0.getCommandLineHandler();
      assertEquals("Decrypt pdf files. \nYou must specify '-o /home/user' to set the output directory.\nYou must specify '-f /tmp/file1.pdf /tmp/file2.pdf:password -f /tmp/file3.pdf [...]' to specify a file list to decrypt (use filename:password if the file is password protected).\n'-p prefix_' to specify a prefix for output names of files. If it contains \"[TIMESTAMP]\" it performs variable substitution. (Ex. [BASENAME]_prefix_[TIMESTAMP] generates FileName_prefix_20070517_113423471.pdf)\n", decryptCmdHandler0.getHelpMessage());
      assertEquals("Example: java -jar pdfsam-console-2.4.0e.jar -f /tmp/1.pdf -o /tmp -overwrite decrypt\n", decryptCmdHandler0.getHelpExamples());
      assertNotNull(versionCmdLineHandler0);
  }
}
