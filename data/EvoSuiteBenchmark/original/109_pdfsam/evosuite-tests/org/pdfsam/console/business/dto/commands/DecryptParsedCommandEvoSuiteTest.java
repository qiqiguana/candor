/*
 * This file was automatically generated by EvoSuite
 */

package org.pdfsam.console.business.dto.commands;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.File;
import org.junit.BeforeClass;
import org.pdfsam.console.business.dto.PdfFile;
import org.pdfsam.console.business.dto.commands.DecryptParsedCommand;

@RunWith(EvoSuiteRunner.class)
public class DecryptParsedCommandEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DecryptParsedCommand decryptParsedCommand0 = new DecryptParsedCommand();
      decryptParsedCommand0.setOutputFile((File) null);
      assertEquals("decrypt", decryptParsedCommand0.getCommand());
  }

  @Test
  public void test1()  throws Throwable  {
      DecryptParsedCommand decryptParsedCommand0 = new DecryptParsedCommand();
      PdfFile[] pdfFileArray0 = new PdfFile[5];
      decryptParsedCommand0.setInputFileList(pdfFileArray0);
      assertEquals("", decryptParsedCommand0.getOutputFilesPrefix());
  }

  @Test
  public void test2()  throws Throwable  {
      PdfFile[] pdfFileArray0 = new PdfFile[10];
      DecryptParsedCommand decryptParsedCommand0 = new DecryptParsedCommand(pdfFileArray0, (File) null, "", false, false, 'm');
      assertEquals("", decryptParsedCommand0.getOutputFilesPrefix());
  }

  @Test
  public void test3()  throws Throwable  {
      DecryptParsedCommand decryptParsedCommand0 = new DecryptParsedCommand();
      String string0 = decryptParsedCommand0.getOutputFilesPrefix();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      DecryptParsedCommand decryptParsedCommand0 = new DecryptParsedCommand();
      String string0 = decryptParsedCommand0.toString();
      assertNotNull(string0);
      assertEquals("decrypt", decryptParsedCommand0.getCommand());
  }

  @Test
  public void test5()  throws Throwable  {
      DecryptParsedCommand decryptParsedCommand0 = new DecryptParsedCommand();
      decryptParsedCommand0.setOutputFilesPrefix("GaQ6kFD[");
      assertEquals("GaQ6kFD[", decryptParsedCommand0.getOutputFilesPrefix());
  }

  @Test
  public void test6()  throws Throwable  {
      DecryptParsedCommand decryptParsedCommand0 = new DecryptParsedCommand();
      PdfFile[] pdfFileArray0 = decryptParsedCommand0.getInputFileList();
      assertNull(pdfFileArray0);
  }

  @Test
  public void test7()  throws Throwable  {
      PdfFile[] pdfFileArray0 = new PdfFile[8];
      File file0 = new File("gezxI#-V)wx");
      DecryptParsedCommand decryptParsedCommand0 = new DecryptParsedCommand(pdfFileArray0, file0, "gezxI#-V)wx");
      String string0 = decryptParsedCommand0.toString();
      assertEquals("gezxI#-V)wx", decryptParsedCommand0.getOutputFilesPrefix());
      assertNotNull(string0);
      assertEquals("decrypt", decryptParsedCommand0.getCommand());
  }

  @Test
  public void test8()  throws Throwable  {
      PdfFile[] pdfFileArray0 = new PdfFile[10];
      PdfFile pdfFile0 = new PdfFile("", "");
      pdfFileArray0[0] = pdfFile0;
      DecryptParsedCommand decryptParsedCommand0 = new DecryptParsedCommand();
      File file0 = decryptParsedCommand0.getOutputFile();
      DecryptParsedCommand decryptParsedCommand1 = new DecryptParsedCommand(pdfFileArray0, file0, "");
      String string0 = decryptParsedCommand1.toString();
      assertEquals("", decryptParsedCommand1.getOutputFilesPrefix());
      assertNotNull(string0);
      assertEquals("decrypt", decryptParsedCommand1.getCommand());
  }
}
