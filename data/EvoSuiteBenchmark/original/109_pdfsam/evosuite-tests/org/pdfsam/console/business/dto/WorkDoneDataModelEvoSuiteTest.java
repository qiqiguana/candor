/*
 * This file was automatically generated by EvoSuite
 */

package org.pdfsam.console.business.dto;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.pdfsam.console.business.dto.WorkDoneDataModel;

@RunWith(EvoSuiteRunner.class)
public class WorkDoneDataModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      WorkDoneDataModel workDoneDataModel0 = new WorkDoneDataModel();
      int int0 = workDoneDataModel0.hashCode();
      assertEquals(31, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      WorkDoneDataModel workDoneDataModel0 = new WorkDoneDataModel();
      workDoneDataModel0.setPercentageMax();
      assertEquals("1000", workDoneDataModel0.toString());
      assertEquals(1000, workDoneDataModel0.getPercentage());
  }

  @Test
  public void test2()  throws Throwable  {
      WorkDoneDataModel workDoneDataModel0 = new WorkDoneDataModel();
      int int0 = workDoneDataModel0.getPercentage();
      assertEquals(0, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      WorkDoneDataModel workDoneDataModel0 = new WorkDoneDataModel();
      workDoneDataModel0.setPercentageIndeterminate();
      assertEquals(-1, workDoneDataModel0.getPercentage());
      assertEquals("-1", workDoneDataModel0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      WorkDoneDataModel workDoneDataModel0 = new WorkDoneDataModel();
      String string0 = workDoneDataModel0.toString();
      assertNotNull(string0);
      assertEquals("0", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      WorkDoneDataModel workDoneDataModel0 = new WorkDoneDataModel();
      workDoneDataModel0.resetPercentage();
      assertEquals("0", workDoneDataModel0.toString());
      assertEquals(0, workDoneDataModel0.getPercentage());
  }

  @Test
  public void test6()  throws Throwable  {
      WorkDoneDataModel workDoneDataModel0 = new WorkDoneDataModel();
      workDoneDataModel0.setPercentage(1057);
      assertEquals(1000, workDoneDataModel0.getPercentage());
      assertEquals("1000", workDoneDataModel0.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      WorkDoneDataModel workDoneDataModel0 = new WorkDoneDataModel();
      workDoneDataModel0.setPercentage((-1303));
      assertEquals(-1, workDoneDataModel0.getPercentage());
      assertEquals("-1", workDoneDataModel0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      WorkDoneDataModel workDoneDataModel0 = new WorkDoneDataModel();
      Object object0 = new Object();
      boolean boolean0 = workDoneDataModel0.equals(object0);
      assertEquals(0, workDoneDataModel0.getPercentage());
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      WorkDoneDataModel workDoneDataModel0 = new WorkDoneDataModel();
      boolean boolean0 = workDoneDataModel0.equals((Object) null);
      assertEquals(false, boolean0);
      assertEquals(0, workDoneDataModel0.getPercentage());
  }

  @Test
  public void test10()  throws Throwable  {
      WorkDoneDataModel workDoneDataModel0 = new WorkDoneDataModel();
      WorkDoneDataModel workDoneDataModel1 = new WorkDoneDataModel();
      boolean boolean0 = workDoneDataModel0.equals((Object) workDoneDataModel1);
      assertEquals(true, boolean0);
      assertEquals(0, workDoneDataModel0.getPercentage());
  }

  @Test
  public void test11()  throws Throwable  {
      WorkDoneDataModel workDoneDataModel0 = new WorkDoneDataModel();
      workDoneDataModel0.setPercentage((-1));
      WorkDoneDataModel workDoneDataModel1 = new WorkDoneDataModel();
      boolean boolean0 = workDoneDataModel0.equals((Object) workDoneDataModel1);
      assertEquals("-1", workDoneDataModel0.toString());
      assertEquals(false, boolean0);
  }
}
