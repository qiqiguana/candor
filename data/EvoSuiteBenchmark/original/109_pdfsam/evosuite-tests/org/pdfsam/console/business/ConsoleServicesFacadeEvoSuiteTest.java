/*
 * This file was automatically generated by EvoSuite
 */

package org.pdfsam.console.business;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Observer;
import org.junit.BeforeClass;
import org.pdfsam.console.business.ConsoleServicesFacade;
import org.pdfsam.console.business.dto.commands.AbstractParsedCommand;
import org.pdfsam.console.business.dto.commands.MixParsedCommand;
import org.pdfsam.console.business.pdf.CmdExecuteManager;
import org.pdfsam.console.exceptions.console.ConsoleException;
import org.pdfsam.console.exceptions.console.MixException;

@RunWith(EvoSuiteRunner.class)
public class ConsoleServicesFacadeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ConsoleServicesFacade consoleServicesFacade0 = new ConsoleServicesFacade();
      MixParsedCommand mixParsedCommand0 = new MixParsedCommand();
      try {
        consoleServicesFacade0.execute((AbstractParsedCommand) mixParsedCommand0);
        fail("Expecting exception: MixException");
      } catch(MixException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ConsoleServicesFacade consoleServicesFacade0 = new ConsoleServicesFacade();
      String[] stringArray0 = new String[13];
      try {
        consoleServicesFacade0.parseAndValidate(stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ConsoleServicesFacade consoleServicesFacade0 = new ConsoleServicesFacade();
      CmdExecuteManager cmdExecuteManager0 = new CmdExecuteManager();
      consoleServicesFacade0.addExecutionObserver((Observer) cmdExecuteManager0);
      assertEquals("pdfsam-console (Ver. 2.4.0e)  Copyright (C) 2007  Andrea Vacondio\nThis library is provided under dual license.\nYou may choose the terms of the Lesser General Public License version 2.1 or the General Public License version 2\nLicense at your discretion.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation;\nversion 2.1 of the License.\n\nThis library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nLesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with this library; if not, write to the Free Software\nFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation,version 2 of the License\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>..\nThis is free software, and you are welcome to redistribute it\nunder certain conditions;\n", consoleServicesFacade0.getLicense());
  }
}
