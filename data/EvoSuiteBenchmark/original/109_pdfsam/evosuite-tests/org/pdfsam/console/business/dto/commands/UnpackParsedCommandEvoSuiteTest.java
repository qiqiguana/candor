/*
 * This file was automatically generated by EvoSuite
 */

package org.pdfsam.console.business.dto.commands;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.File;
import org.junit.BeforeClass;
import org.pdfsam.console.business.dto.PdfFile;
import org.pdfsam.console.business.dto.commands.UnpackParsedCommand;

@RunWith(EvoSuiteRunner.class)
public class UnpackParsedCommandEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UnpackParsedCommand unpackParsedCommand0 = new UnpackParsedCommand();
      PdfFile pdfFile0 = new PdfFile("MOi~,t#e}<{h[4@", "MOi~,t#e}<{h[4@");
      File file0 = pdfFile0.getFile();
      unpackParsedCommand0.setOutputFile(file0);
      String string0 = unpackParsedCommand0.toString();
      assertEquals("unpack", unpackParsedCommand0.getCommand());
      assertNotNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      UnpackParsedCommand unpackParsedCommand0 = new UnpackParsedCommand();
      PdfFile[] pdfFileArray0 = unpackParsedCommand0.getInputFileList();
      assertNull(pdfFileArray0);
  }

  @Test
  public void test2()  throws Throwable  {
      UnpackParsedCommand unpackParsedCommand0 = new UnpackParsedCommand();
      File file0 = unpackParsedCommand0.getOutputFile();
      assertNull(file0);
  }

  @Test
  public void test3()  throws Throwable  {
      UnpackParsedCommand unpackParsedCommand0 = new UnpackParsedCommand();
      File file0 = unpackParsedCommand0.getInputDirectory();
      assertNull(file0);
  }

  @Test
  public void test4()  throws Throwable  {
      PdfFile[] pdfFileArray0 = new PdfFile[1];
      UnpackParsedCommand unpackParsedCommand0 = new UnpackParsedCommand((File) null, (File) null, pdfFileArray0);
      assertEquals(false, unpackParsedCommand0.isCompress());
  }

  @Test
  public void test5()  throws Throwable  {
      UnpackParsedCommand unpackParsedCommand0 = new UnpackParsedCommand();
      PdfFile pdfFile0 = new PdfFile("MOi~,t#e}<{h[4@", "MOi~,t#e}<{h[4@");
      File file0 = pdfFile0.getFile();
      unpackParsedCommand0.setInputDirectory(file0);
      String string0 = unpackParsedCommand0.toString();
      assertNotNull(string0);
      assertEquals("unpack", unpackParsedCommand0.getCommand());
  }

  @Test
  public void test6()  throws Throwable  {
      UnpackParsedCommand unpackParsedCommand0 = new UnpackParsedCommand();
      PdfFile pdfFile0 = new PdfFile("MOi~,t#e}<{h[4@", "MOi~,t#e}<{h[4@");
      PdfFile[] pdfFileArray0 = new PdfFile[10];
      pdfFileArray0[0] = pdfFile0;
      unpackParsedCommand0.setInputFileList(pdfFileArray0);
      String string0 = unpackParsedCommand0.toString();
      assertEquals("unpack", unpackParsedCommand0.getCommand());
      assertNotNull(string0);
  }
}
