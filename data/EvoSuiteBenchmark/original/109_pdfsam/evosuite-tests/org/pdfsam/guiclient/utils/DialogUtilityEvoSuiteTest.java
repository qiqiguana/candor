/*
 * This file was automatically generated by EvoSuite
 */

package org.pdfsam.guiclient.utils;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Component;
import java.awt.HeadlessException;
import javax.swing.Box;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JEditorPane;
import javax.swing.JMenu;
import javax.swing.JTable;
import org.junit.BeforeClass;
import org.pdfsam.guiclient.utils.DialogUtility;

@RunWith(EvoSuiteRunner.class)
public class DialogUtilityEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JEditorPane jEditorPane0 = new JEditorPane();
      // Undeclared exception!
      try {
        DialogUtility.errorGenericDialog((Component) jEditorPane0, "+C8?#x|C6>3Z", "+C8?#x|C6>3Z");
        fail("Expecting exception: HeadlessException");
      } catch(HeadlessException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Box box0 = Box.createHorizontalBox();
      // Undeclared exception!
      try {
        DialogUtility.showWarningAddingDocument((Component) box0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Box box0 = Box.createVerticalBox();
      // Undeclared exception!
      try {
        DialogUtility.showConfirmOuputLocationDialog((Component) box0, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try {
        DialogUtility.errorValidatingBounds((Component) null, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      JMenu jMenu0 = new JMenu();
      // Undeclared exception!
      try {
        DialogUtility.askForOverwriteConfirmation((Component) jMenu0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try {
        DialogUtility.askForEmptySelectionPanel((Component) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      JMenu jMenu0 = new JMenu("D=TY%M+.V8?~lEV");
      // Undeclared exception!
      try {
        DialogUtility.askForPdfVersionConfilct((Component) jMenu0, "D=TY%M+.V8?~lEV");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      DialogUtility dialogUtility0 = new DialogUtility();
      assertNotNull(dialogUtility0);
  }

  @Test
  public void test8()  throws Throwable  {
      // Undeclared exception!
      try {
        DialogUtility.askForOverwriteOutputFileDialog((Component) null, "org.pdfsam.console.businesl.pdf.CmdExecuteManager");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      JTable jTable0 = new JTable();
      // Undeclared exception!
      try {
        DialogUtility.showWarningNoDestinationSelected((Component) jTable0, 723);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("");
      // Undeclared exception!
      try {
        DialogUtility.showWarningNoDestinationSelected((Component) jCheckBoxMenuItem0, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
