/*
 * This file was automatically generated by EvoSuite
 */

package org.pdfsam.guiclient.dto;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.pdfsam.guiclient.dto.StringItem;

@RunWith(EvoSuiteRunner.class)
public class StringItemEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      StringItem stringItem0 = new StringItem((String) null, (String) null);
      String string0 = stringItem0.getDescription();
      assertNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      StringItem stringItem0 = new StringItem();
      String string0 = stringItem0.toString();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      StringItem stringItem0 = new StringItem();
      String string0 = stringItem0.getId();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      StringItem stringItem0 = new StringItem("*Jk", "*Jk");
      int int0 = stringItem0.compareTo(stringItem0);
      assertEquals((-1), int0);
  }

  @Test
  public void test4()  throws Throwable  {
      StringItem stringItem0 = new StringItem();
      int int0 = stringItem0.hashCode();
      assertEquals(961, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      StringItem stringItem0 = new StringItem("*Jk", "*Jk");
      boolean boolean0 = stringItem0.equals((Object) "1");
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      StringItem stringItem0 = new StringItem();
      boolean boolean0 = stringItem0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      StringItem stringItem0 = new StringItem((String) null, (String) null);
      StringItem stringItem1 = new StringItem();
      boolean boolean0 = stringItem0.equals((Object) stringItem1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      StringItem stringItem0 = new StringItem();
      StringItem stringItem1 = new StringItem();
      assertTrue(stringItem1.equals(stringItem0));
      
      stringItem1.setDescription("");
      boolean boolean0 = stringItem1.equals((Object) stringItem0);
      assertFalse(stringItem1.equals(stringItem0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      StringItem stringItem0 = new StringItem();
      StringItem stringItem1 = new StringItem("", "");
      boolean boolean0 = stringItem0.equals((Object) stringItem1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      StringItem stringItem0 = new StringItem();
      stringItem0.setDescription("");
      StringItem stringItem1 = new StringItem("", "");
      boolean boolean0 = stringItem0.equals((Object) stringItem1);
      assertFalse(stringItem1.equals(stringItem0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      StringItem stringItem0 = new StringItem();
      stringItem0.setId("");
      stringItem0.setDescription("");
      StringItem stringItem1 = new StringItem("", "");
      boolean boolean0 = stringItem0.equals((Object) stringItem1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      StringItem stringItem0 = new StringItem();
      StringItem stringItem1 = new StringItem("r!l0\" ,#B", (String) null);
      boolean boolean0 = stringItem1.equals((Object) stringItem0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      StringItem stringItem0 = new StringItem("Wjfcpuj&Kjv00$]", "Wjfcpuj&Kjv00$]");
      StringItem stringItem1 = new StringItem("", "");
      int int0 = stringItem1.compareTo(stringItem0);
      assertEquals((-15), int0);
  }

  @Test
  public void test14()  throws Throwable  {
      StringItem stringItem0 = new StringItem("*Jk", "*Jk");
      StringItem stringItem1 = new StringItem("1", "*Jk");
      int int0 = stringItem0.compareTo(stringItem1);
      assertEquals(1, int0);
  }
}
