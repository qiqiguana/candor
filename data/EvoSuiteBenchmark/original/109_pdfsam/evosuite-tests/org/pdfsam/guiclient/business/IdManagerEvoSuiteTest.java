/*
 * This file was automatically generated by EvoSuite
 */

package org.pdfsam.guiclient.business;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.pdfsam.guiclient.business.IdManager;

@RunWith(EvoSuiteRunner.class)
public class IdManagerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      IdManager idManager0 = IdManager.getInstance();
      assertNotNull(idManager0);
      
      idManager0.cancelExecution((-1474L));
      assertEquals(2L, idManager0.getNewId());
  }

  @Test
  public void test1()  throws Throwable  {
      IdManager idManager0 = IdManager.getInstance();
      assertNotNull(idManager0);
      
      try {
        idManager0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      } catch(CloneNotSupportedException e) {
        /*
         * Cannot clone IdManager object.
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      IdManager idManager0 = IdManager.getInstance();
      assertNotNull(idManager0);
      
      long long0 = idManager0.getNewId();
      assertEquals(5L, idManager0.getNewId());
      assertEquals(4L, long0);
  }

  @Test
  public void test3()  throws Throwable  {
      IdManager idManager0 = IdManager.getInstance();
      assertNotNull(idManager0);
      
      boolean boolean0 = idManager0.isCancelledExecution((-1474L));
      assertEquals((-3L), idManager0.getNewId());
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      IdManager idManager0 = IdManager.getInstance();
      assertNotNull(idManager0);
      
      idManager0.removeCancelledExecution((-1880L));
      assertEquals(12L, idManager0.getNewId());
  }
}
