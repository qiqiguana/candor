/*
 * This file was automatically generated by EvoSuite
 */

package org.pdfsam.guiclient.configuration.services.xml.strategy;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.File;
import java.io.IOException;
import org.dom4j.Document;
import org.dom4j.QName;
import org.dom4j.dom.DOMDocument;
import org.dom4j.dom.DOMDocumentType;
import org.dom4j.dom.DOMElement;
import org.dom4j.tree.DefaultDocument;
import org.dom4j.util.NonLazyElement;
import org.junit.BeforeClass;
import org.pdfsam.guiclient.configuration.services.ConfigurationService;
import org.pdfsam.guiclient.configuration.services.xml.strategy.DefaultXmlStrategy;

@RunWith(EvoSuiteRunner.class)
public class DefaultXmlStrategyEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      DefaultXmlStrategy defaultXmlStrategy0 = new DefaultXmlStrategy((Document) dOMDocument0);
      String string0 = defaultXmlStrategy0.getDefaultEnvironmentValue();
      assertEquals("", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultXmlStrategy defaultXmlStrategy0 = new DefaultXmlStrategy((Document) null);
      // Undeclared exception!
      try {
        defaultXmlStrategy0.getCheckForUpdatesValue();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultDocument defaultDocument0 = new DefaultDocument();
      DefaultXmlStrategy defaultXmlStrategy0 = new DefaultXmlStrategy((Document) defaultDocument0);
      String string0 = defaultXmlStrategy0.getThumbnailsSize();
      assertEquals("", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      DefaultXmlStrategy defaultXmlStrategy0 = new DefaultXmlStrategy((Document) null);
      // Undeclared exception!
      try {
        defaultXmlStrategy0.getLookAndFeelValue();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      DefaultXmlStrategy defaultXmlStrategy0 = new DefaultXmlStrategy((Document) null);
      // Undeclared exception!
      try {
        defaultXmlStrategy0.getDefaultWorkingDirectoryValue();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      DefaultXmlStrategy defaultXmlStrategy0 = new DefaultXmlStrategy((Document) dOMDocument0);
      String string0 = defaultXmlStrategy0.getThreadPoolSizeValue();
      assertEquals("", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try {
        DefaultXmlStrategy.saveXmlConfigurationFile((File) null, (ConfigurationService) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      DefaultXmlStrategy defaultXmlStrategy0 = new DefaultXmlStrategy((Document) dOMDocument0);
      String string0 = defaultXmlStrategy0.getLocaleValue();
      assertEquals("", string0);
  }

  @Test
  public void test8()  throws Throwable  {
      DefaultDocument defaultDocument0 = new DefaultDocument();
      DefaultXmlStrategy defaultXmlStrategy0 = new DefaultXmlStrategy((Document) defaultDocument0);
      String string0 = defaultXmlStrategy0.getPlaySoundsValue();
      assertEquals("", string0);
  }

  @Test
  public void test9()  throws Throwable  {
      NonLazyElement nonLazyElement0 = new NonLazyElement("");
      QName qName0 = nonLazyElement0.getQName();
      DOMElement dOMElement0 = new DOMElement(qName0);
      DOMDocument dOMDocument0 = new DOMDocument(dOMElement0, (DOMDocumentType) null);
      DefaultXmlStrategy defaultXmlStrategy0 = new DefaultXmlStrategy((Document) dOMDocument0);
      String string0 = defaultXmlStrategy0.getHighQualityThumbnails();
      assertEquals("", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      DefaultXmlStrategy defaultXmlStrategy0 = new DefaultXmlStrategy((Document) dOMDocument0);
      String string0 = defaultXmlStrategy0.getPluginAbsolutePath();
      assertEquals("", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      DefaultXmlStrategy defaultXmlStrategy0 = new DefaultXmlStrategy((Document) null);
      // Undeclared exception!
      try {
        defaultXmlStrategy0.getThumbnailsCreatorIdentifierValue();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      DefaultXmlStrategy defaultXmlStrategy0 = new DefaultXmlStrategy((Document) null);
      // Undeclared exception!
      try {
        defaultXmlStrategy0.getThemeValue();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      DefaultDocument defaultDocument0 = new DefaultDocument();
      DefaultXmlStrategy defaultXmlStrategy0 = new DefaultXmlStrategy((Document) defaultDocument0);
      String string0 = defaultXmlStrategy0.getLoggingLevelValue();
      assertEquals("", string0);
  }

  @Test
  public void test14()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      DefaultXmlStrategy defaultXmlStrategy0 = new DefaultXmlStrategy((Document) dOMDocument0);
      String string0 = defaultXmlStrategy0.getAskOverwriteConfirmation();
      assertEquals("", string0);
  }
}
