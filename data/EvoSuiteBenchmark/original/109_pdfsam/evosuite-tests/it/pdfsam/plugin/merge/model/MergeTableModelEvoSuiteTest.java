/*
 * This file was automatically generated by EvoSuite
 */

package it.pdfsam.plugin.merge.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import it.pdfsam.plugin.merge.model.MergeTableModel;
import it.pdfsam.plugin.merge.type.MergeItemType;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MergeTableModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      String[] stringArray0 = new String[10];
      mergeTableModel0.setColumnNames(stringArray0);
      assertEquals(0, mergeTableModel0.getRowCount());
  }

  @Test
  public void test1()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      try {
        mergeTableModel0.deleteRow(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      // Undeclared exception!
      try {
        mergeTableModel0.getRow((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      String[] stringArray0 = mergeTableModel0.getToolTips();
      assertNotNull(stringArray0);
  }

  @Test
  public void test4()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      int int0 = mergeTableModel0.getRowCount();
      assertEquals(0, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      mergeTableModel0.clearData();
      assertEquals(4, mergeTableModel0.getColumnCount());
  }

  @Test
  public void test6()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      assertNotNull(mergeTableModel0);
      
      mergeTableModel0.findColumn("La ?%QdUVR 7JtBd,M");
      assertEquals(4, mergeTableModel0.getColumnCount());
  }

  @Test
  public void test7()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      // Undeclared exception!
      try {
        mergeTableModel0.getValueAt(990, 990);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 990, Size: 0
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      assertNotNull(mergeTableModel0);
      
      boolean boolean0 = mergeTableModel0.isCellEditable(0, 0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      assertNotNull(mergeTableModel0);
      
      boolean boolean0 = mergeTableModel0.isCellEditable((-939), 3);
      assertEquals(true, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      // Undeclared exception!
      try {
        mergeTableModel0.setValueAt((Object) "copy-to-clipboard", 0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      // Undeclared exception!
      try {
        mergeTableModel0.setValueAt((Object) "copy-to-clipboard", 0, 2);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      // Undeclared exception!
      try {
        mergeTableModel0.setValueAt((Object) mergeTableModel0, (-1), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      mergeTableModel0.setValueAt((Object) null, 0, 982);
      assertEquals(4, mergeTableModel0.getColumnCount());
  }

  @Test
  public void test14()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      assertNotNull(mergeTableModel0);
      
      mergeTableModel0.addRow((MergeItemType) null);
      assertEquals(0, mergeTableModel0.getRowCount());
  }

  @Test
  public void test15()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      assertNotNull(mergeTableModel0);
      
      MergeItemType mergeItemType0 = new MergeItemType();
      mergeTableModel0.addRow(mergeItemType0);
      int[] intArray0 = new int[10];
      intArray0[0] = 1;
      mergeTableModel0.addRow(mergeItemType0);
      mergeTableModel0.moveUpRows(intArray0);
      assertEquals(2, mergeTableModel0.getRowCount());
  }

  @Test
  public void test16()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      mergeTableModel0.addRowAt((-1494), (MergeItemType) null);
      assertEquals(0, mergeTableModel0.getRowCount());
  }

  @Test
  public void test17()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      assertNotNull(mergeTableModel0);
      
      MergeItemType mergeItemType0 = new MergeItemType("La ?%QdUVR 7JtBd,M");
      mergeTableModel0.addRowAt(0, mergeItemType0);
      assertEquals(1, mergeTableModel0.getRowCount());
  }

  @Test
  public void test18()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      mergeTableModel0.moveUpRow(0);
      assertEquals(0, mergeTableModel0.getRowCount());
  }

  @Test
  public void test19()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      try {
        mergeTableModel0.moveUpRow(1763);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 1763, Size: 0
         */
      }
  }

  @Test
  public void test20()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      int[] intArray0 = new int[10];
      mergeTableModel0.moveUpRows(intArray0);
      assertEquals(0, mergeTableModel0.getRowCount());
  }

  @Test
  public void test21()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      int[] intArray0 = new int[10];
      intArray0[0] = 1;
      try {
        mergeTableModel0.moveUpRows(intArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test22()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      mergeTableModel0.moveDownRow(0);
      assertEquals(0, mergeTableModel0.getRowCount());
  }

  @Test
  public void test23()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      try {
        mergeTableModel0.moveDownRow((-939));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test24()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      int[] intArray0 = new int[1];
      mergeTableModel0.moveDownRows(intArray0);
      assertEquals(0, mergeTableModel0.getRowCount());
  }

  @Test
  public void test25()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      assertNotNull(mergeTableModel0);
      
      int[] intArray0 = new int[4];
      MergeItemType[] mergeItemTypeArray0 = new MergeItemType[9];
      mergeTableModel0.setData(mergeItemTypeArray0);
      mergeTableModel0.moveDownRows(intArray0);
      assertEquals(9, mergeTableModel0.getRowCount());
  }

  @Test
  public void test26()  throws Throwable  {
      MergeTableModel mergeTableModel0 = new MergeTableModel();
      assertNotNull(mergeTableModel0);
      
      int[] intArray0 = new int[1];
      MergeItemType mergeItemType0 = new MergeItemType(">,", ">,", ">,", ">,", false);
      mergeTableModel0.addRow(mergeItemType0);
      assertEquals(1, mergeTableModel0.getRowCount());
      
      mergeTableModel0.deleteRows(intArray0);
      assertEquals(0, mergeTableModel0.getRowCount());
  }
}
