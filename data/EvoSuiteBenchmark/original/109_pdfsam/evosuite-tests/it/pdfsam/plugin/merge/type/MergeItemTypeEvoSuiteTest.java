/*
 * This file was automatically generated by EvoSuite
 */

package it.pdfsam.plugin.merge.type;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import it.pdfsam.plugin.merge.type.MergeItemType;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MergeItemTypeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MergeItemType mergeItemType0 = new MergeItemType("", "", "", "", false);
      mergeItemType0.setPageSelection("all");
      assertEquals(false, mergeItemType0.isEncrypted());
  }

  @Test
  public void test1()  throws Throwable  {
      MergeItemType mergeItemType0 = new MergeItemType("W}KS");
      mergeItemType0.setFilePath("all");
      assertEquals("all", mergeItemType0.getPageSelection());
      assertEquals(false, mergeItemType0.isEncrypted());
  }

  @Test
  public void test2()  throws Throwable  {
      MergeItemType mergeItemType0 = new MergeItemType("#c71", "/", "#c71", "#c71", false);
      MergeItemType mergeItemType1 = new MergeItemType(mergeItemType0);
      assertEquals(false, mergeItemType1.isEncrypted());
      assertEquals("#c71", mergeItemType1.getPageSelection());
      assertEquals("/", mergeItemType1.getFilePath());
      assertEquals("#c71", mergeItemType1.getNumPages());
      assertEquals("#c71", mergeItemType1.getFileName());
  }

  @Test
  public void test3()  throws Throwable  {
      MergeItemType mergeItemType0 = new MergeItemType();
      assertEquals("all", mergeItemType0.getPageSelection());
      assertEquals(false, mergeItemType0.isEncrypted());
  }

  @Test
  public void test4()  throws Throwable  {
      MergeItemType mergeItemType0 = new MergeItemType("", "", "", "", false);
      mergeItemType0.setNumPages("");
      assertEquals(false, mergeItemType0.isEncrypted());
  }

  @Test
  public void test5()  throws Throwable  {
      MergeItemType mergeItemType0 = new MergeItemType("W}KS");
      assertEquals(false, mergeItemType0.isEncrypted());
      
      mergeItemType0.setEncrypted(true);
      assertEquals(true, mergeItemType0.isEncrypted());
  }

  @Test
  public void test6()  throws Throwable  {
      MergeItemType mergeItemType0 = new MergeItemType("", "", "", "", false);
      mergeItemType0.setFileName("");
      assertEquals(false, mergeItemType0.isEncrypted());
  }

  @Test
  public void test7()  throws Throwable  {
      MergeItemType mergeItemType0 = new MergeItemType((String) null);
      String string0 = mergeItemType0.getValue(0);
      assertEquals("all", mergeItemType0.getPageSelection());
      assertNull(string0);
      assertEquals(false, mergeItemType0.isEncrypted());
  }

  @Test
  public void test8()  throws Throwable  {
      MergeItemType mergeItemType0 = new MergeItemType("", "", "", "", false);
      String string0 = mergeItemType0.getValue(692);
      assertNull(string0);
      assertEquals(false, mergeItemType0.isEncrypted());
  }

  @Test
  public void test9()  throws Throwable  {
      MergeItemType mergeItemType0 = new MergeItemType("W}KS");
      String string0 = mergeItemType0.getValue(1);
      assertEquals(false, mergeItemType0.isEncrypted());
      assertNull(string0);
      assertEquals("all", mergeItemType0.getPageSelection());
  }

  @Test
  public void test10()  throws Throwable  {
      MergeItemType mergeItemType0 = new MergeItemType("#c71", "/", "#c71", "#c71", false);
      String string0 = mergeItemType0.getValue(2);
      assertNotNull(string0);
      assertEquals("/", mergeItemType0.getFilePath());
      assertEquals(false, mergeItemType0.isEncrypted());
      assertEquals("#c71", string0);
      assertEquals("#c71", mergeItemType0.getFileName());
      assertEquals("#c71", mergeItemType0.getPageSelection());
  }

  @Test
  public void test11()  throws Throwable  {
      MergeItemType mergeItemType0 = new MergeItemType("", "", "", "", false);
      String string0 = mergeItemType0.getValue(3);
      assertNotNull(string0);
      assertEquals(false, mergeItemType0.isEncrypted());
  }
}
