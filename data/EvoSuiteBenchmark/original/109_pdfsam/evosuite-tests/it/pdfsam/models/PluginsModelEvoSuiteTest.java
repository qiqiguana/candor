/*
 * This file was automatically generated by EvoSuite
 */

package it.pdfsam.models;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import it.pdfsam.models.PluginsModel;
import java.util.ArrayList;
import javax.swing.JSpinner;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PluginsModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      PluginsModel pluginsModel0 = new PluginsModel(arrayList0);
      assertNotNull(pluginsModel0);
      
      String string0 = pluginsModel0.getColumnName((-1));
      assertEquals(3, pluginsModel0.getColumnCount());
      assertNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      PluginsModel pluginsModel0 = new PluginsModel(arrayList0);
      assertNotNull(pluginsModel0);
      
      boolean boolean0 = pluginsModel0.isCellEditable(0, 1);
      assertEquals(3, pluginsModel0.getColumnCount());
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      ArrayList<JSpinner.DateEditor> arrayList0 = new ArrayList<JSpinner.DateEditor>(15);
      PluginsModel pluginsModel0 = new PluginsModel(arrayList0);
      assertNotNull(pluginsModel0);
      
      pluginsModel0.getRowCount();
      assertEquals(3, pluginsModel0.getColumnCount());
  }

  @Test
  public void test3()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      PluginsModel pluginsModel0 = new PluginsModel(arrayList0);
      assertNotNull(pluginsModel0);
      
      int int0 = pluginsModel0.getColumnCount();
      assertEquals(3, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      PluginsModel pluginsModel0 = new PluginsModel(arrayList0);
      String[] stringArray0 = new String[3];
      pluginsModel0.setColumnNames(stringArray0);
      assertEquals(0, pluginsModel0.getRowCount());
  }

  @Test
  public void test5()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      PluginsModel pluginsModel0 = new PluginsModel(arrayList0);
      assertNotNull(pluginsModel0);
      
      // Undeclared exception!
      try {
        pluginsModel0.getValueAt((-234), (-234));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -234
         */
      }
  }
}
