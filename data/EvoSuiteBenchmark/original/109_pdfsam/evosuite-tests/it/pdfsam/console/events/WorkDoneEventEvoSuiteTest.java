/*
 * This file was automatically generated by EvoSuite
 */

package it.pdfsam.console.events;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import it.pdfsam.console.events.WorkDoneEvent;
import it.pdfsam.console.interfaces.WorkDoneListener;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class WorkDoneEventEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      WorkDoneEvent workDoneEvent0 = new WorkDoneEvent((Object) "Name", 0, 0);
      String string0 = workDoneEvent0.getEventMessage();
      assertNotNull(string0);
      assertEquals(0, workDoneEvent0.getPagesDone());
      assertEquals(0, workDoneEvent0.getPercentageDone());
      assertEquals(0, workDoneEvent0.getType());
  }

  @Test
  public void test1()  throws Throwable  {
      WorkDoneEvent workDoneEvent0 = new WorkDoneEvent((Object) "margin", 1648, "margin");
      assertEquals(0, workDoneEvent0.getPercentageDone());
      assertEquals(1648, workDoneEvent0.getType());
      assertEquals(0, workDoneEvent0.getPagesDone());
  }

  @Test
  public void test2()  throws Throwable  {
      WorkDoneEvent workDoneEvent0 = new WorkDoneEvent((Object) "margin", 1648, 1648, 1648);
      int int0 = workDoneEvent0.getPercentageDone();
      assertEquals(1648, workDoneEvent0.getType());
      assertEquals(1648, workDoneEvent0.getPagesDone());
      assertEquals(1648, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      WorkDoneEvent workDoneEvent0 = new WorkDoneEvent((Object) "margin", 1648, 1648, 1648);
      int int0 = workDoneEvent0.getType();
      assertEquals(1648, int0);
      assertEquals(1648, workDoneEvent0.getPercentageDone());
      assertEquals(1648, workDoneEvent0.getPagesDone());
  }

  @Test
  public void test4()  throws Throwable  {
      WorkDoneEvent workDoneEvent0 = new WorkDoneEvent((Object) "ActionCommandKey", 4, "ActionCommandKey", 4);
      // Undeclared exception!
      try {
        workDoneEvent0.dispatch((WorkDoneListener) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      WorkDoneEvent workDoneEvent0 = new WorkDoneEvent((Object) "selectedIcon", 1);
      // Undeclared exception!
      try {
        workDoneEvent0.dispatch((WorkDoneListener) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      WorkDoneEvent workDoneEvent0 = new WorkDoneEvent((Object) "margin", 1648, 1648, 1648);
      int int0 = workDoneEvent0.getPagesDone();
      assertEquals(1648, workDoneEvent0.getPercentageDone());
      assertEquals(1648, int0);
      assertEquals(1648, workDoneEvent0.getType());
  }
}
