/*
 * This file was automatically generated by EvoSuite
 */

package it.pdfsam.console.tools.pdf.writers;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lowagie.text.Anchor;
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.pdf.PdfReader;
import it.pdfsam.console.tools.pdf.writers.PdfSimpleConcatenator;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.util.List;
import javax.swing.DebugGraphics;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PdfSimpleConcatenatorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Document document0 = new Document();
      PdfSimpleConcatenator pdfSimpleConcatenator0 = new PdfSimpleConcatenator(document0, (OutputStream) null);
      Anchor anchor0 = new Anchor((-149.93225F), "ELGAMAL/PKCS1");
      pdfSimpleConcatenator0.setOutlines((List) anchor0);
      assertEquals(17, anchor0.type());
  }

  @Test
  public void test1()  throws Throwable  {
      Document document0 = new Document();
      PrintStream printStream0 = DebugGraphics.logStream();
      PdfSimpleConcatenator pdfSimpleConcatenator0 = new PdfSimpleConcatenator(document0, (OutputStream) printStream0, false);
      pdfSimpleConcatenator0.freeReader((PdfReader) null);
  }

  @Test
  public void test2()  throws Throwable  {
      Document document0 = new Document();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PdfSimpleConcatenator pdfSimpleConcatenator0 = new PdfSimpleConcatenator(document0, (OutputStream) pipedOutputStream0, true);
      pdfSimpleConcatenator0.close();
  }

  @Test
  public void test3()  throws Throwable  {
      Document document0 = new Document();
      PrintStream printStream0 = DebugGraphics.logStream();
      PdfSimpleConcatenator pdfSimpleConcatenator0 = new PdfSimpleConcatenator(document0, (OutputStream) printStream0, false);
      try {
        pdfSimpleConcatenator0.addDocument((PdfReader) null, "G");
        fail("Expecting exception: DocumentException");
      } catch(DocumentException e) {
        /*
         * Reader is null
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Document document0 = new Document();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PdfSimpleConcatenator pdfSimpleConcatenator0 = new PdfSimpleConcatenator(document0, (OutputStream) pipedOutputStream0, true);
      try {
        pdfSimpleConcatenator0.addDocument((PdfReader) null);
        fail("Expecting exception: DocumentException");
      } catch(DocumentException e) {
        /*
         * Reader is null
         */
      }
  }
}
