/*
 * This file was automatically generated by EvoSuite
 */

package it.pdfsam.gnu.gettext;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import it.pdfsam.gnu.gettext.GettextResource;
import java.io.CharArrayReader;
import java.io.IOException;
import java.io.Reader;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class GettextResourceEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      char[] charArray0 = new char[10];
      charArray0[0] = ':';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle((Reader) charArrayReader0);
      String string0 = GettextResource.gettext((ResourceBundle) propertyResourceBundle0, "");
      assertEquals("", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      char[] charArray0 = new char[10];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle((Reader) charArrayReader0);
      String string0 = GettextResource.ngettext((ResourceBundle) propertyResourceBundle0, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", "", (long) '\u0000');
      assertEquals("", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      char[] charArray0 = new char[10];
      charArray0[0] = ':';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle((Reader) charArrayReader0);
      String string0 = GettextResource.ngettext((ResourceBundle) propertyResourceBundle0, "", "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", (long) '\u0000');
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      char[] charArray0 = new char[10];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle((Reader) charArrayReader0);
      String string0 = GettextResource.ngettext((ResourceBundle) propertyResourceBundle0, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", "", 1L);
      assertEquals("", string0);
  }
}
