/*
 * This file was automatically generated by EvoSuite
 */

package jcmdline;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import jcmdline.CmdLineException;
import jcmdline.StringParam;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class StringParamEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      StringParam stringParam0 = new StringParam("`RoGigy", "`RoGigy", 0, 49, true, true);
      assertNotNull(stringParam0);
      
      int int0 = stringParam0.getMaxValLen();
      assertEquals("`RoGigy", stringParam0.getTag());
      assertEquals(0, stringParam0.getMinValLen());
      assertEquals("<s>", stringParam0.getOptionLabel());
      assertEquals(true, stringParam0.isOptional());
      assertEquals(false, stringParam0.isHidden());
      assertEquals(true, stringParam0.isMultiValued());
      assertEquals(49, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      StringParam stringParam0 = new StringParam("W*p;Ev/iA)OY)", "W*p;Ev/iA)OY)");
      assertNotNull(stringParam0);
      assertEquals("<s>", stringParam0.getOptionLabel());
      assertEquals(false, stringParam0.isMultiValued());
      assertEquals(true, stringParam0.isOptional());
      assertEquals("W*p;Ev/iA)OY)", stringParam0.getTag());
      assertEquals(0, stringParam0.getMinValLen());
      assertEquals(-1, stringParam0.getMaxValLen());
      assertEquals(false, stringParam0.isHidden());
  }

  @Test
  public void test2()  throws Throwable  {
      StringParam stringParam0 = new StringParam("`RoGigy", "`RoGigy", 0, 49, true, true);
      assertNotNull(stringParam0);
      
      int int0 = stringParam0.getMinValLen();
      assertEquals(true, stringParam0.isOptional());
      assertEquals(49, stringParam0.getMaxValLen());
      assertEquals("<s>", stringParam0.getOptionLabel());
      assertEquals(false, stringParam0.isHidden());
      assertEquals(0, int0);
      assertEquals("`RoGigy", stringParam0.getTag());
      assertEquals(true, stringParam0.isMultiValued());
  }

  @Test
  public void test3()  throws Throwable  {
      String[] stringArray0 = new String[6];
      StringParam stringParam0 = new StringParam("`RoGigy", "`RoGigy", stringArray0);
      assertEquals(false, stringParam0.isHidden());
      assertEquals("<s>", stringParam0.getOptionLabel());
      assertEquals(-1, stringParam0.getMinValLen());
      assertEquals(true, stringParam0.isOptional());
      assertEquals(-1, stringParam0.getMaxValLen());
      assertEquals(false, stringParam0.isMultiValued());
      assertNotNull(stringParam0);
      assertEquals("`RoGigy", stringParam0.getTag());
  }

  @Test
  public void test4()  throws Throwable  {
      StringParam stringParam0 = new StringParam("xFeqU3$", "xFeqU3$", 0, 0, false);
      assertNotNull(stringParam0);
      
      // Undeclared exception!
      try {
        stringParam0.setMinValLen(923);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Maximum length for xFeqU3$ must not be less than the minimum length.
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      StringParam stringParam0 = new StringParam("W*p;Ev/iK)OY-", "W*p;Ev/iK)OY-", true);
      assertNotNull(stringParam0);
      assertEquals(false, stringParam0.isHidden());
      assertEquals(false, stringParam0.isMultiValued());
      assertEquals(0, stringParam0.getMinValLen());
      assertEquals("W*p;Ev/iK)OY-", stringParam0.getTag());
      assertEquals(true, stringParam0.isOptional());
      assertEquals("<s>", stringParam0.getOptionLabel());
      assertEquals(-1, stringParam0.getMaxValLen());
  }

  @Test
  public void test6()  throws Throwable  {
      String[] stringArray0 = new String[3];
      StringParam stringParam0 = new StringParam("StringParam.defaultOptionLPbel", "StringParam.defaultOptionLPbel", stringArray0, true, true);
      assertNotNull(stringParam0);
      
      stringParam0.setMaxValLen(1811);
      assertEquals(1811, stringParam0.getMaxValLen());
  }

  @Test
  public void test7()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "W*p;Ev/iA)OY)";
      StringParam stringParam0 = new StringParam("W*p;Ev/iA)OY)", "W*p;Ev/iA)OY)", stringArray0, true);
      assertNotNull(stringParam0);
      
      stringParam0.validateValue("W*p;Ev/iA)OY)");
      assertEquals(false, stringParam0.isMultiValued());
      assertEquals("W*p;Ev/iA)OY)", stringParam0.getTag());
      assertEquals(-1, stringParam0.getMinValLen());
      assertEquals(false, stringParam0.isHidden());
      assertEquals(-1, stringParam0.getMaxValLen());
      assertEquals(true, stringParam0.isOptional());
      assertEquals("<s>", stringParam0.getOptionLabel());
  }

  @Test
  public void test8()  throws Throwable  {
      StringParam stringParam0 = new StringParam("`RoGigy", "`RoGigy", 0, 49, true, true);
      assertNotNull(stringParam0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "`RoGigy";
      // Undeclared exception!
      try {
        stringParam0.setValues(stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      StringParam stringParam0 = new StringParam("D{dlp(XWhx", "D{dlp(XWhx", 947, 947, false, false);
      assertNotNull(stringParam0);
      
      String[] stringArray0 = new String[10];
      stringArray0[0] = "D{dlp(XWhx";
      try {
        stringParam0.setValues(stringArray0);
        fail("Expecting exception: CmdLineException");
      } catch(CmdLineException e) {
        /*
         * Parameter for D{dlp(XWhx  is shorter than the minimum allowed length (947).
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "W*p;Ev/iA)OY)";
      StringParam stringParam0 = new StringParam("W*p;Ev/iA)OY)", "W*p;Ev/iA)OY)", 0, 0, true);
      assertNotNull(stringParam0);
      
      try {
        stringParam0.setValues(stringArray0);
        fail("Expecting exception: CmdLineException");
      } catch(CmdLineException e) {
        /*
         * Parameter for W*p;Ev/iA)OY)  is longer than the maximum allowed length (0).
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      StringParam stringParam0 = null;
      try {
        stringParam0 = new StringParam("StringParam.valTooLong", "StringParam.valTooLong", (-1137), (-1137), false);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Minimum length for StringParam.valTooLong must not be less than 0.
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      StringParam stringParam0 = new StringParam("`RoGigy", "`RoGigy", 0, 49, true, true);
      assertNotNull(stringParam0);
      
      stringParam0.setMinValLen(0);
      assertEquals("<s>", stringParam0.getOptionLabel());
      assertEquals(false, stringParam0.isHidden());
      assertEquals("`RoGigy", stringParam0.getTag());
      assertEquals(true, stringParam0.isOptional());
      assertEquals(49, stringParam0.getMaxValLen());
      assertEquals(true, stringParam0.isMultiValued());
      assertEquals(0, stringParam0.getMinValLen());
  }

  @Test
  public void test13()  throws Throwable  {
      StringParam stringParam0 = new StringParam("W*p;Ev/iK)OY-", "W*p;Ev/iK)OY-", 1993, (-1105), true, true);
      assertNotNull(stringParam0);
      
      // Undeclared exception!
      try {
        stringParam0.setMaxValLen((-1105));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Maximum length for W*p;Ev/iK)OY- must not be less than 0.
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      StringParam stringParam0 = null;
      try {
        stringParam0 = new StringParam("3JHqDQ7KI?q[R}c7K", "3JHqDQ7KI?q[R}c7K", 629, 31);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Maximum length for 3JHqDQ7KI?q[R}c7K must not be less than the minimum length.
         */
      }
  }
}
