/*
 * This file was automatically generated by EvoSuite
 */

package jcmdline;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import jcmdline.CmdLineHandler;
import jcmdline.LongParam;
import jcmdline.Parameter;
import jcmdline.TimeParam;
import jcmdline.VersionCmdLineHandler;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class VersionCmdLineHandlerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Parameter[] parameterArray0 = new Parameter[1];
      String[] stringArray0 = new String[8];
      TimeParam timeParam0 = new TimeParam("SZB6&9s/ ~DP_x", "SZB6&9s/ ~DP_x", stringArray0, true, true, true);
      parameterArray0[0] = (Parameter) timeParam0;
      VersionCmdLineHandler versionCmdLineHandler0 = new VersionCmdLineHandler("SZB6&9s/ ~DP_x", "SZB6&9s/ ~DP_x", "SZB6&9s/ ~DP_x", parameterArray0, parameterArray0);
      assertNotNull(versionCmdLineHandler0);
      
      boolean boolean0 = versionCmdLineHandler0.processParsedOptions(true);
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      VersionCmdLineHandler versionCmdLineHandler0 = null;
      try {
        versionCmdLineHandler0 = new VersionCmdLineHandler((String) null, (CmdLineHandler) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * A version of non-zero length must be specified.
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      VersionCmdLineHandler versionCmdLineHandler0 = null;
      try {
        versionCmdLineHandler0 = new VersionCmdLineHandler("", (CmdLineHandler) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * A version of non-zero length must be specified.
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Parameter[] parameterArray0 = new Parameter[1];
      long[] longArray0 = new long[7];
      LongParam longParam0 = new LongParam("*d", "njlCfV9w}9:+7+2", longArray0, false, false, false);
      parameterArray0[0] = (Parameter) longParam0;
      VersionCmdLineHandler versionCmdLineHandler0 = new VersionCmdLineHandler("*d", "*d", "*d", parameterArray0, parameterArray0);
      boolean boolean0 = versionCmdLineHandler0.processParsedOptions(false);
      assertEquals(false, boolean0);
  }
}
