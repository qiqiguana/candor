/*
 * This file was automatically generated by EvoSuite
 */

package jcmdline;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import jcmdline.CmdLineException;
import jcmdline.OptionTakesNoValue;
import jcmdline.Parameter;
import jcmdline.PosixCmdLineParser;
import jcmdline.TextUsageFormatter;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PosixCmdLineParserEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PosixCmdLineParser posixCmdLineParser0 = new PosixCmdLineParser();
      TextUsageFormatter textUsageFormatter0 = (TextUsageFormatter)posixCmdLineParser0.getUsageFormatter();
      assertEquals(80, textUsageFormatter0.getLineLength());
  }

  @Test
  public void test1()  throws Throwable  {
      PosixCmdLineParser posixCmdLineParser0 = new PosixCmdLineParser();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LinkedList<OptionTakesNoValue> linkedList0 = new LinkedList<OptionTakesNoValue>();
      posixCmdLineParser0.parse((String[]) null, (Map) hashMap0, (List) linkedList0);
      assertEquals("{}", hashMap0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      PosixCmdLineParser posixCmdLineParser0 = new PosixCmdLineParser();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "--";
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LinkedList<OptionTakesNoValue> linkedList0 = new LinkedList<OptionTakesNoValue>();
      try {
        posixCmdLineParser0.parse(stringArray0, (Map) hashMap0, (List) linkedList0);
        fail("Expecting exception: CmdLineException");
      } catch(CmdLineException e) {
        /*
         * Extra argument specified: <null>
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      PosixCmdLineParser posixCmdLineParser0 = new PosixCmdLineParser();
      String[] stringArray0 = new String[20];
      stringArray0[0] = "--J";
      HashMap<OptionTakesNoValue, String> hashMap0 = new HashMap<OptionTakesNoValue, String>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      try {
        posixCmdLineParser0.parse(stringArray0, (Map) hashMap0, (List) linkedList0);
        fail("Expecting exception: CmdLineException");
      } catch(CmdLineException e) {
        /*
         * Option <J> is not a valid option.
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      PosixCmdLineParser posixCmdLineParser0 = new PosixCmdLineParser();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-=J";
      HashMap<OptionTakesNoValue, Parameter> hashMap0 = new HashMap<OptionTakesNoValue, Parameter>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      try {
        posixCmdLineParser0.parse(stringArray0, (Map) hashMap0, (List) linkedList0);
        fail("Expecting exception: CmdLineException");
      } catch(CmdLineException e) {
        /*
         * Option <> is not a valid option.
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      PosixCmdLineParser posixCmdLineParser0 = new PosixCmdLineParser();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-";
      HashMap<OptionTakesNoValue, OptionTakesNoValue> hashMap0 = new HashMap<OptionTakesNoValue, OptionTakesNoValue>();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      try {
        posixCmdLineParser0.parse(stringArray0, (Map) hashMap0, (List) linkedList0);
        fail("Expecting exception: CmdLineException");
      } catch(CmdLineException e) {
        /*
         * Option \"-\" is invalid.
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      PosixCmdLineParser posixCmdLineParser0 = new PosixCmdLineParser();
      String[] stringArray0 = new String[10];
      stringArray0[0] = "y=OBuGbp`7\">*=jy_";
      HashMap<Parameter, String> hashMap0 = new HashMap<Parameter, String>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("y=OBuGbp`7\">*=jy_");
      // Undeclared exception!
      try {
        posixCmdLineParser0.parse(stringArray0, (Map) hashMap0, (List) linkedList0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * java.lang.String cannot be cast to jcmdline.Parameter
         */
      }
  }
}
