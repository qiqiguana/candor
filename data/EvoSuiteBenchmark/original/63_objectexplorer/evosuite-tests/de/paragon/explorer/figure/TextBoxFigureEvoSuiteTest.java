/*
 * This file was automatically generated by EvoSuite
 */

package de.paragon.explorer.figure;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.paragon.explorer.figure.TextBoxFigure;
import de.paragon.explorer.model.Model;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import javax.swing.plaf.FontUIResource;
import javax.swing.table.DefaultTableCellRenderer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TextBoxFigureEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TextBoxFigure textBoxFigure0 = new TextBoxFigure();
      textBoxFigure0.setUnvisible();
      assertEquals(false, textBoxFigure0.isVisible());
  }

  @Test
  public void test1()  throws Throwable  {
      TextBoxFigure textBoxFigure0 = new TextBoxFigure();
      textBoxFigure0.getModel();
      assertEquals(false, textBoxFigure0.isVisible());
  }

  @Test
  public void test2()  throws Throwable  {
      TextBoxFigure textBoxFigure0 = new TextBoxFigure();
      textBoxFigure0.getForeground();
      assertEquals(false, textBoxFigure0.isVisible());
  }

  @Test
  public void test3()  throws Throwable  {
      TextBoxFigure textBoxFigure0 = new TextBoxFigure();
      textBoxFigure0.setText("vdI53");
      assertEquals(false, textBoxFigure0.isVisible());
  }

  @Test
  public void test4()  throws Throwable  {
      TextBoxFigure textBoxFigure0 = new TextBoxFigure();
      textBoxFigure0.setModel((Model) null);
      assertEquals(false, textBoxFigure0.isVisible());
  }

  @Test
  public void test5()  throws Throwable  {
      TextBoxFigure textBoxFigure0 = new TextBoxFigure();
      assertEquals(false, textBoxFigure0.isVisible());
      
      textBoxFigure0.setVisible();
      // Undeclared exception!
      try {
        textBoxFigure0.draw((Graphics) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TextBoxFigure textBoxFigure0 = new TextBoxFigure();
      DefaultTableCellRenderer defaultTableCellRenderer0 = new DefaultTableCellRenderer();
      FontUIResource fontUIResource0 = (FontUIResource)defaultTableCellRenderer0.getFont();
      textBoxFigure0.setFont((Font) fontUIResource0);
      assertEquals(false, textBoxFigure0.isVisible());
  }

  @Test
  public void test7()  throws Throwable  {
      TextBoxFigure textBoxFigure0 = new TextBoxFigure();
      textBoxFigure0.draw((Graphics) null);
      assertEquals(false, textBoxFigure0.isVisible());
  }

  @Test
  public void test8()  throws Throwable  {
      TextBoxFigure textBoxFigure0 = new TextBoxFigure();
      textBoxFigure0.getFont();
      assertEquals(false, textBoxFigure0.isVisible());
  }

  @Test
  public void test9()  throws Throwable  {
      TextBoxFigure textBoxFigure0 = new TextBoxFigure();
      Color color0 = Color.gray;
      textBoxFigure0.setForeground(color0);
      assertEquals(false, textBoxFigure0.isVisible());
  }

  @Test
  public void test10()  throws Throwable  {
      TextBoxFigure textBoxFigure0 = new TextBoxFigure();
      String string0 = textBoxFigure0.getText();
      assertNotNull(string0);
      assertEquals(false, textBoxFigure0.isVisible());
  }
}
