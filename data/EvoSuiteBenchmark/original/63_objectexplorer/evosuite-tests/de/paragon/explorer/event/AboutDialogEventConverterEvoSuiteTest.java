/*
 * This file was automatically generated by EvoSuite
 */

package de.paragon.explorer.event;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.paragon.explorer.event.AboutDialogEventConverter;
import de.paragon.explorer.figure.ExplorerFigure;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.WindowEvent;
import java.net.URL;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.swing.event.HyperlinkEvent;
import javax.swing.text.Element;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AboutDialogEventConverterEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      ExplorerFigure explorerFigure0 = new ExplorerFigure();
      AboutDialogEventConverter aboutDialogEventConverter0 = new AboutDialogEventConverter(explorerFigure0);
      // Undeclared exception!
      try {
        aboutDialogEventConverter0.windowClosing((WindowEvent) null);
        fail("Expecting exception: HeadlessException");
      } catch(HeadlessException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ExplorerFigure explorerFigure0 = new ExplorerFigure();
      AboutDialogEventConverter aboutDialogEventConverter0 = new AboutDialogEventConverter(explorerFigure0);
      ActionEvent actionEvent0 = new ActionEvent((Object) "59", 59, "59", (long) 59, 59);
      // Undeclared exception!
      try {
        aboutDialogEventConverter0.actionPerformed(actionEvent0);
        fail("Expecting exception: HeadlessException");
      } catch(HeadlessException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ExplorerFigure explorerFigure0 = new ExplorerFigure();
      AboutDialogEventConverter aboutDialogEventConverter0 = new AboutDialogEventConverter(explorerFigure0);
      // Undeclared exception!
      try {
        aboutDialogEventConverter0.showDialog();
        fail("Expecting exception: HeadlessException");
      } catch(HeadlessException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ExplorerFigure explorerFigure0 = new ExplorerFigure();
      AboutDialogEventConverter aboutDialogEventConverter0 = new AboutDialogEventConverter(explorerFigure0);
      HyperlinkEvent.EventType hyperlinkEvent_EventType0 = HyperlinkEvent.EventType.EXITED;
      HyperlinkEvent hyperlinkEvent0 = new HyperlinkEvent((Object) "59", hyperlinkEvent_EventType0, (URL) null);
      aboutDialogEventConverter0.hyperlinkUpdate(hyperlinkEvent0);
      assertNull(hyperlinkEvent0.getDescription());
  }

  @Test
  public void test4()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          ExplorerFigure explorerFigure0 = new ExplorerFigure();
          AboutDialogEventConverter aboutDialogEventConverter0 = new AboutDialogEventConverter(explorerFigure0);
          HyperlinkEvent.EventType hyperlinkEvent_EventType0 = HyperlinkEvent.EventType.ACTIVATED;
          HyperlinkEvent hyperlinkEvent0 = new HyperlinkEvent((Object) "COLUMN_HEADER", hyperlinkEvent_EventType0, (URL) null, "COLUMN_HEADER", (Element) null);
          aboutDialogEventConverter0.hyperlinkUpdate(hyperlinkEvent0);
          assertEquals("javax.swing.event.HyperlinkEvent[source=COLUMN_HEADER]", hyperlinkEvent0.toString());
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }
}
