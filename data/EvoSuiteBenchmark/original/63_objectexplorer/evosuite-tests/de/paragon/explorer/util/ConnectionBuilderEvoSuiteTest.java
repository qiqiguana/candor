/*
 * This file was automatically generated by EvoSuite
 */

package de.paragon.explorer.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.paragon.explorer.figure.Figure;
import de.paragon.explorer.figure.ListBoxFigure;
import de.paragon.explorer.figure.StandardConnectionFigure;
import de.paragon.explorer.figure.TextBoxFigure;
import de.paragon.explorer.model.AttributeModel;
import de.paragon.explorer.model.ConnectionModel;
import de.paragon.explorer.model.Model;
import de.paragon.explorer.model.ObjectHeaderModel;
import de.paragon.explorer.model.ObjectModel;
import de.paragon.explorer.util.ConnectionBuilder;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ConnectionBuilderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ConnectionBuilder connectionBuilder0 = ConnectionBuilder.getInstance();
      ObjectModel objectModel0 = new ObjectModel();
      TextBoxFigure textBoxFigure0 = new TextBoxFigure();
      ListBoxFigure listBoxFigure0 = new ListBoxFigure();
      ConnectionModel connectionModel0 = new ConnectionModel();
      listBoxFigure0.setModel((Model) objectModel0);
      StandardConnectionFigure standardConnectionFigure0 = new StandardConnectionFigure();
      connectionModel0.setFigure((Figure) standardConnectionFigure0);
      objectModel0.addConnectionModel(connectionModel0);
      // Undeclared exception!
      try {
        connectionBuilder0.showConnection(textBoxFigure0, listBoxFigure0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * ResourceBundle konnte nicht gefunden werden!
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ConnectionBuilder connectionBuilder0 = ConnectionBuilder.getInstance();
      ObjectModel objectModel0 = new ObjectModel();
      ConnectionModel connectionModel0 = new ConnectionModel();
      objectModel0.addConnectionModel(connectionModel0);
      // Undeclared exception!
      try {
        connectionBuilder0.removeConnections(objectModel0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ConnectionBuilder connectionBuilder0 = ConnectionBuilder.getInstance();
      ObjectModel objectModel0 = new ObjectModel();
      TextBoxFigure textBoxFigure0 = new TextBoxFigure();
      ObjectHeaderModel objectHeaderModel0 = new ObjectHeaderModel();
      objectModel0.setHeaderModel(objectHeaderModel0);
      ListBoxFigure listBoxFigure0 = new ListBoxFigure();
      ConnectionModel connectionModel0 = new ConnectionModel();
      objectModel0.addConnectionModel(connectionModel0);
      listBoxFigure0.setModel((Model) objectModel0);
      // Undeclared exception!
      try {
        connectionBuilder0.showConnection(textBoxFigure0, listBoxFigure0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ConnectionBuilder connectionBuilder0 = ConnectionBuilder.getInstance();
      ObjectModel objectModel0 = new ObjectModel();
      connectionBuilder0.removeConnections(objectModel0);
      assertEquals(true, objectModel0.isObjectModel());
  }

  @Test
  public void test4()  throws Throwable  {
      ConnectionBuilder connectionBuilder0 = ConnectionBuilder.getInstance();
      AttributeModel attributeModel0 = new AttributeModel();
      connectionBuilder0.removeSingleConnection(attributeModel0);
      assertNull(attributeModel0.getName());
  }
}
