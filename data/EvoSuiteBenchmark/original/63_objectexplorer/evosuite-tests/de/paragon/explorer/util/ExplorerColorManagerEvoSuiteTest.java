/*
 * This file was automatically generated by EvoSuite
 */

package de.paragon.explorer.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.paragon.explorer.model.ExplorerModel;
import de.paragon.explorer.util.ExplorerColorManager;
import java.awt.Color;
import javax.swing.colorchooser.DefaultColorSelectionModel;
import javax.swing.plaf.ColorUIResource;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ExplorerColorManagerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ExplorerModel explorerModel0 = new ExplorerModel();
      ExplorerColorManager explorerColorManager0 = explorerModel0.getColorManager();
      Color color0 = explorerColorManager0.getCopyBackground();
      Color color1 = explorerColorManager0.getCopyBackground();
      assertSame(color1, color0);
  }

  @Test
  public void test1()  throws Throwable  {
      ExplorerModel explorerModel0 = new ExplorerModel();
      ExplorerColorManager explorerColorManager0 = explorerModel0.getColorManager();
      explorerColorManager0.getFocusForeground();
      Color color0 = explorerColorManager0.getFocusForeground();
      assertEquals(1, color0.getTransparency());
  }

  @Test
  public void test2()  throws Throwable  {
      ExplorerColorManager explorerColorManager0 = new ExplorerColorManager();
      DefaultColorSelectionModel defaultColorSelectionModel0 = new DefaultColorSelectionModel();
      Color color0 = defaultColorSelectionModel0.getSelectedColor();
      explorerColorManager0.setAttributeBackground(color0);
      assertEquals(1, color0.getTransparency());
  }

  @Test
  public void test3()  throws Throwable  {
      ExplorerColorManager explorerColorManager0 = new ExplorerColorManager();
      DefaultColorSelectionModel defaultColorSelectionModel0 = new DefaultColorSelectionModel();
      Color color0 = defaultColorSelectionModel0.getSelectedColor();
      explorerColorManager0.setAttributeForeground(color0);
      assertEquals(255, color0.getGreen());
  }

  @Test
  public void test4()  throws Throwable  {
      ExplorerColorManager explorerColorManager0 = new ExplorerColorManager();
      explorerColorManager0.setObjectBackground((Color) null);
  }

  @Test
  public void test5()  throws Throwable  {
      ExplorerColorManager explorerColorManager0 = new ExplorerColorManager();
      explorerColorManager0.getFocusBackground();
      Color color0 = explorerColorManager0.getFocusBackground();
      assertEquals(153, color0.getBlue());
  }

  @Test
  public void test6()  throws Throwable  {
      ExplorerColorManager explorerColorManager0 = new ExplorerColorManager();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      ColorUIResource colorUIResource0 = (ColorUIResource)defaultTreeCellRenderer0.getBackgroundNonSelectionColor();
      explorerColorManager0.setObjectForeground((Color) colorUIResource0);
      assertEquals(255, colorUIResource0.getRed());
  }

  @Test
  public void test7()  throws Throwable  {
      Color color0 = ExplorerColorManager.getDefaultExplorerObjectBackground();
      assertEquals(1, color0.getTransparency());
  }
}
