/*
 * This file was automatically generated by EvoSuite
 */

package ioproject.client.network;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import ioproject.client.network.Server;
import ioproject.client.network.ServerHandler;
import ioproject.client.network.StateMultiplexer;
import java.io.IOException;
import java.net.SocketAddress;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ServerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Server server0 = new Server();
      StateMultiplexer stateMultiplexer0 = new StateMultiplexer();
      // Undeclared exception!
      try {
        server0.connect((SocketAddress) null, (ServerHandler) stateMultiplexer0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * address
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Server server0 = new Server();
      // Undeclared exception!
      try {
        server0.send((Object) null);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Not connected.
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Server server0 = new Server();
      // Undeclared exception!
      try {
        server0.disconnect();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Not connected.
         */
      }
  }
}
