/*
 * This file was automatically generated by EvoSuite
 */

package ioproject.client.network;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import ioproject.client.network.Server;
import ioproject.client.network.ServerHandler;
import ioproject.client.network.ServerToMessageHandlerAdapter;
import ioproject.client.network.StateMultiplexer;
import ioproject.common.network.MessageHandler;
import ioproject.common.network.Node;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class StateMultiplexerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      StateMultiplexer stateMultiplexer0 = new StateMultiplexer();
      ServerToMessageHandlerAdapter serverToMessageHandlerAdapter0 = new ServerToMessageHandlerAdapter((MessageHandler) stateMultiplexer0, (ServerHandler) stateMultiplexer0);
      stateMultiplexer0.addStateAndHandler((Object) "[]", (ServerHandler) serverToMessageHandlerAdapter0);
  }

  @Test
  public void test1()  throws Throwable  {
      StateMultiplexer stateMultiplexer0 = new StateMultiplexer();
      // Undeclared exception!
      try {
        stateMultiplexer0.setState((Object) "[]");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Unknown state: null
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      StateMultiplexer stateMultiplexer0 = new StateMultiplexer();
      Server server0 = new Server();
      // Undeclared exception!
      try {
        stateMultiplexer0.messageSent((Node) server0, (Object) "\"w,&$qR'C6t");
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * You must set a state before events can be handled.
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      StateMultiplexer stateMultiplexer0 = new StateMultiplexer();
      // Undeclared exception!
      try {
        stateMultiplexer0.messageReceived((Node) null, (Object) "127.0.0.1");
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * You must set a state before events can be handled.
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      StateMultiplexer stateMultiplexer0 = new StateMultiplexer();
      ServerToMessageHandlerAdapter serverToMessageHandlerAdapter0 = new ServerToMessageHandlerAdapter((MessageHandler) stateMultiplexer0, (ServerHandler) stateMultiplexer0);
      Server server0 = new Server();
      // Undeclared exception!
      try {
        serverToMessageHandlerAdapter0.exceptionCaught(server0, (Throwable) null);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * You must set a state before events can be handled.
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      StateMultiplexer stateMultiplexer0 = new StateMultiplexer();
      Server server0 = new Server();
      // Undeclared exception!
      try {
        stateMultiplexer0.connectionClosed(server0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * You must set a state before events can be handled.
         */
      }
  }
}
