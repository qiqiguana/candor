/*
 * This file was automatically generated by EvoSuite
 */

package ioproject.common.network;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import ioproject.client.network.Server;
import ioproject.common.network.AlwaysFailMessageHandler;
import ioproject.common.network.Node;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AlwaysFailMessageHandlerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AlwaysFailMessageHandler alwaysFailMessageHandler0 = new AlwaysFailMessageHandler();
      Server server0 = new Server();
      // Undeclared exception!
      try {
        alwaysFailMessageHandler0.messageSent((Node) server0, (Object) "");
        fail("Expecting exception: AssertionError");
      } catch(AssertionError e) {
        /*
         * Method called with the following arguments: ioproject.client.network.Server@4839dcbd (node),  (message).
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      AlwaysFailMessageHandler alwaysFailMessageHandler0 = new AlwaysFailMessageHandler();
      Server server0 = new Server();
      // Undeclared exception!
      try {
        alwaysFailMessageHandler0.messageReceived((Node) server0, (Object) "0.0.0.0/0.0.0.0:1");
        fail("Expecting exception: AssertionError");
      } catch(AssertionError e) {
        /*
         * Method called with the following arguments: ioproject.client.network.Server@7b092204 (node), 0.0.0.0/0.0.0.0:1 (message).
         */
      }
  }
}
