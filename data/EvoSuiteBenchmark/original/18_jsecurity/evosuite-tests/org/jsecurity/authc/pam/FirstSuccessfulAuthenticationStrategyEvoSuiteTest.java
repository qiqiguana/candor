/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.authc.pam;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Collection;
import java.util.Set;
import org.jsecurity.authc.AuthenticationException;
import org.jsecurity.authc.AuthenticationInfo;
import org.jsecurity.authc.AuthenticationToken;
import org.jsecurity.authc.SimpleAccount;
import org.jsecurity.authc.SimpleAuthenticationInfo;
import org.jsecurity.authc.pam.FirstSuccessfulAuthenticationStrategy;
import org.jsecurity.realm.Realm;
import org.jsecurity.subject.PrincipalCollection;
import org.jsecurity.subject.SimplePrincipalCollection;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FirstSuccessfulAuthenticationStrategyEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FirstSuccessfulAuthenticationStrategy firstSuccessfulAuthenticationStrategy0 = new FirstSuccessfulAuthenticationStrategy();
      AuthenticationInfo authenticationInfo0 = firstSuccessfulAuthenticationStrategy0.beforeAllAttempts((Collection<? extends Realm>) null, (AuthenticationToken) null);
      assertNull(authenticationInfo0);
  }

  @Test
  public void test1()  throws Throwable  {
      FirstSuccessfulAuthenticationStrategy firstSuccessfulAuthenticationStrategy0 = new FirstSuccessfulAuthenticationStrategy();
      AuthenticationInfo authenticationInfo0 = firstSuccessfulAuthenticationStrategy0.merge((AuthenticationInfo) null, (AuthenticationInfo) null);
      assertNull(authenticationInfo0);
  }

  @Test
  public void test2()  throws Throwable  {
      FirstSuccessfulAuthenticationStrategy firstSuccessfulAuthenticationStrategy0 = new FirstSuccessfulAuthenticationStrategy();
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection((Object) "[]", "[]");
      SimpleAuthenticationInfo simpleAuthenticationInfo0 = new SimpleAuthenticationInfo((PrincipalCollection) simplePrincipalCollection0, (Object) "U\u0000\uFFFD");
      Set<String> set0 = simplePrincipalCollection0.getRealmNames();
      SimpleAccount simpleAccount0 = new SimpleAccount((PrincipalCollection) simplePrincipalCollection0, (Object) null, set0);
      SimpleAuthenticationInfo simpleAuthenticationInfo1 = (SimpleAuthenticationInfo)firstSuccessfulAuthenticationStrategy0.merge((AuthenticationInfo) simpleAccount0, (AuthenticationInfo) simpleAuthenticationInfo0);
      assertSame(simpleAuthenticationInfo0, simpleAuthenticationInfo1);
  }

  @Test
  public void test3()  throws Throwable  {
      FirstSuccessfulAuthenticationStrategy firstSuccessfulAuthenticationStrategy0 = new FirstSuccessfulAuthenticationStrategy();
      SimpleAuthenticationInfo simpleAuthenticationInfo0 = new SimpleAuthenticationInfo();
      SimpleAuthenticationInfo simpleAuthenticationInfo1 = (SimpleAuthenticationInfo)firstSuccessfulAuthenticationStrategy0.merge((AuthenticationInfo) simpleAuthenticationInfo0, (AuthenticationInfo) simpleAuthenticationInfo0);
      assertSame(simpleAuthenticationInfo0, simpleAuthenticationInfo1);
  }

  @Test
  public void test4()  throws Throwable  {
      FirstSuccessfulAuthenticationStrategy firstSuccessfulAuthenticationStrategy0 = new FirstSuccessfulAuthenticationStrategy();
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      SimpleAccount simpleAccount0 = new SimpleAccount((PrincipalCollection) simplePrincipalCollection0, (Object) "\u0000\r\uFFFD", (Set<String>) null);
      SimpleAccount simpleAccount1 = (SimpleAccount)firstSuccessfulAuthenticationStrategy0.merge((AuthenticationInfo) simpleAccount0, (AuthenticationInfo) simpleAccount0);
      assertEquals(false, simpleAccount1.isCredentialsExpired());
  }
}
