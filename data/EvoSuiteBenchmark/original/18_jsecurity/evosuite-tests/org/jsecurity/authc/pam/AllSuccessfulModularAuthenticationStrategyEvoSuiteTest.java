/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.authc.pam;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.jsecurity.authc.AuthenticationException;
import org.jsecurity.authc.AuthenticationInfo;
import org.jsecurity.authc.AuthenticationToken;
import org.jsecurity.authc.SimpleAuthenticationInfo;
import org.jsecurity.authc.UnknownAccountException;
import org.jsecurity.authc.UsernamePasswordToken;
import org.jsecurity.authc.pam.AllSuccessfulModularAuthenticationStrategy;
import org.jsecurity.authc.pam.UnsupportedTokenException;
import org.jsecurity.realm.Realm;
import org.jsecurity.realm.SimpleAccountRealm;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AllSuccessfulModularAuthenticationStrategyEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AllSuccessfulModularAuthenticationStrategy allSuccessfulModularAuthenticationStrategy0 = new AllSuccessfulModularAuthenticationStrategy();
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm("");
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("", "", false);
      Object object0 = new Object();
      SimpleAuthenticationInfo simpleAuthenticationInfo0 = new SimpleAuthenticationInfo(object0, (Object) usernamePasswordToken0, "");
      SimpleAuthenticationInfo simpleAuthenticationInfo1 = (SimpleAuthenticationInfo)allSuccessfulModularAuthenticationStrategy0.beforeAttempt((Realm) simpleAccountRealm0, (AuthenticationToken) usernamePasswordToken0, (AuthenticationInfo) simpleAuthenticationInfo0);
      assertSame(simpleAuthenticationInfo0, simpleAuthenticationInfo1);
  }

  @Test
  public void test1()  throws Throwable  {
      AllSuccessfulModularAuthenticationStrategy allSuccessfulModularAuthenticationStrategy0 = new AllSuccessfulModularAuthenticationStrategy();
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      try {
        allSuccessfulModularAuthenticationStrategy0.beforeAttempt((Realm) simpleAccountRealm0, (AuthenticationToken) null, (AuthenticationInfo) null);
        fail("Expecting exception: UnsupportedTokenException");
      } catch(UnsupportedTokenException e) {
        /*
         * Realm [org.jsecurity.realm.SimpleAccountRealm@46bd86a7] of type [org.jsecurity.realm.SimpleAccountRealm] does not support  the submitted AuthenticationToken [null].  The [org.jsecurity.authc.pam.AllSuccessfulModularAuthenticationStrategy] implementation requires all configured realm(s) to support and be able to process the submitted AuthenticationToken.
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      AllSuccessfulModularAuthenticationStrategy allSuccessfulModularAuthenticationStrategy0 = new AllSuccessfulModularAuthenticationStrategy();
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm("");
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("", "", false);
      Object object0 = new Object();
      SimpleAuthenticationInfo simpleAuthenticationInfo0 = new SimpleAuthenticationInfo(object0, (Object) usernamePasswordToken0, "");
      // Undeclared exception!
      try {
        allSuccessfulModularAuthenticationStrategy0.afterAttempt((Realm) simpleAccountRealm0, (AuthenticationToken) usernamePasswordToken0, (AuthenticationInfo) simpleAuthenticationInfo0, (AuthenticationInfo) null, (Throwable) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Attempt to merge authentication info from multiple realms, but aggreagate AuthenticationInfo is not of type MergableAuthenticationInfo.
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      AllSuccessfulModularAuthenticationStrategy allSuccessfulModularAuthenticationStrategy0 = new AllSuccessfulModularAuthenticationStrategy();
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      try {
        allSuccessfulModularAuthenticationStrategy0.afterAttempt((Realm) simpleAccountRealm0, (AuthenticationToken) null, (AuthenticationInfo) null, (AuthenticationInfo) null, (Throwable) null);
        fail("Expecting exception: UnknownAccountException");
      } catch(UnknownAccountException e) {
        /*
         * Realm [org.jsecurity.realm.SimpleAccountRealm@2422a7b8] could not find any associated account data for the submitted AuthenticationToken [null].  The [org.jsecurity.authc.pam.AllSuccessfulModularAuthenticationStrategy] implementation requires all configured realm(s) to acquire valid account data for a submitted token during the log-in process.
         */
      }
  }
}
