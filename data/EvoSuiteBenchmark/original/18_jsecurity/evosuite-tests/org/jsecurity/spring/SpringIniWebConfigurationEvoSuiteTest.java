/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.spring;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Map;
import org.jsecurity.spring.SpringIniWebConfiguration;
import org.junit.BeforeClass;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextException;
import org.springframework.context.support.GenericApplicationContext;

@RunWith(EvoSuiteRunner.class)
public class SpringIniWebConfigurationEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SpringIniWebConfiguration springIniWebConfiguration0 = new SpringIniWebConfiguration();
      // Undeclared exception!
      try {
        springIniWebConfiguration0.createDefaultSecurityManager();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      SpringIniWebConfiguration springIniWebConfiguration0 = new SpringIniWebConfiguration();
      GenericApplicationContext genericApplicationContext0 = new GenericApplicationContext();
      // Undeclared exception!
      try {
        springIniWebConfiguration0.getOrCreateSecurityManager((ApplicationContext) genericApplicationContext0, (Map<String, Map<String, String>>) null);
        fail("Expecting exception: ApplicationContextException");
      } catch(ApplicationContextException e) {
        /*
         * Unable to locate a org.jsecurity.mgt.SecurityManager instance in the Spring WebApplicationContext.  You can 1) simply just define the securityManager as a bean (it will be automatically located based on type) or 2) explicitly specifify which bean is retrieved by setting this filter's 'securityManagerBeanName' init-param or 3) define one or more org.jsecurity.realm.Realm instances and a default SecurityManager using those realms will be created automatically.
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      SpringIniWebConfiguration springIniWebConfiguration0 = new SpringIniWebConfiguration();
      springIniWebConfiguration0.setSecurityManagerBeanName((String) null);
      assertNull(springIniWebConfiguration0.getSecurityManagerBeanName());
  }
}
