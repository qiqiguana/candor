/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.realm.jdbc;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.NoSuchElementException;
import javax.sql.DataSource;
import org.hsqldb.jdbc.jdbcDataSource;
import org.jsecurity.authc.AccountException;
import org.jsecurity.authc.AuthenticationException;
import org.jsecurity.authc.AuthenticationToken;
import org.jsecurity.authc.UsernamePasswordToken;
import org.jsecurity.authz.AuthorizationException;
import org.jsecurity.realm.jdbc.JdbcRealm;
import org.jsecurity.subject.PrincipalCollection;
import org.jsecurity.subject.SimplePrincipalCollection;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JdbcRealmEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JdbcRealm jdbcRealm0 = new JdbcRealm();
      jdbcRealm0.setUserRolesQuery("\\a5F0hvbh$zklrp:{Z");
      assertEquals("org.jsecurity.realm.jdbc.JdbcRealm_0", jdbcRealm0.getName());
  }

  @Test
  public void test1()  throws Throwable  {
      JdbcRealm jdbcRealm0 = new JdbcRealm();
      jdbcRealm0.setPermissionsLookupEnabled(true);
      assertEquals("org.jsecurity.realm.jdbc.JdbcRealm_5", jdbcRealm0.getName());
  }

  @Test
  public void test2()  throws Throwable  {
      JdbcRealm jdbcRealm0 = new JdbcRealm();
      jdbcRealm0.setPermissionsQuery("\\a5F0hvbh$zklrp:{Z");
      assertEquals("org.jsecurity.realm.jdbc.JdbcRealm_13", jdbcRealm0.getName());
  }

  @Test
  public void test3()  throws Throwable  {
      JdbcRealm jdbcRealm0 = new JdbcRealm();
      char[] charArray0 = new char[11];
      jdbcRealm0.buildAuthenticationInfo("org.apache.common.logging.Log.allowFlawedContext", charArray0);
      assertEquals("org.jsecurity.realm.jdbc.JdbcRealm_18", jdbcRealm0.getName());
  }

  @Test
  public void test4()  throws Throwable  {
      JdbcRealm jdbcRealm0 = new JdbcRealm();
      jdbcDataSource jdbcDataSource0 = new jdbcDataSource();
      jdbcRealm0.setDataSource((DataSource) jdbcDataSource0);
      assertEquals("org.jsecurity.realm.jdbc.JdbcRealm_24", jdbcRealm0.getName());
  }

  @Test
  public void test5()  throws Throwable  {
      JdbcRealm jdbcRealm0 = new JdbcRealm();
      jdbcRealm0.setAuthenticationQuery("");
      assertEquals("org.jsecurity.realm.jdbc.JdbcRealm_29", jdbcRealm0.getName());
  }

  @Test
  public void test6()  throws Throwable  {
      JdbcRealm jdbcRealm0 = new JdbcRealm();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("\\a5F0hvbh$zklrp:{Z", "\\a5F0hvbh$zklrp:{Z", false);
      // Undeclared exception!
      try {
        jdbcRealm0.getAuthenticationInfo((AuthenticationToken) usernamePasswordToken0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      JdbcRealm jdbcRealm0 = new JdbcRealm();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken();
      try {
        jdbcRealm0.doGetAuthenticationInfo((AuthenticationToken) usernamePasswordToken0);
        fail("Expecting exception: AccountException");
      } catch(AccountException e) {
        /*
         * Null usernames are not allowed by this realm.
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      JdbcRealm jdbcRealm0 = new JdbcRealm();
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      // Undeclared exception!
      try {
        jdbcRealm0.doGetAuthorizationInfo((PrincipalCollection) simplePrincipalCollection0);
        fail("Expecting exception: NoSuchElementException");
      } catch(NoSuchElementException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      JdbcRealm jdbcRealm0 = new JdbcRealm();
      // Undeclared exception!
      try {
        jdbcRealm0.doGetAuthorizationInfo((PrincipalCollection) null);
        fail("Expecting exception: AuthorizationException");
      } catch(AuthorizationException e) {
        /*
         * PrincipalCollection method argument cannot be null.
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      JdbcRealm jdbcRealm0 = new JdbcRealm();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      jdbcRealm0.getPermissions((Connection) null, "", (Collection<String>) linkedHashSet0);
      assertEquals("org.jsecurity.realm.jdbc.JdbcRealm_68", jdbcRealm0.getName());
  }

  @Test
  public void test11()  throws Throwable  {
      JdbcRealm jdbcRealm0 = new JdbcRealm();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add("aJ::kxL%x+OK`");
      // Undeclared exception!
      try {
        jdbcRealm0.getPermissions((Connection) null, "aJ::kxL%x+OK`", (Collection<String>) linkedHashSet0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
