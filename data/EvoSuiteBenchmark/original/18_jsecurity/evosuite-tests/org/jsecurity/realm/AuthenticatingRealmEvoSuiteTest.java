/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.realm;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.net.Inet4Address;
import java.net.InetAddress;
import java.net.UnknownHostException;
import org.jsecurity.authc.AuthenticationToken;
import org.jsecurity.authc.UsernamePasswordToken;
import org.jsecurity.authc.credential.CredentialsMatcher;
import org.jsecurity.authc.credential.Md5CredentialsMatcher;
import org.jsecurity.authc.credential.SimpleCredentialsMatcher;
import org.jsecurity.realm.SimpleAccountRealm;

@RunWith(EvoSuiteRunner.class)
public class AuthenticatingRealmEvoSuiteTest {


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 org.jsecurity.realm.AuthenticatingRealm.getCredentialsMatcher()Lorg/jsecurity/authc/credential/CredentialsMatcher;: root-Branch
   * 2 org.jsecurity.realm.AuthenticatingRealm.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      SimpleCredentialsMatcher simpleCredentialsMatcher0 = (SimpleCredentialsMatcher)simpleAccountRealm0.getCredentialsMatcher();
      assertNotNull(simpleCredentialsMatcher0);
      assertEquals("org.jsecurity.realm.SimpleAccountRealm_0", simpleAccountRealm0.getName());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 org.jsecurity.realm.AuthenticatingRealm.setCredentialsMatcher(Lorg/jsecurity/authc/credential/CredentialsMatcher;)V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      Md5CredentialsMatcher md5CredentialsMatcher0 = new Md5CredentialsMatcher();
      simpleAccountRealm0.setCredentialsMatcher((CredentialsMatcher) md5CredentialsMatcher0);
      assertEquals("org.jsecurity.realm.SimpleAccountRealm_2", simpleAccountRealm0.getName());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 org.jsecurity.realm.AuthenticatingRealm.setAuthenticationTokenClass(Ljava/lang/Class;)V: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      Class<? extends AuthenticationToken> class0 = UsernamePasswordToken.class;
      simpleAccountRealm0.setAuthenticationTokenClass(class0);
      assertNull(simpleAccountRealm0.getAuthorizationCacheName());
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 org.jsecurity.realm.AuthenticatingRealm.getAuthenticationTokenClass()Ljava/lang/Class;: root-Branch
   * 2 org.jsecurity.realm.AuthenticatingRealm.supports(Lorg/jsecurity/authc/AuthenticationToken;)Z: I3 Branch 1 IFNULL L165 - false
   * 3 org.jsecurity.realm.AuthenticatingRealm.supports(Lorg/jsecurity/authc/AuthenticationToken;)Z: I9 Branch 2 IFEQ L165 - false
   */
  @Test
  public void test3()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      char[] charArray0 = new char[1];
      Inet4Address inet4Address0 = (Inet4Address)InetAddress.getByName((String) null);
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken((String) null, charArray0, true, (InetAddress) inet4Address0);
      boolean boolean0 = simpleAccountRealm0.supports((AuthenticationToken) usernamePasswordToken0);
      assertEquals("org.jsecurity.realm.SimpleAccountRealm_4", simpleAccountRealm0.getName());
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 org.jsecurity.realm.AuthenticatingRealm.supports(Lorg/jsecurity/authc/AuthenticationToken;)Z: I3 Branch 1 IFNULL L165 - true
   * 2 org.jsecurity.realm.AuthenticatingRealm.<init>()V: root-Branch
   */
  @Test
  public void test4()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      boolean boolean0 = simpleAccountRealm0.supports((AuthenticationToken) null);
      assertEquals("org.jsecurity.realm.SimpleAccountRealm_12", simpleAccountRealm0.getName());
      assertEquals(false, boolean0);
  }
}
