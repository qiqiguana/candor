/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.io;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import org.jsecurity.io.IniResource;
import org.jsecurity.io.ResourceException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TextResourceEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      IniResource iniResource0 = null;
      try {
        iniResource0 = new IniResource("F:Z4%_S,Lz)Na=J", "F:Z4%_S,Lz)Na=J");
        fail("Expecting exception: ResourceException");
      } catch(ResourceException e) {
        /*
         * Unable to load text resource from the resource path [F:Z4%_S,Lz)Na=J]
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (int) (byte)0, (int) (byte)0);
      IniResource iniResource0 = new IniResource((InputStream) byteArrayInputStream0);
      assertNull(iniResource0.getCharsetName());
  }

  @Test
  public void test2()  throws Throwable  {
      IniResource iniResource0 = null;
      try {
        iniResource0 = new IniResource((String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * 'resourcePath' argument cannot be null.
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      InputStreamReader inputStreamReader0 = new InputStreamReader((InputStream) byteArrayInputStream0);
      BufferedReader bufferedReader0 = new BufferedReader((Reader) inputStreamReader0);
      IniResource iniResource0 = new IniResource((Reader) bufferedReader0);
      assertNull(iniResource0.getCharsetName());
  }
}
