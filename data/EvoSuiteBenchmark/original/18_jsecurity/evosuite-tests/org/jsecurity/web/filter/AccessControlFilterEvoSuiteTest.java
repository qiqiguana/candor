/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.web.filter;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import org.jsecurity.web.filter.authc.FormAuthenticationFilter;
import org.jsecurity.web.filter.authc.UserFilter;
import org.jsecurity.web.filter.authz.PermissionsAuthorizationFilter;

@RunWith(EvoSuiteRunner.class)
public class AccessControlFilterEvoSuiteTest {


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 org.jsecurity.web.filter.AccessControlFilter.getLoginUrl()Ljava/lang/String;: root-Branch
   * 2 org.jsecurity.web.filter.AccessControlFilter.isLoginRequest(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)Z: root-Branch
   * 3 org.jsecurity.web.filter.AccessControlFilter.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      UserFilter userFilter0 = new UserFilter();
      try {
        userFilter0.onPreHandle((ServletRequest) null, (ServletResponse) null, (Object) ".FILTERED");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 org.jsecurity.web.filter.AccessControlFilter.setLoginUrl(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      FormAuthenticationFilter formAuthenticationFilter0 = new FormAuthenticationFilter();
      assertEquals("rememberMe", formAuthenticationFilter0.getRememberMeParam());
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 org.jsecurity.web.filter.AccessControlFilter.getSubject(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)Lorg/jsecurity/subject/Subject;: root-Branch
   * 2 org.jsecurity.web.filter.AccessControlFilter.onPreHandle(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljava/lang/Object;)Z: I7 Branch 1 IFNE L145 - true
   * 3 org.jsecurity.web.filter.AccessControlFilter.<init>()V: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      PermissionsAuthorizationFilter permissionsAuthorizationFilter0 = new PermissionsAuthorizationFilter();
      boolean boolean0 = permissionsAuthorizationFilter0.onPreHandle((ServletRequest) null, (ServletResponse) null, (Object) null);
      assertEquals(true, boolean0);
  }
}
