/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.web.servlet;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import org.jsecurity.web.filter.authc.AnonymousFilter;
import org.jsecurity.web.filter.authc.BasicHttpAuthenticationFilter;
import org.jsecurity.web.filter.authc.FormAuthenticationFilter;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AdviceFilterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AnonymousFilter anonymousFilter0 = new AnonymousFilter();
      try {
        anonymousFilter0.doFilterInternal((ServletRequest) null, (ServletResponse) null, (FilterChain) null);
        fail("Expecting exception: ServletException");
      } catch(ServletException e) {
        /*
         * Filter execution resulted in an unexpected Exception (not IOException or ServletException as the Filter api recommends).  Wrapping in ServletException and propagating.
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      FormAuthenticationFilter formAuthenticationFilter0 = new FormAuthenticationFilter();
      formAuthenticationFilter0.postHandle((ServletRequest) null, (ServletResponse) null);
      assertEquals("password", formAuthenticationFilter0.getPasswordParam());
  }

  @Test
  public void test2()  throws Throwable  {
      BasicHttpAuthenticationFilter basicHttpAuthenticationFilter0 = new BasicHttpAuthenticationFilter();
      basicHttpAuthenticationFilter0.cleanup((ServletRequest) null, (ServletResponse) null, (Exception) null);
      assertEquals("BASIC", basicHttpAuthenticationFilter0.getAuthcScheme());
  }
}
