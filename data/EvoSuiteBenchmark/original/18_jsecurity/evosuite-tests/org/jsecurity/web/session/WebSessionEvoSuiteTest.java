/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.web.session;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.net.Inet4Address;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.jsecurity.session.Session;
import org.jsecurity.web.servlet.JSecurityHttpSession;
import org.jsecurity.web.session.WebSession;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class WebSessionEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          JSecurityHttpSession jSecurityHttpSession0 = new JSecurityHttpSession((Session) null, (HttpServletRequest) null, (ServletContext) null);
          Inet4Address inet4Address0 = (Inet4Address)InetAddress.getLocalHost();
          WebSession webSession0 = null;
          try {
            webSession0 = new WebSession((HttpSession) jSecurityHttpSession0, (InetAddress) inet4Address0);
            fail("Expecting exception: IllegalArgumentException");
          } catch(IllegalArgumentException e) {
            /*
             * HttpSession constructor argument cannot be an instance of JSecurityHttpSession.  This is enforced to prevent circular dependencies and infinite loops.
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test1()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          Inet4Address inet4Address0 = (Inet4Address)InetAddress.getLocalHost();
          WebSession webSession0 = null;
          try {
            webSession0 = new WebSession((HttpSession) null, (InetAddress) inet4Address0);
            fail("Expecting exception: IllegalArgumentException");
          } catch(IllegalArgumentException e) {
            /*
             * HttpSession constructor argument cannot be null.
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }
}
