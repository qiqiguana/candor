/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.web.servlet;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.servlet.ServletRequest;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.jsecurity.config.Configuration;
import org.jsecurity.mgt.SecurityManager;
import org.jsecurity.web.DefaultWebSecurityManager;
import org.jsecurity.web.config.IniWebConfiguration;
import org.jsecurity.web.config.WebConfiguration;
import org.jsecurity.web.servlet.JSecurityFilter;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JSecurityFilterEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          JSecurityFilter jSecurityFilter0 = new JSecurityFilter();
          IniWebConfiguration iniWebConfiguration0 = new IniWebConfiguration();
          DefaultWebSecurityManager defaultWebSecurityManager0 = (DefaultWebSecurityManager)jSecurityFilter0.ensureSecurityManager((Configuration) iniWebConfiguration0);
          assertNotNull(defaultWebSecurityManager0);
          
          jSecurityFilter0.setSecurityManager((SecurityManager) defaultWebSecurityManager0);
          boolean boolean0 = jSecurityFilter0.isHttpSessions();
          assertEquals(true, boolean0);
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test1()  throws Throwable  {
      JSecurityFilter jSecurityFilter0 = new JSecurityFilter();
      IniWebConfiguration iniWebConfiguration0 = new IniWebConfiguration();
      jSecurityFilter0.setConfiguration((WebConfiguration) iniWebConfiguration0);
      assertEquals(true, jSecurityFilter0.isHttpSessions());
  }

  @Test
  public void test2()  throws Throwable  {
      JSecurityFilter jSecurityFilter0 = new JSecurityFilter();
      jSecurityFilter0.destroy();
      assertEquals(true, jSecurityFilter0.isHttpSessions());
  }

  @Test
  public void test3()  throws Throwable  {
      JSecurityFilter jSecurityFilter0 = new JSecurityFilter();
      boolean boolean0 = jSecurityFilter0.isHttpSessions();
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          JSecurityFilter jSecurityFilter0 = new JSecurityFilter();
          IniWebConfiguration iniWebConfiguration0 = (IniWebConfiguration)jSecurityFilter0.configure();
          DefaultWebSecurityManager defaultWebSecurityManager0 = (DefaultWebSecurityManager)jSecurityFilter0.ensureSecurityManager((Configuration) iniWebConfiguration0);
          assertEquals("http", defaultWebSecurityManager0.getSessionMode());
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test5()  throws Throwable  {
      JSecurityFilter jSecurityFilter0 = new JSecurityFilter();
      try {
        jSecurityFilter0.onFilterConfigSet();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      JSecurityFilter jSecurityFilter0 = new JSecurityFilter();
      // Undeclared exception!
      try {
        jSecurityFilter0.getInetAddress((ServletRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      JSecurityFilter jSecurityFilter0 = new JSecurityFilter();
      jSecurityFilter0.applyFilterConfig((WebConfiguration) null);
      assertEquals(true, jSecurityFilter0.isHttpSessions());
  }
}
