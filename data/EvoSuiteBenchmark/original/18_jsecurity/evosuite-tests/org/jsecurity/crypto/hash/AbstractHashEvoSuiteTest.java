/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.crypto.hash;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.jsecurity.crypto.hash.Md2Hash;
import org.jsecurity.crypto.hash.Md5Hash;
import org.jsecurity.crypto.hash.Sha1Hash;
import org.jsecurity.crypto.hash.Sha384Hash;
import org.jsecurity.crypto.hash.Sha512Hash;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AbstractHashEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Sha1Hash sha1Hash0 = new Sha1Hash((Object) "UTF-8", (Object) "UTF-8", 10);
      assertNotNull(sha1Hash0);
      
      int int0 = sha1Hash0.hashCode();
      assertEquals(1630625995, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      Md5Hash md5Hash0 = new Md5Hash((Object) "6e7125b78644568854bc55d4e8b8a497", (Object) "\u0000\uFFFD\u0000");
      assertNotNull(md5Hash0);
      
      byte[] byteArray1 = md5Hash0.hash(byteArray0, byteArray0);
      assertEquals("4872e06da5ca85aa3dae4698b950b38b", md5Hash0.toString());
      assertNotNull(byteArray1);
      assertEquals("SHLgbaXKhao9rkaYuVCziw==", md5Hash0.toBase64());
  }

  @Test
  public void test2()  throws Throwable  {
      Md5Hash md5Hash0 = Md5Hash.fromBase64String("");
      byte[] byteArray0 = new byte[7];
      byte[] byteArray1 = md5Hash0.hash(byteArray0);
      assertNotNull(byteArray1);
      assertNotSame(byteArray0, byteArray1);
  }

  @Test
  public void test3()  throws Throwable  {
      Sha384Hash sha384Hash0 = Sha384Hash.fromBase64String("^!)fYV%$?.ZWo");
      String string0 = sha384Hash0.toString();
      String string1 = sha384Hash0.toString();
      assertSame(string1, string0);
      assertEquals("7d85590000", string1);
      assertNotNull(string1);
  }

  @Test
  public void test4()  throws Throwable  {
      Md2Hash md2Hash0 = new Md2Hash((Object) "UTF-8");
      assertNotNull(md2Hash0);
      assertEquals("bnElt4ZEVohUvFXU6Liklw==", md2Hash0.toBase64());
  }

  @Test
  public void test5()  throws Throwable  {
      Sha1Hash sha1Hash0 = Sha1Hash.fromHexString("");
      String string0 = sha1Hash0.toBase64();
      String string1 = sha1Hash0.toBase64();
      assertSame(string1, string0);
      assertNotNull(string1);
      assertEquals("", string1);
  }

  @Test
  public void test6()  throws Throwable  {
      Sha512Hash sha512Hash0 = new Sha512Hash();
      boolean boolean0 = sha512Hash0.equals((Object) "");
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      Sha512Hash sha512Hash0 = new Sha512Hash();
      Md2Hash md2Hash0 = new Md2Hash();
      boolean boolean0 = sha512Hash0.equals((Object) md2Hash0);
      assertEquals(true, boolean0);
  }
}
