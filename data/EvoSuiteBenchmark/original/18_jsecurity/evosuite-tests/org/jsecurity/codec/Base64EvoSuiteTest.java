/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.codec;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.jsecurity.codec.Base64;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class Base64EvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Base64 base64_0 = new Base64();
      assertNotNull(base64_0);
  }

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte[] byteArray1 = Base64.encodeChunked(byteArray0);
      assertNotNull(byteArray1);
      
      boolean boolean0 = Base64.isBase64(byteArray1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      String string0 = Base64.decodeToString("]/rEgawO==#-.p.jjU]");
      assertNotNull(string0);
      assertEquals("\uFFFD\uFFFD k\u0003\u0000\uFFFD\uFFFD\uFFFD", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = Base64.decode("");
      byte[] byteArray1 = Base64.encode(byteArray0, true);
      assertFalse(byteArray1.equals(byteArray0));
  }

  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-114);
      boolean boolean0 = Base64.isBase64(byteArray0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte[] byteArray1 = Base64.decode(byteArray0);
      assertNotNull(byteArray1);
      
      boolean boolean0 = Base64.isBase64(byteArray1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[43];
      byteArray0[19] = (byte)9;
      byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
      assertNotSame(byteArray1, byteArray0);
      assertNotNull(byteArray1);
  }

  @Test
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[40];
      byteArray0[3] = (byte)32;
      byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
      assertNotSame(byteArray1, byteArray0);
      assertNotNull(byteArray1);
  }

  @Test
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte[] byteArray1 = Base64.encodeChunked(byteArray0);
      byte[] byteArray2 = Base64.encode(byteArray1, true);
      assertFalse(byteArray0.equals(byteArray2));
  }

  @Test
  public void test9()  throws Throwable  {
      byte[] byteArray0 = new byte[43];
      byteArray0[0] = (byte) (-93);
      byte[] byteArray1 = Base64.encodeChunked(byteArray0);
      assertFalse(byteArray0.equals(byteArray1));
  }

  @Test
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[43];
      byteArray0[1] = (byte) (-93);
      byte[] byteArray1 = Base64.encodeChunked(byteArray0);
      assertFalse(byteArray1.equals(byteArray0));
  }

  @Test
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[43];
      byteArray0[17] = (byte) (-93);
      byte[] byteArray1 = Base64.encodeChunked(byteArray0);
      assertFalse(byteArray0.equals(byteArray1));
  }

  @Test
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[40];
      byte[] byteArray1 = Base64.encode(byteArray0, true);
      byte[] byteArray2 = Base64.encodeChunked(byteArray1);
      assertFalse(byteArray1.equals(byteArray2));
  }

  @Test
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte) (-30);
      String string0 = Base64.encodeToString(byteArray0);
      assertNotNull(string0);
      assertEquals("AAAA4g==", string0);
  }

  @Test
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-114);
      byte[] byteArray1 = Base64.encode(byteArray0);
      assertFalse(byteArray0.equals(byteArray1));
  }

  @Test
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-114);
      byte[] byteArray1 = Base64.encode(byteArray0);
      assertFalse(byteArray1.equals(byteArray0));
  }

  @Test
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      byteArray0[10] = (byte)61;
      byte[] byteArray1 = Base64.decode(byteArray0);
      assertFalse(byteArray0.equals(byteArray1));
  }

  @Test
  public void test17()  throws Throwable  {
      String string0 = Base64.decodeToString("AAAA4g==");
      assertEquals("\u0000\u0000\u0000\uFFFD", string0);
      assertNotNull(string0);
  }
}
