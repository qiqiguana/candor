/*
 * This file was automatically generated by EvoSuite
 */

package org.mozilla.javascript;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.CharArrayReader;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import org.evosuite.testcase.CodeUnderTestException;
import org.junit.BeforeClass;
import org.mozilla.javascript.CompilerEnvirons;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ErrorReporter;
import org.mozilla.javascript.EvaluatorException;
import org.mozilla.javascript.Parser;
import org.mozilla.javascript.tools.ToolErrorReporter;

@RunWith(EvoSuiteRunner.class)
public class ParserEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      // Undeclared exception!
      try {
        Context.getContext();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * No Context associated with current Thread
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try {
        parser0.parse("(O8::%Yxd$v", "(O8::%Yxd$v", 1359);
        fail("Expecting exception: EvaluatorException");
      } catch(EvaluatorException e) {
        /*
         * missing name after :: operator ((O8::%Yxd$v#1359)
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      StringReader stringReader0 = new StringReader("msg.method.not.found");
      parser0.parse((Reader) stringReader0, "msg.method.not.found", 0);
      assertEquals(-1, stringReader0.read());
      
      // Undeclared exception!
      try {
        parser0.defineSymbol((-395), true, "msg.method.not.found");
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * FAILED ASSERTION
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context.getCurrentContext();
  }

  @Test
  public void test4()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try {
        parser0.parse("Nv?w-{Nh9}AR#", "Nv?w-{Nh9}AR#", 152);
        fail("Expecting exception: EvaluatorException");
      } catch(EvaluatorException e) {
        /*
         * missing : after property id (Nv?w-{Nh9}AR##152)
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try {
        parser0.getCurrentLineNumber();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Parser parser0 = new Parser((CompilerEnvirons) null, (ErrorReporter) null);
      String string0 = parser0.getEncodedSource();
      assertNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context.getCurrentContext();
  }

  @Test
  public void test8()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      parser0.addStrictWarning("msg.method.not.found", "msg.method.not.found");
      assertNull(parser0.getEncodedSource());
  }

  @Test
  public void test9()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) toolErrorReporter0);
      // Undeclared exception!
      try {
        parser0.addWarning("msg.syntax", "get");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) toolErrorReporter0);
      // Undeclared exception!
      try {
        parser0.parse(".N:j20&fJ;2n'$YlL8", ".N:j20&fJ;2n'$YlL8", (-38));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * -38
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) toolErrorReporter0);
      // Undeclared exception!
      try {
        parser0.parse("<0prw4Z69k_5d", "<0prw4Z69k_5d", 1807);
        fail("Expecting exception: EvaluatorException");
      } catch(EvaluatorException e) {
        /*
         * Compilation produced 2 syntax errors. (<0prw4Z69k_5d#1807)
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      // Undeclared exception!
      try {
        parser0.parse("hPQ:Dm7<),Rm>", "hPQ:Dm7<),Rm>", 1918);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try {
        parser0.parse("p;{*eO5#SV|-!eWrZ", "p;{*eO5#SV|-!eWrZ", (-1));
        fail("Expecting exception: EvaluatorException");
      } catch(EvaluatorException e) {
        /*
         * illegal character
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) toolErrorReporter0);
      char[] charArray0 = new char[10];
      charArray0[0] = '@';
      charArray0[1] = 'M';
      charArray0[5] = '}';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      // Undeclared exception!
      try {
        parser0.parse((Reader) charArrayReader0, "", (-1));
        fail("Expecting exception: EvaluatorException");
      } catch(EvaluatorException e) {
        /*
         * Compilation produced 7 syntax errors.
         */
      }
  }

  @Test
  public void test15()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) toolErrorReporter0);
      char[] charArray0 = new char[10];
      charArray0[0] = '@';
      charArray0[7] = '2';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      // Undeclared exception!
      try {
        parser0.parse((Reader) charArrayReader0, "", (-1));
        fail("Expecting exception: EvaluatorException");
      } catch(EvaluatorException e) {
        /*
         * Compilation produced 12 syntax errors.
         */
      }
  }

  @Test
  public void test16()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) toolErrorReporter0);
      // Undeclared exception!
      try {
        parser0.parse("5,*q]7PQUNrr);u", "5,*q]7PQUNrr);u", (-1));
        fail("Expecting exception: EvaluatorException");
      } catch(EvaluatorException e) {
        /*
         * Compilation produced 1 syntax errors.
         */
      }
  }

  @Test
  public void test17()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try {
        parser0.parse("NHPI>Byo%ha=887", "NHPI>Byo%ha=887", (-842));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * -842
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      // Undeclared exception!
      try {
        parser0.parse("S9T|-RU3+#@b\"rH", "S9T|-RU3+#@b\"rH", 1907);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test19()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) toolErrorReporter0);
      // Undeclared exception!
      try {
        parser0.parse("1^v<", "1^v<", (-1440));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * -1440
         */
      }
  }

  @Test
  public void test20()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      // Undeclared exception!
      try {
        parser0.parse("zHNG==y6%\"7", (String) null, (-161));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test21()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try {
        parser0.parse("(Lorg/mozilla/javascript/Script;[Ljava/lang/String;)V", "(Lorg/mozilla/javascript/Script;[Ljava/lang/String;)V", 308);
        fail("Expecting exception: EvaluatorException");
      } catch(EvaluatorException e) {
        /*
         * missing ) in parenthetical ((Lorg/mozilla/javascript/Script;[Ljava/lang/String;)V#308)
         */
      }
  }

  @Test
  public void test22()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try {
        parser0.parse("~ &k", "~ &k", 0);
        fail("Expecting exception: EvaluatorException");
      } catch(EvaluatorException e) {
        /*
         * syntax error
         */
      }
  }

  @Test
  public void test23()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setXmlAvailable(false);
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) toolErrorReporter0);
      // Undeclared exception!
      try {
        parser0.parse("<0prw4Z69k_5d", "<0prw4Z69k_5d", 1807);
        fail("Expecting exception: EvaluatorException");
      } catch(EvaluatorException e) {
        /*
         * Compilation produced 1 syntax errors. (<0prw4Z69k_5d#1807)
         */
      }
  }

  @Test
  public void test24()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try {
        parser0.parse("p(tr{", "p(tr{", 1864);
        fail("Expecting exception: EvaluatorException");
      } catch(EvaluatorException e) {
        /*
         * missing ) after argument list (p(tr{#1864)
         */
      }
  }

  @Test
  public void test25()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) toolErrorReporter0);
      // Undeclared exception!
      try {
        parser0.parse("(new ", "(new ", (-1));
        fail("Expecting exception: EvaluatorException");
      } catch(EvaluatorException e) {
        /*
         * Compilation produced 1 syntax errors.
         */
      }
  }

  @Test
  public void test26()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try {
        parser0.parse("[vYz,7[p8v8)!J^w!<", "[vYz,7[p8v8)!J^w!<", 0);
        fail("Expecting exception: EvaluatorException");
      } catch(EvaluatorException e) {
        /*
         * missing ] in index expression
         */
      }
  }

  @Test
  public void test27()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) toolErrorReporter0);
      // Undeclared exception!
      try {
        parser0.parse("h.@;IBf", "h.@;IBf", (-1230));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * -1230
         */
      }
  }

  @Test
  public void test28()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try {
        parser0.parse("[native code for ", "[native code for ", (-1456));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * -1456
         */
      }
  }
}
