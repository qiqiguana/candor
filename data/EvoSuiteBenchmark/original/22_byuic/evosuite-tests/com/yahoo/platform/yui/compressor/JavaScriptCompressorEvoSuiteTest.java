/*
 * This file was automatically generated by EvoSuite
 */

package com.yahoo.platform.yui.compressor;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.yahoo.platform.yui.compressor.JavaScriptCompressor;
import java.io.CharArrayReader;
import java.io.IOException;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import org.junit.BeforeClass;
import org.mozilla.javascript.ErrorReporter;
import org.mozilla.javascript.EvaluatorException;
import org.mozilla.javascript.tools.ToolErrorReporter;

@RunWith(EvoSuiteRunner.class)
public class JavaScriptCompressorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      StringReader stringReader0 = new StringReader("eval");
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
      JavaScriptCompressor javaScriptCompressor0 = new JavaScriptCompressor((Reader) stringReader0, (ErrorReporter) toolErrorReporter0);
      // Undeclared exception!
      try {
        javaScriptCompressor0.compress((Writer) null, 1492, false, false, true, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6");
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
      JavaScriptCompressor javaScriptCompressor0 = new JavaScriptCompressor((Reader) stringReader0, (ErrorReporter) toolErrorReporter0);
      // Undeclared exception!
      try {
        javaScriptCompressor0.compress((Writer) null, 0, true, true, true, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      StringReader stringReader0 = new StringReader("T");
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
      JavaScriptCompressor javaScriptCompressor0 = new JavaScriptCompressor((Reader) stringReader0, (ErrorReporter) toolErrorReporter0);
      try {
        javaScriptCompressor0.compress((Writer) pipedWriter0, 0, false, false, false, false);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * Pipe not connected
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      char[] charArray0 = new char[10];
      charArray0[0] = 'x';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0, 0, 1);
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
      JavaScriptCompressor javaScriptCompressor0 = new JavaScriptCompressor((Reader) charArrayReader0, (ErrorReporter) toolErrorReporter0);
      StringWriter stringWriter0 = new StringWriter(1734);
      javaScriptCompressor0.compress((Writer) stringWriter0, (-110), true, false, false, true);
  }

  @Test
  public void test4()  throws Throwable  {
      StringReader stringReader0 = new StringReader("java.lang.Boolean");
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
      JavaScriptCompressor javaScriptCompressor0 = new JavaScriptCompressor((Reader) stringReader0, (ErrorReporter) toolErrorReporter0);
      // Undeclared exception!
      try {
        javaScriptCompressor0.compress((Writer) null, (-18), true, true, true, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
