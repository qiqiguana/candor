/*
 * This file was automatically generated by EvoSuite
 */

package com.gbshape.dbe.sqlserver;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.gbshape.dbe.sqlserver.SqlserverTableStructure;
import com.gbshape.dbe.struts.bean.ColumnBean;
import com.gbshape.dbe.struts.bean.DBDataBean;
import com.gbshape.dbe.struts.bean.TableStatusBean;
import com.gbshape.dbe.struts.bean.TableStructureBean;
import com.gbshape.dbe.struts.form.ColumnForm;
import com.gbshape.dbe.xml.CreateTableXmlBean;
import java.util.ArrayList;
import javax.servlet.http.HttpServletRequest;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SqlserverTableStructureEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      // Undeclared exception!
      try {
        sqlserverTableStructure0.drop((HttpServletRequest) null, (DBDataBean) null, "kC~~'=");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      // Undeclared exception!
      try {
        sqlserverTableStructure0.addUnique((HttpServletRequest) null, dBDataBean0, "_]O^qP(R`o", "_]O^qP(R`o");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      // Undeclared exception!
      try {
        sqlserverTableStructure0.dropIndex((HttpServletRequest) null, dBDataBean0, "", "", "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      // Undeclared exception!
      try {
        sqlserverTableStructure0.dropUnique((HttpServletRequest) null, dBDataBean0, "z", "z", "z");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      // Undeclared exception!
      try {
        sqlserverTableStructure0.alterDrop((HttpServletRequest) null, dBDataBean0, "IgH=q&rm", "IgH=q&rm");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      // Undeclared exception!
      try {
        sqlserverTableStructure0.addIndex((HttpServletRequest) null, dBDataBean0, "r'jO+%&%cNpe^n", "r'jO+%&%cNpe^n");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      // Undeclared exception!
      try {
        sqlserverTableStructure0.dropPrimary((HttpServletRequest) null, dBDataBean0, "Finish event threw exceptin", "Finish event threw exceptin", "Finish event threw exceptin");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      // Undeclared exception!
      try {
        sqlserverTableStructure0.truncate((HttpServletRequest) null, (DBDataBean) null, "qWz`");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      TableStatusBean tableStatusBean0 = sqlserverTableStructure0.getStatus(dBDataBean0, "Finish event threw exceptin", false);
      assertEquals("Finish event threw exceptin", tableStatusBean0.getTableName());
  }

  @Test
  public void test9()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      TableStatusBean tableStatusBean0 = sqlserverTableStructure0.getStatus(dBDataBean0, "noInpu", true);
      assertEquals("noInpu", tableStatusBean0.getTableName());
  }

  @Test
  public void test10()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      TableStructureBean tableStructureBean0 = sqlserverTableStructure0.getStructure(dBDataBean0, "r'jO+%&%cNpe^n");
      assertNotNull(tableStructureBean0);
      assertEquals("r'jO+%&%cNpe^n", tableStructureBean0.getTableName());
  }

  @Test
  public void test11()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      // Undeclared exception!
      try {
        sqlserverTableStructure0.getStructure((DBDataBean) null, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      ColumnBean columnBean0 = new ColumnBean();
      ColumnForm columnForm0 = new ColumnForm();
      columnForm0.setNotnull("pIyxg*QAlM|5rbgV5");
      ArrayList<Object> arrayList0 = sqlserverTableStructure0.alterModify((HttpServletRequest) null, dBDataBean0, "pIyxg*QAlM|5rbgV5", columnBean0, columnForm0);
      assertNotNull(arrayList0);
      assertEquals("[ALTER TABLE pIyxg*QAlM|5rbgV5 CHANGE      DEFAULT '' ]", arrayList0.toString());
  }

  @Test
  public void test13()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      ColumnForm columnForm0 = new ColumnForm();
      columnForm0.setNotnull("true");
      ColumnBean columnBean0 = new ColumnBean();
      ArrayList<Object> arrayList0 = sqlserverTableStructure0.alterModify((HttpServletRequest) null, dBDataBean0, "true", columnBean0, columnForm0);
      assertNotNull(arrayList0);
      assertEquals("[ALTER TABLE true CHANGE      DEFAULT ''  NOT NULL ]", arrayList0.toString());
  }

  @Test
  public void test14()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      ColumnForm columnForm0 = new ColumnForm();
      columnForm0.setDefaultValue("true");
      // Undeclared exception!
      try {
        sqlserverTableStructure0.alterAdd((HttpServletRequest) null, dBDataBean0, "true", columnForm0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * StringEquals is not supposed to work on a null caller
         */
      }
  }

  @Test
  public void test15()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      ColumnForm columnForm0 = new ColumnForm();
      columnForm0.setNotnull("pIyxg*QAlM|5rbgV5");
      ArrayList<Object> arrayList0 = sqlserverTableStructure0.alterAdd((HttpServletRequest) null, dBDataBean0, "pIyxg*QAlM|5rbgV5", columnForm0);
      assertNotNull(arrayList0);
      assertEquals("[ALTER TABLE pIyxg*QAlM|5rbgV5 ADD    ]", arrayList0.toString());
  }

  @Test
  public void test16()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      ColumnForm columnForm0 = new ColumnForm();
      columnForm0.setNotnull("true");
      ArrayList<Object> arrayList0 = sqlserverTableStructure0.alterAdd((HttpServletRequest) null, dBDataBean0, "true", columnForm0);
      assertEquals("[ALTER TABLE true ADD     NOT NULL ]", arrayList0.toString());
      assertNotNull(arrayList0);
  }

  @Test
  public void test17()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      createTableXmlBean0.addColumn(columnBean0);
      ArrayList<Object> arrayList0 = sqlserverTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertNotNull(arrayList0);
      assertEquals("[CREATE TABLE '' ()]", arrayList0.toString());
  }

  @Test
  public void test18()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      createTableXmlBean0.addColumn((ColumnBean) null);
      ArrayList<Object> arrayList0 = sqlserverTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertNotNull(arrayList0);
      assertEquals("[CREATE TABLE '' ()]", arrayList0.toString());
  }

  @Test
  public void test19()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      createTableXmlBean0.addColumn(columnBean0);
      columnBean0.setName("9,q_&VMv$-TV\"r%5");
      columnBean0.setLen(1118);
      ArrayList<Object> arrayList0 = sqlserverTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertNotNull(arrayList0);
      assertEquals("[CREATE TABLE '' (9,q_&VMv$-TV\"r%5   (1118)  NOT NULL )]", arrayList0.toString());
  }

  @Test
  public void test20()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      createTableXmlBean0.addColumn(columnBean0);
      columnBean0.setName("9,q_&VMv$-TV\"r%5");
      columnBean0.setDefaultValue("9,q_&VMv$-TV\"r%5");
      ArrayList<Object> arrayList0 = sqlserverTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertNotNull(arrayList0);
      assertEquals("[CREATE TABLE '' (9,q_&VMv$-TV\"r%5   NOT NULL  default '9,q_&VMv$-TV\"r%5' )]", arrayList0.toString());
  }

  @Test
  public void test21()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      columnBean0.setName("r'jO+%&%cNpe^n");
      createTableXmlBean0.addColumn(columnBean0);
      columnBean0.setComment("r'jO+%&%cNpe^n");
      ArrayList<Object> arrayList0 = sqlserverTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertNotNull(arrayList0);
      assertEquals("[CREATE TABLE '' (r'jO+%&%cNpe^n   NOT NULL  COMMENT 'r'jO+%&%cNpe^n' )]", arrayList0.toString());
  }

  @Test
  public void test22()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      createTableXmlBean0.addColumn(columnBean0);
      columnBean0.setName("9,q_&VMv$-TV\"r%5");
      columnBean0.setExtra("9,q_&VMv$-TV\"r%5");
      ArrayList<Object> arrayList0 = sqlserverTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertEquals("[CREATE TABLE '' (9,q_&VMv$-TV\"r%5   NOT NULL  9,q_&VMv$-TV\"r%5 )]", arrayList0.toString());
      assertNotNull(arrayList0);
  }

  @Test
  public void test23()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      columnBean0.setName("r'jO+%&%cNpe^n");
      createTableXmlBean0.addColumn(columnBean0);
      columnBean0.setKey(true);
      createTableXmlBean0.addColumn(columnBean0);
      ArrayList<Object> arrayList0 = sqlserverTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertEquals("[CREATE TABLE '' (r'jO+%&%cNpe^n   NOT NULL ,r'jO+%&%cNpe^n   NOT NULL , PRIMARY KEY  (r'jO+%&%cNpe^n,r'jO+%&%cNpe^n))]", arrayList0.toString());
      assertNotNull(arrayList0);
  }

  @Test
  public void test24()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      columnBean0.setName("r'jO+%&%cNpe^n");
      createTableXmlBean0.addColumn(columnBean0);
      columnBean0.setIndex(true);
      createTableXmlBean0.addColumn(columnBean0);
      ArrayList<Object> arrayList0 = sqlserverTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertEquals("[CREATE TABLE '' (r'jO+%&%cNpe^n   NOT NULL ,r'jO+%&%cNpe^n   NOT NULL , INDEX  (r'jO+%&%cNpe^n,r'jO+%&%cNpe^n))]", arrayList0.toString());
      assertNotNull(arrayList0);
  }

  @Test
  public void test25()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      columnBean0.setName("r'jO+%&%cNpe^n");
      columnBean0.setUnique(true);
      createTableXmlBean0.addColumn(columnBean0);
      createTableXmlBean0.addColumn(columnBean0);
      ArrayList<Object> arrayList0 = sqlserverTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertEquals("[CREATE TABLE '' (r'jO+%&%cNpe^n   NOT NULL ,r'jO+%&%cNpe^n   NOT NULL , UNIQUE  (r'jO+%&%cNpe^n,r'jO+%&%cNpe^n))]", arrayList0.toString());
      assertNotNull(arrayList0);
  }

  @Test
  public void test26()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      createTableXmlBean0.setComment("r'jO+%&%cNpe^n");
      ArrayList<Object> arrayList0 = sqlserverTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertNotNull(arrayList0);
      assertEquals("[CREATE TABLE '' () COMMENT = 'r'jO+%&%cNpe^n' ]", arrayList0.toString());
  }

  @Test
  public void test27()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ArrayList<Object> arrayList0 = createTableXmlBean0.getColumns();
      ColumnBean columnBean0 = new ColumnBean();
      createTableXmlBean0.addColumn(columnBean0);
      // Undeclared exception!
      try {
        sqlserverTableStructure0.changePrimary((HttpServletRequest) null, dBDataBean0, "noInpu", (ArrayList) arrayList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test28()  throws Throwable  {
      SqlserverTableStructure sqlserverTableStructure0 = new SqlserverTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ArrayList<Object> arrayList0 = createTableXmlBean0.getColumns();
      ColumnBean columnBean0 = new ColumnBean();
      createTableXmlBean0.addColumn(columnBean0);
      createTableXmlBean0.addColumn(columnBean0);
      columnBean0.setName("noInpu");
      columnBean0.setKey(true);
      // Undeclared exception!
      try {
        sqlserverTableStructure0.changePrimary((HttpServletRequest) null, dBDataBean0, "noInpu", (ArrayList) arrayList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
