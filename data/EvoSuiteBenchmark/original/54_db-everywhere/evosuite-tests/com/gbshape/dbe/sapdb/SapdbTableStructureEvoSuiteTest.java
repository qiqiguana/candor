/*
 * This file was automatically generated by EvoSuite
 */

package com.gbshape.dbe.sapdb;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.gbshape.dbe.sapdb.SapdbTableStructure;
import com.gbshape.dbe.struts.bean.ColumnBean;
import com.gbshape.dbe.struts.bean.DBDataBean;
import com.gbshape.dbe.struts.bean.TableStatusBean;
import com.gbshape.dbe.struts.bean.TableStructureBean;
import com.gbshape.dbe.struts.form.ColumnForm;
import com.gbshape.dbe.xml.CreateTableXmlBean;
import java.util.ArrayList;
import javax.servlet.http.HttpServletRequest;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SapdbTableStructureEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      // Undeclared exception!
      try {
        sapdbTableStructure0.truncate((HttpServletRequest) null, dBDataBean0, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      // Undeclared exception!
      try {
        sapdbTableStructure0.drop((HttpServletRequest) null, dBDataBean0, "To!S7:(X.zr");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      // Undeclared exception!
      try {
        sapdbTableStructure0.dropIndex((HttpServletRequest) null, dBDataBean0, (String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      // Undeclared exception!
      try {
        sapdbTableStructure0.dropPrimary((HttpServletRequest) null, dBDataBean0, "", "", "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      // Undeclared exception!
      try {
        sapdbTableStructure0.dropUnique((HttpServletRequest) null, dBDataBean0, "eHna?mdvJw71t~*", "eHna?mdvJw71t~*", "eHna?mdvJw71t~*");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      // Undeclared exception!
      try {
        sapdbTableStructure0.alterDrop((HttpServletRequest) null, dBDataBean0, "", "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      TableStructureBean tableStructureBean0 = sapdbTableStructure0.getStructure(dBDataBean0, "$na'dwRkw71t*");
      assertNotNull(tableStructureBean0);
      assertEquals("$na'dwRkw71t*", tableStructureBean0.getTableName());
  }

  @Test
  public void test7()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      ColumnBean columnBean0 = new ColumnBean();
      ColumnForm columnForm0 = new ColumnForm();
      columnForm0.setDataType("Hna'dwRw71t*");
      // Undeclared exception!
      try {
        sapdbTableStructure0.alterModify((HttpServletRequest) null, dBDataBean0, "Hna'dwRw71t*", columnBean0, columnForm0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * StringEquals is not supposed to work on a null caller
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      ColumnBean columnBean0 = new ColumnBean();
      columnBean0.setDefaultValue((String) null);
      ColumnForm columnForm0 = new ColumnForm();
      columnForm0.setNotnull("eHna'mdvRw71t~*");
      ArrayList<Object> arrayList0 = sapdbTableStructure0.alterModify((HttpServletRequest) null, dBDataBean0, "eHna'mdvRw71t~*", columnBean0, columnForm0);
      assertEquals("[ALTER TABLE \"eHna'mdvRw71t~*\" COLUMN \"\" NOT NULL ]", arrayList0.toString());
      assertNotNull(arrayList0);
  }

  @Test
  public void test9()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      ColumnBean columnBean0 = new ColumnBean();
      ColumnForm columnForm0 = new ColumnForm();
      columnForm0.setDefaultValue((String) null);
      columnForm0.setNotnull("Hna'dwRw71t*");
      ArrayList<Object> arrayList0 = sapdbTableStructure0.alterModify((HttpServletRequest) null, dBDataBean0, "Hna'dwRw71t*", columnBean0, columnForm0);
      assertEquals("[ALTER TABLE \"Hna'dwRw71t*\" COLUMN \"\" NOT NULL ]", arrayList0.toString());
      assertNotNull(arrayList0);
  }

  @Test
  public void test10()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      ColumnBean columnBean0 = new ColumnBean();
      columnBean0.setDefaultValue("Hna'dwRw71t*");
      ColumnForm columnForm0 = new ColumnForm();
      columnForm0.setNotnull("Hna'dwRw71t*");
      ArrayList<Object> arrayList0 = sapdbTableStructure0.alterModify((HttpServletRequest) null, dBDataBean0, "Hna'dwRw71t*", columnBean0, columnForm0);
      assertNotNull(arrayList0);
      assertEquals("[ALTER TABLE \"Hna'dwRw71t*\" COLUMN \"\" NOT NULL , ALTER TABLE \"Hna'dwRw71t*\" COLUMN \"\" ALTER DEFAULT '' ]", arrayList0.toString());
  }

  @Test
  public void test11()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      ColumnBean columnBean0 = new ColumnBean();
      columnBean0.setComment((String) null);
      ColumnForm columnForm0 = new ColumnForm();
      columnForm0.setNotnull("Hna'dwRw71t*");
      ArrayList<Object> arrayList0 = sapdbTableStructure0.alterModify((HttpServletRequest) null, dBDataBean0, "Hna'dwRw71t*", columnBean0, columnForm0);
      assertNotNull(arrayList0);
      assertEquals("[ALTER TABLE \"Hna'dwRw71t*\" COLUMN \"\" NOT NULL ]", arrayList0.toString());
  }

  @Test
  public void test12()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      ColumnBean columnBean0 = new ColumnBean();
      columnBean0.setComment("eHna'mdvRw71t~*");
      ColumnForm columnForm0 = new ColumnForm();
      columnForm0.setNotnull("eHna'mdvRw71t~*");
      ArrayList<Object> arrayList0 = sapdbTableStructure0.alterModify((HttpServletRequest) null, dBDataBean0, "eHna'mdvRw71t~*", columnBean0, columnForm0);
      assertNotNull(arrayList0);
      assertEquals("[ALTER TABLE \"eHna'mdvRw71t~*\" COLUMN \"\" NOT NULL , COMMENT ON COLUMN \"eHna'mdvRw71t~*\".\"\" IS '' ]", arrayList0.toString());
  }

  @Test
  public void test13()  throws Throwable  {
      DBDataBean dBDataBean0 = new DBDataBean();
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      TableStatusBean tableStatusBean0 = sapdbTableStructure0.getStatus(dBDataBean0, "SNATyHt3pamzw,??", false);
      assertEquals("SNATyHt3pamzw,??", tableStatusBean0.getTableName());
  }

  @Test
  public void test14()  throws Throwable  {
      DBDataBean dBDataBean0 = new DBDataBean();
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      TableStatusBean tableStatusBean0 = sapdbTableStructure0.getStatus(dBDataBean0, "EkUS@,", true);
      assertEquals("EkUS@,", tableStatusBean0.getTableName());
      assertNotNull(tableStatusBean0);
  }

  @Test
  public void test15()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      ColumnForm columnForm0 = new ColumnForm();
      columnForm0.setDefaultValue("f");
      columnForm0.setNotnull("f");
      ArrayList<Object> arrayList0 = sapdbTableStructure0.alterAdd((HttpServletRequest) null, dBDataBean0, "", columnForm0);
      assertEquals("[ALTER TABLE \"\" ADD (\"\"  ), ALTER TABLE \"\" COLUMN \"\" NOT NULL , ALTER TABLE \"\" COLUMN \"\" ADD DEFAULT 'f' ]", arrayList0.toString());
      assertNotNull(arrayList0);
  }

  @Test
  public void test16()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      ColumnForm columnForm0 = new ColumnForm();
      columnForm0.setComment("f");
      columnForm0.setNotnull("f");
      ArrayList<Object> arrayList0 = sapdbTableStructure0.alterAdd((HttpServletRequest) null, dBDataBean0, "", columnForm0);
      assertEquals("[ALTER TABLE \"\" ADD (\"\"  ), ALTER TABLE \"\" COLUMN \"\" NOT NULL , COMMENT ON COLUMN \"\".\"\" IS 'f' ]", arrayList0.toString());
      assertNotNull(arrayList0);
  }

  @Test
  public void test17()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      createTableXmlBean0.addColumn(columnBean0);
      ArrayList<Object> arrayList0 = sapdbTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertNotNull(arrayList0);
      assertEquals("[CREATE TABLE  ()]", arrayList0.toString());
  }

  @Test
  public void test18()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      createTableXmlBean0.addColumn((ColumnBean) null);
      ArrayList<Object> arrayList0 = sapdbTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertNotNull(arrayList0);
      assertEquals("[CREATE TABLE  ()]", arrayList0.toString());
  }

  @Test
  public void test19()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      createTableXmlBean0.addColumn(columnBean0);
      columnBean0.setLen(403);
      columnBean0.setName(",uWloP-4R`+EM=/s");
      ArrayList<Object> arrayList0 = sapdbTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertEquals("[CREATE TABLE  (\",UWLOP-4R`+EM=/S\"   (403)  NOT NULL )]", arrayList0.toString());
      assertNotNull(arrayList0);
  }

  @Test
  public void test20()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      createTableXmlBean0.addColumn(columnBean0);
      columnBean0.setNullable(true);
      columnBean0.setName(",uWloP-4R`+EM=/s");
      ArrayList<Object> arrayList0 = sapdbTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertEquals("[CREATE TABLE  (\",UWLOP-4R`+EM=/S\"   NULL )]", arrayList0.toString());
      assertNotNull(arrayList0);
  }

  @Test
  public void test21()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      createTableXmlBean0.addColumn(columnBean0);
      columnBean0.setDefaultValue(",uWloP-4R`+EM=/s");
      columnBean0.setName(",uWloP-4R`+EM=/s");
      ArrayList<Object> arrayList0 = sapdbTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertNotNull(arrayList0);
      assertEquals("[CREATE TABLE  (\",UWLOP-4R`+EM=/S\"   NOT NULL  DEFAULT ',UWLOP-4R`+EM=/S' )]", arrayList0.toString());
  }

  @Test
  public void test22()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      createTableXmlBean0.addColumn(columnBean0);
      columnBean0.setName("eHna'mdvRw71t~*");
      columnBean0.setComment("eHna'mdvRw71t~*");
      ArrayList<Object> arrayList0 = sapdbTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertNotNull(arrayList0);
      assertEquals("[CREATE TABLE  (\"EHNA'MDVRW71T~*\"   NOT NULL ), COMMENT ON COLUMN \"\".\"EHNA'MDVRW71T~*\" IS 'EHNA'MDVRW71T~*' ]", arrayList0.toString());
  }

  @Test
  public void test23()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      columnBean0.setUnique(true);
      createTableXmlBean0.addColumn(columnBean0);
      columnBean0.setName("eHna'mdvRw71t~*");
      ArrayList<Object> arrayList0 = sapdbTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertNotNull(arrayList0);
      assertEquals("[CREATE TABLE  (\"EHNA'MDVRW71T~*\"   NOT NULL , UNIQUE(EHNA'MDVRW71T~*) )]", arrayList0.toString());
  }

  @Test
  public void test24()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      createTableXmlBean0.addColumn(columnBean0);
      createTableXmlBean0.addColumn(columnBean0);
      columnBean0.setKey(true);
      columnBean0.setName(",uWloP-4R`+EM=/s");
      ArrayList<Object> arrayList0 = sapdbTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertEquals("[CREATE TABLE  (\",UWLOP-4R`+EM=/S\"   NOT NULL ,\",UWLOP-4R`+EM=/S\"   NOT NULL , PRIMARY KEY  (\",UWLOP-4R`+EM=/S\",\",UWLOP-4R`+EM=/S\"))]", arrayList0.toString());
      assertNotNull(arrayList0);
  }

  @Test
  public void test25()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      createTableXmlBean0.setComment("a^;h4");
      ArrayList<Object> arrayList0 = sapdbTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertEquals("[CREATE TABLE  (), COMMENT ON TABLE \"\" IS 'A^;H4' ]", arrayList0.toString());
      assertNotNull(arrayList0);
  }

  @Test
  public void test26()  throws Throwable  {
      DBDataBean dBDataBean0 = new DBDataBean();
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      // Undeclared exception!
      try {
        sapdbTableStructure0.addUnique((HttpServletRequest) null, dBDataBean0, "EkUS@,", "EkUS@,");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test27()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      // Undeclared exception!
      try {
        sapdbTableStructure0.addUnique((HttpServletRequest) null, dBDataBean0, "!/wegDkSns\"t@Y", "!/wegDkSns\"t@Y");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test28()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      // Undeclared exception!
      try {
        sapdbTableStructure0.addIndex((HttpServletRequest) null, dBDataBean0, "$na'dwRkw71t*", "$na'dwRkw71t*");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test29()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      // Undeclared exception!
      try {
        sapdbTableStructure0.addIndex((HttpServletRequest) null, dBDataBean0, "OmF5P-;0X!>0&LCR=", "OmF5P-;0X!>0&LCR=");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test30()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ArrayList<Object> arrayList0 = createTableXmlBean0.getColumns();
      ColumnBean columnBean0 = new ColumnBean();
      createTableXmlBean0.addColumn(columnBean0);
      // Undeclared exception!
      try {
        sapdbTableStructure0.changePrimary((HttpServletRequest) null, dBDataBean0, "Ftzgnb\"uXoY!>Yf", (ArrayList) arrayList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test31()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      ArrayList<Object> arrayList0 = createTableXmlBean0.getColumns();
      columnBean0.setKey(true);
      createTableXmlBean0.addColumn(columnBean0);
      // Undeclared exception!
      try {
        sapdbTableStructure0.changePrimary((HttpServletRequest) null, dBDataBean0, "9$", (ArrayList) arrayList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test32()  throws Throwable  {
      SapdbTableStructure sapdbTableStructure0 = new SapdbTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      ArrayList<Object> arrayList0 = createTableXmlBean0.getColumns();
      columnBean0.setKey(true);
      createTableXmlBean0.addColumn(columnBean0);
      columnBean0.setNullable(true);
      // Undeclared exception!
      try {
        sapdbTableStructure0.changePrimary((HttpServletRequest) null, dBDataBean0, "9$", (ArrayList) arrayList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
