/*
 * This file was automatically generated by EvoSuite
 */

package com.gbshape.dbe.utils;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.gbshape.dbe.utils.IteratorException;
import com.gbshape.dbe.utils.ValueListHandler;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ValueListHandlerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ValueListHandler valueListHandler0 = new ValueListHandler();
      try {
        valueListHandler0.setIndex((-724));
        fail("Expecting exception: IteratorException");
      } catch(IteratorException e) {
        /*
         * 
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ValueListHandler valueListHandler0 = new ValueListHandler();
      Collection<Object> collection0 = valueListHandler0.getList();
      assertNull(collection0);
  }

  @Test
  public void test2()  throws Throwable  {
      ValueListHandler valueListHandler0 = new ValueListHandler();
      try {
        valueListHandler0.setList((List) null);
        fail("Expecting exception: IteratorException");
      } catch(IteratorException e) {
        /*
         * List empty
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ValueListHandler valueListHandler0 = new ValueListHandler();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      valueListHandler0.setList((List) linkedList0);
      int int0 = valueListHandler0.getCurrentIndex();
      assertEquals(0, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      ValueListHandler valueListHandler0 = new ValueListHandler();
      try {
        valueListHandler0.getSize();
        fail("Expecting exception: IteratorException");
      } catch(IteratorException e) {
        /*
         * 
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      ValueListHandler valueListHandler0 = new ValueListHandler();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      valueListHandler0.setList((List) linkedList0);
      int int0 = valueListHandler0.getSize();
      assertEquals(0, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      ValueListHandler valueListHandler0 = new ValueListHandler();
      try {
        valueListHandler0.getCurrentElement();
        fail("Expecting exception: IteratorException");
      } catch(IteratorException e) {
        /*
         * 
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      ValueListHandler valueListHandler0 = new ValueListHandler();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      valueListHandler0.setList((List) linkedList0);
      // Undeclared exception!
      try {
        valueListHandler0.getCurrentElement();
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      ValueListHandler valueListHandler0 = new ValueListHandler();
      try {
        valueListHandler0.getCurrentIndex();
        fail("Expecting exception: IteratorException");
      } catch(IteratorException e) {
        /*
         * 
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      ValueListHandler valueListHandler0 = new ValueListHandler();
      try {
        valueListHandler0.getPreviousElements((-1));
        fail("Expecting exception: IteratorException");
      } catch(IteratorException e) {
        /*
         * 
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      ValueListHandler valueListHandler0 = new ValueListHandler();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      valueListHandler0.setList((List) linkedList0);
      linkedList0.add("");
      valueListHandler0.setIndex(1);
      valueListHandler0.getPreviousElements((-724));
      assertEquals(1, valueListHandler0.getCurrentIndex());
  }

  @Test
  public void test11()  throws Throwable  {
      ValueListHandler valueListHandler0 = new ValueListHandler();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      valueListHandler0.setList((List) linkedList0);
      linkedList0.add("N+,sgR-:");
      valueListHandler0.setIndex((-217));
      List<Object> list0 = valueListHandler0.getNextElements(747);
      assertEquals(1, valueListHandler0.getCurrentIndex());
      
      List<Object> list1 = valueListHandler0.getPreviousElements(747);
      assertTrue(list1.equals(list0));
  }

  @Test
  public void test12()  throws Throwable  {
      ValueListHandler valueListHandler0 = new ValueListHandler();
      try {
        valueListHandler0.getNextElements(0);
        fail("Expecting exception: IteratorException");
      } catch(IteratorException e) {
        /*
         * 
         */
      }
  }
}
