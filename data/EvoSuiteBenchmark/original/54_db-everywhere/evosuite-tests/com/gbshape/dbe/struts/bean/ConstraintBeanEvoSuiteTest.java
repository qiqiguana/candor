/*
 * This file was automatically generated by EvoSuite
 */

package com.gbshape.dbe.struts.bean;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.gbshape.dbe.struts.bean.ConstraintBean;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ConstraintBeanEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ConstraintBean constraintBean0 = new ConstraintBean();
      String string0 = constraintBean0.getConstraintType();
      assertEquals("", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      ConstraintBean constraintBean0 = new ConstraintBean();
      boolean boolean0 = constraintBean0.isIndex();
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      ConstraintBean constraintBean0 = new ConstraintBean();
      constraintBean0.setConstraintType("");
      assertEquals("", constraintBean0.getConstraintType());
  }

  @Test
  public void test3()  throws Throwable  {
      ConstraintBean constraintBean0 = new ConstraintBean();
      constraintBean0.setKey(false);
      assertEquals(false, constraintBean0.isKey());
  }

  @Test
  public void test4()  throws Throwable  {
      ConstraintBean constraintBean0 = new ConstraintBean();
      String string0 = constraintBean0.getConstraintName();
      assertEquals("", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      ConstraintBean constraintBean0 = new ConstraintBean();
      constraintBean0.setConstraintName("E'\u0005JMU)");
      assertEquals(false, constraintBean0.isKey());
  }

  @Test
  public void test6()  throws Throwable  {
      ConstraintBean constraintBean0 = new ConstraintBean();
      boolean boolean0 = constraintBean0.isKey();
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      ConstraintBean constraintBean0 = new ConstraintBean();
      boolean boolean0 = constraintBean0.isUnique();
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      ConstraintBean constraintBean0 = new ConstraintBean();
      String string0 = constraintBean0.getColumnName();
      assertEquals("", string0);
  }

  @Test
  public void test9()  throws Throwable  {
      ConstraintBean constraintBean0 = new ConstraintBean();
      constraintBean0.setColumnName("");
      assertEquals(false, constraintBean0.isKey());
  }

  @Test
  public void test10()  throws Throwable  {
      ConstraintBean constraintBean0 = new ConstraintBean();
      constraintBean0.setUnique(true);
      assertEquals(true, constraintBean0.isUnique());
  }

  @Test
  public void test11()  throws Throwable  {
      ConstraintBean constraintBean0 = new ConstraintBean();
      constraintBean0.setIndex(false);
      assertEquals(false, constraintBean0.isIndex());
  }
}
