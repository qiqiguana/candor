/*
 * This file was automatically generated by EvoSuite
 */

package com.gbshape.dbe.struts.bean;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.gbshape.dbe.struts.bean.TableStatusBean;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Random;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TableStatusBeanEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      tableStatusBean0.setTableName("");
      assertEquals("", tableStatusBean0.getDataFree());
  }

  @Test
  public void test1()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      Random random0 = new Random(1712L);
      BigInteger bigInteger0 = new BigInteger(1831, random0);
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      tableStatusBean0.setTotalLength(bigDecimal0);
  }

  @Test
  public void test2()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      tableStatusBean0.setRowFormat("");
      assertEquals("", tableStatusBean0.getAutoIncrement());
  }

  @Test
  public void test3()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      Calendar calendar0 = tableStatusBean0.getUpdateTime();
      assertNull(calendar0);
  }

  @Test
  public void test4()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      tableStatusBean0.setMaxDataLength((BigDecimal) null);
      assertEquals("", tableStatusBean0.getRows());
  }

  @Test
  public void test5()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      String string0 = tableStatusBean0.getAvgRowLength();
      assertEquals("", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      tableStatusBean0.setCollation("");
      assertEquals("", tableStatusBean0.getRows());
  }

  @Test
  public void test7()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      Calendar calendar0 = tableStatusBean0.getCreateTime();
      assertNull(calendar0);
  }

  @Test
  public void test8()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      tableStatusBean0.setComment(":<&f");
      assertEquals("", tableStatusBean0.getAvgRowLength());
  }

  @Test
  public void test9()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      String string0 = tableStatusBean0.getEngine();
      assertEquals("", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      String string0 = tableStatusBean0.getVersion();
      assertEquals("", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      tableStatusBean0.setCheckTime((Calendar) null);
      assertEquals("", tableStatusBean0.getRows());
  }

  @Test
  public void test12()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      String string0 = tableStatusBean0.getRows();
      assertEquals("", string0);
  }

  @Test
  public void test13()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar();
      tableStatusBean0.setUpdateTime((Calendar) gregorianCalendar0);
      assertEquals("", tableStatusBean0.getTableName());
  }

  @Test
  public void test14()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      tableStatusBean0.setAvgRowLength("");
      assertEquals("", tableStatusBean0.getVersion());
  }

  @Test
  public void test15()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      String string0 = tableStatusBean0.getCollation();
      assertEquals("", string0);
  }

  @Test
  public void test16()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      Calendar calendar0 = tableStatusBean0.getCheckTime();
      assertNull(calendar0);
  }

  @Test
  public void test17()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      BigDecimal bigDecimal0 = tableStatusBean0.getDataLength();
      tableStatusBean0.setIndexLength(bigDecimal0);
      assertEquals(0L, bigDecimal0.longValueExact());
  }

  @Test
  public void test18()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar((-300), 0, (-300), 0, 0, 1996);
      tableStatusBean0.setCreateTime((Calendar) gregorianCalendar0);
      assertEquals("", tableStatusBean0.getCollation());
  }

  @Test
  public void test19()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      BigDecimal bigDecimal0 = tableStatusBean0.getMaxDataLength();
      assertEquals(0, bigDecimal0.shortValueExact());
  }

  @Test
  public void test20()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      Random random0 = new Random(1712L);
      BigInteger bigInteger0 = new BigInteger(1831, random0);
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      tableStatusBean0.setDataLength(bigDecimal0);
  }

  @Test
  public void test21()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      BigDecimal bigDecimal0 = tableStatusBean0.getIndexLength();
      assertEquals(0, bigDecimal0.shortValue());
  }

  @Test
  public void test22()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      tableStatusBean0.setRows("9k\n3EGI,va2c.");
      assertEquals("", tableStatusBean0.getDataFree());
  }

  @Test
  public void test23()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      tableStatusBean0.setAutoIncrement("");
      assertEquals("", tableStatusBean0.getComment());
  }

  @Test
  public void test24()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      String string0 = tableStatusBean0.getRowFormat();
      assertEquals("", string0);
  }

  @Test
  public void test25()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      tableStatusBean0.setEngine("5<Ao[}`r>c^-)-71iW");
      assertEquals("", tableStatusBean0.getRows());
  }

  @Test
  public void test26()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      tableStatusBean0.setDataFree("#ggQ");
      assertEquals("", tableStatusBean0.getEngine());
  }

  @Test
  public void test27()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      String string0 = tableStatusBean0.getComment();
      assertEquals("", string0);
  }

  @Test
  public void test28()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      String string0 = tableStatusBean0.getTableName();
      assertEquals("", string0);
  }

  @Test
  public void test29()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      BigDecimal bigDecimal0 = tableStatusBean0.getTotalLength();
      assertEquals(0, bigDecimal0.shortValue());
  }

  @Test
  public void test30()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      String string0 = tableStatusBean0.getAutoIncrement();
      assertEquals("", string0);
  }

  @Test
  public void test31()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      tableStatusBean0.setVersion("");
      assertEquals("", tableStatusBean0.getRowFormat());
  }

  @Test
  public void test32()  throws Throwable  {
      TableStatusBean tableStatusBean0 = new TableStatusBean();
      String string0 = tableStatusBean0.getDataFree();
      assertEquals("", string0);
  }
}
