/*
 * This file was automatically generated by EvoSuite
 */

package com.gbshape.dbe.oracle;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.gbshape.dbe.oracle.OracleTableStructure;
import com.gbshape.dbe.struts.bean.ColumnBean;
import com.gbshape.dbe.struts.bean.DBDataBean;
import com.gbshape.dbe.struts.bean.TableStatusBean;
import com.gbshape.dbe.struts.bean.TableStructureBean;
import com.gbshape.dbe.struts.form.ColumnForm;
import com.gbshape.dbe.xml.CreateTableXmlBean;
import java.util.ArrayList;
import javax.servlet.http.HttpServletRequest;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class OracleTableStructureEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      // Undeclared exception!
      try {
        oracleTableStructure0.dropIndex((HttpServletRequest) null, dBDataBean0, "'", "'", "'");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      // Undeclared exception!
      try {
        oracleTableStructure0.changePrimary((HttpServletRequest) null, dBDataBean0, "G9)QV7L&fev,7ut", (ArrayList) arrayList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      // Undeclared exception!
      try {
        oracleTableStructure0.alterDrop((HttpServletRequest) null, dBDataBean0, "G", "G");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      // Undeclared exception!
      try {
        oracleTableStructure0.drop((HttpServletRequest) null, dBDataBean0, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      // Undeclared exception!
      try {
        oracleTableStructure0.dropUnique((HttpServletRequest) null, dBDataBean0, "c^nU/", "c^nU/", "c^nU/");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      // Undeclared exception!
      try {
        oracleTableStructure0.truncate((HttpServletRequest) null, dBDataBean0, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      // Undeclared exception!
      try {
        oracleTableStructure0.addUnique((HttpServletRequest) null, dBDataBean0, "", "5%wki<&Z7");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      oracleTableStructure0.addIndex((HttpServletRequest) null, dBDataBean0, "5%wki<&Z7", "5%wki<&Z7");
      assertEquals("ISO-8859-1", dBDataBean0.getEncoding());
  }

  @Test
  public void test8()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      TableStructureBean tableStructureBean0 = oracleTableStructure0.getStructure(dBDataBean0, "5%ki<1Z7");
      assertNotNull(tableStructureBean0);
      assertEquals("5%ki<1Z7", tableStructureBean0.getTableName());
  }

  @Test
  public void test9()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      TableStatusBean tableStatusBean0 = oracleTableStructure0.getStatus(dBDataBean0, "", false);
      assertEquals("", tableStatusBean0.getEngine());
  }

  @Test
  public void test10()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      TableStatusBean tableStatusBean0 = oracleTableStructure0.getStatus(dBDataBean0, "5%ki<1Z7", true);
      assertEquals("5%ki<1Z7", tableStatusBean0.getTableName());
      assertNotNull(tableStatusBean0);
  }

  @Test
  public void test11()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      ColumnForm columnForm0 = new ColumnForm();
      columnForm0.setDefaultValue("'");
      ColumnBean columnBean0 = new ColumnBean();
      // Undeclared exception!
      try {
        oracleTableStructure0.alterModify((HttpServletRequest) null, dBDataBean0, "'", columnBean0, columnForm0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * StringEquals is not supposed to work on a null caller
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      ColumnForm columnForm0 = new ColumnForm();
      columnForm0.setNotnull("'");
      ColumnBean columnBean0 = new ColumnBean();
      ArrayList<Object> arrayList0 = oracleTableStructure0.alterModify((HttpServletRequest) null, dBDataBean0, "'", columnBean0, columnForm0);
      assertEquals("[ALTER TABLE \"'\" MODIFY  (\"\"   ) ]", arrayList0.toString());
      assertNotNull(arrayList0);
  }

  @Test
  public void test13()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      ColumnForm columnForm0 = new ColumnForm();
      columnForm0.setDefaultValue("'");
      // Undeclared exception!
      try {
        oracleTableStructure0.alterAdd((HttpServletRequest) null, dBDataBean0, "'", columnForm0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * StringEquals is not supposed to work on a null caller
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      ColumnForm columnForm0 = new ColumnForm();
      columnForm0.setNotnull("'");
      ArrayList<Object> arrayList0 = oracleTableStructure0.alterAdd((HttpServletRequest) null, dBDataBean0, "'", columnForm0);
      assertEquals("[ALTER TABLE \"'\" ADD (\"\"   ) ]", arrayList0.toString());
      assertNotNull(arrayList0);
  }

  @Test
  public void test15()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      createTableXmlBean0.addColumn(columnBean0);
      ArrayList<Object> arrayList0 = oracleTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertEquals("[CREATE TABLE \"\" ()]", arrayList0.toString());
      assertNotNull(arrayList0);
  }

  @Test
  public void test16()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      createTableXmlBean0.addColumn((ColumnBean) null);
      ColumnBean columnBean0 = new ColumnBean();
      createTableXmlBean0.addColumn(columnBean0);
      columnBean0.setName("SSolris");
      ArrayList<Object> arrayList0 = oracleTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertEquals("[CREATE TABLE \"\" (,\"SSOLRIS\"   NOT NULL )]", arrayList0.toString());
      assertNotNull(arrayList0);
  }

  @Test
  public void test17()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      createTableXmlBean0.addColumn(columnBean0);
      columnBean0.setLen(930);
      columnBean0.setName("SSolris");
      ArrayList<Object> arrayList0 = oracleTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertEquals("[CREATE TABLE \"\" (\"SSOLRIS\"   (930)  NOT NULL )]", arrayList0.toString());
      assertNotNull(arrayList0);
  }

  @Test
  public void test18()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      createTableXmlBean0.addColumn(columnBean0);
      columnBean0.setDefaultValue("SSolris");
      columnBean0.setName("SSolris");
      ArrayList<Object> arrayList0 = oracleTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertEquals("[CREATE TABLE \"\" (\"SSOLRIS\"   DEFAULT 'SSOLRIS'  NOT NULL )]", arrayList0.toString());
      assertNotNull(arrayList0);
  }

  @Test
  public void test19()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      createTableXmlBean0.addColumn(columnBean0);
      columnBean0.setNullable(true);
      columnBean0.setName("SSolris");
      ArrayList<Object> arrayList0 = oracleTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertEquals("[CREATE TABLE \"\" (\"SSOLRIS\"  )]", arrayList0.toString());
      assertNotNull(arrayList0);
  }

  @Test
  public void test20()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      createTableXmlBean0.addColumn(columnBean0);
      columnBean0.setComment("%");
      columnBean0.setName("%");
      ArrayList<Object> arrayList0 = oracleTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertEquals("[CREATE TABLE \"\" (\"%\"   NOT NULL )]", arrayList0.toString());
      assertNotNull(arrayList0);
  }

  @Test
  public void test21()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      createTableXmlBean0.addColumn(columnBean0);
      columnBean0.setUnique(true);
      columnBean0.setName("SSolris");
      ArrayList<Object> arrayList0 = oracleTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertEquals("[CREATE TABLE \"\" (\"SSOLRIS\"   NOT NULL ), ALTER TABLE \"\" ADD CONSTRAINT _UK1 UNIQUE (\"SSOLRIS\") ]", arrayList0.toString());
      assertNotNull(arrayList0);
  }

  @Test
  public void test22()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      ColumnBean columnBean0 = new ColumnBean();
      createTableXmlBean0.addColumn(columnBean0);
      createTableXmlBean0.addColumn(columnBean0);
      columnBean0.setName("SSolris");
      columnBean0.setKey(true);
      ArrayList<Object> arrayList0 = oracleTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertEquals("[CREATE TABLE \"\" (\"SSOLRIS\"   NOT NULL ,\"SSOLRIS\"   NOT NULL ), ALTER TABLE \"\" ADD CONSTRAINT \"_PK\" PRIMARY KEY (\"SSOLRIS\",\"SSOLRIS\" )]", arrayList0.toString());
      assertNotNull(arrayList0);
  }

  @Test
  public void test23()  throws Throwable  {
      OracleTableStructure oracleTableStructure0 = new OracleTableStructure();
      DBDataBean dBDataBean0 = new DBDataBean();
      CreateTableXmlBean createTableXmlBean0 = new CreateTableXmlBean();
      createTableXmlBean0.setComment("O");
      ArrayList<Object> arrayList0 = oracleTableStructure0.create((HttpServletRequest) null, dBDataBean0, createTableXmlBean0);
      assertEquals("[CREATE TABLE \"\" (), COMMENT ON TABLE \"\" IS 'O' ]", arrayList0.toString());
      assertNotNull(arrayList0);
  }
}
