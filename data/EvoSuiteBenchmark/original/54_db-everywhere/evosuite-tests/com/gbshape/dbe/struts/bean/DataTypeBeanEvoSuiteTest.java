/*
 * This file was automatically generated by EvoSuite
 */

package com.gbshape.dbe.struts.bean;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.gbshape.dbe.struts.bean.DataTypeBean;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DataTypeBeanEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DataTypeBean dataTypeBean0 = new DataTypeBean();
      dataTypeBean0.setForceLength(false);
      assertEquals(false, dataTypeBean0.isForceLength());
      assertEquals(false, dataTypeBean0.isLen());
      assertEquals(0, dataTypeBean0.getFormSize());
      assertEquals(false, dataTypeBean0.isDec());
      assertEquals("text", dataTypeBean0.getFormInput());
      assertEquals(0, dataTypeBean0.getMaxlength());
  }

  @Test
  public void test1()  throws Throwable  {
      DataTypeBean dataTypeBean0 = new DataTypeBean();
      assertEquals(false, dataTypeBean0.isLen());
      
      dataTypeBean0.setLen(true);
      assertEquals(true, dataTypeBean0.isLen());
      assertEquals(0, dataTypeBean0.getFormSize());
  }

  @Test
  public void test2()  throws Throwable  {
      DataTypeBean dataTypeBean0 = new DataTypeBean();
      int int0 = dataTypeBean0.getMaxlength();
      assertEquals(0, int0);
      assertEquals(false, dataTypeBean0.isForceLength());
      assertEquals(0, dataTypeBean0.getFormSize());
      assertEquals("text", dataTypeBean0.getFormInput());
      assertEquals(false, dataTypeBean0.isDec());
      assertEquals(false, dataTypeBean0.isLen());
  }

  @Test
  public void test3()  throws Throwable  {
      DataTypeBean dataTypeBean0 = new DataTypeBean();
      assertEquals("text", dataTypeBean0.getFormInput());
      
      dataTypeBean0.setFormInput("");
      assertEquals(0, dataTypeBean0.getMaxlength());
  }

  @Test
  public void test4()  throws Throwable  {
      DataTypeBean dataTypeBean0 = new DataTypeBean();
      boolean boolean0 = dataTypeBean0.isLen();
      assertEquals("text", dataTypeBean0.getFormInput());
      assertEquals(0, dataTypeBean0.getFormSize());
      assertEquals(0, dataTypeBean0.getMaxlength());
      assertEquals(false, boolean0);
      assertEquals(false, dataTypeBean0.isForceLength());
      assertEquals(false, dataTypeBean0.isDec());
  }

  @Test
  public void test5()  throws Throwable  {
      DataTypeBean dataTypeBean0 = new DataTypeBean();
      String string0 = dataTypeBean0.getName();
      assertEquals(0, dataTypeBean0.getFormSize());
      assertEquals(false, dataTypeBean0.isForceLength());
      assertNotNull(string0);
      assertEquals("text", dataTypeBean0.getFormInput());
      assertEquals(false, dataTypeBean0.isDec());
      assertEquals(0, dataTypeBean0.getMaxlength());
      assertEquals(false, dataTypeBean0.isLen());
  }

  @Test
  public void test6()  throws Throwable  {
      DataTypeBean dataTypeBean0 = new DataTypeBean();
      dataTypeBean0.setName("");
      assertEquals(false, dataTypeBean0.isLen());
      assertEquals(0, dataTypeBean0.getFormSize());
      assertEquals(false, dataTypeBean0.isDec());
      assertEquals(false, dataTypeBean0.isForceLength());
      assertEquals(0, dataTypeBean0.getMaxlength());
      assertEquals("text", dataTypeBean0.getFormInput());
  }

  @Test
  public void test7()  throws Throwable  {
      DataTypeBean dataTypeBean0 = new DataTypeBean();
      boolean boolean0 = dataTypeBean0.isForceLength();
      assertEquals(false, dataTypeBean0.isDec());
      assertEquals(false, boolean0);
      assertEquals(0, dataTypeBean0.getFormSize());
      assertEquals("text", dataTypeBean0.getFormInput());
      assertEquals(0, dataTypeBean0.getMaxlength());
      assertEquals(false, dataTypeBean0.isLen());
  }

  @Test
  public void test8()  throws Throwable  {
      DataTypeBean dataTypeBean0 = new DataTypeBean();
      dataTypeBean0.setFormat("");
      assertEquals("text", dataTypeBean0.getFormInput());
      assertEquals(0, dataTypeBean0.getFormSize());
      assertEquals(false, dataTypeBean0.isDec());
      assertEquals(false, dataTypeBean0.isLen());
      assertEquals(0, dataTypeBean0.getMaxlength());
      assertEquals(false, dataTypeBean0.isForceLength());
  }

  @Test
  public void test9()  throws Throwable  {
      DataTypeBean dataTypeBean0 = new DataTypeBean();
      String string0 = dataTypeBean0.getFormInput();
      assertEquals(0, dataTypeBean0.getMaxlength());
      assertEquals(false, dataTypeBean0.isLen());
      assertNotNull(string0);
      assertEquals(0, dataTypeBean0.getFormSize());
      assertEquals(false, dataTypeBean0.isDec());
      assertEquals("text", string0);
      assertEquals(false, dataTypeBean0.isForceLength());
  }

  @Test
  public void test10()  throws Throwable  {
      DataTypeBean dataTypeBean0 = new DataTypeBean();
      dataTypeBean0.setFormSize(1966);
      assertEquals(1966, dataTypeBean0.getFormSize());
      assertEquals(0, dataTypeBean0.getMaxlength());
  }

  @Test
  public void test11()  throws Throwable  {
      DataTypeBean dataTypeBean0 = new DataTypeBean();
      dataTypeBean0.setValueWrapper("");
      assertEquals(false, dataTypeBean0.isDec());
      assertEquals(0, dataTypeBean0.getFormSize());
      assertEquals(false, dataTypeBean0.isLen());
      assertEquals("text", dataTypeBean0.getFormInput());
      assertEquals(false, dataTypeBean0.isForceLength());
      assertEquals(0, dataTypeBean0.getMaxlength());
  }

  @Test
  public void test12()  throws Throwable  {
      DataTypeBean dataTypeBean0 = new DataTypeBean();
      String string0 = dataTypeBean0.getFormat();
      assertEquals(false, dataTypeBean0.isDec());
      assertEquals("text", dataTypeBean0.getFormInput());
      assertNotNull(string0);
      assertEquals(0, dataTypeBean0.getMaxlength());
      assertEquals(false, dataTypeBean0.isLen());
      assertEquals(false, dataTypeBean0.isForceLength());
      assertEquals(0, dataTypeBean0.getFormSize());
  }

  @Test
  public void test13()  throws Throwable  {
      DataTypeBean dataTypeBean0 = new DataTypeBean();
      int int0 = dataTypeBean0.getFormSize();
      assertEquals(false, dataTypeBean0.isDec());
      assertEquals(0, dataTypeBean0.getMaxlength());
      assertEquals("text", dataTypeBean0.getFormInput());
      assertEquals(0, int0);
      assertEquals(false, dataTypeBean0.isForceLength());
      assertEquals(false, dataTypeBean0.isLen());
  }

  @Test
  public void test14()  throws Throwable  {
      DataTypeBean dataTypeBean0 = new DataTypeBean();
      dataTypeBean0.setDec(false);
      assertEquals(false, dataTypeBean0.isLen());
      assertEquals(false, dataTypeBean0.isForceLength());
      assertEquals(0, dataTypeBean0.getMaxlength());
      assertEquals(0, dataTypeBean0.getFormSize());
      assertEquals("text", dataTypeBean0.getFormInput());
      assertEquals(false, dataTypeBean0.isDec());
  }

  @Test
  public void test15()  throws Throwable  {
      DataTypeBean dataTypeBean0 = new DataTypeBean();
      String string0 = dataTypeBean0.getValueWrapper();
      assertEquals(false, dataTypeBean0.isLen());
      assertEquals(false, dataTypeBean0.isDec());
      assertEquals("text", dataTypeBean0.getFormInput());
      assertEquals(false, dataTypeBean0.isForceLength());
      assertNotNull(string0);
      assertEquals(0, dataTypeBean0.getFormSize());
      assertEquals(0, dataTypeBean0.getMaxlength());
  }

  @Test
  public void test16()  throws Throwable  {
      DataTypeBean dataTypeBean0 = new DataTypeBean();
      boolean boolean0 = dataTypeBean0.isDec();
      assertEquals(false, dataTypeBean0.isLen());
      assertEquals(0, dataTypeBean0.getMaxlength());
      assertEquals(false, dataTypeBean0.isForceLength());
      assertEquals("text", dataTypeBean0.getFormInput());
      assertEquals(0, dataTypeBean0.getFormSize());
      assertEquals(false, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      DataTypeBean dataTypeBean0 = new DataTypeBean();
      dataTypeBean0.setMaxlength(20);
      assertEquals(20, dataTypeBean0.getMaxlength());
      assertEquals(false, dataTypeBean0.isForceLength());
  }
}
