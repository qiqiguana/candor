/*
 * This file was automatically generated by EvoSuite
 */

package fr.pingtimeout.jtail.gui.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.JTailMainModelEvent;
import fr.pingtimeout.jtail.gui.model.JTailModel;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JTailMainModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JTailMainModel jTailMainModel0 = new JTailMainModel();
      List<JTailModel> list0 = jTailMainModel0.getFiles();
      assertEquals((-1), jTailMainModel0.currentFileIndex);
      assertNotNull(list0);
      assertEquals(-1, jTailMainModel0.getCurrentFileIndex());
  }

  @Test
  public void test1()  throws Throwable  {
      JTailMainModel jTailMainModel0 = new JTailMainModel();
      boolean boolean0 = jTailMainModel0.contains((Object) jTailMainModel0);
      assertEquals(true, boolean0);
      assertEquals((-1), jTailMainModel0.currentFileIndex);
  }

  @Test
  public void test2()  throws Throwable  {
      JTailMainModel jTailMainModel0 = new JTailMainModel();
      // Undeclared exception!
      try {
        jTailMainModel0.setCurrentFileIndex((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      JTailMainModel jTailMainModel0 = new JTailMainModel();
      int int0 = jTailMainModel0.getCurrentFileIndex();
      assertEquals((-1), int0);
  }

  @Test
  public void test4()  throws Throwable  {
      JTailMainModel jTailMainModel0 = new JTailMainModel();
      jTailMainModel0.size();
      assertEquals((-1), jTailMainModel0.currentFileIndex);
      assertEquals(-1, jTailMainModel0.getCurrentFileIndex());
  }

  @Test
  public void test5()  throws Throwable  {
      JTailMainModel jTailMainModel0 = new JTailMainModel();
      JTailMainModelEvent.Type jTailMainModelEvent_Type0 = JTailMainModelEvent.Type.UPDATED;
      JTailMainModelEvent jTailMainModelEvent0 = jTailMainModel0.createMainModelEvent((JTailModel) null, (-1), jTailMainModelEvent_Type0);
      assertEquals("type : UPDATED - index : -1 - model : null", jTailMainModelEvent0.toString());
      assertEquals((-1), jTailMainModel0.currentFileIndex);
  }

  @Test
  public void test6()  throws Throwable  {
      JTailMainModel jTailMainModel0 = new JTailMainModel();
      // Undeclared exception!
      try {
        jTailMainModel0.add((JTailModel) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      JTailMainModel jTailMainModel0 = new JTailMainModel();
      jTailMainModel0.remove((Object) null);
      assertEquals((-1), jTailMainModel0.currentFileIndex);
      assertEquals(-1, jTailMainModel0.getCurrentFileIndex());
  }
}
