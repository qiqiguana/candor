/*
 * This file was automatically generated by EvoSuite
 */

package fr.pingtimeout.jtail.configuration;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fr.pingtimeout.jtail.configuration.ApplicationConfiguration;
import fr.pingtimeout.jtail.gui.action.CloseAction;
import fr.pingtimeout.jtail.gui.action.CloseAllAction;
import fr.pingtimeout.jtail.gui.action.HighlightAction;
import fr.pingtimeout.jtail.gui.action.MenuAction;
import fr.pingtimeout.jtail.gui.action.QuitAction;
import java.awt.HeadlessException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ApplicationConfigurationEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ApplicationConfiguration applicationConfiguration0 = new ApplicationConfiguration();
      // Undeclared exception!
      try {
        applicationConfiguration0.jTailMainFrame();
        fail("Expecting exception: HeadlessException");
      } catch(HeadlessException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ApplicationConfiguration applicationConfiguration0 = new ApplicationConfiguration();
      QuitAction quitAction0 = applicationConfiguration0.quitAction();
      assertEquals(true, quitAction0.isEnabled());
  }

  @Test
  public void test2()  throws Throwable  {
      ApplicationConfiguration applicationConfiguration0 = new ApplicationConfiguration();
      CloseAction closeAction0 = applicationConfiguration0.closeAction();
      assertEquals(true, closeAction0.isEnabled());
  }

  @Test
  public void test3()  throws Throwable  {
      ApplicationConfiguration applicationConfiguration0 = new ApplicationConfiguration();
      MenuAction menuAction0 = applicationConfiguration0.toolsMenuAction();
      assertEquals(true, menuAction0.isEnabled());
  }

  @Test
  public void test4()  throws Throwable  {
      ApplicationConfiguration applicationConfiguration0 = new ApplicationConfiguration();
      CloseAllAction closeAllAction0 = applicationConfiguration0.closeAllAction();
      assertEquals(true, closeAllAction0.isEnabled());
  }

  @Test
  public void test5()  throws Throwable  {
      ApplicationConfiguration applicationConfiguration0 = new ApplicationConfiguration();
      HighlightAction highlightAction0 = applicationConfiguration0.highlightAction();
      assertEquals(true, highlightAction0.isEnabled());
  }
}
