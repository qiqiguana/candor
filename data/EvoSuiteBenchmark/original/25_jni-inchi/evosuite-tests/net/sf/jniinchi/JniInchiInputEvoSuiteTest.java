/*
 * This file was automatically generated by EvoSuite
 */

package net.sf.jniinchi;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import net.sf.jniinchi.JniInchiException;
import net.sf.jniinchi.JniInchiInput;
import net.sf.jniinchi.JniInchiStructure;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JniInchiInputEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiInput jniInchiInput0 = new JniInchiInput(jniInchiStructure0);
      assertEquals(0, jniInchiInput0.getNumAtoms());
  }

  @Test
  public void test1()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      JniInchiInput jniInchiInput0 = new JniInchiInput((List) linkedList0);
      JniInchiInput jniInchiInput1 = new JniInchiInput((JniInchiStructure) jniInchiInput0, "");
      assertNotSame(jniInchiInput1, jniInchiInput0);
  }

  @Test
  public void test2()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JniInchiInput jniInchiInput0 = new JniInchiInput((List) linkedList0);
      String string0 = jniInchiInput0.getOptions();
      assertEquals("", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      JniInchiInput jniInchiInput0 = new JniInchiInput((String) null);
      assertEquals(0, jniInchiInput0.getNumStereo0D());
  }
}
