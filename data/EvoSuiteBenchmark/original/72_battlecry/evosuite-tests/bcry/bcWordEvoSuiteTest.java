/*
 * This file was automatically generated by EvoSuite
 */

package bcry;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import bcry.bcWord;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class bcWordEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      bcWord bcWord0 = new bcWord("", "");
      assertNotNull(bcWord0);
      
      String string0 = bcWord0.getMetricCode();
      assertNotNull(string0);
      assertEquals(0, bcWord0.getSyllables());
      assertEquals("", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      bcWord bcWord0 = new bcWord("-,bTtp9)G]6", "-,bTtp9)G]6");
      assertNotNull(bcWord0);
      
      String string0 = bcWord0.getPhonemes();
      assertEquals("", bcWord0.getMetricCode());
      assertNotNull(string0);
      assertEquals(0, bcWord0.getSyllables());
  }

  @Test
  public void test2()  throws Throwable  {
      bcWord bcWord0 = new bcWord("1", "1");
      assertNotNull(bcWord0);
      
      String string0 = bcWord0.getWord();
      assertEquals("I", bcWord0.getMetricCode());
      assertEquals(1, bcWord0.getSyllables());
      assertNotNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      bcWord bcWord0 = new bcWord("", "");
      assertNotNull(bcWord0);
      
      int int0 = bcWord0.getSyllables();
      assertEquals(0, int0);
      assertEquals("", bcWord0.getMetricCode());
  }

  @Test
  public void test4()  throws Throwable  {
      bcWord bcWord0 = new bcWord("1", "1");
      assertNotNull(bcWord0);
      
      boolean boolean0 = bcWord0.equalTo("1");
      assertEquals("I", bcWord0.getMetricCode());
      assertEquals(true, boolean0);
      assertEquals(1, bcWord0.getSyllables());
  }

  @Test
  public void test5()  throws Throwable  {
      bcWord bcWord0 = new bcWord("-,bTtp9)G]6", "-,bTtp9)G]6");
      assertNotNull(bcWord0);
      
      boolean boolean0 = bcWord0.equalTo("");
      assertEquals("", bcWord0.getMetricCode());
      assertEquals(0, bcWord0.getSyllables());
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      bcWord bcWord0 = new bcWord("u1DHM;D~]", "u1DHM;D~]");
      assertNotNull(bcWord0);
      
      bcWord0.setEqualWord("f", "f");
      boolean boolean0 = bcWord0.equalTo("u1DHM;D~]");
      assertEquals(1, bcWord0.getSyllables());
      assertEquals(true, boolean0);
      assertEquals("I", bcWord0.getMetricCode());
  }

  @Test
  public void test7()  throws Throwable  {
      bcWord bcWord0 = new bcWord("gXc8_Sc0C|iQRR", "gXc8_Sc0C|iQRR");
      assertNotNull(bcWord0);
      
      String string0 = bcWord0.getRhymeKey(true);
      assertEquals(1, bcWord0.getSyllables());
      assertNotNull(string0);
      assertEquals("O", bcWord0.getMetricCode());
      assertEquals("gXc8_Sc0C|iQRR", string0);
  }

  @Test
  public void test8()  throws Throwable  {
      bcWord bcWord0 = new bcWord("DGVD^F811", "DGVD^F811");
      assertNotNull(bcWord0);
      
      String string0 = bcWord0.getRhymeKey(false);
      assertEquals("11", bcWord0.getMetricCode());
      assertEquals("DGVD^F811", string0);
      assertNotNull(string0);
      assertEquals(2, bcWord0.getSyllables());
  }

  @Test
  public void test9()  throws Throwable  {
      bcWord bcWord0 = new bcWord("x=k*}2yRI0XE2wBM{", "x=k*}2yRI0XE2wBM{");
      assertNotNull(bcWord0);
      
      String string0 = bcWord0.getRhymeKey(true);
      assertEquals("202", bcWord0.getMetricCode());
      assertNotNull(string0);
      assertEquals("x=k*}2yRI0XE2wBM{", string0);
      assertEquals(3, bcWord0.getSyllables());
  }

  @Test
  public void test10()  throws Throwable  {
      bcWord bcWord0 = new bcWord(";-mHCAl@ val?g:U2", ";-mHCAl@ val?g:U2");
      assertNotNull(bcWord0);
      
      String string0 = bcWord0.getRhymeKey(false);
      assertEquals("Z", bcWord0.getMetricCode());
      assertEquals(1, bcWord0.getSyllables());
      assertEquals("val?g:U2", string0);
      assertNotNull(string0);
  }
}
