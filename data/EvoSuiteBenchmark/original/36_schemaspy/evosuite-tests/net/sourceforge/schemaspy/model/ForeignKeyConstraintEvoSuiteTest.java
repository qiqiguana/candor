/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ForeignKeyConstraintEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "dITHT;Ep0-GT{&", 0, 0);
      assertNotNull(foreignKeyConstraint0);
      
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      assertNotNull(list0);
      
      String string0 = ForeignKeyConstraint.toString(list0);
      assertNotNull(string0);
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertEquals(0, foreignKeyConstraint0.getDeleteRule());
  }

  @Test
  public void test1()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "p", 1678, 1678);
      assertNotNull(foreignKeyConstraint0);
      
      foreignKeyConstraint0.getParentTable();
      assertEquals(1678, foreignKeyConstraint0.getDeleteRule());
      assertEquals(1678, foreignKeyConstraint0.getUpdateRule());
  }

  @Test
  public void test2()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 2, 2);
      assertNotNull(foreignKeyConstraint0);
      
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Null on delete", foreignKeyConstraint0.getDeleteRuleName());
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "WuoY^l|:H)7Vk3%", 1, 1);
      assertNotNull(foreignKeyConstraint0);
      
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "WuoY^l|:H)7Vk3%", (-226), (-226));
      // Undeclared exception!
      try {
        foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "WuoY^l|:H)7Vk3%", 1, 1);
      assertNotNull(foreignKeyConstraint0);
      
      boolean boolean0 = foreignKeyConstraint0.isImplied();
      assertEquals(1, foreignKeyConstraint0.getUpdateRule());
      assertEquals(false, boolean0);
      assertEquals(true, foreignKeyConstraint0.isRestrictDelete());
  }

  @Test
  public void test5()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "dITHT;Ep0-GT{&", 0, 0);
      assertNotNull(foreignKeyConstraint0);
      
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals("Cascade on delete", foreignKeyConstraint0.getDeleteRuleName());
      assertEquals(0, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "WuoY^l|:H)7Vk3%", 1, 1);
      assertNotNull(foreignKeyConstraint0);
      
      foreignKeyConstraint0.getChildTable();
      assertEquals(1, foreignKeyConstraint0.getUpdateRule());
      assertEquals("R", foreignKeyConstraint0.getDeleteRuleAlias());
      assertEquals(true, foreignKeyConstraint0.isRestrictDelete());
  }

  @Test
  public void test7()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "p", 1678, 1678);
      assertNotNull(foreignKeyConstraint0);
      
      foreignKeyConstraint0.addParentColumn((TableColumn) null);
      assertEquals(1678, foreignKeyConstraint0.getDeleteRule());
      assertEquals(1678, foreignKeyConstraint0.getUpdateRule());
  }

  @Test
  public void test8()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "dITHT;Ep0-GT{&", 0, 0);
      assertNotNull(foreignKeyConstraint0);
      
      foreignKeyConstraint0.addChildColumn((TableColumn) null);
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Cascade on delete", foreignKeyConstraint0.getDeleteRuleName());
  }

  @Test
  public void test9()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 2, 2);
      assertNotNull(foreignKeyConstraint0);
      
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertEquals("N", foreignKeyConstraint0.getDeleteRuleAlias());
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "HfUR", 0, 0);
      assertNotNull(foreignKeyConstraint0);
      
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "@0pGN$SqPl87(3", 690, 1);
      assertNotNull(foreignKeyConstraint0);
      
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertEquals(690, foreignKeyConstraint0.getUpdateRule());
      assertEquals(true, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "yITHT;Ep0-GT|&", (-304), (-304));
      assertNotNull(foreignKeyConstraint0);
      
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      assertEquals(false, boolean0);
      assertEquals(-304, foreignKeyConstraint0.getUpdateRule());
      assertEquals(-304, foreignKeyConstraint0.getDeleteRule());
  }

  @Test
  public void test13()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 2, 2);
      assertNotNull(foreignKeyConstraint0);
      
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
      assertEquals(true, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "dITHT;Ep0-GT{&", 0, 0);
      assertNotNull(foreignKeyConstraint0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Cascade on delete", string0);
  }

  @Test
  public void test15()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 2, 2);
      assertNotNull(foreignKeyConstraint0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Null on delete", string0);
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
  }

  @Test
  public void test16()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "WuoY^l|:H)7Vk3%", 1, 1);
      assertNotNull(foreignKeyConstraint0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals(1, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Restrict delete", string0);
  }

  @Test
  public void test17()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "yITHT;Ep0-GT|&", (-304), (-304));
      assertNotNull(foreignKeyConstraint0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("", string0);
      assertEquals(-304, foreignKeyConstraint0.getUpdateRule());
      assertEquals(-304, foreignKeyConstraint0.getDeleteRule());
  }

  @Test
  public void test18()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "dITHT;Ep0-GT{&", 0, 0);
      assertNotNull(foreignKeyConstraint0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Cascade on delete:\n Deletion of parent deletes child", string0);
  }

  @Test
  public void test19()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 2, 2);
      assertNotNull(foreignKeyConstraint0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Null on delete:\n Foreign key to parent set to NULL when parent deleted", string0);
  }

  @Test
  public void test20()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "@0pGN$SqPl87(3", 690, 1);
      assertNotNull(foreignKeyConstraint0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string0);
      assertEquals(690, foreignKeyConstraint0.getUpdateRule());
  }

  @Test
  public void test21()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "yITHT;Ep0-GT|&", (-304), (-304));
      assertNotNull(foreignKeyConstraint0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals(-304, foreignKeyConstraint0.getUpdateRule());
      assertEquals(-304, foreignKeyConstraint0.getDeleteRule());
      assertEquals("", string0);
  }

  @Test
  public void test22()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "HfUR", 0, 0);
      assertNotNull(foreignKeyConstraint0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("C", string0);
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
  }

  @Test
  public void test23()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 2, 2);
      assertNotNull(foreignKeyConstraint0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
      assertEquals("N", string0);
  }

  @Test
  public void test24()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "@0pGN$SqPl87(3", 690, 1);
      assertNotNull(foreignKeyConstraint0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals(690, foreignKeyConstraint0.getUpdateRule());
      assertEquals("R", string0);
  }

  @Test
  public void test25()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "WuoY^l|:H)7Vk3%", (-226), (-226));
      assertNotNull(foreignKeyConstraint0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("", string0);
      assertEquals(-226, foreignKeyConstraint0.getUpdateRule());
      assertEquals(-226, foreignKeyConstraint0.getDeleteRule());
  }

  @Test
  public void test26()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 2, 2);
      assertNotNull(foreignKeyConstraint0);
      
      boolean boolean0 = foreignKeyConstraint0.isReal();
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
      assertEquals(true, boolean0);
      assertEquals(true, foreignKeyConstraint0.isNullOnDelete());
  }

  @Test
  public void test27()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "yITHT;Ep0-GT|&", (-304), (-304));
      assertNotNull(foreignKeyConstraint0);
      
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "}", (-304), (-304));
      int int0 = foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      assertEquals(-304, foreignKeyConstraint0.getDeleteRule());
      assertEquals(-304, foreignKeyConstraint0.getUpdateRule());
      assertEquals(4, int0);
  }

  @Test
  public void test28()  throws Throwable  {
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      linkedList0.add((TableColumn) null);
      // Undeclared exception!
      try {
        ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
