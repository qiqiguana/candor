/*
 * This file was automatically generated by EvoSuite
 */

package nu.staldal.xodus;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import nu.staldal.xodus.XMLCharacterEncoder;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class XMLCharacterEncoderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      XMLCharacterEncoder xMLCharacterEncoder0 = null;
      try {
        xMLCharacterEncoder0 = new XMLCharacterEncoder((OutputStream) pipedOutputStream0, "e(coding name is iNegal:;");
        fail("Expecting exception: UnsupportedEncodingException");
      } catch(UnsupportedEncodingException e) {
        /*
         * encoding name is illegal: e(coding name is iNegal:;
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      PrintWriter printWriter0 = new PrintWriter((Writer) charArrayWriter0);
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Writer) printWriter0);
      XMLCharacterEncoder xMLCharacterEncoder1 = new XMLCharacterEncoder((Appendable) xMLCharacterEncoder0, true);
      char[] charArray0 = new char[9];
      xMLCharacterEncoder1.write(charArray0);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", charArrayWriter0.toString());
      assertEquals(9, charArrayWriter0.size());
  }

  @Test
  public void test2()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(1200);
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Writer) stringWriter0);
      xMLCharacterEncoder0.append('\u0000');
      assertEquals("\u0000", stringWriter0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PrintWriter printWriter0 = new PrintWriter((OutputStream) pipedOutputStream0, true);
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Appendable) printWriter0, true);
      xMLCharacterEncoder0.append('\u001F');
      assertEquals(true, printWriter0.checkError());
  }

  @Test
  public void test4()  throws Throwable  {
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Appendable) null, false);
      // Undeclared exception!
      try {
        xMLCharacterEncoder0.append('B');
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(9);
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Appendable) charArrayWriter0, true);
      XMLCharacterEncoder xMLCharacterEncoder1 = (XMLCharacterEncoder)xMLCharacterEncoder0.append((CharSequence) "");
      assertSame(xMLCharacterEncoder0, xMLCharacterEncoder1);
  }

  @Test
  public void test6()  throws Throwable  {
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Appendable) null, false);
      // Undeclared exception!
      try {
        xMLCharacterEncoder0.append((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(1200);
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Writer) stringWriter0);
      // Undeclared exception!
      try {
        xMLCharacterEncoder0.append((CharSequence) "", 1200, 1200);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: 1200
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Writer) null);
      XMLCharacterEncoder xMLCharacterEncoder1 = new XMLCharacterEncoder((Appendable) xMLCharacterEncoder0, true);
      // Undeclared exception!
      try {
        xMLCharacterEncoder1.append((CharSequence) ";", (-826), (-826));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(1200);
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Writer) stringWriter0);
      xMLCharacterEncoder0.write((int) '\u0000');
      assertEquals("\u0000", stringWriter0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(9);
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Appendable) charArrayWriter0, true);
      xMLCharacterEncoder0.write(9);
      assertEquals(1, charArrayWriter0.size());
      assertEquals("\t", charArrayWriter0.toString());
  }

  @Test
  public void test11()  throws Throwable  {
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Writer) null);
      // Undeclared exception!
      try {
        xMLCharacterEncoder0.write((-125));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(1200);
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Writer) stringWriter0);
      char[] charArray0 = new char[10];
      xMLCharacterEncoder0.write(charArray0);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", stringWriter0.toString());
  }

  @Test
  public void test13()  throws Throwable  {
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Writer) null);
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try {
        xMLCharacterEncoder0.write(charArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Writer) stringWriter0);
      char[] charArray0 = new char[7];
      // Undeclared exception!
      try {
        xMLCharacterEncoder0.write(charArray0, (int) '\'', (int) '\'');
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(9);
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Appendable) charArrayWriter0, true);
      char[] charArray0 = new char[5];
      xMLCharacterEncoder0.write(charArray0, 1, 1);
      assertEquals("\u0000", charArrayWriter0.toString());
      assertEquals(1, charArrayWriter0.size());
  }

  @Test
  public void test16()  throws Throwable  {
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Appendable) null, false);
      char[] charArray0 = new char[10];
      // Undeclared exception!
      try {
        xMLCharacterEncoder0.write(charArray0, (int) '\u0000', (int) '\u0000');
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test17()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(1200);
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Writer) stringWriter0);
      xMLCharacterEncoder0.write("");
  }

  @Test
  public void test18()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(9);
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Appendable) charArrayWriter0, true);
      xMLCharacterEncoder0.write("");
  }

  @Test
  public void test19()  throws Throwable  {
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Appendable) null, false);
      // Undeclared exception!
      try {
        xMLCharacterEncoder0.write((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test20()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      PrintWriter printWriter0 = new PrintWriter((Writer) charArrayWriter0);
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Writer) printWriter0);
      // Undeclared exception!
      try {
        xMLCharacterEncoder0.write("Mm,t]o", 18, 18);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: 36
         */
      }
  }

  @Test
  public void test21()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(9);
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Appendable) charArrayWriter0, true);
      // Undeclared exception!
      try {
        xMLCharacterEncoder0.write("", 9, 9);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: 18
         */
      }
  }

  @Test
  public void test22()  throws Throwable  {
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Writer) null);
      // Undeclared exception!
      try {
        xMLCharacterEncoder0.write("&\"Nv~r{]", 1849, 1849);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test23()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      PrintWriter printWriter0 = new PrintWriter((Writer) charArrayWriter0);
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Writer) printWriter0);
      xMLCharacterEncoder0.close();
      xMLCharacterEncoder0.close();
  }

  @Test
  public void test24()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(9);
      XMLCharacterEncoder xMLCharacterEncoder0 = new XMLCharacterEncoder((Appendable) charArrayWriter0, true);
      xMLCharacterEncoder0.close();
  }
}
