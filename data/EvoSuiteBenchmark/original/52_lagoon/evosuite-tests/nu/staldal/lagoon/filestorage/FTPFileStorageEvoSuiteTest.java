/*
 * This file was automatically generated by EvoSuite
 */

package nu.staldal.lagoon.filestorage;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.net.MalformedURLException;
import java.net.UnknownHostException;
import nu.staldal.ftp.FTPException;
import nu.staldal.lagoon.core.AuthenticationException;
import nu.staldal.lagoon.core.LagoonContext;
import nu.staldal.lagoon.filestorage.FTPFileStorage;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FTPFileStorageEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FTPFileStorage fTPFileStorage0 = new FTPFileStorage();
      // Undeclared exception!
      try {
        fTPFileStorage0.deleteFile("y");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      FTPFileStorage fTPFileStorage0 = new FTPFileStorage();
      try {
        fTPFileStorage0.open("U_vwwQpE{B", (LagoonContext) null, "U_vwwQpE{B");
        fail("Expecting exception: MalformedURLException");
      } catch(MalformedURLException e) {
        /*
         * U_vwwQpE{B
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      FTPFileStorage fTPFileStorage0 = new FTPFileStorage();
      // Undeclared exception!
      try {
        fTPFileStorage0.createFile("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      FTPFileStorage fTPFileStorage0 = new FTPFileStorage();
      boolean boolean0 = fTPFileStorage0.needPassword();
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      FTPFileStorage fTPFileStorage0 = new FTPFileStorage();
      boolean boolean0 = fTPFileStorage0.isReentrant();
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      FTPFileStorage fTPFileStorage0 = new FTPFileStorage();
      // Undeclared exception!
      try {
        fTPFileStorage0.close();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      FTPFileStorage fTPFileStorage0 = new FTPFileStorage();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FTPFileStorage.FTPOutputHandler fTPFileStorage_FTPOutputHandler0 = fTPFileStorage0.new FTPOutputHandler("*wT%_\"WAj)", (OutputStream) pipedOutputStream0);
      // Undeclared exception!
      try {
        fTPFileStorage_FTPOutputHandler0.discard();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
