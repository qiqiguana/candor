/*
 * This file was automatically generated by EvoSuite
 */

package com.mentorgen.tools.profile.runtime;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.mentorgen.tools.profile.runtime.Metrics;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MetricsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Metrics metrics0 = new Metrics();
      String string0 = metrics0.toString();
      assertNotNull(string0);
      assertEquals("count: 0 time: 0", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      Metrics metrics0 = new Metrics();
      long long0 = metrics0.getCount();
      assertEquals("count: 0 time: 0", metrics0.toString());
      assertEquals(0L, long0);
  }

  @Test
  public void test2()  throws Throwable  {
      Metrics metrics0 = new Metrics();
      long long0 = metrics0.getTotalTime();
      assertEquals("count: 0 time: 0", metrics0.toString());
      assertEquals(0L, long0);
  }

  @Test
  public void test3()  throws Throwable  {
      Metrics metrics0 = new Metrics();
      metrics0.inc(0L);
      assertEquals("count: 1 time: 0", metrics0.toString());
      assertEquals(1L, metrics0.getCount());
  }

  @Test
  public void test4()  throws Throwable  {
      Metrics metrics0 = new Metrics();
      metrics0.inc(1914L);
      metrics0.inc(1914L);
      metrics0.adjust(1914L);
      assertEquals(2L, metrics0.getCount());
      assertEquals(1914L, metrics0.getTotalTime());
  }

  @Test
  public void test5()  throws Throwable  {
      Metrics metrics0 = new Metrics();
      metrics0.adjust(0L);
      assertEquals("count: 0 time: 0", metrics0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      Metrics metrics0 = new Metrics();
      metrics0.adjust(1914L);
      assertEquals("count: 0 time: 0", metrics0.toString());
      assertEquals(0L, metrics0.getTotalTime());
  }
}
