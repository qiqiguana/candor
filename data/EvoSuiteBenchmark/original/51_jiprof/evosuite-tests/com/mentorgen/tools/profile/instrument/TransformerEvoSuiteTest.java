/*
 * This file was automatically generated by EvoSuite
 */

package com.mentorgen.tools.profile.instrument;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.mentorgen.tools.profile.instrument.Transformer;
import java.lang.instrument.IllegalClassFormatException;
import java.net.SocketAddress;
import java.security.ProtectionDomain;
import java.security.cert.CertPath;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TransformerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Transformer transformer0 = new Transformer();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Class<?> class0 = SocketAddress.class;
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = transformer0.transform(classLoader0, "com/mentorgen/tools/profile#gcRvi_Oi@9OfSM3L6Q", class0, (ProtectionDomain) null, byteArray0);
      assertSame(byteArray0, byteArray1);
  }

  @Test
  public void test1()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      byte[] byteArray0 = new byte[4];
      Transformer transformer0 = new Transformer();
      Class<?> class0 = Transformer.class;
      byte[] byteArray1 = transformer0.transform(classLoader0, "net/sourceforge/jiprofHoX*e-jF03`Kc", class0, (ProtectionDomain) null, byteArray0);
      assertSame(byteArray0, byteArray1);
  }

  @Test
  public void test2()  throws Throwable  {
      Transformer transformer0 = new Transformer();
      Class<?> class0 = Transformer.class;
      byte[] byteArray0 = new byte[5];
      byte[] byteArray1 = transformer0.transform((ClassLoader) null, "0hX", class0, (ProtectionDomain) null, byteArray0);
      assertSame(byteArray1, byteArray0);
  }

  @Test
  public void test3()  throws Throwable  {
      Transformer transformer0 = new Transformer();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Class<?> class0 = CertPath.class;
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try {
        transformer0.transform(classLoader0, "", class0, (ProtectionDomain) null, byteArray0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * java.lang.ArrayIndexOutOfBoundsException: 8
         */
      }
  }
}
