/*
 * This file was automatically generated by EvoSuite
 */

package com.tivo.jipviewer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.tivo.jipviewer.JipFrame;
import com.tivo.jipviewer.JipMethod;
import com.tivo.jipviewer.MethodRow;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MethodRowEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MethodRow methodRow0 = new MethodRow((JipMethod) null);
      double double0 = methodRow0.getPercentNet();
      assertEquals(0.0, double0, 0.01D);
      assertEquals(1.0, methodRow0.mTimeDenominator, 0.01D);
      assertEquals(0, methodRow0.mCount);
      assertEquals(0L, methodRow0.mTotalTime);
  }

  @Test
  public void test1()  throws Throwable  {
      MethodRow methodRow0 = new MethodRow((JipMethod) null);
      long long0 = methodRow0.getCount();
      assertEquals(1.0, methodRow0.mTimeDenominator, 0.01D);
      assertEquals(0L, long0);
      assertEquals(0.0, methodRow0.getPercentNet(), 0.01D);
      assertEquals(0L, methodRow0.mTotalTime);
  }

  @Test
  public void test2()  throws Throwable  {
      MethodRow methodRow0 = new MethodRow((JipMethod) null);
      long long0 = methodRow0.getTotalTime();
      assertEquals(0.0, methodRow0.getPercentTotal(), 0.01D);
      assertEquals(1.0, methodRow0.mTimeDenominator, 0.01D);
      assertEquals(0, methodRow0.mCount);
      assertEquals(0L, methodRow0.mNetTime);
      assertEquals(0L, long0);
  }

  @Test
  public void test3()  throws Throwable  {
      MethodRow methodRow0 = new MethodRow((JipMethod) null);
      double double0 = methodRow0.getPercentTotal();
      assertEquals(0L, methodRow0.mNetTime);
      assertEquals(0.0, double0, 0.01D);
      assertEquals(0, methodRow0.mCount);
      assertEquals(1.0, methodRow0.mTimeDenominator, 0.01D);
  }

  @Test
  public void test4()  throws Throwable  {
      MethodRow methodRow0 = new MethodRow((JipMethod) null);
      // Undeclared exception!
      try {
        methodRow0.addFrame((JipFrame) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      MethodRow methodRow0 = new MethodRow((JipMethod) null);
      long long0 = methodRow0.getNetTime();
      assertEquals(0.0, methodRow0.getPercentNet(), 0.01D);
      assertEquals(0L, methodRow0.mTotalTime);
      assertEquals(0, methodRow0.mCount);
      assertEquals(1.0, methodRow0.mTimeDenominator, 0.01D);
      assertEquals(0L, long0);
  }

  @Test
  public void test6()  throws Throwable  {
      MethodRow methodRow0 = new MethodRow((JipMethod) null);
      methodRow0.setTimeDenominator(1.0);
      assertEquals(0L, methodRow0.mNetTime);
      assertEquals(0, methodRow0.mCount);
      assertEquals(0.0, methodRow0.getPercentTotal(), 0.01D);
      assertEquals(1.0, methodRow0.mTimeDenominator, 0.01D);
      assertEquals(0.0, methodRow0.getPercentNet(), 0.01D);
  }

  @Test
  public void test7()  throws Throwable  {
      MethodRow methodRow0 = new MethodRow((JipMethod) null);
      // Undeclared exception!
      try {
        methodRow0.setTimeDenominator((double) 0L);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * don't divide by zero!
         */
      }
  }
}
