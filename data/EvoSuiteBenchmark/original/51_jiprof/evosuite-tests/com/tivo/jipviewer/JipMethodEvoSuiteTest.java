/*
 * This file was automatically generated by EvoSuite
 */

package com.tivo.jipviewer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.tivo.jipviewer.JipMethod;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JipMethodEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JipMethod jipMethod0 = new JipMethod("4");
      assertNotNull(jipMethod0);
      
      String string0 = jipMethod0.toString();
      assertNotNull(string0);
      assertEquals("4", jipMethod0.getMethodName());
      assertEquals("4", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      JipMethod jipMethod0 = new JipMethod("4");
      assertNotNull(jipMethod0);
      
      String string0 = jipMethod0.getMethodName();
      assertNotNull(string0);
      assertEquals("4", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      JipMethod jipMethod0 = new JipMethod("?e");
      assertNotNull(jipMethod0);
      
      int int0 = jipMethod0.hashCode();
      assertEquals("?e", jipMethod0.getMethodName());
      assertEquals(2054, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      JipMethod jipMethod0 = new JipMethod("):v\"-gOEA[5~GFeck");
      assertNotNull(jipMethod0);
      
      String string0 = jipMethod0.getPackageName();
      assertEquals("v\"-gOEA[5~GFeck", jipMethod0.getMethodName());
      assertNotNull(string0);
      assertEquals(")", jipMethod0.getClassName());
      assertEquals("", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      JipMethod jipMethod0 = new JipMethod("?e");
      assertNotNull(jipMethod0);
      
      String string0 = jipMethod0.getClassName();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals("?e", jipMethod0.getMethodName());
  }

  @Test
  public void test5()  throws Throwable  {
      JipMethod jipMethod0 = new JipMethod("?e");
      assertNotNull(jipMethod0);
      
      String string0 = jipMethod0.getName();
      assertEquals("?e", string0);
      assertEquals("?e", jipMethod0.getMethodName());
      assertNotNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      JipMethod jipMethod0 = new JipMethod("Rj!lRm%&[8L.4:J^]");
      assertEquals("J^]", jipMethod0.getMethodName());
      assertNotNull(jipMethod0);
      assertEquals("Rj!lRm%&[8L", jipMethod0.getPackageName());
      assertEquals("4", jipMethod0.getClassName());
  }

  @Test
  public void test7()  throws Throwable  {
      JipMethod jipMethod0 = new JipMethod("?e");
      assertNotNull(jipMethod0);
      
      boolean boolean0 = jipMethod0.equals((Object) jipMethod0);
      assertEquals("?e", jipMethod0.getMethodName());
      assertEquals(true, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      JipMethod jipMethod0 = new JipMethod("?e");
      assertNotNull(jipMethod0);
      
      // Undeclared exception!
      try {
        jipMethod0.equals((Object) "");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * other isA class java.lang.String
         */
      }
  }
}
