/*
 * This file was automatically generated by EvoSuite
 */

package com.tivo.jipviewer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.tivo.jipviewer.JipFrame;
import com.tivo.jipviewer.JipMethod;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JipFrameEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JipFrame jipFrame0 = new JipFrame((JipFrame) null, (JipMethod) null, (-892L), (-892L), (-892L));
      assertNotNull(jipFrame0);
      
      List<JipFrame> list0 = jipFrame0.getChildren();
      assertEquals((-892L), jipFrame0.getCount());
      assertEquals(0, list0.size());
      assertEquals((-892L), jipFrame0.getTotalTime());
      assertNotNull(list0);
  }

  @Test
  public void test1()  throws Throwable  {
      JipFrame jipFrame0 = new JipFrame((JipFrame) null, (JipMethod) null, (-892L), (-892L), (-892L));
      assertNotNull(jipFrame0);
      
      jipFrame0.getNetTime();
      assertEquals((-892L), jipFrame0.getTotalTime());
      assertEquals((-892L), jipFrame0.getCount());
  }

  @Test
  public void test2()  throws Throwable  {
      JipFrame jipFrame0 = new JipFrame((JipFrame) null, (JipMethod) null, (-892L), (-892L), (-892L));
      assertNotNull(jipFrame0);
      
      long long0 = jipFrame0.getCount();
      assertEquals((-892L), jipFrame0.getTotalTime());
      assertEquals((-892L), long0);
  }

  @Test
  public void test3()  throws Throwable  {
      JipFrame jipFrame0 = new JipFrame((JipFrame) null, (JipMethod) null, (-892L), (-892L), (-892L));
      assertNotNull(jipFrame0);
      
      JipFrame jipFrame1 = new JipFrame(jipFrame0, (JipMethod) null, (-892L), (-892L), (-892L));
      assertNotNull(jipFrame1);
      
      jipFrame0.computeNetTime();
      assertEquals((-892L), jipFrame0.getTotalTime());
      assertEquals((-892L), jipFrame0.getCount());
      assertEquals(0L, jipFrame0.getNetTime());
  }

  @Test
  public void test4()  throws Throwable  {
      JipFrame jipFrame0 = new JipFrame((JipFrame) null, (JipMethod) null, (-892L), (-892L), (-892L));
      assertNotNull(jipFrame0);
      
      JipFrame jipFrame1 = jipFrame0.getParentOrNull();
      assertNull(jipFrame1);
      assertEquals((-892L), jipFrame0.getCount());
      assertEquals((-892L), jipFrame0.getTotalTime());
  }

  @Test
  public void test5()  throws Throwable  {
      JipFrame jipFrame0 = new JipFrame((JipFrame) null, (JipMethod) null, (-892L), (-892L), (-892L));
      assertNotNull(jipFrame0);
      
      JipFrame jipFrame1 = new JipFrame(jipFrame0, (JipMethod) null, (-892L), (-892L), (-892L));
      assertNotNull(jipFrame1);
      
      // Undeclared exception!
      try {
        jipFrame1.isReentrant();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      JipFrame jipFrame0 = new JipFrame((JipFrame) null, (JipMethod) null, (-892L), (-892L), (-892L));
      assertNotNull(jipFrame0);
      
      boolean boolean0 = jipFrame0.isReentrant();
      assertEquals((-892L), jipFrame0.getTotalTime());
      assertEquals((-892L), jipFrame0.getCount());
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      JipFrame jipFrame0 = new JipFrame((JipFrame) null, (JipMethod) null, (-892L), (-892L), (-892L));
      assertNotNull(jipFrame0);
      
      jipFrame0.computeNetTime();
      assertEquals((-892L), jipFrame0.getCount());
      assertEquals(0L, jipFrame0.getNetTime());
  }
}
