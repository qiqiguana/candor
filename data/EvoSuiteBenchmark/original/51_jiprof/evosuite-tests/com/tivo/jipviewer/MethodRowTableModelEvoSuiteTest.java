/*
 * This file was automatically generated by EvoSuite
 */

package com.tivo.jipviewer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.tivo.jipviewer.MethodRow;
import com.tivo.jipviewer.MethodRowTableModel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MethodRowTableModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MethodRowTableModel methodRowTableModel0 = new MethodRowTableModel();
      int int0 = methodRowTableModel0.getRowCount();
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      MethodRowTableModel methodRowTableModel0 = new MethodRowTableModel();
      methodRowTableModel0.add((MethodRow) null);
      // Undeclared exception!
      try {
        methodRowTableModel0.getValueAt(0, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      MethodRowTableModel methodRowTableModel0 = new MethodRowTableModel();
      methodRowTableModel0.clear();
      assertEquals(8, methodRowTableModel0.getColumnCount());
  }

  @Test
  public void test3()  throws Throwable  {
      MethodRowTableModel methodRowTableModel0 = new MethodRowTableModel();
      methodRowTableModel0.findColumn("}yBFu2C:x~}/Dj");
      assertEquals(8, methodRowTableModel0.getColumnCount());
  }

  @Test
  public void test4()  throws Throwable  {
      MethodRowTableModel methodRowTableModel0 = new MethodRowTableModel();
      // Undeclared exception!
      try {
        methodRowTableModel0.getColumnName(752);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * bad column index
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      MethodRowTableModel methodRowTableModel0 = new MethodRowTableModel();
      Class<Object> class0 = methodRowTableModel0.getColumnClass(0);
      assertEquals("java.lang.Double", class0.getName());
      assertNotNull(class0);
  }

  @Test
  public void test6()  throws Throwable  {
      MethodRowTableModel methodRowTableModel0 = new MethodRowTableModel();
      Class<Object> class0 = methodRowTableModel0.getColumnClass(4);
      assertNotNull(class0);
      assertEquals("Double", class0.getSimpleName());
  }

  @Test
  public void test7()  throws Throwable  {
      MethodRowTableModel methodRowTableModel0 = new MethodRowTableModel();
      Class<Object> class0 = methodRowTableModel0.getColumnClass(1);
      assertNotNull(class0);
      assertEquals("class java.lang.Double", class0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      MethodRowTableModel methodRowTableModel0 = new MethodRowTableModel();
      Class<Object> class0 = methodRowTableModel0.getColumnClass(2);
      assertNotNull(class0);
      assertEquals("java.lang.Long", class0.getCanonicalName());
  }

  @Test
  public void test9()  throws Throwable  {
      MethodRowTableModel methodRowTableModel0 = new MethodRowTableModel();
      Class<Object> class0 = methodRowTableModel0.getColumnClass(3);
      assertNotNull(class0);
      assertEquals("Double", class0.getSimpleName());
  }

  @Test
  public void test10()  throws Throwable  {
      MethodRowTableModel methodRowTableModel0 = new MethodRowTableModel();
      Class<Object> class0 = methodRowTableModel0.getColumnClass(5);
      assertNotNull(class0);
      assertEquals("String", class0.getSimpleName());
  }

  @Test
  public void test11()  throws Throwable  {
      MethodRowTableModel methodRowTableModel0 = new MethodRowTableModel();
      Class<Object> class0 = methodRowTableModel0.getColumnClass(6);
      assertNotNull(class0);
      assertEquals("java.lang.String", class0.getName());
  }

  @Test
  public void test12()  throws Throwable  {
      MethodRowTableModel methodRowTableModel0 = new MethodRowTableModel();
      Class<Object> class0 = methodRowTableModel0.getColumnClass(7);
      assertNotNull(class0);
      assertEquals("String", class0.getSimpleName());
  }

  @Test
  public void test13()  throws Throwable  {
      MethodRowTableModel methodRowTableModel0 = new MethodRowTableModel();
      // Undeclared exception!
      try {
        methodRowTableModel0.getColumnClass((-457));
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * bad column index
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      MethodRowTableModel methodRowTableModel0 = new MethodRowTableModel();
      methodRowTableModel0.add((MethodRow) null);
      // Undeclared exception!
      try {
        methodRowTableModel0.getValueAt(0, 3);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      MethodRowTableModel methodRowTableModel0 = new MethodRowTableModel();
      methodRowTableModel0.add((MethodRow) null);
      // Undeclared exception!
      try {
        methodRowTableModel0.getValueAt(0, 5);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
