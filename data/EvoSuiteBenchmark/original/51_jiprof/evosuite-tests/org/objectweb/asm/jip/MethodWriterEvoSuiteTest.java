/*
 * This file was automatically generated by EvoSuite
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import org.junit.BeforeClass;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassVisitor;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;

@RunWith(EvoSuiteRunner.class)
public class MethodWriterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try {
        MethodWriter.readShort(byteArray0, (-795));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -795
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1283);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "\"u+b|D*uj";
      stringArray0[3] = "\"u+b|D*uj";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "\"u+b|D*uj", "a*_{`)1+I<}@/[V1>f", "", stringArray0, true, true);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, methodWriter0.exceptions, labelArray0);
      methodWriter0.visitJumpInsn(0, label0);
      assertEquals(73, methodWriter0.getSize());
      assertEquals("L990736788", label0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try {
        MethodWriter.readUnsignedShort(byteArray0, (-948));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -948
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      classReader0.accept((ClassVisitor) classWriter0, 0);
      assertEquals("java/lang/Object", classReader0.getClassName());
  }

  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try {
        MethodWriter.writeShort(byteArray0, 4, 4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 4
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try {
        MethodWriter.readInt(byteArray0, 507);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 507
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Object";
      stringArray0[1] = "java/lang/Object";
      stringArray0[2] = "java/lang/Object";
      stringArray0[3] = "java/lang/Object";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 73, "java/lang/Object", "java/lang/Object", "java/lang/Object", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("java/lang/Object", false);
      assertNotNull(annotationVisitor0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(44, methodWriter0.getSize());
      assertEquals(44, int0);
  }

  @Test
  public void test7()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1381);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "", "H,{z1+z}@b)'t*gN5", "", stringArray0, false, true);
      assertNotNull(methodWriter0);
      assertEquals(26, methodWriter0.getSize());
  }

  @Test
  public void test8()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(831);
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      classReader0.accept((ClassVisitor) classWriter0, 928);
      assertEquals(33, classReader0.getAccess());
  }

  @Test
  public void test9()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1381);
      String[] stringArray0 = new String[7];
      stringArray0[0] = ",h&+BD9~icujSt+m";
      stringArray0[1] = ",h&+BD9~icujSt+m";
      stringArray0[2] = "n-OAuprG";
      stringArray0[3] = "n-OAuprG";
      stringArray0[4] = "2lBMs;Do-";
      stringArray0[5] = ",h&+BD9~icujSt+m";
      stringArray0[6] = ",h&+BD9~icujSt+m";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 31, "n-OAuprG", ",h&+BD9~icujSt+m", "n-OAuprG", stringArray0, false, false);
      methodWriter0.visitAnnotation("2lBMs;Do-", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Object";
      stringArray0[1] = "java/lang/Object";
      stringArray0[2] = "java/lang/Object";
      stringArray0[3] = "java/lang/Object";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 73, "java/lang/Object", "java/lang/Object", "java/lang/Object", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      // Undeclared exception!
      try {
        methodWriter0.visitParameterAnnotation((-1341), "java/lang/Object", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 16
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(831);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Object";
      stringArray0[1] = "java/lang/Object";
      stringArray0[2] = "java/lang/Object";
      stringArray0[3] = "java/lang/Object";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-955), "java/lang/Object", "java/lang/Object", "java/lang/Object", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      // Undeclared exception!
      try {
        methodWriter0.visitParameterAnnotation(66, "java/lang/Object", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 16
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      String[] stringArray0 = new String[22];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "java/lang/Object";
      stringArray1[1] = "java/lang/Object";
      stringArray1[2] = "java/lang/Object";
      stringArray1[3] = "java/lang/Object";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 73, "java/lang/Object", "java/lang/Object", "java/lang/Object", stringArray1, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame((-1475), (-1904), (Object[]) stringArray0, (-1475), (Object[]) stringArray1);
      // Undeclared exception!
      try {
        methodWriter0.visitFrame(0, 4, (Object[]) stringArray1, 0, (Object[]) stringArray0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      String[] stringArray0 = new String[22];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "java/lang/Object";
      stringArray1[1] = "java/lang/Object";
      stringArray1[2] = "java/lang/Object";
      stringArray1[3] = "java/lang/Object";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 73, "java/lang/Object", "java/lang/Object", "java/lang/Object", stringArray1, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame((-1475), (-1904), (Object[]) stringArray0, (-1475), (Object[]) stringArray1);
      methodWriter0.visitMethodInsn(73, "java/lang/Object", "java/lang/Object", "");
      methodWriter0.visitFrame(0, 4, (Object[]) stringArray1, 0, (Object[]) stringArray0);
      assertEquals(80, methodWriter0.getSize());
  }

  @Test
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1283);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "\"u+b|D*uj";
      stringArray0[1] = "a*_{`)1+I<}@/[V1>f";
      stringArray0[2] = "\"u+b|D*uj";
      stringArray0[3] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "\"u+b|D*uj", "a*_{`)1+I<}@/[V1>f", "", stringArray0, true, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(1478, (-606));
      assertEquals(52, methodWriter0.getSize());
  }

  @Test
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1283);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "\"u+b|D*uj";
      stringArray0[3] = "\"u+b|D*uj";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "\"u+b|D*uj", "a*_{`)1+I<}@/[V1>f", "", stringArray0, true, true);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(0, 1478);
      assertEquals(54, methodWriter0.getSize());
  }

  @Test
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Object";
      stringArray0[1] = "java/lang/Object";
      stringArray0[2] = "java/lang/Object";
      stringArray0[3] = "java/lang/Object";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-955), "java/lang/Object", "java/lang/Object", "java/lang/Object", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(0, 4);
      assertEquals(64, methodWriter0.getSize());
  }

  @Test
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(831);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Object";
      stringArray0[1] = "java/lang/Object";
      stringArray0[2] = "java/lang/Object";
      stringArray0[3] = "java/lang/Object";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-955), "java/lang/Object", "java/lang/Object", "java/lang/Object", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitTypeInsn(0, "java/lang/Object");
      assertEquals(65, methodWriter0.getSize());
  }

  @Test
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1283);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "\"uVb|Dguj";
      stringArray0[3] = "\"uVb|Dguj";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 9, "\"uVb|Dguj", "a*_{`)1+I<}@/[V1>f", "", stringArray0, true, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitTypeInsn(0, "a*_{`)1+I<}@/[V1>f");
      assertEquals(53, methodWriter0.getSize());
  }

  @Test
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Object";
      stringArray0[1] = "java/lang/Object";
      stringArray0[2] = "java/lang/Object";
      stringArray0[3] = "java/lang/Object";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-955), "java/lang/Object", "java/lang/Object", "java/lang/Object", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn(0, "java/lang/Object", "java/lang/Object", "java/lang/Object");
      assertEquals(65, methodWriter0.getSize());
  }

  @Test
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1283);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "\"u+b|D*uj";
      stringArray0[3] = "\"u+b|D*uj";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "\"u+b|D*uj", "a*_{`)1+I<}@/[V1>f", "", stringArray0, true, true);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn(0, "", "", "a*_{`)1+I<}@/[V1>f");
      assertEquals(53, methodWriter0.getSize());
  }

  @Test
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1283);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "\"uVb|Dguj";
      stringArray0[3] = "\"uVb|Dguj";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 9, "\"uVb|Dguj", "a*_{`)1+I<}@/[V1>f", "", stringArray0, true, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn(0, "", "", "a*_{`)1+I<}@/[V1>f");
      assertEquals(53, methodWriter0.getSize());
  }

  @Test
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(831);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Object";
      stringArray0[1] = "java/lang/Object";
      stringArray0[2] = "java/lang/Object";
      stringArray0[3] = "java/lang/Object";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-955), "java/lang/Object", "java/lang/Object", "java/lang/Object", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitLdcInsn((Object) "java/lang/Object");
      assertEquals(64, methodWriter0.getSize());
  }

  @Test
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1283);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "\"u+b|D*uj";
      stringArray0[3] = "\"u+b|D*uj";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "\"u+b|D*uj", "a*_{`)1+I<}@/[V1>f", "", stringArray0, true, true);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIincInsn(0, 0);
      assertEquals(53, methodWriter0.getSize());
  }

  @Test
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1283);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "\"uVb|Dguj";
      stringArray0[3] = "\"uVb|Dguj";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 9, "\"uVb|Dguj", "a*_{`)1+I<}@/[V1>f", "", stringArray0, true, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIincInsn(1721, 9);
      assertEquals(56, methodWriter0.getSize());
  }

  @Test
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(831);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Object";
      stringArray0[1] = "java/lang/Object";
      stringArray0[2] = "java/lang/Object";
      stringArray0[3] = "java/lang/Object";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-955), "java/lang/Object", "java/lang/Object", "java/lang/Object", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIincInsn(252, 65535);
      assertEquals(68, methodWriter0.getSize());
  }

  @Test
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Object";
      stringArray0[1] = "java/lang/Object";
      stringArray0[2] = "java/lang/Object";
      stringArray0[3] = "java/lang/Object";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-955), "java/lang/Object", "java/lang/Object", "java/lang/Object", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      Label[] labelArray0 = new Label[8];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      labelArray0[5] = label0;
      labelArray0[6] = label0;
      labelArray0[7] = labelArray0[1];
      methodWriter0.visitTableSwitchInsn((-955), 0, label0, labelArray0);
      assertEquals(110, methodWriter0.getSize());
      assertEquals("L324139364", label0.toString());
  }

  @Test
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1283);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "\"uVb|Dguj";
      stringArray0[3] = "\"uVb|Dguj";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 9, "\"uVb|Dguj", "a*_{`)1+I<}@/[V1>f", "", stringArray0, true, false);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, methodWriter0.exceptions, labelArray0);
      assertEquals(70, methodWriter0.getSize());
      assertEquals("L857145352", label0.toString());
  }

  @Test
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Object";
      stringArray0[1] = "java/lang/Object";
      stringArray0[2] = "java/lang/Object";
      stringArray0[3] = "java/lang/Object";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 73, "java/lang/Object", "java/lang/Object", "java/lang/Object", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMultiANewArrayInsn("java/lang/Object", 73);
      assertEquals(54, methodWriter0.getSize());
  }

  @Test
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1283);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "\"u+b|D*uj";
      stringArray0[1] = "a*_{`)1+I<}@/[V1>f";
      stringArray0[2] = "\"u+b|D*uj";
      stringArray0[3] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "a*_{`)1+I<}@/[V1>f", "a*_{`)1+I<}@/[V1>f", "\"u+b|D*uj", stringArray0, true, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMultiANewArrayInsn("a*_{`)1+I<}@/[V1>f", 938);
      assertEquals(54, methodWriter0.getSize());
  }

  @Test
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1283);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "\"u+b|D*uj";
      stringArray0[1] = "a*_{`)1+I<}@/[V1>f";
      stringArray0[2] = "\"u+b|D*uj";
      stringArray0[3] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "a*_{`)1+I<}@/[V1>f", "a*_{`)1+I<}@/[V1>f", "\"u+b|D*uj", stringArray0, true, false);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "RuntimeInvisibleParameterAnnotations");
      assertEquals("L26210775", label0.toString());
      
      methodWriter0.visitMaxs(1478, 938);
      assertEquals(32, methodWriter0.getSize());
  }

  @Test
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1283);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "\"u+b|D*uj";
      stringArray0[1] = "a*_{`)1+I<}@/[V1>f";
      stringArray0[2] = "\"u+b|D*uj";
      stringArray0[3] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "\"u+b|D*uj", "a*_{`)1+I<}@/[V1>f", "", stringArray0, true, false);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock((Label) null, label0, label0, "\"u+b|D*uj");
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "a*_{`)1+I<}@/[V1>f");
      assertEquals("L1908860120", label0.toString());
  }

  @Test
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1283);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "\"u+b|D*uj";
      stringArray0[1] = "a*_{`)1+I<}@/[V1>f";
      stringArray0[2] = "\"u+b|D*uj";
      stringArray0[3] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "a*_{`)1+I<}@/[V1>f", "a*_{`)1+I<}@/[V1>f", "\"u+b|D*uj", stringArray0, true, false);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("a*_{`)1+I<}@/[V1>f", "RuntimeInvisibleParameterAnnotations", "a*_{`)1+I<}@/[V1>f", label0, label0, 1);
      assertEquals("L1007402333", label0.toString());
  }

  @Test
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      String[] stringArray0 = new String[8];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "java/lang/Object";
      stringArray1[1] = "java/lang/Object";
      stringArray1[2] = "java/lang/Object";
      stringArray1[3] = "java/lang/Object";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-944), "java/lang/Object", "java/lang/Object", "java/lang/Object", stringArray1, false, false);
      assertNotNull(methodWriter0);
      
      // Undeclared exception!
      try {
        methodWriter0.visitFrame(0, 454, (Object[]) stringArray0, 16, (Object[]) stringArray1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Object";
      stringArray0[1] = "java/lang/Object";
      stringArray0[2] = "java/lang/Object";
      stringArray0[3] = "java/lang/Object";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 73, "java/lang/Object", "java/lang/Object", "java/lang/Object", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(73, 73);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("<.E][Z9j{ )K;7", "java/lang/Object", "<.E][Z9j{ )K;7", label0, label0, (-363));
      assertEquals("L1977450621", label0.toString());
      
      int int0 = methodWriter0.getSize();
      assertEquals(88, methodWriter0.getSize());
      assertEquals(88, int0);
  }

  @Test
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      String[] stringArray0 = new String[22];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "java/lang/Object";
      stringArray1[1] = "java/lang/Object";
      stringArray1[2] = "java/lang/Object";
      stringArray1[3] = "java/lang/Object";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 73, "java/lang/Object", "java/lang/Object", "java/lang/Object", stringArray1, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(73, 73);
      methodWriter0.visitFrame((-1475), (-1904), (Object[]) stringArray0, (-1475), (Object[]) stringArray1);
      int int0 = methodWriter0.getSize();
      assertEquals(60, methodWriter0.getSize());
      assertEquals(60, int0);
  }

  @Test
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Object";
      stringArray0[1] = "java/lang/Object";
      stringArray0[2] = "java/lang/Object";
      stringArray0[3] = "java/lang/Object";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-955), "java/lang/Object", "java/lang/Object", "java/lang/Object", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(44, int0);
  }

  @Test
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      classWriter0.version = 73;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Object";
      stringArray0[1] = "java/lang/Object";
      stringArray0[2] = "java/lang/Object";
      stringArray0[3] = "java/lang/Object";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-955), "java/lang/Object", "java/lang/Object", "java/lang/Object", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
      assertEquals(38, methodWriter0.getSize());
  }

  @Test
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1283);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "\"u+b|D*uj";
      stringArray0[1] = "a*_{`)1+I<}@/[V1>f";
      stringArray0[2] = "\"u+b|D*uj";
      stringArray0[3] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "\"u+b|D*uj", "a*_{`)1+I<}@/[V1>f", "", stringArray0, true, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitAnnotationDefault();
      ByteVector byteVector0 = new ByteVector(0);
      methodWriter0.put(byteVector0);
      assertEquals(38, methodWriter0.getSize());
  }

  @Test
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Object";
      stringArray0[1] = "java/lang/Object";
      stringArray0[2] = "java/lang/Object";
      stringArray0[3] = "java/lang/Object";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 73, "java/lang/Object", "java/lang/Object", "java/lang/Object", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitAnnotation("java/lang/Object", false);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
      assertEquals(44, methodWriter0.getSize());
  }

  @Test
  public void test40()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Object";
      stringArray0[1] = "java/lang/Object";
      stringArray0[2] = "java/lang/Object";
      stringArray0[3] = "java/lang/Object";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 73, "java/lang/Object", "java/lang/Object", "java/lang/Object", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(73, 73);
      ByteVector byteVector0 = classWriter0.pool;
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("<.E][Z9j{ )K;7", "java/lang/Object", "<.E][Z9j{ )K;7", label0, label0, (-363));
      methodWriter0.put(byteVector0);
      assertEquals(88, methodWriter0.getSize());
  }

  @Test
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Object";
      stringArray0[1] = "java/lang/Object";
      stringArray0[2] = "java/lang/Object";
      stringArray0[3] = "java/lang/Object";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-944), "java/lang/Object", "java/lang/Object", "java/lang/Object", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn((-1), (-1393));
      ByteVector byteVector0 = classWriter0.pool;
      Label label0 = new Label();
      methodWriter0.visitLineNumber((-1393), label0);
      assertEquals("L1483451250", label0.toString());
      
      methodWriter0.put(byteVector0);
      assertEquals(75, methodWriter0.getSize());
  }

  @Test
  public void test42()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      String[] stringArray0 = new String[22];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "java/lang/Object";
      stringArray1[1] = "java/lang/Object";
      stringArray1[2] = "java/lang/Object";
      stringArray1[3] = "java/lang/Object";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 73, "java/lang/Object", "java/lang/Object", "java/lang/Object", stringArray1, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(73, 73);
      methodWriter0.visitFrame((-1475), (-1904), (Object[]) stringArray0, (-1475), (Object[]) stringArray1);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
      assertEquals(60, methodWriter0.getSize());
  }

  @Test
  public void test43()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1283);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "\"u+b|D*uj";
      stringArray0[1] = "a*_{`)1+I<}@/[V1>f";
      stringArray0[2] = "\"u+b|D*uj";
      stringArray0[3] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "\"u+b|D*uj", "a*_{`)1+I<}@/[V1>f", "", stringArray0, true, false);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock((Label) null, label0, label0, "\"u+b|D*uj");
      methodWriter0.visitInsn(0);
      ByteVector byteVector0 = new ByteVector(0);
      // Undeclared exception!
      try {
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test44()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1283);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "\"u+b|D*uj";
      stringArray0[3] = "\"u+b|D*uj";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "\"u+b|D*uj", "a*_{`)1+I<}@/[V1>f", "", stringArray0, true, true);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      MethodWriter.getNewOffset(methodWriter0.exceptions, methodWriter0.exceptions, label0);
      assertEquals("L2085087101", label0.toString());
  }

  @Test
  public void test45()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1283);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "\"u+b|D*uj";
      stringArray0[3] = "\"u+b|D*uj";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "\"u+b|D*uj", "a*_{`)1+I<}@/[V1>f", "", stringArray0, true, true);
      assertNotNull(methodWriter0);
      
      int[] intArray0 = new int[5];
      Label label0 = new Label();
      MethodWriter.getNewOffset(intArray0, methodWriter0.exceptions, label0);
      assertEquals("L841939356", label0.toString());
  }

  @Test
  public void test46()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[3] = 1024;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 0, 1024);
      assertEquals(2048, int0);
  }

  @Test
  public void test47()  throws Throwable  {
      int[] intArray0 = new int[7];
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 0, (-85));
      assertEquals((-85), int0);
  }

  @Test
  public void test48()  throws Throwable  {
      int[] intArray0 = new int[5];
      Label label0 = new Label();
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertEquals("L1480116147", label0.toString());
  }
}
