/*
 * This file was automatically generated by EvoSuite
 */

package org.objectweb.asm.jip.attrs;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.attrs.StackMapAttribute;
import org.objectweb.asm.jip.attrs.StackMapFrame;

@RunWith(EvoSuiteRunner.class)
public class StackMapAttributeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      StackMapAttribute stackMapAttribute0 = new StackMapAttribute();
      List<Object> list0 = stackMapAttribute0.getFrames();
      assertEquals(true, list0.isEmpty());
  }

  @Test
  public void test1()  throws Throwable  {
      LinkedList<Label> linkedList0 = new LinkedList<Label>();
      StackMapAttribute stackMapAttribute0 = new StackMapAttribute((List) linkedList0);
      Label label0 = new Label();
      linkedList0.add(label0);
      // Undeclared exception!
      try {
        stackMapAttribute0.getFrame(label0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * org.objectweb.asm.jip.Label cannot be cast to org.objectweb.asm.jip.attrs.StackMapFrame
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add((String) null);
      StackMapAttribute stackMapAttribute0 = new StackMapAttribute((List) linkedList0);
      // Undeclared exception!
      try {
        stackMapAttribute0.getLabels();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      StackMapAttribute stackMapAttribute0 = new StackMapAttribute();
      boolean boolean0 = stackMapAttribute0.isCodeAttribute();
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      LinkedList<StackMapFrame> linkedList0 = new LinkedList<StackMapFrame>();
      StackMapAttribute stackMapAttribute0 = new StackMapAttribute((List) linkedList0);
      linkedList0.add((StackMapFrame) null);
      ClassWriter classWriter0 = new ClassWriter(22);
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try {
        stackMapAttribute0.write(classWriter0, byteArray0, (int) (byte)0, (int) (byte)0, (int) (byte)0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      StackMapAttribute stackMapAttribute0 = new StackMapAttribute();
      boolean boolean0 = stackMapAttribute0.isUnknown();
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      StackMapAttribute stackMapAttribute0 = new StackMapAttribute();
      Label label0 = new Label();
      stackMapAttribute0.getFrame(label0);
      assertEquals("L1899149322", label0.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      StackMapAttribute stackMapAttribute0 = new StackMapAttribute();
      Label[] labelArray0 = stackMapAttribute0.getLabels();
      byte[] byteArray0 = new byte[36];
      ClassReader classReader0 = new ClassReader(byteArray0);
      char[] charArray0 = new char[7];
      byteArray0[31] = (byte)1;
      StackMapAttribute stackMapAttribute1 = (StackMapAttribute)stackMapAttribute0.read(classReader0, (int) (byte)1, 1, charArray0, (int) (byte)27, labelArray0);
      assertEquals("StackMap[\n]", stackMapAttribute1.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      StackMapAttribute stackMapAttribute0 = new StackMapAttribute();
      Label[] labelArray0 = stackMapAttribute0.getLabels();
      byte[] byteArray0 = new byte[36];
      ClassReader classReader0 = new ClassReader(byteArray0);
      char[] charArray0 = new char[7];
      byteArray0[28] = (byte) (-1);
      // Undeclared exception!
      try {
        stackMapAttribute0.read(classReader0, (int) (byte)27, (int) ']', charArray0, (int) (byte)1, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 0
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      StackMapAttribute stackMapAttribute0 = new StackMapAttribute();
      Label[] labelArray0 = stackMapAttribute0.getLabels();
      byte[] byteArray0 = new byte[36];
      ClassReader classReader0 = new ClassReader(byteArray0);
      char[] charArray0 = new char[7];
      byteArray0[2] = (byte)27;
      byteArray0[31] = (byte)1;
      // Undeclared exception!
      try {
        stackMapAttribute0.read(classReader0, (int) (byte)1, 1, charArray0, (int) (byte)27, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 0
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      StackMapAttribute stackMapAttribute0 = new StackMapAttribute();
      ClassWriter classWriter0 = new ClassWriter((-11));
      ByteVector byteVector0 = stackMapAttribute0.write(classWriter0, (byte[]) null, (-370), (-377), (int) '\u0000');
      assertNotNull(byteVector0);
  }

  @Test
  public void test11()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add((String) null);
      StackMapAttribute stackMapAttribute0 = new StackMapAttribute((List) linkedList0);
      String string0 = stackMapAttribute0.toString();
      assertEquals("StackMap[\n[null]\n]", string0);
      assertNotNull(string0);
  }
}
