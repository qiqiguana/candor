/*
 * This file was automatically generated by EvoSuite
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.objectweb.asm.jip.Item;

@RunWith(EvoSuiteRunner.class)
public class ItemEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Item item0 = new Item();
      item0.set((double) 0);
      boolean boolean0 = item0.isEqualTo(item0);
      assertEquals(6, item0.type);
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      Item item0 = new Item();
      item0.set(3);
      boolean boolean0 = item0.isEqualTo(item0);
      assertEquals(3, item0.type);
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      Item item0 = new Item((-15));
      Item item1 = new Item(12, item0);
      item0.set((long) 12);
      boolean boolean0 = item0.isEqualTo(item1);
      assertEquals(12L, item0.longVal);
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      Item item0 = new Item((-15));
      item0.set((long) 12);
      boolean boolean0 = item0.isEqualTo(item0);
      assertEquals(12L, item0.longVal);
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      Item item0 = new Item();
      item0.set((float) 1091567616);
      boolean boolean0 = item0.isEqualTo(item0);
      assertEquals(1317150720, item0.intVal);
      assertEquals(true, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      Item item0 = new Item();
      // Undeclared exception!
      try {
        item0.set(1, (String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Item item0 = new Item((-15));
      item0.set(12, "", "", "");
      boolean boolean0 = item0.isEqualTo(item0);
      assertEquals(12, item0.type);
      assertEquals(true, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      Item item0 = new Item();
      // Undeclared exception!
      try {
        item0.set(3, (String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      Item item0 = new Item();
      item0.set(4, "_ W>[BhU", "_ W>[BhU", "_ W>[BhU");
      assertEquals(4, item0.type);
      assertEquals(941485508, item0.hashCode);
  }

  @Test
  public void test9()  throws Throwable  {
      Item item0 = new Item();
      // Undeclared exception!
      try {
        item0.set(5, (String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      Item item0 = new Item();
      item0.set(6, "_ W>hU", "_ W>hU", "_ W>hU");
      Item item1 = new Item();
      item1.isEqualTo(item0);
      assertEquals(411102003, item0.hashCode);
      assertEquals(6, item0.type);
  }

  @Test
  public void test11()  throws Throwable  {
      Item item0 = new Item();
      // Undeclared exception!
      try {
        item0.set(7, (String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      Item item0 = new Item();
      item0.set(8, "N:Vbn*eddqH%rucHZ", "N:Vbn*eddqH%rucHZ", "4");
      boolean boolean0 = item0.isEqualTo(item0);
      assertEquals(8, item0.type);
      assertEquals(true, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      Item item0 = new Item();
      item0.set(9, "_ W>[BhU", "_ W>[BhU", "_ W>[BhU");
      boolean boolean0 = item0.isEqualTo(item0);
      assertEquals(9, item0.type);
      assertEquals(true, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      Item item0 = new Item();
      item0.set(11, "_ W>hU", "_ W>hU", "_ W>hU");
      boolean boolean0 = item0.isEqualTo(item0);
      assertEquals(11, item0.type);
      assertEquals(true, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      Item item0 = new Item();
      // Undeclared exception!
      try {
        item0.set(13, (String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      Item item0 = new Item();
      item0.set(14, "_ W>[BhU", "_ W>[BhU", "_ W>[BhU");
      boolean boolean0 = item0.isEqualTo(item0);
      assertEquals(14, item0.type);
      assertEquals(true, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      Item item0 = new Item();
      Item item1 = new Item();
      item1.type = 1;
      // Undeclared exception!
      try {
        item1.isEqualTo(item0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * StringEquals is not supposed to work on a null caller
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      Item item0 = new Item();
      Item item1 = new Item();
      item0.set((float) 1091567616);
      boolean boolean0 = item0.isEqualTo(item1);
      assertEquals(1317150720, item0.intVal);
      assertEquals(false, boolean0);
  }

  @Test
  public void test19()  throws Throwable  {
      Item item0 = new Item();
      item0.set(14, "_ W>[BhU", "_ W>[BhU", "_ W>[BhU");
      item0.intVal = 941485518;
      Item item1 = new Item();
      boolean boolean0 = item0.isEqualTo(item1);
      assertEquals(14, item0.type);
      assertEquals(false, boolean0);
  }

  @Test
  public void test20()  throws Throwable  {
      Item item0 = new Item();
      item0.set(14, "_ W>[BhU", "_ W>[BhU", "_ W>[BhU");
      Item item1 = new Item(941485518, item0);
      item0.strVal1 = "_ WB`hU";
      boolean boolean0 = item0.isEqualTo(item1);
      assertEquals(14, item0.type);
      assertEquals(false, boolean0);
  }

  @Test
  public void test21()  throws Throwable  {
      Item item0 = new Item((-15));
      item0.set(12, "", "", "");
      Item item1 = new Item(12, item0);
      String string0 = "N:Vbn*eddqH%\\ucZ";
      item1.set(12, "", string0, item0.strVal2);
      boolean boolean0 = item1.isEqualTo(item0);
      assertEquals(12, item0.type);
      assertEquals(false, boolean0);
  }

  @Test
  public void test22()  throws Throwable  {
      Item item0 = new Item();
      item0.set(2, " W>W[BhU", " W>W[BhU", " W>W[BhU");
      Item item1 = new Item(0, item0);
      item0.set(0, " W>W[BhU", "b>#`x", "b>#`x");
      boolean boolean0 = item1.isEqualTo(item0);
      assertEquals(1240720836, item0.hashCode);
      assertEquals(false, boolean0);
  }

  @Test
  public void test23()  throws Throwable  {
      Item item0 = new Item();
      item0.set(8, "N:Vbn*eddqH%rucHZ", "N:Vbn*eddqH%rucHZ", "4");
      Item item1 = new Item();
      item1.set(0, "N:Vbn*eddqH%rucHZ", "N:Vbn*eddqH%rucHZ", "N:Vbn*eddqH%rucHZ");
      boolean boolean0 = item1.isEqualTo(item0);
      assertEquals(796571288, item1.hashCode);
      assertEquals(false, boolean0);
  }
}
