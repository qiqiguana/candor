/*
 * This file was automatically generated by EvoSuite
 */

package org.objectweb.asm.jip.commons;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodVisitor;
import org.objectweb.asm.jip.Type;
import org.objectweb.asm.jip.commons.LocalVariablesSorter;

@RunWith(EvoSuiteRunner.class)
public class LocalVariablesSorterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LocalVariablesSorter localVariablesSorter0 = new LocalVariablesSorter(145, "#)sy_9BLvb", (MethodVisitor) null);
      // Undeclared exception!
      try {
        localVariablesSorter0.visitMaxs(1, 1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      LocalVariablesSorter localVariablesSorter0 = new LocalVariablesSorter((-510), "#)sy_9BLkb", (MethodVisitor) null);
      assertNotNull(localVariablesSorter0);
      
      Label label0 = new Label();
      // Undeclared exception!
      try {
        localVariablesSorter0.visitLocalVariable("#)sy_9BLkb", "#)sy_9BLkb", "#)sy_9BLkb", label0, label0, (-510));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 10
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      LocalVariablesSorter localVariablesSorter0 = new LocalVariablesSorter(2, "GB)7{4X55&l03\"5i[M5", (MethodVisitor) null);
      // Undeclared exception!
      try {
        localVariablesSorter0.visitIincInsn(2, 2);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      LocalVariablesSorter localVariablesSorter0 = new LocalVariablesSorter((-8), "c)`kHY@h0e3wHxCc]x", (MethodVisitor) null);
      // Undeclared exception!
      try {
        localVariablesSorter0.visitVarInsn((-8), (-8));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      LocalVariablesSorter localVariablesSorter0 = new LocalVariablesSorter(22, "oZ):U#zlFIyxIk", (MethodVisitor) null);
      // Undeclared exception!
      try {
        localVariablesSorter0.visitVarInsn(22, 22);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      LocalVariablesSorter localVariablesSorter0 = new LocalVariablesSorter(1052, "#)#y_9\u0000BLkb", (MethodVisitor) null);
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try {
        localVariablesSorter0.visitFrame((-1), 0, objectArray0, (-1), objectArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      LocalVariablesSorter localVariablesSorter0 = new LocalVariablesSorter(350, "#)sy_9BL0b", (MethodVisitor) null);
      Object[] objectArray0 = new Object[1];
      Object[] objectArray1 = new Object[9];
      // Undeclared exception!
      try {
        localVariablesSorter0.visitFrame(350, 350, objectArray0, 350, objectArray1);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * ClassReader.accept() should be called with EXPAND_FRAMES flag
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      LocalVariablesSorter localVariablesSorter0 = new LocalVariablesSorter((-510), "#)sy_9BLkb", (MethodVisitor) null);
      assertNotNull(localVariablesSorter0);
      
      Type type0 = Type.BOOLEAN_TYPE;
      int int0 = localVariablesSorter0.newLocal(type0);
      assertEquals(1, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      LocalVariablesSorter localVariablesSorter0 = new LocalVariablesSorter((-510), "#)sy_9BLkb", (MethodVisitor) null);
      assertNotNull(localVariablesSorter0);
      
      Type type0 = Type.SHORT_TYPE;
      int int0 = localVariablesSorter0.newLocal(type0);
      assertEquals(1, int0);
  }

  @Test
  public void test9()  throws Throwable  {
      LocalVariablesSorter localVariablesSorter0 = new LocalVariablesSorter(1568, "#)sy_9BLkb", (MethodVisitor) null);
      assertNotNull(localVariablesSorter0);
      
      Type type0 = Type.CHAR_TYPE;
      int int0 = localVariablesSorter0.newLocal(type0);
      assertEquals(1, int0);
  }

  @Test
  public void test10()  throws Throwable  {
      LocalVariablesSorter localVariablesSorter0 = new LocalVariablesSorter((-8), "c)`kHY@h0e3wHxCc]x", (MethodVisitor) null);
      assertNotNull(localVariablesSorter0);
      
      Type type0 = Type.BYTE_TYPE;
      int int0 = localVariablesSorter0.newLocal(type0);
      assertEquals(0, int0);
  }

  @Test
  public void test11()  throws Throwable  {
      LocalVariablesSorter localVariablesSorter0 = new LocalVariablesSorter(1568, "#)sy_9BLkb", (MethodVisitor) null);
      assertNotNull(localVariablesSorter0);
      
      Type type0 = Type.INT_TYPE;
      int int0 = localVariablesSorter0.newLocal(type0);
      assertEquals(1, int0);
  }

  @Test
  public void test12()  throws Throwable  {
      Type type0 = Type.FLOAT_TYPE;
      LocalVariablesSorter localVariablesSorter0 = new LocalVariablesSorter(145, "#)sy_9BLvb", (MethodVisitor) null);
      assertNotNull(localVariablesSorter0);
      
      int int0 = localVariablesSorter0.newLocal(type0);
      assertEquals(1, int0);
  }

  @Test
  public void test13()  throws Throwable  {
      LocalVariablesSorter localVariablesSorter0 = new LocalVariablesSorter(102, "#)sy_\b", (MethodVisitor) null);
      assertNotNull(localVariablesSorter0);
      
      Type type0 = Type.LONG_TYPE;
      int int0 = localVariablesSorter0.newLocal(type0);
      assertEquals(1, int0);
  }

  @Test
  public void test14()  throws Throwable  {
      LocalVariablesSorter localVariablesSorter0 = new LocalVariablesSorter(350, "#)sy_9BL0b", (MethodVisitor) null);
      assertNotNull(localVariablesSorter0);
      
      Type type0 = Type.DOUBLE_TYPE;
      localVariablesSorter0.newLocal(type0);
      localVariablesSorter0.newLocalMapping(type0);
      localVariablesSorter0.newLocalMapping(type0);
      localVariablesSorter0.newLocalMapping(type0);
      localVariablesSorter0.newLocal(type0);
      int int0 = localVariablesSorter0.newLocalMapping(type0);
      assertEquals(10, int0);
      
      localVariablesSorter0.newLocal(type0);
      localVariablesSorter0.newLocalMapping(type0);
      localVariablesSorter0.newLocal(type0);
      localVariablesSorter0.newLocal(type0);
      int int1 = localVariablesSorter0.newLocal(type0);
      assertEquals(20, int1);
  }

  @Test
  public void test15()  throws Throwable  {
      LocalVariablesSorter localVariablesSorter0 = new LocalVariablesSorter(1052, "#)#y_9\u0000BLkb", (MethodVisitor) null);
      assertNotNull(localVariablesSorter0);
      
      Class<?> class0 = MethodVisitor.class;
      Type type0 = Type.getType(class0);
      int int0 = localVariablesSorter0.newLocal(type0);
      assertEquals(0, int0);
  }
}
