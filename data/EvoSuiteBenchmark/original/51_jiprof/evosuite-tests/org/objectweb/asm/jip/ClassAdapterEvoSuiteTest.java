/*
 * This file was automatically generated by EvoSuite
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ClassAdapter;
import org.objectweb.asm.jip.ClassVisitor;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.FieldVisitor;

@RunWith(EvoSuiteRunner.class)
public class ClassAdapterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-847));
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) classWriter0);
      classAdapter0.visitEnd();
  }

  @Test
  public void test1()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(224);
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) classWriter0);
      AnnotationVisitor annotationVisitor0 = classAdapter0.visitAnnotation("eG(qO75", false);
      assertNotNull(annotationVisitor0);
  }

  @Test
  public void test2()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(765);
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) classWriter0);
      classAdapter0.visitOuterClass("rR:j9dR2}lV!)G9[,AE", "rR:j9dR2}lV!)G9[,AE", "rR:j9dR2}lV!)G9[,AE");
  }

  @Test
  public void test3()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1731);
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) classWriter0);
      // Undeclared exception!
      try {
        classAdapter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32);
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) classWriter0);
      classAdapter0.visitSource("!ggP&P.&>F/'vk.lu", "!ggP&P.&>F/'vk.lu");
  }

  @Test
  public void test5()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) classWriter0);
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try {
        classAdapter0.visit(8, (-1729), "Deprecated", "Deprecated", "Deprecated", stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32);
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) classWriter0);
      String[] stringArray0 = new String[9];
      // Undeclared exception!
      try {
        classAdapter0.visitMethod(0, "", "", "", stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(224);
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) classWriter0);
      classAdapter0.visitInnerClass("", "", "", 224);
  }

  @Test
  public void test8()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-847));
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) classWriter0);
      FieldVisitor fieldVisitor0 = classAdapter0.visitField(0, "", "", "", (Object) "");
      assertNotNull(fieldVisitor0);
  }
}
