/*
 * This file was automatically generated by EvoSuite
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.objectweb.asm.jip.AnnotationWriter;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Type;

@RunWith(EvoSuiteRunner.class)
public class AnnotationWriterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1437));
      ByteVector byteVector0 = new ByteVector();
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, false, byteVector0, byteVector0, 47);
      annotationWriter0.visit("", ":");
      assertEquals(3, annotationWriter0.getSize());
  }

  @Test
  public void test1()  throws Throwable  {
      AnnotationWriter[] annotationWriterArray0 = new AnnotationWriter[23];
      ClassWriter classWriter0 = new ClassWriter(1072);
      ByteVector byteVector0 = new ByteVector(1072);
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, true, byteVector0, byteVector0, 498);
      annotationWriterArray0[1] = annotationWriter0;
      annotationWriterArray0[1].visit("LineNumberTable", (Object) 1072);
  }

  @Test
  public void test2()  throws Throwable  {
      AnnotationWriter[] annotationWriterArray0 = new AnnotationWriter[23];
      ClassWriter classWriter0 = new ClassWriter((-1437));
      ByteVector byteVector0 = new ByteVector();
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, false, byteVector0, byteVector0, 47);
      annotationWriterArray0[15] = annotationWriter0;
      Byte byte0 = new Byte((byte) (-121));
      annotationWriterArray0[15].visit("", (Object) byte0);
      assertEquals((-121.0), byte0.doubleValue(), 0.01D);
  }

  @Test
  public void test3()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector(10);
      AnnotationWriter annotationWriter0 = new AnnotationWriter((ClassWriter) null, false, byteVector0, byteVector0, 10);
      Boolean boolean0 = Boolean.valueOf("D?rbrZHTwTU}g!Z");
      // Undeclared exception!
      try {
        annotationWriter0.visit("D?rbrZHTwTU}g!Z", (Object) boolean0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ByteVector byteVector0 = new ByteVector();
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, false, byteVector0, byteVector0, 1500);
      Boolean boolean0 = Boolean.TRUE;
      annotationWriter0.visit("", (Object) boolean0);
      assertEquals(3, annotationWriter0.getSize());
  }

  @Test
  public void test5()  throws Throwable  {
      AnnotationWriter[] annotationWriterArray0 = new AnnotationWriter[23];
      ClassWriter classWriter0 = new ClassWriter((-1437));
      ByteVector byteVector0 = new ByteVector();
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, false, byteVector0, byteVector0, 47);
      annotationWriterArray0[10] = annotationWriter0;
      Character character0 = Character.valueOf('e');
      annotationWriterArray0[10].visit("", (Object) character0);
      assertEquals("e", character0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector(332);
      AnnotationWriter annotationWriter0 = new AnnotationWriter((ClassWriter) null, false, byteVector0, byteVector0, 1943);
      Short short0 = new Short((short) (-207));
      // Undeclared exception!
      try {
        annotationWriter0.visit((String) null, (Object) short0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      AnnotationWriter[] annotationWriterArray0 = new AnnotationWriter[23];
      ClassWriter classWriter0 = new ClassWriter((-1437));
      ByteVector byteVector0 = new ByteVector();
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, false, byteVector0, byteVector0, 47);
      annotationWriterArray0[2] = annotationWriter0;
      Type type0 = Type.CHAR_TYPE;
      annotationWriterArray0[2].visit("M_K{ [C~M>kyXL", (Object) type0);
      assertEquals("C", type0.getDescriptor());
  }

  @Test
  public void test8()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1437));
      ByteVector byteVector0 = new ByteVector();
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, false, byteVector0, byteVector0, 47);
      annotationWriter0.visitEnum("", ":", ":");
      assertEquals(5, annotationWriter0.getSize());
  }

  @Test
  public void test9()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1437));
      ByteVector byteVector0 = new ByteVector();
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, true, byteVector0, byteVector0, 498);
      annotationWriter0.visitEnum("<HE", "<HE", "<HE");
      assertEquals(7, annotationWriter0.getSize());
  }

  @Test
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ByteVector byteVector0 = new ByteVector();
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, false, byteVector0, byteVector0, 1500);
      AnnotationWriter annotationWriter1 = (AnnotationWriter)annotationWriter0.visitAnnotation("", "");
      assertEquals(5, annotationWriter0.getSize());
      assertEquals(5, annotationWriter1.getSize());
  }

  @Test
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, true, (ByteVector) null, (ByteVector) null, 4);
      // Undeclared exception!
      try {
        annotationWriter0.visitAnnotation("c}", "c}");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector(332);
      AnnotationWriter annotationWriter0 = new AnnotationWriter((ClassWriter) null, false, byteVector0, byteVector0, 1943);
      AnnotationWriter annotationWriter1 = (AnnotationWriter)annotationWriter0.visitArray((String) null);
      assertEquals(3, annotationWriter0.getSize());
      assertEquals(3, annotationWriter1.getSize());
  }

  @Test
  public void test13()  throws Throwable  {
      AnnotationWriter[] annotationWriterArray0 = new AnnotationWriter[23];
      ClassWriter classWriter0 = new ClassWriter(1072);
      ByteVector byteVector0 = new ByteVector(1072);
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, true, byteVector0, byteVector0, 498);
      annotationWriterArray0[1] = annotationWriter0;
      AnnotationWriter annotationWriter1 = (AnnotationWriter)annotationWriterArray0[1].visitArray("LineNumberTable");
      assertNotNull(annotationWriter1);
      assertEquals(5, annotationWriter1.getSize());
  }

  @Test
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, true, (ByteVector) null, (ByteVector) null, 4);
      annotationWriter0.visitEnd();
  }

  @Test
  public void test15()  throws Throwable  {
      AnnotationWriter[] annotationWriterArray0 = new AnnotationWriter[23];
      ClassWriter classWriter0 = new ClassWriter((-1437));
      ByteVector byteVector0 = new ByteVector();
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, false, byteVector0, byteVector0, 47);
      annotationWriterArray0[3] = annotationWriter0;
      annotationWriterArray0[3].put(byteVector0);
  }

  @Test
  public void test16()  throws Throwable  {
      AnnotationWriter[] annotationWriterArray0 = new AnnotationWriter[23];
      ClassWriter classWriter0 = new ClassWriter((-1437));
      ByteVector byteVector0 = new ByteVector();
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, false, byteVector0, byteVector0, 47);
      annotationWriterArray0[0] = annotationWriter0;
      AnnotationWriter.put(annotationWriterArray0, 0, byteVector0);
  }
}
