/*
 * This file was automatically generated by EvoSuite
 */

package org.objectweb.asm.jip.commons;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import org.junit.BeforeClass;
import org.objectweb.asm.jip.ClassVisitor;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.FieldVisitor;
import org.objectweb.asm.jip.commons.SerialVersionUIDAdder;

@RunWith(EvoSuiteRunner.class)
public class SerialVersionUIDAdderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      SerialVersionUIDAdder serialVersionUIDAdder0 = new SerialVersionUIDAdder((ClassVisitor) classWriter0);
      String[] stringArray0 = new String[7];
      stringArray0[3] = ")gP~v Inl F`yq]Of}";
      stringArray0[0] = "-F`z";
      stringArray0[1] = "-F`z";
      stringArray0[2] = "-F`z";
      stringArray0[4] = "-F`z";
      stringArray0[5] = "-F`z";
      stringArray0[6] = "-F`z";
      serialVersionUIDAdder0.visit(1, 1, "-F`z", "-F`z", "-F`z", stringArray0);
      serialVersionUIDAdder0.visitField(1, ")gP~v Inl F`yq]Of}", ")gP~v Inl F`yq]Of}", ")gP~v Inl F`yq]Of}", (Object) "+&l:");
      long long0 = serialVersionUIDAdder0.computeSVUID();
      assertEquals((-8257681096754038939L), serialVersionUIDAdder0.computeSVUID());
      assertEquals((-8257681096754038939L), long0);
  }

  @Test
  public void test1()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32767);
      SerialVersionUIDAdder serialVersionUIDAdder0 = new SerialVersionUIDAdder((ClassVisitor) classWriter0);
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try {
        serialVersionUIDAdder0.visit(32767, 32767, "", "", "", stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      SerialVersionUIDAdder serialVersionUIDAdder0 = new SerialVersionUIDAdder((ClassVisitor) classWriter0);
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try {
        serialVersionUIDAdder0.visitMethod(1, "*4R3_UPr)c}}3LMo", "-F`z", ")gP~v Inl F`yq]Of}", stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      SerialVersionUIDAdder serialVersionUIDAdder0 = new SerialVersionUIDAdder((ClassVisitor) classWriter0);
      String[] stringArray0 = new String[7];
      stringArray0[3] = ")gP~v Inl F`yq]Of}";
      stringArray0[0] = "-F`z";
      stringArray0[1] = "-F`z";
      stringArray0[2] = "-F`z";
      stringArray0[4] = "-F`z";
      stringArray0[5] = "-F`z";
      stringArray0[6] = "-F`z";
      serialVersionUIDAdder0.visit(1, 1, "-F`z", "-F`z", "-F`z", stringArray0);
      serialVersionUIDAdder0.visitMethod(1, "+&l:", "*4R3_UPr)c}}3LMo", ")gP~v Inl F`yq]Of}", stringArray0);
      assertEquals(4079317257829534389L, serialVersionUIDAdder0.computeSVUID());
  }

  @Test
  public void test4()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      SerialVersionUIDAdder serialVersionUIDAdder0 = new SerialVersionUIDAdder((ClassVisitor) classWriter0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "k?h`r>6[WD;Xtp;j";
      stringArray0[1] = "k?h`r>6[WD;Xtp;j";
      stringArray0[2] = "k?h`r>6[WD;Xtp;j";
      stringArray0[3] = "k?h`r>6[WD;Xtp;j";
      stringArray0[4] = "k?h`r>6[WD;Xtp;j";
      stringArray0[5] = "k?h`r>6[WD;Xtp;j";
      serialVersionUIDAdder0.visit(14, 14, "k?h`r>6[WD;Xtp;j", "k?h`r>6[WD;Xtp;j", "k?h`r>6[WD;Xtp;j", stringArray0);
      String[] stringArray1 = new String[9];
      // Undeclared exception!
      try {
        serialVersionUIDAdder0.visitMethod(14, "k?h`r>6[WD;Xtp;j", "k?h`r>6[WD;Xtp;j", "k?h`r>6[WD;Xtp;j", stringArray1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      SerialVersionUIDAdder serialVersionUIDAdder0 = new SerialVersionUIDAdder((ClassVisitor) classWriter0);
      FieldVisitor fieldVisitor0 = serialVersionUIDAdder0.visitField((-366), "-F`z", ")gP~v Inl F`yq]Of}", ")gP~v Inl F`yq]Of}", (Object) "-F`z");
      assertNotNull(fieldVisitor0);
  }

  @Test
  public void test6()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      SerialVersionUIDAdder serialVersionUIDAdder0 = new SerialVersionUIDAdder((ClassVisitor) classWriter0);
      String[] stringArray0 = new String[7];
      stringArray0[3] = ")gP~v Inl F`yq]Of}";
      stringArray0[0] = "-F`z";
      stringArray0[1] = "-F`z";
      stringArray0[2] = "-F`z";
      stringArray0[4] = "-F`z";
      stringArray0[5] = "-F`z";
      stringArray0[6] = "-F`z";
      serialVersionUIDAdder0.visit(1, 1, "-F`z", "-F`z", "-F`z", stringArray0);
      serialVersionUIDAdder0.visitField((-366), "-F`z", ")gP~v Inl F`yq]Of}", ")gP~v Inl F`yq]Of}", (Object) "-F`z");
      assertEquals(247296549181825782L, serialVersionUIDAdder0.computeSVUID());
  }

  @Test
  public void test7()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      SerialVersionUIDAdder serialVersionUIDAdder0 = new SerialVersionUIDAdder((ClassVisitor) classWriter0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Innerlascs";
      serialVersionUIDAdder0.visit(6, 6, "Innerlascs", "Innerlascs", "Innerlascs", stringArray0);
      serialVersionUIDAdder0.visitField(6, "Innerlascs", "Innerlascs", "Innerlascs", (Object) "Innerlascs");
      assertEquals((-7315303275755298177L), serialVersionUIDAdder0.computeSVUID());
  }

  @Test
  public void test8()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      SerialVersionUIDAdder serialVersionUIDAdder0 = new SerialVersionUIDAdder((ClassVisitor) classWriter0);
      serialVersionUIDAdder0.visitInnerClass("Innerlascs", "Innerlascs", "Innerlascs", 6);
  }

  @Test
  public void test9()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      SerialVersionUIDAdder serialVersionUIDAdder0 = new SerialVersionUIDAdder((ClassVisitor) classWriter0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "k?h`r>6[WD;Xtp;j";
      stringArray0[1] = "k?h`r>6[WD;Xtp;j";
      stringArray0[2] = "k?h`r>6[WD;Xtp;j";
      stringArray0[3] = "k?h`r>6[WD;Xtp;j";
      stringArray0[4] = "k?h`r>6[WD;Xtp;j";
      stringArray0[5] = "k?h`r>6[WD;Xtp;j";
      serialVersionUIDAdder0.visit(14, 14, "k?h`r>6[WD;Xtp;j", "k?h`r>6[WD;Xtp;j", "k?h`r>6[WD;Xtp;j", stringArray0);
      serialVersionUIDAdder0.visitInnerClass("+&l:M", "+&l:M", "+&l:M", 14);
      assertEquals((-8735526094795062325L), serialVersionUIDAdder0.computeSVUID());
  }

  @Test
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      SerialVersionUIDAdder serialVersionUIDAdder0 = new SerialVersionUIDAdder((ClassVisitor) classWriter0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Innerlascs";
      serialVersionUIDAdder0.visit(6, 6, "Innerlascs", "Innerlascs", "Innerlascs", stringArray0);
      serialVersionUIDAdder0.visitInnerClass("Innerlascs", "Innerlascs", "Innerlascs", 6);
      assertEquals((-1659388269402998713L), serialVersionUIDAdder0.computeSVUID());
  }

  @Test
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      SerialVersionUIDAdder serialVersionUIDAdder0 = new SerialVersionUIDAdder((ClassVisitor) classWriter0);
      serialVersionUIDAdder0.visitEnd();
  }

  @Test
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      SerialVersionUIDAdder serialVersionUIDAdder0 = new SerialVersionUIDAdder((ClassVisitor) classWriter0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "k?h`r>6[WD;Xtp;j";
      stringArray0[1] = "k?h`r>6[WD;Xtp;j";
      stringArray0[2] = "k?h`r>6[WD;Xtp;j";
      stringArray0[3] = "k?h`r>6[WD;Xtp;j";
      stringArray0[4] = "k?h`r>6[WD;Xtp;j";
      stringArray0[5] = "k?h`r>6[WD;Xtp;j";
      serialVersionUIDAdder0.visit(14, 14, "k?h`r>6[WD;Xtp;j", "k?h`r>6[WD;Xtp;j", "k?h`r>6[WD;Xtp;j", stringArray0);
      serialVersionUIDAdder0.visitEnd();
      assertEquals((-8735526094795062325L), serialVersionUIDAdder0.computeSVUID());
  }

  @Test
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      SerialVersionUIDAdder serialVersionUIDAdder0 = new SerialVersionUIDAdder((ClassVisitor) classWriter0);
      // Undeclared exception!
      try {
        serialVersionUIDAdder0.computeSVUID();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      SerialVersionUIDAdder.Item serialVersionUIDAdder_Item0 = new SerialVersionUIDAdder.Item("pM(", 32767, "pM(");
      SerialVersionUIDAdder.Item serialVersionUIDAdder_Item1 = new SerialVersionUIDAdder.Item("", 32767, "");
      int int0 = serialVersionUIDAdder_Item0.compareTo((Object) serialVersionUIDAdder_Item1);
      assertEquals(3, int0);
  }

  @Test
  public void test15()  throws Throwable  {
      SerialVersionUIDAdder.Item serialVersionUIDAdder_Item0 = new SerialVersionUIDAdder.Item("pM(", 32767, "pM(");
      int int0 = serialVersionUIDAdder_Item0.compareTo((Object) serialVersionUIDAdder_Item0);
      assertEquals(0, int0);
  }
}
