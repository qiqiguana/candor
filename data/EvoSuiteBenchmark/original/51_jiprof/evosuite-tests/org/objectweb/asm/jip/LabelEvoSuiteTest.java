/*
 * This file was automatically generated by EvoSuite
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;

@RunWith(EvoSuiteRunner.class)
public class LabelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Label label0 = new Label();
      String string0 = label0.toString();
      assertNotNull(string0);
      assertEquals("L339947768", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      Label label0 = new Label();
      byte[] byteArray0 = new byte[9];
      label0.resolve((MethodWriter) null, 0, byteArray0);
      int int0 = label0.getOffset();
      assertEquals(2, label0.status);
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      Label label0 = new Label();
      // Undeclared exception!
      try {
        label0.getOffset();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Label offset position has not been resolved yet
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Label label0 = new Label();
      ByteVector byteVector0 = new ByteVector(0);
      byte[] byteArray0 = new byte[7];
      label0.resolve((MethodWriter) null, 0, byteArray0);
      label0.put((MethodWriter) null, byteVector0, 0, true);
      assertEquals(2, label0.status);
      assertEquals("L739637483", label0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      Label label0 = new Label();
      ByteVector byteVector0 = new ByteVector(0);
      byte[] byteArray0 = new byte[9];
      label0.resolve((MethodWriter) null, 0, byteArray0);
      label0.put((MethodWriter) null, byteVector0, 2, false);
      assertEquals(2, label0.status);
      assertEquals("L1128446876", label0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      Label label0 = new Label();
      ByteVector byteVector0 = new ByteVector(1838);
      label0.put((MethodWriter) null, byteVector0, 1838, true);
      label0.visitSubroutine((Label) null, (long) 0, 0);
      label0.put((MethodWriter) null, byteVector0, 0, true);
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try {
        label0.resolve((MethodWriter) null, 0, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 4
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Label label0 = new Label();
      ByteVector byteVector0 = new ByteVector(1838);
      label0.put((MethodWriter) null, byteVector0, 1838, true);
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try {
        label0.resolve((MethodWriter) null, 0, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 3
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Label label0 = new Label();
      ByteVector byteVector0 = new ByteVector(0);
      byteVector0.put12(0, 0);
      label0.put((MethodWriter) null, byteVector0, 0, false);
      byte[] byteArray0 = new byte[19];
      byteArray0[2] = (byte) (-50);
      boolean boolean0 = label0.resolve((MethodWriter) null, 251658240, byteArray0);
      assertEquals(251658240, label0.position);
      assertEquals(true, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      Label label0 = new Label();
      ByteVector byteVector0 = new ByteVector(0);
      byteVector0.put12(0, 0);
      label0.put((MethodWriter) null, byteVector0, 0, false);
      byte[] byteArray0 = new byte[19];
      boolean boolean0 = label0.resolve((MethodWriter) null, 251658240, byteArray0);
      assertEquals(2, label0.status);
      assertEquals(true, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      assertEquals("L1138572809", label0.toString());
      assertEquals("L1138572809", label1.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      Label label0 = new Label();
      label0.visitSubroutine((Label) null, (long) 0, 0);
      label0.visitSubroutine((Label) null, (long) 1838, 1838);
      assertEquals(1024, label0.status);
      assertEquals("L179728929", label0.toString());
  }

  @Test
  public void test11()  throws Throwable  {
      Label label0 = new Label();
      label0.addToSubroutine(672L, 0);
      label0.visitSubroutine((Label) null, 1987L, 0);
      assertEquals(1024, label0.status);
      assertEquals("L1534280348", label0.toString());
  }

  @Test
  public void test12()  throws Throwable  {
      Label label0 = new Label();
      boolean boolean0 = label0.inSameSubroutine(label0);
      assertEquals("L112491496", label0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      Label label0 = new Label();
      Label label1 = new Label();
      label0.status = (-2049);
      // Undeclared exception!
      try {
        label0.visitSubroutine(label1, (long) 0, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      Label label0 = new Label();
      label0.addToSubroutine((long) 0, 0);
      boolean boolean0 = label0.inSameSubroutine(label0);
      assertEquals(1024, label0.status);
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      Label label0 = new Label();
      label0.addToSubroutine(672L, 0);
      boolean boolean0 = label0.inSameSubroutine(label0);
      assertEquals(1024, label0.status);
      assertEquals(true, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      Label label0 = new Label();
      label0.visitSubroutine(label0, (long) 0, 0);
      label0.visitSubroutine(label0, (long) 0, 0);
      assertEquals(2048, label0.status);
      assertEquals("L1593146792", label0.toString());
  }
}
