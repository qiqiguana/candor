/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.authentication;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.security.Principal;
import org.exolab.jms.authentication.AuthenticationMgr;
import org.exolab.jms.authentication.User;
import org.exolab.jms.authentication.UserManager;
import org.exolab.jms.common.security.BasicPrincipal;
import org.exolab.jms.config.Configuration;
import org.exolab.jms.persistence.DatabaseService;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AuthenticationMgrEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      UserManager userManager0 = new UserManager(configuration0, databaseService0);
      AuthenticationMgr authenticationMgr0 = new AuthenticationMgr(userManager0);
      // Undeclared exception!
      try {
        authenticationMgr0.authenticate((Principal) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      UserManager userManager0 = new UserManager(configuration0, databaseService0);
      AuthenticationMgr authenticationMgr0 = new AuthenticationMgr(userManager0);
      User user0 = new User();
      boolean boolean0 = authenticationMgr0.addUser(user0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      UserManager userManager0 = new UserManager(configuration0, databaseService0);
      AuthenticationMgr authenticationMgr0 = new AuthenticationMgr(userManager0);
      User user0 = new User();
      boolean boolean0 = authenticationMgr0.removeUser(user0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      UserManager userManager0 = new UserManager(configuration0, databaseService0);
      AuthenticationMgr authenticationMgr0 = new AuthenticationMgr(userManager0);
      User user0 = new User("]I", "]I");
      boolean boolean0 = authenticationMgr0.updateUser(user0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      AuthenticationMgr authenticationMgr0 = null;
      try {
        authenticationMgr0 = new AuthenticationMgr((UserManager) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Argument 'users' is null
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      UserManager userManager0 = new UserManager(configuration0, databaseService0);
      AuthenticationMgr authenticationMgr0 = new AuthenticationMgr(userManager0);
      BasicPrincipal basicPrincipal0 = new BasicPrincipal("", "");
      // Undeclared exception!
      try {
        authenticationMgr0.authenticate((Principal) basicPrincipal0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
