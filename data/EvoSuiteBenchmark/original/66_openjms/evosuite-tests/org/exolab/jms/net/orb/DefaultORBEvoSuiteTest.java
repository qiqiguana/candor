/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.net.orb;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.rmi.ConnectException;
import java.rmi.RemoteException;
import java.rmi.StubNotFoundException;
import java.rmi.server.ExportException;
import java.util.HashMap;
import java.util.Map;
import org.exolab.jms.authentication.AuthenticationMgr;
import org.exolab.jms.authentication.UserManager;
import org.exolab.jms.config.Configuration;
import org.exolab.jms.net.connector.Authenticator;
import org.exolab.jms.net.connector.Caller;
import org.exolab.jms.net.connector.CallerListener;
import org.exolab.jms.net.connector.MulticastCallerListener;
import org.exolab.jms.net.orb.DefaultORB;
import org.exolab.jms.net.uri.InvalidURIException;
import org.exolab.jms.net.uri.URI;
import org.exolab.jms.net.util.Properties;
import org.exolab.jms.persistence.DatabaseService;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DefaultORBEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultORB defaultORB0 = new DefaultORB();
      // Undeclared exception!
      try {
        defaultORB0.accept((URI) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultORB defaultORB0 = new DefaultORB();
      defaultORB0.shutdown();
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultORB defaultORB0 = null;
      try {
        defaultORB0 = new DefaultORB((Authenticator) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Argument 'authenticator' is null
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      DefaultORB defaultORB0 = new DefaultORB();
      // Undeclared exception!
      try {
        defaultORB0.getRegistry();
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Argument 'uri' is null
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      DefaultORB defaultORB0 = new DefaultORB((Map) null);
      try {
        defaultORB0.getRegistry((Map) null);
        fail("Expecting exception: ConnectException");
      } catch(ConnectException e) {
        /*
         * org.exolab.jms.net.orb.provider.uri not specified
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      DefaultORB defaultORB0 = new DefaultORB();
      HashMap<Integer, Caller> hashMap0 = new HashMap<Integer, Caller>();
      Properties properties0 = new Properties((Map) hashMap0, "cJEK1'@c6");
      Map<Object, Object> map0 = properties0.getProperties();
      try {
        defaultORB0.getRegistry(map0);
        fail("Expecting exception: ConnectException");
      } catch(ConnectException e) {
        /*
         * org.exolab.jms.net.orb.provider.uri not specified
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      DefaultORB defaultORB0 = new DefaultORB((Map) null);
      try {
        defaultORB0.exportObjectTo((Object) "HTTP");
        fail("Expecting exception: ExportException");
      } catch(ExportException e) {
        /*
         * Cannot export - no current caller
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      DefaultORB defaultORB0 = new DefaultORB();
      MulticastCallerListener multicastCallerListener0 = new MulticastCallerListener();
      defaultORB0.addCallerListener((CallerListener) multicastCallerListener0);
      defaultORB0.addCallerListener((CallerListener) multicastCallerListener0);
  }

  @Test
  public void test8()  throws Throwable  {
      DefaultORB defaultORB0 = new DefaultORB();
      MulticastCallerListener multicastCallerListener0 = new MulticastCallerListener();
      defaultORB0.removeCallerListener((CallerListener) multicastCallerListener0);
  }

  @Test
  public void test9()  throws Throwable  {
      DefaultORB defaultORB0 = new DefaultORB();
      MulticastCallerListener multicastCallerListener0 = new MulticastCallerListener();
      defaultORB0.addCallerListener((CallerListener) multicastCallerListener0);
      defaultORB0.removeCallerListener((CallerListener) multicastCallerListener0);
  }

  @Test
  public void test10()  throws Throwable  {
      DefaultORB defaultORB0 = new DefaultORB();
      MulticastCallerListener multicastCallerListener0 = new MulticastCallerListener();
      defaultORB0.addCallerListener((CallerListener) multicastCallerListener0);
      try {
        defaultORB0.addCallerListener("*", (CallerListener) multicastCallerListener0);
        fail("Expecting exception: InvalidURIException");
      } catch(InvalidURIException e) {
        /*
         * No scheme found in URI.
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      UserManager userManager0 = new UserManager(configuration0, databaseService0);
      AuthenticationMgr authenticationMgr0 = new AuthenticationMgr(userManager0);
      DefaultORB defaultORB0 = new DefaultORB((Authenticator) authenticationMgr0);
      MulticastCallerListener multicastCallerListener0 = new MulticastCallerListener();
      try {
        defaultORB0.addCallerListener("", (CallerListener) multicastCallerListener0);
        fail("Expecting exception: InvalidURIException");
      } catch(InvalidURIException e) {
        /*
         * Argument base is null and argument uriSpec is null or an empty string
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      DefaultORB defaultORB0 = new DefaultORB();
      MulticastCallerListener multicastCallerListener0 = new MulticastCallerListener();
      defaultORB0.removeCallerListener("]", (CallerListener) multicastCallerListener0);
  }

  @Test
  public void test13()  throws Throwable  {
      HashMap<String, Caller> hashMap0 = new HashMap<String, Caller>();
      DefaultORB defaultORB0 = new DefaultORB((Map) hashMap0);
      MulticastCallerListener multicastCallerListener0 = new MulticastCallerListener();
      defaultORB0.addCallerListener((CallerListener) multicastCallerListener0);
      try {
        defaultORB0.removeCallerListener("\"Qjl8TURR.$41", (CallerListener) multicastCallerListener0);
        fail("Expecting exception: InvalidURIException");
      } catch(InvalidURIException e) {
        /*
         * No scheme found in URI.
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      UserManager userManager0 = new UserManager(configuration0, databaseService0);
      AuthenticationMgr authenticationMgr0 = new AuthenticationMgr(userManager0);
      DefaultORB defaultORB0 = new DefaultORB((Authenticator) authenticationMgr0, (Map) null);
      // Undeclared exception!
      try {
        defaultORB0.connect((URI) null, (String) null, "#Y)5_PO");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
