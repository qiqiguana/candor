/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.net;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.rmi.AlreadyBoundException;
import java.rmi.RemoteException;
import org.exolab.jms.net.RemoteServer;
import org.exolab.jms.net.uri.InvalidURIException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RemoteServerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      RemoteServer remoteServer0 = null;
      try {
        remoteServer0 = new RemoteServer("hIZTw8/_A|g&D,9", object0, "hIZTw8/_A|g&D,9", "hIZTw8/_A|g&D,9");
        fail("Expecting exception: InvalidURIException");
      } catch(InvalidURIException e) {
        /*
         * No scheme found in URI.
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      RemoteServer remoteServer0 = null;
      try {
        remoteServer0 = new RemoteServer("tcpshttpsT#t7HYsQ5n", object0, "tcpshttpsT#t7HYsQ5n", (String) null);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * Failed to locate keystore: /mnt/fastdata/ac1gf/SF110/dist/66_openjms/modules/net/target/test.keystore
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      RemoteServer remoteServer0 = null;
      try {
        remoteServer0 = new RemoteServer("httpsT#t7HYsQ5n", object0, "httpsT#t7HYsQ5n", "{^OB\"cKzn");
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * Failed to locate keystore: /mnt/fastdata/ac1gf/SF110/dist/66_openjms/modules/net/target/test.keystore
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      RemoteServer remoteServer0 = null;
      try {
        remoteServer0 = new RemoteServer("\",&", (Object) null, "\",&", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Argument 'object' is null
         */
      }
  }
}
