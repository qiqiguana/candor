/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.message;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import javax.jms.JMSException;
import javax.jms.MessageEOFException;
import javax.jms.MessageFormatException;
import javax.jms.MessageNotReadableException;
import org.exolab.jms.message.StreamMessageImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class StreamMessageImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      try {
        streamMessageImpl0.readChar();
        fail("Expecting exception: MessageNotReadableException");
      } catch(MessageNotReadableException e) {
        /*
         * Message in write-only mode
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      try {
        streamMessageImpl0.readString();
        fail("Expecting exception: MessageNotReadableException");
      } catch(MessageNotReadableException e) {
        /*
         * Message in write-only mode
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      streamMessageImpl0.writeDouble(0.0);
      streamMessageImpl0.reset();
      streamMessageImpl0.readDouble();
      streamMessageImpl0.clearBody();
  }

  @Test
  public void test3()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      try {
        streamMessageImpl0.readInt();
        fail("Expecting exception: MessageNotReadableException");
      } catch(MessageNotReadableException e) {
        /*
         * Message in write-only mode
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      try {
        streamMessageImpl0.readObject();
        fail("Expecting exception: MessageNotReadableException");
      } catch(MessageNotReadableException e) {
        /*
         * Message in write-only mode
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      streamMessageImpl0.writeLong(0L);
      streamMessageImpl0.clearBody();
      assertEquals("StreamMessage", streamMessageImpl0.getJMSType());
  }

  @Test
  public void test6()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      try {
        streamMessageImpl0.readBoolean();
        fail("Expecting exception: MessageNotReadableException");
      } catch(MessageNotReadableException e) {
        /*
         * Message in write-only mode
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      streamMessageImpl0.writeChar('p');
      streamMessageImpl0.reset();
      assertEquals('p', streamMessageImpl0.readChar());
      
      try {
        streamMessageImpl0.readShort();
        fail("Expecting exception: MessageFormatException");
      } catch(MessageFormatException e) {
        /*
         * Cannot convert values of type java.lang.Character to short
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      try {
        streamMessageImpl0.readByte();
        fail("Expecting exception: MessageNotReadableException");
      } catch(MessageNotReadableException e) {
        /*
         * Message in write-only mode
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      streamMessageImpl0.writeObject((Object) "null-false");
      streamMessageImpl0.setReadOnly(true);
      // Undeclared exception!
      try {
        streamMessageImpl0.readShort();
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
        /*
         * For input string: \"null-false\"
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      streamMessageImpl0.writeByte((byte)110);
      StreamMessageImpl streamMessageImpl1 = (StreamMessageImpl)streamMessageImpl0.clone();
      assertNotNull(streamMessageImpl1);
      assertEquals("StreamMessage", streamMessageImpl1.getJMSType());
  }

  @Test
  public void test11()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      StreamMessageImpl streamMessageImpl1 = (StreamMessageImpl)streamMessageImpl0.clone();
      assertNotNull(streamMessageImpl1);
      
      try {
        streamMessageImpl0.writeObject((Object) streamMessageImpl1);
        fail("Expecting exception: MessageFormatException");
      } catch(MessageFormatException e) {
        /*
         * Objects of type org.exolab.jms.message.StreamMessageImpl are not supported by StreamMessage
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      streamMessageImpl0.setReadOnly(true);
      streamMessageImpl0.clone();
      assertEquals(true, streamMessageImpl0.getReadOnly());
  }

  @Test
  public void test13()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      Float float0 = new Float(0.0F);
      streamMessageImpl0.writeObject((Object) float0);
      streamMessageImpl0.reset();
      streamMessageImpl0.readFloat();
      streamMessageImpl0.clone();
  }

  @Test
  public void test14()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      streamMessageImpl0.reset();
      // Undeclared exception!
      try {
        streamMessageImpl0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      streamMessageImpl0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(371, byteArrayOutputStream0.size());
      assertEquals("\uFFFD\uFFFD\u0000\u0005w\u001A\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000sr\u0000$org.exolab.jms.message.MessageHeader\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\f\u0000\u0000xpw\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001pppw\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000psr\u0000\u001Borg.exolab.jms.message.Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\f\u0000\u0000xpw&\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\r\u0000S\u0000t\u0000r\u0000e\u0000a\u0000m\u0000M\u0000e\u0000s\u0000s\u0000a\u0000g\u0000expppppw\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000xsr\u0000(org.exolab.jms.message.MessageProperties\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\f\u0000\u0000xpw\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001sr\u0000\u0011java.util.HashMap\u0005\u0007\uFFFD\uFFFD\uFFFD\u0016`\uFFFD\u0003\u0000\u0002F\u0000\nloadFactorI\u0000\tthresholdxp?@\u0000\u0000\u0000\u0000\u0000\u0018w\b\u0000\u0000\u0000 \u0000\u0000\u0000\u0000xxw\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000", byteArrayOutputStream0.toString());
  }

  @Test
  public void test16()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      streamMessageImpl0.writeFloat((-1027.4131F));
      // Undeclared exception!
      try {
        streamMessageImpl0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test17()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      streamMessageImpl0.writeShort((short)2);
      streamMessageImpl0.reset();
      assertEquals(2, streamMessageImpl0.readInt());
      
      byte[] byteArray0 = new byte[11];
      try {
        streamMessageImpl0.readBytes(byteArray0);
        fail("Expecting exception: MessageFormatException");
      } catch(MessageFormatException e) {
        /*
         * Expected type=byte[], but got type=short
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      streamMessageImpl0.writeObject((Object) null);
      streamMessageImpl0.reset();
      byte[] byteArray0 = new byte[11];
      streamMessageImpl0.readBytes(byteArray0);
  }

  @Test
  public void test19()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      Boolean boolean0 = new Boolean("oz:iM/]h");
      streamMessageImpl0.writeObject((Object) boolean0);
      assertEquals("StreamMessage", streamMessageImpl0.getJMSType());
  }

  @Test
  public void test20()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      streamMessageImpl0.writeBoolean(true);
      streamMessageImpl0.reset();
      assertEquals(true, streamMessageImpl0.readBoolean());
      
      try {
        streamMessageImpl0.readFloat();
        fail("Expecting exception: MessageFormatException");
      } catch(MessageFormatException e) {
        /*
         * Cannot convert values of type java.lang.Boolean to float
         */
      }
  }

  @Test
  public void test21()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      // Undeclared exception!
      try {
        streamMessageImpl0.writeString((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * Argument value is null
         */
      }
  }

  @Test
  public void test22()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      byte[] byteArray0 = new byte[10];
      streamMessageImpl0.writeBytes(byteArray0);
      assertEquals("StreamMessage", streamMessageImpl0.getJMSType());
  }

  @Test
  public void test23()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      byte[] byteArray0 = new byte[5];
      streamMessageImpl0.writeBytes(byteArray0, (int) (byte)0, (int) (byte)0);
      assertEquals("StreamMessage", streamMessageImpl0.getJMSType());
  }

  @Test
  public void test24()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      streamMessageImpl0.reset();
      streamMessageImpl0.reset();
      assertEquals("StreamMessage", streamMessageImpl0.getJMSType());
  }

  @Test
  public void test25()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      streamMessageImpl0.clearBody();
      assertEquals("StreamMessage", streamMessageImpl0.getJMSType());
  }

  @Test
  public void test26()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      streamMessageImpl0.reset();
      streamMessageImpl0.clearBody();
      assertEquals("StreamMessage", streamMessageImpl0.getJMSType());
  }

  @Test
  public void test27()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      streamMessageImpl0.setReadOnly(false);
      assertEquals("StreamMessage", streamMessageImpl0.getJMSType());
      assertEquals(false, streamMessageImpl0.getReadOnly());
  }

  @Test
  public void test28()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      streamMessageImpl0.writeByte((byte)110);
      streamMessageImpl0.reset();
      assertEquals(110, streamMessageImpl0.readInt());
      
      streamMessageImpl0.readLong();
  }

  @Test
  public void test29()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      streamMessageImpl0.writeShort((short) (byte)110);
      streamMessageImpl0.reset();
      assertEquals(110, streamMessageImpl0.readInt());
      
      streamMessageImpl0.readLong();
  }

  @Test
  public void test30()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      streamMessageImpl0.writeInt((-1205));
      streamMessageImpl0.reset();
      assertEquals(-1205, streamMessageImpl0.readInt());
      
      streamMessageImpl0.readLong();
  }

  @Test
  public void test31()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      streamMessageImpl0.writeLong(0L);
      streamMessageImpl0.setReadOnly(true);
      try {
        streamMessageImpl0.readFloat();
        fail("Expecting exception: MessageFormatException");
      } catch(MessageFormatException e) {
        /*
         * Cannot convert values of type java.lang.Long to float
         */
      }
  }

  @Test
  public void test32()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      streamMessageImpl0.writeBoolean(false);
      streamMessageImpl0.reset();
      assertEquals(false, streamMessageImpl0.readBoolean());
      
      try {
        streamMessageImpl0.readDouble();
        fail("Expecting exception: MessageFormatException");
      } catch(MessageFormatException e) {
        /*
         * Cannot convert values of type java.lang.Boolean to double
         */
      }
  }

  @Test
  public void test33()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      Float float0 = new Float(0.0F);
      streamMessageImpl0.writeObject((Object) float0);
      streamMessageImpl0.reset();
      streamMessageImpl0.readFloat();
      try {
        streamMessageImpl0.readShort();
        fail("Expecting exception: MessageEOFException");
      } catch(MessageEOFException e) {
      }
  }

  @Test
  public void test34()  throws Throwable  {
      StreamMessageImpl streamMessageImpl0 = new StreamMessageImpl();
      streamMessageImpl0.writeObject((Object) "null-false");
      streamMessageImpl0.writeInt(0);
      assertEquals("StreamMessage", streamMessageImpl0.getJMSType());
  }
}
