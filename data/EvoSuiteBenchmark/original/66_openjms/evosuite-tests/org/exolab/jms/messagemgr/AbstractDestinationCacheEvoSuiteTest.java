/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.messagemgr;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import javax.jms.JMSException;
import org.exolab.jms.client.JmsQueue;
import org.exolab.jms.client.JmsTemporaryQueue;
import org.exolab.jms.config.Configuration;
import org.exolab.jms.lease.LeaseManager;
import org.exolab.jms.messagemgr.QueueDestinationCache;
import org.exolab.jms.persistence.DatabaseService;
import org.exolab.jms.server.ServerConnectionManager;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AbstractDestinationCacheEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JmsQueue jmsQueue0 = new JmsQueue("$FZ<7K0");
      LeaseManager leaseManager0 = new LeaseManager();
      QueueDestinationCache queueDestinationCache0 = null;
      try {
        queueDestinationCache0 = new QueueDestinationCache(jmsQueue0, (DatabaseService) null, leaseManager0, (ServerConnectionManager) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Argument 'database' is null
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      LeaseManager leaseManager0 = new LeaseManager();
      QueueDestinationCache queueDestinationCache0 = null;
      try {
        queueDestinationCache0 = new QueueDestinationCache((JmsQueue) null, databaseService0, leaseManager0, (ServerConnectionManager) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Argument 'destination' is null
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      JmsQueue jmsQueue0 = new JmsQueue();
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      QueueDestinationCache queueDestinationCache0 = null;
      try {
        queueDestinationCache0 = new QueueDestinationCache(jmsQueue0, databaseService0, (LeaseManager) null, (ServerConnectionManager) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Argument 'leases' is null
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      JmsTemporaryQueue jmsTemporaryQueue0 = new JmsTemporaryQueue();
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      LeaseManager leaseManager0 = new LeaseManager();
      QueueDestinationCache queueDestinationCache0 = null;
      try {
        queueDestinationCache0 = new QueueDestinationCache((JmsQueue) jmsTemporaryQueue0, databaseService0, leaseManager0, (ServerConnectionManager) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Argument 'connections' is null
         */
      }
  }
}
