/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.scheduler;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.exolab.jms.common.threads.DefaultThreadPoolFactory;
import org.exolab.jms.common.threads.ThreadListener;
import org.exolab.jms.common.threads.ThreadPoolFactory;
import org.exolab.jms.config.Configuration;
import org.exolab.jms.config.SchedulerConfiguration;
import org.exolab.jms.scheduler.Scheduler;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SchedulerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DefaultThreadPoolFactory defaultThreadPoolFactory0 = new DefaultThreadPoolFactory((ThreadListener) null);
      SchedulerConfiguration schedulerConfiguration0 = new SchedulerConfiguration();
      configuration0.setSchedulerConfiguration(schedulerConfiguration0);
      Scheduler scheduler0 = new Scheduler(configuration0, (ThreadPoolFactory) defaultThreadPoolFactory0);
      scheduler0.execute((Runnable) null);
      assertEquals("Service:[name=Schedulerstarted=false]", scheduler0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DefaultThreadPoolFactory defaultThreadPoolFactory0 = new DefaultThreadPoolFactory((ThreadListener) null);
      SchedulerConfiguration schedulerConfiguration0 = new SchedulerConfiguration();
      configuration0.setSchedulerConfiguration(schedulerConfiguration0);
      Scheduler scheduler0 = new Scheduler(configuration0, (ThreadPoolFactory) defaultThreadPoolFactory0);
      scheduler0.doStop();
      assertEquals("Service:[name=Schedulerstarted=false]", scheduler0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DefaultThreadPoolFactory defaultThreadPoolFactory0 = new DefaultThreadPoolFactory((ThreadListener) null);
      SchedulerConfiguration schedulerConfiguration0 = new SchedulerConfiguration();
      configuration0.setSchedulerConfiguration(schedulerConfiguration0);
      schedulerConfiguration0.setMaxThreads(1585);
      Scheduler scheduler0 = new Scheduler(configuration0, (ThreadPoolFactory) defaultThreadPoolFactory0);
      assertEquals(false, scheduler0.isStarted());
  }
}
