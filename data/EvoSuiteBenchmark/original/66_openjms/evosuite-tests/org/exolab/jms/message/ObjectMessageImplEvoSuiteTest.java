/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.message;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Serializable;
import javax.jms.JMSException;
import javax.jms.MessageFormatException;
import javax.jms.MessageNotWriteableException;
import org.exolab.jms.message.ObjectMessageImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ObjectMessageImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ObjectMessageImpl objectMessageImpl0 = new ObjectMessageImpl();
      objectMessageImpl0.clearBody();
      assertEquals("ObjectMessage", objectMessageImpl0.getJMSType());
  }

  @Test
  public void test1()  throws Throwable  {
      ObjectMessageImpl objectMessageImpl0 = new ObjectMessageImpl();
      objectMessageImpl0.setObject((Serializable) true);
      ObjectMessageImpl objectMessageImpl1 = (ObjectMessageImpl)objectMessageImpl0.clone();
      assertEquals("ObjectMessage", objectMessageImpl1.getJMSType());
      assertNotNull(objectMessageImpl1);
      assertNotSame(objectMessageImpl1, objectMessageImpl0);
  }

  @Test
  public void test2()  throws Throwable  {
      ObjectMessageImpl objectMessageImpl0 = new ObjectMessageImpl();
      objectMessageImpl0.setObject((Serializable) (-118L));
      objectMessageImpl0.getObject();
      assertEquals("ObjectMessage", objectMessageImpl0.getJMSType());
  }

  @Test
  public void test3()  throws Throwable  {
      ObjectMessageImpl objectMessageImpl0 = new ObjectMessageImpl();
      ObjectMessageImpl objectMessageImpl1 = (ObjectMessageImpl)objectMessageImpl0.clone();
      assertNotSame(objectMessageImpl0, objectMessageImpl1);
      assertEquals("ObjectMessage", objectMessageImpl0.getJMSType());
      assertNotNull(objectMessageImpl1);
  }

  @Test
  public void test4()  throws Throwable  {
      ObjectMessageImpl objectMessageImpl0 = new ObjectMessageImpl();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) pipedOutputStream0);
      objectMessageImpl0.writeExternal((ObjectOutput) objectOutputStream0);
  }

  @Test
  public void test5()  throws Throwable  {
      ObjectMessageImpl objectMessageImpl0 = new ObjectMessageImpl();
      objectMessageImpl0.setObject((Serializable) (-118L));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) pipedOutputStream0);
      objectMessageImpl0.writeExternal((ObjectOutput) objectOutputStream0);
  }

  @Test
  public void test6()  throws Throwable  {
      ObjectMessageImpl objectMessageImpl0 = new ObjectMessageImpl();
      objectMessageImpl0.getObject();
      assertEquals("ObjectMessage", objectMessageImpl0.getJMSType());
  }
}
