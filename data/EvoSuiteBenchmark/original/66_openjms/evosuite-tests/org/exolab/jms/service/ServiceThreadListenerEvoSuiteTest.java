/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.service;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.exolab.jms.common.threads.ThreadListener;
import org.exolab.jms.service.ServiceThreadListener;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ServiceThreadListenerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ServiceThreadListener serviceThreadListener0 = new ServiceThreadListener();
      serviceThreadListener0.removeThreadListener((ThreadListener) serviceThreadListener0);
  }

  @Test
  public void test1()  throws Throwable  {
      ServiceThreadListener serviceThreadListener0 = new ServiceThreadListener();
      serviceThreadListener0.addThreadListener((ThreadListener) serviceThreadListener0);
      // Undeclared exception!
      try {
        serviceThreadListener0.begin((Runnable) null);
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ServiceThreadListener serviceThreadListener0 = new ServiceThreadListener();
      serviceThreadListener0.begin((Runnable) null);
  }

  @Test
  public void test3()  throws Throwable  {
      ServiceThreadListener serviceThreadListener0 = new ServiceThreadListener();
      serviceThreadListener0.end((Runnable) null);
  }

  @Test
  public void test4()  throws Throwable  {
      ServiceThreadListener serviceThreadListener0 = new ServiceThreadListener();
      serviceThreadListener0.addThreadListener((ThreadListener) serviceThreadListener0);
      // Undeclared exception!
      try {
        serviceThreadListener0.end((Runnable) null);
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
      }
  }
}
