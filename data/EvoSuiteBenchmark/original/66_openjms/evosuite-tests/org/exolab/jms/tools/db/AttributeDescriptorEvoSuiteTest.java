/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.tools.db;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.exolab.castor.mapping.ClassDescriptor;
import org.exolab.castor.mapping.MappingException;
import org.exolab.castor.xml.ValidationContext;
import org.exolab.castor.xml.ValidationException;
import org.exolab.castor.xml.util.XMLClassDescriptorAdapter;
import org.exolab.jms.tools.db.Attribute;
import org.exolab.jms.tools.db.AttributeDescriptor;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AttributeDescriptorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AttributeDescriptor attributeDescriptor0 = new AttributeDescriptor();
      XMLClassDescriptorAdapter xMLClassDescriptorAdapter0 = new XMLClassDescriptorAdapter((ClassDescriptor) attributeDescriptor0, "Z~`^_");
      assertEquals("attribute", attributeDescriptor0.getXMLName());
      assertEquals("http://www.openjms.org/database/schema", attributeDescriptor0.getNameSpaceURI());
  }

  @Test
  public void test1()  throws Throwable  {
      AttributeDescriptor attributeDescriptor0 = new AttributeDescriptor();
      attributeDescriptor0.getNameSpacePrefix();
      assertEquals("http://www.openjms.org/database/schema", attributeDescriptor0.getNameSpaceURI());
      assertEquals("attribute", attributeDescriptor0.getXMLName());
  }

  @Test
  public void test2()  throws Throwable  {
      AttributeDescriptor attributeDescriptor0 = new AttributeDescriptor();
      String string0 = attributeDescriptor0.getNameSpaceURI();
      assertEquals("http://www.openjms.org/database/schema", string0);
      assertEquals("attribute", attributeDescriptor0.getXMLName());
      assertNotNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      AttributeDescriptor attributeDescriptor0 = new AttributeDescriptor();
      AttributeDescriptor attributeDescriptor1 = (AttributeDescriptor)attributeDescriptor0.getValidator();
      assertEquals("attribute", attributeDescriptor1.getXMLName());
      assertEquals("http://www.openjms.org/database/schema", attributeDescriptor1.getNameSpaceURI());
  }

  @Test
  public void test4()  throws Throwable  {
      AttributeDescriptor attributeDescriptor0 = new AttributeDescriptor();
      attributeDescriptor0.getAccessMode();
      assertEquals("attribute", attributeDescriptor0.getXMLName());
      assertEquals("http://www.openjms.org/database/schema", attributeDescriptor0.getNameSpaceURI());
  }

  @Test
  public void test5()  throws Throwable  {
      AttributeDescriptor attributeDescriptor0 = new AttributeDescriptor();
      Attribute attribute0 = new Attribute();
      attribute0.setName("Z}a#");
      ValidationContext validationContext0 = new ValidationContext();
      attribute0.setType("Z}a#");
      attributeDescriptor0.validate((Object) attribute0, validationContext0);
      assertEquals("http://www.openjms.org/database/schema", attributeDescriptor0.getNameSpaceURI());
      assertEquals("attribute", attributeDescriptor0.getXMLName());
  }
}
