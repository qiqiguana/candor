/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.messagemgr;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import javax.jms.JMSException;
import org.exolab.jms.client.JmsDestination;
import org.exolab.jms.client.JmsQueue;
import org.exolab.jms.client.JmsTemporaryTopic;
import org.exolab.jms.client.JmsTopic;
import org.exolab.jms.messagemgr.MessageRef;
import org.exolab.jms.messagemgr.PersistentMessageHandle;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PersistentMessageHandleEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic(",+");
      PersistentMessageHandle persistentMessageHandle0 = new PersistentMessageHandle(",+", (-13), (long) (-13), (long) (-13), (long) (-13), (JmsDestination) jmsTopic0, ",+");
      try {
        persistentMessageHandle0.destroy();
        fail("Expecting exception: JMSException");
      } catch(JMSException e) {
        /*
         * Failed to destroy persistent handle: No DatabaseService registered
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic();
      PersistentMessageHandle persistentMessageHandle0 = new PersistentMessageHandle("$", (-1988), (long) (-1988), (long) (-1988), (long) (-1988), (JmsDestination) jmsTopic0);
      assertEquals(false, persistentMessageHandle0.getDelivered());
  }

  @Test
  public void test2()  throws Throwable  {
      JmsTemporaryTopic jmsTemporaryTopic0 = new JmsTemporaryTopic();
      PersistentMessageHandle persistentMessageHandle0 = new PersistentMessageHandle("", 0, (long) 0, (long) 0, (long) 0, (JmsDestination) jmsTemporaryTopic0, "");
      // Undeclared exception!
      try {
        persistentMessageHandle0.reference((MessageRef) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic();
      PersistentMessageHandle persistentMessageHandle0 = new PersistentMessageHandle("$", (-1988), (long) (-1988), (long) (-1988), (long) (-1988), (JmsDestination) jmsTopic0, "$");
      boolean boolean0 = persistentMessageHandle0.isPersistent();
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic();
      PersistentMessageHandle persistentMessageHandle0 = new PersistentMessageHandle("$", (-1988), (long) (-1988), (long) (-1988), (long) (-1988), (JmsDestination) jmsTopic0, "$");
      String string0 = persistentMessageHandle0.getConsumerPersistentId();
      assertEquals("$", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      JmsQueue jmsQueue0 = new JmsQueue("BoB?la-o/.BP");
      PersistentMessageHandle persistentMessageHandle0 = new PersistentMessageHandle("BoB?la-o/.BP", 8, (long) 8, (long) 8, (long) 8, (JmsDestination) jmsQueue0, "BoB?la-o/.BP");
      try {
        persistentMessageHandle0.update();
        fail("Expecting exception: JMSException");
      } catch(JMSException e) {
        /*
         * Failed to update persistent handle: No DatabaseService registered
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("");
      PersistentMessageHandle persistentMessageHandle0 = new PersistentMessageHandle("", 26, (-1312L), (-1312L), (-1312L), (JmsDestination) jmsTopic0, "");
      try {
        persistentMessageHandle0.add();
        fail("Expecting exception: JMSException");
      } catch(JMSException e) {
        /*
         * Failed to make handle persistent: No DatabaseService registered
         */
      }
  }
}
