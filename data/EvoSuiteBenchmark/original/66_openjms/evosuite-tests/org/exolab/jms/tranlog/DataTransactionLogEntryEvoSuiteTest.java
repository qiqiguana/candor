/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.tranlog;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.io.ObjectOutput;
import org.exolab.jms.tranlog.DataTransactionLogEntry;
import org.exolab.jms.tranlog.ExternalXid;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DataTransactionLogEntryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ExternalXid externalXid0 = new ExternalXid();
      DataTransactionLogEntry dataTransactionLogEntry0 = new DataTransactionLogEntry(externalXid0, "Z,n@_-(r-zP6", 139L);
      // Undeclared exception!
      try {
        dataTransactionLogEntry0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      DataTransactionLogEntry dataTransactionLogEntry0 = new DataTransactionLogEntry();
      Object object0 = dataTransactionLogEntry0.getData();
      assertNull(object0);
  }

  @Test
  public void test2()  throws Throwable  {
      DataTransactionLogEntry dataTransactionLogEntry0 = new DataTransactionLogEntry((ExternalXid) null, "$W-JV=qr|)");
      Object object0 = new Object();
      try {
        dataTransactionLogEntry0.setData(object0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * The object to setObject must be serializable
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ExternalXid externalXid0 = new ExternalXid();
      DataTransactionLogEntry dataTransactionLogEntry0 = new DataTransactionLogEntry(externalXid0, "");
      dataTransactionLogEntry0.setData((Object) "\u4E2D\u6587");
      assertEquals(0L, dataTransactionLogEntry0.getExpiryTime());
  }
}
