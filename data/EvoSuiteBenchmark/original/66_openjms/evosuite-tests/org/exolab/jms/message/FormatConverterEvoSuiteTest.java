/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.message;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import javax.jms.MessageFormatException;
import org.exolab.jms.message.FormatConverter;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FormatConverterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      try {
        FormatConverter.getLong((Object) boolean0);
        fail("Expecting exception: MessageFormatException");
      } catch(MessageFormatException e) {
        /*
         * Cannot convert values of type java.lang.Boolean to long
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      FormatConverter formatConverter0 = new FormatConverter();
      assertNotNull(formatConverter0);
  }

  @Test
  public void test2()  throws Throwable  {
      Float float0 = new Float((double) (byte)0);
      try {
        FormatConverter.getBoolean((Object) float0);
        fail("Expecting exception: MessageFormatException");
      } catch(MessageFormatException e) {
        /*
         * Cannot convert values of type java.lang.Float to boolean
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(false);
      boolean boolean1 = FormatConverter.getBoolean((Object) boolean0);
      assertEquals(false, boolean1);
  }

  @Test
  public void test4()  throws Throwable  {
      boolean boolean0 = FormatConverter.getBoolean((Object) "48.0");
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      boolean boolean0 = FormatConverter.getBoolean((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try {
        FormatConverter.getByte((Object) "-19.696544795545098");
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
        /*
         * For input string: \"-19.696544795545098\"
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Byte byte0 = new Byte((byte) (-24));
      byte byte1 = FormatConverter.getByte((Object) byte0);
      assertEquals((byte) (-24), byte1);
  }

  @Test
  public void test8()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      try {
        FormatConverter.getByte((Object) boolean0);
        fail("Expecting exception: MessageFormatException");
      } catch(MessageFormatException e) {
        /*
         * Cannot convert values of type java.lang.Boolean to byte
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      // Undeclared exception!
      try {
        FormatConverter.getByte((Object) null);
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
        /*
         * null
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      Boolean boolean0 = new Boolean("9");
      try {
        FormatConverter.getShort((Object) boolean0);
        fail("Expecting exception: MessageFormatException");
      } catch(MessageFormatException e) {
        /*
         * Cannot convert values of type java.lang.Boolean to short
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      short short0 = FormatConverter.getShort((Object) (short)5);
      assertEquals((short)5, short0);
  }

  @Test
  public void test12()  throws Throwable  {
      short short0 = FormatConverter.getShort((Object) (byte)114);
      assertEquals((short)114, short0);
  }

  @Test
  public void test13()  throws Throwable  {
      short short0 = FormatConverter.getShort((Object) "640");
      assertEquals((short)640, short0);
  }

  @Test
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try {
        FormatConverter.getShort((Object) null);
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
        /*
         * null
         */
      }
  }

  @Test
  public void test15()  throws Throwable  {
      Short short0 = new Short((short)1104);
      try {
        FormatConverter.getChar((Object) short0);
        fail("Expecting exception: MessageFormatException");
      } catch(MessageFormatException e) {
        /*
         * Cannot convert values of type java.lang.Short to char
         */
      }
  }

  @Test
  public void test16()  throws Throwable  {
      Character character0 = Character.valueOf('\u008A');
      char char0 = FormatConverter.getChar((Object) character0);
      assertEquals('\u008A', char0);
  }

  @Test
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try {
        FormatConverter.getChar((Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * Cannot convert null value to char
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      Byte byte0 = new Byte((byte)89);
      int int0 = FormatConverter.getInt((Object) byte0);
      assertEquals(89, int0);
  }

  @Test
  public void test19()  throws Throwable  {
      Integer integer0 = new Integer(32);
      int int0 = FormatConverter.getInt((Object) integer0);
      assertEquals(32, int0);
  }

  @Test
  public void test20()  throws Throwable  {
      Short short0 = new Short((short) (byte) (-1));
      int int0 = FormatConverter.getInt((Object) short0);
      assertEquals((-1), int0);
  }

  @Test
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try {
        FormatConverter.getInt((Object) null);
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
        /*
         * null
         */
      }
  }

  @Test
  public void test22()  throws Throwable  {
      int int0 = FormatConverter.getInt((Object) "-1");
      assertEquals((-1), int0);
  }

  @Test
  public void test23()  throws Throwable  {
      try {
        FormatConverter.getInt((Object) false);
        fail("Expecting exception: MessageFormatException");
      } catch(MessageFormatException e) {
        /*
         * Cannot convert values of type java.lang.Boolean to int
         */
      }
  }

  @Test
  public void test24()  throws Throwable  {
      Long long0 = new Long(0L);
      long long1 = FormatConverter.getLong((Object) long0);
      assertTrue(long0.equals(long1));
  }

  @Test
  public void test25()  throws Throwable  {
      Integer integer0 = Integer.getInteger((String) null, (-1));
      long long0 = FormatConverter.getLong((Object) integer0);
      assertEquals((-1L), long0);
  }

  @Test
  public void test26()  throws Throwable  {
      Short short0 = new Short((short)15);
      long long0 = FormatConverter.getLong((Object) short0);
      assertEquals(15L, long0);
  }

  @Test
  public void test27()  throws Throwable  {
      Byte byte0 = new Byte((byte)0);
      long long0 = FormatConverter.getLong((Object) byte0);
      assertEquals(0L, long0);
  }

  @Test
  public void test28()  throws Throwable  {
      long long0 = FormatConverter.getLong((Object) "-1");
      assertEquals((-1L), long0);
  }

  @Test
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try {
        FormatConverter.getLong((Object) null);
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
        /*
         * null
         */
      }
  }

  @Test
  public void test30()  throws Throwable  {
      float float0 = FormatConverter.getFloat((Object) "89");
      assertEquals(89.0F, float0, 0.01F);
  }

  @Test
  public void test31()  throws Throwable  {
      Float float0 = new Float(10.820125193164387);
      float float1 = FormatConverter.getFloat((Object) float0);
      assertEquals(10.820126F, float1, 0.01F);
  }

  @Test
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try {
        FormatConverter.getFloat((Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test33()  throws Throwable  {
      Integer integer0 = new Integer((-8));
      try {
        FormatConverter.getFloat((Object) integer0);
        fail("Expecting exception: MessageFormatException");
      } catch(MessageFormatException e) {
        /*
         * Cannot convert values of type java.lang.Integer to float
         */
      }
  }

  @Test
  public void test34()  throws Throwable  {
      double double0 = FormatConverter.getDouble((Object) "-19.696544795545098");
      assertEquals((-19.696544795545098), double0, 0.01D);
  }

  @Test
  public void test35()  throws Throwable  {
      Double double0 = new Double((double) (short)1104);
      double double1 = FormatConverter.getDouble((Object) double0);
      assertEquals(1104.0, double1, 0.01D);
  }

  @Test
  public void test36()  throws Throwable  {
      Float float0 = new Float((double) (byte)114);
      double double0 = FormatConverter.getDouble((Object) float0);
      assertEquals(114.0, double0, 0.01D);
  }

  @Test
  public void test37()  throws Throwable  {
      Short short0 = new Short((short) (-1150));
      try {
        FormatConverter.getDouble((Object) short0);
        fail("Expecting exception: MessageFormatException");
      } catch(MessageFormatException e) {
        /*
         * Cannot convert values of type java.lang.Short to double
         */
      }
  }

  @Test
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try {
        FormatConverter.getDouble((Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test39()  throws Throwable  {
      String string0 = FormatConverter.getString((Object) "450");
      assertEquals("450", string0);
  }

  @Test
  public void test40()  throws Throwable  {
      String string0 = FormatConverter.getString((Object) null);
      assertNull(string0);
  }

  @Test
  public void test41()  throws Throwable  {
      Character character0 = Character.valueOf('0');
      try {
        FormatConverter.getBytes((Object) character0);
        fail("Expecting exception: MessageFormatException");
      } catch(MessageFormatException e) {
        /*
         * Cannot convert values of type java.lang.Character to [B
         */
      }
  }

  @Test
  public void test42()  throws Throwable  {
      byte[] byteArray0 = FormatConverter.getBytes((Object) null);
      assertNull(byteArray0);
  }
}
