/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.server.net;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.exolab.jms.config.Configuration;
import org.exolab.jms.config.types.SchemeType;
import org.exolab.jms.server.net.ConnectorCfg;
import org.exolab.jms.server.net.ConnectorCfgFactory;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ConnectorCfgFactoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ConnectorCfgFactory connectorCfgFactory0 = new ConnectorCfgFactory();
      assertNotNull(connectorCfgFactory0);
  }

  @Test
  public void test1()  throws Throwable  {
      SchemeType schemeType0 = SchemeType.EMBEDDED;
      Configuration configuration0 = new Configuration();
      ConnectorCfg connectorCfg0 = ConnectorCfgFactory.create(schemeType0, configuration0);
      assertEquals("vm:openjms", connectorCfg0.getAdminExportURI());
  }

  @Test
  public void test2()  throws Throwable  {
      SchemeType schemeType0 = SchemeType.TCP;
      // Undeclared exception!
      try {
        ConnectorCfgFactory.create(schemeType0, (Configuration) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      SchemeType schemeType0 = SchemeType.TCPS;
      // Undeclared exception!
      try {
        ConnectorCfgFactory.create(schemeType0, (Configuration) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      SchemeType schemeType0 = SchemeType.RMI;
      ConnectorCfg connectorCfg0 = ConnectorCfgFactory.create(schemeType0, configuration0);
      assertNotNull(connectorCfg0);
  }

  @Test
  public void test5()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      SchemeType schemeType0 = SchemeType.HTTP;
      // Undeclared exception!
      try {
        ConnectorCfgFactory.create(schemeType0, configuration0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Argument 'httpConfig' is null
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      SchemeType schemeType0 = SchemeType.HTTPS;
      Configuration configuration0 = new Configuration();
      // Undeclared exception!
      try {
        ConnectorCfgFactory.create(schemeType0, configuration0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Argument 'httpConfig' is null
         */
      }
  }
}
