/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.tools.db;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.exolab.castor.xml.ValidationException;
import org.exolab.jms.tools.db.Database;
import org.exolab.jms.tools.db.DatabaseDescriptor;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DatabaseDescriptorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DatabaseDescriptor databaseDescriptor0 = new DatabaseDescriptor();
      String string0 = databaseDescriptor0.getNameSpaceURI();
      assertEquals("http://www.openjms.org/database/schema", string0);
      assertEquals("database", databaseDescriptor0.getXMLName());
      assertNotNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      DatabaseDescriptor databaseDescriptor0 = new DatabaseDescriptor();
      databaseDescriptor0.getExtends();
      assertEquals("database", databaseDescriptor0.getXMLName());
      assertEquals("http://www.openjms.org/database/schema", databaseDescriptor0.getNameSpaceURI());
  }

  @Test
  public void test2()  throws Throwable  {
      DatabaseDescriptor databaseDescriptor0 = new DatabaseDescriptor();
      databaseDescriptor0.getIdentity();
      assertEquals("database", databaseDescriptor0.getXMLName());
      assertEquals("http://www.openjms.org/database/schema", databaseDescriptor0.getNameSpaceURI());
  }

  @Test
  public void test3()  throws Throwable  {
      DatabaseDescriptor databaseDescriptor0 = new DatabaseDescriptor();
      databaseDescriptor0.getAccessMode();
      assertEquals("database", databaseDescriptor0.getXMLName());
      assertEquals("http://www.openjms.org/database/schema", databaseDescriptor0.getNameSpaceURI());
  }

  @Test
  public void test4()  throws Throwable  {
      DatabaseDescriptor databaseDescriptor0 = new DatabaseDescriptor();
      String string0 = databaseDescriptor0.getXMLName();
      assertEquals("http://www.openjms.org/database/schema", databaseDescriptor0.getNameSpaceURI());
      assertNotNull(string0);
      assertEquals("database", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      DatabaseDescriptor databaseDescriptor0 = new DatabaseDescriptor();
      databaseDescriptor0.getNameSpacePrefix();
      assertEquals("database", databaseDescriptor0.getXMLName());
      assertEquals("http://www.openjms.org/database/schema", databaseDescriptor0.getNameSpaceURI());
  }

  @Test
  public void test6()  throws Throwable  {
      DatabaseDescriptor databaseDescriptor0 = new DatabaseDescriptor();
      Database database0 = new Database();
      databaseDescriptor0.validate((Object) database0);
      assertEquals("http://www.openjms.org/database/schema", databaseDescriptor0.getNameSpaceURI());
      assertEquals("database", databaseDescriptor0.getXMLName());
  }

  @Test
  public void test7()  throws Throwable  {
      DatabaseDescriptor databaseDescriptor0 = new DatabaseDescriptor();
      DatabaseDescriptor databaseDescriptor1 = (DatabaseDescriptor)databaseDescriptor0.getValidator();
      assertEquals("http://www.openjms.org/database/schema", databaseDescriptor1.getNameSpaceURI());
      assertEquals("database", databaseDescriptor1.getXMLName());
  }
}
