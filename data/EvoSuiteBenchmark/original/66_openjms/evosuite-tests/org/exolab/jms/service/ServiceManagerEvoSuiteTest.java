/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.service;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.exolab.jms.service.ServiceAlreadyExistsException;
import org.exolab.jms.service.ServiceDoesNotExistException;
import org.exolab.jms.service.ServiceException;
import org.exolab.jms.service.ServiceManager;

@RunWith(EvoSuiteRunner.class)
public class ServiceManagerEvoSuiteTest {


  //Test case number: 0
  /*
   * 14 covered goals:
   * 1 org.exolab.jms.service.ServiceManager.doStart()V: I9 Branch 5 IFEQ L167 - false
   * 2 org.exolab.jms.service.ServiceManager.createService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I58 Branch 18 IF_ICMPEQ L261 - false
   * 3 org.exolab.jms.service.ServiceManager.createService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I5 Branch 16 IFEQ L251 - true
   * 4 org.exolab.jms.service.ServiceManager.createService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I35 Branch 17 IF_ICMPLE L257 - true
   * 5 org.exolab.jms.service.ServiceManager.<init>()V: I30 Branch 1 IFNONNULL L97 - true
   * 6 org.exolab.jms.service.ServiceManager.addService(Ljava/lang/Class;)V: I3 Branch 2 IFNONNULL L111 - true
   * 7 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I17 Branch 10 IFEQ L211 - true
   * 8 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I17 Branch 10 IFEQ L211 - false
   * 9 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I29 Branch 11 IFEQ L213 - true
   * 10 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I29 Branch 11 IFEQ L213 - false
   * 11 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I43 Branch 12 IFLE L217 - true
   * 12 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I99 Branch 14 IF_ICMPLE L226 - true
   * 13 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I132 Branch 15 IFNONNULL L232 - false
   * 14 org.exolab.jms.service.ServiceManager.checkExists(Ljava/lang/Class;)V: I6 Branch 24 IFNULL L350 - true
   */
  @Test
  public void test0()  throws Throwable  {
      ServiceManager serviceManager0 = new ServiceManager();
      assertNotNull(serviceManager0);
      
      Class<?> class0 = Class.class;
      serviceManager0.addService(class0);
      try {
        serviceManager0.restart();
        fail("Expecting exception: ServiceException");
      } catch(ServiceException e) {
        /*
         * Cannot create service of type java.lang.Class: no public constructor
         */
      }
  }

  //Test case number: 1
  /*
   * 18 covered goals:
   * 1 org.exolab.jms.service.ServiceManager.addService(Ljava/lang/Object;)V: I3 Branch 3 IFNONNULL L127 - true
   * 2 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;)Ljava/lang/Object;: I29 Branch 4 IFEQ L154 - true
   * 3 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;)Ljava/lang/Object;: I29 Branch 4 IFEQ L154 - false
   * 4 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I17 Branch 10 IFEQ L211 - true
   * 5 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I17 Branch 10 IFEQ L211 - false
   * 6 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I29 Branch 11 IFEQ L213 - true
   * 7 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I29 Branch 11 IFEQ L213 - false
   * 8 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I43 Branch 12 IFLE L217 - true
   * 9 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I99 Branch 14 IF_ICMPLE L226 - true
   * 10 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I132 Branch 15 IFNONNULL L232 - false
   * 11 org.exolab.jms.service.ServiceManager.createService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I5 Branch 16 IFEQ L251 - true
   * 12 org.exolab.jms.service.ServiceManager.createService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I35 Branch 17 IF_ICMPLE L257 - true
   * 13 org.exolab.jms.service.ServiceManager.createService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I58 Branch 18 IF_ICMPEQ L261 - true
   * 14 org.exolab.jms.service.ServiceManager.createService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I107 Branch 19 IF_ICMPGE L271 - true
   * 15 org.exolab.jms.service.ServiceManager.invokeSetters(Ljava/lang/Object;)V: I34 Branch 21 IF_ICMPGE L315 - true
   * 16 org.exolab.jms.service.ServiceManager.invokeSetters(Ljava/lang/Object;)V: I34 Branch 21 IF_ICMPGE L315 - false
   * 17 org.exolab.jms.service.ServiceManager.invokeSetters(Ljava/lang/Object;)V: I49 Branch 22 IFNULL L318 - true
   * 18 org.exolab.jms.service.ServiceManager.checkExists(Ljava/lang/Class;)V: I6 Branch 24 IFNULL L350 - false
   */
  @Test
  public void test1()  throws Throwable  {
      ServiceManager serviceManager0 = new ServiceManager();
      assertNotNull(serviceManager0);
      
      Class<?> class0 = ServiceManager.class;
      serviceManager0.addService(class0);
      ServiceManager serviceManager1 = (ServiceManager)serviceManager0.getService(class0);
      assertNotNull(serviceManager1);
      
      try {
        serviceManager0.addService((Object) serviceManager1);
        fail("Expecting exception: ServiceAlreadyExistsException");
      } catch(ServiceAlreadyExistsException e) {
        /*
         * Service of type class org.exolab.jms.service.ServiceManager already registered
         */
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 org.exolab.jms.service.ServiceManager.addService(Ljava/lang/Object;)V: I3 Branch 3 IFNONNULL L127 - false
   */
  @Test
  public void test2()  throws Throwable  {
      ServiceManager serviceManager0 = new ServiceManager();
      // Undeclared exception!
      try {
        serviceManager0.addService((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Argument 'service' is null
         */
      }
  }

  //Test case number: 3
  /*
   * 20 covered goals:
   * 1 org.exolab.jms.service.ServiceManager.doStop()V: I9 Branch 8 IFEQ L188 - false
   * 2 org.exolab.jms.service.ServiceManager.doStop()V: I26 Branch 9 IFEQ L191 - false
   * 3 org.exolab.jms.service.ServiceManager.createService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I5 Branch 16 IFEQ L251 - true
   * 4 org.exolab.jms.service.ServiceManager.createService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I35 Branch 17 IF_ICMPLE L257 - true
   * 5 org.exolab.jms.service.ServiceManager.createService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I58 Branch 18 IF_ICMPEQ L261 - true
   * 6 org.exolab.jms.service.ServiceManager.createService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I107 Branch 19 IF_ICMPGE L271 - true
   * 7 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;)Ljava/lang/Object;: I29 Branch 4 IFEQ L154 - true
   * 8 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;)Ljava/lang/Object;: I29 Branch 4 IFEQ L154 - false
   * 9 org.exolab.jms.service.ServiceManager.doStop()V: I9 Branch 8 IFEQ L188 - true
   * 10 org.exolab.jms.service.ServiceManager.doStart()V: I9 Branch 5 IFEQ L167 - true
   * 11 org.exolab.jms.service.ServiceManager.doStart()V: I34 Branch 6 IFEQ L172 - true
   * 12 org.exolab.jms.service.ServiceManager.doStart()V: I34 Branch 6 IFEQ L172 - false
   * 13 org.exolab.jms.service.ServiceManager.doStart()V: I51 Branch 7 IFEQ L175 - false
   * 14 org.exolab.jms.service.ServiceManager.addService(Ljava/lang/Class;)V: I3 Branch 2 IFNONNULL L111 - true
   * 15 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I99 Branch 14 IF_ICMPLE L226 - true
   * 16 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I132 Branch 15 IFNONNULL L232 - true
   * 17 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I132 Branch 15 IFNONNULL L232 - false
   * 18 org.exolab.jms.service.ServiceManager.invokeSetters(Ljava/lang/Object;)V: I34 Branch 21 IF_ICMPGE L315 - true
   * 19 org.exolab.jms.service.ServiceManager.invokeSetters(Ljava/lang/Object;)V: I34 Branch 21 IF_ICMPGE L315 - false
   * 20 org.exolab.jms.service.ServiceManager.invokeSetters(Ljava/lang/Object;)V: I49 Branch 22 IFNULL L318 - true
   */
  @Test
  public void test3()  throws Throwable  {
      ServiceManager serviceManager0 = new ServiceManager();
      assertNotNull(serviceManager0);
      
      Class<?> class0 = ServiceManager.class;
      serviceManager0.addService(class0);
      serviceManager0.restart();
      serviceManager0.restart();
      assertEquals("Service:[name=nullstarted=true]", serviceManager0.toString());
      assertEquals(true, serviceManager0.isStarted());
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * 1 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I43 Branch 12 IFLE L217 - false
   * 2 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I66 Branch 13 IFNE L221 - true
   * 3 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I29 Branch 11 IFEQ L213 - true
   */
  @Test
  public void test4()  throws Throwable  {
      ServiceManager serviceManager0 = new ServiceManager();
      Class<?> class0 = Class.class;
      try {
        serviceManager0.getService(class0);
        fail("Expecting exception: ServiceDoesNotExistException");
      } catch(ServiceDoesNotExistException e) {
        /*
         * Service of type java.lang.Class not registered
         */
      }
  }

  //Test case number: 5
  /*
   * 9 covered goals:
   * 1 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I99 Branch 14 IF_ICMPLE L226 - false
   * 2 org.exolab.jms.service.ServiceManager.<init>()V: I30 Branch 1 IFNONNULL L97 - true
   * 3 org.exolab.jms.service.ServiceManager.doStart()V: I9 Branch 5 IFEQ L167 - false
   * 4 org.exolab.jms.service.ServiceManager.addService(Ljava/lang/Object;)V: I3 Branch 3 IFNONNULL L127 - true
   * 5 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I17 Branch 10 IFEQ L211 - true
   * 6 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I17 Branch 10 IFEQ L211 - false
   * 7 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I29 Branch 11 IFEQ L213 - false
   * 8 org.exolab.jms.service.ServiceManager.getService(Ljava/lang/Class;Ljava/util/LinkedList;Ljava/util/List;)Ljava/lang/Object;: I43 Branch 12 IFLE L217 - true
   * 9 org.exolab.jms.service.ServiceManager.checkExists(Ljava/lang/Class;)V: I6 Branch 24 IFNULL L350 - true
   */
  @Test
  public void test5()  throws Throwable  {
      ServiceManager serviceManager0 = new ServiceManager();
      assertNotNull(serviceManager0);
      
      Object object0 = new Object();
      serviceManager0.addService(object0);
      try {
        serviceManager0.restart();
        fail("Expecting exception: ServiceException");
      } catch(ServiceException e) {
        /*
         * Multiple services match service type java.lang.Object
         */
      }
  }
}
