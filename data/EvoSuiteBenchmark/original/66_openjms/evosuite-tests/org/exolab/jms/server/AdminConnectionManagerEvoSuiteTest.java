/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.server;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import javax.jms.JMSException;
import javax.jms.JMSSecurityException;
import org.exolab.jms.authentication.AuthenticationMgr;
import org.exolab.jms.authentication.UserManager;
import org.exolab.jms.config.Configuration;
import org.exolab.jms.config.SecurityConfiguration;
import org.exolab.jms.messagemgr.ConsumerManager;
import org.exolab.jms.messagemgr.DestinationManager;
import org.exolab.jms.net.connector.Authenticator;
import org.exolab.jms.persistence.DatabaseService;
import org.exolab.jms.server.AdminConnectionFactory;
import org.exolab.jms.server.AdminConnectionManager;
import org.exolab.jms.service.ServiceManager;
import org.exolab.jms.service.Services;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AdminConnectionManagerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AdminConnectionManager adminConnectionManager0 = null;
      try {
        adminConnectionManager0 = new AdminConnectionManager((Authenticator) null, (AdminConnectionFactory) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Argument 'authenticator' is null
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      SecurityConfiguration securityConfiguration0 = new SecurityConfiguration();
      configuration0.setSecurityConfiguration(securityConfiguration0);
      UserManager userManager0 = new UserManager(configuration0, databaseService0);
      AuthenticationMgr authenticationMgr0 = new AuthenticationMgr(userManager0);
      ServiceManager serviceManager0 = new ServiceManager();
      AdminConnectionFactory adminConnectionFactory0 = new AdminConnectionFactory(configuration0, authenticationMgr0, (DestinationManager) null, (ConsumerManager) null, databaseService0, (Services) serviceManager0);
      AdminConnectionManager adminConnectionManager0 = new AdminConnectionManager((Authenticator) authenticationMgr0, adminConnectionFactory0);
      // Undeclared exception!
      try {
        adminConnectionManager0.createConnection("6=1=LEfYqKom9eN/7", "6=1=LEfYqKom9eN/7");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Argument 'destinations' is null
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      UserManager userManager0 = new UserManager(configuration0, databaseService0);
      SecurityConfiguration securityConfiguration0 = new SecurityConfiguration();
      configuration0.setSecurityConfiguration(securityConfiguration0);
      securityConfiguration0.setSecurityEnabled(true);
      AuthenticationMgr authenticationMgr0 = new AuthenticationMgr(userManager0);
      AdminConnectionManager adminConnectionManager0 = new AdminConnectionManager((Authenticator) authenticationMgr0, (AdminConnectionFactory) null);
      try {
        adminConnectionManager0.createConnection((String) null, (String) null);
        fail("Expecting exception: JMSSecurityException");
      } catch(JMSSecurityException e) {
        /*
         * Failed to authenticate user null
         */
      }
  }
}
