/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.selector;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.apache.oro.text.regex.Perl5Pattern;
import org.exolab.jms.selector.InvalidRegexpException;
import org.exolab.jms.selector.RegexpFactory;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RegexpFactoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Character character0 = Character.valueOf('$');
      Perl5Pattern perl5Pattern0 = (Perl5Pattern)RegexpFactory.create("[=9V0s(!n|M'J", character0);
      assertNotNull(perl5Pattern0);
      assertEquals("^\\[=9V0s\\(!n\\|M'J$", perl5Pattern0.getPattern());
  }

  @Test
  public void test1()  throws Throwable  {
      Perl5Pattern perl5Pattern0 = (Perl5Pattern)RegexpFactory.create("pktZYt@", (Character) null);
      assertEquals("^pktZYt@$", perl5Pattern0.getPattern());
      assertNotNull(perl5Pattern0);
  }

  @Test
  public void test2()  throws Throwable  {
      Character character0 = new Character('Y');
      Perl5Pattern perl5Pattern0 = (Perl5Pattern)RegexpFactory.create("DiCjR.d5W@tY3l%", character0);
      assertEquals("^DiCjR\\.d5W@t3l.*$", perl5Pattern0.getPattern());
      assertNotNull(perl5Pattern0);
  }

  @Test
  public void test3()  throws Throwable  {
      Character character0 = new Character('l');
      try {
        RegexpFactory.create("WNUazWd7`cL?l", character0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
        /*
         * Invalid regular expression: WNUazWd7`cL?l
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Character character0 = new Character('k');
      Perl5Pattern perl5Pattern0 = (Perl5Pattern)RegexpFactory.create("4=@K?Hur/L:_A9$|", character0);
      assertEquals("^4=@K\\?Hur/L:.A9\\$\\|$", perl5Pattern0.getPattern());
      assertNotNull(perl5Pattern0);
  }

  @Test
  public void test5()  throws Throwable  {
      Perl5Pattern perl5Pattern0 = (Perl5Pattern)RegexpFactory.create("U!%y<-lA^')B]", (Character) '2');
      assertNotNull(perl5Pattern0);
      assertEquals("^U!.*y<-lA\\^'\\)B\\]$", perl5Pattern0.getPattern());
  }

  @Test
  public void test6()  throws Throwable  {
      Perl5Pattern perl5Pattern0 = (Perl5Pattern)RegexpFactory.create("+", (Character) '.');
      assertNotNull(perl5Pattern0);
      assertEquals("^\\+$", perl5Pattern0.getPattern());
  }

  @Test
  public void test7()  throws Throwable  {
      Perl5Pattern perl5Pattern0 = (Perl5Pattern)RegexpFactory.create("9sR8kIMYx_fZO{Z'AE\"", (Character) 'x');
      assertEquals("^9sR8kIMY_fZO\\{Z'AE\"$", perl5Pattern0.getPattern());
      assertNotNull(perl5Pattern0);
  }

  @Test
  public void test8()  throws Throwable  {
      Perl5Pattern perl5Pattern0 = (Perl5Pattern)RegexpFactory.create("'?jWGn>%v}u", (Character) '>');
      assertNotNull(perl5Pattern0);
      assertEquals("^'\\?jWGn%v\\}u$", perl5Pattern0.getPattern());
  }
}
