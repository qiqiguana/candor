/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.server;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.exolab.jms.authentication.AuthenticationMgr;
import org.exolab.jms.authentication.UserManager;
import org.exolab.jms.config.Configuration;
import org.exolab.jms.messagemgr.MessageManager;
import org.exolab.jms.messagemgr.MessageMgr;
import org.exolab.jms.net.connector.Authenticator;
import org.exolab.jms.persistence.DatabaseService;
import org.exolab.jms.scheduler.Scheduler;
import org.exolab.jms.server.ServerConnectionManagerImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ServerConnectionManagerImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      UserManager userManager0 = new UserManager(configuration0, databaseService0);
      AuthenticationMgr authenticationMgr0 = new AuthenticationMgr(userManager0);
      MessageMgr messageMgr0 = new MessageMgr(databaseService0);
      ServerConnectionManagerImpl serverConnectionManagerImpl0 = null;
      try {
        serverConnectionManagerImpl0 = new ServerConnectionManagerImpl((Authenticator) authenticationMgr0, (MessageManager) messageMgr0, databaseService0, (Scheduler) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Argument 'scheduler' is null
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ServerConnectionManagerImpl serverConnectionManagerImpl0 = null;
      try {
        serverConnectionManagerImpl0 = new ServerConnectionManagerImpl((Authenticator) null, (MessageManager) null, (DatabaseService) null, (Scheduler) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Argument 'authenticator' is null
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      UserManager userManager0 = new UserManager(configuration0, databaseService0);
      AuthenticationMgr authenticationMgr0 = new AuthenticationMgr(userManager0);
      ServerConnectionManagerImpl serverConnectionManagerImpl0 = null;
      try {
        serverConnectionManagerImpl0 = new ServerConnectionManagerImpl((Authenticator) authenticationMgr0, (MessageManager) null, databaseService0, (Scheduler) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Argument 'messages' is null
         */
      }
  }
}
