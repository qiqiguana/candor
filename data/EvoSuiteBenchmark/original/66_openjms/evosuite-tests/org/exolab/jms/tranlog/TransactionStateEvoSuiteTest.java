/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.tranlog;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.io.ObjectOutput;
import org.exolab.jms.tranlog.TransactionState;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TransactionStateEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TransactionState transactionState0 = new TransactionState();
      assertEquals(false, transactionState0.isOpened());
  }

  @Test
  public void test1()  throws Throwable  {
      TransactionState transactionState0 = TransactionState.CLOSED;
      // Undeclared exception!
      try {
        transactionState0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TransactionState transactionState0 = TransactionState.PREPARED;
      String string0 = transactionState0.toString();
      assertEquals("prepared", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      TransactionState transactionState0 = TransactionState.CLOSED;
      boolean boolean0 = transactionState0.isClosed();
      assertEquals(true, boolean0);
      assertEquals(false, transactionState0.isOpened());
  }

  @Test
  public void test4()  throws Throwable  {
      TransactionState transactionState0 = TransactionState.PREPARED;
      boolean boolean0 = transactionState0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      TransactionState transactionState0 = TransactionState.CLOSED;
      boolean boolean0 = transactionState0.equals((Object) transactionState0);
      assertEquals(true, boolean0);
      assertEquals(false, transactionState0.isOpened());
      assertEquals(3, transactionState0.getOrd());
  }

  @Test
  public void test6()  throws Throwable  {
      TransactionState transactionState0 = TransactionState.CLOSED;
      TransactionState transactionState1 = TransactionState.OPENED;
      boolean boolean0 = transactionState0.equals((Object) transactionState1);
      assertFalse(transactionState1.equals(transactionState0));
      assertEquals(false, boolean0);
      assertEquals(true, transactionState1.isOpened());
  }

  @Test
  public void test7()  throws Throwable  {
      TransactionState transactionState0 = TransactionState.CLOSED;
      boolean boolean0 = transactionState0.isOpened();
      assertEquals(true, transactionState0.isClosed());
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      TransactionState transactionState0 = TransactionState.OPENED;
      boolean boolean0 = transactionState0.isOpened();
      assertEquals(false, transactionState0.isClosed());
      assertEquals(true, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      TransactionState transactionState0 = TransactionState.CLOSED;
      boolean boolean0 = transactionState0.isPrepared();
      assertEquals(3, transactionState0.getOrd());
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      TransactionState transactionState0 = TransactionState.PREPARED;
      boolean boolean0 = transactionState0.isPrepared();
      assertEquals(true, boolean0);
      assertEquals(false, transactionState0.isOpened());
  }

  @Test
  public void test11()  throws Throwable  {
      TransactionState transactionState0 = TransactionState.OPENED;
      boolean boolean0 = transactionState0.isClosed();
      assertEquals(false, boolean0);
      assertEquals(1, transactionState0.getOrd());
  }
}
