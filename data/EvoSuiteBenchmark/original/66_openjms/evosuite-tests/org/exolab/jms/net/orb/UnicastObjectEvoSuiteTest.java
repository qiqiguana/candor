/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.net.orb;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.rmi.RemoteException;
import java.rmi.server.ExportException;
import org.exolab.jms.client.net.SharedORB;
import org.exolab.jms.net.orb.ORB;
import org.exolab.jms.server.AdminConnectionManager;
import org.exolab.jms.server.ServerConnection;
import org.exolab.jms.server.net.JmsAdminServerImpl;
import org.exolab.jms.server.net.RemoteServerConnection;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UnicastObjectEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SharedORB sharedORB0 = (SharedORB)SharedORB.getInstance();
      JmsAdminServerImpl jmsAdminServerImpl0 = null;
      try {
        jmsAdminServerImpl0 = new JmsAdminServerImpl((AdminConnectionManager) null, (ORB) sharedORB0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Argument 'uri' is null
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      RemoteServerConnection remoteServerConnection0 = null;
      try {
        remoteServerConnection0 = new RemoteServerConnection((ServerConnection) null, (ORB) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Argument 'orb' is null
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      SharedORB sharedORB0 = (SharedORB)SharedORB.getInstance();
      RemoteServerConnection remoteServerConnection0 = null;
      try {
        remoteServerConnection0 = new RemoteServerConnection((ServerConnection) null, (ORB) sharedORB0);
        fail("Expecting exception: ExportException");
      } catch(ExportException e) {
        /*
         * Cannot export - no current caller
         */
      }
  }
}
