/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.tools.admin;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Rectangle;
import javax.swing.JTree;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeNode;
import org.exolab.jms.tools.admin.OpenJMSServer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class OpenJMSServerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      OpenJMSServer openJMSServer0 = new OpenJMSServer("", (JTree) null);
      openJMSServer0.createCommands();
      assertEquals(0, openJMSServer0.getChildCount());
  }

  @Test
  public void test1()  throws Throwable  {
      JTree jTree0 = new JTree((TreeNode) null, false);
      OpenJMSServer openJMSServer0 = new OpenJMSServer("P@urge Messages", jTree0);
      // Undeclared exception!
      try {
        openJMSServer0.displayCommands((Rectangle) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      JTree jTree0 = new JTree();
      OpenJMSServer openJMSServer0 = new OpenJMSServer("*JX@bHs", jTree0);
      String string0 = openJMSServer0.toString();
      assertEquals("*JX@bHs", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      JTree jTree0 = new JTree();
      OpenJMSServer openJMSServer0 = new OpenJMSServer("*JX@bHs", jTree0);
      boolean boolean0 = openJMSServer0.getAllowsChildren();
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      JTree jTree0 = new JTree(objectArray0);
      DefaultTreeModel defaultTreeModel0 = OpenJMSServer.createServerList(jTree0);
      assertEquals(false, defaultTreeModel0.asksAllowsChildren());
  }

  @Test
  public void test5()  throws Throwable  {
      JTree jTree0 = new JTree();
      OpenJMSServer openJMSServer0 = new OpenJMSServer("*JX@bHs", jTree0);
      openJMSServer0.refresh();
      assertEquals(0, openJMSServer0.getChildCount());
  }
}
