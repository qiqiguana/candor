/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.selector.parser;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import antlr.Token;
import org.exolab.jms.selector.parser.SelectorASTFactory;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SelectorASTFactoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SelectorASTFactory selectorASTFactory0 = new SelectorASTFactory();
      // Undeclared exception!
      try {
        selectorASTFactory0.create((-10), (String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Invalid class, null
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      SelectorASTFactory selectorASTFactory0 = new SelectorASTFactory();
      selectorASTFactory0.setASTNodeType((String) null);
  }

  @Test
  public void test2()  throws Throwable  {
      SelectorASTFactory selectorASTFactory0 = new SelectorASTFactory();
      selectorASTFactory0.setTokenTypeASTNodeType((-10), (String) null);
      selectorASTFactory0.setTokenTypeASTNodeType((-10), (String) null);
  }

  @Test
  public void test3()  throws Throwable  {
      SelectorASTFactory selectorASTFactory0 = new SelectorASTFactory();
      try {
        selectorASTFactory0.setTokenTypeASTNodeType(39, "RfG[0K`$f\"3@%C>");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Invalid class, RfG[0K`$f\"3@%C>
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      SelectorASTFactory selectorASTFactory0 = new SelectorASTFactory();
      // Undeclared exception!
      try {
        selectorASTFactory0.create((Token) null, "antlr.CommonAST");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Invalid class or can't make instance, antlr.CommonAST
         */
      }
  }
}
