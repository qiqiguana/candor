/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.tranlog;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.io.ObjectOutput;
import javax.transaction.xa.Xid;
import org.exolab.jms.tranlog.ExternalXid;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ExternalXidEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ExternalXid externalXid0 = new ExternalXid(477, byteArray0, (byte[]) null);
      assertNotNull(externalXid0);
      
      // Undeclared exception!
      try {
        externalXid0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ExternalXid externalXid0 = new ExternalXid();
      externalXid0.hashCode();
      int int0 = externalXid0.hashCode();
      assertEquals((-269739001), int0);
  }

  @Test
  public void test2()  throws Throwable  {
      ExternalXid externalXid0 = new ExternalXid();
      ExternalXid externalXid1 = new ExternalXid((Xid) externalXid0);
      assertNotNull(externalXid1);
      
      ExternalXid externalXid2 = new ExternalXid((Xid) externalXid1);
      assertEquals("xid://00000000--", externalXid1.toString());
      assertEquals("xid://00000000--", externalXid2.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      ExternalXid externalXid0 = new ExternalXid();
      ExternalXid externalXid1 = new ExternalXid((Xid) externalXid0);
      assertNotNull(externalXid1);
      
      String string0 = externalXid1.toString();
      assertNotNull(string0);
      assertEquals("xid://00000000--", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ExternalXid externalXid0 = new ExternalXid(492, byteArray0, (byte[]) null);
      assertNotNull(externalXid0);
      
      int int0 = externalXid0.hashCode();
      assertEquals(930810470, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ExternalXid externalXid0 = new ExternalXid(59, byteArray0, byteArray0);
      assertNotNull(externalXid0);
      
      String string0 = externalXid0.toString();
      assertNotNull(string0);
      assertEquals("xid://0000003b-000000-000000", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      ExternalXid externalXid0 = new ExternalXid();
      ExternalXid externalXid1 = new ExternalXid((Xid) externalXid0);
      assertNotNull(externalXid1);
      
      // Undeclared exception!
      try {
        externalXid0.equals((Object) externalXid1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ExternalXid externalXid0 = new ExternalXid(59, byteArray0, byteArray0);
      assertNotNull(externalXid0);
      
      boolean boolean0 = externalXid0.equals((Object) "xid://0000003b-000000-000000");
      assertEquals("xid://0000003b-000000-000000", externalXid0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ExternalXid externalXid0 = new ExternalXid(492, byteArray0, (byte[]) null);
      assertNotNull(externalXid0);
      
      byte[] byteArray1 = externalXid0.getGlobalTransactionId();
      ExternalXid externalXid1 = new ExternalXid((int) (byte)0, byteArray1, byteArray0);
      assertNotNull(externalXid1);
      
      boolean boolean0 = externalXid0.equals((Object) externalXid1);
      assertEquals(false, boolean0);
      assertEquals(492, externalXid0.getFormatId());
      assertEquals("xid://00000000-00-00", externalXid1.toString());
      assertEquals("xid://000001ec-00-", externalXid0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ExternalXid externalXid0 = new ExternalXid(0, byteArray0, byteArray0);
      assertNotNull(externalXid0);
      
      ExternalXid externalXid1 = new ExternalXid();
      boolean boolean0 = externalXid0.equals((Object) externalXid1);
      assertEquals("xid://00000000-00-00", externalXid0.toString());
      assertEquals(0, externalXid0.getFormatId());
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ExternalXid externalXid0 = new ExternalXid(492, byteArray0, (byte[]) null);
      assertNotNull(externalXid0);
      
      ExternalXid externalXid1 = new ExternalXid((Xid) externalXid0);
      boolean boolean0 = externalXid0.equals((Object) externalXid1);
      assertEquals("xid://000001ec-00-", externalXid0.toString());
      assertEquals("xid://000001ec-00-", externalXid1.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ExternalXid externalXid0 = new ExternalXid(45, byteArray0, byteArray0);
      assertNotNull(externalXid0);
      
      byteArray0[1] = (byte)98;
      ExternalXid externalXid1 = new ExternalXid(45, byteArray0, byteArray0);
      ExternalXid externalXid2 = new ExternalXid((Xid) externalXid0);
      boolean boolean0 = externalXid1.equals((Object) externalXid2);
      assertEquals(45, externalXid1.getFormatId());
      assertTrue(externalXid0.equals(externalXid2));
      assertEquals(false, boolean0);
      assertEquals("xid://0000002d-000000000000006200-000000000000006200", externalXid1.toString());
  }

  @Test
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ExternalXid externalXid0 = new ExternalXid(59, byteArray0, byteArray0);
      assertNotNull(externalXid0);
      
      ExternalXid externalXid1 = new ExternalXid((Xid) externalXid0);
      boolean boolean0 = externalXid0.equals((Object) externalXid1);
      assertEquals(true, boolean0);
      assertEquals("xid://0000003b-000000-000000", externalXid1.toString());
  }
}
