/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.client;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import javax.jms.JMSException;
import org.exolab.jms.client.JmsDestination;
import org.exolab.jms.client.JmsQueue;
import org.exolab.jms.client.JmsTemporaryQueue;
import org.exolab.jms.client.JmsTemporaryTopic;
import org.exolab.jms.client.JmsTopic;
import org.exolab.jms.message.DestinationImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JmsDestinationEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JmsTemporaryTopic jmsTemporaryTopic0 = new JmsTemporaryTopic();
      jmsTemporaryTopic0.getTopicName();
      assertEquals("null-false", jmsTemporaryTopic0.toString());
      assertEquals(false, jmsTemporaryTopic0.getPersistent());
  }

  @Test
  public void test1()  throws Throwable  {
      JmsTemporaryTopic jmsTemporaryTopic0 = new JmsTemporaryTopic();
      String string0 = jmsTemporaryTopic0.toString();
      assertNotNull(string0);
      assertEquals("null-false", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      JmsTemporaryQueue jmsTemporaryQueue0 = new JmsTemporaryQueue();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(736);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      // Undeclared exception!
      try {
        jmsTemporaryQueue0.writeExternal((ObjectOutput) objectOutputStream0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      JmsQueue jmsQueue0 = new JmsQueue(").5::8(3F'{");
      boolean boolean0 = jmsQueue0.isTemporaryDestination();
      assertEquals(false, boolean0);
      assertEquals(false, jmsQueue0.getPersistent());
  }

  @Test
  public void test4()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("Q[nM^_4");
      assertEquals(false, jmsTopic0.getPersistent());
      
      jmsTopic0.setPersistent(true);
      assertEquals(true, jmsTopic0.getPersistent());
      assertEquals("Q[nM^_4-true", jmsTopic0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("tempqueue:temptobic:[^_4");
      boolean boolean0 = jmsTopic0.getPersistent();
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("tempqueue:temptobic:[^_4");
      boolean boolean0 = jmsTopic0.isTemporaryDestination();
      assertEquals(true, boolean0);
      assertEquals("tempqueue:temptobic:[^_4-false", jmsTopic0.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("temptopic:[^_4");
      boolean boolean0 = jmsTopic0.isTemporaryDestination();
      assertEquals(true, boolean0);
      assertEquals(false, jmsTopic0.getPersistent());
  }

  @Test
  public void test8()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("tempqueue:temptobic:[^_4");
      boolean boolean0 = JmsDestination.isTemporaryDestination((DestinationImpl) jmsTopic0);
      assertEquals(true, boolean0);
      assertEquals(false, jmsTopic0.getPersistent());
  }

  @Test
  public void test9()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("Q[nM^_4");
      boolean boolean0 = JmsDestination.isTemporaryDestination((DestinationImpl) jmsTopic0);
      assertEquals(false, jmsTopic0.getPersistent());
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("temptopic:[^_4");
      boolean boolean0 = JmsDestination.isTemporaryDestination((DestinationImpl) jmsTopic0);
      assertEquals(true, boolean0);
      assertEquals("temptopic:[^_4-false", jmsTopic0.toString());
  }
}
