/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.config;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.Reader;
import java.io.Writer;
import java.util.Enumeration;
import org.exolab.castor.xml.MarshalException;
import org.exolab.castor.xml.ValidationException;
import org.exolab.jms.config.AdministeredDestinations;
import org.exolab.jms.config.AdministeredQueue;
import org.exolab.jms.config.AdministeredTopic;
import org.junit.BeforeClass;
import org.xml.sax.ContentHandler;

@RunWith(EvoSuiteRunner.class)
public class AdministeredDestinationsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      AdministeredQueue administeredQueue0 = new AdministeredQueue();
      try {
        administeredDestinations0.addAdministeredQueue(1153, administeredQueue0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 1153, Size: 0
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      AdministeredTopic administeredTopic0 = new AdministeredTopic();
      try {
        administeredDestinations0.addAdministeredTopic((-440), administeredTopic0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: -440, Size: 0
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      administeredDestinations0.clearAdministeredQueue();
      assertEquals(true, administeredDestinations0.isValid());
  }

  @Test
  public void test3()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      Enumeration<Object> enumeration0 = administeredDestinations0.enumerateAdministeredTopic();
      assertEquals(false, enumeration0.hasMoreElements());
  }

  @Test
  public void test4()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      AdministeredTopic administeredTopic0 = new AdministeredTopic();
      boolean boolean0 = administeredDestinations0.removeAdministeredTopic(administeredTopic0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      Enumeration<Object> enumeration0 = administeredDestinations0.enumerateAdministeredQueue();
      assertEquals(false, enumeration0.hasMoreElements());
  }

  @Test
  public void test6()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      administeredDestinations0.addAdministeredTopic((AdministeredTopic) null);
      assertEquals(false, administeredDestinations0.isValid());
      assertEquals(1, administeredDestinations0.getAdministeredTopicCount());
  }

  @Test
  public void test7()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      int int0 = administeredDestinations0.getAdministeredTopicCount();
      assertEquals(0, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      int int0 = administeredDestinations0.getAdministeredQueueCount();
      assertEquals(0, int0);
  }

  @Test
  public void test9()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      // Undeclared exception!
      try {
        administeredDestinations0.marshal((ContentHandler) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Argument 'handler' is null.
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(775);
      administeredDestinations0.marshal((Writer) charArrayWriter0);
      assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<AdministeredDestinations xmlns=\"http://openjms.exolab.org/configuration\"/>", charArrayWriter0.toString());
      assertEquals(114, charArrayWriter0.size());
  }

  @Test
  public void test11()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      administeredDestinations0.clearAdministeredTopic();
      assertEquals(0, administeredDestinations0.getAdministeredQueueCount());
  }

  @Test
  public void test12()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      AdministeredQueue administeredQueue0 = new AdministeredQueue();
      boolean boolean0 = administeredDestinations0.removeAdministeredQueue(administeredQueue0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      try {
        administeredDestinations0.getAdministeredQueue((-385));
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      try {
        administeredDestinations0.getAdministeredQueue(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test15()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      try {
        administeredDestinations0.getAdministeredQueue(2544);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      administeredDestinations0.addAdministeredQueue((AdministeredQueue) null);
      boolean boolean0 = administeredDestinations0.isValid();
      assertEquals(1, administeredDestinations0.getAdministeredQueueCount());
      assertEquals(false, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      try {
        administeredDestinations0.getAdministeredTopic((-1135));
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test18()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      try {
        administeredDestinations0.getAdministeredTopic(358);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test19()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      try {
        administeredDestinations0.getAdministeredTopic(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test20()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      AdministeredTopic[] administeredTopicArray0 = new AdministeredTopic[4];
      administeredDestinations0.setAdministeredTopic(administeredTopicArray0);
      boolean boolean0 = administeredDestinations0.isValid();
      assertEquals(4, administeredDestinations0.getAdministeredTopicCount());
      assertEquals(false, boolean0);
  }

  @Test
  public void test21()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      AdministeredQueue administeredQueue0 = new AdministeredQueue();
      try {
        administeredDestinations0.setAdministeredQueue(0, administeredQueue0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test22()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      try {
        administeredDestinations0.setAdministeredQueue(188, (AdministeredQueue) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test23()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      AdministeredQueue[] administeredQueueArray0 = new AdministeredQueue[21];
      administeredDestinations0.setAdministeredQueue(administeredQueueArray0);
      assertEquals(false, administeredDestinations0.isValid());
      assertEquals(21, administeredDestinations0.getAdministeredQueueCount());
  }

  @Test
  public void test24()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      AdministeredTopic administeredTopic0 = new AdministeredTopic();
      try {
        administeredDestinations0.setAdministeredTopic((-1), administeredTopic0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test25()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      AdministeredTopic administeredTopic0 = new AdministeredTopic();
      try {
        administeredDestinations0.setAdministeredTopic(0, administeredTopic0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test26()  throws Throwable  {
      AdministeredDestinations administeredDestinations0 = new AdministeredDestinations();
      try {
        administeredDestinations0.setAdministeredTopic(15, (AdministeredTopic) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test27()  throws Throwable  {
      try {
        AdministeredDestinations.unmarshal((Reader) null);
        fail("Expecting exception: MarshalException");
      } catch(MarshalException e) {
        /*
         * 
         */
      }
  }
}
