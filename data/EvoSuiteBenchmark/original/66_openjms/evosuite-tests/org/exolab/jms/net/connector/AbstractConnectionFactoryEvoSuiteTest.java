/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.net.connector;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.security.Principal;
import java.util.HashMap;
import java.util.Map;
import javax.management.remote.JMXPrincipal;
import org.exolab.jms.net.connector.ConnectionFactory;
import org.exolab.jms.net.connector.ConnectionManager;
import org.exolab.jms.net.connector.ManagedConnectionFactory;
import org.exolab.jms.net.connector.ResourceException;
import org.exolab.jms.net.http.AbstractHTTPConnectionFactory;
import org.exolab.jms.net.http.HTTPSManagedConnectionFactory;
import org.exolab.jms.net.rmi.RMIManagedConnectionFactory;
import org.exolab.jms.net.uri.URI;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AbstractConnectionFactoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AbstractHTTPConnectionFactory abstractHTTPConnectionFactory0 = new AbstractHTTPConnectionFactory("org.exlab.jms.config.AdministeredQueue", "org.exlab.jms.config.AdministeredQueue", (ManagedConnectionFactory) null, (ConnectionManager) null);
      URI uRI0 = new URI("org.exlab.jms.config.AdministeredQueue", "org.exlab.jms.config.AdministeredQueue");
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      // Undeclared exception!
      try {
        abstractHTTPConnectionFactory0.getConnection((Principal) null, uRI0, (Map) hashMap0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      AbstractHTTPConnectionFactory abstractHTTPConnectionFactory0 = new AbstractHTTPConnectionFactory("org.exlab.jms.config.AdministeredQueue", "org.exlab.jms.config.AdministeredQueue", (ManagedConnectionFactory) null, (ConnectionManager) null);
      URI uRI0 = new URI("org.exlab.jms.config.AdministeredQueue", "org.exlab.jms.config.AdministeredQueue");
      boolean boolean0 = abstractHTTPConnectionFactory0.canConnect(uRI0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      RMIManagedConnectionFactory rMIManagedConnectionFactory0 = new RMIManagedConnectionFactory();
      ConnectionFactory connectionFactory0 = rMIManagedConnectionFactory0.createConnectionFactory((ConnectionManager) null);
      assertNotNull(connectionFactory0);
  }

  @Test
  public void test3()  throws Throwable  {
      RMIManagedConnectionFactory rMIManagedConnectionFactory0 = new RMIManagedConnectionFactory();
      AbstractHTTPConnectionFactory abstractHTTPConnectionFactory0 = new AbstractHTTPConnectionFactory("org.exlab.jms.config.AdministeredQoeue", "org.exlab.jms.config.AdministeredQoeue", (ManagedConnectionFactory) rMIManagedConnectionFactory0, (ConnectionManager) null);
      URI uRI0 = new URI();
      boolean boolean0 = abstractHTTPConnectionFactory0.canAccept(uRI0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      AbstractHTTPConnectionFactory abstractHTTPConnectionFactory0 = new AbstractHTTPConnectionFactory("org.exlab.jms.config.AdministeredQueue", "org.exlab.jms.config.AdministeredQueue", (ManagedConnectionFactory) null, (ConnectionManager) null);
      ConnectionManager connectionManager0 = abstractHTTPConnectionFactory0.getConnectionManager();
      assertNull(connectionManager0);
  }

  @Test
  public void test5()  throws Throwable  {
      RMIManagedConnectionFactory rMIManagedConnectionFactory0 = new RMIManagedConnectionFactory();
      AbstractHTTPConnectionFactory abstractHTTPConnectionFactory0 = new AbstractHTTPConnectionFactory("org.exlab.jms.config.AdministeredQoeue", "org.exlab.jms.config.AdministeredQoeue", (ManagedConnectionFactory) rMIManagedConnectionFactory0, (ConnectionManager) null);
      URI uRI0 = new URI();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("org.exlab.jms.config.AdministeredQoeue");
      // Undeclared exception!
      try {
        abstractHTTPConnectionFactory0.getConnection((Principal) jMXPrincipal0, uRI0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      RMIManagedConnectionFactory rMIManagedConnectionFactory0 = new RMIManagedConnectionFactory();
      AbstractHTTPConnectionFactory abstractHTTPConnectionFactory0 = new AbstractHTTPConnectionFactory("org.exlab.jms.config.AdministeredQoeue", "org.exlab.jms.config.AdministeredQoeue", (ManagedConnectionFactory) rMIManagedConnectionFactory0, (ConnectionManager) null);
      RMIManagedConnectionFactory rMIManagedConnectionFactory1 = (RMIManagedConnectionFactory)abstractHTTPConnectionFactory0.getManagedConnectionFactory();
      assertSame(rMIManagedConnectionFactory0, rMIManagedConnectionFactory1);
  }

  @Test
  public void test7()  throws Throwable  {
      HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory0 = new HTTPSManagedConnectionFactory();
      AbstractHTTPConnectionFactory abstractHTTPConnectionFactory0 = new AbstractHTTPConnectionFactory("b!us|0UI02bD", "b!us|0UI02bD", (ManagedConnectionFactory) hTTPSManagedConnectionFactory0, (ConnectionManager) null);
      // Undeclared exception!
      try {
        abstractHTTPConnectionFactory0.accept((URI) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
