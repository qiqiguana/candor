/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.client;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import javax.jms.JMSException;
import javax.naming.Reference;
import org.exolab.jms.client.JmsTopic;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JmsTopicEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic();
      assertNull(jmsTopic0.getName());
  }

  @Test
  public void test1()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("ALs#!H(PBq%'l");
      int int0 = jmsTopic0.hashCode();
      assertEquals(1161978321, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("tempqueue:");
      PipedInputStream pipedInputStream0 = new PipedInputStream(173);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) pipedOutputStream0);
      jmsTopic0.writeExternal((ObjectOutput) objectOutputStream0);
  }

  @Test
  public void test3()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("**");
      boolean boolean0 = jmsTopic0.isWildCard();
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("5");
      String string0 = jmsTopic0.getTopicName();
      assertEquals("5", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("tempqueue:");
      boolean boolean0 = jmsTopic0.equals((Object) "ja");
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("Q }}4");
      boolean boolean0 = jmsTopic0.equals((Object) jmsTopic0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("Q }}4");
      JmsTopic jmsTopic1 = new JmsTopic("d5W@tY3l%");
      boolean boolean0 = jmsTopic0.equals((Object) jmsTopic1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      boolean boolean0 = JmsTopic.isWildCard("ALs#!H(PBq%'l");
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      boolean boolean0 = JmsTopic.isWildCard("7tog*u,?");
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("**");
      boolean boolean0 = jmsTopic0.match(jmsTopic0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("");
      JmsTopic jmsTopic1 = new JmsTopic("ALs#hH(#q%l");
      boolean boolean0 = jmsTopic0.match(jmsTopic1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("true");
      JmsTopic jmsTopic1 = new JmsTopic("");
      boolean boolean0 = jmsTopic0.match(jmsTopic1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("5");
      boolean boolean0 = jmsTopic0.match(jmsTopic0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("~W]4`E");
      JmsTopic jmsTopic1 = new JmsTopic("(Qa*v<{4bz");
      boolean boolean0 = jmsTopic1.match(jmsTopic0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("ALs#!H(PBq%'l");
      Reference reference0 = jmsTopic0.getReference();
      assertEquals("Reference Class Name: org.exolab.jms.client.JmsTopic\nType: name\nContent: ALs#!H(PBq%'l\nType: persistent\nContent: false\n", reference0.toString());
  }

  @Test
  public void test16()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("ALs#!H(PBq%'l");
      jmsTopic0.setPersistent(true);
      Reference reference0 = jmsTopic0.getReference();
      assertEquals("Reference Class Name: org.exolab.jms.client.JmsTopic\nType: name\nContent: ALs#!H(PBq%'l\nType: persistent\nContent: true\n", reference0.toString());
      assertNotNull(reference0);
  }
}
