/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.tools.admin;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Rectangle;
import javax.swing.JTree;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import javax.swing.tree.TreeNode;
import org.exolab.jms.tools.admin.OpenJMSObject;
import org.exolab.jms.tools.admin.OpenJMSQueue;
import org.exolab.jms.tools.admin.OpenJMSTopic;
import org.exolab.jms.tools.admin.OpenJMSUser;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class OpenJMSObjectEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JTree jTree0 = new JTree();
      OpenJMSUser openJMSUser0 = new OpenJMSUser("", jTree0);
      assertNotNull(openJMSUser0);
      
      boolean boolean0 = openJMSUser0.getAllowsChildren();
      assertEquals(false, openJMSUser0.isLeaf());
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      OpenJMSQueue openJMSQueue0 = new OpenJMSQueue("pW", (JTree) null);
      assertNotNull(openJMSQueue0);
      
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader((TableColumnModel) defaultTableColumnModel0);
      Rectangle rectangle0 = jTableHeader0.getBounds();
      openJMSQueue0.displayCommands(rectangle0);
      assertEquals(false, openJMSQueue0.isLeaf());
  }

  @Test
  public void test2()  throws Throwable  {
      JTree jTree0 = new JTree();
      OpenJMSQueue openJMSQueue0 = new OpenJMSQueue("", jTree0);
      assertNotNull(openJMSQueue0);
      
      JTree jTree1 = new JTree((TreeNode) openJMSQueue0);
      assertEquals(false, openJMSQueue0.isLeaf());
  }

  @Test
  public void test3()  throws Throwable  {
      OpenJMSObject openJMSObject0 = OpenJMSObject.getInstanceSelected();
      assertNull(openJMSObject0);
  }

  @Test
  public void test4()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      JTree jTree0 = new JTree(objectArray0);
      OpenJMSTopic openJMSTopic0 = new OpenJMSTopic("", jTree0);
      assertNotNull(openJMSTopic0);
      
      openJMSTopic0.refresh();
      assertEquals(false, openJMSTopic0.isLeaf());
  }
}
