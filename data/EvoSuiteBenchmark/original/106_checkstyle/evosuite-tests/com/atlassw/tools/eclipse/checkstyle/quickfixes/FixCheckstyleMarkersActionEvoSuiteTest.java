/*
 * This file was automatically generated by EvoSuite
 */

package com.atlassw.tools.eclipse.checkstyle.quickfixes;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.atlassw.tools.eclipse.checkstyle.quickfixes.FixCheckstyleMarkersAction;
import org.eclipse.jface.action.IAction;
import org.eclipse.jface.viewers.ISelection;
import org.eclipse.jface.viewers.StructuredSelection;
import org.eclipse.ui.IWorkbenchPart;
import org.eclipse.ui.actions.RetargetAction;
import org.eclipse.ui.texteditor.StatusTextEditor;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FixCheckstyleMarkersActionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FixCheckstyleMarkersAction fixCheckstyleMarkersAction0 = new FixCheckstyleMarkersAction();
      RetargetAction retargetAction0 = new RetargetAction("?k2P`i", "?k2P`i");
      StructuredSelection structuredSelection0 = new StructuredSelection((Object) "assert 1: 1;");
      fixCheckstyleMarkersAction0.selectionChanged((IAction) retargetAction0, (ISelection) structuredSelection0);
      // Undeclared exception!
      try {
        fixCheckstyleMarkersAction0.run((IAction) retargetAction0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * java.lang.String cannot be cast to org.eclipse.core.runtime.IAdaptable
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      FixCheckstyleMarkersAction fixCheckstyleMarkersAction0 = new FixCheckstyleMarkersAction();
      StatusTextEditor statusTextEditor0 = new StatusTextEditor();
      fixCheckstyleMarkersAction0.setActivePart((IAction) null, (IWorkbenchPart) statusTextEditor0);
      assertEquals(false, statusTextEditor0.isSaveAsAllowed());
  }

  @Test
  public void test2()  throws Throwable  {
      FixCheckstyleMarkersAction fixCheckstyleMarkersAction0 = new FixCheckstyleMarkersAction();
      RetargetAction retargetAction0 = new RetargetAction("?k2P`i", "?k2P`i");
      fixCheckstyleMarkersAction0.run((IAction) retargetAction0);
      assertEquals(false, retargetAction0.isEnabled());
  }

  @Test
  public void test3()  throws Throwable  {
      FixCheckstyleMarkersAction fixCheckstyleMarkersAction0 = new FixCheckstyleMarkersAction();
      StructuredSelection structuredSelection0 = StructuredSelection.EMPTY;
      fixCheckstyleMarkersAction0.selectionChanged((IAction) null, (ISelection) structuredSelection0);
      fixCheckstyleMarkersAction0.run((IAction) null);
  }
}
