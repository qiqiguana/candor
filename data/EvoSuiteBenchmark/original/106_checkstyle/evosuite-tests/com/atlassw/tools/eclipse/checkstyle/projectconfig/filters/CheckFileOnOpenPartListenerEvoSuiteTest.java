/*
 * This file was automatically generated by EvoSuite
 */

package com.atlassw.tools.eclipse.checkstyle.projectconfig.filters;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.atlassw.tools.eclipse.checkstyle.projectconfig.filters.CheckFileOnOpenPartListener;
import org.eclipse.ui.IWorkbenchPartReference;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CheckFileOnOpenPartListenerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CheckFileOnOpenPartListener checkFileOnOpenPartListener0 = new CheckFileOnOpenPartListener();
      checkFileOnOpenPartListener0.partVisible((IWorkbenchPartReference) null);
  }

  @Test
  public void test1()  throws Throwable  {
      CheckFileOnOpenPartListener checkFileOnOpenPartListener0 = new CheckFileOnOpenPartListener();
      checkFileOnOpenPartListener0.partBroughtToTop((IWorkbenchPartReference) null);
  }

  @Test
  public void test2()  throws Throwable  {
      CheckFileOnOpenPartListener checkFileOnOpenPartListener0 = new CheckFileOnOpenPartListener();
      checkFileOnOpenPartListener0.partDeactivated((IWorkbenchPartReference) null);
  }

  @Test
  public void test3()  throws Throwable  {
      CheckFileOnOpenPartListener checkFileOnOpenPartListener0 = new CheckFileOnOpenPartListener();
      checkFileOnOpenPartListener0.partActivated((IWorkbenchPartReference) null);
  }

  @Test
  public void test4()  throws Throwable  {
      CheckFileOnOpenPartListener checkFileOnOpenPartListener0 = new CheckFileOnOpenPartListener();
      checkFileOnOpenPartListener0.partInputChanged((IWorkbenchPartReference) null);
  }

  @Test
  public void test5()  throws Throwable  {
      CheckFileOnOpenPartListener checkFileOnOpenPartListener0 = new CheckFileOnOpenPartListener();
      checkFileOnOpenPartListener0.partHidden((IWorkbenchPartReference) null);
  }
}
