/*
 * This file was automatically generated by EvoSuite
 */

package com.atlassw.tools.eclipse.checkstyle.properties;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.atlassw.tools.eclipse.checkstyle.projectconfig.FileSet;
import com.atlassw.tools.eclipse.checkstyle.properties.CheckstylePropertyPage;
import com.atlassw.tools.eclipse.checkstyle.properties.FileSetEditDialog;
import com.atlassw.tools.eclipse.checkstyle.util.CheckstylePluginException;
import org.eclipse.core.resources.IProject;
import org.eclipse.swt.graphics.Image;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Shell;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FileSetEditDialogEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FileSet fileSet0 = new FileSet();
      CheckstylePropertyPage checkstylePropertyPage0 = new CheckstylePropertyPage();
      FileSetEditDialog fileSetEditDialog0 = new FileSetEditDialog((Shell) null, fileSet0, (IProject) null, checkstylePropertyPage0);
      // Undeclared exception!
      try {
        fileSetEditDialog0.createDialogArea((Composite) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Argument cannot be null
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      CheckstylePropertyPage checkstylePropertyPage0 = new CheckstylePropertyPage();
      FileSetEditDialog fileSetEditDialog0 = new FileSetEditDialog((Shell) null, (FileSet) null, (IProject) null, checkstylePropertyPage0);
      // Undeclared exception!
      try {
        fileSetEditDialog0.create();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class org.eclipse.swt.internal.wpf.COM
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      FileSet fileSet0 = new FileSet();
      CheckstylePropertyPage checkstylePropertyPage0 = new CheckstylePropertyPage();
      FileSetEditDialog fileSetEditDialog0 = new FileSetEditDialog((Shell) null, fileSet0, (IProject) null, checkstylePropertyPage0);
      FileSet fileSet1 = fileSetEditDialog0.getFileSet();
      assertSame(fileSet0, fileSet1);
      assertNotNull(fileSet1);
  }

  @Test
  public void test3()  throws Throwable  {
      FileSet fileSet0 = new FileSet();
      CheckstylePropertyPage checkstylePropertyPage0 = new CheckstylePropertyPage();
      FileSetEditDialog fileSetEditDialog0 = new FileSetEditDialog((Shell) null, fileSet0, (IProject) null, checkstylePropertyPage0);
      // Undeclared exception!
      try {
        fileSetEditDialog0.configureShell((Shell) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      FileSet fileSet0 = new FileSet();
      CheckstylePropertyPage checkstylePropertyPage0 = new CheckstylePropertyPage();
      FileSetEditDialog fileSetEditDialog0 = new FileSetEditDialog((Shell) null, fileSet0, (IProject) null, checkstylePropertyPage0);
      FileSetEditDialog.FileMatchPatternLabelProvider fileSetEditDialog_FileMatchPatternLabelProvider0 = fileSetEditDialog0.new FileMatchPatternLabelProvider();
      Image image0 = fileSetEditDialog_FileMatchPatternLabelProvider0.getColumnImage((Object) "description", (-237));
      assertNull(image0);
  }

  @Test
  public void test5()  throws Throwable  {
      CheckstylePropertyPage checkstylePropertyPage0 = new CheckstylePropertyPage();
      FileSetEditDialog fileSetEditDialog0 = new FileSetEditDialog((Shell) null, (FileSet) null, (IProject) null, checkstylePropertyPage0);
      FileSetEditDialog.FileMatchPatternLabelProvider fileSetEditDialog_FileMatchPatternLabelProvider0 = fileSetEditDialog0.new FileMatchPatternLabelProvider();
      String string0 = fileSetEditDialog_FileMatchPatternLabelProvider0.getColumnText((Object) "charStart", 1233);
      assertEquals("charStart", string0);
  }
}
