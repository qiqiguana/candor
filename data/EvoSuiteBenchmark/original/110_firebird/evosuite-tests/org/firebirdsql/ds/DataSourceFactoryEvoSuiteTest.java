/*
 * This file was automatically generated by EvoSuite
 */

package org.firebirdsql.ds;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Hashtable;
import javax.naming.CompositeName;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.Name;
import javax.naming.NamingException;
import javax.naming.RefAddr;
import javax.naming.Reference;
import javax.naming.StringRefAddr;
import org.firebirdsql.ds.DataSourceFactory;
import org.firebirdsql.ds.FBConnectionPoolDataSource;
import org.firebirdsql.jdbc.FBConnectionProperties;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DataSourceFactoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DataSourceFactory dataSourceFactory0 = new DataSourceFactory();
      Reference reference0 = new Reference("java.naming.authoritative", "java.naming.authoritative", "java.naming.authoritative");
      CompositeName compositeName0 = new CompositeName();
      Hashtable<Object, FBConnectionProperties> hashtable0 = new Hashtable<Object, FBConnectionProperties>();
      InitialContext initialContext0 = new InitialContext(hashtable0);
      FBConnectionPoolDataSource fBConnectionPoolDataSource0 = (FBConnectionPoolDataSource)dataSourceFactory0.getObjectInstance((Object) reference0, (Name) compositeName0, (Context) initialContext0, (Hashtable<?, ?>) hashtable0);
      assertNull(fBConnectionPoolDataSource0);
  }

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = DataSourceFactory.serialize((Object) "java.naming.authoritative");
      assertNotNull(byteArray0);
  }

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      Object object0 = DataSourceFactory.deserialize(byteArray0);
      assertNull(object0);
  }

  @Test
  public void test3()  throws Throwable  {
      StringRefAddr stringRefAddr0 = new StringRefAddr("org.firebirdsql.ds.FBConnectionPoolDataSource", (String) null);
      Reference reference0 = new Reference("org.firebirdsql.ds.FBConnectionPoolDataSource", (RefAddr) stringRefAddr0);
      String string0 = DataSourceFactory.getRefAddr(reference0, "org.firebirdsql.ds.FBConnectionPoolDataSource");
      assertNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      Reference reference0 = new Reference("java.naming.authoritative", "java.naming.authoritative", "java.naming.authoritative");
      String string0 = DataSourceFactory.getRefAddr(reference0, "java.naming.authoritative");
      assertNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      StringRefAddr stringRefAddr0 = new StringRefAddr("org.firebirdsql.ds.FBXADataSource", "org.firebirdsql.ds.FBXADataSource");
      Reference reference0 = new Reference("org.firebirdsql.ds.FBXADataSource", (RefAddr) stringRefAddr0);
      String string0 = DataSourceFactory.getRefAddr(reference0, "org.firebirdsql.ds.FBXADataSource");
      assertEquals("org.firebirdsql.ds.FBXADataSource", string0);
  }
}
