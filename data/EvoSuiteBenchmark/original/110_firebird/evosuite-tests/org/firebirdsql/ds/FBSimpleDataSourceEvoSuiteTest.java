/*
 * This file was automatically generated by EvoSuite
 */

package org.firebirdsql.ds;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.SQLException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.naming.NamingException;
import javax.naming.Reference;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.firebirdsql.ds.FBSimpleDataSource;
import org.firebirdsql.gds.TransactionParameterBuffer;
import org.firebirdsql.gds.impl.AbstractGDS;
import org.firebirdsql.gds.impl.GDSFactory;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.jdbc.FBDataSource;
import org.firebirdsql.jdbc.FBDriverNotCapableException;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FBSimpleDataSourceEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = false; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getReference()Ljavax/naming/Reference;: root-Branch
   * 2 org.firebirdsql.ds.FBSimpleDataSource.<init>(Lorg/firebirdsql/gds/impl/GDSType;)V: root-Branch
   * 3 org.firebirdsql.ds.FBSimpleDataSource.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      Reference reference0 = fBSimpleDataSource0.getReference();
      assertNull(reference0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getTpbMapping()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      String string0 = fBSimpleDataSource0.getTpbMapping();
      assertNull(string0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getDescription()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      String string0 = fBSimpleDataSource0.getDescription();
      assertNull(string0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setTpbMapping(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setTpbMapping("");
      assertEquals(false, fBSimpleDataSource0.isTimestampUsesLocalTimezone());
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getType()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test4()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      String string0 = fBSimpleDataSource0.getType();
      assertEquals("PURE_JAVA", string0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setUseStreamBlobs(Z)V: root-Branch
   */
  @Test
  public void test5()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setUseStreamBlobs(false);
      assertEquals(false, fBSimpleDataSource0.isUseStreamBlobs());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getDefaultIsolation()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test6()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      String string0 = fBSimpleDataSource0.getDefaultIsolation();
      assertEquals("TRANSACTION_READ_COMMITTED", string0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setBlobBufferLength(Ljava/lang/Integer;)V: root-Branch
   */
  @Test
  public void test7()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setBlobBufferLength((Integer) 0);
      assertEquals(false, fBSimpleDataSource0.isUseStreamBlobs());
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setRoleName(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test8()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setRoleName(" int: ");
      assertNull(fBSimpleDataSource0.getCharSet());
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getCharSet()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test9()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      String string0 = fBSimpleDataSource0.getCharSet();
      assertNull(string0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getDatabaseParameterBuffer()Lorg/firebirdsql/gds/DatabaseParameterBuffer;: root-Branch
   */
  @Test
  public void test10()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = (DatabaseParameterBufferImp)fBSimpleDataSource0.getDatabaseParameterBuffer();
      assertEquals(0, databaseParameterBufferImp0.getLength());
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setSqlDialect(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test11()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setSqlDialect("Unable to load generated key parser");
      assertEquals(0, fBSimpleDataSource0.getSocketBufferSize());
  }

  //Test case number: 12
  /*
   * 2 covered goals:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getTransactionParameters(I)Lorg/firebirdsql/gds/TransactionParameterBuffer;: root-Branch
   * 2 org.firebirdsql.ds.FBSimpleDataSource.getBlobBufferLength()Ljava/lang/Integer;: root-Branch
   */
  @Test
  public void test12()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      Integer integer0 = fBSimpleDataSource0.getBlobBufferLength();
      TransactionParameterBuffer transactionParameterBuffer0 = fBSimpleDataSource0.getTransactionParameters((int) integer0);
      assertNull(transactionParameterBuffer0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getBlobBufferSize()I: root-Branch
   */
  @Test
  public void test13()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      int int0 = fBSimpleDataSource0.getBlobBufferSize();
      assertEquals(0, int0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.isDefaultResultSetHoldable()Z: root-Branch
   */
  @Test
  public void test14()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      boolean boolean0 = fBSimpleDataSource0.isDefaultResultSetHoldable();
      assertEquals(false, boolean0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getBuffersNumber()I: root-Branch
   */
  @Test
  public void test15()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      int int0 = fBSimpleDataSource0.getBuffersNumber();
      assertEquals(0, int0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setTimestampUsesLocalTimezone(Z)V: root-Branch
   */
  @Test
  public void test16()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setTimestampUsesLocalTimezone(false);
      assertEquals(false, fBSimpleDataSource0.isTimestampUsesLocalTimezone());
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getPassword()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test17()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      String string0 = fBSimpleDataSource0.getPassword();
      assertNull(string0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setNonStandardProperty(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test18()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      // Undeclared exception!
      try {
        fBSimpleDataSource0.setNonStandardProperty((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setSoTimeout(I)V: root-Branch
   */
  @Test
  public void test19()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setSoTimeout(276);
      assertEquals(276, fBSimpleDataSource0.getSoTimeout());
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setDefaultIsolation(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test20()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      // Undeclared exception!
      try {
        fBSimpleDataSource0.setDefaultIsolation((String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Invalid isolation name.
         */
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getDefaultTransactionIsolation()I: root-Branch
   */
  @Test
  public void test21()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      int int0 = fBSimpleDataSource0.getDefaultTransactionIsolation();
      assertEquals(2, int0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setUserName(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test22()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setUserName("Unable to load generated key parser");
      assertEquals(false, fBSimpleDataSource0.isDefaultResultSetHoldable());
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getSoTimeout()I: root-Branch
   */
  @Test
  public void test23()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      int int0 = fBSimpleDataSource0.getSoTimeout();
      assertEquals(0, int0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getEncoding()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test24()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      String string0 = fBSimpleDataSource0.getEncoding();
      assertNull(string0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setNonStandardProperty(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test25()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setNonStandardProperty("jdbc:firebirdsql:native:", "?T\"Q&7hL");
      assertNull(fBSimpleDataSource0.getUserName());
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setBlobBufferSize(I)V: root-Branch
   */
  @Test
  public void test26()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setBlobBufferSize(0);
      assertEquals(0, fBSimpleDataSource0.getBlobBufferSize());
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setCharSet(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test27()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setCharSet("");
      assertEquals("TRANSACTION_READ_COMMITTED", fBSimpleDataSource0.getDefaultIsolation());
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setPassword(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test28()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setPassword("PKTABLE_CAT");
      assertEquals(0, fBSimpleDataSource0.getBlobBufferSize());
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setBuffersNumber(I)V: root-Branch
   */
  @Test
  public void test29()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setBuffersNumber(0);
      assertEquals(0, fBSimpleDataSource0.getBuffersNumber());
  }

  //Test case number: 30
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getRoleName()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test30()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      String string0 = fBSimpleDataSource0.getRoleName();
      assertNull(string0);
  }

  //Test case number: 31
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getLoginTimeout()I: root-Branch
   */
  @Test
  public void test31()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      int int0 = fBSimpleDataSource0.getLoginTimeout();
      assertEquals(0, int0);
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setUseTranslation(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test32()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setUseTranslation("");
      assertEquals(0, fBSimpleDataSource0.getLoginTimeout());
  }

  //Test case number: 33
  /*
   * 2 covered goals:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setTransactionParameters(ILorg/firebirdsql/gds/TransactionParameterBuffer;)V: root-Branch
   * 2 org.firebirdsql.ds.FBSimpleDataSource.getBlobBufferLength()Ljava/lang/Integer;: root-Branch
   */
  @Test
  public void test33()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      Integer integer0 = fBSimpleDataSource0.getBlobBufferLength();
      fBSimpleDataSource0.setTransactionParameters((int) integer0, (TransactionParameterBuffer) null);
      assertNull(fBSimpleDataSource0.getUserName());
  }

  //Test case number: 34
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getUserName()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test34()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      String string0 = fBSimpleDataSource0.getUserName();
      assertNull(string0);
  }

  //Test case number: 35
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.isUseStandardUdf()Z: root-Branch
   */
  @Test
  public void test35()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      boolean boolean0 = fBSimpleDataSource0.isUseStandardUdf();
      assertEquals(false, boolean0);
  }

  //Test case number: 36
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setDefaultResultSetHoldable(Z)V: root-Branch
   */
  @Test
  public void test36()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setDefaultResultSetHoldable(true);
      assertEquals(true, fBSimpleDataSource0.isDefaultResultSetHoldable());
  }

  //Test case number: 37
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setType(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test37()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setType((String) null);
      assertNull(fBSimpleDataSource0.getCharSet());
  }

  //Test case number: 38
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getSocketBufferSize()I: root-Branch
   */
  @Test
  public void test38()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      int int0 = fBSimpleDataSource0.getSocketBufferSize();
      assertEquals(0, int0);
  }

  //Test case number: 39
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setReference(Ljavax/naming/Reference;)V: root-Branch
   */
  @Test
  public void test39()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setReference((Reference) null);
      assertNull(fBSimpleDataSource0.getTpbMapping());
  }

  //Test case number: 40
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setLoginTimeout(I)V: root-Branch
   */
  @Test
  public void test40()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setLoginTimeout(0);
      assertEquals(0, fBSimpleDataSource0.getLoginTimeout());
  }

  //Test case number: 41
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getDatabase()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test41()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      String string0 = fBSimpleDataSource0.getDatabase();
      assertNull(string0);
  }

  //Test case number: 42
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setSocketBufferSize(I)V: root-Branch
   */
  @Test
  public void test42()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setSocketBufferSize(2);
      assertEquals(2, fBSimpleDataSource0.getSocketBufferSize());
  }

  //Test case number: 43
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setUseStandardUdf(Z)V: root-Branch
   */
  @Test
  public void test43()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setUseStandardUdf(false);
      assertEquals(false, fBSimpleDataSource0.isUseStandardUdf());
  }

  //Test case number: 44
  /*
   * 5 covered goals:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getDataSource()Ljavax/sql/DataSource;: I15 Branch 2 IFNULL L486 - false
   * 2 org.firebirdsql.ds.FBSimpleDataSource.getDataSource()Ljavax/sql/DataSource;: I22 Branch 3 IFLE L486 - true
   * 3 org.firebirdsql.ds.FBSimpleDataSource.getConnection()Ljava/sql/Connection;: root-Branch
   * 4 org.firebirdsql.ds.FBSimpleDataSource.setDatabase(Ljava/lang/String;)V: root-Branch
   * 5 org.firebirdsql.ds.FBSimpleDataSource.getDataSource()Ljavax/sql/DataSource;: I4 Branch 1 IFNULL L483 - true
   */
  @Test
  public void test44()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
          fBSimpleDataSource0.setDatabase(". ");
          // Undeclared exception!
          try {
            fBSimpleDataSource0.getConnection();
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.net.SocketPermission localhost resolve)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkConnect(SecurityManager.java:1031)
             * java.net.InetAddress.getAllByName0(InetAddress.java:1145)
             * java.net.InetAddress.getAllByName(InetAddress.java:1083)
             * java.net.InetAddress.getAllByName(InetAddress.java:1019)
             * java.net.InetAddress.getByName(InetAddress.java:969)
             * java.net.InetSocketAddress.<init>(InetSocketAddress.java:124)
             * java.net.Socket.<init>(Socket.java:189)
             * org.firebirdsql.gds.impl.wire.JavaGDSImpl.getSocket(JavaGDSImpl.java:40)
             * org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl.openSocket(AbstractJavaGDSImpl.java:2096)
             * org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl.connect(AbstractJavaGDSImpl.java:1962)
             * org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl.internalAttachDatabase(AbstractJavaGDSImpl.java:435)
             * org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl.iscAttachDatabase(AbstractJavaGDSImpl.java:411)
             * org.firebirdsql.jca.FBManagedConnection.<init>(FBManagedConnection.java:104)
             * org.firebirdsql.jca.FBManagedConnectionFactory.createManagedConnection(FBManagedConnectionFactory.java:480)
             * org.firebirdsql.jca.FBStandAloneConnectionManager.allocateConnection(FBStandAloneConnectionManager.java:69)
             * org.firebirdsql.jdbc.FBDataSource.getConnection(FBDataSource.java:96)
             * org.firebirdsql.ds.FBSimpleDataSource.getConnection(FBSimpleDataSource.java:418)
             * sun.reflect.GeneratedMethodAccessor106.invoke(Unknown Source)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  //Test case number: 45
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getSqlDialect()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test45()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      String string0 = fBSimpleDataSource0.getSqlDialect();
      assertNull(string0);
  }

  //Test case number: 46
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.isUseStreamBlobs()Z: root-Branch
   */
  @Test
  public void test46()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      boolean boolean0 = fBSimpleDataSource0.isUseStreamBlobs();
      assertEquals(false, boolean0);
  }

  //Test case number: 47
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getUseTranslation()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test47()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      String string0 = fBSimpleDataSource0.getUseTranslation();
      assertNull(string0);
  }

  //Test case number: 48
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.isTimestampUsesLocalTimezone()Z: root-Branch
   */
  @Test
  public void test48()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      boolean boolean0 = fBSimpleDataSource0.isTimestampUsesLocalTimezone();
      assertEquals(false, boolean0);
  }

  //Test case number: 49
  /*
   * 2 covered goals:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getConnection(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;: root-Branch
   * 2 org.firebirdsql.ds.FBSimpleDataSource.getDataSource()Ljavax/sql/DataSource;: I15 Branch 2 IFNULL L486 - true
   */
  @Test
  public void test49()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      try {
        fBSimpleDataSource0.getConnection("Unable to load generated key parser", "e|B_3,sxj}lh-Vz");
        fail("Expecting exception: SQLException");
      } catch(SQLException e) {
        /*
         * Database was not specified. Cannot provide connections.
         */
      }
  }

  //Test case number: 50
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getNonStandardProperty(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   */
  @Test
  public void test50()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      String string0 = fBSimpleDataSource0.getNonStandardProperty(" int: ");
      assertNull(string0);
  }

  //Test case number: 51
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setDescription(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test51()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setDescription((String) null);
      assertEquals(2, fBSimpleDataSource0.getDefaultTransactionIsolation());
  }

  //Test case number: 52
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setDefaultTransactionIsolation(I)V: root-Branch
   */
  @Test
  public void test52()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setDefaultTransactionIsolation(2);
      assertEquals(2, fBSimpleDataSource0.getDefaultTransactionIsolation());
  }

  //Test case number: 53
  /*
   * 1 covered goal:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.setEncoding(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test53()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setEncoding("PKTABLE_CAT");
      assertNull(fBSimpleDataSource0.getCharSet());
  }

  //Test case number: 54
  /*
   * 5 covered goals:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.getDataSource()Ljavax/sql/DataSource;: I22 Branch 3 IFLE L486 - false
   * 2 org.firebirdsql.ds.FBSimpleDataSource.getConnection()Ljava/sql/Connection;: root-Branch
   * 3 org.firebirdsql.ds.FBSimpleDataSource.setDatabase(Ljava/lang/String;)V: root-Branch
   * 4 org.firebirdsql.ds.FBSimpleDataSource.getDataSource()Ljavax/sql/DataSource;: I4 Branch 1 IFNULL L483 - true
   * 5 org.firebirdsql.ds.FBSimpleDataSource.getDataSource()Ljavax/sql/DataSource;: I15 Branch 2 IFNULL L486 - false
   */
  @Test
  public void test54()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      fBSimpleDataSource0.setDatabase("");
      try {
        fBSimpleDataSource0.getConnection();
        fail("Expecting exception: SQLException");
      } catch(SQLException e) {
        /*
         * Database was not specified. Cannot provide connections.
         */
      }
  }

  //Test case number: 55
  /*
   * 3 covered goals:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.isWrapperFor(Ljava/lang/Class;)Z: I3 Branch 4 IFNULL L504 - false
   * 2 org.firebirdsql.ds.FBSimpleDataSource.isWrapperFor(Ljava/lang/Class;)Z: I8 Branch 5 IFEQ L504 - true
   * 3 org.firebirdsql.ds.FBSimpleDataSource.unwrap(Ljava/lang/Class;)Ljava/lang/Object;: I5 Branch 6 IFNE L508 - false
   */
  @Test
  public void test55()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      Class<?> class0 = GDSFactory.class;
      try {
        fBSimpleDataSource0.unwrap((Class<FBDataSource>) class0);
        fail("Expecting exception: FBDriverNotCapableException");
      } catch(FBDriverNotCapableException e) {
        /*
         * Not yet implemented.
         */
      }
  }

  //Test case number: 56
  /*
   * 5 covered goals:
   * 1 org.firebirdsql.ds.FBSimpleDataSource.isWrapperFor(Ljava/lang/Class;)Z: I8 Branch 5 IFEQ L504 - false
   * 2 org.firebirdsql.ds.FBSimpleDataSource.unwrap(Ljava/lang/Class;)Ljava/lang/Object;: I5 Branch 6 IFNE L508 - true
   * 3 org.firebirdsql.ds.FBSimpleDataSource.<init>(Lorg/firebirdsql/gds/impl/GDSType;)V: root-Branch
   * 4 org.firebirdsql.ds.FBSimpleDataSource.<init>()V: root-Branch
   * 5 org.firebirdsql.ds.FBSimpleDataSource.isWrapperFor(Ljava/lang/Class;)Z: I3 Branch 4 IFNULL L504 - false
   */
  @Test
  public void test56()  throws Throwable  {
      FBSimpleDataSource fBSimpleDataSource0 = new FBSimpleDataSource();
      Class<FBSimpleDataSource> class0 = FBSimpleDataSource.class;
      FBSimpleDataSource fBSimpleDataSource1 = (FBSimpleDataSource)fBSimpleDataSource0.unwrap((Class<FBSimpleDataSource>) class0);
      assertNull(fBSimpleDataSource1.getRoleName());
  }
}
