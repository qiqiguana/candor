/*
 * This file was automatically generated by EvoSuite
 */

package org.firebirdsql.management;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.firebirdsql.gds.GDSException;
import org.firebirdsql.management.FBManager;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FBManagerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FBManager fBManager0 = new FBManager();
      boolean boolean0 = fBManager0.isForceCreate();
      assertEquals("Stopped", fBManager0.getState());
      assertEquals("localhost", fBManager0.getServer());
      assertEquals(false, boolean0);
      assertEquals(false, fBManager0.isDropOnStop());
      assertEquals(false, fBManager0.isCreateOnStart());
  }

  @Test
  public void test1()  throws Throwable  {
      FBManager fBManager0 = new FBManager();
      assertEquals("localhost", fBManager0.getServer());
      
      fBManager0.setServer("");
      assertEquals(false, fBManager0.isDropOnStop());
  }

  @Test
  public void test2()  throws Throwable  {
      FBManager fBManager0 = new FBManager((String) null);
      fBManager0.setUserName((String) null);
      assertEquals(false, fBManager0.isCreateOnStart());
      assertEquals(false, fBManager0.isForceCreate());
      assertEquals(false, fBManager0.isDropOnStop());
      assertEquals("Stopped", fBManager0.getState());
      assertEquals("localhost", fBManager0.getServer());
  }

  @Test
  public void test3()  throws Throwable  {
      FBManager fBManager0 = new FBManager("N");
      String string0 = fBManager0.getServer();
      assertEquals(false, fBManager0.isForceCreate());
      assertEquals(false, fBManager0.isDropOnStop());
      assertEquals(false, fBManager0.isCreateOnStart());
      assertEquals("localhost", string0);
      assertNotNull(string0);
      assertEquals("Stopped", fBManager0.getState());
  }

  @Test
  public void test4()  throws Throwable  {
      FBManager fBManager0 = new FBManager();
      fBManager0.setCreateOnStart(true);
      try {
        fBManager0.start();
        fail("Expecting exception: GDSException");
      } catch(GDSException e) {
        /*
         * Database name/path is required.
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      FBManager fBManager0 = new FBManager();
      assertEquals(false, fBManager0.isDropOnStop());
      
      fBManager0.setDropOnStop(true);
      try {
        fBManager0.stop();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      FBManager fBManager0 = new FBManager((String) null);
      try {
        fBManager0.stop();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      FBManager fBManager0 = new FBManager();
      try {
        fBManager0.isDatabaseExists("PURE_JAVA", "PURE_JAVA", "PURE_JAVA");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      FBManager fBManager0 = new FBManager((String) null);
      String string0 = fBManager0.getState();
      assertEquals("Stopped", string0);
      assertEquals(false, fBManager0.isDropOnStop());
      assertEquals(false, fBManager0.isCreateOnStart());
      assertNotNull(string0);
      assertEquals("localhost", fBManager0.getServer());
      assertEquals(false, fBManager0.isForceCreate());
  }

  @Test
  public void test9()  throws Throwable  {
      FBManager fBManager0 = new FBManager((String) null);
      String string0 = fBManager0.getName();
      assertEquals("Firebird Database manager", string0);
      assertEquals("Stopped", fBManager0.getState());
      assertEquals(false, fBManager0.isCreateOnStart());
      assertEquals(false, fBManager0.isDropOnStop());
      assertEquals(false, fBManager0.isForceCreate());
      assertEquals("localhost", fBManager0.getServer());
  }

  @Test
  public void test10()  throws Throwable  {
      FBManager fBManager0 = new FBManager();
      String string0 = fBManager0.getType();
      assertEquals(false, fBManager0.isCreateOnStart());
      assertEquals("localhost", fBManager0.getServer());
      assertNotNull(string0);
      assertEquals(false, fBManager0.isForceCreate());
      assertEquals("Stopped", fBManager0.getState());
      assertEquals(false, fBManager0.isDropOnStop());
  }

  @Test
  public void test11()  throws Throwable  {
      FBManager fBManager0 = new FBManager("N");
      fBManager0.setForceCreate(false);
      assertEquals(false, fBManager0.isForceCreate());
      assertEquals(false, fBManager0.isDropOnStop());
      assertEquals(false, fBManager0.isCreateOnStart());
      assertEquals("localhost", fBManager0.getServer());
      assertEquals("Stopped", fBManager0.getState());
  }

  @Test
  public void test12()  throws Throwable  {
      FBManager fBManager0 = new FBManager();
      fBManager0.setPort((-961));
      int int0 = fBManager0.getPort();
      assertEquals(-961, fBManager0.getPort());
      assertEquals((-961), int0);
  }

  @Test
  public void test13()  throws Throwable  {
      FBManager fBManager0 = new FBManager("N");
      fBManager0.setPassword("N");
      assertEquals("Stopped", fBManager0.getState());
      assertEquals(false, fBManager0.isDropOnStop());
      assertEquals(false, fBManager0.isForceCreate());
      assertEquals(false, fBManager0.isCreateOnStart());
      assertEquals("localhost", fBManager0.getServer());
  }

  @Test
  public void test14()  throws Throwable  {
      FBManager fBManager0 = new FBManager((String) null);
      fBManager0.setFileName("Firebird Database manager");
      assertEquals(false, fBManager0.isCreateOnStart());
      assertEquals(false, fBManager0.isDropOnStop());
      assertEquals(false, fBManager0.isForceCreate());
      assertEquals("localhost", fBManager0.getServer());
      assertEquals("Stopped", fBManager0.getState());
  }

  @Test
  public void test15()  throws Throwable  {
      FBManager fBManager0 = new FBManager((String) null);
      fBManager0.start();
      assertEquals("Started", fBManager0.getState());
  }

  @Test
  public void test16()  throws Throwable  {
      FBManager fBManager0 = new FBManager((String) null);
      int int0 = fBManager0.getPort();
      assertEquals(false, fBManager0.isCreateOnStart());
      assertEquals("Stopped", fBManager0.getState());
      assertEquals("localhost", fBManager0.getServer());
      assertEquals(false, fBManager0.isForceCreate());
      assertEquals(3050, int0);
      assertEquals(false, fBManager0.isDropOnStop());
  }

  @Test
  public void test17()  throws Throwable  {
      FBManager fBManager0 = new FBManager();
      fBManager0.setType("PURE_JAVA");
      assertEquals(false, fBManager0.isForceCreate());
      assertEquals("Stopped", fBManager0.getState());
      assertEquals("localhost", fBManager0.getServer());
      assertEquals(false, fBManager0.isDropOnStop());
      assertEquals(false, fBManager0.isCreateOnStart());
  }

  @Test
  public void test18()  throws Throwable  {
      FBManager fBManager0 = new FBManager((String) null);
      // Undeclared exception!
      try {
        fBManager0.setType("Stopped");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * Unrecognized type 'Stopped'
         */
      }
  }
}
