/*
 * This file was automatically generated by EvoSuite
 */

package org.firebirdsql.management;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.SQLException;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.management.FBBackupManager;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FBBackupManagerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FBBackupManager fBBackupManager0 = new FBBackupManager();
      fBBackupManager0.clearRestorePaths();
      assertNull(fBBackupManager0.getPassword());
  }

  @Test
  public void test1()  throws Throwable  {
      FBBackupManager fBBackupManager0 = new FBBackupManager((String) null);
      fBBackupManager0.setDatabase((String) null);
      // Undeclared exception!
      try {
        fBBackupManager0.addRestorePath((String) null, (-137));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * You cannot use setDatabase(String) and addRestorePath(String, int) methods simultaneously.
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      FBBackupManager fBBackupManager0 = new FBBackupManager("Cp865");
      fBBackupManager0.setRestoreReadOnly(true);
      // Undeclared exception!
      try {
        fBBackupManager0.restoreDatabase();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      FBBackupManager fBBackupManager0 = new FBBackupManager("Cp865");
      fBBackupManager0.setBackupPath("Cp865");
      // Undeclared exception!
      try {
        fBBackupManager0.restoreDatabase();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      FBBackupManager fBBackupManager0 = new FBBackupManager("jdbc:firebirdsql:native:");
      fBBackupManager0.clearBackupPaths();
      assertNull(fBBackupManager0.getDatabase());
  }

  @Test
  public void test5()  throws Throwable  {
      FBBackupManager fBBackupManager0 = new FBBackupManager("Cp865");
      fBBackupManager0.setRestoreReplace(true);
      // Undeclared exception!
      try {
        fBBackupManager0.restoreDatabase();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      FBBackupManager fBBackupManager0 = new FBBackupManager((GDSType) null);
      fBBackupManager0.setVerbose(true);
      // Undeclared exception!
      try {
        fBBackupManager0.backupDatabase();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      FBBackupManager fBBackupManager0 = new FBBackupManager((GDSType) null);
      // Undeclared exception!
      try {
        fBBackupManager0.backupDatabase();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      FBBackupManager fBBackupManager0 = new FBBackupManager();
      fBBackupManager0.addBackupPath("URt>~`C5]=-$", 335544365);
      fBBackupManager0.addBackupPath("URt>~`C5]=-$");
      // Undeclared exception!
      try {
        fBBackupManager0.backupMetadata();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      FBBackupManager fBBackupManager0 = new FBBackupManager();
      fBBackupManager0.setBackupPath((String) null);
      // Undeclared exception!
      try {
        fBBackupManager0.setBackupPath((String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * You cannot use setBackupPath(String) and addBackupPath(String, int) methods simultaneously.
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      FBBackupManager fBBackupManager0 = new FBBackupManager();
      fBBackupManager0.addBackupPath((String) null);
      fBBackupManager0.addBackupPath((String) null);
      try {
        fBBackupManager0.backupMetadata();
        fail("Expecting exception: FBSQLException");
      } catch(FBSQLException e) {
        /*
         * No size specified for a backup file null
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      FBBackupManager fBBackupManager0 = new FBBackupManager("Cp865");
      fBBackupManager0.setRestorePageBufferCount(0);
      // Undeclared exception!
      try {
        fBBackupManager0.restoreDatabase();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      FBBackupManager fBBackupManager0 = new FBBackupManager((String) null);
      // Undeclared exception!
      try {
        fBBackupManager0.setRestorePageBufferCount((-406));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Buffer count must be positive
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      FBBackupManager fBBackupManager0 = new FBBackupManager();
      fBBackupManager0.setRestorePageSize(1024);
      assertNull(fBBackupManager0.getPassword());
  }

  @Test
  public void test14()  throws Throwable  {
      FBBackupManager fBBackupManager0 = new FBBackupManager();
      // Undeclared exception!
      try {
        fBBackupManager0.setRestorePageSize(3050);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Page size must be one of 1024, 2048, 4096, 8192 or 16384
         */
      }
  }

  @Test
  public void test15()  throws Throwable  {
      FBBackupManager fBBackupManager0 = new FBBackupManager();
      fBBackupManager0.setRestorePageSize(2048);
      assertEquals(3050, fBBackupManager0.getPort());
  }

  @Test
  public void test16()  throws Throwable  {
      FBBackupManager fBBackupManager0 = new FBBackupManager();
      fBBackupManager0.setRestorePageSize(8192);
      // Undeclared exception!
      try {
        fBBackupManager0.restoreDatabase();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test17()  throws Throwable  {
      FBBackupManager fBBackupManager0 = new FBBackupManager();
      fBBackupManager0.setRestorePageSize(16384);
      assertEquals("service_mgr", fBBackupManager0.getServiceName());
  }

  @Test
  public void test18()  throws Throwable  {
      FBBackupManager fBBackupManager0 = new FBBackupManager();
      fBBackupManager0.addRestorePath("W6pBz%:_i2$;]", (-28));
      fBBackupManager0.addRestorePath("W6pBz%:_i2$;]", (-1));
      // Undeclared exception!
      try {
        fBBackupManager0.restoreDatabase((-28));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test19()  throws Throwable  {
      FBBackupManager fBBackupManager0 = new FBBackupManager();
      fBBackupManager0.addRestorePath("W6pBz%:_i2$;]", (-1));
      fBBackupManager0.addRestorePath("W6pBz%:_i2$;]", (-1));
      // Undeclared exception!
      try {
        fBBackupManager0.restoreDatabase((-28));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test20()  throws Throwable  {
      FBBackupManager fBBackupManager0 = new FBBackupManager();
      fBBackupManager0.setVerbose(true);
      // Undeclared exception!
      try {
        fBBackupManager0.restoreDatabase((-28));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
