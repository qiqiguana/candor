/*
 * This file was automatically generated by EvoSuite
 */

package org.firebirdsql.jca;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.DataOutputStream;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.Writer;
import java.util.LinkedHashSet;
import java.util.Set;
import javax.resource.ResourceException;
import javax.resource.spi.ConnectionManager;
import javax.resource.spi.ConnectionRequestInfo;
import javax.resource.spi.ManagedConnection;
import javax.security.auth.Subject;
import javax.transaction.xa.XAException;
import javax.transaction.xa.Xid;
import org.firebirdsql.gds.DatabaseParameterBuffer;
import org.firebirdsql.gds.GDSException;
import org.firebirdsql.gds.TransactionParameterBuffer;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBLocalTransaction;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jca.FBManagedConnectionFactory;
import org.firebirdsql.jca.FBStandAloneConnectionManager;
import org.firebirdsql.jca.FBXAException;
import org.firebirdsql.jdbc.FBDataSource;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FBManagedConnectionFactoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      int int0 = fBManagedConnectionFactory0.getBlobBufferSize();
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      PrintWriter printWriter0 = fBManagedConnectionFactory0.getLogWriter();
      assertNull(printWriter0);
  }

  @Test
  public void test2()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      assertNotNull(fBManagedConnectionFactory0);
      
      FBLocalTransaction.FBLocalXid fBLocalTransaction_FBLocalXid0 = new FBLocalTransaction.FBLocalXid();
      try {
        fBManagedConnectionFactory0.notifyRollback((FBManagedConnection) null, (Xid) fBLocalTransaction_FBLocalXid0);
        fail("Expecting exception: FBXAException");
      } catch(FBXAException e) {
        /*
         * Connection string missing, error code: HY000
         * Reason: Connection string missing
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) pipedOutputStream0);
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter((OutputStream) dataOutputStream0);
      PrintWriter printWriter0 = new PrintWriter((Writer) outputStreamWriter0);
      fBManagedConnectionFactory0.setLogWriter(printWriter0);
      assertNull(fBManagedConnectionFactory0.getUserName());
  }

  @Test
  public void test4()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      assertNotNull(fBManagedConnectionFactory0);
      
      fBManagedConnectionFactory0.setSoTimeout(0);
      assertEquals(0, fBManagedConnectionFactory0.getSoTimeout());
  }

  @Test
  public void test5()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      assertNotNull(fBManagedConnectionFactory0);
      
      fBManagedConnectionFactory0.setUseStreamBlobs(false);
      assertEquals(false, fBManagedConnectionFactory0.isUseStreamBlobs());
  }

  @Test
  public void test6()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      // Undeclared exception!
      try {
        fBManagedConnectionFactory0.setDefaultIsolation("@h");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Invalid isolation name.
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      int int0 = fBManagedConnectionFactory0.getSoTimeout();
      assertEquals(0, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      String string0 = fBManagedConnectionFactory0.getCharSet();
      assertNull(string0);
  }

  @Test
  public void test9()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      fBManagedConnectionFactory0.setNonStandardProperty("H#;=oSz+uF", "H#;=oSz+uF");
      assertNull(fBManagedConnectionFactory0.getSqlDialect());
  }

  @Test
  public void test10()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      assertNotNull(fBManagedConnectionFactory0);
      
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo((DatabaseParameterBuffer) null);
      // Undeclared exception!
      try {
        fBManagedConnectionFactory0.createManagedConnection((Subject) null, (ConnectionRequestInfo) fBConnectionRequestInfo0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      String string0 = fBManagedConnectionFactory0.getRoleName();
      assertNull(string0);
  }

  @Test
  public void test12()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      fBManagedConnectionFactory0.setTpbMapping("IkeH");
      assertEquals("IkeH", fBManagedConnectionFactory0.getTpbMapping());
  }

  @Test
  public void test13()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      String string0 = fBManagedConnectionFactory0.getPassword();
      assertNull(string0);
  }

  @Test
  public void test14()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      fBManagedConnectionFactory0.setCharSet("");
      assertEquals("PURE_JAVA", fBManagedConnectionFactory0.getType());
  }

  @Test
  public void test15()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      assertNotNull(fBManagedConnectionFactory0);
      
      FBLocalTransaction.FBLocalXid fBLocalTransaction_FBLocalXid0 = new FBLocalTransaction.FBLocalXid();
      // Undeclared exception!
      try {
        fBManagedConnectionFactory0.notifyStart((FBManagedConnection) null, (Xid) fBLocalTransaction_FBLocalXid0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      boolean boolean0 = fBManagedConnectionFactory0.isUseStreamBlobs();
      assertEquals(false, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      boolean boolean0 = fBManagedConnectionFactory0.isDefaultResultSetHoldable();
      assertEquals(false, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      boolean boolean0 = fBManagedConnectionFactory0.isTimestampUsesLocalTimezone();
      assertEquals(false, boolean0);
  }

  @Test
  public void test19()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      assertNotNull(fBManagedConnectionFactory0);
      
      FBLocalTransaction.FBLocalXid fBLocalTransaction_FBLocalXid0 = new FBLocalTransaction.FBLocalXid();
      fBManagedConnectionFactory0.recover((FBManagedConnection) null, (Xid) fBLocalTransaction_FBLocalXid0);
      assertEquals("Xid[836014874]", fBLocalTransaction_FBLocalXid0.toString());
  }

  @Test
  public void test20()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      String string0 = fBManagedConnectionFactory0.getUseTranslation();
      assertNull(string0);
  }

  @Test
  public void test21()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      String string0 = fBManagedConnectionFactory0.getUserName();
      assertNull(string0);
  }

  @Test
  public void test22()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      assertNotNull(fBManagedConnectionFactory0);
      
      fBManagedConnectionFactory0.setDefaultResultSetHoldable(false);
      assertEquals(false, fBManagedConnectionFactory0.isDefaultResultSetHoldable());
  }

  @Test
  public void test23()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      fBManagedConnectionFactory0.setRoleName("");
      assertNull(fBManagedConnectionFactory0.getPassword());
  }

  @Test
  public void test24()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      assertNotNull(fBManagedConnectionFactory0);
      
      fBManagedConnectionFactory0.setBuffersNumber(0);
      assertEquals(0, fBManagedConnectionFactory0.getBuffersNumber());
  }

  @Test
  public void test25()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      assertNotNull(fBManagedConnectionFactory0);
      
      fBManagedConnectionFactory0.setBlobBufferSize(0);
      assertEquals(0, fBManagedConnectionFactory0.getBlobBufferLength());
      assertEquals(0, fBManagedConnectionFactory0.getBlobBufferSize());
  }

  @Test
  public void test26()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      fBManagedConnectionFactory0.setTransactionParameters((-340), (TransactionParameterBuffer) null);
      assertEquals(false, fBManagedConnectionFactory0.isDefaultResultSetHoldable());
  }

  @Test
  public void test27()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      assertNotNull(fBManagedConnectionFactory0);
      
      fBManagedConnectionFactory0.setTimestampUsesLocalTimezone(false);
      assertEquals(false, fBManagedConnectionFactory0.isTimestampUsesLocalTimezone());
  }

  @Test
  public void test28()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      fBManagedConnectionFactory0.setSqlDialect("x");
      assertEquals(false, fBManagedConnectionFactory0.isUseStreamBlobs());
  }

  @Test
  public void test29()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      int int0 = fBManagedConnectionFactory0.getSocketBufferSize();
      assertEquals(0, int0);
  }

  @Test
  public void test30()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      fBManagedConnectionFactory0.setPassword((String) null);
      assertNull(fBManagedConnectionFactory0.getCharSet());
  }

  @Test
  public void test31()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      String string0 = fBManagedConnectionFactory0.getDefaultIsolation();
      assertEquals("TRANSACTION_READ_COMMITTED", string0);
  }

  @Test
  public void test32()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      assertNotNull(fBManagedConnectionFactory0);
      
      fBManagedConnectionFactory0.setSocketBufferSize((-1));
      assertEquals(-1, fBManagedConnectionFactory0.getSocketBufferSize());
  }

  @Test
  public void test33()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      assertNotNull(fBManagedConnectionFactory0);
      
      fBManagedConnectionFactory0.setUseStandardUdf(true);
      assertEquals(true, fBManagedConnectionFactory0.isUseStandardUdf());
  }

  @Test
  public void test34()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      String string0 = fBManagedConnectionFactory0.getNonStandardProperty("H#;=oSz+uF");
      assertNull(string0);
  }

  @Test
  public void test35()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      assertNotNull(fBManagedConnectionFactory0);
      
      FBLocalTransaction.FBLocalXid fBLocalTransaction_FBLocalXid0 = new FBLocalTransaction.FBLocalXid();
      fBManagedConnectionFactory0.notifyEnd((FBManagedConnection) null, (Xid) fBLocalTransaction_FBLocalXid0);
      assertEquals("Xid[704516541]", fBLocalTransaction_FBLocalXid0.toString());
  }

  @Test
  public void test36()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      assertNotNull(fBManagedConnectionFactory0);
      
      fBManagedConnectionFactory0.setDefaultTransactionIsolation(9);
      assertEquals(9, fBManagedConnectionFactory0.getDefaultTransactionIsolation());
  }

  @Test
  public void test37()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      FBStandAloneConnectionManager fBStandAloneConnectionManager0 = new FBStandAloneConnectionManager();
      fBManagedConnectionFactory0.setDefaultConnectionManager((ConnectionManager) fBStandAloneConnectionManager0);
      assertNull(fBManagedConnectionFactory0.getRoleName());
  }

  @Test
  public void test38()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      FBDataSource fBDataSource0 = (FBDataSource)fBManagedConnectionFactory0.createConnectionFactory();
      FBStandAloneConnectionManager fBStandAloneConnectionManager0 = new FBStandAloneConnectionManager();
      FBDataSource fBDataSource1 = (FBDataSource)fBManagedConnectionFactory0.createConnectionFactory((ConnectionManager) fBStandAloneConnectionManager0);
      assertFalse(fBDataSource1.equals(fBDataSource0));
  }

  @Test
  public void test39()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      assertNotNull(fBManagedConnectionFactory0);
      
      FBLocalTransaction.FBLocalXid fBLocalTransaction_FBLocalXid0 = new FBLocalTransaction.FBLocalXid();
      fBManagedConnectionFactory0.forget((FBManagedConnection) null, (Xid) fBLocalTransaction_FBLocalXid0);
      assertEquals("Xid[600713095]", fBLocalTransaction_FBLocalXid0.toString());
  }

  @Test
  public void test40()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      fBManagedConnectionFactory0.setDatabase((String) null);
      assertNull(fBManagedConnectionFactory0.getDatabase());
  }

  @Test
  public void test41()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      fBManagedConnectionFactory0.setUserName("");
      assertNull(fBManagedConnectionFactory0.getTpbMapping());
  }

  @Test
  public void test42()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      fBManagedConnectionFactory0.setNonStandardProperty("");
      assertNull(fBManagedConnectionFactory0.getCharSet());
  }

  @Test
  public void test43()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      TransactionParameterBuffer transactionParameterBuffer0 = fBManagedConnectionFactory0.getTransactionParameters((-1));
      assertNull(transactionParameterBuffer0);
  }

  @Test
  public void test44()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      int int0 = fBManagedConnectionFactory0.getBuffersNumber();
      assertEquals(0, int0);
  }

  @Test
  public void test45()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      fBManagedConnectionFactory0.setEncoding("");
      assertEquals(0, fBManagedConnectionFactory0.getSocketBufferSize());
  }

  @Test
  public void test46()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      FBStandAloneConnectionManager fBStandAloneConnectionManager0 = new FBStandAloneConnectionManager();
      FBDataSource fBDataSource0 = (FBDataSource)fBManagedConnectionFactory0.createConnectionFactory((ConnectionManager) fBStandAloneConnectionManager0);
      assertEquals(0, fBDataSource0.getLoginTimeout());
  }

  @Test
  public void test47()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      fBManagedConnectionFactory0.setUseTranslation((String) null);
      assertEquals(false, fBManagedConnectionFactory0.isDefaultResultSetHoldable());
  }

  @Test
  public void test48()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      GDSType gDSType0 = fBManagedConnectionFactory0.getGDSType();
      FBManagedConnectionFactory fBManagedConnectionFactory1 = new FBManagedConnectionFactory(gDSType0);
      assertEquals(0, fBManagedConnectionFactory1.getBuffersNumber());
  }

  @Test
  public void test49()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      String string0 = fBManagedConnectionFactory0.getEncoding();
      assertNull(string0);
  }

  @Test
  public void test50()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      String string0 = fBManagedConnectionFactory0.getTpbMapping();
      assertNull(string0);
  }

  @Test
  public void test51()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      boolean boolean0 = fBManagedConnectionFactory0.isUseStandardUdf();
      assertEquals(false, boolean0);
  }

  @Test
  public void test52()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      String string0 = fBManagedConnectionFactory0.getSqlDialect();
      assertNull(string0);
  }

  @Test
  public void test53()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      fBManagedConnectionFactory0.getGDSType();
      // Undeclared exception!
      try {
        fBManagedConnectionFactory0.setType((String) null);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Cannot change GDS type at runtime.
         */
      }
  }

  @Test
  public void test54()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      assertNotNull(fBManagedConnectionFactory0);
      
      GDSType gDSType0 = fBManagedConnectionFactory0.getGDSType();
      assertNotNull(gDSType0);
      
      int int0 = fBManagedConnectionFactory0.hashCode();
      assertEquals((-1060402459), int0);
      
      FBManagedConnectionFactory fBManagedConnectionFactory1 = fBManagedConnectionFactory0.canonicalize();
      assertNotNull(fBManagedConnectionFactory1);
      assertNotSame(fBManagedConnectionFactory0, fBManagedConnectionFactory1);
  }

  @Test
  public void test55()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      assertNotNull(fBManagedConnectionFactory0);
      
      boolean boolean0 = fBManagedConnectionFactory0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test56()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      linkedHashSet0.add((Object) fBManagedConnectionFactory0);
      FBConnectionRequestInfo fBConnectionRequestInfo0 = fBManagedConnectionFactory0.getDefaultConnectionRequestInfo();
      ManagedConnection managedConnection0 = fBManagedConnectionFactory0.matchManagedConnections((Set) linkedHashSet0, (Subject) null, (ConnectionRequestInfo) fBConnectionRequestInfo0);
      assertNull(managedConnection0);
  }

  @Test
  public void test57()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      assertNotNull(fBManagedConnectionFactory0);
      
      FBLocalTransaction.FBLocalXid fBLocalTransaction_FBLocalXid0 = new FBLocalTransaction.FBLocalXid();
      try {
        fBManagedConnectionFactory0.notifyPrepare((FBManagedConnection) null, (Xid) fBLocalTransaction_FBLocalXid0);
        fail("Expecting exception: FBXAException");
      } catch(FBXAException e) {
        /*
         * Commit called with unknown transaction
         */
      }
  }

  @Test
  public void test58()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      assertNotNull(fBManagedConnectionFactory0);
      
      FBLocalTransaction.FBLocalXid fBLocalTransaction_FBLocalXid0 = new FBLocalTransaction.FBLocalXid();
      try {
        fBManagedConnectionFactory0.notifyCommit((FBManagedConnection) null, (Xid) fBLocalTransaction_FBLocalXid0, false);
        fail("Expecting exception: FBXAException");
      } catch(FBXAException e) {
        /*
         * Connection string missing, error code: HY000
         * Reason: Connection string missing
         */
      }
  }

  @Test
  public void test59()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      // Undeclared exception!
      try {
        fBManagedConnectionFactory0.newConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
