/*
 * This file was automatically generated by EvoSuite
 */

package org.firebirdsql.jca;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.firebirdsql.gds.TransactionParameterBuffer;
import org.firebirdsql.gds.impl.wire.TransactionParameterBufferImpl;
import org.firebirdsql.jca.FBTpb;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FBTpbEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = new TransactionParameterBufferImpl();
      FBTpb fBTpb0 = new FBTpb((TransactionParameterBuffer) transactionParameterBufferImpl0);
      fBTpb0.setTransactionParameterBuffer((TransactionParameterBuffer) transactionParameterBufferImpl0);
      assertEquals(false, fBTpb0.isReadOnly());
  }

  @Test
  public void test1()  throws Throwable  {
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl0 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      FBTpb fBTpb0 = new FBTpb((TransactionParameterBuffer) transactionParameterBufferImpl0);
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl1 = (org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl)fBTpb0.getTransactionParameterBuffer();
      assertSame(transactionParameterBufferImpl0, transactionParameterBufferImpl1);
  }

  @Test
  public void test2()  throws Throwable  {
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl0 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      FBTpb fBTpb0 = new FBTpb((TransactionParameterBuffer) transactionParameterBufferImpl0);
      int int0 = fBTpb0.hashCode();
      assertEquals(1, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = new TransactionParameterBufferImpl();
      FBTpb fBTpb0 = new FBTpb((TransactionParameterBuffer) transactionParameterBufferImpl0);
      boolean boolean0 = fBTpb0.isReadOnly();
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl0 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      FBTpb fBTpb0 = new FBTpb((TransactionParameterBuffer) transactionParameterBufferImpl0);
      boolean boolean0 = fBTpb0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl0 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      FBTpb fBTpb0 = new FBTpb((TransactionParameterBuffer) transactionParameterBufferImpl0);
      FBTpb fBTpb1 = new FBTpb((TransactionParameterBuffer) transactionParameterBufferImpl0);
      boolean boolean0 = fBTpb0.equals((Object) fBTpb1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl0 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      FBTpb fBTpb0 = new FBTpb((TransactionParameterBuffer) transactionParameterBufferImpl0);
      fBTpb0.setReadOnly(false);
      assertEquals(false, fBTpb0.isReadOnly());
  }

  @Test
  public void test7()  throws Throwable  {
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl0 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      FBTpb fBTpb0 = new FBTpb((TransactionParameterBuffer) transactionParameterBufferImpl0);
      fBTpb0.setReadOnly(true);
      assertEquals(true, fBTpb0.isReadOnly());
  }
}
