/*
 * This file was automatically generated by EvoSuite
 */

package org.firebirdsql.jdbc.field;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.BufferedInputStream;
import java.io.CharArrayReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.math.BigDecimal;
import java.sql.DataTruncation;
import java.sql.Date;
import java.sql.SQLException;
import java.sql.Time;
import java.sql.Timestamp;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.TimeZone;
import org.firebirdsql.gds.DatabaseParameterBuffer;
import org.firebirdsql.gds.GDS;
import org.firebirdsql.gds.IscDbHandle;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.jca.FBManagedConnectionFactory;
import org.firebirdsql.jdbc.field.FBStringField;
import org.firebirdsql.jdbc.field.FieldDataProvider;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FBStringFieldEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FBStringField fBStringField0 = new FBStringField(xSQLVAR0, (FieldDataProvider) null, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      // Undeclared exception!
      try {
        fBStringField0.setAsciiStream((InputStream) pipedInputStream0, (-1040));
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FBStringField fBStringField0 = new FBStringField(xSQLVAR0, (FieldDataProvider) null, 619);
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      JavaGDSImpl javaGDSImpl0 = (JavaGDSImpl)fBManagedConnectionFactory0.getGDS();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      GDSHelper gDSHelper0 = new GDSHelper((GDS) javaGDSImpl0, (DatabaseParameterBuffer) databaseParameterBufferImp0, (IscDbHandle) null, (GDSHelper.GDSHelperErrorListener) null);
      fBStringField0.setConnection(gDSHelper0);
      assertEquals(false, gDSHelper0.inTransaction());
  }

  @Test
  public void test2()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FBStringField fBStringField0 = new FBStringField(xSQLVAR0, (FieldDataProvider) null, 619);
      // Undeclared exception!
      try {
        fBStringField0.setShort((short)344);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FBStringField fBStringField0 = new FBStringField(xSQLVAR0, (FieldDataProvider) null, 281);
      // Undeclared exception!
      try {
        fBStringField0.setUnicodeStream((InputStream) null, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FBStringField fBStringField0 = new FBStringField(xSQLVAR0, (FieldDataProvider) null, 0);
      // Undeclared exception!
      try {
        fBStringField0.setDouble((double) 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FBStringField fBStringField0 = new FBStringField(xSQLVAR0, (FieldDataProvider) null, 0);
      // Undeclared exception!
      try {
        fBStringField0.setFloat(283.16455F);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FBStringField fBStringField0 = new FBStringField(xSQLVAR0, (FieldDataProvider) null, 0);
      // Undeclared exception!
      try {
        fBStringField0.setInteger(0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FBStringField fBStringField0 = new FBStringField(xSQLVAR0, (FieldDataProvider) null, (-1531));
      // Undeclared exception!
      try {
        fBStringField0.setLong(0L);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FBStringField fBStringField0 = new FBStringField(xSQLVAR0, (FieldDataProvider) null, 0);
      // Undeclared exception!
      try {
        fBStringField0.setByte((byte) (-108));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FBStringField fBStringField0 = new FBStringField(xSQLVAR0, (FieldDataProvider) null, 0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      // Undeclared exception!
      try {
        fBStringField0.setBigDecimal(bigDecimal0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FBStringField fBStringField0 = new FBStringField(xSQLVAR0, (FieldDataProvider) null, 0);
      // Undeclared exception!
      try {
        fBStringField0.setBigDecimal((BigDecimal) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FBStringField fBStringField0 = new FBStringField(xSQLVAR0, (FieldDataProvider) null, 0);
      fBStringField0.setBoolean(false);
      assertNull(fBStringField0.getAlias());
  }

  @Test
  public void test12()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FBStringField fBStringField0 = new FBStringField(xSQLVAR0, (FieldDataProvider) null, 0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) pushbackInputStream0, 270);
      try {
        fBStringField0.setBinaryStream((InputStream) bufferedInputStream0, 1466);
        fail("Expecting exception: DataTruncation");
      } catch(DataTruncation e) {
        /*
         * Data truncation
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FBStringField fBStringField0 = new FBStringField(xSQLVAR0, (FieldDataProvider) null, 0);
      assertNotNull(fBStringField0);
      
      char[] charArray0 = new char[6];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      // Undeclared exception!
      try {
        fBStringField0.setCharacterStream((Reader) charArrayReader0, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FBStringField fBStringField0 = new FBStringField(xSQLVAR0, (FieldDataProvider) null, 0);
      // Undeclared exception!
      try {
        fBStringField0.setCharacterStream((Reader) null, 1921);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FBStringField fBStringField0 = new FBStringField(xSQLVAR0, (FieldDataProvider) null, 0);
      // Undeclared exception!
      try {
        fBStringField0.setBytes((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FBStringField fBStringField0 = new FBStringField(xSQLVAR0, (FieldDataProvider) null, 0);
      Date date0 = xSQLVAR0.decodeDate(xSQLVAR0.sqldata);
      // Undeclared exception!
      try {
        fBStringField0.setDate(date0, (Calendar) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test17()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FBStringField fBStringField0 = new FBStringField(xSQLVAR0, (FieldDataProvider) null, 0);
      assertNotNull(fBStringField0);
      
      TimeZone timeZone0 = TimeZone.getDefault();
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar(timeZone0);
      Time time0 = xSQLVAR0.decodeTimeCalendar((byte[]) null, (Calendar) gregorianCalendar0);
      // Undeclared exception!
      try {
        fBStringField0.setTime(time0, (Calendar) gregorianCalendar0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test18()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FBStringField fBStringField0 = new FBStringField(xSQLVAR0, (FieldDataProvider) null, 335544328);
      assertNotNull(fBStringField0);
      
      GregorianCalendar gregorianCalendar0 = (GregorianCalendar)Calendar.getInstance();
      // Undeclared exception!
      try {
        fBStringField0.setTime((Time) null, (Calendar) gregorianCalendar0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test19()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FBStringField fBStringField0 = new FBStringField(xSQLVAR0, (FieldDataProvider) null, 0);
      Timestamp timestamp0 = new Timestamp((long) 0);
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar((-417), 872, 0, 0, 872, 853);
      // Undeclared exception!
      try {
        fBStringField0.setTimestamp(timestamp0, (Calendar) gregorianCalendar0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test20()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FBStringField fBStringField0 = new FBStringField(xSQLVAR0, (FieldDataProvider) null, 0);
      // Undeclared exception!
      try {
        fBStringField0.setTimestamp((Timestamp) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
