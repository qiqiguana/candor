/*
 * This file was automatically generated by EvoSuite
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.SQLException;
import java.util.LinkedList;
import java.util.List;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBObjectListener;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FBCachedFetcherEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
      assertEquals(true, fBCachedFetcher0.isLast());
  }

  @Test
  public void test1()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.afterLast();
      assertEquals(false, fBCachedFetcher0.first());
      assertEquals(false, fBCachedFetcher0.isBeforeFirst());
      assertEquals(true, fBCachedFetcher0.isLast());
      assertEquals(false, fBCachedFetcher0.next());
      assertEquals(true, fBCachedFetcher0.isEmpty());
  }

  @Test
  public void test2()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.setFetchSize((int) (byte)1);
      assertEquals(1, fBCachedFetcher0.getFetchSize());
  }

  @Test
  public void test3()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(0, int0);
      assertEquals(true, fBCachedFetcher0.isLast());
  }

  @Test
  public void test4()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.close();
      assertEquals(true, fBCachedFetcher0.isEmpty());
      assertEquals(true, fBCachedFetcher0.isLast());
      assertEquals(false, fBCachedFetcher0.isFirst());
  }

  @Test
  public void test5()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.beforeFirst();
      assertEquals(false, fBCachedFetcher0.previous());
      assertEquals(false, fBCachedFetcher0.last());
      assertEquals(true, fBCachedFetcher0.isLast());
      assertEquals(false, fBCachedFetcher0.isFirst());
  }

  @Test
  public void test6()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[4][3];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try {
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[8][3];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) linkedList0, (FBObjectListener.FetcherListener) null);
      assertEquals(false, fBCachedFetcher0.isFirst());
      
      // Undeclared exception!
      try {
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.absolute((int) (byte)55);
      assertEquals(false, fBCachedFetcher0.isBeforeFirst());
      assertEquals(true, fBCachedFetcher0.isLast());
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][9];
      linkedList0.offerFirst(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try {
        fBCachedFetcher0.relative(12);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[8][3];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) linkedList0, (FBObjectListener.FetcherListener) null);
      assertEquals(false, fBCachedFetcher0.isFirst());
      
      // Undeclared exception!
      try {
        fBCachedFetcher0.beforeFirst();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isFirst();
      assertEquals(true, fBCachedFetcher0.isLast());
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertEquals(true, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[8][3];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) linkedList0, (FBObjectListener.FetcherListener) null);
      assertEquals(false, fBCachedFetcher0.isFirst());
      
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertEquals(true, fBCachedFetcher0.isFirst());
      assertEquals(true, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[9][6];
      // Undeclared exception!
      try {
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[8][3];
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try {
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -1
         */
      }
  }

  @Test
  public void test16()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[8][3];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) linkedList0, (FBObjectListener.FetcherListener) null);
      assertEquals(false, fBCachedFetcher0.isFirst());
      
      fBCachedFetcher0.updateRow(byteArray0);
  }
}
