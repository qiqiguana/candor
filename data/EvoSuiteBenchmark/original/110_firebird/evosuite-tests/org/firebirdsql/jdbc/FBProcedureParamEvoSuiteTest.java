/*
 * This file was automatically generated by EvoSuite
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.SQLException;
import org.firebirdsql.jdbc.FBProcedureParam;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FBProcedureParamEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(1008, "]sKi?\"pn6");
      int int0 = fBProcedureParam0.getType();
      assertEquals(true, fBProcedureParam0.isParam());
      assertEquals(1008, fBProcedureParam0.getPosition());
      assertEquals(0, int0);
      assertEquals(-1, fBProcedureParam0.getIndex());
  }

  @Test
  public void test1()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(857, "'");
      assertNotNull(fBProcedureParam0);
      
      boolean boolean0 = fBProcedureParam0.isParam();
      assertEquals(857, fBProcedureParam0.getPosition());
      assertEquals(false, boolean0);
      assertEquals(-1, fBProcedureParam0.getIndex());
  }

  @Test
  public void test2()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      int int0 = fBProcedureParam0.getIndex();
      assertEquals((-1), int0);
  }

  @Test
  public void test3()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.isValueSet();
      assertEquals(-1, fBProcedureParam0.getIndex());
  }

  @Test
  public void test4()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(1008, "]sKi?\"pn6");
      String string0 = fBProcedureParam0.getParamValue();
      assertNotNull(string0);
      assertEquals(true, fBProcedureParam0.isParam());
      assertEquals(1008, fBProcedureParam0.getPosition());
      assertEquals(-1, fBProcedureParam0.getIndex());
  }

  @Test
  public void test5()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setIndex(852407);
      assertEquals(852407, fBProcedureParam0.getIndex());
  }

  @Test
  public void test6()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(1008, "]sKi?\"pn6");
      int int0 = fBProcedureParam0.getPosition();
      assertEquals(true, fBProcedureParam0.isParam());
      assertEquals(-1, fBProcedureParam0.getIndex());
      assertEquals(1008, int0);
  }

  @Test
  public void test7()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setType((-510));
      assertEquals(-510, fBProcedureParam0.getType());
  }

  @Test
  public void test8()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(857, "'");
      assertNotNull(fBProcedureParam0);
      
      fBProcedureParam0.getValue();
      assertEquals(857, fBProcedureParam0.getPosition());
      assertEquals(-1, fBProcedureParam0.getIndex());
      assertEquals(false, fBProcedureParam0.isParam());
  }

  @Test
  public void test9()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(1008, "]sKi?\"pn6");
      fBProcedureParam0.setValue((Object) "]sKi?\"pn6");
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam(1008, "]sKi?\"pn6");
      boolean boolean0 = fBProcedureParam0.equals((Object) fBProcedureParam1);
      assertEquals(true, fBProcedureParam0.isValueSet());
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(857, "'");
      assertNotNull(fBProcedureParam0);
      
      try {
        fBProcedureParam0.setValue((Object) "'");
        fail("Expecting exception: FBSQLException");
      } catch(FBSQLException e) {
        /*
         * Cannot set parameter, since it is constant.
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      boolean boolean0 = fBProcedureParam0.equals((Object) (-510));
      assertEquals(-1, fBProcedureParam0.getIndex());
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam((-510), "'>;hZqwZ}-Z\"4tc");
      boolean boolean0 = fBProcedureParam0.equals((Object) fBProcedureParam1);
      assertEquals(-510, fBProcedureParam1.getPosition());
      assertEquals(true, boolean0);
      assertEquals(false, fBProcedureParam1.isParam());
      assertEquals(-1, fBProcedureParam1.getIndex());
      assertEquals(-1, fBProcedureParam0.getIndex());
  }

  @Test
  public void test13()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(1008, "]sKi?\"pn6");
      fBProcedureParam0.setValue((Object) "]sKi?\"pn6");
      FBProcedureParam fBProcedureParam1 = (FBProcedureParam)fBProcedureParam0.clone();
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam(1008, "]sKi?\"pn6");
      boolean boolean0 = fBProcedureParam2.equals((Object) fBProcedureParam1);
      assertEquals(true, fBProcedureParam0.isValueSet());
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      int int0 = fBProcedureParam0.hashCode();
      assertEquals(-1, fBProcedureParam0.getIndex());
      assertEquals(852407, int0);
  }

  @Test
  public void test15()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(1008, "]sKi?\"pn6");
      fBProcedureParam0.setValue((Object) "]sKi?\"pn6");
      int int0 = fBProcedureParam0.hashCode();
      assertEquals(true, fBProcedureParam0.isValueSet());
      assertEquals((-1120265240), int0);
  }
}
