/*
 * This file was automatically generated by EvoSuite
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.firebirdsql.jdbc.FBEscapedCallParser;
import org.firebirdsql.jdbc.FBProcedureCall;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.FBSQLParseException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FBEscapedCallParserEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FBEscapedCallParser fBEscapedCallParser0 = new FBEscapedCallParser((-1053));
      FBProcedureCall fBProcedureCall0 = fBEscapedCallParser0.parseCall("U[&,+=f{_>c");
      assertEquals("+=f{_>c", fBProcedureCall0.getName());
      assertNotNull(fBProcedureCall0);
      assertEquals(1, fBEscapedCallParser0.getState());
  }

  @Test
  public void test1()  throws Throwable  {
      FBEscapedCallParser fBEscapedCallParser0 = new FBEscapedCallParser(1296);
      int int0 = fBEscapedCallParser0.getState();
      assertEquals(1, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      FBEscapedCallParser fBEscapedCallParser0 = new FBEscapedCallParser(17);
      FBProcedureCall fBProcedureCall0 = fBEscapedCallParser0.parseCall("\n");
      assertNotNull(fBProcedureCall0);
      
      boolean boolean0 = fBEscapedCallParser0.processToken("call");
      boolean boolean1 = fBEscapedCallParser0.processToken("y<?:JHYgXCN\")");
      assertEquals(true, boolean1);
      
      boolean boolean2 = fBEscapedCallParser0.processToken("call");
      assertFalse(boolean2 == boolean0);
      assertEquals(1, fBEscapedCallParser0.getState());
  }

  @Test
  public void test3()  throws Throwable  {
      FBEscapedCallParser fBEscapedCallParser0 = new FBEscapedCallParser((-8));
      FBProcedureCall fBProcedureCall0 = fBEscapedCallParser0.parseCall("1H'eIT1@ u3'W[~");
      assertEquals(1, fBEscapedCallParser0.getState());
      assertEquals("1H'eIT1@ u3'W[~", fBProcedureCall0.getName());
      assertNotNull(fBProcedureCall0);
  }

  @Test
  public void test4()  throws Throwable  {
      FBEscapedCallParser fBEscapedCallParser0 = new FBEscapedCallParser((-1091));
      FBProcedureCall fBProcedureCall0 = fBEscapedCallParser0.parseCall("oFe,%-NR;^(T]");
      assertNotNull(fBProcedureCall0);
      assertEquals("%-NR;^(T]", fBProcedureCall0.getName());
      
      FBProcedureCall fBProcedureCall1 = fBEscapedCallParser0.parseCall("UvU,+=f}k{l>8");
      assertEquals("UvU,+=f}k{l>8", fBProcedureCall1.getName());
      assertEquals(1, fBEscapedCallParser0.getState());
      assertFalse(fBProcedureCall1.equals(fBProcedureCall0));
  }

  @Test
  public void test5()  throws Throwable  {
      FBEscapedCallParser fBEscapedCallParser0 = new FBEscapedCallParser((-1));
      FBProcedureCall fBProcedureCall0 = fBEscapedCallParser0.parseCall(" YYIsUeoj})*zZ[Y1d");
      assertEquals("YYIsUeoj})*zZ[Y1d", fBProcedureCall0.getName());
      assertEquals(1, fBEscapedCallParser0.getState());
      assertNotNull(fBProcedureCall0);
  }

  @Test
  public void test6()  throws Throwable  {
      FBEscapedCallParser fBEscapedCallParser0 = new FBEscapedCallParser(0);
      assertEquals(1, fBEscapedCallParser0.getState());
      
      fBEscapedCallParser0.setState(0);
      fBEscapedCallParser0.switchState('\'');
      assertEquals(0, fBEscapedCallParser0.getState());
  }

  @Test
  public void test7()  throws Throwable  {
      FBEscapedCallParser fBEscapedCallParser0 = new FBEscapedCallParser(4);
      FBProcedureCall fBProcedureCall0 = fBEscapedCallParser0.parseCall("@',({>u4q");
      assertEquals(2, fBEscapedCallParser0.getState());
      assertEquals("@',({>u4q", fBProcedureCall0.getName());
  }

  @Test
  public void test8()  throws Throwable  {
      FBEscapedCallParser fBEscapedCallParser0 = new FBEscapedCallParser(4);
      fBEscapedCallParser0.setState(4);
      fBEscapedCallParser0.switchState(',');
      assertEquals(4, fBEscapedCallParser0.getState());
  }

  @Test
  public void test9()  throws Throwable  {
      FBEscapedCallParser fBEscapedCallParser0 = new FBEscapedCallParser((-7));
      fBEscapedCallParser0.switchState(')');
      fBEscapedCallParser0.switchState('j');
      assertEquals(4, fBEscapedCallParser0.getState());
  }

  @Test
  public void test10()  throws Throwable  {
      FBEscapedCallParser fBEscapedCallParser0 = new FBEscapedCallParser((-1));
      try {
        fBEscapedCallParser0.parseCall("");
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Escaped call statement was empty.
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      FBEscapedCallParser fBEscapedCallParser0 = new FBEscapedCallParser((-1053));
      FBProcedureCall fBProcedureCall0 = fBEscapedCallParser0.parseCall(". ");
      assertNotNull(fBProcedureCall0);
      assertEquals(1, fBEscapedCallParser0.getState());
  }

  @Test
  public void test12()  throws Throwable  {
      FBEscapedCallParser fBEscapedCallParser0 = new FBEscapedCallParser((-8));
      FBProcedureCall fBProcedureCall0 = fBEscapedCallParser0.parseCall("{j");
      assertEquals(1, fBEscapedCallParser0.getState());
      assertEquals("j", fBProcedureCall0.getName());
      assertNotNull(fBProcedureCall0);
  }

  @Test
  public void test13()  throws Throwable  {
      FBEscapedCallParser fBEscapedCallParser0 = new FBEscapedCallParser(21);
      FBProcedureCall fBProcedureCall0 = fBEscapedCallParser0.parseCall("./n,(( kZilJTM}");
      assertEquals(1, fBEscapedCallParser0.getState());
      assertNotNull(fBProcedureCall0);
      assertEquals("( kZilJTM", fBProcedureCall0.getName());
  }

  @Test
  public void test14()  throws Throwable  {
      FBEscapedCallParser fBEscapedCallParser0 = new FBEscapedCallParser(0);
      FBProcedureCall fBProcedureCall0 = fBEscapedCallParser0.parseCall("EXECUTE /v(ROCEDU{E");
      assertEquals("/v(ROCEDU{E", fBProcedureCall0.getName());
      assertEquals(1, fBEscapedCallParser0.getState());
      assertNotNull(fBProcedureCall0);
  }

  @Test
  public void test15()  throws Throwable  {
      FBEscapedCallParser fBEscapedCallParser0 = new FBEscapedCallParser(1296);
      FBProcedureCall fBProcedureCall0 = fBEscapedCallParser0.parseCall("?=}Vs|&stamxk");
      assertEquals("}Vs|&stamxk", fBProcedureCall0.getName());
      assertEquals(1, fBEscapedCallParser0.getState());
      assertNotNull(fBProcedureCall0);
  }

  @Test
  public void test16()  throws Throwable  {
      FBEscapedCallParser fBEscapedCallParser0 = new FBEscapedCallParser(3);
      FBProcedureCall fBProcedureCall0 = fBEscapedCallParser0.parseCall("Procedure name is empty.");
      assertEquals("Procedurenameisempty.", fBProcedureCall0.getName());
      assertNotNull(fBProcedureCall0);
      assertEquals(1, fBEscapedCallParser0.getState());
  }

  @Test
  public void test17()  throws Throwable  {
      FBEscapedCallParser fBEscapedCallParser0 = new FBEscapedCallParser(1296);
      FBProcedureCall fBProcedureCall0 = fBEscapedCallParser0.parseCall(">Td^?,QWE<_");
      assertEquals("QWE<_", fBProcedureCall0.getName());
      assertNotNull(fBProcedureCall0);
      assertEquals(1, fBEscapedCallParser0.getState());
  }

  @Test
  public void test18()  throws Throwable  {
      FBEscapedCallParser fBEscapedCallParser0 = new FBEscapedCallParser(17);
      FBProcedureCall fBProcedureCall0 = fBEscapedCallParser0.parseCall("y<?:JHYgXCN\")");
      assertEquals("y<?:JHYgXCN\"", fBProcedureCall0.getName());
      assertNotNull(fBProcedureCall0);
      assertEquals(1, fBEscapedCallParser0.getState());
  }

  @Test
  public void test19()  throws Throwable  {
      FBEscapedCallParser fBEscapedCallParser0 = new FBEscapedCallParser(1734);
      boolean boolean0 = fBEscapedCallParser0.processToken("execute");
      boolean boolean1 = fBEscapedCallParser0.processToken("execute");
      assertFalse(boolean1 == boolean0);
      assertEquals(1, fBEscapedCallParser0.getState());
  }

  @Test
  public void test20()  throws Throwable  {
      FBEscapedCallParser fBEscapedCallParser0 = new FBEscapedCallParser(1718);
      boolean boolean0 = fBEscapedCallParser0.processToken("execute");
      assertEquals(true, boolean0);
      
      boolean boolean1 = fBEscapedCallParser0.processToken("procedure");
      assertEquals(true, boolean1);
      
      // Undeclared exception!
      try {
        fBEscapedCallParser0.processToken("procedure");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test21()  throws Throwable  {
      FBEscapedCallParser fBEscapedCallParser0 = new FBEscapedCallParser(17);
      boolean boolean0 = fBEscapedCallParser0.processToken("call");
      assertEquals(true, boolean0);
      
      // Undeclared exception!
      try {
        fBEscapedCallParser0.processToken("call");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
