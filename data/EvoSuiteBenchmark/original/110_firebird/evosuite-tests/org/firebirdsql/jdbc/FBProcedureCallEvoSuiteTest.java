/*
 * This file was automatically generated by EvoSuite
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.SQLException;
import java.util.List;
import org.firebirdsql.jdbc.FBProcedureCall;
import org.firebirdsql.jdbc.FBProcedureParam;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FBProcedureCallEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      List<FBProcedureParam> list0 = fBProcedureCall0.getOutputParams();
      assertEquals(0, list0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      try {
        fBProcedureCall0.registerOutParam(29753884, (-1577));
        fail("Expecting exception: FBSQLException");
      } catch(FBSQLException e) {
        /*
         * Cannot find parameter with the specified position.
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      List<FBProcedureParam> list0 = fBProcedureCall0.getInputParams();
      assertEquals(true, list0.isEmpty());
  }

  @Test
  public void test3()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = fBProcedureCall0.getName();
      assertNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object0 = new Object();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(1536);
      try {
        fBProcedureParam0.setValue(object0);
        fail("Expecting exception: FBSQLException");
      } catch(FBSQLException e) {
        /*
         * You cannot set value of an non-existing parameter.
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      assertNotNull(fBProcedureCall1);
      
      boolean boolean0 = fBProcedureCall0.equals((Object) fBProcedureCall1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1172, "RJbW+%5G?{H%c");
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      fBProcedureParam0.setValue((Object) fBProcedureCall1);
      fBProcedureCall0.registerOutParam((-1), (-1));
      assertFalse(fBProcedureCall0.equals(fBProcedureCall1));
  }

  @Test
  public void test7()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1172, "RJbW+%5G?{H%c");
      assertNotNull(fBProcedureParam0);
      
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      assertEquals(1172, fBProcedureParam0.getPosition());
      
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      assertNotNull(fBProcedureCall1);
      assertTrue(fBProcedureCall0.equals(fBProcedureCall1));
  }

  @Test
  public void test8()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getInputParam(1536);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(1536);
      assertEquals(0, fBProcedureParam0.getPosition());
  }

  @Test
  public void test9()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1160, "ca");
      assertEquals(1160, fBProcedureParam0.getPosition());
      assertNotNull(fBProcedureParam0);
      
      fBProcedureCall0.registerOutParam((-1), (-1));
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition((-724));
      assertEquals((-724), int0);
  }

  @Test
  public void test10()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1172, "RJbW+%5G?{H%c");
      assertNotNull(fBProcedureParam0);
      
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      assertEquals(1172, fBProcedureParam0.getPosition());
      
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition((-1));
      assertEquals(1, int0);
  }

  @Test
  public void test11()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1172, "RJbW+%5G?{H%c");
      assertNotNull(fBProcedureParam0);
      
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      assertEquals(1172, fBProcedureParam0.getPosition());
      
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(339);
      assertEquals(339, int0);
  }

  @Test
  public void test12()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      try {
        fBProcedureCall0.mapOutParamIndexToPosition(37, false);
        fail("Expecting exception: FBSQLException");
      } catch(FBSQLException e) {
        /*
         * Specified parameter does not exist.
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(1536);
      assertNotNull(fBProcedureParam0);
      
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      String string0 = fBProcedureCall0.getSQL(false);
      assertNotNull(string0);
      assertEquals("EXECUTE PROCEDURE null(null, null)", string0);
  }

  @Test
  public void test14()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(0, "fmH9iU;=|x}T?$FzG_");
      assertEquals(0, fBProcedureParam1.getPosition());
      assertNotNull(fBProcedureParam1);
  }

  @Test
  public void test15()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam((-1), "?");
      // Undeclared exception!
      try {
        fBProcedureCall0.addOutputParam(fBProcedureParam0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -1
         */
      }
  }

  @Test
  public void test16()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1172, "RJbW+%5G?{H%c");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.registerOutParam((-1), (-1));
      assertNull(fBProcedureCall0.getName());
  }

  @Test
  public void test17()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = fBProcedureCall0.getSQL(true);
      assertNotNull(string0);
      assertEquals("SELECT * FROM null", string0);
  }

  @Test
  public void test18()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(null)", string0);
      assertNotNull(string0);
  }

  @Test
  public void test19()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(1536);
      assertNotNull(fBProcedureParam0);
      
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(null)", string0);
      assertNotNull(string0);
  }

  @Test
  public void test20()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "fmH9iU;=|x}T?$FzG_");
      assertEquals(0, fBProcedureParam0.getPosition());
      assertNotNull(fBProcedureParam0);
      
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(fmH9iU;=|x}T?$FzG_)", string0);
      assertNotNull(string0);
  }

  @Test
  public void test21()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "fmH9iU;=|x}T?$FzG_");
      assertNotNull(fBProcedureParam0);
      
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      assertEquals(0, fBProcedureParam0.getPosition());
      
      String string0 = fBProcedureCall0.getSQL(true);
      assertNotNull(string0);
      assertEquals("SELECT * FROM null(fmH9iU;=|x}T?$FzG_)", string0);
  }

  @Test
  public void test22()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      boolean boolean0 = fBProcedureCall0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test23()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = fBProcedureCall0.hashCode();
      assertEquals(27707229, int0);
  }

  @Test
  public void test24()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName("-d");
      int int0 = fBProcedureCall0.hashCode();
      assertEquals(29753884, int0);
  }
}
