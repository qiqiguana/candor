/*
 * This file was automatically generated by EvoSuite
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.DriverPropertyInfo;
import java.sql.SQLException;
import java.util.Map;
import java.util.Properties;
import org.firebirdsql.jdbc.FBDriverPropertyManager;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FBDriverPropertyManagerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FBDriverPropertyManager fBDriverPropertyManager0 = new FBDriverPropertyManager();
      assertNotNull(fBDriverPropertyManager0);
  }

  @Test
  public void test1()  throws Throwable  {
      Properties properties0 = new Properties();
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("isc_dpb_isc_dpb_set_db_charse", "isc_dpb_isc_dpb_set_db_charse");
      properties0.put((Object) "isc_dpb_isc_dpb_set_db_charse", (Object) driverPropertyInfo0);
      Map<String, String> map0 = FBDriverPropertyManager.normalize((String) null, properties0);
      assertNotNull(map0);
      assertEquals(true, map0.isEmpty());
  }

  @Test
  public void test2()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.put((Object) "encoding", (Object) "encoding");
      Map<String, String> map0 = FBDriverPropertyManager.normalize("", properties0);
      assertNotNull(map0);
      assertEquals(1, map0.size());
  }

  @Test
  public void test3()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.put((Object) "UTF8", (Object) "isc_dpb_isc_dpb_set_db_charse");
      Map<String, String> map0 = FBDriverPropertyManager.normalize((String) null, properties0);
      assertNotNull(map0);
      assertEquals(true, map0.isEmpty());
  }

  @Test
  public void test4()  throws Throwable  {
      String string0 = FBDriverPropertyManager.getCanonicalName("encoding");
      assertNotNull(string0);
      assertEquals("isc_dpb_lc_ctype", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      String string0 = FBDriverPropertyManager.getCanonicalName("Z)>+IL<?o%=C");
      assertEquals("Z)>+IL<?o%=C", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      String string0 = FBDriverPropertyManager.getCanonicalName("isc_dpb_lc_ctype");
      assertEquals("isc_dpb_lc_ctype", string0);
  }

  @Test
  public void test7()  throws Throwable  {
      Properties properties0 = new Properties();
      Map<String, String> map0 = FBDriverPropertyManager.normalize("}%xjR51\"6|SC?8<{", properties0);
      assertNotNull(map0);
      assertEquals(true, map0.isEmpty());
  }

  @Test
  public void test8()  throws Throwable  {
      Properties properties0 = new Properties();
      Map<String, String> map0 = FBDriverPropertyManager.normalize("Z)>+IL<?o%=C", properties0);
      assertEquals(true, map0.isEmpty());
      assertNotNull(map0);
  }

  @Test
  public void test9()  throws Throwable  {
      Properties properties0 = new Properties();
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("isc_dpb_isc_dpb_set_db_charse", "isc_dpb_isc_dpb_set_db_charse");
      properties0.put((Object) "isc_dpb_isc_dpb_set_db_charse", (Object) driverPropertyInfo0);
      DriverPropertyInfo[] driverPropertyInfoArray0 = FBDriverPropertyManager.getDriverPropertyInfo(properties0);
      assertNotNull(driverPropertyInfoArray0);
  }

  @Test
  public void test10()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.put((Object) "encoding", (Object) "encoding");
      DriverPropertyInfo[] driverPropertyInfoArray0 = FBDriverPropertyManager.getDriverPropertyInfo(properties0);
      assertNotNull(driverPropertyInfoArray0);
  }

  @Test
  public void test11()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.put((Object) "UTF8", (Object) "isc_dpb_isc_dpb_set_db_charse");
      DriverPropertyInfo[] driverPropertyInfoArray0 = FBDriverPropertyManager.getDriverPropertyInfo(properties0);
      assertNotNull(driverPropertyInfoArray0);
  }
}
