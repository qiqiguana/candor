/*
 * This file was automatically generated by EvoSuite
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.List;
import org.firebirdsql.jdbc.FBEscapedFunctionHelper;
import org.firebirdsql.jdbc.FBSQLParseException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FBEscapedFunctionHelperEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FBEscapedFunctionHelper fBEscapedFunctionHelper0 = new FBEscapedFunctionHelper();
      assertNotNull(fBEscapedFunctionHelper0);
  }

  @Test
  public void test1()  throws Throwable  {
      String string0 = FBEscapedFunctionHelper.convertTemplate("OALSE({}, {1})", 1);
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      try {
        FBEscapedFunctionHelper.parseFunction("Gc9)^74");
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * No opening parenthesis found, not a function call.
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      try {
        FBEscapedFunctionHelper.parseFunction("D(q");
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * No closing parenthesis found, not a function call.
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      String string0 = FBEscapedFunctionHelper.convertTemplate("atan2(uz\"b^Tynf04J~]=Z, uz\"b^Tynf04J~]=Z)", (-1504));
      assertNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      try {
        FBEscapedFunctionHelper.parseArguments("abs(9^bp:Y+ra'b6)");
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * String literal is not properly closed.
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      List<String> list0 = FBEscapedFunctionHelper.parseArguments("cos()");
      assertNotNull(list0);
      assertEquals(0, list0.size());
  }

  @Test
  public void test7()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = FBEscapedFunctionHelper.abs(stringArray0);
      assertNotNull(string0);
      assertEquals("abs(null)", string0);
  }

  @Test
  public void test8()  throws Throwable  {
      String[] stringArray0 = new String[53];
      try {
        FBEscapedFunctionHelper.abs(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function abs : 53
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = FBEscapedFunctionHelper.acos(stringArray0);
      assertEquals("acos(null)", string0);
      assertNotNull(string0);
  }

  @Test
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[10];
      try {
        FBEscapedFunctionHelper.acos(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function acos : 10
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = FBEscapedFunctionHelper.asin(stringArray0);
      assertNotNull(string0);
      assertEquals("asin(null)", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[7];
      try {
        FBEscapedFunctionHelper.asin(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function asin : 7
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = FBEscapedFunctionHelper.atan(stringArray0);
      assertEquals("atan(null)", string0);
      assertNotNull(string0);
  }

  @Test
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[4];
      try {
        FBEscapedFunctionHelper.atan(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function atan : 4
         */
      }
  }

  @Test
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = FBEscapedFunctionHelper.atan2(stringArray0);
      assertNotNull(string0);
      assertEquals("atan2(null, null)", string0);
  }

  @Test
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[1];
      try {
        FBEscapedFunctionHelper.atan2(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function atan2 : 1
         */
      }
  }

  @Test
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = FBEscapedFunctionHelper.ceiling(stringArray0);
      assertEquals("ceiling(null)", string0);
      assertNotNull(string0);
  }

  @Test
  public void test18()  throws Throwable  {
      String[] stringArray0 = new String[3];
      try {
        FBEscapedFunctionHelper.ceiling(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function ceiling : 3
         */
      }
  }

  @Test
  public void test19()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = FBEscapedFunctionHelper.cos(stringArray0);
      assertNotNull(string0);
      assertEquals("cos(null)", string0);
  }

  @Test
  public void test20()  throws Throwable  {
      String[] stringArray0 = new String[7];
      try {
        FBEscapedFunctionHelper.cos(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function cos : 7
         */
      }
  }

  @Test
  public void test21()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = FBEscapedFunctionHelper.cot(stringArray0);
      assertNotNull(string0);
      assertEquals("cot(null)", string0);
  }

  @Test
  public void test22()  throws Throwable  {
      String[] stringArray0 = new String[2];
      try {
        FBEscapedFunctionHelper.cot(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function cot : 2
         */
      }
  }

  @Test
  public void test23()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = FBEscapedFunctionHelper.floor(stringArray0);
      assertEquals("floor(null)", string0);
      assertNotNull(string0);
  }

  @Test
  public void test24()  throws Throwable  {
      String[] stringArray0 = new String[38];
      try {
        FBEscapedFunctionHelper.floor(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function floor : 38
         */
      }
  }

  @Test
  public void test25()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = FBEscapedFunctionHelper.log(stringArray0);
      assertNotNull(string0);
      assertEquals("ln(null)", string0);
  }

  @Test
  public void test26()  throws Throwable  {
      String[] stringArray0 = new String[3];
      try {
        FBEscapedFunctionHelper.log(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function log : 3
         */
      }
  }

  @Test
  public void test27()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = FBEscapedFunctionHelper.log10(stringArray0);
      assertEquals("log10(null)", string0);
      assertNotNull(string0);
  }

  @Test
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[7];
      try {
        FBEscapedFunctionHelper.log10(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function log10 : 7
         */
      }
  }

  @Test
  public void test29()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = FBEscapedFunctionHelper.mod(stringArray0);
      assertNotNull(string0);
      assertEquals("mod(null, null)", string0);
  }

  @Test
  public void test30()  throws Throwable  {
      String[] stringArray0 = new String[1];
      try {
        FBEscapedFunctionHelper.mod(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function mod : 1
         */
      }
  }

  @Test
  public void test31()  throws Throwable  {
      String[] stringArray0 = new String[1];
      try {
        FBEscapedFunctionHelper.pi(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function pi : 1
         */
      }
  }

  @Test
  public void test32()  throws Throwable  {
      String[] stringArray0 = new String[1];
      try {
        FBEscapedFunctionHelper.rand(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function rand : 1
         */
      }
  }

  @Test
  public void test33()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = FBEscapedFunctionHelper.sign(stringArray0);
      assertEquals("sign(null)", string0);
      assertNotNull(string0);
  }

  @Test
  public void test34()  throws Throwable  {
      String[] stringArray0 = new String[2];
      try {
        FBEscapedFunctionHelper.sign(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function sign : 2
         */
      }
  }

  @Test
  public void test35()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = FBEscapedFunctionHelper.sin(stringArray0);
      assertNotNull(string0);
      assertEquals("sin(null)", string0);
  }

  @Test
  public void test36()  throws Throwable  {
      String[] stringArray0 = new String[3];
      try {
        FBEscapedFunctionHelper.sin(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function sin : 3
         */
      }
  }

  @Test
  public void test37()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = FBEscapedFunctionHelper.sqrt(stringArray0);
      assertEquals("sqrt(null)", string0);
      assertNotNull(string0);
  }

  @Test
  public void test38()  throws Throwable  {
      String[] stringArray0 = new String[6];
      try {
        FBEscapedFunctionHelper.sqrt(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function sqrt : 6
         */
      }
  }

  @Test
  public void test39()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = FBEscapedFunctionHelper.tan(stringArray0);
      assertNotNull(string0);
      assertEquals("tan(null)", string0);
  }

  @Test
  public void test40()  throws Throwable  {
      String[] stringArray0 = new String[2];
      try {
        FBEscapedFunctionHelper.tan(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function tan : 2
         */
      }
  }

  @Test
  public void test41()  throws Throwable  {
      String[] stringArray0 = new String[1];
      try {
        FBEscapedFunctionHelper.ascii(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Parameter must not be empty or null
         */
      }
  }

  @Test
  public void test42()  throws Throwable  {
      String[] stringArray0 = new String[30];
      try {
        FBEscapedFunctionHelper.ascii(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function ascii : 30
         */
      }
  }

  @Test
  public void test43()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "tan(null)";
      String string0 = FBEscapedFunctionHelper.ascii(stringArray0);
      assertEquals("ascii_val(t)", string0);
      assertNotNull(string0);
  }

  @Test
  public void test44()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      try {
        FBEscapedFunctionHelper.ascii(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Parameter must not be empty or null
         */
      }
  }

  @Test
  public void test45()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = FBEscapedFunctionHelper._char(stringArray0);
      assertEquals("char(null)", string0);
      assertNotNull(string0);
  }

  @Test
  public void test46()  throws Throwable  {
      String[] stringArray0 = new String[12];
      try {
        FBEscapedFunctionHelper._char(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function char : 12
         */
      }
  }

  @Test
  public void test47()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = FBEscapedFunctionHelper.lcase(stringArray0);
      assertEquals("lower(null)", string0);
      assertNotNull(string0);
  }

  @Test
  public void test48()  throws Throwable  {
      String[] stringArray0 = new String[8];
      try {
        FBEscapedFunctionHelper.lcase(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function lcase : 8
         */
      }
  }

  @Test
  public void test49()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = FBEscapedFunctionHelper.length(stringArray0);
      assertEquals("strlen(null)", string0);
      assertNotNull(string0);
  }

  @Test
  public void test50()  throws Throwable  {
      String[] stringArray0 = new String[10];
      try {
        FBEscapedFunctionHelper.length(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function length : 10
         */
      }
  }

  @Test
  public void test51()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = FBEscapedFunctionHelper.ltrim(stringArray0);
      assertNotNull(string0);
      assertEquals("ltrim(null)", string0);
  }

  @Test
  public void test52()  throws Throwable  {
      String[] stringArray0 = new String[8];
      try {
        FBEscapedFunctionHelper.ltrim(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function ltrim : 8
         */
      }
  }

  @Test
  public void test53()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = FBEscapedFunctionHelper.rtrim(stringArray0);
      assertEquals("rtrim(null)", string0);
      assertNotNull(string0);
  }

  @Test
  public void test54()  throws Throwable  {
      String[] stringArray0 = new String[2];
      try {
        FBEscapedFunctionHelper.rtrim(stringArray0);
        fail("Expecting exception: FBSQLParseException");
      } catch(FBSQLParseException e) {
        /*
         * Incorrect number of parameters of function rtrim : 2
         */
      }
  }
}
