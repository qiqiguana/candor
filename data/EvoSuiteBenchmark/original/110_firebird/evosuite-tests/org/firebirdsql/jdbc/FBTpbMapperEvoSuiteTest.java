/*
 * This file was automatically generated by EvoSuite
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.AbstractMap;
import java.util.HashMap;
import java.util.Map;
import org.firebirdsql.gds.GDS;
import org.firebirdsql.gds.TransactionParameterBuffer;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.gds.impl.wire.TransactionParameterBufferImpl;
import org.firebirdsql.jca.FBResourceException;
import org.firebirdsql.jdbc.FBTpbMapper;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FBTpbMapperEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      FBTpbMapper fBTpbMapper0 = FBTpbMapper.getDefaultMapper((GDS) javaGDSImpl0);
      assertNotNull(fBTpbMapper0);
      
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = (TransactionParameterBufferImpl)fBTpbMapper0.getDefaultMapping();
      assertNotNull(transactionParameterBufferImpl0);
      
      fBTpbMapper0.setMapping(2, (TransactionParameterBuffer) transactionParameterBufferImpl0);
      assertEquals(4, transactionParameterBufferImpl0.getLength());
  }

  @Test
  public void test1()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      FBTpbMapper fBTpbMapper0 = new FBTpbMapper((GDS) javaGDSImpl0, (Map<String, String>) hashMap0);
      assertEquals(2, fBTpbMapper0.getDefaultTransactionIsolation());
      assertNotNull(fBTpbMapper0);
  }

  @Test
  public void test2()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      FBTpbMapper fBTpbMapper0 = new FBTpbMapper((GDS) javaGDSImpl0);
      assertNotNull(fBTpbMapper0);
      
      FBTpbMapper fBTpbMapper1 = (FBTpbMapper)fBTpbMapper0.clone();
      fBTpbMapper0.setDefaultTransactionIsolation(1169);
      boolean boolean0 = fBTpbMapper0.equals((Object) fBTpbMapper1);
      assertEquals(1169, fBTpbMapper0.getDefaultTransactionIsolation());
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      FBTpbMapper fBTpbMapper0 = FBTpbMapper.getDefaultMapper((GDS) javaGDSImpl0);
      assertNotNull(fBTpbMapper0);
      
      int int0 = fBTpbMapper0.getDefaultTransactionIsolation();
      assertEquals(2, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      FBTpbMapper fBTpbMapper0 = new FBTpbMapper((GDS) javaGDSImpl0);
      assertNotNull(fBTpbMapper0);
      
      AbstractMap.SimpleImmutableEntry<FBTpbMapper, FBTpbMapper> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<FBTpbMapper, FBTpbMapper>(fBTpbMapper0, fBTpbMapper0);
      AbstractMap.SimpleEntry<FBTpbMapper, FBTpbMapper> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<FBTpbMapper, FBTpbMapper>((Map.Entry<? extends FBTpbMapper, ? extends FBTpbMapper>) abstractMap_SimpleImmutableEntry0);
      String string0 = abstractMap_SimpleEntry0.toString();
      assertNotNull(string0);
      assertEquals(2, fBTpbMapper0.getDefaultTransactionIsolation());
  }

  @Test
  public void test5()  throws Throwable  {
      String string0 = FBTpbMapper.getTransactionIsolationName(0);
      assertEquals("TRANSACTION_NONE", string0);
      assertNotNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try {
        FBTpbMapper.getTransactionIsolationName((-1631));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Incorrect transaction isolation level.
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      String string0 = FBTpbMapper.getTransactionIsolationName(1);
      assertNotNull(string0);
      assertEquals("TRANSACTION_READ_UNCOMMITTED", string0);
  }

  @Test
  public void test8()  throws Throwable  {
      String string0 = FBTpbMapper.getTransactionIsolationName(2);
      assertEquals("TRANSACTION_READ_COMMITTED", string0);
      assertNotNull(string0);
  }

  @Test
  public void test9()  throws Throwable  {
      String string0 = FBTpbMapper.getTransactionIsolationName(4);
      assertEquals("TRANSACTION_REPEATABLE_READ", string0);
      assertNotNull(string0);
  }

  @Test
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try {
        FBTpbMapper.getTransactionIsolationName(5);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Incorrect transaction isolation level.
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      String string0 = FBTpbMapper.getTransactionIsolationName(8);
      assertNotNull(string0);
      assertEquals("TRANSACTION_SERIALIZABLE", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = FBTpbMapper.getTransactionIsolationLevel("TRANSACTION_READ_UNCOMMITTED");
      assertEquals(1, int0);
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = FBTpbMapper.getTransactionIsolationLevel("TRANSACTION_NONE");
      assertEquals(0, int0);
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = FBTpbMapper.getTransactionIsolationLevel("TRANSACTION_REPEATABLE_READ");
      assertEquals(4, int0);
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = FBTpbMapper.getTransactionIsolationLevel("TRANSACTION_READ_COMMITTED");
      assertEquals(2, int0);
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = FBTpbMapper.getTransactionIsolationLevel("TRANSACTION_SERIALIZABLE");
      assertEquals(8, int0);
  }

  @Test
  public void test17()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put((String) null, (String) null);
      FBTpbMapper fBTpbMapper0 = null;
      try {
        fBTpbMapper0 = new FBTpbMapper((GDS) javaGDSImpl0, (Map<String, String>) hashMap0);
        fail("Expecting exception: FBResourceException");
      } catch(FBResourceException e) {
        /*
         * Transaction isolation null is not supported., error code: HY000
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = (TransactionParameterBufferImpl)FBTpbMapper.processMapping((GDS) javaGDSImpl0, "");
      assertEquals(0, transactionParameterBufferImpl0.getLength());
  }

  @Test
  public void test19()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      try {
        FBTpbMapper.processMapping((GDS) javaGDSImpl0, "TRANSACTION_REPEATABLE_READ");
        fail("Expecting exception: FBResourceException");
      } catch(FBResourceException e) {
        /*
         * Keyword TRANSACTION_REPEATABLE_READ unknown. Please check your mapping., error code: HY000
         */
      }
  }

  @Test
  public void test20()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      FBTpbMapper fBTpbMapper0 = FBTpbMapper.getDefaultMapper((GDS) javaGDSImpl0);
      assertNotNull(fBTpbMapper0);
      
      // Undeclared exception!
      try {
        fBTpbMapper0.getMapping(0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Transaction isolation level 0 is not supported.
         */
      }
  }

  @Test
  public void test21()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      FBTpbMapper fBTpbMapper0 = new FBTpbMapper((GDS) javaGDSImpl0);
      assertNotNull(fBTpbMapper0);
      
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = (TransactionParameterBufferImpl)fBTpbMapper0.getMapping(4);
      assertNotNull(transactionParameterBufferImpl0);
      assertEquals(2, fBTpbMapper0.getDefaultTransactionIsolation());
      assertEquals(3, transactionParameterBufferImpl0.getLength());
  }

  @Test
  public void test22()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      FBTpbMapper fBTpbMapper0 = FBTpbMapper.getDefaultMapper((GDS) javaGDSImpl0);
      assertNotNull(fBTpbMapper0);
      
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = (TransactionParameterBufferImpl)fBTpbMapper0.getMapping(1);
      assertNotNull(transactionParameterBufferImpl0);
      
      // Undeclared exception!
      try {
        fBTpbMapper0.setMapping(5, (TransactionParameterBuffer) transactionParameterBufferImpl0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Transaction isolation level 5 is not supported.
         */
      }
  }

  @Test
  public void test23()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      FBTpbMapper fBTpbMapper0 = FBTpbMapper.getDefaultMapper((GDS) javaGDSImpl0);
      assertNotNull(fBTpbMapper0);
      
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = (TransactionParameterBufferImpl)fBTpbMapper0.getMapping(2);
      assertEquals(4, transactionParameterBufferImpl0.getLength());
      assertEquals(2, fBTpbMapper0.getDefaultTransactionIsolation());
      assertNotNull(transactionParameterBufferImpl0);
  }

  @Test
  public void test24()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      FBTpbMapper fBTpbMapper0 = new FBTpbMapper((GDS) javaGDSImpl0);
      assertNotNull(fBTpbMapper0);
      
      // Undeclared exception!
      try {
        fBTpbMapper0.getMapping(5);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Transaction isolation level 5 is not supported.
         */
      }
  }

  @Test
  public void test25()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      FBTpbMapper fBTpbMapper0 = new FBTpbMapper((GDS) javaGDSImpl0);
      assertNotNull(fBTpbMapper0);
      
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = (TransactionParameterBufferImpl)fBTpbMapper0.getMapping(8);
      assertNotNull(transactionParameterBufferImpl0);
      
      fBTpbMapper0.setMapping(8, (TransactionParameterBuffer) transactionParameterBufferImpl0);
      assertEquals(2, fBTpbMapper0.getDefaultTransactionIsolation());
      assertEquals(3, transactionParameterBufferImpl0.getLength());
  }

  @Test
  public void test26()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      FBTpbMapper fBTpbMapper0 = new FBTpbMapper((GDS) javaGDSImpl0);
      assertNotNull(fBTpbMapper0);
      
      // Undeclared exception!
      try {
        fBTpbMapper0.getMapping(1169);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Transaction isolation level 1169 is not supported.
         */
      }
  }

  @Test
  public void test27()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      FBTpbMapper fBTpbMapper0 = FBTpbMapper.getDefaultMapper((GDS) javaGDSImpl0);
      assertNotNull(fBTpbMapper0);
      
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = new TransactionParameterBufferImpl();
      // Undeclared exception!
      try {
        fBTpbMapper0.setMapping(0, (TransactionParameterBuffer) transactionParameterBufferImpl0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Transaction isolation level 0 is not supported.
         */
      }
  }

  @Test
  public void test28()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      FBTpbMapper fBTpbMapper0 = new FBTpbMapper((GDS) javaGDSImpl0);
      assertNotNull(fBTpbMapper0);
      
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = (TransactionParameterBufferImpl)fBTpbMapper0.getDefaultMapping();
      assertNotNull(transactionParameterBufferImpl0);
      
      // Undeclared exception!
      try {
        fBTpbMapper0.setMapping(1, (TransactionParameterBuffer) transactionParameterBufferImpl0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Transaction isolation level 1 is not supported.
         */
      }
  }

  @Test
  public void test29()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      FBTpbMapper fBTpbMapper0 = FBTpbMapper.getDefaultMapper((GDS) javaGDSImpl0);
      assertNotNull(fBTpbMapper0);
      
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = (TransactionParameterBufferImpl)javaGDSImpl0.newTransactionParameterBuffer();
      fBTpbMapper0.setMapping(4, (TransactionParameterBuffer) transactionParameterBufferImpl0);
      assertEquals(2, fBTpbMapper0.getDefaultTransactionIsolation());
  }

  @Test
  public void test30()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      FBTpbMapper fBTpbMapper0 = new FBTpbMapper((GDS) javaGDSImpl0);
      assertNotNull(fBTpbMapper0);
      
      // Undeclared exception!
      try {
        fBTpbMapper0.setMapping(335544526, (TransactionParameterBuffer) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Transaction isolation level 335544526 is not supported.
         */
      }
  }

  @Test
  public void test31()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      FBTpbMapper fBTpbMapper0 = new FBTpbMapper((GDS) javaGDSImpl0);
      assertNotNull(fBTpbMapper0);
      
      FBTpbMapper fBTpbMapper1 = (FBTpbMapper)fBTpbMapper0.clone();
      assertNotNull(fBTpbMapper1);
      
      boolean boolean0 = fBTpbMapper0.equals((Object) fBTpbMapper1);
      assertNotSame(fBTpbMapper0, fBTpbMapper1);
      assertEquals(2, fBTpbMapper0.getDefaultTransactionIsolation());
      assertEquals(true, boolean0);
  }

  @Test
  public void test32()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      FBTpbMapper fBTpbMapper0 = new FBTpbMapper((GDS) javaGDSImpl0);
      assertNotNull(fBTpbMapper0);
      
      boolean boolean0 = fBTpbMapper0.equals((Object) "org.firebirdsql.jdbc.FBTpbMapper@65239ff=org.firebirdsql.jdbc.FBTpbMapper@65239ff");
      assertEquals(false, boolean0);
      assertEquals(2, fBTpbMapper0.getDefaultTransactionIsolation());
  }
}
