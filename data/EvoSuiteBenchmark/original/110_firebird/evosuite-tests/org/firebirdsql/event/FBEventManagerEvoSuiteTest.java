/*
 * This file was automatically generated by EvoSuite
 */

package org.firebirdsql.event;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.SQLException;
import org.firebirdsql.event.EventListener;
import org.firebirdsql.event.FBEventManager;
import org.firebirdsql.gds.GDSException;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FBEventManagerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FBEventManager fBEventManager0 = new FBEventManager();
      assertNotNull(fBEventManager0);
      
      FBEventManager.EventDispatcher fBEventManager_EventDispatcher0 = fBEventManager0.new EventDispatcher();
      fBEventManager_EventDispatcher0.stop();
      assertEquals(3050, fBEventManager0.getPort());
      assertEquals(1000L, fBEventManager0.getWaitTimeout());
      assertEquals("localhost", fBEventManager0.getHost());
      assertEquals(false, fBEventManager0.isConnected());
  }

  @Test
  public void test1()  throws Throwable  {
      FBEventManager fBEventManager0 = new FBEventManager();
      assertNotNull(fBEventManager0);
      
      FBEventManager.GdsEventHandler fBEventManager_GdsEventHandler0 = fBEventManager0.new GdsEventHandler("");
      assertNotNull(fBEventManager_GdsEventHandler0);
      
      // Undeclared exception!
      try {
        fBEventManager_GdsEventHandler0.eventOccurred();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      FBEventManager fBEventManager0 = new FBEventManager();
      assertNotNull(fBEventManager0);
      
      String string0 = fBEventManager0.getHost();
      assertNotNull(string0);
      assertEquals(false, fBEventManager0.isConnected());
      assertEquals("localhost", string0);
      assertEquals(1000L, fBEventManager0.getWaitTimeout());
      assertEquals(3050, fBEventManager0.getPort());
  }

  @Test
  public void test3()  throws Throwable  {
      FBEventManager fBEventManager0 = new FBEventManager();
      assertNotNull(fBEventManager0);
      
      fBEventManager0.setWaitTimeout((-67L));
      assertEquals((-67L), fBEventManager0.getWaitTimeout());
      assertEquals(3050, fBEventManager0.getPort());
  }

  @Test
  public void test4()  throws Throwable  {
      FBEventManager fBEventManager0 = new FBEventManager();
      assertNotNull(fBEventManager0);
      
      fBEventManager0.setPassword("U");
      assertEquals("localhost", fBEventManager0.getHost());
      assertEquals(false, fBEventManager0.isConnected());
      assertEquals(1000L, fBEventManager0.getWaitTimeout());
      assertEquals(3050, fBEventManager0.getPort());
  }

  @Test
  public void test5()  throws Throwable  {
      FBEventManager fBEventManager0 = new FBEventManager();
      assertEquals("localhost", fBEventManager0.getHost());
      assertNotNull(fBEventManager0);
      
      fBEventManager0.setHost("");
      assertEquals(1000L, fBEventManager0.getWaitTimeout());
  }

  @Test
  public void test6()  throws Throwable  {
      FBEventManager fBEventManager0 = new FBEventManager((GDSType) null);
      assertNotNull(fBEventManager0);
      
      // Undeclared exception!
      try {
        fBEventManager0.waitForEvent("");
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Can't wait for events with disconnected EventManager
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      FBEventManager fBEventManager0 = new FBEventManager();
      assertNotNull(fBEventManager0);
      
      String string0 = fBEventManager0.getPassword();
      assertEquals(3050, fBEventManager0.getPort());
      assertEquals(false, fBEventManager0.isConnected());
      assertEquals(1000L, fBEventManager0.getWaitTimeout());
      assertEquals("localhost", fBEventManager0.getHost());
      assertNotNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      FBEventManager fBEventManager0 = new FBEventManager();
      assertNotNull(fBEventManager0);
      
      String string0 = fBEventManager0.getUser();
      assertEquals("localhost", fBEventManager0.getHost());
      assertEquals(3050, fBEventManager0.getPort());
      assertEquals(false, fBEventManager0.isConnected());
      assertEquals(1000L, fBEventManager0.getWaitTimeout());
      assertNotNull(string0);
  }

  @Test
  public void test9()  throws Throwable  {
      FBEventManager fBEventManager0 = new FBEventManager();
      assertNotNull(fBEventManager0);
      
      long long0 = fBEventManager0.getWaitTimeout();
      assertEquals("localhost", fBEventManager0.getHost());
      assertEquals(1000L, long0);
      assertEquals(3050, fBEventManager0.getPort());
      assertEquals(false, fBEventManager0.isConnected());
  }

  @Test
  public void test10()  throws Throwable  {
      FBEventManager fBEventManager0 = new FBEventManager();
      assertNotNull(fBEventManager0);
      
      boolean boolean0 = fBEventManager0.isConnected();
      assertEquals(1000L, fBEventManager0.getWaitTimeout());
      assertEquals(3050, fBEventManager0.getPort());
      assertEquals("localhost", fBEventManager0.getHost());
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      FBEventManager fBEventManager0 = new FBEventManager();
      assertNotNull(fBEventManager0);
      
      int int0 = fBEventManager0.getPort();
      assertEquals(1000L, fBEventManager0.getWaitTimeout());
      assertEquals("localhost", fBEventManager0.getHost());
      assertEquals(false, fBEventManager0.isConnected());
      assertEquals(3050, int0);
  }

  @Test
  public void test12()  throws Throwable  {
      FBEventManager fBEventManager0 = new FBEventManager();
      assertEquals(3050, fBEventManager0.getPort());
      assertNotNull(fBEventManager0);
      
      fBEventManager0.setPort(0);
      assertEquals(1000L, fBEventManager0.getWaitTimeout());
  }

  @Test
  public void test13()  throws Throwable  {
      FBEventManager fBEventManager0 = new FBEventManager((GDSType) null);
      assertNotNull(fBEventManager0);
      
      fBEventManager0.setUser((String) null);
      assertEquals(3050, fBEventManager0.getPort());
      assertEquals(false, fBEventManager0.isConnected());
      assertEquals("localhost", fBEventManager0.getHost());
      assertEquals(1000L, fBEventManager0.getWaitTimeout());
  }

  @Test
  public void test14()  throws Throwable  {
      FBEventManager fBEventManager0 = new FBEventManager((GDSType) null);
      assertNotNull(fBEventManager0);
      
      fBEventManager0.setDatabase("");
      assertEquals("localhost", fBEventManager0.getHost());
      assertEquals(3050, fBEventManager0.getPort());
      assertEquals(false, fBEventManager0.isConnected());
      assertEquals(1000L, fBEventManager0.getWaitTimeout());
  }

  @Test
  public void test15()  throws Throwable  {
      FBEventManager fBEventManager0 = new FBEventManager();
      assertNotNull(fBEventManager0);
      
      String string0 = fBEventManager0.getDatabase();
      assertEquals(3050, fBEventManager0.getPort());
      assertEquals("localhost", fBEventManager0.getHost());
      assertNotNull(string0);
      assertEquals(false, fBEventManager0.isConnected());
      assertEquals(1000L, fBEventManager0.getWaitTimeout());
  }

  @Test
  public void test16()  throws Throwable  {
      FBEventManager fBEventManager0 = new FBEventManager();
      assertNotNull(fBEventManager0);
      
      try {
        fBEventManager0.connect();
        fail("Expecting exception: FBSQLException");
      } catch(FBSQLException e) {
        /*
         * GDS Exception. 0. Bad connection string: ':' at beginning or end of:localhost/3050:335544323
         */
      }
  }

  @Test
  public void test17()  throws Throwable  {
      FBEventManager fBEventManager0 = new FBEventManager();
      assertNotNull(fBEventManager0);
      
      // Undeclared exception!
      try {
        fBEventManager0.disconnect();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Disconnect called while not connected
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      FBEventManager fBEventManager0 = new FBEventManager();
      assertNotNull(fBEventManager0);
      
      // Undeclared exception!
      try {
        fBEventManager0.addEventListener("", (EventListener) null);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Can't add event listeners to disconnected EventManager
         */
      }
  }

  @Test
  public void test19()  throws Throwable  {
      FBEventManager fBEventManager0 = new FBEventManager();
      assertNotNull(fBEventManager0);
      
      // Undeclared exception!
      try {
        fBEventManager0.removeEventListener((String) null, (EventListener) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test20()  throws Throwable  {
      FBEventManager fBEventManager0 = new FBEventManager((GDSType) null);
      assertNotNull(fBEventManager0);
      
      // Undeclared exception!
      try {
        fBEventManager0.removeEventListener("", (EventListener) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test21()  throws Throwable  {
      FBEventManager fBEventManager0 = new FBEventManager();
      assertNotNull(fBEventManager0);
      
      FBEventManager.GdsEventHandler fBEventManager_GdsEventHandler0 = fBEventManager0.new GdsEventHandler("V8I}u(S^wR7");
      assertNotNull(fBEventManager_GdsEventHandler0);
      
      fBEventManager_GdsEventHandler0.unregister();
      fBEventManager_GdsEventHandler0.eventOccurred();
      assertEquals(1000L, fBEventManager0.getWaitTimeout());
      assertEquals(3050, fBEventManager0.getPort());
      assertEquals(false, fBEventManager0.isConnected());
      assertEquals("localhost", fBEventManager0.getHost());
  }
}
