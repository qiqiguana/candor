/*
 * This file was automatically generated by EvoSuite
 */

package org.firebirdsql.gds.impl.wire;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import org.firebirdsql.gds.GDSException;
import org.firebirdsql.gds.impl.wire.isc_svc_handle_impl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class isc_svc_handle_implEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      isc_svc_handle_impl0.setResp_blob_id(0L);
      assertEquals(true, isc_svc_handle_impl0.isNotValid());
      assertEquals(false, isc_svc_handle_impl0.isValid());
  }

  @Test
  public void test1()  throws Throwable  {
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      // Undeclared exception!
      try {
        isc_svc_handle_impl0.clearWarnings();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * This database handle is invalid and cannot be used anymore.
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      // Undeclared exception!
      try {
        isc_svc_handle_impl0.getHandle();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * This database handle is invalid and cannot be used anymore.
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      // Undeclared exception!
      try {
        isc_svc_handle_impl0.invalidate();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      isc_svc_handle_impl0.setResp_object(0);
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals(true, isc_svc_handle_impl0.isNotValid());
  }

  @Test
  public void test5()  throws Throwable  {
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      int int0 = isc_svc_handle_impl0.getResp_object();
      assertEquals(0, int0);
      assertEquals(false, isc_svc_handle_impl0.isValid());
  }

  @Test
  public void test6()  throws Throwable  {
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      byte[] byteArray0 = new byte[5];
      isc_svc_handle_impl0.setResp_data(byteArray0);
      assertEquals(true, isc_svc_handle_impl0.isNotValid());
      assertEquals(false, isc_svc_handle_impl0.isValid());
  }

  @Test
  public void test7()  throws Throwable  {
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      // Undeclared exception!
      try {
        isc_svc_handle_impl0.addWarning((GDSException) null);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * This database handle is invalid and cannot be used anymore.
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      // Undeclared exception!
      try {
        isc_svc_handle_impl0.getWarnings();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * This database handle is invalid and cannot be used anymore.
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      isc_svc_handle_impl0.setHandle(1);
      boolean boolean0 = isc_svc_handle_impl0.isValid();
      assertEquals(false, isc_svc_handle_impl0.isNotValid());
      assertEquals(1, isc_svc_handle_impl0.getHandle());
      assertEquals(true, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      boolean boolean0 = isc_svc_handle_impl0.isNotValid();
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      isc_svc_handle_impl0.getResp_data();
      assertEquals(false, isc_svc_handle_impl0.isValid());
      assertEquals(true, isc_svc_handle_impl0.isNotValid());
  }

  @Test
  public void test12()  throws Throwable  {
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      isc_svc_handle_impl0.getResp_blob_id();
      assertEquals(true, isc_svc_handle_impl0.isNotValid());
      assertEquals(false, isc_svc_handle_impl0.isValid());
  }

  @Test
  public void test13()  throws Throwable  {
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      boolean boolean0 = isc_svc_handle_impl0.isValid();
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      isc_svc_handle_impl0.setHandle(1);
      isc_svc_handle_impl0.getWarnings();
      assertEquals(1, isc_svc_handle_impl0.getHandle());
      assertEquals(true, isc_svc_handle_impl0.isValid());
  }
}
