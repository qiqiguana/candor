/*
 * This file was automatically generated by EvoSuite
 */

package org.firebirdsql.gds.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Set;
import org.firebirdsql.gds.GDSException;
import org.firebirdsql.gds.impl.GDSFactory;
import org.firebirdsql.gds.impl.GDSFactoryPlugin;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.LocalGDSFactoryPlugin;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class GDSFactoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try {
        GDSFactory.getConnectionClass((GDSType) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Specified GDS type null is unknown.
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      GDSFactory gDSFactory0 = new GDSFactory();
      assertNotNull(gDSFactory0);
  }

  @Test
  public void test2()  throws Throwable  {
      Set<String> set0 = GDSFactory.getSupportedProtocols();
      assertEquals(7, set0.size());
  }

  @Test
  public void test3()  throws Throwable  {
      GDSType gDSType0 = GDSFactory.getDefaultGDSType();
      // Undeclared exception!
      try {
        GDSFactory.getDatabasePath(gDSType0, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try {
        GDSFactory.getDatabasePath((GDSType) null, "yS^M2s[tIMXm", (Integer) 688, "yS^M2s[tIMXm");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Specified GDS type null is unknown.
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      GDSType gDSType0 = GDSType.registerType((String) null);
      // Undeclared exception!
      try {
        GDSFactory.getJdbcUrl(gDSType0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Specified GDS type null is unknown.
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = (JavaGDSImpl)GDSFactory.getDefaultGDS();
      assertNotNull(javaGDSImpl0);
  }

  @Test
  public void test7()  throws Throwable  {
      LocalGDSFactoryPlugin localGDSFactoryPlugin0 = new LocalGDSFactoryPlugin();
      GDSFactory.registerPlugin((GDSFactoryPlugin) localGDSFactoryPlugin0);
      assertEquals("jdbc:firebirdsql:local:", localGDSFactoryPlugin0.getDefaultProtocol());
  }

  @Test
  public void test8()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = (JavaGDSImpl)GDSFactory.getGDSForType((GDSType) null);
      assertNotNull(javaGDSImpl0);
  }

  @Test
  public void test9()  throws Throwable  {
      GDSType gDSType0 = GDSType.getType("(");
      JavaGDSImpl javaGDSImpl0 = (JavaGDSImpl)GDSFactory.getGDSForType(gDSType0);
      assertNotNull(javaGDSImpl0);
  }

  @Test
  public void test10()  throws Throwable  {
      GDSType gDSType0 = GDSFactory.getTypeForProtocol("8");
      assertNull(gDSType0);
  }

  @Test
  public void test11()  throws Throwable  {
      GDSType gDSType0 = GDSFactory.getTypeForProtocol("jdbc:firebirdsql:jva[w");
      assertNotNull(gDSType0);
      assertEquals("PURE_JAVA", gDSType0.toString());
  }
}
