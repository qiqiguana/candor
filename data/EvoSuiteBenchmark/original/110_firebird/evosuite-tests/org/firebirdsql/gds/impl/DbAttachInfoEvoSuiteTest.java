/*
 * This file was automatically generated by EvoSuite
 */

package org.firebirdsql.gds.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.firebirdsql.gds.GDSException;
import org.firebirdsql.gds.impl.DbAttachInfo;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DbAttachInfoEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("wT_l\"yA}5y5)rPH");
      assertNotNull(dbAttachInfo0);
      
      String string0 = dbAttachInfo0.getServer();
      assertEquals("wT_l\"yA}5y5)rPH", dbAttachInfo0.getFileName());
      assertEquals("localhost", string0);
      assertEquals(3050, dbAttachInfo0.getPort());
      assertNotNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("Bad server string: '");
      assertNotNull(dbAttachInfo0);
      
      int int0 = dbAttachInfo0.getPort();
      assertEquals(3050, int0);
      assertEquals("Bad server string", dbAttachInfo0.getServer());
  }

  @Test
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer(475);
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo((String) null, integer0, "lAoalhos");
      assertNotNull(dbAttachInfo0);
      
      String string0 = dbAttachInfo0.getFileName();
      assertEquals("localhost", dbAttachInfo0.getServer());
      assertEquals(475, dbAttachInfo0.getPort());
      assertNotNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      DbAttachInfo dbAttachInfo0 = null;
      try {
        dbAttachInfo0 = new DbAttachInfo((String) null);
        fail("Expecting exception: GDSException");
      } catch(GDSException e) {
        /*
         * Connection string missing
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      DbAttachInfo dbAttachInfo0 = null;
      try {
        dbAttachInfo0 = new DbAttachInfo("///`I\"mZXbj5eAQ*");
        fail("Expecting exception: GDSException");
      } catch(GDSException e) {
        /*
         * Bad connection string: '/' at beginning or end of:/`I\"mZXbj5eAQ*335544323
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      DbAttachInfo dbAttachInfo0 = null;
      try {
        dbAttachInfo0 = new DbAttachInfo("");
        fail("Expecting exception: GDSException");
      } catch(GDSException e) {
        /*
         * Bad connection string: ':' at beginning or end of:335544323
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      DbAttachInfo dbAttachInfo0 = null;
      try {
        dbAttachInfo0 = new DbAttachInfo("/CZnI4+L+:ZL");
        fail("Expecting exception: GDSException");
      } catch(GDSException e) {
        /*
         * Bad server string: '/' at beginning or end of: /CZnI4+L+335544323
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      DbAttachInfo dbAttachInfo0 = null;
      try {
        dbAttachInfo0 = new DbAttachInfo("94vZ7/:b");
        fail("Expecting exception: GDSException");
      } catch(GDSException e) {
        /*
         * Bad server string: '/' at beginning or end of: 94vZ7/335544323
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      DbAttachInfo dbAttachInfo0 = null;
      try {
        dbAttachInfo0 = new DbAttachInfo(")I/):;mh4MZ");
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
        /*
         * For input string: \")\"
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      Integer integer0 = new Integer(475);
      DbAttachInfo dbAttachInfo0 = null;
      try {
        dbAttachInfo0 = new DbAttachInfo((String) null, integer0, (String) null);
        fail("Expecting exception: GDSException");
      } catch(GDSException e) {
        /*
         * null or empty filename in DbAttachInfo
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      DbAttachInfo dbAttachInfo0 = null;
      try {
        dbAttachInfo0 = new DbAttachInfo("", (Integer) 3050, "");
        fail("Expecting exception: GDSException");
      } catch(GDSException e) {
        /*
         * null or empty filename in DbAttachInfo
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("wT_l\"yA}5y5)rPH", (Integer) null, "wT_l\"yA}5y5)rPH");
      assertNotNull(dbAttachInfo0);
      assertEquals("wT_l\"yA}5y5)rPH", dbAttachInfo0.getServer());
      assertEquals(3050, dbAttachInfo0.getPort());
  }
}
