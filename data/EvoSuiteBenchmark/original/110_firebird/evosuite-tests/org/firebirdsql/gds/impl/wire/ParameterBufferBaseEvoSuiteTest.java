/*
 * This file was automatically generated by EvoSuite
 */

package org.firebirdsql.gds.impl.wire;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.firebirdsql.gds.impl.wire.BlobParameterBufferImp;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.wire.ParameterBufferBase;
import org.firebirdsql.gds.impl.wire.TransactionParameterBufferImpl;
import org.firebirdsql.gds.impl.wire.WireXdrInputStream;
import org.firebirdsql.gds.impl.wire.XdrInputStream;
import org.firebirdsql.gds.impl.wire.XdrOutputStream;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ParameterBufferBaseEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ParameterBufferBase parameterBufferBase0 = new ParameterBufferBase();
      parameterBufferBase0.addArgument((-805));
      int int0 = parameterBufferBase0.hashCode();
      assertEquals(1, parameterBufferBase0.getLength());
      assertEquals((-774), int0);
  }

  @Test
  public void test1()  throws Throwable  {
      ParameterBufferBase parameterBufferBase0 = new ParameterBufferBase();
      parameterBufferBase0.addArgument((-805));
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream((OutputStream) null);
      parameterBufferBase0.write(xdrOutputStream0);
      assertEquals(1, parameterBufferBase0.getLength());
  }

  @Test
  public void test2()  throws Throwable  {
      BlobParameterBufferImp blobParameterBufferImp0 = new BlobParameterBufferImp();
      blobParameterBufferImp0.addArgument((-2005));
      int int0 = blobParameterBufferImp0.getLength();
      assertEquals(1, blobParameterBufferImp0.getLength());
      assertEquals(1, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      ParameterBufferBase parameterBufferBase0 = new ParameterBufferBase();
      parameterBufferBase0.addArgument((-805));
      int int0 = parameterBufferBase0.getArgumentAsInt(0);
      assertEquals(1, parameterBufferBase0.getLength());
      assertEquals(0, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      ParameterBufferBase parameterBufferBase0 = new ParameterBufferBase();
      parameterBufferBase0.addArgument(898, "");
      parameterBufferBase0.removeArgument((int) (byte)0);
      assertEquals(2, parameterBufferBase0.getLength());
  }

  @Test
  public void test5()  throws Throwable  {
      ParameterBufferBase parameterBufferBase0 = new ParameterBufferBase();
      WireXdrInputStream wireXdrInputStream0 = new WireXdrInputStream();
      parameterBufferBase0.read((XdrInputStream) wireXdrInputStream0, (-805));
      assertEquals(0, parameterBufferBase0.getLength());
  }

  @Test
  public void test6()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      byte[] byteArray0 = new byte[15];
      databaseParameterBufferImp0.addArgument(0, byteArray0);
      boolean boolean0 = databaseParameterBufferImp0.hasArgument(0);
      assertEquals(17, databaseParameterBufferImp0.getLength());
      assertEquals(true, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument(0, 0);
      boolean boolean0 = databaseParameterBufferImp0.hasArgument((int) (byte)29);
      assertEquals(6, databaseParameterBufferImp0.getLength());
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      ParameterBufferBase.StringArgument parameterBufferBase_StringArgument0 = new ParameterBufferBase.StringArgument(1812, "fFAq;ZBC0rkim/&");
      int int0 = parameterBufferBase_StringArgument0.getLength();
      assertEquals(17, int0);
      assertEquals(1812, parameterBufferBase_StringArgument0.getType());
  }

  @Test
  public void test9()  throws Throwable  {
      ParameterBufferBase.StringArgument parameterBufferBase_StringArgument0 = new ParameterBufferBase.StringArgument(0, "");
      String string0 = parameterBufferBase_StringArgument0.getValueAsString();
      assertNotNull(string0);
      assertEquals(0, parameterBufferBase_StringArgument0.getType());
  }

  @Test
  public void test10()  throws Throwable  {
      ParameterBufferBase.StringArgument parameterBufferBase_StringArgument0 = new ParameterBufferBase.StringArgument(1497, "8");
      PipedInputStream pipedInputStream0 = new PipedInputStream(1497);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream((OutputStream) pipedOutputStream0);
      parameterBufferBase_StringArgument0.writeTo(xdrOutputStream0);
  }

  @Test
  public void test11()  throws Throwable  {
      ParameterBufferBase.StringArgument parameterBufferBase_StringArgument0 = new ParameterBufferBase.StringArgument(1812, "fFAq;ZBC0rkim/&");
      int int0 = parameterBufferBase_StringArgument0.hashCode();
      assertEquals(1812, parameterBufferBase_StringArgument0.getType());
      assertEquals((-727502604), int0);
  }

  @Test
  public void test12()  throws Throwable  {
      ParameterBufferBase.StringArgument parameterBufferBase_StringArgument0 = new ParameterBufferBase.StringArgument(1497, "8");
      int int0 = parameterBufferBase_StringArgument0.getValueAsInt();
      assertEquals(8, int0);
      assertEquals(1497, parameterBufferBase_StringArgument0.getType());
  }

  @Test
  public void test13()  throws Throwable  {
      ParameterBufferBase.NumericArgument parameterBufferBase_NumericArgument0 = new ParameterBufferBase.NumericArgument((-732), (-732));
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream((OutputStream) null);
      parameterBufferBase_NumericArgument0.writeValue(xdrOutputStream0, (-732));
      assertEquals(-732, parameterBufferBase_NumericArgument0.getValueAsInt());
      assertEquals(-732, parameterBufferBase_NumericArgument0.getType());
  }

  @Test
  public void test14()  throws Throwable  {
      ParameterBufferBase.NumericArgument parameterBufferBase_NumericArgument0 = new ParameterBufferBase.NumericArgument(898, 0);
      // Undeclared exception!
      try {
        parameterBufferBase_NumericArgument0.writeTo((XdrOutputStream) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      ParameterBufferBase.NumericArgument parameterBufferBase_NumericArgument0 = new ParameterBufferBase.NumericArgument(898, 0);
      int int0 = parameterBufferBase_NumericArgument0.getValueAsInt();
      assertEquals(898, parameterBufferBase_NumericArgument0.getType());
      assertEquals(0, int0);
  }

  @Test
  public void test16()  throws Throwable  {
      ParameterBufferBase.NumericArgument parameterBufferBase_NumericArgument0 = new ParameterBufferBase.NumericArgument(898, 0);
      int int0 = parameterBufferBase_NumericArgument0.hashCode();
      assertEquals(898, int0);
      assertEquals(0, parameterBufferBase_NumericArgument0.getValueAsInt());
  }

  @Test
  public void test17()  throws Throwable  {
      ParameterBufferBase.NumericArgument parameterBufferBase_NumericArgument0 = new ParameterBufferBase.NumericArgument(0, 0);
      int int0 = parameterBufferBase_NumericArgument0.getLength();
      assertEquals(6, int0);
      assertEquals(0, parameterBufferBase_NumericArgument0.getType());
      assertEquals(0, parameterBufferBase_NumericArgument0.getValueAsInt());
  }

  @Test
  public void test18()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      byte[] byteArray0 = new byte[4];
      databaseParameterBufferImp0.addArgument(0, byteArray0);
      // Undeclared exception!
      try {
        databaseParameterBufferImp0.getArgumentAsString((int) (byte)0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * Cannot get the value for this argument type as a string
         */
      }
  }

  @Test
  public void test19()  throws Throwable  {
      ParameterBufferBase parameterBufferBase0 = new ParameterBufferBase();
      parameterBufferBase0.addArgument(1591);
      // Undeclared exception!
      try {
        parameterBufferBase0.getArgumentAsInt(1591);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * Cannot get the value of this argument type as int
         */
      }
  }

  @Test
  public void test20()  throws Throwable  {
      ParameterBufferBase parameterBufferBase0 = new ParameterBufferBase();
      byte[] byteArray0 = new byte[6];
      parameterBufferBase0.addArgument((-732), byteArray0);
      int int0 = parameterBufferBase0.hashCode();
      assertEquals(8, parameterBufferBase0.getLength());
      assertEquals((-701), int0);
  }

  @Test
  public void test21()  throws Throwable  {
      ParameterBufferBase parameterBufferBase0 = new ParameterBufferBase();
      byte[] byteArray0 = new byte[6];
      parameterBufferBase0.addArgument((-732), byteArray0);
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream((OutputStream) null);
      parameterBufferBase0.write(xdrOutputStream0);
      assertEquals(8, parameterBufferBase0.getLength());
  }

  @Test
  public void test22()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      byte[] byteArray0 = new byte[4];
      databaseParameterBufferImp0.addArgument(0, byteArray0);
      int int0 = databaseParameterBufferImp0.getLength();
      assertEquals(6, databaseParameterBufferImp0.getLength());
      assertEquals(6, int0);
  }

  @Test
  public void test23()  throws Throwable  {
      ParameterBufferBase parameterBufferBase0 = new ParameterBufferBase();
      parameterBufferBase0.addArgument((-805));
      parameterBufferBase0.getArgumentAsString(0);
      assertEquals(1, parameterBufferBase0.getLength());
  }

  @Test
  public void test24()  throws Throwable  {
      ParameterBufferBase parameterBufferBase0 = new ParameterBufferBase();
      byte[] byteArray0 = new byte[6];
      parameterBufferBase0.addArgument(0, byteArray0);
      assertEquals(8, parameterBufferBase0.getLength());
      
      parameterBufferBase0.removeArgument((int) (byte)0);
      assertEquals(0, parameterBufferBase0.getLength());
  }

  @Test
  public void test25()  throws Throwable  {
      ParameterBufferBase parameterBufferBase0 = new ParameterBufferBase();
      boolean boolean0 = parameterBufferBase0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test26()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      boolean boolean0 = databaseParameterBufferImp0.equals((Object) "java.security.Permissions@2dc42474 (\n)\n");
      assertEquals(false, boolean0);
  }

  @Test
  public void test27()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = new TransactionParameterBufferImpl();
      boolean boolean0 = databaseParameterBufferImp0.equals((Object) transactionParameterBufferImpl0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test28()  throws Throwable  {
      ParameterBufferBase.StringArgument parameterBufferBase_StringArgument0 = new ParameterBufferBase.StringArgument((-387), "");
      boolean boolean0 = parameterBufferBase_StringArgument0.equals((Object) null);
      assertEquals(false, boolean0);
      assertEquals(-387, parameterBufferBase_StringArgument0.getType());
  }

  @Test
  public void test29()  throws Throwable  {
      ParameterBufferBase.StringArgument parameterBufferBase_StringArgument0 = new ParameterBufferBase.StringArgument((-387), "");
      boolean boolean0 = parameterBufferBase_StringArgument0.equals((Object) parameterBufferBase_StringArgument0);
      assertEquals(-387, parameterBufferBase_StringArgument0.getType());
      assertEquals(true, boolean0);
  }

  @Test
  public void test30()  throws Throwable  {
      ParameterBufferBase.StringArgument parameterBufferBase_StringArgument0 = new ParameterBufferBase.StringArgument(0, "");
      boolean boolean0 = parameterBufferBase_StringArgument0.equals((Object) "");
      assertEquals(false, boolean0);
      assertEquals(0, parameterBufferBase_StringArgument0.getType());
  }

  @Test
  public void test31()  throws Throwable  {
      ParameterBufferBase.StringArgument parameterBufferBase_StringArgument0 = new ParameterBufferBase.StringArgument((-387), "");
      ParameterBufferBase.StringArgument parameterBufferBase_StringArgument1 = new ParameterBufferBase.StringArgument(62, "");
      boolean boolean0 = parameterBufferBase_StringArgument0.equals((Object) parameterBufferBase_StringArgument1);
      assertFalse(parameterBufferBase_StringArgument1.equals(parameterBufferBase_StringArgument0));
      assertEquals(false, boolean0);
      assertEquals(-387, parameterBufferBase_StringArgument0.getType());
  }

  @Test
  public void test32()  throws Throwable  {
      ParameterBufferBase.StringArgument parameterBufferBase_StringArgument0 = new ParameterBufferBase.StringArgument(1812, "fFAq;ZBC0rkim/&");
      ParameterBufferBase.StringArgument parameterBufferBase_StringArgument1 = new ParameterBufferBase.StringArgument(1812, "");
      boolean boolean0 = parameterBufferBase_StringArgument0.equals((Object) parameterBufferBase_StringArgument1);
      assertEquals(1812, parameterBufferBase_StringArgument1.getType());
      assertEquals(false, boolean0);
  }

  @Test
  public void test33()  throws Throwable  {
      ParameterBufferBase.NumericArgument parameterBufferBase_NumericArgument0 = new ParameterBufferBase.NumericArgument(62, (-387));
      boolean boolean0 = parameterBufferBase_NumericArgument0.equals((Object) null);
      assertEquals(62, parameterBufferBase_NumericArgument0.getType());
      assertEquals(false, boolean0);
      assertEquals(-387, parameterBufferBase_NumericArgument0.getValueAsInt());
  }

  @Test
  public void test34()  throws Throwable  {
      ParameterBufferBase.NumericArgument parameterBufferBase_NumericArgument0 = new ParameterBufferBase.NumericArgument((-805), (-805));
      boolean boolean0 = parameterBufferBase_NumericArgument0.equals((Object) parameterBufferBase_NumericArgument0);
      assertEquals(-805, parameterBufferBase_NumericArgument0.getValueAsInt());
      assertEquals(-805, parameterBufferBase_NumericArgument0.getType());
      assertEquals(true, boolean0);
  }

  @Test
  public void test35()  throws Throwable  {
      ParameterBufferBase.NumericArgument parameterBufferBase_NumericArgument0 = new ParameterBufferBase.NumericArgument(1812, 654182136);
      boolean boolean0 = parameterBufferBase_NumericArgument0.equals((Object) "");
      assertEquals(1812, parameterBufferBase_NumericArgument0.getType());
      assertEquals(654182136, parameterBufferBase_NumericArgument0.getValueAsInt());
      assertEquals(false, boolean0);
  }

  @Test
  public void test36()  throws Throwable  {
      ParameterBufferBase.NumericArgument parameterBufferBase_NumericArgument0 = new ParameterBufferBase.NumericArgument((-805), (-805));
      ParameterBufferBase.NumericArgument parameterBufferBase_NumericArgument1 = new ParameterBufferBase.NumericArgument(0, 0);
      boolean boolean0 = parameterBufferBase_NumericArgument0.equals((Object) parameterBufferBase_NumericArgument1);
      assertEquals(-805, parameterBufferBase_NumericArgument0.getType());
      assertEquals(false, boolean0);
      assertEquals(-805, parameterBufferBase_NumericArgument0.getValueAsInt());
  }

  @Test
  public void test37()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      byte[] byteArray0 = new byte[15];
      databaseParameterBufferImp0.addArgument(0, byteArray0);
      // Undeclared exception!
      try {
        databaseParameterBufferImp0.getArgumentAsInt(0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * This method is not supported for byte arrays with length > 1
         */
      }
  }

  @Test
  public void test38()  throws Throwable  {
      ParameterBufferBase parameterBufferBase0 = new ParameterBufferBase();
      byte[] byteArray0 = new byte[1];
      parameterBufferBase0.addArgument((-131), byteArray0);
      parameterBufferBase0.getArgumentAsInt((-131));
      assertEquals(3, parameterBufferBase0.getLength());
  }
}
