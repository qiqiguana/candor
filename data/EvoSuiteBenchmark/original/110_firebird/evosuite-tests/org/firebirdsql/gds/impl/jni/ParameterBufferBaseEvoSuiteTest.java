/*
 * This file was automatically generated by EvoSuite
 */

package org.firebirdsql.gds.impl.jni;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.ByteArrayOutputStream;
import org.firebirdsql.gds.impl.jni.BlobParameterBufferImp;
import org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.jni.ParameterBufferBase;
import org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ParameterBufferBaseEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = new TransactionParameterBufferImpl();
      transactionParameterBufferImpl0.addArgument(11, "?K");
      String string0 = transactionParameterBufferImpl0.getArgumentAsString(11);
      assertEquals("?K", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument(142);
      DatabaseParameterBufferImp databaseParameterBufferImp1 = (DatabaseParameterBufferImp)databaseParameterBufferImp0.removeExtensionParams();
      assertNotNull(databaseParameterBufferImp1);
      assertFalse(databaseParameterBufferImp0.equals(databaseParameterBufferImp1));
  }

  @Test
  public void test2()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      byte[] byteArray0 = new byte[27];
      databaseParameterBufferImp0.addArgument(13, byteArray0);
      int int0 = databaseParameterBufferImp0.hashCode();
      assertEquals(44, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      BlobParameterBufferImp blobParameterBufferImp0 = new BlobParameterBufferImp();
      blobParameterBufferImp0.addArgument(22, (byte) (-1));
      byte[] byteArray0 = blobParameterBufferImp0.getBytesForNativeCode();
      assertNotNull(byteArray0);
  }

  @Test
  public void test4()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument(86, 0);
  }

  @Test
  public void test5()  throws Throwable  {
      ParameterBufferBase.StringArgument parameterBufferBase_StringArgument0 = new ParameterBufferBase.StringArgument(142, "+F*");
      int int0 = parameterBufferBase_StringArgument0.hashCode();
      assertEquals(142, parameterBufferBase_StringArgument0.getType());
      assertEquals(43535, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      ParameterBufferBase.StringArgument parameterBufferBase_StringArgument0 = new ParameterBufferBase.StringArgument(1019, (String) null);
      // Undeclared exception!
      try {
        parameterBufferBase_StringArgument0.getValueAsInt();
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
        /*
         * null
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = new TransactionParameterBufferImpl();
      byte[] byteArray0 = new byte[1];
      transactionParameterBufferImpl0.addArgument(1145, byteArray0);
      boolean boolean0 = transactionParameterBufferImpl0.hasArgument(1145);
      assertEquals(true, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      byte[] byteArray0 = new byte[27];
      databaseParameterBufferImp0.addArgument(13, byteArray0);
      byte[] byteArray1 = databaseParameterBufferImp0.getBytesForNativeCode();
      assertFalse(byteArray1.equals(byteArray0));
  }

  @Test
  public void test9()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument(13);
      byte[] byteArray0 = databaseParameterBufferImp0.getBytesForNativeCode();
      assertNotNull(byteArray0);
  }

  @Test
  public void test10()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument(13);
      int int0 = databaseParameterBufferImp0.hashCode();
      assertEquals(44, int0);
  }

  @Test
  public void test11()  throws Throwable  {
      ParameterBufferBase.NumericArgument parameterBufferBase_NumericArgument0 = new ParameterBufferBase.NumericArgument(4, 4);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      parameterBufferBase_NumericArgument0.writeValue(byteArrayOutputStream0, 4);
      assertEquals(4, byteArrayOutputStream0.size());
      assertEquals("\u0004\u0000\u0000\u0000", byteArrayOutputStream0.toString());
  }

  @Test
  public void test12()  throws Throwable  {
      ParameterBufferBase.NumericArgument parameterBufferBase_NumericArgument0 = new ParameterBufferBase.NumericArgument(1019, 1019);
      int int0 = parameterBufferBase_NumericArgument0.hashCode();
      assertEquals(1019, parameterBufferBase_NumericArgument0.getValueAsInt());
      assertEquals(1019, int0);
  }

  @Test
  public void test13()  throws Throwable  {
      BlobParameterBufferImp blobParameterBufferImp0 = new BlobParameterBufferImp();
      blobParameterBufferImp0.addArgument(22, (byte) (-1));
      boolean boolean0 = blobParameterBufferImp0.hasArgument((int) (byte) (-1));
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      ParameterBufferBase.NumericArgument parameterBufferBase_NumericArgument0 = new ParameterBufferBase.NumericArgument(512, 512);
      int int0 = parameterBufferBase_NumericArgument0.getValueAsInt();
      assertEquals(512, int0);
      assertEquals(512, parameterBufferBase_NumericArgument0.getType());
  }

  @Test
  public void test15()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument(0);
      // Undeclared exception!
      try {
        databaseParameterBufferImp0.getArgumentAsInt(0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * Cannot get the value of this argument type as int
         */
      }
  }

  @Test
  public void test16()  throws Throwable  {
      ParameterBufferBase.NumericArgument parameterBufferBase_NumericArgument0 = new ParameterBufferBase.NumericArgument(13, 13);
      // Undeclared exception!
      try {
        parameterBufferBase_NumericArgument0.getValueAsString();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * Cannot get the value for this argument type as a string
         */
      }
  }

  @Test
  public void test17()  throws Throwable  {
      BlobParameterBufferImp blobParameterBufferImp0 = new BlobParameterBufferImp();
      blobParameterBufferImp0.addArgument(22, (byte) (-1));
      String string0 = blobParameterBufferImp0.getArgumentAsString((int) (byte) (-1));
      assertNull(string0);
  }

  @Test
  public void test18()  throws Throwable  {
      BlobParameterBufferImp blobParameterBufferImp0 = new BlobParameterBufferImp();
      blobParameterBufferImp0.addArgument(22, (byte) (-1));
      int int0 = blobParameterBufferImp0.getArgumentAsInt((int) (byte) (-1));
      assertEquals(0, int0);
  }

  @Test
  public void test19()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      boolean boolean0 = databaseParameterBufferImp0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test20()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      boolean boolean0 = databaseParameterBufferImp0.equals((Object) "");
      assertEquals(false, boolean0);
  }

  @Test
  public void test21()  throws Throwable  {
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = new TransactionParameterBufferImpl();
      boolean boolean0 = transactionParameterBufferImpl0.equals((Object) transactionParameterBufferImpl0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test22()  throws Throwable  {
      ParameterBufferBase.StringArgument parameterBufferBase_StringArgument0 = new ParameterBufferBase.StringArgument(21, "2^oBcsqd)LPXvMd%9pS");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      parameterBufferBase_StringArgument0.writeTo(byteArrayOutputStream0);
      assertEquals(21, byteArrayOutputStream0.size());
      assertEquals(21, parameterBufferBase_StringArgument0.getType());
  }

  @Test
  public void test23()  throws Throwable  {
      ParameterBufferBase.StringArgument parameterBufferBase_StringArgument0 = new ParameterBufferBase.StringArgument(1019, (String) null);
      boolean boolean0 = parameterBufferBase_StringArgument0.equals((Object) null);
      assertEquals(false, boolean0);
      assertEquals(1019, parameterBufferBase_StringArgument0.getType());
  }

  @Test
  public void test24()  throws Throwable  {
      ParameterBufferBase.StringArgument parameterBufferBase_StringArgument0 = new ParameterBufferBase.StringArgument(21, "");
      boolean boolean0 = parameterBufferBase_StringArgument0.equals((Object) parameterBufferBase_StringArgument0);
      assertEquals(21, parameterBufferBase_StringArgument0.getType());
      assertEquals(true, boolean0);
  }

  @Test
  public void test25()  throws Throwable  {
      ParameterBufferBase.StringArgument parameterBufferBase_StringArgument0 = new ParameterBufferBase.StringArgument(1208, "");
      boolean boolean0 = parameterBufferBase_StringArgument0.equals((Object) 1208);
      assertEquals(false, boolean0);
      assertEquals(1208, parameterBufferBase_StringArgument0.getType());
  }

  @Test
  public void test26()  throws Throwable  {
      ParameterBufferBase.StringArgument parameterBufferBase_StringArgument0 = new ParameterBufferBase.StringArgument(1145, "'8)<r");
      ParameterBufferBase.StringArgument parameterBufferBase_StringArgument1 = new ParameterBufferBase.StringArgument(0, "'8)<r");
      boolean boolean0 = parameterBufferBase_StringArgument0.equals((Object) parameterBufferBase_StringArgument1);
      assertFalse(parameterBufferBase_StringArgument1.equals(parameterBufferBase_StringArgument0));
      assertEquals(1145, parameterBufferBase_StringArgument0.getType());
      assertEquals(false, boolean0);
  }

  @Test
  public void test27()  throws Throwable  {
      ParameterBufferBase.StringArgument parameterBufferBase_StringArgument0 = new ParameterBufferBase.StringArgument(21, "");
      ParameterBufferBase.StringArgument parameterBufferBase_StringArgument1 = new ParameterBufferBase.StringArgument(21, "2^oBcsqd)LPXvMd%9pS");
      boolean boolean0 = parameterBufferBase_StringArgument0.equals((Object) parameterBufferBase_StringArgument1);
      assertEquals(21, parameterBufferBase_StringArgument1.getType());
      assertEquals(false, boolean0);
  }

  @Test
  public void test28()  throws Throwable  {
      ParameterBufferBase.NumericArgument parameterBufferBase_NumericArgument0 = new ParameterBufferBase.NumericArgument(847, 847);
      boolean boolean0 = parameterBufferBase_NumericArgument0.equals((Object) null);
      assertEquals(847, parameterBufferBase_NumericArgument0.getType());
      assertEquals(false, boolean0);
      assertEquals(847, parameterBufferBase_NumericArgument0.getValueAsInt());
  }

  @Test
  public void test29()  throws Throwable  {
      ParameterBufferBase.NumericArgument parameterBufferBase_NumericArgument0 = new ParameterBufferBase.NumericArgument(86, 86);
      boolean boolean0 = parameterBufferBase_NumericArgument0.equals((Object) parameterBufferBase_NumericArgument0);
      assertEquals(86, parameterBufferBase_NumericArgument0.getValueAsInt());
      assertEquals(true, boolean0);
      assertEquals(86, parameterBufferBase_NumericArgument0.getType());
  }

  @Test
  public void test30()  throws Throwable  {
      ParameterBufferBase.NumericArgument parameterBufferBase_NumericArgument0 = new ParameterBufferBase.NumericArgument(4, 4);
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = new TransactionParameterBufferImpl();
      boolean boolean0 = parameterBufferBase_NumericArgument0.equals((Object) transactionParameterBufferImpl0);
      assertEquals(4, parameterBufferBase_NumericArgument0.getType());
      assertEquals(false, boolean0);
      assertEquals(4, parameterBufferBase_NumericArgument0.getValueAsInt());
  }

  @Test
  public void test31()  throws Throwable  {
      ParameterBufferBase.NumericArgument parameterBufferBase_NumericArgument0 = new ParameterBufferBase.NumericArgument(4, 4);
      ParameterBufferBase.NumericArgument parameterBufferBase_NumericArgument1 = new ParameterBufferBase.NumericArgument(131, 131);
      boolean boolean0 = parameterBufferBase_NumericArgument0.equals((Object) parameterBufferBase_NumericArgument1);
      assertEquals(4, parameterBufferBase_NumericArgument0.getValueAsInt());
      assertEquals(4, parameterBufferBase_NumericArgument0.getType());
      assertEquals(false, boolean0);
  }

  @Test
  public void test32()  throws Throwable  {
      ParameterBufferBase.NumericArgument parameterBufferBase_NumericArgument0 = new ParameterBufferBase.NumericArgument(86, 86);
      ParameterBufferBase.NumericArgument parameterBufferBase_NumericArgument1 = new ParameterBufferBase.NumericArgument(86, 0);
      boolean boolean0 = parameterBufferBase_NumericArgument0.equals((Object) parameterBufferBase_NumericArgument1);
      assertEquals(86, parameterBufferBase_NumericArgument0.getValueAsInt());
      assertEquals(false, boolean0);
      assertFalse(parameterBufferBase_NumericArgument1.equals(parameterBufferBase_NumericArgument0));
      assertEquals(86, parameterBufferBase_NumericArgument1.getType());
  }

  @Test
  public void test33()  throws Throwable  {
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = new TransactionParameterBufferImpl();
      byte[] byteArray0 = new byte[11];
      transactionParameterBufferImpl0.addArgument(1151, byteArray0);
      // Undeclared exception!
      try {
        transactionParameterBufferImpl0.getArgumentAsInt(1151);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * This method is not supported for byte arrays with length > 1
         */
      }
  }

  @Test
  public void test34()  throws Throwable  {
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = new TransactionParameterBufferImpl();
      byte[] byteArray0 = new byte[1];
      transactionParameterBufferImpl0.addArgument(1145, byteArray0);
      int int0 = transactionParameterBufferImpl0.getArgumentAsInt(1145);
      assertEquals(0, int0);
  }
}
