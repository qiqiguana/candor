/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.core.qual;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Collection;
import java.util.LinkedList;
import org.jcvi.jillion.core.qual.DefaultQualitySymbolCodec;
import org.jcvi.jillion.core.qual.PhredQuality;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DefaultQualitySymbolCodecEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultQualitySymbolCodec defaultQualitySymbolCodec0 = DefaultQualitySymbolCodec.INSTANCE;
      LinkedList<PhredQuality> linkedList0 = new LinkedList<PhredQuality>();
      byte[] byteArray0 = defaultQualitySymbolCodec0.encode((Collection<PhredQuality>) linkedList0);
      int int0 = defaultQualitySymbolCodec0.decodedLengthOf(byteArray0);
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultQualitySymbolCodec defaultQualitySymbolCodec0 = DefaultQualitySymbolCodec.INSTANCE;
      LinkedList<PhredQuality> linkedList0 = new LinkedList<PhredQuality>();
      byte[] byteArray0 = defaultQualitySymbolCodec0.encode((Collection<PhredQuality>) linkedList0);
      // Undeclared exception!
      try {
        defaultQualitySymbolCodec0.decode(byteArray0, (long) 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 1
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultQualitySymbolCodec defaultQualitySymbolCodec0 = DefaultQualitySymbolCodec.INSTANCE;
      LinkedList<PhredQuality> linkedList0 = new LinkedList<PhredQuality>();
      PhredQuality phredQuality0 = PhredQuality.valueOf(0);
      linkedList0.addFirst(phredQuality0);
      byte[] byteArray0 = defaultQualitySymbolCodec0.encode((Collection<PhredQuality>) linkedList0);
      assertNotNull(byteArray0);
  }
}
