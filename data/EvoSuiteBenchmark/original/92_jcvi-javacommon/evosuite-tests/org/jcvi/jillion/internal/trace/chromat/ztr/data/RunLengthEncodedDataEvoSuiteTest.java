/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.internal.trace.chromat.ztr.data;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.nio.BufferOverflowException;
import org.evosuite.testcase.TestCaseExecutor;
import org.jcvi.jillion.internal.trace.chromat.ztr.data.RunLengthEncodedData;
import org.jcvi.jillion.trace.TraceDecoderException;
import org.jcvi.jillion.trace.TraceEncoderException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RunLengthEncodedDataEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RunLengthEncodedData runLengthEncodedData0 = RunLengthEncodedData.INSTANCE;
      byte[] byteArray0 = new byte[60];
      byte[] byteArray1 = runLengthEncodedData0.encodeData(byteArray0);
      byte[] byteArray2 = runLengthEncodedData0.parseData(byteArray1);
      assertFalse(byteArray2.equals(byteArray1));
  }

  @Test
  public void test1()  throws Throwable  {
      RunLengthEncodedData runLengthEncodedData0 = RunLengthEncodedData.INSTANCE;
      byte[] byteArray0 = new byte[25];
      byteArray0[5] = (byte)31;
      // Undeclared exception!
      try {
        runLengthEncodedData0.parseData(byteArray0);
        fail("Expecting exception: BufferOverflowException");
      } catch(BufferOverflowException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      RunLengthEncodedData runLengthEncodedData0 = RunLengthEncodedData.INSTANCE;
      byte[] byteArray0 = new byte[10];
      byteArray0[3] = (byte)13;
      byte[] byteArray1 = runLengthEncodedData0.encodeData(byteArray0, (byte)0);
      assertFalse(byteArray0.equals(byteArray1));
  }

  @Test
  public void test3()  throws Throwable  {
      RunLengthEncodedData runLengthEncodedData0 = RunLengthEncodedData.INSTANCE;
      byte[] byteArray0 = new byte[10];
      runLengthEncodedData0.getDeclaringClass();
      byteArray0[3] = (byte)13;
      byte[] byteArray1 = runLengthEncodedData0.parseData(byteArray0);
      runLengthEncodedData0.encodeData(byteArray1, (byte)0);
  }
}
