/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.internal.trace.chromat.ztr;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.OutputStream;
import org.jcvi.jillion.internal.trace.chromat.ztr.IOLibLikeZtrChromatogramWriter;
import org.jcvi.jillion.trace.TraceEncoderException;
import org.jcvi.jillion.trace.chromat.Chromatogram;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class IOLibLikeZtrChromatogramWriterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      IOLibLikeZtrChromatogramWriter iOLibLikeZtrChromatogramWriter0 = IOLibLikeZtrChromatogramWriter.INSTANCE;
      // Undeclared exception!
      try {
        iOLibLikeZtrChromatogramWriter0.write((Chromatogram) null, (OutputStream) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * chromatogram can not be null
         */
      }
  }
}
