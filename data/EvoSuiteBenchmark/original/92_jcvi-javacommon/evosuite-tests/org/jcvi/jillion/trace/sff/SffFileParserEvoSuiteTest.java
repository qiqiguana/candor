/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.trace.sff;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import org.jcvi.jillion.trace.sff.SffDecoderException;
import org.jcvi.jillion.trace.sff.SffFileParser;
import org.jcvi.jillion.trace.sff.SffFileParserCallback;
import org.jcvi.jillion.trace.sff.SffFileVisitor;

@RunWith(EvoSuiteRunner.class)
public class SffFileParserEvoSuiteTest {


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 org.jcvi.jillion.trace.sff.SffFileParser$InputStreamBasedSffParser.accept(Lorg/jcvi/jillion/trace/sff/SffFileVisitor;Lorg/jcvi/jillion/trace/sff/SffFileParserCallback$SffFileMemento;)V: root-Branch
   * 2 org.jcvi.jillion.trace.sff.SffFileParser$InputStreamBasedSffParser.<init>(Ljava/io/InputStream;)V: root-Branch
   * 3 org.jcvi.jillion.trace.sff.SffFileParser.create(Ljava/io/InputStream;)Lorg/jcvi/jillion/trace/sff/SffFileParser;: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SffFileParser sffFileParser0 = SffFileParser.create((InputStream) pipedInputStream0);
      // Undeclared exception!
      try {
        sffFileParser0.accept((SffFileVisitor) null, (SffFileParserCallback.SffFileMemento) null);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * can not accept mementos when inputStream is provided
         */
      }
  }

  //Test case number: 1
  /*
   * 4 covered goals:
   * 1 org.jcvi.jillion.trace.sff.SffFileParser$FileBasesSffParser.accept(Lorg/jcvi/jillion/trace/sff/SffFileVisitor;)V: I3 Branch 3 IFNONNULL L342 - false
   * 2 org.jcvi.jillion.trace.sff.SffFileParser$FileBasesSffParser.<init>(Ljava/io/File;)V: I20 Branch 2 IFNE L327 - true
   * 3 org.jcvi.jillion.trace.sff.SffFileParser$FileBasesSffParser.<init>(Ljava/io/File;)V: I8 Branch 1 IFNONNULL L324 - true
   * 4 org.jcvi.jillion.trace.sff.SffFileParser.create(Ljava/io/File;)Lorg/jcvi/jillion/trace/sff/SffFileParser;: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      File file0 = new File("", "");
      SffFileParser sffFileParser0 = SffFileParser.create(file0);
      // Undeclared exception!
      try {
        sffFileParser0.accept((SffFileVisitor) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * visitor can not be null
         */
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 org.jcvi.jillion.trace.sff.SffFileParser$InputStreamBasedSffParser.accept(Lorg/jcvi/jillion/trace/sff/SffFileVisitor;)V: I5 Branch 13 IFNE L264 - true
   */
  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) byteArrayInputStream0, (int) (byte)1);
      SffFileParser sffFileParser0 = SffFileParser.create((InputStream) pushbackInputStream0);
      try {
        sffFileParser0.accept((SffFileVisitor) null);
        fail("Expecting exception: TraceDecoderException");
      } catch(TraceDecoderException e) {
        /*
         * error decoding sff file
         */
      }
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 org.jcvi.jillion.trace.sff.SffFileParser$InputStreamBasedSffParser.accept(Lorg/jcvi/jillion/trace/sff/SffFileVisitor;)V: I5 Branch 13 IFNE L264 - false
   * 2 org.jcvi.jillion.trace.sff.SffFileParser$InputStreamBasedSffParser.<init>(Ljava/io/InputStream;)V: root-Branch
   * 3 org.jcvi.jillion.trace.sff.SffFileParser.create(Ljava/io/InputStream;)Lorg/jcvi/jillion/trace/sff/SffFileParser;: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SffFileParser sffFileParser0 = SffFileParser.create((InputStream) pipedInputStream0);
      try {
        sffFileParser0.accept((SffFileVisitor) null);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * inputstream is not open
         */
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 org.jcvi.jillion.trace.sff.SffFileParser$FileBasesSffParser.<init>(Ljava/io/File;)V: I8 Branch 1 IFNONNULL L324 - false
   */
  @Test
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try {
        SffFileParser.create((File) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * sff file can not be null
         */
      }
  }

  //Test case number: 5
  /*
   * 3 covered goals:
   * 1 org.jcvi.jillion.trace.sff.SffFileParser$FileBasesSffParser.<init>(Ljava/io/File;)V: I20 Branch 2 IFNE L327 - false
   * 2 org.jcvi.jillion.trace.sff.SffFileParser$FileBasesSffParser.<init>(Ljava/io/File;)V: I8 Branch 1 IFNONNULL L324 - true
   * 3 org.jcvi.jillion.trace.sff.SffFileParser.create(Ljava/io/File;)Lorg/jcvi/jillion/trace/sff/SffFileParser;: root-Branch
   */
  @Test
  public void test5()  throws Throwable  {
      File file0 = new File("");
      try {
        SffFileParser.create(file0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
        /*
         * sff file /scratch/gordon/test_sf110/sf110/92_jcvi-javacommon does not exist
         */
      }
  }
}
