/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.assembly.clc.cas;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.jcvi.jillion.assembly.clc.cas.CasAlignment;
import org.jcvi.jillion.assembly.clc.cas.CasAlignmentRegion;
import org.jcvi.jillion.assembly.clc.cas.CasAlignmentRegionType;
import org.jcvi.jillion.assembly.clc.cas.DefaultCasAlignment;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DefaultCasAlignmentEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultCasAlignment.Builder defaultCasAlignment_Builder0 = new DefaultCasAlignment.Builder(738L, 738L, true);
      DefaultCasAlignment defaultCasAlignment0 = (DefaultCasAlignment)defaultCasAlignment_Builder0.build();
      assertNotNull(defaultCasAlignment0);
      
      String string0 = defaultCasAlignment0.toString();
      assertEquals("DefaultCasAlignment [contigSequenceId=738, startOfMatch=738, readIsReversed=true, alignmentRegions=[]]", string0);
      assertEquals(true, defaultCasAlignment0.readIsReversed());
      assertNotNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultCasAlignment.Builder defaultCasAlignment_Builder0 = new DefaultCasAlignment.Builder((-7L), (-7L), false);
      DefaultCasAlignment.Builder defaultCasAlignment_Builder1 = defaultCasAlignment_Builder0.addPhaseChange((byte)88);
      assertNotNull(defaultCasAlignment_Builder1);
      
      DefaultCasAlignment defaultCasAlignment0 = (DefaultCasAlignment)defaultCasAlignment_Builder1.build();
      assertNotNull(defaultCasAlignment0);
      
      LinkedList<CasAlignmentRegion> linkedList0 = new LinkedList<CasAlignmentRegion>();
      DefaultCasAlignment defaultCasAlignment1 = new DefaultCasAlignment((-7L), (-7L), false, (List<CasAlignmentRegion>) linkedList0);
      boolean boolean0 = defaultCasAlignment1.equals((Object) defaultCasAlignment0);
      assertEquals((-7L), defaultCasAlignment0.getStartOfMatch());
      assertEquals(false, defaultCasAlignment0.readIsReversed());
      assertEquals(false, boolean0);
      assertEquals((-7L), defaultCasAlignment0.getReferenceIndex());
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultCasAlignment.Builder defaultCasAlignment_Builder0 = new DefaultCasAlignment.Builder(1L, 1L, false);
      CasAlignmentRegionType casAlignmentRegionType0 = CasAlignmentRegionType.DELETION;
      DefaultCasAlignment.Builder defaultCasAlignment_Builder1 = defaultCasAlignment_Builder0.addRegion(casAlignmentRegionType0, 1L);
      assertNotNull(defaultCasAlignment_Builder1);
      
      DefaultCasAlignment defaultCasAlignment0 = (DefaultCasAlignment)defaultCasAlignment_Builder1.build();
      assertNotNull(defaultCasAlignment0);
      
      DefaultCasAlignment.Builder defaultCasAlignment_Builder2 = new DefaultCasAlignment.Builder((CasAlignment) defaultCasAlignment0);
      assertNotNull(defaultCasAlignment_Builder2);
      assertEquals(1L, defaultCasAlignment0.getStartOfMatch());
      assertEquals("DefaultCasAlignment [contigSequenceId=1, startOfMatch=1, readIsReversed=false, alignmentRegions=[DefaultCasAlignmentRegion [type=DELETION, length=1]]]", defaultCasAlignment0.toString());
      assertEquals(1L, defaultCasAlignment0.getReferenceIndex());
  }

  @Test
  public void test3()  throws Throwable  {
      LinkedList<CasAlignmentRegion> linkedList0 = new LinkedList<CasAlignmentRegion>();
      DefaultCasAlignment defaultCasAlignment0 = new DefaultCasAlignment(0L, (long) (byte)44, false, (List<CasAlignmentRegion>) linkedList0);
      int int0 = defaultCasAlignment0.hashCode();
      assertEquals(991703, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      DefaultCasAlignment.Builder defaultCasAlignment_Builder0 = new DefaultCasAlignment.Builder(738L, 738L, true);
      DefaultCasAlignment defaultCasAlignment0 = (DefaultCasAlignment)defaultCasAlignment_Builder0.build();
      assertNotNull(defaultCasAlignment0);
      
      int int0 = defaultCasAlignment0.hashCode();
      assertEquals(true, defaultCasAlignment0.readIsReversed());
      assertEquals(1701429, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      LinkedList<CasAlignmentRegion> linkedList0 = new LinkedList<CasAlignmentRegion>();
      DefaultCasAlignment defaultCasAlignment0 = new DefaultCasAlignment(0L, (long) (byte)44, false, (List<CasAlignmentRegion>) linkedList0);
      boolean boolean0 = defaultCasAlignment0.equals((Object) null);
      assertEquals("DefaultCasAlignment [contigSequenceId=0, startOfMatch=44, readIsReversed=false, alignmentRegions=[]]", defaultCasAlignment0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      DefaultCasAlignment.Builder defaultCasAlignment_Builder0 = new DefaultCasAlignment.Builder(738L, 738L, true);
      DefaultCasAlignment defaultCasAlignment0 = (DefaultCasAlignment)defaultCasAlignment_Builder0.build();
      assertNotNull(defaultCasAlignment0);
      
      boolean boolean0 = defaultCasAlignment0.equals((Object) "DefaultCasAlignment [contigSequenceId=738, startOfMatch=738, readIsReversed=true, alignmentRegions=[]]");
      assertEquals("DefaultCasAlignment [contigSequenceId=738, startOfMatch=738, readIsReversed=true, alignmentRegions=[]]", defaultCasAlignment0.toString());
      assertEquals(true, defaultCasAlignment0.readIsReversed());
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      DefaultCasAlignment.Builder defaultCasAlignment_Builder0 = new DefaultCasAlignment.Builder((-6L), (-6L), false);
      DefaultCasAlignment defaultCasAlignment0 = (DefaultCasAlignment)defaultCasAlignment_Builder0.build();
      assertNotNull(defaultCasAlignment0);
      
      DefaultCasAlignment defaultCasAlignment1 = (DefaultCasAlignment)defaultCasAlignment_Builder0.build();
      boolean boolean0 = defaultCasAlignment0.equals((Object) defaultCasAlignment1);
      assertEquals("DefaultCasAlignment [contigSequenceId=-6, startOfMatch=-6, readIsReversed=false, alignmentRegions=[]]", defaultCasAlignment0.toString());
      assertEquals(true, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      LinkedList<CasAlignmentRegion> linkedList0 = new LinkedList<CasAlignmentRegion>();
      DefaultCasAlignment defaultCasAlignment0 = new DefaultCasAlignment((-189L), (-189L), true, (List<CasAlignmentRegion>) linkedList0);
      DefaultCasAlignment defaultCasAlignment1 = new DefaultCasAlignment(8L, (-189L), true, (List<CasAlignmentRegion>) linkedList0);
      boolean boolean0 = defaultCasAlignment0.equals((Object) defaultCasAlignment1);
      assertEquals(false, boolean0);
      assertEquals("DefaultCasAlignment [contigSequenceId=8, startOfMatch=-189, readIsReversed=true, alignmentRegions=[]]", defaultCasAlignment1.toString());
      assertEquals(true, defaultCasAlignment1.readIsReversed());
      assertFalse(defaultCasAlignment1.equals(defaultCasAlignment0));
  }

  @Test
  public void test9()  throws Throwable  {
      LinkedList<CasAlignmentRegion> linkedList0 = new LinkedList<CasAlignmentRegion>();
      DefaultCasAlignment defaultCasAlignment0 = new DefaultCasAlignment((-7L), (-7L), false, (List<CasAlignmentRegion>) linkedList0);
      DefaultCasAlignment defaultCasAlignment1 = new DefaultCasAlignment((-7L), (-7L), true, (List<CasAlignmentRegion>) linkedList0);
      boolean boolean0 = defaultCasAlignment0.equals((Object) defaultCasAlignment1);
      assertEquals(true, defaultCasAlignment1.readIsReversed());
      assertEquals(false, boolean0);
      assertEquals("DefaultCasAlignment [contigSequenceId=-7, startOfMatch=-7, readIsReversed=false, alignmentRegions=[]]", defaultCasAlignment0.toString());
      assertFalse(defaultCasAlignment1.equals(defaultCasAlignment0));
  }

  @Test
  public void test10()  throws Throwable  {
      LinkedList<CasAlignmentRegion> linkedList0 = new LinkedList<CasAlignmentRegion>();
      DefaultCasAlignment defaultCasAlignment0 = new DefaultCasAlignment(0L, (long) (byte)44, false, (List<CasAlignmentRegion>) linkedList0);
      DefaultCasAlignment defaultCasAlignment1 = new DefaultCasAlignment(0L, 0L, false, (List<CasAlignmentRegion>) linkedList0);
      boolean boolean0 = defaultCasAlignment1.equals((Object) defaultCasAlignment0);
      assertEquals(false, boolean0);
      assertFalse(defaultCasAlignment0.equals(defaultCasAlignment1));
      assertEquals("DefaultCasAlignment [contigSequenceId=0, startOfMatch=44, readIsReversed=false, alignmentRegions=[]]", defaultCasAlignment0.toString());
  }

  @Test
  public void test11()  throws Throwable  {
      DefaultCasAlignment.Builder defaultCasAlignment_Builder0 = new DefaultCasAlignment.Builder((-7L), (-7L), false);
      DefaultCasAlignment.Builder defaultCasAlignment_Builder1 = defaultCasAlignment_Builder0.addPhaseChange((byte)88);
      assertNotNull(defaultCasAlignment_Builder1);
      
      DefaultCasAlignment defaultCasAlignment0 = (DefaultCasAlignment)defaultCasAlignment_Builder1.build();
      assertNotNull(defaultCasAlignment0);
      
      DefaultCasAlignment.Builder defaultCasAlignment_Builder2 = new DefaultCasAlignment.Builder((CasAlignment) defaultCasAlignment0);
      assertEquals((-7L), defaultCasAlignment0.getReferenceIndex());
      assertEquals((-7L), defaultCasAlignment0.getStartOfMatch());
      assertNotNull(defaultCasAlignment_Builder2);
      assertEquals(false, defaultCasAlignment0.readIsReversed());
  }

  @Test
  public void test12()  throws Throwable  {
      DefaultCasAlignment.Builder defaultCasAlignment_Builder0 = new DefaultCasAlignment.Builder(1L, 1L, false);
      CasAlignmentRegionType casAlignmentRegionType0 = CasAlignmentRegionType.DELETION;
      // Undeclared exception!
      try {
        defaultCasAlignment_Builder0.addRegion(casAlignmentRegionType0, (long) (byte) (-119));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * length can not < 1
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      DefaultCasAlignment.Builder defaultCasAlignment_Builder0 = new DefaultCasAlignment.Builder(738L, 738L, true);
      CasAlignmentRegionType casAlignmentRegionType0 = CasAlignmentRegionType.MATCH_MISMATCH;
      defaultCasAlignment_Builder0.addRegion(casAlignmentRegionType0, 738L);
      DefaultCasAlignment.Builder defaultCasAlignment_Builder1 = defaultCasAlignment_Builder0.addRegion(casAlignmentRegionType0, 738L);
      assertSame(defaultCasAlignment_Builder1, defaultCasAlignment_Builder0);
  }
}
