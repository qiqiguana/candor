/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.internal.trace.chromat.ztr.data;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.nio.BufferUnderflowException;
import org.jcvi.jillion.internal.trace.chromat.ztr.data.ShrinkToEightBitData;
import org.jcvi.jillion.trace.TraceEncoderException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ShrinkToEightBitDataEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ShrinkToEightBitData shrinkToEightBitData0 = ShrinkToEightBitData.INTEGER_TO_BYTE;
      byte[] byteArray0 = new byte[7];
      byte[] byteArray1 = shrinkToEightBitData0.parseData(byteArray0);
      assertNotSame(byteArray1, byteArray0);
  }

  @Test
  public void test1()  throws Throwable  {
      ShrinkToEightBitData shrinkToEightBitData0 = ShrinkToEightBitData.INTEGER_TO_BYTE;
      byte[] byteArray0 = new byte[8];
      byteArray0[5] = (byte) (-128);
      // Undeclared exception!
      try {
        shrinkToEightBitData0.parseData(byteArray0);
        fail("Expecting exception: BufferUnderflowException");
      } catch(BufferUnderflowException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ShrinkToEightBitData shrinkToEightBitData0 = ShrinkToEightBitData.SHORT_TO_BYTE;
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)1;
      byte[] byteArray1 = shrinkToEightBitData0.encodeData(byteArray0, (byte)1);
      assertNotSame(byteArray1, byteArray0);
  }

  @Test
  public void test3()  throws Throwable  {
      ShrinkToEightBitData shrinkToEightBitData0 = ShrinkToEightBitData.INTEGER_TO_BYTE;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-53);
      // Undeclared exception!
      try {
        shrinkToEightBitData0.encodeData(byteArray0, (byte)42);
        fail("Expecting exception: BufferUnderflowException");
      } catch(BufferUnderflowException e) {
      }
  }
}
