/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.core.residue.aa;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.HashSet;
import java.util.List;
import org.jcvi.jillion.core.residue.aa.AminoAcid;
import org.jcvi.jillion.core.residue.aa.AminoAcids;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AminoAcidsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      List<AminoAcid> list0 = AminoAcids.parse("");
      assertEquals(true, list0.isEmpty());
  }

  @Test
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try {
        AminoAcids.parse(" >K(");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * > is not a valid Amino Acid
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      HashSet<AminoAcid> hashSet0 = new HashSet<AminoAcid>(0);
      AminoAcid aminoAcid0 = AminoAcid.Unknown_Amino_Acid;
      hashSet0.add(aminoAcid0);
      String string0 = AminoAcids.asString((Iterable<AminoAcid>) hashSet0);
      assertNotNull(string0);
      assertEquals("X", string0);
  }
}
