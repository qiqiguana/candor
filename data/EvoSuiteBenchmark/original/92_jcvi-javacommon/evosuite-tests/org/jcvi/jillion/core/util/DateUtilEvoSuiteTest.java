/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.core.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Date;
import org.jcvi.jillion.core.util.DateUtil;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DateUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DateUtil.restoreDate();
  }

  @Test
  public void test1()  throws Throwable  {
      Date date0 = DateUtil.getCurrentDate();
      Date date1 = DateUtil.getCurrentDate();
      DateUtil.getCurrentDate();
      DateUtil.setCurrentDate(date1);
      date1.compareTo(date0);
      DateUtil.setCurrentDate(date1);
      String string0 = DateUtil.getElapsedTimeAsString(0L);
      assertEquals("P0S", string0);
      
      DateUtil.getElapsedTimeAsString(0L);
      Date date2 = DateUtil.getCurrentDate();
      date1.equals((Object) "P0S");
      assertTrue(date1.equals(date2));
      assertEquals(0, date1.getMonth());
  }

  @Test
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try {
        DateUtil.setCurrentDate((Date) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * specified date can not be null
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      String string0 = DateUtil.getElapsedTimeAsString(1372728682777L);
      assertEquals("P15888D1H31M22S", string0);
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      String string0 = DateUtil.getElapsedTimeAsString(3600000L);
      assertNotNull(string0);
      assertEquals("P1H", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      String string0 = DateUtil.getElapsedTimeAsString(1000L);
      assertEquals("P1S", string0);
      assertNotNull(string0);
  }
}
