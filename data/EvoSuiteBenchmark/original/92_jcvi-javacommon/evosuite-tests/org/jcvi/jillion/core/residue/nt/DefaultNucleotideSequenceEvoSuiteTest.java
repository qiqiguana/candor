/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.core.residue.nt;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Collection;
import org.jcvi.jillion.core.Range;
import org.jcvi.jillion.core.residue.nt.DefaultNucleotideSequence;
import org.jcvi.jillion.core.residue.nt.Nucleotide;
import org.jcvi.jillion.core.residue.nt.NucleotideCodec;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DefaultNucleotideSequenceEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      DefaultNucleotideSequence defaultNucleotideSequence0 = new DefaultNucleotideSequence((NucleotideCodec) null, byteArray0);
      // Undeclared exception!
      try {
        defaultNucleotideSequence0.iterator((Range) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      DefaultNucleotideSequence defaultNucleotideSequence0 = new DefaultNucleotideSequence((NucleotideCodec) null, byteArray0);
      // Undeclared exception!
      try {
        defaultNucleotideSequence0.getGapOffsets();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      DefaultNucleotideSequence defaultNucleotideSequence0 = new DefaultNucleotideSequence((NucleotideCodec) null, byteArray0);
      // Undeclared exception!
      try {
        defaultNucleotideSequence0.getNumberOfGaps();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      DefaultNucleotideSequence defaultNucleotideSequence0 = new DefaultNucleotideSequence((NucleotideCodec) null, byteArray0);
      // Undeclared exception!
      try {
        defaultNucleotideSequence0.toString();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      DefaultNucleotideSequence defaultNucleotideSequence0 = new DefaultNucleotideSequence((NucleotideCodec) null, byteArray0);
      // Undeclared exception!
      try {
        defaultNucleotideSequence0.get((long) (byte)0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      DefaultNucleotideSequence defaultNucleotideSequence0 = new DefaultNucleotideSequence((NucleotideCodec) null, byteArray0);
      // Undeclared exception!
      try {
        defaultNucleotideSequence0.isGap((int) (byte)0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      DefaultNucleotideSequence defaultNucleotideSequence0 = new DefaultNucleotideSequence((NucleotideCodec) null, byteArray0);
      // Undeclared exception!
      try {
        defaultNucleotideSequence0.iterator();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try {
        DefaultNucleotideSequence.create((Collection<Nucleotide>) null, (NucleotideCodec) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * codec can not be null
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      DefaultNucleotideSequence defaultNucleotideSequence0 = new DefaultNucleotideSequence((NucleotideCodec) null, byteArray0);
      Nucleotide nucleotide0 = Nucleotide.Adenine;
      boolean boolean0 = defaultNucleotideSequence0.equals((Object) nucleotide0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      DefaultNucleotideSequence defaultNucleotideSequence0 = new DefaultNucleotideSequence((NucleotideCodec) null, byteArray0);
      DefaultNucleotideSequence defaultNucleotideSequence1 = new DefaultNucleotideSequence((NucleotideCodec) null, byteArray0);
      // Undeclared exception!
      try {
        defaultNucleotideSequence0.equals((Object) defaultNucleotideSequence1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
