/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.assembly.tigr.tasm;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import org.jcvi.jillion.assembly.tigr.tasm.TasmFileParser;
import org.jcvi.jillion.assembly.tigr.tasm.TasmFileVisitor;
import org.jcvi.jillion.internal.core.io.TextLineParser;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TasmFileParserEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      File file0 = new File("");
      File file1 = file0.getCanonicalFile();
      TasmFileParser tasmFileParser0 = TasmFileParser.create(file1);
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      TextLineParser textLineParser0 = new TextLineParser((InputStream) byteArrayInputStream0);
      // Undeclared exception!
      try {
        tasmFileParser0.parseTasm(textLineParser0, (TasmFileVisitor) null, 9223372036854775807L);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      FileDescriptor fileDescriptor0 = FileDescriptor.err;
      FileInputStream fileInputStream0 = new FileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) fileInputStream0);
      TasmFileParser tasmFileParser0 = TasmFileParser.create((InputStream) dataInputStream0);
      // Undeclared exception!
      try {
        tasmFileParser0.accept((TasmFileVisitor) null, (TasmFileVisitor.TasmContigVisitorCallback.TasmContigVisitorMemento) null);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * mementos not supported
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (int) (byte)0, (int) (byte)0);
      TasmFileParser tasmFileParser0 = TasmFileParser.create((InputStream) byteArrayInputStream0);
      // Undeclared exception!
      try {
        tasmFileParser0.accept((TasmFileVisitor) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      File file0 = new File("", "");
      TasmFileParser tasmFileParser0 = TasmFileParser.create(file0);
      try {
        tasmFileParser0.accept((TasmFileVisitor) null);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
        /*
         * / (Is a directory)
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      TasmFileParser tasmFileParser0 = TasmFileParser.create((InputStream) byteArrayInputStream0);
      TextLineParser textLineParser0 = new TextLineParser((InputStream) byteArrayInputStream0);
      // Undeclared exception!
      try {
        tasmFileParser0.parseTasm(textLineParser0, (TasmFileVisitor) null, (long) (byte) (-20));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * unknown attribute \u0000
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      File file0 = new File(":fF&");
      try {
        TasmFileParser.create(file0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
        /*
         * tasm file does not exist : /mnt/fastdata/ac1gf/SF110/dist/92_jcvi-javacommon/:fF&
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      File file0 = new File("", "");
      TasmFileParser tasmFileParser0 = TasmFileParser.create(file0);
      // Undeclared exception!
      try {
        tasmFileParser0.accept((TasmFileVisitor) null, (TasmFileVisitor.TasmContigVisitorCallback.TasmContigVisitorMemento) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * unknown memento type
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileInputStream fileInputStream0 = new FileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) fileInputStream0);
      TasmFileParser tasmFileParser0 = TasmFileParser.create((InputStream) dataInputStream0);
      try {
        tasmFileParser0.accept((TasmFileVisitor) null);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * inputstream is closed
         */
      }
  }
}
