/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.internal.trace.chromat.scf.header.pos;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.nio.ByteBuffer;
import org.jcvi.jillion.internal.trace.chromat.scf.header.pos.BytePositionStrategy;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BytePositionStrategyEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BytePositionStrategy bytePositionStrategy0 = new BytePositionStrategy();
      byte byte0 = bytePositionStrategy0.getSampleSize();
      assertEquals((byte)1, byte0);
  }

  @Test
  public void test1()  throws Throwable  {
      BytePositionStrategy bytePositionStrategy0 = new BytePositionStrategy();
      int int0 = bytePositionStrategy0.getMaxAllowedValue();
      assertEquals(127, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      BytePositionStrategy bytePositionStrategy0 = new BytePositionStrategy();
      PipedInputStream pipedInputStream0 = new PipedInputStream(1532);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) pipedInputStream0);
      try {
        bytePositionStrategy0.getPosition(dataInputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * Pipe not connected
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      BytePositionStrategy bytePositionStrategy0 = new BytePositionStrategy();
      // Undeclared exception!
      try {
        bytePositionStrategy0.setPosition((short)0, (ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      BytePositionStrategy bytePositionStrategy0 = new BytePositionStrategy();
      // Undeclared exception!
      try {
        bytePositionStrategy0.setPosition((short)799, (ByteBuffer) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * position to put is too big :799
         */
      }
  }
}
