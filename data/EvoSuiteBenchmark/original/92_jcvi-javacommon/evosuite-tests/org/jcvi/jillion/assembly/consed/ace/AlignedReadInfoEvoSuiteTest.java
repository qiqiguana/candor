/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.assembly.consed.ace;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.jcvi.jillion.assembly.consed.ace.AlignedReadInfo;
import org.jcvi.jillion.core.Direction;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AlignedReadInfoEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Direction direction0 = Direction.REVERSE;
      AlignedReadInfo alignedReadInfo0 = new AlignedReadInfo((-1773), direction0);
      assertNotNull(alignedReadInfo0);
      
      String string0 = alignedReadInfo0.toString();
      assertEquals("AlignedReadInfo [dir=REVERSE, startOffset=-1773]", string0);
      assertNotNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      Direction direction0 = Direction.REVERSE;
      AlignedReadInfo alignedReadInfo0 = new AlignedReadInfo(33, direction0);
      assertNotNull(alignedReadInfo0);
      
      int int0 = alignedReadInfo0.getStartOffset();
      assertEquals(33, int0);
      assertEquals("AlignedReadInfo [dir=REVERSE, startOffset=33]", alignedReadInfo0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      Direction direction0 = Direction.REVERSE;
      AlignedReadInfo alignedReadInfo0 = new AlignedReadInfo((-1773), direction0);
      assertNotNull(alignedReadInfo0);
      
      int int0 = alignedReadInfo0.hashCode();
      assertEquals((-781), int0);
  }

  @Test
  public void test3()  throws Throwable  {
      Direction direction0 = Direction.FORWARD;
      Direction direction1 = Direction.REVERSE;
      AlignedReadInfo alignedReadInfo0 = new AlignedReadInfo((-856), direction1);
      assertNotNull(alignedReadInfo0);
      
      AlignedReadInfo alignedReadInfo1 = new AlignedReadInfo((-856), direction0);
      boolean boolean0 = alignedReadInfo0.equals((Object) alignedReadInfo1);
      assertFalse(alignedReadInfo1.equals(alignedReadInfo0));
      assertEquals("AlignedReadInfo [dir=FORWARD, startOffset=-856]", alignedReadInfo1.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      Direction direction0 = Direction.REVERSE;
      AlignedReadInfo alignedReadInfo0 = new AlignedReadInfo(33, direction0);
      assertNotNull(alignedReadInfo0);
      
      boolean boolean0 = alignedReadInfo0.equals((Object) null);
      assertEquals("AlignedReadInfo [dir=REVERSE, startOffset=33]", alignedReadInfo0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      Direction direction0 = Direction.FORWARD;
      AlignedReadInfo alignedReadInfo0 = new AlignedReadInfo((-856), direction0);
      assertNotNull(alignedReadInfo0);
      
      boolean boolean0 = alignedReadInfo0.equals((Object) "EPSFfR_mg");
      assertEquals(false, boolean0);
      assertEquals("AlignedReadInfo [dir=FORWARD, startOffset=-856]", alignedReadInfo0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      Direction direction0 = Direction.REVERSE;
      AlignedReadInfo alignedReadInfo0 = new AlignedReadInfo((-1773), direction0);
      assertNotNull(alignedReadInfo0);
      
      AlignedReadInfo alignedReadInfo1 = new AlignedReadInfo((-781), direction0);
      boolean boolean0 = alignedReadInfo0.equals((Object) alignedReadInfo1);
      assertEquals("AlignedReadInfo [dir=REVERSE, startOffset=-1773]", alignedReadInfo0.toString());
      assertFalse(alignedReadInfo1.equals(alignedReadInfo0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      Direction direction0 = Direction.REVERSE;
      AlignedReadInfo alignedReadInfo0 = new AlignedReadInfo(33, direction0);
      assertNotNull(alignedReadInfo0);
      
      AlignedReadInfo alignedReadInfo1 = new AlignedReadInfo(33, direction0);
      boolean boolean0 = alignedReadInfo0.equals((Object) alignedReadInfo1);
      assertEquals(true, boolean0);
      assertEquals("AlignedReadInfo [dir=REVERSE, startOffset=33]", alignedReadInfo0.toString());
  }
}
