/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.assembly.ca.frg;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.jcvi.jillion.assembly.ca.frg.DefaultFragment;
import org.jcvi.jillion.assembly.ca.frg.Library;
import org.jcvi.jillion.core.Range;
import org.jcvi.jillion.core.qual.QualitySequence;
import org.jcvi.jillion.core.residue.nt.NucleotideSequence;
import org.jcvi.jillion.trace.Trace;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DefaultFragmentEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultFragment defaultFragment0 = new DefaultFragment("Wmr`IqvxdkF} \"'JB'>", (NucleotideSequence) null, (QualitySequence) null, (Range) null, (Range) null, (Library) null, "Wmr`IqvxdkF} \"'JB'>");
      assertNotNull(defaultFragment0);
      
      int int0 = defaultFragment0.hashCode();
      assertEquals(1480859719, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultFragment defaultFragment0 = new DefaultFragment("Wmr`IqvxdkF} \"'JB'>", (NucleotideSequence) null, (QualitySequence) null, (Range) null, (Range) null, (Library) null, "Wmr`IqvxdkF} \"'JB'>");
      Range range0 = defaultFragment0.getValidRange();
      assertNull(range0);
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultFragment defaultFragment0 = new DefaultFragment("Wmr`IqvxdkF} \"'JB'>", (NucleotideSequence) null, (QualitySequence) null, (Range) null, (Range) null, (Library) null, "Wmr`IqvxdkF} \"'JB'>");
      Library library0 = defaultFragment0.getLibrary();
      assertNull(library0);
  }

  @Test
  public void test3()  throws Throwable  {
      DefaultFragment defaultFragment0 = new DefaultFragment("Wmr`IqvxdkF} \"'JB'>", (NucleotideSequence) null, (QualitySequence) null, (Range) null, (Range) null, (Library) null, "Wmr`IqvxdkF} \"'JB'>");
      String string0 = defaultFragment0.getComment();
      assertEquals("Wmr`IqvxdkF} \"'JB'>", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      DefaultFragment defaultFragment0 = new DefaultFragment("Wmr`IqvxdkF} \"'JB'>", (NucleotideSequence) null, (QualitySequence) null, (Range) null, (Range) null, (Library) null, "Wmr`IqvxdkF} \"'JB'>");
      assertNotNull(defaultFragment0);
      
      DefaultFragment defaultFragment1 = new DefaultFragment("Wmr`IqvxdkF} \"'JB'>", (Trace) defaultFragment0, (Range) null, (Library) null);
      assertNotNull(defaultFragment1);
      
      boolean boolean0 = defaultFragment0.equals((Object) defaultFragment1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      DefaultFragment defaultFragment0 = new DefaultFragment("Wmr`IqvxdkF} \"'JB'>", (NucleotideSequence) null, (QualitySequence) null, (Range) null, (Range) null, (Library) null, "Wmr`IqvxdkF} \"'JB'>");
      Range range0 = defaultFragment0.getVectorClearRange();
      assertNull(range0);
  }

  @Test
  public void test6()  throws Throwable  {
      DefaultFragment defaultFragment0 = null;
      try {
        defaultFragment0 = new DefaultFragment((String) null, (NucleotideSequence) null, (QualitySequence) null, (Range) null, (Range) null, (Library) null, "GA");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * id can not be null
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      DefaultFragment defaultFragment0 = new DefaultFragment("Wmr`IqvxdkF} \"'JB'>", (NucleotideSequence) null, (QualitySequence) null, (Range) null, (Range) null, (Library) null, "Wmr`IqvxdkF} \"'JB'>");
      assertNotNull(defaultFragment0);
      
      boolean boolean0 = defaultFragment0.equals((Object) "NORMAL");
      assertEquals(false, boolean0);
  }
}
