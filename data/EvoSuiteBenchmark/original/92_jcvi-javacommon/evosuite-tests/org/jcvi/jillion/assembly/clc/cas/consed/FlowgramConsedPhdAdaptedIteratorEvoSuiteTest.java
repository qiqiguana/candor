/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.assembly.clc.cas.consed;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.File;
import java.io.IOException;
import java.util.Date;
import org.jcvi.jillion.assembly.clc.cas.consed.FlowgramConsedPhdAdaptedIterator;
import org.jcvi.jillion.core.util.iter.StreamingIterator;
import org.jcvi.jillion.trace.sff.SffFlowgram;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FlowgramConsedPhdAdaptedIteratorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      File file0 = new File("+>u");
      Date date0 = new Date();
      FlowgramConsedPhdAdaptedIterator flowgramConsedPhdAdaptedIterator0 = new FlowgramConsedPhdAdaptedIterator((StreamingIterator<? extends SffFlowgram>) null, file0, date0);
      // Undeclared exception!
      try {
        flowgramConsedPhdAdaptedIterator0.hasNext();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Date date0 = new Date();
      FlowgramConsedPhdAdaptedIterator flowgramConsedPhdAdaptedIterator0 = new FlowgramConsedPhdAdaptedIterator((StreamingIterator<? extends SffFlowgram>) null, (File) null, date0);
      // Undeclared exception!
      try {
        flowgramConsedPhdAdaptedIterator0.close();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Date date0 = new Date();
      FlowgramConsedPhdAdaptedIterator flowgramConsedPhdAdaptedIterator0 = new FlowgramConsedPhdAdaptedIterator((StreamingIterator<? extends SffFlowgram>) null, (File) null, date0);
      // Undeclared exception!
      try {
        flowgramConsedPhdAdaptedIterator0.remove();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
