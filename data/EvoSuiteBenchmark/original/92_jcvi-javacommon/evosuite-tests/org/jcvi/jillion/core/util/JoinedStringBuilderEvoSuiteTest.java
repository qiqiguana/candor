/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.core.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.ArrayDeque;
import org.jcvi.jillion.core.util.JoinedStringBuilder;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JoinedStringBuilderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      JoinedStringBuilder joinedStringBuilder0 = new JoinedStringBuilder((Iterable<?>) arrayDeque0);
      String string0 = joinedStringBuilder0.toString();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      Object[] objectArray0 = new Object[3];
      JoinedStringBuilder joinedStringBuilder0 = new JoinedStringBuilder(objectArray0);
      joinedStringBuilder0.prefix(object0);
      String string0 = joinedStringBuilder0.toString();
      assertNotNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.add("a:Kwc)<WDI*");
      arrayDeque0.add("");
      JoinedStringBuilder joinedStringBuilder0 = new JoinedStringBuilder((Iterable<?>) arrayDeque0);
      joinedStringBuilder0.glue((Object) "[]");
      String string0 = joinedStringBuilder0.toString();
      assertEquals("a:Kwc)<WDI*", joinedStringBuilder0.toString());
      assertNotNull(string0);
      assertEquals("a:Kwc)<WDI*", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      Object object0 = new Object();
      objectArray0[1] = object0;
      JoinedStringBuilder joinedStringBuilder0 = new JoinedStringBuilder(objectArray0);
      objectArray0[3] = objectArray0[1];
      JoinedStringBuilder joinedStringBuilder1 = joinedStringBuilder0.glue(objectArray0[3]);
      String string0 = (String)joinedStringBuilder1.build();
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      Object object0 = new Object();
      Object[] objectArray0 = new Object[3];
      objectArray0[2] = object0;
      JoinedStringBuilder joinedStringBuilder0 = new JoinedStringBuilder(objectArray0);
      JoinedStringBuilder joinedStringBuilder1 = joinedStringBuilder0.suffix(objectArray0[2]);
      String string0 = joinedStringBuilder1.toString();
      assertNotNull(string0);
  }
}
