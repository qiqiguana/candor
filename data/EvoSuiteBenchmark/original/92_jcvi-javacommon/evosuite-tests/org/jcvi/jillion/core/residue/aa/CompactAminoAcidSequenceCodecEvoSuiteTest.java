/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.core.residue.aa;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Collection;
import java.util.LinkedList;
import org.jcvi.jillion.core.residue.aa.AminoAcid;
import org.jcvi.jillion.core.residue.aa.CompactAminoAcidSequenceCodec;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CompactAminoAcidSequenceCodecEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CompactAminoAcidSequenceCodec compactAminoAcidSequenceCodec0 = CompactAminoAcidSequenceCodec.INSTANCE;
      byte[] byteArray0 = new byte[7];
      AminoAcid aminoAcid0 = (AminoAcid)compactAminoAcidSequenceCodec0.decode(byteArray0, (long) (byte)18);
      assertEquals(AminoAcid.Isoleucine, aminoAcid0);
  }

  @Test
  public void test1()  throws Throwable  {
      CompactAminoAcidSequenceCodec compactAminoAcidSequenceCodec0 = CompactAminoAcidSequenceCodec.INSTANCE;
      byte[] byteArray0 = new byte[6];
      int int0 = compactAminoAcidSequenceCodec0.decodedLengthOf(byteArray0);
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      CompactAminoAcidSequenceCodec compactAminoAcidSequenceCodec0 = CompactAminoAcidSequenceCodec.INSTANCE;
      LinkedList<AminoAcid> linkedList0 = new LinkedList<AminoAcid>();
      AminoAcid aminoAcid0 = AminoAcid.Asparagine;
      linkedList0.offer(aminoAcid0);
      byte[] byteArray0 = compactAminoAcidSequenceCodec0.encode((Collection<AminoAcid>) linkedList0);
      assertNotNull(byteArray0);
  }

  @Test
  public void test3()  throws Throwable  {
      CompactAminoAcidSequenceCodec compactAminoAcidSequenceCodec0 = CompactAminoAcidSequenceCodec.INSTANCE;
      byte[] byteArray0 = new byte[7];
      byteArray0[6] = (byte)95;
      // Undeclared exception!
      try {
        compactAminoAcidSequenceCodec0.decode(byteArray0, (long) (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 31
         */
      }
  }
}
