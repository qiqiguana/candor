/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.assembly.clc.cas;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.jcvi.jillion.assembly.clc.cas.PhaseChangeCasAlignmentRegion;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PhaseChangeCasAlignmentRegionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PhaseChangeCasAlignmentRegion phaseChangeCasAlignmentRegion0 = new PhaseChangeCasAlignmentRegion((byte) (-1));
      int int0 = phaseChangeCasAlignmentRegion0.hashCode();
      assertEquals(30, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      PhaseChangeCasAlignmentRegion phaseChangeCasAlignmentRegion0 = new PhaseChangeCasAlignmentRegion((byte) (-1));
      phaseChangeCasAlignmentRegion0.getType();
      assertEquals(-1, phaseChangeCasAlignmentRegion0.getPhaseChange());
  }

  @Test
  public void test2()  throws Throwable  {
      PhaseChangeCasAlignmentRegion phaseChangeCasAlignmentRegion0 = new PhaseChangeCasAlignmentRegion((byte) (-1));
      long long0 = phaseChangeCasAlignmentRegion0.getLength();
      assertEquals(-1, phaseChangeCasAlignmentRegion0.getPhaseChange());
      assertEquals(0L, long0);
  }

  @Test
  public void test3()  throws Throwable  {
      PhaseChangeCasAlignmentRegion phaseChangeCasAlignmentRegion0 = new PhaseChangeCasAlignmentRegion((byte) (-1));
      byte byte0 = phaseChangeCasAlignmentRegion0.getPhaseChange();
      assertEquals((byte) (-1), byte0);
  }

  @Test
  public void test4()  throws Throwable  {
      PhaseChangeCasAlignmentRegion phaseChangeCasAlignmentRegion0 = new PhaseChangeCasAlignmentRegion((byte) (-1));
      boolean boolean0 = phaseChangeCasAlignmentRegion0.equals((Object) "");
      assertEquals(false, boolean0);
      assertEquals(-1, phaseChangeCasAlignmentRegion0.getPhaseChange());
  }

  @Test
  public void test5()  throws Throwable  {
      PhaseChangeCasAlignmentRegion phaseChangeCasAlignmentRegion0 = new PhaseChangeCasAlignmentRegion((byte)98);
      boolean boolean0 = phaseChangeCasAlignmentRegion0.equals((Object) null);
      assertEquals(false, boolean0);
      assertEquals(98, phaseChangeCasAlignmentRegion0.getPhaseChange());
  }

  @Test
  public void test6()  throws Throwable  {
      PhaseChangeCasAlignmentRegion phaseChangeCasAlignmentRegion0 = new PhaseChangeCasAlignmentRegion((byte) (-1));
      PhaseChangeCasAlignmentRegion phaseChangeCasAlignmentRegion1 = new PhaseChangeCasAlignmentRegion((byte) (-1));
      boolean boolean0 = phaseChangeCasAlignmentRegion1.equals((Object) phaseChangeCasAlignmentRegion0);
      assertEquals(-1, phaseChangeCasAlignmentRegion1.getPhaseChange());
      assertEquals(true, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      PhaseChangeCasAlignmentRegion phaseChangeCasAlignmentRegion0 = new PhaseChangeCasAlignmentRegion((byte) (-1));
      PhaseChangeCasAlignmentRegion phaseChangeCasAlignmentRegion1 = new PhaseChangeCasAlignmentRegion((byte)118);
      boolean boolean0 = phaseChangeCasAlignmentRegion0.equals((Object) phaseChangeCasAlignmentRegion1);
      assertEquals(false, boolean0);
      assertEquals(-1, phaseChangeCasAlignmentRegion0.getPhaseChange());
      assertFalse(phaseChangeCasAlignmentRegion1.equals(phaseChangeCasAlignmentRegion0));
  }
}
