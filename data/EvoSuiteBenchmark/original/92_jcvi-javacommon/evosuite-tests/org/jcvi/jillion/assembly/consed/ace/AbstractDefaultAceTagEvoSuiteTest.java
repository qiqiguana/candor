/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.assembly.consed.ace;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Date;
import org.jcvi.jillion.assembly.consed.ace.ReadAceTag;
import org.jcvi.jillion.assembly.consed.ace.WholeAssemblyAceTag;
import org.jcvi.jillion.core.DirectedRange;
import org.jcvi.jillion.core.Range;
import org.jcvi.jillion.core.Rangeable;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AbstractDefaultAceTagEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Date date0 = new Date();
      WholeAssemblyAceTag wholeAssemblyAceTag0 = new WholeAssemblyAceTag("^6,3cD}#nBrN3IWK", "^6,3cD}#nBrN3IWK", date0, "^6,3cD}#nBrN3IWK");
      String string0 = wholeAssemblyAceTag0.toString();
      assertEquals(1372733353464L, date0.getTime());
      assertEquals("DefaultWholeAssemblyAceTag [creationDate=Tue Jul 02 03:49:13 BST 2013, creator=^6,3cD}#nBrN3IWK, data=^6,3cD}#nBrN3IWK, type=^6,3cD}#nBrN3IWK]", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      Date date0 = new Date();
      WholeAssemblyAceTag wholeAssemblyAceTag0 = null;
      try {
        wholeAssemblyAceTag0 = new WholeAssemblyAceTag((String) null, (String) null, date0, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * type can not be null
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Date date0 = new Date((-1867L));
      WholeAssemblyAceTag wholeAssemblyAceTag0 = null;
      try {
        wholeAssemblyAceTag0 = new WholeAssemblyAceTag("", (String) null, date0, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * creator can not be null
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      WholeAssemblyAceTag wholeAssemblyAceTag0 = null;
      try {
        wholeAssemblyAceTag0 = new WholeAssemblyAceTag("tF", "tF", (Date) null, "tF");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * creationDate can not be null
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Date date0 = new Date();
      WholeAssemblyAceTag wholeAssemblyAceTag0 = new WholeAssemblyAceTag("", "", date0, "");
      int int0 = wholeAssemblyAceTag0.hashCode();
      assertEquals(1372733353853L, date0.getTime());
      assertEquals(1291627007, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      Date date0 = new Date();
      DirectedRange directedRange0 = DirectedRange.parse(0L, 1372733351665L);
      ReadAceTag readAceTag0 = new ReadAceTag("", "", "", date0, (Rangeable) directedRange0, true);
      int int0 = readAceTag0.hashCode();
      assertEquals(1372733354698L, date0.getTime());
      assertEquals((-998255252), int0);
  }

  @Test
  public void test6()  throws Throwable  {
      Date date0 = new Date((-187L));
      WholeAssemblyAceTag wholeAssemblyAceTag0 = new WholeAssemblyAceTag("`", "`", date0, "`");
      assertNotNull(wholeAssemblyAceTag0);
      
      WholeAssemblyAceTag wholeAssemblyAceTag1 = new WholeAssemblyAceTag("5+G^KYQb!a%z}4Of", "`", date0, "5+G^KYQb!a%z}4Of");
      boolean boolean0 = wholeAssemblyAceTag0.equals((Object) wholeAssemblyAceTag1);
      assertEquals(false, boolean0);
      assertEquals("DefaultWholeAssemblyAceTag [creationDate=Thu Jan 01 00:59:59 GMT 1970, creator=`, data=5+G^KYQb!a%z}4Of, type=5+G^KYQb!a%z}4Of]", wholeAssemblyAceTag1.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      Date date0 = new Date((-187L));
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      DirectedRange directedRange0 = DirectedRange.parse((-1108L), (-1108L), range_CoordinateSystem0);
      ReadAceTag readAceTag0 = new ReadAceTag("`", "`", "`", date0, (Rangeable) directedRange0, false);
      assertNotNull(readAceTag0);
      
      ReadAceTag readAceTag1 = new ReadAceTag("`", "`", "`", date0, (Rangeable) directedRange0, false);
      boolean boolean0 = readAceTag0.equals((Object) readAceTag1);
      assertEquals(true, boolean0);
      assertEquals("ReadAceTag [getId()=`, getType()=`, getCreator()=`, getCreationDate()=Thu Jan 01 00:59:59 GMT 1970, asRange()=[ -1108 .. -1108 ]/0B, getData()=null, isTransient()=false]", readAceTag0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      Date date0 = new Date();
      DirectedRange directedRange0 = DirectedRange.parse(0L, 1372733351665L);
      ReadAceTag readAceTag0 = new ReadAceTag("", "", "", date0, (Rangeable) directedRange0, true);
      readAceTag0.equals((Object) null);
      assertEquals(1372733357775L, date0.getTime());
  }

  @Test
  public void test9()  throws Throwable  {
      Date date0 = new Date();
      DirectedRange directedRange0 = DirectedRange.parse(0L, 1372733351665L);
      ReadAceTag readAceTag0 = new ReadAceTag("", "", "", date0, (Rangeable) directedRange0, true);
      readAceTag0.equals((Object) "DirectedRange [range=[ 0 .. 1372733351665 ]/0B, direction=FORWARD]");
      assertEquals("Tue Jul 02 03:49:17 BST 2013", date0.toString());
      assertEquals("2 Jul 2013 02:49:17 GMT", date0.toGMTString());
  }

  @Test
  public void test10()  throws Throwable  {
      Date date0 = new Date();
      WholeAssemblyAceTag wholeAssemblyAceTag0 = new WholeAssemblyAceTag("", "", date0, "");
      assertEquals(1372733358235L, date0.getTime());
      
      date0.setTime(0L);
      WholeAssemblyAceTag wholeAssemblyAceTag1 = new WholeAssemblyAceTag("", "", date0, "");
      boolean boolean0 = wholeAssemblyAceTag0.equals((Object) wholeAssemblyAceTag1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      Date date0 = new Date();
      WholeAssemblyAceTag wholeAssemblyAceTag0 = new WholeAssemblyAceTag("tF", "tF", date0, "tF");
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      DirectedRange directedRange0 = DirectedRange.parse(255L, 1372733351669L, range_CoordinateSystem0);
      ReadAceTag readAceTag0 = new ReadAceTag("5+G^KYQb!a%z}4Of", "5+G^KYQb!a%z}4Of", "5+G^KYQb!a%z}4Of", date0, (Rangeable) directedRange0, true);
      readAceTag0.equals((Object) wholeAssemblyAceTag0);
      assertEquals(1372733358492L, date0.getTime());
  }

  @Test
  public void test12()  throws Throwable  {
      Date date0 = new Date();
      WholeAssemblyAceTag wholeAssemblyAceTag0 = new WholeAssemblyAceTag("^6,3cD}#nBrN3IWK", "^6,3cD}#nBrN3IWK", date0, "^6,3cD}#nBrN3IWK");
      ReadAceTag readAceTag0 = new ReadAceTag("^6,3cD}#nBrN3IWK", "^6,3cD}#nBrN3IWK", "^6,3cD}#nBrN3IWK", date0, (Rangeable) null, true);
      readAceTag0.equals((Object) wholeAssemblyAceTag0);
      assertEquals(1372733359168L, date0.getTime());
  }

  @Test
  public void test13()  throws Throwable  {
      Date date0 = new Date((-187L));
      WholeAssemblyAceTag wholeAssemblyAceTag0 = new WholeAssemblyAceTag("5+G^KYQb!a%z}4Of", "`", date0, "5+G^KYQb!a%z}4Of");
      assertNotNull(wholeAssemblyAceTag0);
      
      WholeAssemblyAceTag wholeAssemblyAceTag1 = new WholeAssemblyAceTag("`", "`", date0, "5+G^KYQb!a%z}4Of");
      boolean boolean0 = wholeAssemblyAceTag1.equals((Object) wholeAssemblyAceTag0);
      assertEquals("DefaultWholeAssemblyAceTag [creationDate=Thu Jan 01 00:59:59 GMT 1970, creator=`, data=5+G^KYQb!a%z}4Of, type=`]", wholeAssemblyAceTag1.toString());
      assertEquals(false, boolean0);
      assertEquals("DefaultWholeAssemblyAceTag [creationDate=Thu Jan 01 00:59:59 GMT 1970, creator=`, data=5+G^KYQb!a%z}4Of, type=5+G^KYQb!a%z}4Of]", wholeAssemblyAceTag0.toString());
  }
}
