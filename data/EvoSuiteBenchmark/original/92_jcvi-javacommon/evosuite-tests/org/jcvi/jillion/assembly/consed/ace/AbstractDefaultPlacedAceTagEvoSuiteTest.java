/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.assembly.consed.ace;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Date;
import org.jcvi.jillion.assembly.consed.ace.ReadAceTag;
import org.jcvi.jillion.core.DirectedRange;
import org.jcvi.jillion.core.Range;
import org.jcvi.jillion.core.Rangeable;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AbstractDefaultPlacedAceTagEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Date date0 = new Date();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      DirectedRange directedRange0 = DirectedRange.parse((-168L), (-168L), range_CoordinateSystem0);
      ReadAceTag readAceTag0 = new ReadAceTag("N", "N", "N", date0, (Rangeable) directedRange0, false);
      String string0 = readAceTag0.toString();
      assertEquals(1372733667227L, date0.getTime());
      assertEquals("ReadAceTag [getId()=N, getType()=N, getCreator()=N, getCreationDate()=Tue Jul 02 03:54:27 BST 2013, asRange()=[ -168 .. -168 ]/0B, getData()=null, isTransient()=false]", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      Date date0 = new Date((-9223372036854775808L));
      ReadAceTag readAceTag0 = new ReadAceTag("V?Me$8l?JV", "V?Me$8l?JV", "V?Me$8l?JV", date0, (Rangeable) null, true);
      int int0 = readAceTag0.hashCode();
      assertEquals(1840416540, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      Date date0 = new Date();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      DirectedRange directedRange0 = DirectedRange.parse((-160L), (-160L), range_CoordinateSystem0);
      ReadAceTag readAceTag0 = new ReadAceTag((String) null, "", "", date0, (Rangeable) directedRange0, false);
      int int0 = readAceTag0.hashCode();
      assertEquals(1372733667978L, date0.getTime());
      assertEquals(671761483, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      Date date0 = new Date((-9223372036854775808L));
      ReadAceTag readAceTag0 = new ReadAceTag("V?Me$8l?JV", "V?Me$8l?JV", "V?Me$8l?JV", date0, (Rangeable) null, true);
      boolean boolean0 = readAceTag0.equals((Object) "V?Me$8l?JV");
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      Date date0 = new Date((-9223372036854775808L));
      ReadAceTag readAceTag0 = new ReadAceTag("V?Me$8l?JV", "V?Me$8l?JV", "V?Me$8l?JV", date0, (Rangeable) null, true);
      ReadAceTag readAceTag1 = new ReadAceTag("V?Me$8l?JV", "V?Me$8l?JV", "V?Me$8l?JV", date0, (Rangeable) readAceTag0, false);
      boolean boolean0 = readAceTag0.equals((Object) readAceTag1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      Date date0 = new Date();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      DirectedRange directedRange0 = DirectedRange.parse((-160L), (-160L), range_CoordinateSystem0);
      ReadAceTag readAceTag0 = new ReadAceTag((String) null, "", "", date0, (Rangeable) directedRange0, false);
      ReadAceTag readAceTag1 = new ReadAceTag((String) null, "", "", date0, (Rangeable) directedRange0, false);
      boolean boolean0 = readAceTag0.equals((Object) readAceTag1);
      assertEquals(1372733669420L, date0.getTime());
      assertEquals(true, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      Date date0 = new Date();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      DirectedRange directedRange0 = DirectedRange.parse((-171L), (-171L), range_CoordinateSystem0);
      ReadAceTag readAceTag0 = new ReadAceTag((String) null, "NQ", "NQ", date0, (Rangeable) directedRange0, true);
      ReadAceTag readAceTag1 = new ReadAceTag("NQ", "NQ", "NQ", date0, (Rangeable) directedRange0, true);
      boolean boolean0 = readAceTag0.equals((Object) readAceTag1);
      assertEquals(1372733669970L, date0.getTime());
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      Date date0 = new Date();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      DirectedRange directedRange0 = DirectedRange.parse((-168L), (-168L), range_CoordinateSystem0);
      ReadAceTag readAceTag0 = new ReadAceTag("N", "N", "N", date0, (Rangeable) directedRange0, false);
      ReadAceTag readAceTag1 = new ReadAceTag((String) null, "N", "N", date0, (Rangeable) directedRange0, false);
      boolean boolean0 = readAceTag0.equals((Object) readAceTag1);
      assertEquals(1372733670385L, date0.getTime());
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      Date date0 = new Date();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      DirectedRange directedRange0 = DirectedRange.parse((-147L), (-147L), range_CoordinateSystem0);
      ReadAceTag readAceTag0 = new ReadAceTag("vm", "vm", "vm", date0, (Rangeable) null, true);
      ReadAceTag readAceTag1 = new ReadAceTag("vm", "vm", "vm", date0, (Rangeable) directedRange0, true);
      boolean boolean0 = readAceTag0.equals((Object) readAceTag1);
      assertEquals(1372733670871L, date0.getTime());
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      Date date0 = new Date();
      ReadAceTag readAceTag0 = new ReadAceTag("", "", "", date0, (Rangeable) null, false);
      ReadAceTag readAceTag1 = new ReadAceTag("", "", "", date0, (Rangeable) null, false);
      boolean boolean0 = readAceTag0.equals((Object) readAceTag1);
      assertEquals(1372733671337L, date0.getTime());
      assertEquals(true, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      Date date0 = new Date();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      DirectedRange directedRange0 = DirectedRange.parse((-160L), (-160L), range_CoordinateSystem0);
      ReadAceTag readAceTag0 = new ReadAceTag("E8?0H_hx*uf6wh9v", "E8?0H_hx*uf6wh9v", "E8?0H_hx*uf6wh9v", date0, (Rangeable) directedRange0, true);
      ReadAceTag readAceTag1 = new ReadAceTag("E8?0H_hx*uf6wh9v", "E8?0H_hx*uf6wh9v", "E8?0H_hx*uf6wh9v", date0, (Rangeable) null, true);
      boolean boolean0 = readAceTag0.equals((Object) readAceTag1);
      assertEquals(1372733671513L, date0.getTime());
      assertEquals(false, boolean0);
  }
}
