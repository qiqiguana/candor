/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.internal.trace.chromat.abi.tag.rate;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.nio.BufferUnderflowException;
import org.jcvi.jillion.internal.trace.chromat.abi.tag.TaggedDataName;
import org.jcvi.jillion.internal.trace.chromat.abi.tag.TaggedDataType;
import org.jcvi.jillion.internal.trace.chromat.abi.tag.rate.DefaultScanRateTaggedDataType;
import org.jcvi.jillion.internal.trace.chromat.abi.tag.rate.ScanRate;
import org.jcvi.jillion.internal.trace.chromat.abi.tag.rate.ScanRateTaggedDataType;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DefaultScanRateTaggedDataTypeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TaggedDataName taggedDataName0 = TaggedDataName.TRACKING_INITIAL_ADJUSTMENT;
      TaggedDataType taggedDataType0 = TaggedDataType.TYPE_19;
      DefaultScanRateTaggedDataType defaultScanRateTaggedDataType0 = new DefaultScanRateTaggedDataType(taggedDataName0, (-1L), taggedDataType0, 0, (-1L), (-1L), (long) 0, 5L);
      Class<ScanRateTaggedDataType> class0 = defaultScanRateTaggedDataType0.getType();
      assertEquals(false, class0.isMemberClass());
  }

  @Test
  public void test1()  throws Throwable  {
      TaggedDataName taggedDataName0 = TaggedDataName.SPACING;
      TaggedDataType taggedDataType0 = TaggedDataType.INTEGER;
      DefaultScanRateTaggedDataType defaultScanRateTaggedDataType0 = new DefaultScanRateTaggedDataType(taggedDataName0, 642L, taggedDataType0, 1, 642L, 642L, (-883L), (-883L));
      Class<ScanRate> class0 = defaultScanRateTaggedDataType0.getParsedDataType();
      assertEquals(false, class0.isMemberClass());
  }

  @Test
  public void test2()  throws Throwable  {
      TaggedDataName taggedDataName0 = TaggedDataName.LANE;
      TaggedDataType taggedDataType0 = TaggedDataType.PASCAL_STRING;
      DefaultScanRateTaggedDataType defaultScanRateTaggedDataType0 = new DefaultScanRateTaggedDataType(taggedDataName0, 1L, taggedDataType0, (-1714), (long) (-1714), (long) (-1714), 1L, (long) (-1714));
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try {
        defaultScanRateTaggedDataType0.parseDataFrom(byteArray0);
        fail("Expecting exception: BufferUnderflowException");
      } catch(BufferUnderflowException e) {
      }
  }
}
