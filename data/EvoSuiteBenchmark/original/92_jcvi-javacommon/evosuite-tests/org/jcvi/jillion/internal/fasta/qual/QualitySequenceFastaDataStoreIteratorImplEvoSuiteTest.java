/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.internal.fasta.qual;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.File;
import java.io.IOException;
import org.jcvi.jillion.core.datastore.DataStoreFilter;
import org.jcvi.jillion.internal.fasta.qual.QualitySequenceFastaDataStoreIteratorImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class QualitySequenceFastaDataStoreIteratorImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      File file0 = new File("");
      File file1 = file0.getCanonicalFile();
      QualitySequenceFastaDataStoreIteratorImpl qualitySequenceFastaDataStoreIteratorImpl0 = new QualitySequenceFastaDataStoreIteratorImpl(file1, (DataStoreFilter) null);
      // Undeclared exception!
      try {
        qualitySequenceFastaDataStoreIteratorImpl0.backgroundThreadRunMethod();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * fasta file does not exist
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      File file0 = new File("?");
      // Undeclared exception!
      try {
        QualitySequenceFastaDataStoreIteratorImpl.createIteratorFor(file0, (DataStoreFilter) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * fasta file must exist
         */
      }
  }
}
