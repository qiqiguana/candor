/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.core.io;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.File;
import java.io.IOException;
import org.jcvi.jillion.core.io.FileUtil;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FileUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      File file0 = new File("");
      String string0 = FileUtil.createRelavitePathFrom(file0, file0);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      File file0 = new File("", "");
      File file1 = new File("U2esP?,;zmZgU89", "U2esP?,;zmZgU89");
      String string0 = FileUtil.createRelavitePathFrom(file1, file0, 'j');
      assertEquals("..j..j..j..j..j..j..j..", string0);
      assertNotNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      File file0 = new File("");
      File file1 = new File(file0, "CQS!");
      String string0 = FileUtil.createRelavitePathFrom(file0, file1, '2');
      assertNotNull(string0);
      assertEquals("..2..2..2..2..2..2CQS!", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      String string0 = FileUtil.getBaseName("u/NiIZX~g]%");
      assertNotNull(string0);
      assertEquals("NiIZX~g]%", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      File file0 = new File("^>pWavrq!%M.A_nB0|");
      String string0 = FileUtil.getExtension(file0);
      assertNotNull(string0);
      assertEquals("A_nB0|", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      String string0 = FileUtil.getExtension((File) null);
      assertNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      String string0 = FileUtil.getExtension((String) null);
      assertNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      File file0 = new File("^>pWavrq!%M.A_nB0|");
      File file1 = file0.getAbsoluteFile();
      File file2 = file1.getParentFile();
      String string0 = FileUtil.getExtension(file2);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test
  public void test8()  throws Throwable  {
      File file0 = new File("", "");
      String string0 = FileUtil.getBaseName(file0);
      assertEquals("", string0);
  }

  @Test
  public void test9()  throws Throwable  {
      String string0 = FileUtil.getBaseName((File) null);
      assertNull(string0);
  }

  @Test
  public void test10()  throws Throwable  {
      String string0 = FileUtil.getBaseName((String) null);
      assertNull(string0);
  }

  @Test
  public void test11()  throws Throwable  {
      File file0 = new File("^>pWavrq!%M.A_nB0|");
      String string0 = FileUtil.getBaseName(file0);
      assertEquals("^>pWavrq!%M", string0);
      assertNotNull(string0);
  }
}
