/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.assembly.consed.phd;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import org.jcvi.jillion.assembly.consed.phd.DefaultPhdWholeReadItem;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DefaultPhdWholeReadItemEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      DefaultPhdWholeReadItem defaultPhdWholeReadItem0 = new DefaultPhdWholeReadItem((List<String>) linkedList0);
      List<String> list0 = defaultPhdWholeReadItem0.getLines();
      assertEquals(true, list0.isEmpty());
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultPhdWholeReadItem defaultPhdWholeReadItem0 = null;
      try {
        defaultPhdWholeReadItem0 = new DefaultPhdWholeReadItem((List<String>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * lines can not be null
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      DefaultPhdWholeReadItem defaultPhdWholeReadItem0 = new DefaultPhdWholeReadItem((List<String>) linkedList0);
      assertNotNull(defaultPhdWholeReadItem0);
      
      int int0 = defaultPhdWholeReadItem0.hashCode();
      assertEquals(32, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      DefaultPhdWholeReadItem defaultPhdWholeReadItem0 = new DefaultPhdWholeReadItem((List<String>) linkedList0);
      assertNotNull(defaultPhdWholeReadItem0);
      
      boolean boolean0 = defaultPhdWholeReadItem0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      DefaultPhdWholeReadItem defaultPhdWholeReadItem0 = new DefaultPhdWholeReadItem((List<String>) linkedList0);
      assertNotNull(defaultPhdWholeReadItem0);
      
      DefaultPhdWholeReadItem defaultPhdWholeReadItem1 = new DefaultPhdWholeReadItem((List<String>) linkedList0);
      boolean boolean0 = defaultPhdWholeReadItem0.equals((Object) defaultPhdWholeReadItem1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      DefaultPhdWholeReadItem defaultPhdWholeReadItem0 = new DefaultPhdWholeReadItem((List<String>) linkedList0);
      assertNotNull(defaultPhdWholeReadItem0);
      
      boolean boolean0 = defaultPhdWholeReadItem0.equals((Object) "uH");
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<String> linkedList1 = new LinkedList<String>((Collection<? extends String>) linkedList0);
      DefaultPhdWholeReadItem defaultPhdWholeReadItem0 = new DefaultPhdWholeReadItem((List<String>) linkedList1);
      assertNotNull(defaultPhdWholeReadItem0);
      
      linkedList1.add("uH");
      DefaultPhdWholeReadItem defaultPhdWholeReadItem1 = new DefaultPhdWholeReadItem((List<String>) linkedList0);
      boolean boolean0 = defaultPhdWholeReadItem0.equals((Object) defaultPhdWholeReadItem1);
      assertEquals(false, boolean0);
  }
}
