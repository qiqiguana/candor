/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.assembly.ca.asm;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import org.jcvi.jillion.assembly.ca.asm.AsmUtil;
import org.jcvi.jillion.core.residue.nt.NucleotideSequenceBuilder;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AsmUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      NucleotideSequenceBuilder nucleotideSequenceBuilder0 = AsmUtil.computeGappedSequence((NucleotideSequenceBuilder) null, (List<Integer>) linkedList0);
      assertNull(nucleotideSequenceBuilder0);
  }

  @Test
  public void test1()  throws Throwable  {
      Stack<Integer> stack0 = new Stack<Integer>();
      Integer integer0 = new Integer(77);
      stack0.add(integer0);
      // Undeclared exception!
      try {
        AsmUtil.computeGappedSequence((NucleotideSequenceBuilder) null, (List<Integer>) stack0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
