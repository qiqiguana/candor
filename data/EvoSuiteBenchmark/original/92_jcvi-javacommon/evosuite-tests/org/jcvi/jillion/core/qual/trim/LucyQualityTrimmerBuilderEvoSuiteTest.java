/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.core.qual.trim;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.jcvi.jillion.core.qual.trim.LucyQualityTrimmerBuilder;
import org.jcvi.jillion.core.qual.trim.QualityTrimmer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LucyQualityTrimmerBuilderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LucyQualityTrimmerBuilder lucyQualityTrimmerBuilder0 = new LucyQualityTrimmerBuilder(1809);
      // Undeclared exception!
      try {
        lucyQualityTrimmerBuilder0.maxAvgError((double) 1809);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * max avg error must be between 0.0 and 1.0
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      LucyQualityTrimmerBuilder lucyQualityTrimmerBuilder0 = new LucyQualityTrimmerBuilder(1);
      // Undeclared exception!
      try {
        lucyQualityTrimmerBuilder0.maxErrorAtEdges((double) (-1785));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * max avg error must be between 0.0 and 1.0
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      LucyQualityTrimmerBuilder lucyQualityTrimmerBuilder0 = new LucyQualityTrimmerBuilder(0);
      QualityTrimmer qualityTrimmer0 = (QualityTrimmer)lucyQualityTrimmerBuilder0.build();
      QualityTrimmer qualityTrimmer1 = (QualityTrimmer)lucyQualityTrimmerBuilder0.build();
      assertNotSame(qualityTrimmer1, qualityTrimmer0);
  }

  @Test
  public void test3()  throws Throwable  {
      LucyQualityTrimmerBuilder lucyQualityTrimmerBuilder0 = new LucyQualityTrimmerBuilder(1);
      lucyQualityTrimmerBuilder0.addTrimWindow(1, 1);
      LucyQualityTrimmerBuilder lucyQualityTrimmerBuilder1 = lucyQualityTrimmerBuilder0.addTrimWindow(1, 1);
      assertSame(lucyQualityTrimmerBuilder1, lucyQualityTrimmerBuilder0);
  }

  @Test
  public void test4()  throws Throwable  {
      LucyQualityTrimmerBuilder lucyQualityTrimmerBuilder0 = new LucyQualityTrimmerBuilder(0);
      // Undeclared exception!
      try {
        lucyQualityTrimmerBuilder0.addTrimWindow(0, 0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * window size must be >= 1
         */
      }
  }
}
