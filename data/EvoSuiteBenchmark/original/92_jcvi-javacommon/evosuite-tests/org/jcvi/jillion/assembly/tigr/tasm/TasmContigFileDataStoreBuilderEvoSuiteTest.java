/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.assembly.tigr.tasm;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import org.jcvi.jillion.assembly.tigr.tasm.TasmContigDataStore;
import org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder;
import org.jcvi.jillion.core.datastore.DataStoreFilter;
import org.jcvi.jillion.core.datastore.DataStoreProviderHint;
import org.jcvi.jillion.core.residue.nt.NucleotideSequenceDataStore;
import org.jcvi.jillion.fasta.FastaFileParser;
import org.jcvi.jillion.fasta.FastaVisitorCallback;
import org.jcvi.jillion.fasta.nt.IndexedNucleotideSequenceFastaFileDataStore;
import org.jcvi.jillion.fasta.nt.NucleotideFastaDataStore;

@RunWith(EvoSuiteRunner.class)
public class TasmContigFileDataStoreBuilderEvoSuiteTest {


  //Test case number: 0
  /*
   * 7 covered goals:
   * 1 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.filter(Lorg/jcvi/jillion/core/datastore/DataStoreFilter;)Lorg/jcvi/jillion/assembly/tigr/tasm/TasmContigFileDataStoreBuilder;: I3 Branch 9 IFNONNULL L151 - false
   * 2 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.adapt(Lorg/jcvi/jillion/fasta/nt/NucleotideFastaDataStore;)Lorg/jcvi/jillion/core/datastore/DataStore;: root-Branch
   * 3 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.<init>(Ljava/io/File;Lorg/jcvi/jillion/fasta/nt/NucleotideFastaDataStore;)V: I17 Branch 1 IFNONNULL L66 - true
   * 4 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.<init>(Ljava/io/File;Lorg/jcvi/jillion/fasta/nt/NucleotideFastaDataStore;)V: I29 Branch 2 IFNE L69 - true
   * 5 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.<init>(Ljava/io/File;Lorg/jcvi/jillion/fasta/nt/NucleotideFastaDataStore;)V: I41 Branch 3 IFNE L72 - true
   * 6 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.<init>(Ljava/io/File;Lorg/jcvi/jillion/fasta/nt/NucleotideFastaDataStore;)V: I52 Branch 4 IFNONNULL L75 - true
   * 7 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder$1.<init>(Lorg/jcvi/jillion/assembly/tigr/tasm/TasmContigFileDataStoreBuilder;)V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      File file0 = new File("");
      File file1 = file0.getCanonicalFile();
      HashMap<String, FastaVisitorCallback.FastaVisitorMemento> hashMap0 = new HashMap<String, FastaVisitorCallback.FastaVisitorMemento>();
      IndexedNucleotideSequenceFastaFileDataStore.IndexedNucleotideSequenceFastaFileDataStore2 indexedNucleotideSequenceFastaFileDataStore_IndexedNucleotideSequenceFastaFileDataStore2_0 = new IndexedNucleotideSequenceFastaFileDataStore.IndexedNucleotideSequenceFastaFileDataStore2(file0, (FastaFileParser) null, (DataStoreFilter) null, (Map<String, FastaVisitorCallback.FastaVisitorMemento>) hashMap0);
      TasmContigFileDataStoreBuilder tasmContigFileDataStoreBuilder0 = new TasmContigFileDataStoreBuilder(file1, (NucleotideFastaDataStore) indexedNucleotideSequenceFastaFileDataStore_IndexedNucleotideSequenceFastaFileDataStore2_0);
      // Undeclared exception!
      try {
        tasmContigFileDataStoreBuilder0.filter((DataStoreFilter) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * filter can not be null
         */
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.<init>(Ljava/io/File;Lorg/jcvi/jillion/fasta/nt/NucleotideFastaDataStore;)V: I17 Branch 1 IFNONNULL L66 - false
   */
  @Test
  public void test1()  throws Throwable  {
      TasmContigFileDataStoreBuilder tasmContigFileDataStoreBuilder0 = null;
      try {
        tasmContigFileDataStoreBuilder0 = new TasmContigFileDataStoreBuilder((File) null, (NucleotideFastaDataStore) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * contig file can not be null
         */
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.<init>(Ljava/io/File;Lorg/jcvi/jillion/fasta/nt/NucleotideFastaDataStore;)V: I29 Branch 2 IFNE L69 - false
   */
  @Test
  public void test2()  throws Throwable  {
      File file0 = new File("8JGvin,*~,ZM^ W");
      TasmContigFileDataStoreBuilder tasmContigFileDataStoreBuilder0 = null;
      try {
        tasmContigFileDataStoreBuilder0 = new TasmContigFileDataStoreBuilder(file0, (NucleotideFastaDataStore) null);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
        /*
         * contig file must exist
         */
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.<init>(Ljava/io/File;Lorg/jcvi/jillion/fasta/nt/NucleotideFastaDataStore;)V: I52 Branch 4 IFNONNULL L75 - false
   */
  @Test
  public void test3()  throws Throwable  {
      File file0 = new File("", "");
      TasmContigFileDataStoreBuilder tasmContigFileDataStoreBuilder0 = null;
      try {
        tasmContigFileDataStoreBuilder0 = new TasmContigFileDataStoreBuilder(file0, (NucleotideFastaDataStore) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * sequence datastore can not be null
         */
      }
  }

  //Test case number: 4
  /*
   * 4 covered goals:
   * 1 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.<init>(Ljava/io/File;Lorg/jcvi/jillion/core/residue/nt/NucleotideSequenceDataStore;)V: I17 Branch 5 IFNONNULL L97 - true
   * 2 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.<init>(Ljava/io/File;Lorg/jcvi/jillion/core/residue/nt/NucleotideSequenceDataStore;)V: I29 Branch 6 IFNE L100 - true
   * 3 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.<init>(Ljava/io/File;Lorg/jcvi/jillion/core/residue/nt/NucleotideSequenceDataStore;)V: I41 Branch 7 IFNE L103 - true
   * 4 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.<init>(Ljava/io/File;Lorg/jcvi/jillion/core/residue/nt/NucleotideSequenceDataStore;)V: I52 Branch 8 IFNONNULL L106 - false
   */
  @Test
  public void test4()  throws Throwable  {
      File file0 = new File("", "");
      TasmContigFileDataStoreBuilder tasmContigFileDataStoreBuilder0 = null;
      try {
        tasmContigFileDataStoreBuilder0 = new TasmContigFileDataStoreBuilder(file0, (NucleotideSequenceDataStore) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * sequence datastore can not be null
         */
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.<init>(Ljava/io/File;Lorg/jcvi/jillion/core/residue/nt/NucleotideSequenceDataStore;)V: I17 Branch 5 IFNONNULL L97 - false
   */
  @Test
  public void test5()  throws Throwable  {
      TasmContigFileDataStoreBuilder tasmContigFileDataStoreBuilder0 = null;
      try {
        tasmContigFileDataStoreBuilder0 = new TasmContigFileDataStoreBuilder((File) null, (NucleotideSequenceDataStore) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * contig file can not be null
         */
      }
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * 1 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.<init>(Ljava/io/File;Lorg/jcvi/jillion/core/residue/nt/NucleotideSequenceDataStore;)V: I29 Branch 6 IFNE L100 - false
   * 2 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.<init>(Ljava/io/File;Lorg/jcvi/jillion/core/residue/nt/NucleotideSequenceDataStore;)V: I17 Branch 5 IFNONNULL L97 - true
   */
  @Test
  public void test6()  throws Throwable  {
      File file0 = new File("PEH~@ q5(.Z?XA");
      TasmContigFileDataStoreBuilder tasmContigFileDataStoreBuilder0 = null;
      try {
        tasmContigFileDataStoreBuilder0 = new TasmContigFileDataStoreBuilder(file0, (NucleotideSequenceDataStore) null);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
        /*
         * contig file must exist
         */
      }
  }

  //Test case number: 7
  /*
   * 5 covered goals:
   * 1 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.build()Lorg/jcvi/jillion/assembly/tigr/tasm/TasmContigDataStore;: I7 Branch 11 TABLESWITCH L210 Case 1 - false
   * 2 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.build()Lorg/jcvi/jillion/assembly/tigr/tasm/TasmContigDataStore;: I7 Branch 12 TABLESWITCH L210 Case 2 - true
   * 3 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.build()Lorg/jcvi/jillion/assembly/tigr/tasm/TasmContigDataStore;: I7 Branch 13 TABLESWITCH L210 Case 3 - false
   * 4 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.build()Lorg/jcvi/jillion/assembly/tigr/tasm/TasmContigDataStore;: I7 Branch 14 TABLESWITCH L210 Default-Case - false
   * 5 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.hint(Lorg/jcvi/jillion/core/datastore/DataStoreProviderHint;)Lorg/jcvi/jillion/assembly/tigr/tasm/TasmContigFileDataStoreBuilder;: I3 Branch 10 IFNONNULL L174 - true
   */
  @Test
  public void test7()  throws Throwable  {
      File file0 = new File("");
      File file1 = file0.getCanonicalFile();
      HashMap<String, FastaVisitorCallback.FastaVisitorMemento> hashMap0 = new HashMap<String, FastaVisitorCallback.FastaVisitorMemento>();
      IndexedNucleotideSequenceFastaFileDataStore.IndexedNucleotideSequenceFastaFileDataStore2 indexedNucleotideSequenceFastaFileDataStore_IndexedNucleotideSequenceFastaFileDataStore2_0 = new IndexedNucleotideSequenceFastaFileDataStore.IndexedNucleotideSequenceFastaFileDataStore2(file0, (FastaFileParser) null, (DataStoreFilter) null, (Map<String, FastaVisitorCallback.FastaVisitorMemento>) hashMap0);
      TasmContigFileDataStoreBuilder tasmContigFileDataStoreBuilder0 = new TasmContigFileDataStoreBuilder(file1, (NucleotideFastaDataStore) indexedNucleotideSequenceFastaFileDataStore_IndexedNucleotideSequenceFastaFileDataStore2_0);
      DataStoreProviderHint dataStoreProviderHint0 = DataStoreProviderHint.RANDOM_ACCESS_OPTIMIZE_MEMORY;
      TasmContigFileDataStoreBuilder tasmContigFileDataStoreBuilder1 = tasmContigFileDataStoreBuilder0.hint(dataStoreProviderHint0);
      try {
        tasmContigFileDataStoreBuilder1.build();
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
        /*
         * /scratch/gordon/test_sf110/sf110/92_jcvi-javacommon (Is a directory)
         */
      }
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.build()Lorg/jcvi/jillion/assembly/tigr/tasm/TasmContigDataStore;: I7 Branch 12 TABLESWITCH L210 Case 2 - false
   * 2 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.build()Lorg/jcvi/jillion/assembly/tigr/tasm/TasmContigDataStore;: I7 Branch 11 TABLESWITCH L210 Case 1 - true
   * 3 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.build()Lorg/jcvi/jillion/assembly/tigr/tasm/TasmContigDataStore;: I7 Branch 13 TABLESWITCH L210 Case 3 - false
   */
  @Test
  public void test8()  throws Throwable  {
      File file0 = new File("");
      File file1 = file0.getCanonicalFile();
      HashMap<String, FastaVisitorCallback.FastaVisitorMemento> hashMap0 = new HashMap<String, FastaVisitorCallback.FastaVisitorMemento>();
      IndexedNucleotideSequenceFastaFileDataStore.IndexedNucleotideSequenceFastaFileDataStore2 indexedNucleotideSequenceFastaFileDataStore_IndexedNucleotideSequenceFastaFileDataStore2_0 = new IndexedNucleotideSequenceFastaFileDataStore.IndexedNucleotideSequenceFastaFileDataStore2(file0, (FastaFileParser) null, (DataStoreFilter) null, (Map<String, FastaVisitorCallback.FastaVisitorMemento>) hashMap0);
      TasmContigFileDataStoreBuilder tasmContigFileDataStoreBuilder0 = new TasmContigFileDataStoreBuilder(file1, (NucleotideFastaDataStore) indexedNucleotideSequenceFastaFileDataStore_IndexedNucleotideSequenceFastaFileDataStore2_0);
      try {
        tasmContigFileDataStoreBuilder0.build();
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
        /*
         * /scratch/gordon/test_sf110/sf110/92_jcvi-javacommon (Is a directory)
         */
      }
  }

  //Test case number: 9
  /*
   * 11 covered goals:
   * 1 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.build()Lorg/jcvi/jillion/assembly/tigr/tasm/TasmContigDataStore;: I7 Branch 13 TABLESWITCH L210 Case 3 - true
   * 2 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.adapt(Lorg/jcvi/jillion/fasta/nt/NucleotideFastaDataStore;)Lorg/jcvi/jillion/core/datastore/DataStore;: root-Branch
   * 3 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.<init>(Ljava/io/File;Lorg/jcvi/jillion/fasta/nt/NucleotideFastaDataStore;)V: I17 Branch 1 IFNONNULL L66 - true
   * 4 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.<init>(Ljava/io/File;Lorg/jcvi/jillion/fasta/nt/NucleotideFastaDataStore;)V: I29 Branch 2 IFNE L69 - true
   * 5 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.<init>(Ljava/io/File;Lorg/jcvi/jillion/fasta/nt/NucleotideFastaDataStore;)V: I41 Branch 3 IFNE L72 - true
   * 6 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.<init>(Ljava/io/File;Lorg/jcvi/jillion/fasta/nt/NucleotideFastaDataStore;)V: I52 Branch 4 IFNONNULL L75 - true
   * 7 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.build()Lorg/jcvi/jillion/assembly/tigr/tasm/TasmContigDataStore;: I7 Branch 11 TABLESWITCH L210 Case 1 - false
   * 8 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.build()Lorg/jcvi/jillion/assembly/tigr/tasm/TasmContigDataStore;: I7 Branch 12 TABLESWITCH L210 Case 2 - false
   * 9 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.build()Lorg/jcvi/jillion/assembly/tigr/tasm/TasmContigDataStore;: I7 Branch 14 TABLESWITCH L210 Default-Case - false
   * 10 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder.hint(Lorg/jcvi/jillion/core/datastore/DataStoreProviderHint;)Lorg/jcvi/jillion/assembly/tigr/tasm/TasmContigFileDataStoreBuilder;: I3 Branch 10 IFNONNULL L174 - true
   * 11 org.jcvi.jillion.assembly.tigr.tasm.TasmContigFileDataStoreBuilder$1.<init>(Lorg/jcvi/jillion/assembly/tigr/tasm/TasmContigFileDataStoreBuilder;)V: root-Branch
   */
  @Test
  public void test9()  throws Throwable  {
      File file0 = new File("");
      File file1 = file0.getCanonicalFile();
      HashMap<String, FastaVisitorCallback.FastaVisitorMemento> hashMap0 = new HashMap<String, FastaVisitorCallback.FastaVisitorMemento>();
      IndexedNucleotideSequenceFastaFileDataStore.IndexedNucleotideSequenceFastaFileDataStore2 indexedNucleotideSequenceFastaFileDataStore_IndexedNucleotideSequenceFastaFileDataStore2_0 = new IndexedNucleotideSequenceFastaFileDataStore.IndexedNucleotideSequenceFastaFileDataStore2(file0, (FastaFileParser) null, (DataStoreFilter) null, (Map<String, FastaVisitorCallback.FastaVisitorMemento>) hashMap0);
      TasmContigFileDataStoreBuilder tasmContigFileDataStoreBuilder0 = new TasmContigFileDataStoreBuilder(file1, (NucleotideFastaDataStore) indexedNucleotideSequenceFastaFileDataStore_IndexedNucleotideSequenceFastaFileDataStore2_0);
      DataStoreProviderHint dataStoreProviderHint0 = DataStoreProviderHint.ITERATION_ONLY;
      TasmContigFileDataStoreBuilder tasmContigFileDataStoreBuilder1 = tasmContigFileDataStoreBuilder0.hint(dataStoreProviderHint0);
      TasmContigDataStore tasmContigDataStore0 = tasmContigFileDataStoreBuilder1.build();
      assertEquals(false, tasmContigDataStore0.isClosed());
  }
}
