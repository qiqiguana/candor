/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.trace.fastq;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.jcvi.jillion.trace.fastq.IlluminaUtil;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class IlluminaUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getFlowcellId("j#!J-VAsjC)");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * is not an illumina read id j#!J-VAsjC)
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getFlowcellId("SOLEXA0:0:0:0:0#/0");
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * No match found
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getFlowcellId("\u0000:0:\u0000:0:0#/0");
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * No match found
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      boolean boolean0 = IlluminaUtil.isIlluminaRead("b,>&");
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.isIlluminaRead((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      boolean boolean0 = IlluminaUtil.isIlluminaRead("SOLEXA0:0:0:0:0#/0");
      assertEquals(true, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getRunId("\u0000:0:\u0000:0:0#/0");
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * No match found
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getRunId(">L795Ztw`&{");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * is not an illumina read id >L795Ztw`&{
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getInstrumentName("SOLEXA0:0:0:0:0#/0");
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * No match found
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getInstrumentName((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getInstrumentName("\u00000:\u0000:0:0#0");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * is not an illumina read id \u00000:\u0000:0:0#0
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getFlowcellId((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getTileNumber("+{ Z-b2[7K|U~qfi");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * is not an illumina read id +{ Z-b2[7K|U~qfi
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getTileNumber((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getTileNumber("SOLEXA0:0:0:0:0#/0");
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * No match found
         */
      }
  }

  @Test
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getXClusterCoordinate("SOLEXA0:0:0:0:0#/0");
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * No match found
         */
      }
  }

  @Test
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getXClusterCoordinate((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getXClusterCoordinate("");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * is not an illumina read id 
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getYClusterCoordinate("hG(:q");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * is not an illumina read id hG(:q
         */
      }
  }

  @Test
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getYClusterCoordinate((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getYClusterCoordinate("SOLEXA0:0:0:0:0#/0");
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * No match found
         */
      }
  }

  @Test
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getMultiplexIndex(";j2ph(m\"u+b|D*uj");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * is not an illumina read id ;j2ph(m\"u+b|D*uj
         */
      }
  }

  @Test
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getMultiplexIndex((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getMultiplexIndex("SOLEXA0:0:0:0:0#/0");
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * No match found
         */
      }
  }

  @Test
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getPairNumber("SOLEXA0:0:0:0:0#/0");
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * No match found
         */
      }
  }

  @Test
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getPairNumber((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try {
        IlluminaUtil.getPairNumber("cM|oL5ee]");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * is not an illumina read id or member of a paircM|oL5ee]
         */
      }
  }
}
