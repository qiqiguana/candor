/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.internal.trace.chromat.ztr.data;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.jcvi.jillion.internal.trace.chromat.ztr.data.FollowData;
import org.jcvi.jillion.trace.TraceDecoderException;
import org.jcvi.jillion.trace.TraceEncoderException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FollowDataEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FollowData followData0 = FollowData.INSTANCE;
      byte[] byteArray0 = new byte[8];
      byte[] byteArray1 = followData0.encodeData(byteArray0);
      byte[] byteArray2 = followData0.parseData(byteArray1);
      assertFalse(byteArray2.equals(byteArray0));
  }

  @Test
  public void test1()  throws Throwable  {
      FollowData followData0 = FollowData.INSTANCE;
      byte[] byteArray0 = new byte[9];
      byte[] byteArray1 = followData0.encodeData(byteArray0, (byte) (-75));
      assertFalse(byteArray0.equals(byteArray1));
  }

  @Test
  public void test2()  throws Throwable  {
      FollowData followData0 = FollowData.INSTANCE;
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-15);
      byte[] byteArray1 = followData0.encodeData(byteArray0);
      assertFalse(byteArray1.equals(byteArray0));
  }
}
