/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.core;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import org.jcvi.jillion.core.Range;
import org.jcvi.jillion.core.Ranges;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RangesEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LinkedList<Range> linkedList0 = new LinkedList<Range>();
      Range range0 = Ranges.createInclusiveRange((Collection<Range>) linkedList0);
      linkedList0.add(range0);
      linkedList0.add(range0);
      List<Range> list0 = Ranges.mergeIntoClusters((Collection<Range>) linkedList0, 1);
      assertEquals("[[ 0 .. -1 ]/0B, [ 0 .. -1 ]/0B]", linkedList0.toString());
      assertEquals(1, list0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      LinkedList<Range> linkedList0 = new LinkedList<Range>();
      // Undeclared exception!
      try {
        Ranges.merge((Collection<Range>) linkedList0, (-178));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * cluster distance can not be negative
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      LinkedList<Range> linkedList0 = new LinkedList<Range>();
      // Undeclared exception!
      try {
        Ranges.mergeIntoClusters((Collection<Range>) linkedList0, (-6));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * max cluster distance can not be negative
         */
      }
  }
}
