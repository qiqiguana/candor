/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.assembly.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.jcvi.jillion.assembly.AssembledRead;
import org.jcvi.jillion.assembly.util.GapQualityValueStrategy;
import org.jcvi.jillion.core.qual.PhredQuality;
import org.jcvi.jillion.core.qual.QualitySequence;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class GapQualityValueStrategyEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      GapQualityValueStrategy gapQualityValueStrategy0 = GapQualityValueStrategy.ALWAYS_ZERO;
      PhredQuality phredQuality0 = PhredQuality.valueOf(41);
      PhredQuality phredQuality1 = gapQualityValueStrategy0.computeQualityValueForGap((-2007), 41, phredQuality0, phredQuality0);
      assertNotNull(phredQuality1);
      assertEquals(1.0, phredQuality1.getErrorProbability(), 0.01D);
  }

  @Test
  public void test1()  throws Throwable  {
      GapQualityValueStrategy gapQualityValueStrategy0 = GapQualityValueStrategy.ALWAYS_ZERO;
      // Undeclared exception!
      try {
        gapQualityValueStrategy0.getQualityForNonGapBase((AssembledRead) null, (QualitySequence) null, 230);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      GapQualityValueStrategy gapQualityValueStrategy0 = GapQualityValueStrategy.LOWEST_FLANKING;
      PhredQuality phredQuality0 = PhredQuality.valueOf(5);
      PhredQuality phredQuality1 = gapQualityValueStrategy0.computeQualityValueForGap(5, 1058, phredQuality0, phredQuality0);
      assertEquals("Q05", phredQuality1.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      GapQualityValueStrategy gapQualityValueStrategy0 = GapQualityValueStrategy.ALWAYS_ZERO;
      // Undeclared exception!
      try {
        gapQualityValueStrategy0.getQualityFor((AssembledRead) null, (QualitySequence) null, 1866);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * null qualities for null
         */
      }
  }
}
