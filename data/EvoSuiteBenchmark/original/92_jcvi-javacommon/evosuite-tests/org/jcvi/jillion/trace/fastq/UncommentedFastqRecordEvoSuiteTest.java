/*
 * This file was automatically generated by EvoSuite
 */

package org.jcvi.jillion.trace.fastq;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.jcvi.jillion.core.qual.QualitySequence;
import org.jcvi.jillion.core.residue.nt.NucleotideSequence;
import org.jcvi.jillion.trace.fastq.UncommentedFastqRecord;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UncommentedFastqRecordEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UncommentedFastqRecord uncommentedFastqRecord0 = null;
      try {
        uncommentedFastqRecord0 = new UncommentedFastqRecord("JB$cJ9", (NucleotideSequence) null, (QualitySequence) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * nucleotides can not be null
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      UncommentedFastqRecord uncommentedFastqRecord0 = null;
      try {
        uncommentedFastqRecord0 = new UncommentedFastqRecord((String) null, (NucleotideSequence) null, (QualitySequence) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * id can not be null
         */
      }
  }
}
