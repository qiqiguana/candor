/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.lucene.util.packed;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.apache.lucene.util.packed.GrowingMutable;
import org.apache.lucene.util.packed.PackedInts;
import org.apache.lucene.util.packed.PackedPair;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PackedPairEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PackedPair packedPair0 = new PackedPair((-1081), (-1081), (-1081), (-1081));
      packedPair0.setSecondaryOffset((long) (-1081));
  }

  @Test
  public void test1()  throws Throwable  {
      PackedPair packedPair0 = new PackedPair((-1971), (-1971), (-1726), (-2006L));
      assertNotNull(packedPair0);
      
      PackedInts.Mutable packedInts_Mutable0 = packedPair0.getSecondaries();
      assertNotNull(packedInts_Mutable0);
      assertEquals(425264L, packedInts_Mutable0.ramBytesUsed());
  }

  @Test
  public void test2()  throws Throwable  {
      PackedPair packedPair0 = new PackedPair((-1), 1, 0, (-1));
      PackedInts.Mutable packedInts_Mutable0 = packedPair0.getPrimaries();
      assertNotNull(packedInts_Mutable0);
      assertEquals(1, packedInts_Mutable0.getBitsPerValue());
      assertEquals(-1, packedInts_Mutable0.size());
  }

  @Test
  public void test3()  throws Throwable  {
      PackedPair packedPair0 = new PackedPair((-1971), (-1971), (-1726), (-2006L));
      int[] intArray0 = new int[8];
      packedPair0.countUniquePrimaries(intArray0);
  }

  @Test
  public void test4()  throws Throwable  {
      PackedPair packedPair0 = new PackedPair((-615), (-615), (-283), (-1824L));
      int[] intArray0 = new int[10];
      packedPair0.add((-1L), (-1L));
      // Undeclared exception!
      try {
        packedPair0.countUniquePrimaries(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      PackedPair packedPair0 = new PackedPair((-1971), (-1971), (-1726), (-2006L));
      int[] intArray0 = new int[8];
      packedPair0.assignSecondaries(intArray0, (PackedInts.Mutable) null);
  }

  @Test
  public void test6()  throws Throwable  {
      PackedPair packedPair0 = new PackedPair((-1081), (-1081), (-1081), (-1081));
      assertNotNull(packedPair0);
      
      int[] intArray0 = new int[3];
      packedPair0.add((long) (-1081), 1433L);
      GrowingMutable growingMutable0 = new GrowingMutable();
      // Undeclared exception!
      try {
        packedPair0.assignSecondaries(intArray0, (PackedInts.Mutable) growingMutable0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * ArrayIndexOutOfBounds in destination{size=0}.set(offsets{length=3}[(int)primaries{size=-1081}.get(i{=0}){=71}]++, secondaryOffset{=-1081} + secondaries{size=-1081}.get(i{=0}){=25})
         */
      }
  }
}
