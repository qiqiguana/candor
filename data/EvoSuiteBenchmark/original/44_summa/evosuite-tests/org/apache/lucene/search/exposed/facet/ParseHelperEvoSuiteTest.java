/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.lucene.search.exposed.facet;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Comparator;
import javax.xml.stream.XMLStreamException;
import org.apache.lucene.search.exposed.facet.ParseHelper;
import org.apache.lucene.util.BytesRef;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ParseHelperEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Comparator<BytesRef> comparator0 = ParseHelper.createComparator((String) null);
      assertNotNull(comparator0);
  }

  @Test
  public void test1()  throws Throwable  {
      try {
        ParseHelper.getInteger("PNw{$s7vBszjw{0R", "PNw{$s7vBszjw{0R", "PNw{$s7vBszjw{0R");
        fail("Expecting exception: XMLStreamException");
      } catch(XMLStreamException e) {
        /*
         * The integer for PNw{$s7vBszjw{0R was 'PNw{$s7vBszjw{0R' which is not valid. Full request: PNw{$s7vBszjw{0R
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ParseHelper parseHelper0 = new ParseHelper();
      assertNotNull(parseHelper0);
  }
}
