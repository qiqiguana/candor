/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.lucene.search.exposed.facet.request;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.util.StreamReaderDelegate;
import org.apache.lucene.search.exposed.facet.request.FacetRequestSubtags;
import org.apache.lucene.search.exposed.facet.request.SubtagsConstraints;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FacetRequestSubtagsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SubtagsConstraints.SUBTAGS_ORDER subtagsConstraints_SUBTAGS_ORDER0 = SubtagsConstraints.SUBTAGS_ORDER.base;
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate((XMLStreamReader) null);
      FacetRequestSubtags facetRequestSubtags0 = new FacetRequestSubtags((-600), (-600), (-600), subtagsConstraints_SUBTAGS_ORDER0);
      FacetRequestSubtags facetRequestSubtags1 = null;
      try {
        facetRequestSubtags1 = new FacetRequestSubtags((XMLStreamReader) streamReaderDelegate0, (SubtagsConstraints) facetRequestSubtags0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      SubtagsConstraints.SUBTAGS_ORDER subtagsConstraints_SUBTAGS_ORDER0 = SubtagsConstraints.SUBTAGS_ORDER.base;
      FacetRequestSubtags facetRequestSubtags0 = new FacetRequestSubtags((-600), (-600), (-600), subtagsConstraints_SUBTAGS_ORDER0);
      FacetRequestSubtags facetRequestSubtags1 = (FacetRequestSubtags)facetRequestSubtags0.getDeeperLevel();
      assertNotNull(facetRequestSubtags1);
      assertEquals(-600, facetRequestSubtags0.getMaxTags());
      assertEquals(-600, facetRequestSubtags0.getMinCount());
      assertEquals(-600, facetRequestSubtags0.getMinTotalCount());
      assertEquals(-600, facetRequestSubtags1.getMinTotalCount());
  }
}
