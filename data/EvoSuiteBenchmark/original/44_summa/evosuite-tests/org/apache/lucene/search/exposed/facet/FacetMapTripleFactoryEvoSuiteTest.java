/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.lucene.search.exposed.facet;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.util.LinkedList;
import java.util.List;
import org.apache.lucene.search.exposed.TermProvider;
import org.apache.lucene.search.exposed.facet.FacetMap;
import org.apache.lucene.search.exposed.facet.FacetMapTripleFactory;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FacetMapTripleFactoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FacetMapTripleFactory facetMapTripleFactory0 = new FacetMapTripleFactory();
      assertNotNull(facetMapTripleFactory0);
  }

  @Test
  public void test1()  throws Throwable  {
      LinkedList<TermProvider> linkedList0 = new LinkedList<TermProvider>();
      FacetMap facetMap0 = FacetMapTripleFactory.createMap(1742, (List<TermProvider>) linkedList0);
      assertEquals(0, facetMap0.getTagCount());
      assertEquals("FacetMap(#docs=1742 (296 bytes), #refs=0 (16 bytes), providers())", facetMap0.toString());
      assertNotNull(facetMap0);
  }

  @Test
  public void test2()  throws Throwable  {
      LinkedList<TermProvider> linkedList0 = new LinkedList<TermProvider>();
      int[] intArray0 = new int[7];
      intArray0[4] = 2147483646;
      intArray0[6] = 1742;
      // Undeclared exception!
      try {
        FacetMapTripleFactory.extractTags((List<TermProvider>) linkedList0, intArray0, 2147483646, intArray0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * The current implementations does not support more that Integer.MAX_VALUE references to tags. The number of references was 2147485388
         */
      }
  }
}
