/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.lucene.search.exposed.compare;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.apache.lucene.search.exposed.compare.NamedOrderDefaultComparator;
import org.apache.lucene.util.BytesRef;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class NamedOrderDefaultComparatorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      NamedOrderDefaultComparator namedOrderDefaultComparator0 = new NamedOrderDefaultComparator();
      boolean boolean0 = namedOrderDefaultComparator0.isNullFirst();
      assertEquals(false, namedOrderDefaultComparator0.isReverse());
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      NamedOrderDefaultComparator namedOrderDefaultComparator0 = new NamedOrderDefaultComparator();
      boolean boolean0 = namedOrderDefaultComparator0.isReverse();
      assertEquals(false, boolean0);
      assertEquals(false, namedOrderDefaultComparator0.isNullFirst());
  }

  @Test
  public void test2()  throws Throwable  {
      NamedOrderDefaultComparator namedOrderDefaultComparator0 = new NamedOrderDefaultComparator();
      namedOrderDefaultComparator0.setReverse(false);
      assertEquals(false, namedOrderDefaultComparator0.isNullFirst());
      assertEquals(false, namedOrderDefaultComparator0.isReverse());
  }

  @Test
  public void test3()  throws Throwable  {
      NamedOrderDefaultComparator namedOrderDefaultComparator0 = new NamedOrderDefaultComparator();
      BytesRef bytesRef0 = new BytesRef();
      namedOrderDefaultComparator0.compare(bytesRef0, bytesRef0);
      assertEquals(false, namedOrderDefaultComparator0.isReverse());
      assertEquals(false, namedOrderDefaultComparator0.isNullFirst());
  }

  @Test
  public void test4()  throws Throwable  {
      NamedOrderDefaultComparator namedOrderDefaultComparator0 = new NamedOrderDefaultComparator();
      namedOrderDefaultComparator0.getOrder();
      assertEquals(false, namedOrderDefaultComparator0.isReverse());
      assertEquals(false, namedOrderDefaultComparator0.isNullFirst());
  }

  @Test
  public void test5()  throws Throwable  {
      NamedOrderDefaultComparator namedOrderDefaultComparator0 = new NamedOrderDefaultComparator();
      namedOrderDefaultComparator0.setNullFirst(false);
      assertEquals(false, namedOrderDefaultComparator0.isReverse());
      assertEquals(false, namedOrderDefaultComparator0.isNullFirst());
  }

  @Test
  public void test6()  throws Throwable  {
      NamedOrderDefaultComparator namedOrderDefaultComparator0 = new NamedOrderDefaultComparator();
      String string0 = namedOrderDefaultComparator0.getID();
      assertEquals(false, namedOrderDefaultComparator0.isReverse());
      assertEquals(false, namedOrderDefaultComparator0.isNullFirst());
      assertEquals("Ordered_placeholder", string0);
  }
}
