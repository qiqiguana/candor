/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.lucene.util.packed;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.apache.lucene.util.packed.GrowableWriter;
import org.apache.lucene.util.packed.MonotonicReaderFactory;
import org.apache.lucene.util.packed.PackedInts;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MonotonicReaderFactoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      GrowableWriter growableWriter0 = new GrowableWriter(1744, 0, 1744);
      GrowableWriter growableWriter1 = growableWriter0.resize(1744);
      GrowableWriter growableWriter2 = (GrowableWriter)MonotonicReaderFactory.reduce((PackedInts.Reader) growableWriter1);
      assertNotNull(growableWriter2);
      
      GrowableWriter growableWriter3 = (GrowableWriter)MonotonicReaderFactory.reduce((PackedInts.Reader) growableWriter2, 0);
      assertEquals(1744, growableWriter2.getBitsPerValue());
      assertEquals(296L, growableWriter3.ramBytesUsed());
      assertSame(growableWriter2, growableWriter3);
      assertNotNull(growableWriter3);
  }

  @Test
  public void test1()  throws Throwable  {
      MonotonicReaderFactory monotonicReaderFactory0 = new MonotonicReaderFactory();
      assertNotNull(monotonicReaderFactory0);
  }

  @Test
  public void test2()  throws Throwable  {
      GrowableWriter growableWriter0 = new GrowableWriter(1744, 0, 1744);
      GrowableWriter growableWriter1 = (GrowableWriter)MonotonicReaderFactory.reduce((PackedInts.Reader) growableWriter0);
      assertEquals(0, growableWriter1.size());
  }
}
