/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.lucene.search.exposed.compare;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.ibm.icu.text.CollationKey;
import com.ibm.icu.text.Collator;
import com.ibm.icu.text.RuleBasedCollator;
import com.ibm.icu.util.ULocale;
import java.util.Locale;
import org.apache.lucene.search.exposed.compare.NamedCollatorComparator;
import org.apache.lucene.util.BytesRef;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class NamedCollatorComparatorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      NamedCollatorComparator namedCollatorComparator0 = new NamedCollatorComparator(locale0);
      assertNotNull(namedCollatorComparator0);
      
      BytesRef bytesRef0 = new BytesRef(0);
      CollationKey collationKey0 = namedCollatorComparator0.getCollationKey(bytesRef0);
      assertNotNull(collationKey0);
      assertEquals(false, namedCollatorComparator0.isNullFirst());
      assertEquals(false, namedCollatorComparator0.isReverse());
      assertEquals("Collator(Locale(fr))", namedCollatorComparator0.getID());
  }

  @Test
  public void test1()  throws Throwable  {
      ULocale uLocale0 = ULocale.JAPANESE;
      RuleBasedCollator ruleBasedCollator0 = (RuleBasedCollator)Collator.getInstance(uLocale0);
      NamedCollatorComparator namedCollatorComparator0 = new NamedCollatorComparator((Collator) ruleBasedCollator0);
      namedCollatorComparator0.getID();
  }

  @Test
  public void test2()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      NamedCollatorComparator namedCollatorComparator0 = new NamedCollatorComparator(locale0);
      assertNotNull(namedCollatorComparator0);
      
      boolean boolean0 = namedCollatorComparator0.isNullFirst();
      assertEquals(false, boolean0);
      assertEquals("Collator(Locale(ja_JP))", namedCollatorComparator0.getID());
      assertEquals(false, namedCollatorComparator0.isReverse());
  }

  @Test
  public void test3()  throws Throwable  {
      ULocale uLocale0 = ULocale.JAPANESE;
      RuleBasedCollator ruleBasedCollator0 = (RuleBasedCollator)Collator.getInstance(uLocale0);
      NamedCollatorComparator namedCollatorComparator0 = new NamedCollatorComparator((Collator) ruleBasedCollator0);
      namedCollatorComparator0.isReverse();
  }

  @Test
  public void test4()  throws Throwable  {
      ULocale uLocale0 = ULocale.JAPANESE;
      RuleBasedCollator ruleBasedCollator0 = (RuleBasedCollator)Collator.getInstance(uLocale0);
      NamedCollatorComparator namedCollatorComparator0 = new NamedCollatorComparator((Collator) ruleBasedCollator0);
      namedCollatorComparator0.getCollationKey("Collator(com.ibm.icu.text.RuleBasedCollator@c7711d4b)");
  }

  @Test
  public void test5()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      NamedCollatorComparator namedCollatorComparator0 = new NamedCollatorComparator(locale0);
      assertNotNull(namedCollatorComparator0);
      
      namedCollatorComparator0.getOrder();
      assertEquals(false, namedCollatorComparator0.isReverse());
      assertEquals(false, namedCollatorComparator0.isNullFirst());
      assertEquals("Collator(Locale(fr))", namedCollatorComparator0.getID());
  }

  @Test
  public void test6()  throws Throwable  {
      NamedCollatorComparator namedCollatorComparator0 = new NamedCollatorComparator((Collator) null, "ataicud46");
      assertEquals(false, namedCollatorComparator0.isNullFirst());
      
      namedCollatorComparator0.setNullFirst(true);
      BytesRef bytesRef0 = new BytesRef((CharSequence) "ataicud46");
      int int0 = namedCollatorComparator0.compare((BytesRef) null, bytesRef0);
      assertEquals(true, namedCollatorComparator0.isNullFirst());
      assertEquals((-1), int0);
  }

  @Test
  public void test7()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      NamedCollatorComparator namedCollatorComparator0 = new NamedCollatorComparator(locale0);
      assertNotNull(namedCollatorComparator0);
      
      RuleBasedCollator ruleBasedCollator0 = (RuleBasedCollator)namedCollatorComparator0.getCollator();
      assertEquals(false, namedCollatorComparator0.isReverse());
      assertNotNull(ruleBasedCollator0);
      assertEquals(false, ruleBasedCollator0.isAlternateHandlingShifted());
      assertEquals("Collator(Locale(fr))", namedCollatorComparator0.getID());
      assertEquals(false, namedCollatorComparator0.isNullFirst());
  }

  @Test
  public void test8()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      NamedCollatorComparator namedCollatorComparator0 = new NamedCollatorComparator(locale0);
      assertNotNull(namedCollatorComparator0);
      
      BytesRef bytesRef0 = new BytesRef();
      int int0 = namedCollatorComparator0.compare(bytesRef0, bytesRef0);
      assertEquals(0, int0);
      assertEquals(false, namedCollatorComparator0.isReverse());
      assertEquals(false, namedCollatorComparator0.isNullFirst());
      assertEquals("Collator(Locale(ja_JP))", namedCollatorComparator0.getID());
  }

  @Test
  public void test9()  throws Throwable  {
      BytesRef bytesRef0 = new BytesRef((CharSequence) "aa/icudt46b");
      Locale locale0 = Locale.CHINA;
      NamedCollatorComparator namedCollatorComparator0 = new NamedCollatorComparator(locale0);
      assertNotNull(namedCollatorComparator0);
      
      int int0 = namedCollatorComparator0.compare((BytesRef) null, bytesRef0);
      assertEquals("Collator(Locale(zh_CN))", namedCollatorComparator0.getID());
      assertEquals(false, namedCollatorComparator0.isReverse());
      assertEquals(1, int0);
  }

  @Test
  public void test10()  throws Throwable  {
      ULocale uLocale0 = ULocale.JAPANESE;
      RuleBasedCollator ruleBasedCollator0 = (RuleBasedCollator)Collator.getInstance(uLocale0);
      NamedCollatorComparator namedCollatorComparator0 = new NamedCollatorComparator((Collator) ruleBasedCollator0);
      namedCollatorComparator0.compare((BytesRef) null, (BytesRef) null);
  }

  @Test
  public void test11()  throws Throwable  {
      NamedCollatorComparator namedCollatorComparator0 = new NamedCollatorComparator((Collator) null, ">");
      BytesRef bytesRef0 = new BytesRef((CharSequence) ">");
      int int0 = namedCollatorComparator0.compare(bytesRef0, (BytesRef) null);
      assertEquals((-1), int0);
      assertEquals(false, namedCollatorComparator0.isReverse());
  }

  @Test
  public void test12()  throws Throwable  {
      NamedCollatorComparator namedCollatorComparator0 = new NamedCollatorComparator((Collator) null, "ataicud46");
      assertEquals(false, namedCollatorComparator0.isNullFirst());
      
      namedCollatorComparator0.setNullFirst(true);
      BytesRef bytesRef0 = new BytesRef((CharSequence) "ataicud46");
      int int0 = namedCollatorComparator0.compare(bytesRef0, (BytesRef) null);
      assertEquals(true, namedCollatorComparator0.isNullFirst());
      assertEquals(1, int0);
  }

  @Test
  public void test13()  throws Throwable  {
      ULocale uLocale0 = ULocale.JAPANESE;
      RuleBasedCollator ruleBasedCollator0 = (RuleBasedCollator)Collator.getInstance(uLocale0);
      NamedCollatorComparator namedCollatorComparator0 = new NamedCollatorComparator((Collator) ruleBasedCollator0);
      namedCollatorComparator0.setReverse(false);
  }

  @Test
  public void test14()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      NamedCollatorComparator namedCollatorComparator0 = new NamedCollatorComparator(locale0);
      assertNotNull(namedCollatorComparator0);
      assertEquals(false, namedCollatorComparator0.isReverse());
      
      namedCollatorComparator0.setReverse(true);
      assertEquals(true, namedCollatorComparator0.isReverse());
  }
}
