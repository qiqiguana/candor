/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.lucene.search.exposed.poc;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.File;
import java.io.IOException;
import org.apache.lucene.search.exposed.poc.ExposedPOC;
import org.apache.lucene.store.SimpleFSDirectory;
import org.apache.lucene.util.packed.GrowingMutable;
import org.apache.lucene.util.packed.PackedIntWrapper;
import org.apache.lucene.util.packed.PackedInts;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ExposedPOCEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      String string0 = ExposedPOC.getHeap();
      assertNotNull(string0);
      assertEquals("Before GC: 162MB/1598MB, after GC: 51MB/1599MB", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      int[] intArray0 = new int[19];
      PackedIntWrapper packedIntWrapper0 = new PackedIntWrapper(intArray0);
      long long0 = ExposedPOC.footprint((PackedInts.Reader) packedIntWrapper0);
      assertEquals(76L, long0);
  }

  @Test
  public void test2()  throws Throwable  {
      ExposedPOC exposedPOC0 = new ExposedPOC();
      assertEquals("Before GC: 65MB/1598MB, after GC: 50MB/1598MB", exposedPOC0.getHeap());
  }

  @Test
  public void test3()  throws Throwable  {
      GrowingMutable growingMutable0 = new GrowingMutable(0, 2, (long) 2, (long) 2, false);
      String string0 = ExposedPOC.measureSortTime((PackedInts.Reader) growingMutable0);
      assertEquals("18ms", string0);
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      String string0 = ExposedPOC.readableSize((long) 2);
      assertEquals("2bytes", string0);
      assertNotNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      String string0 = ExposedPOC.readableSize(2058L);
      assertNotNull(string0);
      assertEquals("2KB", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      File file0 = new File("");
      SimpleFSDirectory simpleFSDirectory0 = new SimpleFSDirectory(file0);
      File file1 = simpleFSDirectory0.getDirectory();
      long long0 = ExposedPOC.calculateSize(file1);
      assertEquals(71574661L, long0);
  }

  @Test
  public void test7()  throws Throwable  {
      String string0 = ExposedPOC.nsToString(9223372036854775807L);
      assertNotNull(string0);
      assertEquals("153722867:16 min", string0);
  }
}
