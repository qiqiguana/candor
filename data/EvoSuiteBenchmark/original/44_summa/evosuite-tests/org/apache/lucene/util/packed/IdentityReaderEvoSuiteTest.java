/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.lucene.util.packed;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.apache.lucene.util.packed.IdentityReader;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class IdentityReaderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      IdentityReader identityReader0 = new IdentityReader((-909));
      boolean boolean0 = identityReader0.hasArray();
      assertEquals(false, boolean0);
      assertEquals(-909, identityReader0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      IdentityReader identityReader0 = new IdentityReader((-909));
      long long0 = identityReader0.get(555);
      assertEquals(-909, identityReader0.size());
      assertEquals(555L, long0);
  }

  @Test
  public void test2()  throws Throwable  {
      IdentityReader identityReader0 = new IdentityReader((-909));
      // Undeclared exception!
      try {
        identityReader0.getArray();
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * No array
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      IdentityReader identityReader0 = new IdentityReader((-909));
      int int0 = identityReader0.size();
      assertEquals((-909), int0);
  }

  @Test
  public void test4()  throws Throwable  {
      IdentityReader identityReader0 = new IdentityReader((-453));
      int int0 = identityReader0.getBitsPerValue();
      assertEquals(-453, identityReader0.size());
      assertEquals(0, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      IdentityReader identityReader0 = new IdentityReader((-453));
      long long0 = identityReader0.ramBytesUsed();
      assertEquals(-453, identityReader0.size());
      assertEquals(0L, long0);
  }

  @Test
  public void test6()  throws Throwable  {
      IdentityReader identityReader0 = new IdentityReader(1);
      long[] longArray0 = new long[9];
      int int0 = identityReader0.get(0, longArray0, 0, 1);
      assertEquals(1, identityReader0.size());
      assertEquals(1, int0);
  }
}
