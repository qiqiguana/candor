/*
 * This file was automatically generated by EvoSuite
 */

package dk.statsbiblioteket.summa.support.api;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import dk.statsbiblioteket.summa.search.api.Response;
import dk.statsbiblioteket.summa.support.api.DidYouMeanResponse;
import java.util.ConcurrentModificationException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DidYouMeanResponseEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DidYouMeanResponse didYouMeanResponse0 = new DidYouMeanResponse("search.document.filter");
      didYouMeanResponse0.addResult("", 731.6154058597851, 0);
      didYouMeanResponse0.addResult("%h/1WMs-F2iCM;ama", (-851.444658711536), 780);
      String string0 = didYouMeanResponse0.toXML();
      assertEquals("<DidYouMeanResponse xmlns=\"http://statsbiblioteket.dk/summa/2009/DidYouMeanResponse\" version=\"1.0\" query=\"search.document.filter\" timing=\"\">\n    <didyoumean score=\"731.6154058597851\" hits=\"0\"></didyoumean>\n    <didyoumean score=\"-851.444658711536\" hits=\"780\">%h/1WMs-F2iCM;ama</didyoumean>\n</DidYouMeanResponse>\n", didYouMeanResponse0.toXML());
      assertNotNull(string0);
      assertEquals("<DidYouMeanResponse xmlns=\"http://statsbiblioteket.dk/summa/2009/DidYouMeanResponse\" version=\"1.0\" query=\"search.document.filter\" timing=\"\">\n    <didyoumean score=\"731.6154058597851\" hits=\"0\"></didyoumean>\n    <didyoumean score=\"-851.444658711536\" hits=\"780\">%h/1WMs-F2iCM;ama</didyoumean>\n</DidYouMeanResponse>\n", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      DidYouMeanResponse didYouMeanResponse0 = new DidYouMeanResponse("", 0L);
      didYouMeanResponse0.merge((Response) didYouMeanResponse0);
      assertEquals("DidYouMeanResponse.didyoumean:0|DidYouMeanResponse.didyoumean:0", didYouMeanResponse0.getTiming());
      assertEquals("<DidYouMeanResponse xmlns=\"http://statsbiblioteket.dk/summa/2009/DidYouMeanResponse\" version=\"1.0\" query=\"\" timing=\"DidYouMeanResponse.didyoumean:0|DidYouMeanResponse.didyoumean:0\" searchTime=\"0\">\n</DidYouMeanResponse>\n", didYouMeanResponse0.toXML());
  }

  @Test
  public void test2()  throws Throwable  {
      DidYouMeanResponse didYouMeanResponse0 = new DidYouMeanResponse("=UcucY.TF238*");
      didYouMeanResponse0.merge((Response) null);
      assertEquals("<DidYouMeanResponse xmlns=\"http://statsbiblioteket.dk/summa/2009/DidYouMeanResponse\" version=\"1.0\" query=\"=UcucY.TF238*\" timing=\"\">\n</DidYouMeanResponse>\n", didYouMeanResponse0.toXML());
  }

  @Test
  public void test3()  throws Throwable  {
      DidYouMeanResponse didYouMeanResponse0 = new DidYouMeanResponse("search.document.filter");
      didYouMeanResponse0.addResult("search.document.filter", (double) 1L, 0);
      // Undeclared exception!
      try {
        didYouMeanResponse0.merge((Response) didYouMeanResponse0);
        fail("Expecting exception: ConcurrentModificationException");
      } catch(ConcurrentModificationException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      DidYouMeanResponse didYouMeanResponse0 = new DidYouMeanResponse("", 0L);
      String string0 = didYouMeanResponse0.toXML();
      assertNotNull(string0);
      assertEquals("<DidYouMeanResponse xmlns=\"http://statsbiblioteket.dk/summa/2009/DidYouMeanResponse\" version=\"1.0\" query=\"\" timing=\"DidYouMeanResponse.didyoumean:0\" searchTime=\"0\">\n</DidYouMeanResponse>\n", string0);
  }
}
