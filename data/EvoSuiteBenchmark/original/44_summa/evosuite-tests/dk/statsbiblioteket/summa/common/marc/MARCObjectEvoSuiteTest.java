/*
 * This file was automatically generated by EvoSuite
 */

package dk.statsbiblioteket.summa.common.marc;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.ctc.wstx.api.WriterConfig;
import com.ctc.wstx.sw.BufferingXmlWriter;
import com.ctc.wstx.sw.SimpleNsStreamWriter;
import com.ctc.wstx.sw.XmlWriter;
import com.ibm.wsdl.InputImpl;
import dk.statsbiblioteket.summa.common.marc.MARCObject;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.OutputStream;
import java.io.Writer;
import java.util.List;
import java.util.Map;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamWriter;
import org.apache.axis.description.OperationDesc;
import org.apache.axis.message.SOAPEnvelope;
import org.apache.axis.soap.SOAP11Constants;
import org.apache.axis.soap.SOAPConstants;
import org.codehaus.jettison.mapped.Configuration;
import org.codehaus.jettison.mapped.MappedNamespaceConvention;
import org.codehaus.jettison.mapped.MappedXMLStreamWriter;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MARCObjectEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MARCObject.DataField mARCObject_DataField0 = new MARCObject.DataField((String) null, (String) null, (String) null, (String) null);
      String string0 = mARCObject_DataField0.getTag();
      assertNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      MARCObject.DataField mARCObject_DataField0 = new MARCObject.DataField("GPPigA", "", "", "");
      String string0 = mARCObject_DataField0.getInd2();
      assertNotNull(string0);
      assertEquals("GPPigA", mARCObject_DataField0.getTag());
      assertEquals("", mARCObject_DataField0.getInd1());
      assertEquals("", mARCObject_DataField0.getId());
      assertEquals("", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      MARCObject.DataField mARCObject_DataField0 = new MARCObject.DataField("GPPigA", "", "", "");
      String string0 = mARCObject_DataField0.getId();
      assertEquals("", string0);
      assertEquals("GPPigA", mARCObject_DataField0.getTag());
      assertNotNull(string0);
      assertEquals("", mARCObject_DataField0.getInd1());
      assertEquals("", mARCObject_DataField0.getInd2());
  }

  @Test
  public void test3()  throws Throwable  {
      MARCObject.DataField mARCObject_DataField0 = new MARCObject.DataField("GPPigA", "", "", "");
      List<MARCObject.SubField> list0 = mARCObject_DataField0.getSubFields();
      assertEquals("GPPigA", mARCObject_DataField0.getTag());
      assertEquals("", mARCObject_DataField0.getInd1());
      assertEquals("", mARCObject_DataField0.getId());
      assertEquals("", mARCObject_DataField0.getInd2());
      assertNotNull(list0);
  }

  @Test
  public void test4()  throws Throwable  {
      MARCObject.DataField mARCObject_DataField0 = new MARCObject.DataField("9Yf&,{OE5j[(2ap]o9L", "9Yf&,{OE5j[(2ap]o9L", "9Yf&,{OE5j[(2ap]o9L", "9Yf&,{OE5j[(2ap]o9L");
      String string0 = mARCObject_DataField0.getInd1();
      assertEquals("9Yf&,{OE5j[(2ap]o9L", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      MARCObject.ControlField mARCObject_ControlField0 = new MARCObject.ControlField("GPPigA", "GPPigA", "GPPigA");
      String string0 = mARCObject_ControlField0.getId();
      assertEquals("GPPigA", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      MARCObject.ControlField mARCObject_ControlField0 = new MARCObject.ControlField("Setting level of logger [", "Setting level of logger [", "Setting level of logger [");
      // Undeclared exception!
      try {
        mARCObject_ControlField0.toXML((XMLStreamWriter) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      MARCObject.ControlField mARCObject_ControlField0 = new MARCObject.ControlField("Setting level of logger [", "Setting level of logger [", "Setting level of logger [");
      MARCObject.ControlField mARCObject_ControlField1 = (MARCObject.ControlField)mARCObject_ControlField0.clone();
      // Undeclared exception!
      try {
        MARCObject.equals((Object) mARCObject_ControlField1, (Object) mARCObject_ControlField1);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class dk.statsbiblioteket.summa.common.marc.MARCObject
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      MARCObject.ControlField mARCObject_ControlField0 = new MARCObject.ControlField("9Yf&,{OE5j[(2ap]o9L", "9Yf&,{OE5j[(2ap]o9L", "9Yf&,{OE5j[(2ap]o9L");
      String string0 = mARCObject_ControlField0.getTag();
      assertEquals("9Yf&,{OE5j[(2ap]o9L", string0);
  }

  @Test
  public void test9()  throws Throwable  {
      MARCObject.ControlField mARCObject_ControlField0 = new MARCObject.ControlField("org.apache.axis.encoding.ser.ElementDeserializerFactory", "org.apache.axis.encoding.ser.ElementDeserializerFactory", "org.apache.axis.encoding.ser.ElementDeserializerFactory");
      String string0 = mARCObject_ControlField0.getContent();
      assertEquals("org.apache.axis.encoding.ser.ElementDeserializerFactory", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      MARCObject.SubField mARCObject_SubField0 = new MARCObject.SubField("org.apache.axis.encoding.ser.ElementDeserializerFactory", "org.apache.axis.encoding.ser.ElementDeserializerFactory");
      String string0 = mARCObject_SubField0.getCode();
      assertEquals("org.apache.axis.encoding.ser.ElementDeserializerFactory", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      MARCObject.SubField mARCObject_SubField0 = new MARCObject.SubField("9Yf&,{OE5j[(2ap]o9L", "9Yf&,{OE5j[(2ap]o9L");
      String string0 = mARCObject_SubField0.getContent();
      assertEquals("9Yf&,{OE5j[(2ap]o9L", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      MARCObject.SubField mARCObject_SubField0 = new MARCObject.SubField("9Yf&,{OE5j[(2ap]o9L", "9Yf&,{OE5j[(2ap]o9L");
      Map<Object, Object> map0 = null;
      try {
        map0 = OperationDesc.mepStrings;
      } catch(NoClassDefFoundError e) {}
  }

  @Test
  public void test13()  throws Throwable  {
      MARCObject.SubField mARCObject_SubField0 = new MARCObject.SubField("9Yf&,{OE5j[(2ap]o9L", "9Yf&,{OE5j[(2ap]o9L");
      MARCObject.SubField mARCObject_SubField1 = (MARCObject.SubField)mARCObject_SubField0.clone();
      // Undeclared exception!
      try {
        mARCObject_SubField0.equals((Object) mARCObject_SubField1);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class dk.statsbiblioteket.summa.common.marc.MARCObject
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      MARCObject mARCObject0 = null;
      try {
        mARCObject0 = new MARCObject("?eVbTw(he\"", "?eVbTw(he\"");
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class dk.statsbiblioteket.summa.common.marc.MARCObject
         */
      }
  }

  @Test
  public void test15()  throws Throwable  {
      MARCObject mARCObject0 = null;
      try {
        mARCObject0 = new MARCObject((String) null, (String) null);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class dk.statsbiblioteket.summa.common.marc.MARCObject
         */
      }
  }

  @Test
  public void test16()  throws Throwable  {
      MARCObject.Leader mARCObject_Leader0 = new MARCObject.Leader((String) null, (String) null);
      String string0 = mARCObject_Leader0.getId();
      assertNull(string0);
  }

  @Test
  public void test17()  throws Throwable  {
      MARCObject.Leader mARCObject_Leader0 = new MARCObject.Leader((String) null, (String) null);
      String string0 = mARCObject_Leader0.getContent();
      assertNull(string0);
  }

  @Test
  public void test18()  throws Throwable  {
      MARCObject mARCObject0 = null;
      try {
        mARCObject0 = new MARCObject("9Yf&,{OE5j[(2ap]o9L", "9Yf&,{OE5j[(2ap]o9L");
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class dk.statsbiblioteket.summa.common.marc.MARCObject
         */
      }
  }

  @Test
  public void test19()  throws Throwable  {
      MARCObject mARCObject0 = null;
      try {
        mARCObject0 = new MARCObject("", "");
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class dk.statsbiblioteket.summa.common.marc.MARCObject
         */
      }
  }

  @Test
  public void test20()  throws Throwable  {
      MARCObject mARCObject0 = null;
      try {
        mARCObject0 = new MARCObject("", "");
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class dk.statsbiblioteket.summa.common.marc.MARCObject
         */
      }
  }

  @Test
  public void test21()  throws Throwable  {
      MARCObject mARCObject0 = null;
      try {
        mARCObject0 = new MARCObject((String) null, (String) null);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class dk.statsbiblioteket.summa.common.marc.MARCObject
         */
      }
  }

  @Test
  public void test22()  throws Throwable  {
      MARCObject mARCObject0 = null;
      try {
        mARCObject0 = new MARCObject("Setting level of logger [", "Setting level of logger [");
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class dk.statsbiblioteket.summa.common.marc.MARCObject
         */
      }
  }

  @Test
  public void test23()  throws Throwable  {
      MARCObject mARCObject0 = null;
      try {
        mARCObject0 = new MARCObject("?eVbTw(he\"", "?eVbTw(he\"");
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class dk.statsbiblioteket.summa.common.marc.MARCObject
         */
      }
  }

  @Test
  public void test24()  throws Throwable  {
      MARCObject mARCObject0 = null;
      try {
        mARCObject0 = new MARCObject("", "");
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class dk.statsbiblioteket.summa.common.marc.MARCObject
         */
      }
  }

  @Test
  public void test25()  throws Throwable  {
      MARCObject mARCObject0 = null;
      try {
        mARCObject0 = new MARCObject((String) null, (String) null);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class dk.statsbiblioteket.summa.common.marc.MARCObject
         */
      }
  }

  @Test
  public void test26()  throws Throwable  {
      MARCObject.ControlField mARCObject_ControlField0 = new MARCObject.ControlField("9Yf&,{OE5j[(2ap]o9L", "9Yf&,{OE5j[(2ap]o9L", "9Yf&,{OE5j[(2ap]o9L");
      MARCObject.SubField mARCObject_SubField0 = new MARCObject.SubField("9Yf&,{OE5j[(2ap]o9L", "9Yf&,{OE5j[(2ap]o9L");
      MARCObject.SubField mARCObject_SubField1 = (MARCObject.SubField)mARCObject_SubField0.clone();
      boolean boolean0 = mARCObject_ControlField0.equals((Object) mARCObject_SubField1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test27()  throws Throwable  {
      MARCObject.DataField mARCObject_DataField0 = new MARCObject.DataField("GPPigA", "", "", "");
      mARCObject_DataField0.getFirstSubField("GPPigA");
      assertEquals("GPPigA", mARCObject_DataField0.getTag());
      assertEquals("", mARCObject_DataField0.getId());
      assertEquals("", mARCObject_DataField0.getInd2());
      assertEquals("", mARCObject_DataField0.getInd1());
  }

  @Test
  public void test28()  throws Throwable  {
      MARCObject.DataField mARCObject_DataField0 = new MARCObject.DataField("9Yf&,{OE5j[(2ap]o9L", "9Yf&,{OE5j[(2ap]o9L", "9Yf&,{OE5j[(2ap]o9L", "9Yf&,{OE5j[(2ap]o9L");
      Map<Object, Object> map0 = null;
      try {
        map0 = OperationDesc.mepStrings;
      } catch(NoClassDefFoundError e) {}
  }

  @Test
  public void test29()  throws Throwable  {
      MARCObject.DataField mARCObject_DataField0 = new MARCObject.DataField("], xml11: ", "], xml11: ", (String) null, (String) null);
      MARCObject.DataField mARCObject_DataField1 = (MARCObject.DataField)mARCObject_DataField0.clone();
      // Undeclared exception!
      try {
        MARCObject.equals((Object) mARCObject_DataField1, (Object) mARCObject_DataField1);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class dk.statsbiblioteket.summa.common.marc.MARCObject
         */
      }
  }

  @Test
  public void test30()  throws Throwable  {
      MARCObject.DataField mARCObject_DataField0 = new MARCObject.DataField("?eVbTw(he\"", "?eVbTw(he\"", "?eVbTw(he\"", "?eVbTw(he\"");
      boolean boolean0 = mARCObject_DataField0.equals((Object) "typeMapping");
      assertEquals(false, boolean0);
  }

  @Test
  public void test31()  throws Throwable  {
      MARCObject.DataField mARCObject_DataField0 = new MARCObject.DataField("GPPigA", "", "", "");
      MARCObject.DataField mARCObject_DataField1 = new MARCObject.DataField("", "", "", "");
      MARCObject.DataField mARCObject_DataField2 = (MARCObject.DataField)mARCObject_DataField1.clone();
      assertNotNull(mARCObject_DataField2);
      
      // Undeclared exception!
      try {
        mARCObject_DataField0.equals((Object) mARCObject_DataField2);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class dk.statsbiblioteket.summa.common.marc.MARCObject
         */
      }
  }

  @Test
  public void test32()  throws Throwable  {
      MARCObject.ControlField mARCObject_ControlField0 = new MARCObject.ControlField("Setting level of logger [", "Setting level of logger [", "Setting level of logger [");
      MARCObject.ControlField mARCObject_ControlField1 = (MARCObject.ControlField)mARCObject_ControlField0.clone();
      MARCObject.SubField mARCObject_SubField0 = new MARCObject.SubField("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<record xmlns=\"http://www.loc.gov/MARC21/slim\" id=\"Setting level of logger [\" type=\"Setting level of logger [\">\n</record>\n", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<record xmlns=\"http://www.loc.gov/MARC21/slim\" id=\"Setting level of logger [\" type=\"Setting level of logger [\">\n</record>\n");
      boolean boolean0 = mARCObject_SubField0.equals((Object) mARCObject_ControlField1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test33()  throws Throwable  {
      MARCObject mARCObject0 = null;
      try {
        mARCObject0 = new MARCObject((String) null, (String) null);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class dk.statsbiblioteket.summa.common.marc.MARCObject
         */
      }
  }

  @Test
  public void test34()  throws Throwable  {
      MARCObject mARCObject0 = null;
      try {
        mARCObject0 = new MARCObject("?eVbTw(he\"", "?eVbTw(he\"");
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class dk.statsbiblioteket.summa.common.marc.MARCObject
         */
      }
  }

  @Test
  public void test35()  throws Throwable  {
      MARCObject mARCObject0 = null;
      try {
        mARCObject0 = new MARCObject((String) null, (String) null);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class dk.statsbiblioteket.summa.common.marc.MARCObject
         */
      }
  }

  @Test
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try {
        MARCObject.equals((List) null, (List) null);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class dk.statsbiblioteket.summa.common.marc.MARCObject
         */
      }
  }

  @Test
  public void test37()  throws Throwable  {
      SOAP11Constants sOAP11Constants0 = SOAPConstants.SOAP11_CONSTANTS;
      SOAPEnvelope sOAPEnvelope0 = null;
      try {
        sOAPEnvelope0 = new SOAPEnvelope(false, (SOAPConstants) sOAP11Constants0);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class org.apache.axis.message.SOAPEnvelope
         */
      }
  }

  @Test
  public void test38()  throws Throwable  {
      InputImpl inputImpl0 = new InputImpl();
      inputImpl0.getNativeAttributeNames();
      MARCObject mARCObject0 = null;
      try {
        mARCObject0 = new MARCObject("], xml11: ", "], xml11: ");
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class dk.statsbiblioteket.summa.common.marc.MARCObject
         */
      }
  }

  @Test
  public void test39()  throws Throwable  {
      InputImpl inputImpl0 = new InputImpl();
      List<Object> list0 = inputImpl0.getNativeAttributeNames();
      // Undeclared exception!
      try {
        MARCObject.equals(list0, list0);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class dk.statsbiblioteket.summa.common.marc.MARCObject
         */
      }
  }
}
