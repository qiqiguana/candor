/*
 * This file was automatically generated by EvoSuite
 */

package dk.statsbiblioteket.summa.common.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import dk.statsbiblioteket.summa.common.util.Environment;
import java.util.LinkedHashSet;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class EnvironmentEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Environment environment0 = new Environment();
  }

  @Test
  public void test1()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add("rq");
      List<String> list0 = Environment.escapeSystemProperties((Iterable<String>) linkedHashSet0);
      assertEquals(false, list0.isEmpty());
      assertNotNull(list0);
  }

  @Test
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[7] = "${";
      String[] stringArray1 = Environment.escapeSystemProperties(stringArray0);
      assertNotNull(stringArray1);
      assertNotSame(stringArray1, stringArray0);
  }

  @Test
  public void test3()  throws Throwable  {
      String[] stringArray0 = Environment.escapeSystemProperties((String[]) null);
      assertNull(stringArray0);
  }

  @Test
  public void test4()  throws Throwable  {
      List<String> list0 = Environment.escapeSystemProperties((Iterable<String>) null);
      assertNull(list0);
  }

  @Test
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try {
        Environment.checkJavaVersion();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * No match found
         */
      }
  }
}
