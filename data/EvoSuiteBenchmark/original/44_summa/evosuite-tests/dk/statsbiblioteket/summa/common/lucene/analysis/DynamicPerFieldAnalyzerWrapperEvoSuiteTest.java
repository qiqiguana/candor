/*
 * This file was automatically generated by EvoSuite
 */

package dk.statsbiblioteket.summa.common.lucene.analysis;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import dk.statsbiblioteket.summa.common.lucene.analysis.DynamicPerFieldAnalyzerWrapper;
import java.io.IOException;
import java.io.Reader;
import java.util.HashMap;
import java.util.Map;
import org.apache.lucene.analysis.Analyzer;
import org.apache.lucene.analysis.MockBytesAnalyzer;
import org.apache.lucene.analysis.MockPayloadAnalyzer;
import org.evosuite.testcase.TestCaseExecutor;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DynamicPerFieldAnalyzerWrapperEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MockBytesAnalyzer mockBytesAnalyzer0 = new MockBytesAnalyzer();
      DynamicPerFieldAnalyzerWrapper dynamicPerFieldAnalyzerWrapper0 = new DynamicPerFieldAnalyzerWrapper((Analyzer) mockBytesAnalyzer0);
      String string0 = dynamicPerFieldAnalyzerWrapper0.toString();
      assertNotNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      MockPayloadAnalyzer mockPayloadAnalyzer0 = new MockPayloadAnalyzer();
      HashMap<String, Analyzer> hashMap0 = new HashMap<String, Analyzer>();
      DynamicPerFieldAnalyzerWrapper dynamicPerFieldAnalyzerWrapper0 = new DynamicPerFieldAnalyzerWrapper((Analyzer) mockPayloadAnalyzer0, (Map<String, Analyzer>) hashMap0);
      assertNotNull(dynamicPerFieldAnalyzerWrapper0);
  }

  @Test
  public void test2()  throws Throwable  {
      MockBytesAnalyzer mockBytesAnalyzer0 = new MockBytesAnalyzer();
      DynamicPerFieldAnalyzerWrapper dynamicPerFieldAnalyzerWrapper0 = new DynamicPerFieldAnalyzerWrapper((Analyzer) mockBytesAnalyzer0);
      Analyzer.TokenStreamComponents analyzer_TokenStreamComponents0 = dynamicPerFieldAnalyzerWrapper0.wrapComponents("the", (Analyzer.TokenStreamComponents) null);
      assertNull(analyzer_TokenStreamComponents0);
  }

  @Test
  public void test3()  throws Throwable  {
      MockPayloadAnalyzer mockPayloadAnalyzer0 = new MockPayloadAnalyzer();
      HashMap<String, Analyzer> hashMap0 = new HashMap<String, Analyzer>();
      DynamicPerFieldAnalyzerWrapper dynamicPerFieldAnalyzerWrapper0 = new DynamicPerFieldAnalyzerWrapper((Analyzer) mockPayloadAnalyzer0, (Map<String, Analyzer>) hashMap0, (Map<String, Analyzer>) hashMap0);
      hashMap0.put("{J8^(R+w\t=org.apache.lucene.analysis.MockPayloadAnalyzer@43e45e75, Undefind variable: =org.apache.lucene.analysis.MockPayloadAnalyzer@43e45e75}", (Analyzer) dynamicPerFieldAnalyzerWrapper0);
      dynamicPerFieldAnalyzerWrapper0.tokenStream("{J8^(R+w\t=org.apache.lucene.analysis.MockPayloadAnalyzer@43e45e75, Undefind variable: =org.apache.lucene.analysis.MockPayloadAnalyzer@43e45e75}", (Reader) null);
  }

  @Test
  public void test4()  throws Throwable  {
      MockBytesAnalyzer mockBytesAnalyzer0 = new MockBytesAnalyzer();
      DynamicPerFieldAnalyzerWrapper dynamicPerFieldAnalyzerWrapper0 = new DynamicPerFieldAnalyzerWrapper((Analyzer) mockBytesAnalyzer0);
      int int0 = dynamicPerFieldAnalyzerWrapper0.getPositionIncrementGap((String) null);
      assertEquals(0, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      MockPayloadAnalyzer mockPayloadAnalyzer0 = new MockPayloadAnalyzer();
      HashMap<String, Analyzer> hashMap0 = new HashMap<String, Analyzer>();
      hashMap0.put("J8^(R+w\t", (Analyzer) mockPayloadAnalyzer0);
      DynamicPerFieldAnalyzerWrapper dynamicPerFieldAnalyzerWrapper0 = new DynamicPerFieldAnalyzerWrapper((Analyzer) mockPayloadAnalyzer0, (Map<String, Analyzer>) hashMap0, (Map<String, Analyzer>) hashMap0);
      MockPayloadAnalyzer mockPayloadAnalyzer1 = (MockPayloadAnalyzer)dynamicPerFieldAnalyzerWrapper0.getWrappedAnalyzer("Undefind variable: ");
      assertSame(mockPayloadAnalyzer1, mockPayloadAnalyzer0);
  }

  @Test
  public void test6()  throws Throwable  {
      MockPayloadAnalyzer mockPayloadAnalyzer0 = new MockPayloadAnalyzer();
      HashMap<String, Analyzer> hashMap0 = new HashMap<String, Analyzer>();
      HashMap<String, Analyzer> hashMap1 = new HashMap<String, Analyzer>((Map<? extends String, ? extends Analyzer>) hashMap0);
      DynamicPerFieldAnalyzerWrapper dynamicPerFieldAnalyzerWrapper0 = new DynamicPerFieldAnalyzerWrapper((Analyzer) mockPayloadAnalyzer0, (Map<String, Analyzer>) hashMap1, (Map<String, Analyzer>) hashMap0);
      hashMap0.put("Undefined variable: ", (Analyzer) dynamicPerFieldAnalyzerWrapper0);
      DynamicPerFieldAnalyzerWrapper dynamicPerFieldAnalyzerWrapper1 = (DynamicPerFieldAnalyzerWrapper)dynamicPerFieldAnalyzerWrapper0.getWrappedAnalyzer("Undefined variable: ");
      assertSame(dynamicPerFieldAnalyzerWrapper1, dynamicPerFieldAnalyzerWrapper0);
  }
}
