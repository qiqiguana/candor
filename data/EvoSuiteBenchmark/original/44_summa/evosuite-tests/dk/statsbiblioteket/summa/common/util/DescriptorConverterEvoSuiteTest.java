/*
 * This file was automatically generated by EvoSuite
 */

package dk.statsbiblioteket.summa.common.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import dk.statsbiblioteket.summa.common.util.DescriptorConverter;
import java.io.File;
import java.io.IOException;
import javax.xml.parsers.ParserConfigurationException;
import org.junit.BeforeClass;
import org.xml.sax.SAXException;

@RunWith(EvoSuiteRunner.class)
public class DescriptorConverterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DescriptorConverter descriptorConverter0 = new DescriptorConverter();
      // Undeclared exception!
      try {
        descriptorConverter0.convert((File) null);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class dk.statsbiblioteket.util.Files
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      DescriptorConverter descriptorConverter0 = new DescriptorConverter();
      // Undeclared exception!
      try {
        descriptorConverter0.convert("     <Ied ref=\"%s\"/>");
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Got 0 children answering to the name 'IndexDescriptor'. Expected 1
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      DescriptorConverter descriptorConverter0 = new DescriptorConverter();
      descriptorConverter0.setResetBoosts(false);
  }

  @Test
  public void test3()  throws Throwable  {
      DescriptorConverter descriptorConverter0 = new DescriptorConverter();
      descriptorConverter0.setDumpAnalyzer(false);
  }

  @Test
  public void test4()  throws Throwable  {
      DescriptorConverter descriptorConverter0 = new DescriptorConverter();
      descriptorConverter0.setDumpHasSuggest(false);
  }

  @Test
  public void test5()  throws Throwable  {
      DescriptorConverter descriptorConverter0 = new DescriptorConverter();
      descriptorConverter0.setDumpResolver(false);
  }
}
