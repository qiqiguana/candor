/*
 * This file was automatically generated by EvoSuite
 */

package dk.statsbiblioteket.summa.common.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import dk.statsbiblioteket.summa.common.util.LoggingReader;
import java.io.CharArrayReader;
import java.io.IOException;
import java.io.LineNumberReader;
import java.io.Reader;
import java.io.StringReader;
import java.nio.CharBuffer;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.impl.NoOpLog;
import org.apache.commons.logging.impl.SimpleLog;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LoggingReaderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      NoOpLog noOpLog0 = new NoOpLog("");
      StringReader stringReader0 = new StringReader("");
      LoggingReader loggingReader0 = new LoggingReader((Log) noOpLog0, "", (Reader) stringReader0);
      // Undeclared exception!
      try {
        loggingReader0.read((CharBuffer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      NoOpLog noOpLog0 = new NoOpLog("GN*");
      StringReader stringReader0 = new StringReader("GN*");
      LoggingReader loggingReader0 = new LoggingReader((Log) noOpLog0, "GN*", (Reader) stringReader0);
      loggingReader0.reset();
      assertEquals(78, stringReader0.read());
      assertEquals(71, loggingReader0.read());
  }

  @Test
  public void test2()  throws Throwable  {
      NoOpLog noOpLog0 = new NoOpLog("");
      LoggingReader loggingReader0 = new LoggingReader((Log) noOpLog0, "", (Reader) null);
      // Undeclared exception!
      try {
        loggingReader0.markSupported();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      NoOpLog noOpLog0 = new NoOpLog("");
      StringReader stringReader0 = new StringReader("");
      LoggingReader loggingReader0 = new LoggingReader((Log) noOpLog0, "", (Reader) stringReader0);
      long long0 = loggingReader0.skip((-1639L));
      assertEquals(0L, long0);
  }

  @Test
  public void test4()  throws Throwable  {
      SimpleLog simpleLog0 = new SimpleLog("J");
      char[] charArray0 = new char[4];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      LoggingReader loggingReader0 = new LoggingReader((Log) simpleLog0, "J", (Reader) charArrayReader0);
      int int0 = loggingReader0.read(charArray0);
      assertEquals(false, loggingReader0.ready());
      assertEquals(1, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      NoOpLog noOpLog0 = new NoOpLog("GN*");
      StringReader stringReader0 = new StringReader("GN*");
      LoggingReader loggingReader0 = new LoggingReader((Log) noOpLog0, "GN*", (Reader) stringReader0);
      loggingReader0.close();
      assertEquals(true, loggingReader0.markSupported());
  }

  @Test
  public void test6()  throws Throwable  {
      NoOpLog noOpLog0 = new NoOpLog("GN*");
      StringReader stringReader0 = new StringReader("GN*");
      LoggingReader loggingReader0 = new LoggingReader((Log) noOpLog0, "GN*", (Reader) stringReader0);
      boolean boolean0 = loggingReader0.ready();
      assertEquals(-1, loggingReader0.read());
      assertEquals(true, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      NoOpLog noOpLog0 = new NoOpLog("GN*");
      StringReader stringReader0 = new StringReader("GN*");
      LoggingReader loggingReader0 = new LoggingReader((Log) noOpLog0, "GN*", (Reader) stringReader0);
      loggingReader0.mark(0);
      assertEquals(-1, loggingReader0.read());
  }

  @Test
  public void test8()  throws Throwable  {
      NoOpLog noOpLog0 = new NoOpLog("");
      LoggingReader loggingReader0 = new LoggingReader((Log) noOpLog0, "", (Reader) null);
      LineNumberReader lineNumberReader0 = new LineNumberReader((Reader) loggingReader0);
      LoggingReader loggingReader1 = new LoggingReader((Log) noOpLog0, "", (Reader) lineNumberReader0);
      // Undeclared exception!
      try {
        loggingReader1.read();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      SimpleLog simpleLog0 = new SimpleLog("J");
      char[] charArray0 = new char[4];
      simpleLog0.setLevel(0);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      LoggingReader loggingReader0 = new LoggingReader((Log) simpleLog0, "J", (Reader) charArrayReader0);
      assertNotNull(loggingReader0);
      assertEquals(0, loggingReader0.read());
  }
}
