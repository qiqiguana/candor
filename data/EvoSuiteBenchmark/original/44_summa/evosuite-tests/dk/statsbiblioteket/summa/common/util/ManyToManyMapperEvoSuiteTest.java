/*
 * This file was automatically generated by EvoSuite
 */

package dk.statsbiblioteket.summa.common.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import dk.statsbiblioteket.summa.common.configuration.Configurable;
import dk.statsbiblioteket.summa.common.util.ManyToManyMapper;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ManyToManyMapperEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      ManyToManyMapper manyToManyMapper0 = new ManyToManyMapper((List<String>) linkedList0);
      Map<String, Set<String>> map0 = manyToManyMapper0.getReverse();
      assertEquals(true, map0.isEmpty());
  }

  @Test
  public void test1()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      ManyToManyMapper manyToManyMapper0 = new ManyToManyMapper((List<String>) linkedList0);
      Map<String, Set<String>> map0 = manyToManyMapper0.getForward();
      assertEquals(0, map0.size());
  }

  @Test
  public void test2()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.push("");
      ManyToManyMapper manyToManyMapper0 = null;
      try {
        manyToManyMapper0 = new ManyToManyMapper((List<String>) linkedList0);
        fail("Expecting exception: Configurable.ConfigurationException");
      } catch(Configurable.ConfigurationException e) {
        /*
         * Expected two parts by splitting '' with delimiter '-' but got 1
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add(" * -  *");
      linkedList0.add(" * -  *");
      ManyToManyMapper manyToManyMapper0 = new ManyToManyMapper((List<String>) linkedList0);
      assertNotNull(manyToManyMapper0);
  }
}
