/*
 * This file was automatically generated by EvoSuite
 */

package dk.statsbiblioteket.summa.common.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import dk.statsbiblioteket.summa.common.util.BitUtil;
import java.io.ByteArrayInputStream;
import java.io.EOFException;
import java.io.IOException;
import java.io.InputStream;
import org.archive.io.ReplayInputStream;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BitUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BitUtil bitUtil0 = new BitUtil();
      assertNotNull(bitUtil0);
  }

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ReplayInputStream replayInputStream0 = new ReplayInputStream(byteArray0, (long) (byte) (-1), (-1303L), "");
      long long0 = BitUtil.readLong((InputStream) replayInputStream0);
      assertEquals(9L, replayInputStream0.position());
      assertEquals(0L, long0);
  }

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = BitUtil.longToBytes((-1L));
      assertNotNull(byteArray0);
      
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 271, 0);
      try {
        BitUtil.readLong((InputStream) byteArrayInputStream0);
        fail("Expecting exception: EOFException");
      } catch(EOFException e) {
        /*
         * Attempting to read past EOF
         */
      }
  }
}
