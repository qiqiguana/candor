/*
 * This file was automatically generated by EvoSuite
 */

package dk.statsbiblioteket.summa.common.lucene.index;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import dk.statsbiblioteket.summa.common.lucene.index.IndexChangeEvent;
import dk.statsbiblioteket.summa.common.lucene.index.IndexChanger;
import java.util.List;
import java.util.Vector;
import org.apache.lucene.document.Document;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class IndexChangeEventEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Vector<Document> vector0 = new Vector<Document>();
      IndexChangeEvent indexChangeEvent0 = new IndexChangeEvent((IndexChanger) null, (List<Document>) vector0);
      List<Document> list0 = indexChangeEvent0.getAddedDocuments();
      assertEquals(true, list0.isEmpty());
  }

  @Test
  public void test1()  throws Throwable  {
      int[] intArray0 = new int[3];
      IndexChangeEvent indexChangeEvent0 = new IndexChangeEvent((IndexChanger) null, intArray0);
      IndexChangeEvent.Event indexChangeEvent_Event0 = indexChangeEvent0.getEvent();
      assertEquals(1, indexChangeEvent_Event0.ordinal());
  }

  @Test
  public void test2()  throws Throwable  {
      IndexChangeEvent indexChangeEvent0 = new IndexChangeEvent((IndexChanger) null);
      // Undeclared exception!
      try {
        indexChangeEvent0.getRemovedDocuments();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * No documents were removed. The event was newIndex, not documentsAdded
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int[] intArray0 = new int[3];
      IndexChangeEvent indexChangeEvent0 = new IndexChangeEvent((IndexChanger) null, intArray0);
      // Undeclared exception!
      try {
        indexChangeEvent0.getAddedDocuments();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * No documents were added. The event was documentsRemoved, not documentsAdded
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int[] intArray0 = new int[10];
      IndexChangeEvent indexChangeEvent0 = new IndexChangeEvent((IndexChanger) null, intArray0);
      int[] intArray1 = indexChangeEvent0.getRemovedDocuments();
      assertSame(intArray1, intArray0);
  }
}
