<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            targetNamespace="http://lucene.apache.org/exposed/facet/request/1.0"
            elementFormDefault="qualified"
            xmlns:exposed="http://lucene.apache.org/exposed/facet/request/1.0">
  <xsd:annotation>
    <xsd:documentation xml:lang="en">
      XML Schema for Lucene exposed (LUCENE-2369) requests.
    </xsd:documentation>
  </xsd:annotation>

  <xsd:element name="facetrequest" type="exposed:requestType"/>

  <xsd:complexType name="requestType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">
        The query is the unmodified query used for the Lucene search to
        provide faceting for.
        order:   count =  the tags are sorted by occurrences.
                 Highest number comes first.
                 index =  the tags sorted by index order (BytesRef term
                 natural order).
        locale:  the tags are sorted by the locale given in the
                 attribute "locale".
                 The default order is count.
        locale:  If sort is specified to "locale", this locale is used.
        maxtags: The maximum number of tags to return for a facet.
                 -1 is unlimited and _not_ recommended.
                 The default is 20.
        mincount: The minimum number of occurrences in order for a tag
                  to be part of the result.
                  The default is 0.
        offset:  Where to start extracting tags in the sorted list of tags.
                 Used for pagination.
                 The default is 0.
        Note:    This can be negative when used with "prefix" and
                 order != count.
        prefix:  The extraction starts at (the first tag that matches the
                 prefix) + offset. This cannot be used with count order.
                 The default is "", meaning the beginning of the sorted
                 tag list.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="query"    type="xsd:string" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="groups"   type="groupsType" minOccurs="1" maxOccurs="1"/>
      <xsd:any namespace="##any" processContents="strict" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="order"    type="sortType"   use="optional"/>
    <xsd:attribute name="locale"   type="xsd:string" use="optional"/>
    <xsd:attribute name="maxtags"  type="xsd:int"    use="optional"/>
    <xsd:attribute name="mincount" type="xsd:int"    use="optional"/>
    <xsd:attribute name="offset"   type="xsd:int"    use="optional"/>
    <xsd:attribute name="prefix"   type="xsd:string" use="optional"/>
  </xsd:complexType>

  <xsd:complexType name="groupsType">
    <xsd:sequence>
      <xsd:element name="group"    type="groupType" minOccurs="1" maxOccurs="unbounded"/>
      <xsd:any namespace="##any" processContents="strict" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="groupType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">
        hierarchical: If true, hierarchical tags are assumed.
                      Default is false.
        levels:       If hierarchical is true, this is the maximum number
                      of levels to expand where plain single-level faceting
                      is level 1.
                      Default is 5.
        delimiter:    If hierarchical is true, this states the delimiter
                      for the levels in the tags.
                      Default is '/'.
        startpath:    The starting path for the facet extraction. This is useful
                      for building a GUI where tags can be expanded. Note that
                      the starting path does not change the hierarchical
                      application of the subtags field, it just skips down to
                      the starting point. Also note that counts for the
                      intermediate levels on the path might be undefined due
                      to performance optimization.
                      Example: 'A/B/C/'.
                      This only has effect with hierarchical == true.
                      Default is no starting path.

        If the group is hierarchical and subtags is defined, the subtags
        attributes are used from the root. This means that order can
        be specified as group attribute as well as subtags. This makes
        sense e.g. if the overall order should be location aware, but
        the root-level tags should be sorted by count.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="fields"   type="fieldsType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="subtags"  type="subTagsType" minOccurs="0" maxOccurs="1"/>
      <xsd:any namespace="##any" processContents="strict" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="name"     type="xsd:string" use="required"/>
    <xsd:attribute name="order"    type="sortType"   use="optional"/>
    <xsd:attribute name="locale"   type="xsd:string" use="optional"/>
    <xsd:attribute name="offset"   type="xsd:int"    use="optional"/>
    <xsd:attribute name="prefix"   type="xsd:string" use="optional"/>

    <xsd:attribute name="maxtags"  type="xsd:int"    use="optional"/>
    <xsd:attribute name="mincount" type="xsd:int"    use="optional"/>

    <xsd:attribute name="hierarchical"  type="xsd:boolean" use="optional" default="false"/>
    <xsd:attribute name="levels"        type="xsd:int"     use="optional" default="5"/>
    <xsd:attribute name="delimiter"     type="xsd:string"  use="optional" default="/"/>
    <xsd:attribute name="startpath"     type="xsd:string"  use="optional"/>
  </xsd:complexType>

  <xsd:complexType name="fieldsType">
    <xsd:sequence>
      <xsd:element name="field"    type="fieldType" minOccurs="1" maxOccurs="unbounded"/>
      <xsd:any namespace="##any" processContents="strict" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="fieldType">
    <xsd:attribute name="name"     type="xsd:string" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="subTagsType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">
        suborder: base or count. Base means whatever order the provider for the
                  group delivers (normally unicode or locale-aware order).
                  Default is count for first level if facet sort is count, then
                  inherited.
        mintotalcount: As mincount but includes the counts for subtags.
                       Default is 0.
        Default values for all attributes other than suborder and mintotalcount
        are inherited.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="subtags"  type="subTagsType" minOccurs="0" maxOccurs="1"/>
      <xsd:any namespace="##any" processContents="strict" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="maxtags"       type="xsd:int"      use="optional"/>
    <xsd:attribute name="mincount"      type="xsd:int"      use="optional"/>

    <xsd:attribute name="suborder"      type="subOrderType" use="optional"/>
    <xsd:attribute name="mintotalcount" type="xsd:int"      use="optional"/>
  </xsd:complexType>

  <xsd:simpleType name="sortType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="count"/>
      <xsd:enumeration value="index"/>
      <xsd:enumeration value="locale"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="subOrderType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="count"/>
      <xsd:enumeration value="base"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>
