/*
 * This file was automatically generated by EvoSuite
 */

package edu.mscd.cs.jclo;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import edu.mscd.cs.jclo.JCLO;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JCLOEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Long long0 = new Long((-1614L));
      JCLO jCLO0 = new JCLO((Object) long0);
      // Undeclared exception!
      try {
        jCLO0.getChar("ie)L|o found:1");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(true);
      JCLO jCLO0 = new JCLO("|:8#2IzBh5", (Object) boolean0);
      assertNotNull(jCLO0);
      
      String string0 = jCLO0.toString();
      assertEquals("Boolean: TRUE = true\nBoolean: FALSE = false\nClass: TYPE = boolean\nboolean: value = true\nlong: serialVersionUID = -3665804199014368530", string0);
      assertNotNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("RL {RN4}5s@hAqbp/");
      String[][] stringArray0 = new String[3][3];
      JCLO jCLO0 = new JCLO((Object) boolean0, stringArray0);
      // Undeclared exception!
      try {
        jCLO0.getFloat("RL {RN4}5s@hAqbp/");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Float float0 = new Float((double) '*');
      JCLO jCLO0 = new JCLO("-", (Object) float0);
      // Undeclared exception!
      try {
        jCLO0.getInt("-hash int\n");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      JCLO jCLO0 = new JCLO("", "1777777777777777775517");
      // Undeclared exception!
      try {
        jCLO0.getDouble("1777777777777777775517");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      JCLO jCLO0 = new JCLO((Object) "11");
      float[] floatArray0 = jCLO0.getFloats("-hash int\n");
      assertNull(floatArray0);
  }

  @Test
  public void test6()  throws Throwable  {
      Float float0 = new Float((double) '*');
      JCLO jCLO0 = new JCLO("-", (Object) float0);
      byte[] byteArray0 = jCLO0.getBytes("-");
      assertNull(byteArray0);
  }

  @Test
  public void test7()  throws Throwable  {
      Integer integer0 = new Integer((-946));
      JCLO jCLO0 = new JCLO("yT]D=''-PJ/(U+.", (Object) integer0);
      // Undeclared exception!
      try {
        jCLO0.getShort("yT]D=''-PJ/(U+.");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      Integer integer0 = new Integer((int) (byte) (-34));
      JCLO jCLO0 = new JCLO("-34", (Object) integer0);
      short[] shortArray0 = jCLO0.getShorts("-34");
      assertNull(shortArray0);
  }

  @Test
  public void test9()  throws Throwable  {
      JCLO jCLO0 = new JCLO((Object) "11");
      char[] charArray0 = jCLO0.getChars("-hash int\n");
      assertNull(charArray0);
  }

  @Test
  public void test10()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      JCLO jCLO0 = new JCLO("u0`guO.", (Object) boolean0);
      String string0 = jCLO0.getString("u0`guO.");
      assertNull(string0);
  }

  @Test
  public void test11()  throws Throwable  {
      Float float0 = new Float((double) '*');
      JCLO jCLO0 = new JCLO("-", (Object) float0);
      double[] doubleArray0 = jCLO0.getDoubles("-");
      assertNull(doubleArray0);
  }

  @Test
  public void test12()  throws Throwable  {
      Byte byte0 = Byte.valueOf((byte)6);
      JCLO jCLO0 = new JCLO("class java.lang.", (Object) byte0);
      // Undeclared exception!
      try {
        jCLO0.getLong("0.0");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      JCLO jCLO0 = new JCLO("u0`guO.", (Object) boolean0);
      // Undeclared exception!
      try {
        jCLO0.getByte("u0`guO.");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      Float float0 = new Float((double) '*');
      JCLO jCLO0 = new JCLO("-", (Object) float0);
      String[] stringArray0 = jCLO0.getStrings("-");
      assertNull(stringArray0);
  }

  @Test
  public void test15()  throws Throwable  {
      String[][] stringArray0 = new String[9][2];
      JCLO jCLO0 = new JCLO("|:8#2IzBh5", (Object) "Boolean: TRUE = true\nBoolean: FALSE = false\nClass: TYPE = boolean\nboolean: value = true\nlong: serialVersionUID = -3665804199014368530", stringArray0);
      // Undeclared exception!
      try {
        jCLO0.toString();
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      Byte byte0 = Byte.valueOf((byte)6);
      JCLO jCLO0 = new JCLO("class java.lang.", (Object) byte0);
      long[] longArray0 = jCLO0.getLongs("0.0");
      assertNull(longArray0);
  }

  @Test
  public void test17()  throws Throwable  {
      JCLO jCLO0 = new JCLO((Object) "11");
      int[] intArray0 = jCLO0.getInts("-hash int\n");
      assertNull(intArray0);
  }

  @Test
  public void test18()  throws Throwable  {
      Integer integer0 = new Integer(15);
      JCLO jCLO0 = new JCLO((Object) integer0);
      // Undeclared exception!
      try {
        jCLO0.getBoolean("J%u!<$m|jpu[fJy");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test19()  throws Throwable  {
      Float float0 = new Float((-1.0));
      String[][] stringArray0 = new String[10][10];
      JCLO jCLO0 = new JCLO((Object) float0, stringArray0);
      assertNotNull(jCLO0);
      
      Float float1 = (Float)jCLO0.getValue("MAX_VALUE");
      assertEquals("float: POSITIVE_INFINITY = Infinity\nfloat: NEGATIVE_INFINITY = -Infinity\nfloat: NaN = NaN\nfloat: MAX_VALUE = 3.4028235E38\nfloat: MIN_NORMAL = 1.17549435E-38\nfloat: MIN_VALUE = 1.4E-45\nint: MAX_EXPONENT = 127\nint: MIN_EXPONENT = -126\nint: SIZE = 32\nClass: TYPE = float\nfloat: value = -1.0\nlong: serialVersionUID = -2671257302660747028", jCLO0.toString());
      assertEquals(3.4028235E38F, (float)float1, 0.01F);
  }

  @Test
  public void test20()  throws Throwable  {
      JCLO jCLO0 = new JCLO((Object) "11");
      assertNotNull(jCLO0);
      
      String string0 = jCLO0.usage();
      assertNotNull(string0);
      assertEquals("-hash int\n", string0);
  }

  @Test
  public void test21()  throws Throwable  {
      Float float0 = new Float((double) '*');
      JCLO jCLO0 = new JCLO("-", (Object) float0);
      String string0 = jCLO0.usage();
      assertEquals("", string0);
  }

  @Test
  public void test22()  throws Throwable  {
      JCLO jCLO0 = new JCLO("", "-");
      assertNotNull(jCLO0);
      
      String string0 = jCLO0.usage();
      assertNotNull(string0);
      assertEquals("-hash int\n", string0);
  }

  @Test
  public void test23()  throws Throwable  {
      Byte byte0 = Byte.valueOf((byte)6);
      JCLO jCLO0 = new JCLO("class java.lang.", (Object) byte0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "0.0";
      jCLO0.parse(stringArray0);
      assertEquals("", jCLO0.usage());
  }

  @Test
  public void test24()  throws Throwable  {
      String[][] stringArray0 = new String[3][2];
      String[] stringArray1 = new String[1];
      stringArray1[0] = "-60";
      stringArray0[0] = stringArray1;
      JCLO jCLO0 = new JCLO((Object) "-60", (String[][]) null);
      assertNotNull(jCLO0);
      
      // Undeclared exception!
      try {
        jCLO0.parse(stringArray0[0]);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No such option: \"_0\"
         */
      }
  }

  @Test
  public void test25()  throws Throwable  {
      String[][] stringArray0 = new String[2][2];
      String[] stringArray1 = new String[5];
      stringArray1[0] = "-1";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[2];
      stringArray2[0] = "";
      stringArray0[1] = stringArray2;
      JCLO jCLO0 = new JCLO("int", (Object) "-1", stringArray0);
      // Undeclared exception!
      try {
        jCLO0.parse(stringArray1);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No such option: \"null\"
         */
      }
  }
}
