/*
 * This file was automatically generated by EvoSuite
 */

package net.virtualinfinity.atrobots.hardware.throttle;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.virtualinfinity.atrobots.arena.Speed;
import net.virtualinfinity.atrobots.hardware.HasOverburner;
import net.virtualinfinity.atrobots.hardware.heatsinks.HeatSinks;
import net.virtualinfinity.atrobots.hardware.throttle.Throttle;
import net.virtualinfinity.atrobots.measures.Duration;
import net.virtualinfinity.atrobots.ports.PortHandler;
import net.virtualinfinity.atrobots.robot.Robot;
import net.virtualinfinity.atrobots.robot.RobotScore;
import net.virtualinfinity.atrobots.robot.RobotScoreKeeper;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ThrottleEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Throttle throttle0 = new Throttle((-1070.3203636796586));
      throttle0.shutDown();
      assertEquals(0, throttle0.desiredPower);
      assertEquals(0, throttle0.getDesiredPower());
  }

  @Test
  public void test1()  throws Throwable  {
      Throttle throttle0 = new Throttle((-19.332477613414284));
      int int0 = throttle0.getPower();
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      Throttle throttle0 = new Throttle((-19.332477613414284));
      HeatSinks heatSinks0 = new HeatSinks();
      throttle0.setHeatSinks(heatSinks0);
      assertEquals(0, throttle0.power);
  }

  @Test
  public void test3()  throws Throwable  {
      Throttle throttle0 = new Throttle((-1070.3203636796586));
      RobotScoreKeeper robotScoreKeeper0 = new RobotScoreKeeper();
      Robot robot0 = new Robot("}+v6[2<h0J_Squ>{p", 0, (RobotScore) robotScoreKeeper0);
      throttle0.setOverburner((HasOverburner) robot0);
      robot0.setOverburn(true);
      Duration duration0 = Duration.ZERO_CYCLE;
      // Undeclared exception!
      try {
        throttle0.update(duration0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Throttle throttle0 = new Throttle((-1402.7144824293366));
      PortHandler portHandler0 = throttle0.getSpedometer();
      assertEquals(0, portHandler0.read());
  }

  @Test
  public void test5()  throws Throwable  {
      Throttle throttle0 = new Throttle((-1402.7144824293366));
      int int0 = throttle0.getDesiredPower();
      assertEquals(0, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      Throttle throttle0 = new Throttle((-1402.7144824293366));
      // Undeclared exception!
      try {
        throttle0.setPower(0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Throttle throttle0 = new Throttle((-1070.3203636796586));
      PortHandler portHandler0 = throttle0.getActuator();
      assertNotNull(portHandler0);
  }

  @Test
  public void test8()  throws Throwable  {
      Throttle throttle0 = new Throttle(0.0);
      RobotScoreKeeper robotScoreKeeper0 = new RobotScoreKeeper();
      Robot robot0 = new Robot("I", 0, (RobotScore) robotScoreKeeper0);
      Speed speed0 = new Speed();
      throttle0.setSpeed(speed0);
      throttle0.setOverburner((HasOverburner) robot0);
      Duration duration0 = Duration.ZERO_CYCLE;
      throttle0.update(duration0);
      assertEquals(0, throttle0.power);
      assertEquals(0, throttle0.getPower());
  }

  @Test
  public void test9()  throws Throwable  {
      Throttle throttle0 = new Throttle(1931.496881861206);
      throttle0.setDesiredPower((-719));
      Duration duration0 = Duration.ZERO_CYCLE;
      // Undeclared exception!
      try {
        throttle0.update(duration0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      Throttle throttle0 = new Throttle((-1070.3203636796586));
      Speed speed0 = new Speed();
      throttle0.speed = (net.virtualinfinity.atrobots.arena.Speed) speed0;
      RobotScoreKeeper robotScoreKeeper0 = new RobotScoreKeeper();
      throttle0.power = (-496);
      Robot robot0 = new Robot("}+v6[2<h0J_Squ>{p", 0, (RobotScore) robotScoreKeeper0);
      throttle0.setOverburner((HasOverburner) robot0);
      Duration duration0 = Duration.ZERO_CYCLE;
      // Undeclared exception!
      try {
        throttle0.update(duration0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
