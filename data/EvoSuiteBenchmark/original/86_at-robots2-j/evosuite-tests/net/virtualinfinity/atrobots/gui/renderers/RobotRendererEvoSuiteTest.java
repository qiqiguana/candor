/*
 * This file was automatically generated by EvoSuite
 */

package net.virtualinfinity.atrobots.gui.renderers;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Graphics2D;
import java.util.LinkedHashSet;
import java.util.Set;
import net.virtualinfinity.atrobots.gui.renderers.RobotRenderer;
import net.virtualinfinity.atrobots.snapshots.RobotSnapshot;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RobotRendererEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RobotRenderer robotRenderer0 = new RobotRenderer();
      boolean boolean0 = robotRenderer0.isShowName();
      assertEquals(true, boolean0);
      assertEquals(true, robotRenderer0.isShowStatusBars());
      assertEquals(true, robotRenderer0.isRenderDead());
      assertEquals(true, robotRenderer0.isFillShield());
  }

  @Test
  public void test1()  throws Throwable  {
      RobotRenderer robotRenderer0 = new RobotRenderer();
      RobotSnapshot robotSnapshot0 = new RobotSnapshot();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      // Undeclared exception!
      try {
        robotRenderer0.render((Graphics2D) null, robotSnapshot0, (Set<Integer>) linkedHashSet0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      RobotRenderer robotRenderer0 = new RobotRenderer();
      boolean boolean0 = robotRenderer0.isShowStatusBars();
      assertEquals(true, robotRenderer0.isShowName());
      assertEquals(true, boolean0);
      assertEquals(true, robotRenderer0.isFillShield());
      assertEquals(true, robotRenderer0.isRenderDead());
  }

  @Test
  public void test3()  throws Throwable  {
      RobotRenderer robotRenderer0 = new RobotRenderer();
      assertEquals(true, robotRenderer0.isShowName());
      
      robotRenderer0.setShowName(false);
      assertEquals(false, robotRenderer0.isShowName());
      assertEquals(true, robotRenderer0.isRenderDead());
  }

  @Test
  public void test4()  throws Throwable  {
      RobotRenderer robotRenderer0 = new RobotRenderer();
      robotRenderer0.setShowStatusBars(true);
      assertEquals(true, robotRenderer0.isShowName());
      assertEquals(true, robotRenderer0.isFillShield());
      assertEquals(true, robotRenderer0.isShowStatusBars());
      assertEquals(true, robotRenderer0.isRenderDead());
  }

  @Test
  public void test5()  throws Throwable  {
      RobotRenderer robotRenderer0 = new RobotRenderer();
      boolean boolean0 = robotRenderer0.isFillShield();
      assertEquals(true, robotRenderer0.isShowStatusBars());
      assertEquals(true, boolean0);
      assertEquals(true, robotRenderer0.isShowName());
      assertEquals(true, robotRenderer0.isRenderDead());
  }

  @Test
  public void test6()  throws Throwable  {
      RobotRenderer robotRenderer0 = new RobotRenderer();
      assertEquals(true, robotRenderer0.isFillShield());
      
      robotRenderer0.setFillShield(false);
      assertEquals(false, robotRenderer0.isFillShield());
      assertEquals(true, robotRenderer0.isRenderDead());
  }

  @Test
  public void test7()  throws Throwable  {
      RobotRenderer robotRenderer0 = new RobotRenderer();
      assertEquals(true, robotRenderer0.isRenderDead());
      
      RobotSnapshot robotSnapshot0 = new RobotSnapshot();
      robotRenderer0.setRenderDead(false);
      // Undeclared exception!
      try {
        robotRenderer0.render((Graphics2D) null, robotSnapshot0, (Set<Integer>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      RobotRenderer robotRenderer0 = new RobotRenderer();
      assertEquals(true, robotRenderer0.isRenderDead());
      
      RobotSnapshot robotSnapshot0 = new RobotSnapshot();
      robotRenderer0.setRenderDead(false);
      robotSnapshot0.setDead(true);
      robotRenderer0.render((Graphics2D) null, robotSnapshot0, (Set<Integer>) null);
      assertEquals(false, robotRenderer0.isRenderDead());
  }
}
