/*
 * This file was automatically generated by EvoSuite
 */

package net.virtualinfinity.atrobots.json;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.virtualinfinity.atrobots.json.SnapshotToJson;
import net.virtualinfinity.atrobots.measures.AbsoluteAngle;
import net.virtualinfinity.atrobots.measures.Vector;
import net.virtualinfinity.atrobots.snapshots.ArenaObjectSnapshot;
import net.virtualinfinity.atrobots.snapshots.ExplosionSnapshot;
import net.virtualinfinity.atrobots.snapshots.MineSnapshot;
import net.virtualinfinity.atrobots.snapshots.UnknownSnapshot;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SnapshotToJsonEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SnapshotToJson snapshotToJson0 = new SnapshotToJson();
      JSONArray jSONArray0 = snapshotToJson0.getSnapshots();
      assertEquals("[]", jSONArray0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      SnapshotToJson snapshotToJson0 = new SnapshotToJson();
      MineSnapshot mineSnapshot0 = new MineSnapshot();
      // Undeclared exception!
      try {
        snapshotToJson0.acceptMine(mineSnapshot0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      SnapshotToJson snapshotToJson0 = new SnapshotToJson();
      // Undeclared exception!
      try {
        snapshotToJson0.acceptExplosion((ExplosionSnapshot) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      SnapshotToJson snapshotToJson0 = new SnapshotToJson();
      UnknownSnapshot unknownSnapshot0 = new UnknownSnapshot("yy`fP}3");
      AbsoluteAngle absoluteAngle0 = AbsoluteAngle.fromRadians((-1332.5201638821545));
      Vector vector0 = absoluteAngle0.toUnitVector();
      unknownSnapshot0.setPositionVector(vector0);
      JSONObject jSONObject0 = snapshotToJson0.getBasicJson((ArenaObjectSnapshot) unknownSnapshot0, "yy`fP}3", false);
      assertEquals("{\"status\":\"alive\",\"type\":\"yy`fP}3\",\"y\":-0.4661010981044078,\"x\":0.8847314656695924}", jSONObject0.toString());
      assertNotNull(jSONObject0);
  }

  @Test
  public void test4()  throws Throwable  {
      SnapshotToJson snapshotToJson0 = new SnapshotToJson();
      UnknownSnapshot unknownSnapshot0 = new UnknownSnapshot("yy`fP}3");
      AbsoluteAngle absoluteAngle0 = AbsoluteAngle.fromRadians((-1332.5201638821545));
      Vector vector0 = absoluteAngle0.toUnitVector();
      unknownSnapshot0.setPositionVector(vector0);
      // Undeclared exception!
      try {
        snapshotToJson0.acceptUnknown(unknownSnapshot0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
