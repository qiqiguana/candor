/*
 * This file was automatically generated by EvoSuite
 */

package net.virtualinfinity.atrobots.ports;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.virtualinfinity.atrobots.ports.InvalidPort;
import net.virtualinfinity.atrobots.ports.PortListener;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PortHandlerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      InvalidPort invalidPort0 = new InvalidPort();
      // Undeclared exception!
      try {
        invalidPort0.consumeCycles(0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      InvalidPort invalidPort0 = new InvalidPort();
      InvalidPort invalidPort1 = (InvalidPort)invalidPort0.setPortListener((PortListener) null);
      assertSame(invalidPort1, invalidPort0);
  }

  @Test
  public void test2()  throws Throwable  {
      InvalidPort invalidPort0 = new InvalidPort();
      // Undeclared exception!
      try {
        invalidPort0.write((short) (-1648));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      InvalidPort invalidPort0 = new InvalidPort();
      // Undeclared exception!
      try {
        invalidPort0.read();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
