/*
 * This file was automatically generated by EvoSuite
 */

package net.virtualinfinity.atrobots.snapshots;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.virtualinfinity.atrobots.measures.Duration;
import net.virtualinfinity.atrobots.snapshots.ExplosionSnapshot;
import net.virtualinfinity.atrobots.snapshots.MineSnapshot;
import net.virtualinfinity.atrobots.snapshots.MissileSnapshot;
import net.virtualinfinity.atrobots.snapshots.RobotSnapshot;
import net.virtualinfinity.atrobots.snapshots.ScanSnapshot;
import net.virtualinfinity.atrobots.snapshots.SnapshotAdaptor;
import net.virtualinfinity.atrobots.snapshots.UnknownSnapshot;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SnapshotAdaptorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SnapshotAdaptor snapshotAdaptor0 = new SnapshotAdaptor();
      snapshotAdaptor0.acceptScan((ScanSnapshot) null);
  }

  @Test
  public void test1()  throws Throwable  {
      SnapshotAdaptor snapshotAdaptor0 = new SnapshotAdaptor();
      Duration duration0 = Duration.fromCycles(2006);
      ExplosionSnapshot explosionSnapshot0 = new ExplosionSnapshot(1.0, duration0);
      snapshotAdaptor0.acceptExplosion(explosionSnapshot0);
  }

  @Test
  public void test2()  throws Throwable  {
      SnapshotAdaptor snapshotAdaptor0 = new SnapshotAdaptor();
      RobotSnapshot robotSnapshot0 = new RobotSnapshot();
      snapshotAdaptor0.acceptRobot(robotSnapshot0);
  }

  @Test
  public void test3()  throws Throwable  {
      SnapshotAdaptor snapshotAdaptor0 = new SnapshotAdaptor();
      MineSnapshot mineSnapshot0 = new MineSnapshot();
      snapshotAdaptor0.acceptMine(mineSnapshot0);
  }

  @Test
  public void test4()  throws Throwable  {
      SnapshotAdaptor snapshotAdaptor0 = new SnapshotAdaptor();
      UnknownSnapshot unknownSnapshot0 = new UnknownSnapshot("");
      snapshotAdaptor0.acceptUnknown(unknownSnapshot0);
  }

  @Test
  public void test5()  throws Throwable  {
      SnapshotAdaptor snapshotAdaptor0 = new SnapshotAdaptor();
      Duration duration0 = Duration.fromCycles(2006);
      MissileSnapshot missileSnapshot0 = new MissileSnapshot(false, duration0);
      snapshotAdaptor0.acceptMissile(missileSnapshot0);
  }
}
