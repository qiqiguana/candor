/*
 * This file was automatically generated by EvoSuite
 */

package net.virtualinfinity.atrobots.computer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.virtualinfinity.atrobots.computer.ComputerErrorHandler;
import net.virtualinfinity.atrobots.computer.Memory;
import net.virtualinfinity.atrobots.computer.MemoryArray;
import net.virtualinfinity.atrobots.computer.MemoryCell;
import net.virtualinfinity.atrobots.computer.RandomAccessMemoryArray;
import net.virtualinfinity.atrobots.computer.ReadOnlyMemoryArray;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MemoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Memory memory0 = new Memory();
      ComputerErrorHandler computerErrorHandler0 = memory0.getErrorHandler();
      assertNull(computerErrorHandler0);
  }

  @Test
  public void test1()  throws Throwable  {
      Memory memory0 = new Memory();
      RandomAccessMemoryArray randomAccessMemoryArray0 = new RandomAccessMemoryArray(1);
      memory0.addMemoryArray((MemoryArray) randomAccessMemoryArray0);
      memory0.and(0, (short) (-1));
      assertEquals(1, memory0.size());
  }

  @Test
  public void test2()  throws Throwable  {
      Memory memory0 = new Memory();
      MemoryCell memoryCell0 = memory0.getCell(0);
      assertNotNull(memoryCell0);
  }

  @Test
  public void test3()  throws Throwable  {
      Memory memory0 = new Memory();
      ReadOnlyMemoryArray readOnlyMemoryArray0 = new ReadOnlyMemoryArray(0);
      memory0.addMemoryArray((MemoryArray) readOnlyMemoryArray0);
      // Undeclared exception!
      try {
        memory0.or(319, (short)639);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Memory memory0 = new Memory();
      RandomAccessMemoryArray randomAccessMemoryArray0 = new RandomAccessMemoryArray(1473);
      memory0.addMemoryArray((MemoryArray) randomAccessMemoryArray0);
      memory0.or(0, (short)0);
      assertEquals(1473, memory0.size());
  }

  @Test
  public void test5()  throws Throwable  {
      Memory memory0 = new Memory();
      ReadOnlyMemoryArray readOnlyMemoryArray0 = new ReadOnlyMemoryArray(0);
      memory0.addMemoryArray((MemoryArray) readOnlyMemoryArray0);
      // Undeclared exception!
      try {
        memory0.and(65535, (short)307);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Memory memory0 = new Memory();
      RandomAccessMemoryArray randomAccessMemoryArray0 = new RandomAccessMemoryArray(1);
      memory0.addMemoryArray((MemoryArray) randomAccessMemoryArray0);
      int int0 = memory0.size();
      assertEquals(1, memory0.size());
      assertEquals(1, int0);
  }

  @Test
  public void test7()  throws Throwable  {
      Memory memory0 = new Memory();
      RandomAccessMemoryArray randomAccessMemoryArray0 = new RandomAccessMemoryArray(1);
      memory0.addMemoryArray((MemoryArray) randomAccessMemoryArray0);
      int int0 = memory0.unsigned(0);
      assertEquals(1, memory0.size());
      assertEquals(0, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      Memory memory0 = new Memory();
      ReadOnlyMemoryArray readOnlyMemoryArray0 = new ReadOnlyMemoryArray(1);
      memory0.addMemoryArray((MemoryArray) readOnlyMemoryArray0);
      // Undeclared exception!
      try {
        memory0.get(1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      Memory memory0 = new Memory();
      RandomAccessMemoryArray randomAccessMemoryArray0 = new RandomAccessMemoryArray(1);
      memory0.addMemoryArray((MemoryArray) randomAccessMemoryArray0);
      memory0.set(0, (short)1907);
      assertEquals(1, memory0.size());
  }

  @Test
  public void test10()  throws Throwable  {
      Memory memory0 = new Memory();
      ReadOnlyMemoryArray readOnlyMemoryArray0 = new ReadOnlyMemoryArray(1);
      memory0.addMemoryArray((MemoryArray) readOnlyMemoryArray0);
      // Undeclared exception!
      try {
        memory0.set(1, (short) (-1));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      Memory memory0 = new Memory();
      RandomAccessMemoryArray randomAccessMemoryArray0 = new RandomAccessMemoryArray(1840);
      memory0.addMemoryArray((MemoryArray) randomAccessMemoryArray0);
      // Undeclared exception!
      try {
        memory0.decrement((-176));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -176
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      Memory memory0 = new Memory();
      ReadOnlyMemoryArray readOnlyMemoryArray0 = new ReadOnlyMemoryArray(0);
      memory0.addMemoryArray((MemoryArray) readOnlyMemoryArray0);
      // Undeclared exception!
      try {
        memory0.decrement(4);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      Memory memory0 = new Memory();
      ReadOnlyMemoryArray readOnlyMemoryArray0 = new ReadOnlyMemoryArray(0);
      memory0.addMemoryArray((MemoryArray) readOnlyMemoryArray0);
      // Undeclared exception!
      try {
        memory0.increment(65535);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      Memory memory0 = new Memory();
      RandomAccessMemoryArray randomAccessMemoryArray0 = new RandomAccessMemoryArray(125);
      memory0.addMemoryArray((MemoryArray) randomAccessMemoryArray0);
      // Undeclared exception!
      try {
        memory0.increment((-737));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -737
         */
      }
  }

  @Test
  public void test15()  throws Throwable  {
      Memory memory0 = new Memory();
      RandomAccessMemoryArray randomAccessMemoryArray0 = new RandomAccessMemoryArray(1);
      memory0.addMemoryArray((MemoryArray) randomAccessMemoryArray0);
      memory0.setErrorHandler((ComputerErrorHandler) null);
      assertEquals(1, memory0.size());
  }
}
