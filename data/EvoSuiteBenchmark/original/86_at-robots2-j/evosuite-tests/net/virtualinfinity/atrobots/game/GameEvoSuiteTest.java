/*
 * This file was automatically generated by EvoSuite
 */

package net.virtualinfinity.atrobots.game;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.virtualinfinity.atrobots.arena.SimulationObserver;
import net.virtualinfinity.atrobots.compiler.RobotFactory;
import net.virtualinfinity.atrobots.game.Game;
import net.virtualinfinity.atrobots.game.GameResult;
import net.virtualinfinity.atrobots.gui.ArenaPane;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class GameEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Game game0 = new Game(148);
      game0.addEntrant((RobotFactory) null);
      // Undeclared exception!
      try {
        game0.nextRound();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Game game0 = new Game(148);
      ArenaPane arenaPane0 = new ArenaPane();
      game0.removeSimulationObserver((SimulationObserver) arenaPane0);
      assertEquals(148, game0.getTotalRounds());
      assertEquals(5, game0.getMaxProcessorSpeed());
  }

  @Test
  public void test2()  throws Throwable  {
      Game game0 = new Game(1);
      game0.addSimulationObserver((SimulationObserver) null);
      assertEquals(5, game0.getMaxProcessorSpeed());
      assertEquals(1, game0.getTotalRounds());
  }

  @Test
  public void test3()  throws Throwable  {
      Game game0 = new Game(1);
      game0.roundOver();
      boolean boolean0 = game0.stepRound();
      assertEquals(1, game0.getTotalRounds());
      assertEquals(5, game0.getMaxProcessorSpeed());
      assertEquals(false, game0.stepRound());
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      Game game0 = new Game(1);
      assertEquals(5, game0.getMaxProcessorSpeed());
      
      game0.setMaxProcessorSpeed(1);
      assertEquals(1, game0.getMaxProcessorSpeed());
  }

  @Test
  public void test5()  throws Throwable  {
      Game game0 = new Game(1);
      GameResult gameResult0 = game0.getFinalResults();
      assertNotNull(gameResult0);
      assertEquals(1, game0.getTotalRounds());
      assertEquals(5, game0.getMaxProcessorSpeed());
  }

  @Test
  public void test6()  throws Throwable  {
      Game game0 = new Game(1);
      boolean boolean0 = game0.stepRound();
      assertEquals(false, boolean0);
      assertEquals(5, game0.getMaxProcessorSpeed());
      assertEquals(1, game0.getTotalRounds());
  }

  @Test
  public void test7()  throws Throwable  {
      Game game0 = new Game(148);
      game0.nextRound();
      boolean boolean0 = game0.stepRound();
      assertEquals(true, game0.stepRound());
      assertEquals(true, boolean0);
  }
}
