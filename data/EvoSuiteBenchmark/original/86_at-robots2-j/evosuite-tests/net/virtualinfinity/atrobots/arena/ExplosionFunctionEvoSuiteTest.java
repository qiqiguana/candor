/*
 * This file was automatically generated by EvoSuite
 */

package net.virtualinfinity.atrobots.arena;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.virtualinfinity.atrobots.arena.LinearDamageFunction;
import net.virtualinfinity.atrobots.arena.Position;
import net.virtualinfinity.atrobots.arena.TangibleArenaObject;
import net.virtualinfinity.atrobots.arenaobjects.DamageInflicter;
import net.virtualinfinity.atrobots.measures.AbsoluteAngle;
import net.virtualinfinity.atrobots.measures.Vector;
import net.virtualinfinity.atrobots.robot.Robot;
import net.virtualinfinity.atrobots.robot.RobotScore;
import net.virtualinfinity.atrobots.robot.RobotScoreKeeper;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ExplosionFunctionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RobotScoreKeeper robotScoreKeeper0 = new RobotScoreKeeper();
      Robot robot0 = new Robot("UCU@[", 594, (RobotScore) robotScoreKeeper0);
      Position position0 = robot0.getPosition();
      LinearDamageFunction linearDamageFunction0 = new LinearDamageFunction(position0, (double) 594, (-965.3090693372466));
      AbsoluteAngle absoluteAngle0 = AbsoluteAngle.fromRadians(300.0);
      Vector vector0 = absoluteAngle0.toUnitVector();
      Position position1 = new Position(vector0);
      position0.copyFrom(position1);
      linearDamageFunction0.inflictDamage((DamageInflicter) robot0, (TangibleArenaObject) robot0);
      assertEquals(false, robot0.isOverburn());
  }

  @Test
  public void test1()  throws Throwable  {
      RobotScoreKeeper robotScoreKeeper0 = new RobotScoreKeeper();
      Robot robot0 = new Robot("UCU@[", 594, (RobotScore) robotScoreKeeper0);
      Position position0 = robot0.getPosition();
      AbsoluteAngle absoluteAngle0 = AbsoluteAngle.fromRadians(300.0);
      Vector vector0 = absoluteAngle0.toUnitVector();
      Position position1 = new Position(vector0);
      position0.copyFrom(position1);
      LinearDamageFunction linearDamageFunction0 = new LinearDamageFunction(position0, (double) 594, (double) 594);
      // Undeclared exception!
      try {
        linearDamageFunction0.inflictDamage((DamageInflicter) robot0, (TangibleArenaObject) robot0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
