/*
 * This file was automatically generated by EvoSuite
 */

package net.virtualinfinity.atrobots.json;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.HashMap;
import java.util.Map;
import net.virtualinfinity.atrobots.json.JsonToSnapshots;
import net.virtualinfinity.atrobots.snapshots.ArenaObjectSnapshot;
import net.virtualinfinity.atrobots.snapshots.ExplosionSnapshot;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JsonToSnapshotsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JsonToSnapshots.Types jsonToSnapshots_Types0 = JsonToSnapshots.Types.missile;
      JsonToSnapshots jsonToSnapshots0 = new JsonToSnapshots();
      // Undeclared exception!
      try {
        jsonToSnapshots_Types0.convert(jsonToSnapshots0, (JSONObject) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      JsonToSnapshots.Types jsonToSnapshots_Types0 = JsonToSnapshots.Types.mine;
      JsonToSnapshots jsonToSnapshots0 = new JsonToSnapshots();
      HashMap<ArenaObjectSnapshot, Integer> hashMap0 = new HashMap<ArenaObjectSnapshot, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try {
        jsonToSnapshots_Types0.convert(jsonToSnapshots0, jSONObject0);
        fail("Expecting exception: JSONException");
      } catch(JSONException e) {
        /*
         * JSONObject[\"triggerRadius\"] not found.
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      JsonToSnapshots.Types jsonToSnapshots_Types0 = JsonToSnapshots.Types.robot;
      JsonToSnapshots jsonToSnapshots0 = new JsonToSnapshots();
      // Undeclared exception!
      try {
        jsonToSnapshots_Types0.convert(jsonToSnapshots0, (JSONObject) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      JsonToSnapshots.Types jsonToSnapshots_Types0 = JsonToSnapshots.Types.explosion;
      JsonToSnapshots jsonToSnapshots0 = new JsonToSnapshots();
      JSONObject jSONObject0 = new JSONObject((Object) "0x1.017f52p9");
      ExplosionSnapshot explosionSnapshot0 = (ExplosionSnapshot)jsonToSnapshots_Types0.convert(jsonToSnapshots0, jSONObject0);
      assertNotNull(explosionSnapshot0);
      assertEquals(5.0, explosionSnapshot0.getRadius(), 0.01D);
  }

  @Test
  public void test4()  throws Throwable  {
      JsonToSnapshots.Types jsonToSnapshots_Types0 = JsonToSnapshots.Types.scan;
      JsonToSnapshots jsonToSnapshots0 = new JsonToSnapshots();
      String[] stringArray0 = new String[8];
      JSONObject jSONObject0 = new JSONObject((JSONObject) null, stringArray0);
      try {
        jsonToSnapshots_Types0.convert(jsonToSnapshots0, jSONObject0);
        fail("Expecting exception: JSONException");
      } catch(JSONException e) {
        /*
         * JSONObject[\"sector\"] not found.
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      JsonToSnapshots.Types jsonToSnapshots_Types0 = JsonToSnapshots.Types.unknown;
      JsonToSnapshots jsonToSnapshots0 = new JsonToSnapshots();
      // Undeclared exception!
      try {
        jsonToSnapshots_Types0.convert(jsonToSnapshots0, (JSONObject) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      JsonToSnapshots jsonToSnapshots0 = new JsonToSnapshots();
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(1500, 1500);
      jsonToSnapshots0.getSnapshots(jSONArray1);
  }
}
