/*
 * This file was automatically generated by EvoSuite
 */

package net.virtualinfinity.atrobots.measures;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.virtualinfinity.atrobots.measures.Temperature;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TemperatureEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Temperature temperature0 = Temperature.BASE_TEMPERATURE;
      Temperature temperature1 = temperature0.plus(temperature0);
      assertTrue(temperature1.equals(temperature0));
      assertNotNull(temperature1);
  }

  @Test
  public void test1()  throws Throwable  {
      Temperature temperature0 = Temperature.BASE_TEMPERATURE;
      temperature0.compareTo(temperature0);
      assertEquals(0.0, temperature0.getLogScale(), 0.01D);
  }

  @Test
  public void test2()  throws Throwable  {
      Temperature temperature0 = Temperature.fromLogScale(0.0);
      Temperature temperature1 = temperature0.minus(temperature0);
      assertEquals(0.0, temperature1.getLogScale(), 0.01D);
      assertNotNull(temperature1);
  }

  @Test
  public void test3()  throws Throwable  {
      Temperature temperature0 = Temperature.fromLogScale(0.0);
      Temperature temperature1 = temperature0.times(0.0);
      assertNotNull(temperature1);
      
      boolean boolean0 = temperature1.equals((Object) temperature0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      Temperature temperature0 = Temperature.BASE_TEMPERATURE;
      boolean boolean0 = temperature0.equals((Object) "0");
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      Temperature temperature0 = Temperature.fromLogScale(0.0);
      boolean boolean0 = temperature0.equals((Object) temperature0);
      assertEquals(true, boolean0);
      assertEquals(0.0, temperature0.getLogScale(), 0.01D);
  }

  @Test
  public void test6()  throws Throwable  {
      Temperature temperature0 = Temperature.fromLogScale(822.4934154233018);
      boolean boolean0 = temperature0.equals((Object) null);
      assertEquals(822.4934154233018, temperature0.getLogScale(), 0.01D);
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      Temperature temperature0 = new Temperature((-805.2257751633357));
      Temperature temperature1 = temperature0.times(0.0);
      assertNotNull(temperature1);
      
      boolean boolean0 = temperature1.equals((Object) temperature0);
      assertFalse(temperature0.equals(temperature1));
      assertEquals((-805.2257751633357), temperature0.getLogScale(), 0.01D);
      assertEquals(false, boolean0);
      assertEquals(-0.0, temperature1.getLogScale(), 0.01D);
  }

  @Test
  public void test8()  throws Throwable  {
      Temperature temperature0 = Temperature.BASE_TEMPERATURE;
      int int0 = temperature0.hashCode();
      assertEquals(0, int0);
  }

  @Test
  public void test9()  throws Throwable  {
      Temperature temperature0 = Temperature.fromLogScale(617.950581053526);
      int int0 = temperature0.hashCode();
      assertEquals((-1967257823), int0);
  }
}
