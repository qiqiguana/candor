/*
 * This file was automatically generated by EvoSuite
 */

package net.virtualinfinity.atrobots.arenaobjects;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.virtualinfinity.atrobots.arena.Arena;
import net.virtualinfinity.atrobots.arena.Explosion;
import net.virtualinfinity.atrobots.arena.Position;
import net.virtualinfinity.atrobots.arena.Scan;
import net.virtualinfinity.atrobots.arenaobjects.DamageInflicter;
import net.virtualinfinity.atrobots.hardware.mines.Mine;
import net.virtualinfinity.atrobots.measures.AngleBracket;
import net.virtualinfinity.atrobots.measures.Duration;
import net.virtualinfinity.atrobots.measures.Vector;
import net.virtualinfinity.atrobots.robot.Robot;
import net.virtualinfinity.atrobots.robot.RobotScore;
import net.virtualinfinity.atrobots.robot.RobotScoreKeeper;
import net.virtualinfinity.atrobots.snapshots.ScanSnapshot;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ArenaObjectEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Scan scan0 = new Scan((AngleBracket) null, 0.0, true, (Vector) null, true, 0);
      ScanSnapshot scanSnapshot0 = (ScanSnapshot)scan0.getSnapshot();
      assertEquals(-0.0, scanSnapshot0.getVelocityY(), 0.01D);
      assertNotNull(scanSnapshot0);
  }

  @Test
  public void test1()  throws Throwable  {
      RobotScoreKeeper robotScoreKeeper0 = new RobotScoreKeeper();
      Robot robot0 = new Robot("aD", 1, (RobotScore) robotScoreKeeper0);
      // Undeclared exception!
      try {
        robot0.setArena((Arena) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      RobotScoreKeeper robotScoreKeeper0 = new RobotScoreKeeper();
      Robot robot0 = new Robot("`4c\"g;T:0", 1037, (RobotScore) robotScoreKeeper0);
      Arena arena0 = robot0.getArena();
      assertNull(arena0);
  }

  @Test
  public void test3()  throws Throwable  {
      Duration duration0 = Duration.fromCycles((-917));
      Explosion explosion0 = new Explosion((Vector) null, 0.0);
      // Undeclared exception!
      try {
        explosion0.simulateMovement(duration0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      RobotScoreKeeper robotScoreKeeper0 = new RobotScoreKeeper();
      Robot robot0 = new Robot("", (-428), (RobotScore) robotScoreKeeper0);
      Duration duration0 = robot0.getLastDamageTaken();
      // Undeclared exception!
      try {
        robot0.update(duration0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      Scan scan0 = new Scan((AngleBracket) null, 0.0, true, (Vector) null, true, 0);
      scan0.arenaConnected((Arena) null);
      assertEquals(false, scan0.isDead());
  }

  @Test
  public void test6()  throws Throwable  {
      RobotScoreKeeper robotScoreKeeper0 = new RobotScoreKeeper();
      Robot robot0 = new Robot("", 1154, (RobotScore) robotScoreKeeper0);
      robot0.die();
      assertEquals(true, robot0.isDead());
  }

  @Test
  public void test7()  throws Throwable  {
      RobotScoreKeeper robotScoreKeeper0 = new RobotScoreKeeper();
      Robot robot0 = new Robot("aD", 1, (RobotScore) robotScoreKeeper0);
      Mine mine0 = new Mine((DamageInflicter) robot0);
      Position position0 = mine0.getPosition();
      assertNotNull(position0);
  }
}
