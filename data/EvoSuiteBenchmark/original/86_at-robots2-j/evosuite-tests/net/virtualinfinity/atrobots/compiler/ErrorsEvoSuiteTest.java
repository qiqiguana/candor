/*
 * This file was automatically generated by EvoSuite
 */

package net.virtualinfinity.atrobots.compiler;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.List;
import net.virtualinfinity.atrobots.compiler.Errors;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ErrorsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Errors errors0 = new Errors();
      errors0.addAll(errors0);
      assertEquals(false, errors0.hasErrors());
  }

  @Test
  public void test1()  throws Throwable  {
      Errors errors0 = new Errors();
      assertEquals(false, errors0.hasErrors());
      
      errors0.info("l{ao<DApZ7l");
      errors0.dumpErrors();
      assertEquals(true, errors0.hasErrors());
  }

  @Test
  public void test2()  throws Throwable  {
      Errors errors0 = new Errors();
      errors0.add("ShortDescription", (-15));
      assertEquals(true, errors0.hasErrors());
  }

  @Test
  public void test3()  throws Throwable  {
      Errors errors0 = new Errors();
      errors0.add((String) null, (-15), (-15));
      assertEquals(true, errors0.hasErrors());
  }

  @Test
  public void test4()  throws Throwable  {
      Errors errors0 = new Errors();
      List<String> list0 = errors0.getMessages();
      assertEquals(0, list0.size());
  }

  @Test
  public void test5()  throws Throwable  {
      Errors errors0 = new Errors();
      errors0.dumpErrors();
      assertEquals(false, errors0.hasErrors());
  }

  @Test
  public void test6()  throws Throwable  {
      Errors errors0 = new Errors();
      assertEquals(false, errors0.hasErrors());
      
      errors0.info("l{ao<DApZ7l");
      // Undeclared exception!
      try {
        errors0.showErrorDialog("l{ao<DApZ7l", "l{ao<DApZ7l");
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * java.lang.String cannot be cast to java.awt.Dialog
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Errors errors0 = new Errors();
      errors0.showErrorDialog((String) null, "ShortDescription");
      assertEquals(false, errors0.hasErrors());
  }
}
