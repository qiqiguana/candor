/*
 * This file was automatically generated by EvoSuite
 */

package edu.uiuc.ndiipp.hubandspoke.utils;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import edu.uiuc.ndiipp.hubandspoke.utils.HaSChecksummer;
import java.security.MessageDigest;
import java.util.zip.CRC32;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class HaSChecksummerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HaSChecksummer haSChecksummer0 = new HaSChecksummer();
      MessageDigest messageDigest0 = haSChecksummer0.getSha1Digest();
      assertEquals("SHA-1 Message Digest from SUN, <initialized>\n", messageDigest0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      HaSChecksummer haSChecksummer0 = new HaSChecksummer();
      MessageDigest messageDigest0 = haSChecksummer0.getMd5Digest();
      assertEquals("MD5", messageDigest0.getAlgorithm());
  }

  @Test
  public void test2()  throws Throwable  {
      HaSChecksummer haSChecksummer0 = new HaSChecksummer();
      CRC32 cRC32_0 = haSChecksummer0.getCRC32();
      assertEquals(0L, cRC32_0.getValue());
  }

  @Test
  public void test3()  throws Throwable  {
      HaSChecksummer haSChecksummer0 = new HaSChecksummer();
      long long0 = haSChecksummer0.getLongCRC32();
      assertEquals(0L, long0);
  }

  @Test
  public void test4()  throws Throwable  {
      HaSChecksummer haSChecksummer0 = new HaSChecksummer();
      long long0 = haSChecksummer0.getValue();
      assertEquals(0L, long0);
  }

  @Test
  public void test5()  throws Throwable  {
      HaSChecksummer haSChecksummer0 = new HaSChecksummer();
      haSChecksummer0.update((-56));
      assertEquals("meOoXXIg+GysibZ8mDkDnw==", haSChecksummer0.getBase64EncodedMD5());
      assertEquals(1203610895L, haSChecksummer0.getValue());
  }

  @Test
  public void test6()  throws Throwable  {
      HaSChecksummer haSChecksummer0 = new HaSChecksummer();
      haSChecksummer0.update(1808);
      assertEquals("azG9+n+b/s4mM4H/qRvWqQ==", haSChecksummer0.getBase64EncodedMD5());
      assertEquals(3484811241L, haSChecksummer0.getLongCRC32());
  }

  @Test
  public void test7()  throws Throwable  {
      HaSChecksummer haSChecksummer0 = new HaSChecksummer();
      byte[] byteArray0 = new byte[9];
      haSChecksummer0.update(byteArray0);
      assertEquals("Pygpsv/oQ01n+YoqmJaGUg==", haSChecksummer0.getBase64EncodedMD5());
      assertEquals(3859354798L, haSChecksummer0.getLongCRC32());
      assertEquals("wlnncbI3dpy2vOmlq3NMV2pto+E=", haSChecksummer0.getBase64EncodedSHA1());
  }

  @Test
  public void test8()  throws Throwable  {
      HaSChecksummer haSChecksummer0 = new HaSChecksummer();
      byte[] byteArray0 = new byte[2];
      haSChecksummer0.update(byteArray0, (int) (byte)0, (int) (byte)0);
      assertEquals(0L, haSChecksummer0.getValue());
      assertEquals(0L, haSChecksummer0.getLongCRC32());
  }

  @Test
  public void test9()  throws Throwable  {
      HaSChecksummer haSChecksummer0 = new HaSChecksummer();
      String string0 = haSChecksummer0.getBase64EncodedSHA1();
      assertEquals("2jmj7l5rSw0yVb/vlWAYkK/YBwk=", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      HaSChecksummer haSChecksummer0 = new HaSChecksummer();
      String string0 = haSChecksummer0.getHexEncodedMD5();
      assertEquals("d41d8cd98f00b204e9800998ecf8427e", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      HaSChecksummer haSChecksummer0 = new HaSChecksummer();
      String string0 = haSChecksummer0.getHexEncodedSHA1();
      assertEquals("da39a3ee5e6b4b0d3255bfef95601890afd80709", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      HaSChecksummer haSChecksummer0 = new HaSChecksummer();
      String string0 = haSChecksummer0.getBase64EncodedMD5();
      assertEquals("1B2M2Y8AsgTpgAmY7PhCfg==", string0);
  }
}
