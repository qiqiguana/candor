/*
 * This file was automatically generated by EvoSuite
 */

package wheel.xhtmlConversion;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.xml.sax.Attributes;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.helpers.AttributesImpl;
import wheel.xhtmlConversion.Node;

@RunWith(EvoSuiteRunner.class)
public class NodeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Node node0 = new Node("blockquote", (Attributes) attributes2Impl0);
      node0.appendText("blockquote");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "blockquote");
      node0.print(stringBuilder0);
      assertEquals(true, node0.printed);
      assertEquals("blockquoteblockquote().text(\"blockquote\").up()", stringBuilder0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      attributes2Impl0.addAttribute("Ni", "Ni", "Ni", "Ni", "Ni");
      Node node0 = new Node("Ni", (Attributes) attributes2Impl0);
      assertNotNull(node0);
      
      StringBuilder stringBuilder0 = new StringBuilder();
      node0.print(stringBuilder0);
      assertEquals(true, node0.printed);
      assertEquals("Ni().attribute(\"Ni\", \"Ni\")", stringBuilder0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Node node0 = new Node("blockquote", (Attributes) attributes2Impl0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "blockquote");
      node0.print(stringBuilder0);
      assertEquals(true, node0.printed);
      assertEquals("blockquoteblockquote()", stringBuilder0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Node node0 = new Node("Ni", (Attributes) attributes2Impl0);
      StringBuilder stringBuilder0 = new StringBuilder();
      node0.skip = true;
      node0.print(stringBuilder0);
      assertEquals(true, node0.printed);
      assertEquals("", stringBuilder0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Node node0 = new Node("input", (Attributes) attributesImpl0);
      StringBuilder stringBuilder0 = new StringBuilder(4);
      // Undeclared exception!
      try {
        node0.print(stringBuilder0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Node node0 = new Node("script", (Attributes) attributes2Impl0);
      // Undeclared exception!
      try {
        node0.print((StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Node node0 = new Node("s!pBt", (Attributes) attributes2Impl0);
      node0.appendText("s!pBt");
      StringBuilder stringBuilder0 = new StringBuilder();
      node0.print(stringBuilder0);
      assertEquals(true, node0.printed);
      assertEquals("s!pBt(\"s!pBt\")", stringBuilder0.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Node node0 = new Node("form", (Attributes) attributes2Impl0);
      StringBuilder stringBuilder0 = new StringBuilder("button");
      node0.attributesProcessed = true;
      node0.print(stringBuilder0);
      assertEquals(true, node0.printed);
      assertEquals("buttonform(\"form7\")", stringBuilder0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Node node0 = new Node("button", (Attributes) attributesImpl0);
      StringBuilder stringBuilder0 = new StringBuilder("button");
      node0.appendText("button");
      node0.print(stringBuilder0);
      assertEquals(true, node0.printed);
      assertEquals("buttonbutton().text(\"button\").up()", stringBuilder0.toString());
  }
}
