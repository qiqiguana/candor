/*
 * This file was automatically generated by EvoSuite
 */

package wheel.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.UnsupportedEncodingException;
import java.util.HashMap;
import java.util.Map;
import org.junit.BeforeClass;
import wheel.ErrorPage;
import wheel.IEngine;
import wheel.components.Component;
import wheel.util.WheelURL;

@RunWith(EvoSuiteRunner.class)
public class WheelURLEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Map<String, Component> map0 = errorPage0.getComponents();
      WheelURL wheelURL0 = new WheelURL("2$!NcBY.NoW]K't,oI", (Map) map0, (IEngine) null);
      assertNotNull(wheelURL0);
      
      String string0 = wheelURL0.getUpdateTargetId();
      assertNotNull(string0);
      assertEquals("!NcBY", wheelURL0.getComponent());
      assertEquals("2", wheelURL0.getPage());
      assertEquals(false, wheelURL0.isAssetUrl());
  }

  @Test
  public void test1()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      WheelURL wheelURL0 = new WheelURL("asset/+va", (Map) hashMap0, (IEngine) null);
      assertNotNull(wheelURL0);
      
      boolean boolean0 = wheelURL0.isAjaxUrl();
      assertEquals(false, boolean0);
      assertEquals(true, wheelURL0.isAssetUrl());
  }

  @Test
  public void test2()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>(9);
      WheelURL wheelURL0 = new WheelURL("nW-sEhwCvn-.>X:CZ:h", (Map) hashMap0, (IEngine) null);
      assertNotNull(wheelURL0);
      
      String string0 = wheelURL0.getMethod();
      assertEquals(false, wheelURL0.isAssetUrl());
      assertEquals(">X:CZ:h()", string0);
      assertNotNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>(9);
      WheelURL wheelURL0 = new WheelURL("nW-sEhwCvn-.>X:CZ:h", (Map) hashMap0, (IEngine) null);
      assertNotNull(wheelURL0);
      
      String string0 = wheelURL0.getPage();
      assertNotNull(string0);
      assertEquals(false, wheelURL0.isAssetUrl());
      assertEquals("nW-sEhwCvn-", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>(9);
      WheelURL wheelURL0 = new WheelURL("nW-sEhwCvn-.>X:CZ:h", (Map) hashMap0, (IEngine) null);
      assertNotNull(wheelURL0);
      
      String string0 = wheelURL0.getComponent();
      assertNotNull(string0);
      assertEquals(false, wheelURL0.isAssetUrl());
      assertEquals("", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>(9);
      WheelURL wheelURL0 = new WheelURL("nW-sEhwCvn-.>X:CZ:h", (Map) hashMap0, (IEngine) null);
      assertNotNull(wheelURL0);
      
      Map<Object, Object> map0 = wheelURL0.getParameters();
      assertNotNull(map0);
      assertEquals(false, wheelURL0.isAssetUrl());
      assertEquals(">X:CZ:h()", wheelURL0.getMethod());
  }

  @Test
  public void test6()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>(9);
      WheelURL wheelURL0 = new WheelURL("nW-sEhwCvn-.>X:CZ:h", (Map) hashMap0, (IEngine) null);
      assertNotNull(wheelURL0);
      
      String string0 = wheelURL0.getMethodName();
      assertNotNull(string0);
      assertEquals(false, wheelURL0.isAssetUrl());
      assertEquals(">X:CZ:h", string0);
  }

  @Test
  public void test7()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Map<String, Component> map0 = errorPage0.getComponents();
      WheelURL wheelURL0 = new WheelURL("2$!NcBY.NoW]K't,oI", (Map) map0, (IEngine) null);
      assertNotNull(wheelURL0);
      
      boolean boolean0 = wheelURL0.isAssetUrl();
      assertEquals("2", wheelURL0.getPage());
      assertEquals("NoW]K't,oI()", wheelURL0.getMethod());
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Map<String, Component> map0 = errorPage0.getComponents();
      WheelURL wheelURL0 = new WheelURL("Y,$W+", (Map) map0, (IEngine) null);
      assertEquals(false, wheelURL0.isAssetUrl());
      assertEquals("Y,", wheelURL0.getPage());
      assertNotNull(wheelURL0);
      assertEquals(true, wheelURL0.isAjaxUrl());
  }
}
