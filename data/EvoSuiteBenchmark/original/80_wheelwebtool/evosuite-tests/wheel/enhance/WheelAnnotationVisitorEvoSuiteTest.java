/*
 * This file was automatically generated by EvoSuite
 */

package wheel.enhance;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import wheel.asm.AnnotationVisitor;
import wheel.enhance.WheelAnnotationVisitor;

@RunWith(EvoSuiteRunner.class)
public class WheelAnnotationVisitorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      WheelAnnotationVisitor wheelAnnotationVisitor0 = new WheelAnnotationVisitor((AnnotationVisitor) null);
      boolean boolean0 = wheelAnnotationVisitor0.isRebuild();
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      WheelAnnotationVisitor wheelAnnotationVisitor0 = new WheelAnnotationVisitor((AnnotationVisitor) null);
      // Undeclared exception!
      try {
        wheelAnnotationVisitor0.visitArray("|,C/`p5?<C,0#u");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      WheelAnnotationVisitor wheelAnnotationVisitor0 = new WheelAnnotationVisitor((AnnotationVisitor) null);
      wheelAnnotationVisitor0.getScope();
  }

  @Test
  public void test3()  throws Throwable  {
      WheelAnnotationVisitor wheelAnnotationVisitor0 = new WheelAnnotationVisitor((AnnotationVisitor) null);
      // Undeclared exception!
      try {
        wheelAnnotationVisitor0.visitAnnotation("2FvpTP!jMM~!:;U", "vjc.EeH&POwj9'3");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      WheelAnnotationVisitor wheelAnnotationVisitor0 = new WheelAnnotationVisitor((AnnotationVisitor) null);
      // Undeclared exception!
      try {
        wheelAnnotationVisitor0.visitEnd();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      WheelAnnotationVisitor wheelAnnotationVisitor0 = new WheelAnnotationVisitor((AnnotationVisitor) null);
      // Undeclared exception!
      try {
        wheelAnnotationVisitor0.visitEnum("", "", "");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No enum const class wheel.persistence.Scope.
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      WheelAnnotationVisitor wheelAnnotationVisitor0 = new WheelAnnotationVisitor((AnnotationVisitor) null);
      wheelAnnotationVisitor0.visit("^flj;", "false");
      assertEquals(false, wheelAnnotationVisitor0.isRebuild());
  }

  @Test
  public void test7()  throws Throwable  {
      WheelAnnotationVisitor wheelAnnotationVisitor0 = new WheelAnnotationVisitor((AnnotationVisitor) null);
      Boolean boolean0 = Boolean.valueOf("rebuild");
      wheelAnnotationVisitor0.visit("rebuild", (Object) boolean0);
      assertEquals(false, boolean0.booleanValue());
  }
}
