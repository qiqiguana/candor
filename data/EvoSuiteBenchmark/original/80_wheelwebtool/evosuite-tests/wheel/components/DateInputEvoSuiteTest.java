/*
 * This file was automatically generated by EvoSuite
 */

package wheel.components;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import org.junit.BeforeClass;
import org.xmlpull.mxp1_serializer.MXSerializer;
import org.xmlpull.v1.XmlSerializer;
import wheel.ErrorPage;
import wheel.components.Component;
import wheel.components.DateInput;
import wheel.components.Table;
import wheel.components.TableBlock;

@RunWith(EvoSuiteRunner.class)
public class DateInputEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DateInput dateInput0 = new DateInput((Component) null, "{>tKK%", "{>tKK%", (CharSequence) "{>tKK%");
      String string0 = dateInput0.toString();
      assertEquals("<input id=\"{>tKK%\"type=\"text\" />", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "");
      TableBlock tableBlock0 = (TableBlock)table0.colgroup();
      DateInput dateInput0 = new DateInput((Component) tableBlock0, "", "", (CharSequence) "");
      String[] stringArray0 = new String[15];
      dateInput0._setSubmitValue(stringArray0);
      assertEquals("<input id=\"DateInput_1\"type=\"text\" />", dateInput0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      DateInput dateInput0 = new DateInput((Component) null, "{>tKK%", "{>tKK%", (CharSequence) "{>tKK%");
      MXSerializer mXSerializer0 = new MXSerializer();
      // Undeclared exception!
      try {
        dateInput0.renderComponent((XmlSerializer) mXSerializer0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * startTag() must be called before attribute()
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "!Xn]`'4S(s<");
      TableBlock tableBlock0 = (TableBlock)table0.colgroup();
      DateInput dateInput0 = new DateInput((Component) tableBlock0, "!Xn]`'4S(s<", "!Xn]`'4S(s<", (CharSequence) "!Xn]`'4S(s<");
      String string0 = dateInput0._applyFormat((Object) "WildcardFileFilter(!Xn]`'4S(s<)");
      assertNotNull(string0);
      assertEquals("<input id=\"!Xn]`'4S(s<\"type=\"text\" />", dateInput0.toString());
  }
}
