/*
 * This file was automatically generated by EvoSuite
 */

package wheel.components;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import wheel.components.Validations;

@RunWith(EvoSuiteRunner.class)
public class ValidationsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Validations validations0 = Validations.getInstance();
      assertNotNull(validations0);
      
      boolean boolean0 = validations0.isInt((String) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      Validations validations0 = Validations.getInstance();
      assertNotNull(validations0);
      
      boolean boolean0 = validations0.isInt("N1@`R:\"");
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      Validations validations0 = Validations.getInstance();
      assertNotNull(validations0);
      
      boolean boolean0 = validations0.isInt("");
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      Validations validations0 = Validations.getInstance();
      assertNotNull(validations0);
      
      boolean boolean0 = validations0.required((String) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      Validations validations0 = Validations.getInstance();
      assertNotNull(validations0);
      
      boolean boolean0 = validations0.required(".+@.+.[a-z]+");
      assertEquals(true, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      Validations validations0 = Validations.getInstance();
      assertNotNull(validations0);
      
      boolean boolean0 = validations0.required("");
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      Validations validations0 = Validations.getInstance();
      assertNotNull(validations0);
      
      boolean boolean0 = validations0.isDouble((String) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      Validations validations0 = Validations.getInstance();
      assertNotNull(validations0);
      
      boolean boolean0 = validations0.isDouble(".+@.+.[a-z]+");
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      Validations validations0 = Validations.getInstance();
      assertNotNull(validations0);
      
      boolean boolean0 = validations0.isDouble("");
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      Validations validations0 = Validations.getInstance();
      assertNotNull(validations0);
      
      String string0 = null;
      boolean boolean0 = validations0.isEmail(string0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      Validations validations0 = Validations.getInstance();
      boolean boolean0 = validations0.isEmail(".+@.+.[a-z]+");
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      Validations validations0 = Validations.getInstance();
      assertNotNull(validations0);
      
      String string0 = "";
      boolean boolean0 = validations0.isEmail(string0);
      assertEquals(false, boolean0);
  }
}
