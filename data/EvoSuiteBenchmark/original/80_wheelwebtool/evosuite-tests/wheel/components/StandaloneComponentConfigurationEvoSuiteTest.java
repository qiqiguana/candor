/*
 * This file was automatically generated by EvoSuite
 */

package wheel.components;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Map;
import org.junit.BeforeClass;
import wheel.ErrorPage;
import wheel.components.RenderableComponent;
import wheel.components.StandaloneComponentConfiguration;
import wheel.util.InitialFieldValue;

@RunWith(EvoSuiteRunner.class)
public class StandaloneComponentConfigurationEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      String string0 = standaloneComponentConfiguration0.getContentType();
      assertEquals("text/html", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      standaloneComponentConfiguration0._setRenderDoctype(false);
      assertEquals(false, standaloneComponentConfiguration0._isRenderDoctype());
  }

  @Test
  public void test2()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      Map<String, Object> map0 = standaloneComponentConfiguration0.getValidationVariables();
      assertNull(map0);
  }

  @Test
  public void test3()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      boolean boolean0 = standaloneComponentConfiguration0.isAjaxComponent();
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      standaloneComponentConfiguration0.setAjaxComponent(true);
      assertEquals(true, standaloneComponentConfiguration0.isAjaxComponent());
  }

  @Test
  public void test5()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      boolean boolean0 = standaloneComponentConfiguration0._isRenderDoctype();
      assertEquals(true, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      standaloneComponentConfiguration0.setRenderGeneratedComponentIds(true);
      assertEquals(true, standaloneComponentConfiguration0._isRenderGeneratedComponentIds());
  }

  @Test
  public void test7()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      StandaloneComponentConfiguration standaloneComponentConfiguration1 = standaloneComponentConfiguration0.setReusable(false);
      assertNotNull(standaloneComponentConfiguration1);
      assertEquals(false, standaloneComponentConfiguration1.isReusable());
  }

  @Test
  public void test8()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      boolean boolean0 = standaloneComponentConfiguration0._isRenderGeneratedComponentIds();
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      boolean boolean0 = standaloneComponentConfiguration0.isReusable();
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      StandaloneComponentConfiguration standaloneComponentConfiguration1 = standaloneComponentConfiguration0.setContentType("6[%Jo=N+8C,");
      assertNotNull(standaloneComponentConfiguration1);
      assertEquals("6[%Jo=N+8C,", standaloneComponentConfiguration0.getContentType());
  }

  @Test
  public void test11()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      Map<String, String> map0 = RenderableComponent.HTML;
      standaloneComponentConfiguration0.useValidationVariable("]d1>#]2..qvMV", (Object) map0);
      StandaloneComponentConfiguration standaloneComponentConfiguration1 = standaloneComponentConfiguration0.useValidationVariable("]d1>#]2..qvMV", "http://xmlpull.org/v1/doc/features.html#process-docdecl");
      assertEquals(false, standaloneComponentConfiguration1._isRenderGeneratedComponentIds());
  }

  @Test
  public void test12()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      standaloneComponentConfiguration0.initialFieldValue("6[%Jo=N+8C,", "6[%Jo=N+8C,");
      StandaloneComponentConfiguration standaloneComponentConfiguration1 = standaloneComponentConfiguration0.initialFieldValue("6[%Jo=N+8C,", "6[%Jo=N+8C,");
      assertEquals(true, standaloneComponentConfiguration1.isVisible());
  }

  @Test
  public void test13()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      StandaloneComponentConfiguration standaloneComponentConfiguration1 = standaloneComponentConfiguration0.initialFieldValue("text/html", "AS_BASIC_PROPERTY_COLLECTION");
      StandaloneComponentConfiguration standaloneComponentConfiguration2 = standaloneComponentConfiguration0.initialFieldValue("AS_BASIC_PROPERTY_COLLECTION", "AS_BASIC_PROPERTY_COLLECTION", "text/html");
      assertSame(standaloneComponentConfiguration2, standaloneComponentConfiguration1);
  }

  @Test
  public void test14()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      StandaloneComponentConfiguration standaloneComponentConfiguration1 = standaloneComponentConfiguration0.initialFieldValue("x&}i|/", "x&}i|/", (Object) null);
      assertEquals(true, standaloneComponentConfiguration1.isRenderId());
  }

  @Test
  public void test15()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      standaloneComponentConfiguration0.initialFieldValue("text/html", "AS_BASIC_PROPERTY_COLLECTION");
      InitialFieldValue initialFieldValue0 = standaloneComponentConfiguration0.getInitialFieldValue("AS_BASIC_PROPERTY_COLLECTION");
      assertNull(initialFieldValue0);
  }

  @Test
  public void test16()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      InitialFieldValue initialFieldValue0 = standaloneComponentConfiguration0.getInitialFieldValue("");
      assertNull(initialFieldValue0);
  }

  @Test
  public void test17()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      standaloneComponentConfiguration0.useAsset("6[%Jo=N+8C,", "6[%Jo=N+8C,", 1493);
      StandaloneComponentConfiguration standaloneComponentConfiguration1 = standaloneComponentConfiguration0.useAsset("6[%Jo=N+8C,");
      assertEquals(true, standaloneComponentConfiguration1._isRenderDoctype());
  }

  @Test
  public void test18()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      StandaloneComponentConfiguration standaloneComponentConfiguration1 = standaloneComponentConfiguration0.useAsset("");
      assertEquals(false, standaloneComponentConfiguration1.isReusable());
  }

  @Test
  public void test19()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      StandaloneComponentConfiguration standaloneComponentConfiguration1 = standaloneComponentConfiguration0.useAsset("AS_BASIC_PROPERTY_COLLECTION", 19);
      StandaloneComponentConfiguration standaloneComponentConfiguration2 = standaloneComponentConfiguration1.useAsset("AS_BASIC_PROPERTY_COLLECTION", "AS_BASIC_PROPERTY_COLLECTION");
      assertEquals(true, standaloneComponentConfiguration2.isRenderId());
  }

  @Test
  public void test20()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      StandaloneComponentConfiguration standaloneComponentConfiguration1 = standaloneComponentConfiguration0.useAsset("wg.codehas.janino.ScriptEvaluaor", "wg.codehas.janino.ScriptEvaluaor");
      assertEquals(true, standaloneComponentConfiguration1.isUseXhtml());
  }

  @Test
  public void test21()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      StandaloneComponentConfiguration standaloneComponentConfiguration1 = standaloneComponentConfiguration0.useAsset("6[%Jo=N+8C,", "6[%Jo=N+8C,", 1493);
      StandaloneComponentConfiguration standaloneComponentConfiguration2 = standaloneComponentConfiguration1.useAsset("6[%Jo=N+8C,", 1493);
      assertEquals(false, standaloneComponentConfiguration2.isAjaxComponent());
  }

  @Test
  public void test22()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      standaloneComponentConfiguration0.useAsset("6[%Jo=N+8C,", "6[%Jo=N+8C,", 1493);
      StandaloneComponentConfiguration standaloneComponentConfiguration1 = standaloneComponentConfiguration0.useAsset("6[%Jo=N+8C,", "6[%Jo=N+8C,", 1493);
      assertEquals(false, standaloneComponentConfiguration1.isAjaxComponent());
  }

  @Test
  public void test23()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      standaloneComponentConfiguration0.exposeField("6[%Jo=N+8C,");
      StandaloneComponentConfiguration standaloneComponentConfiguration1 = standaloneComponentConfiguration0.exposeField("6[%Jo=N+8C,");
      assertEquals(false, standaloneComponentConfiguration1.isAjaxComponent());
  }

  @Test
  public void test24()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      StandaloneComponentConfiguration standaloneComponentConfiguration1 = standaloneComponentConfiguration0.exposeField("6[%Jo=N+8C,");
      assertNotNull(standaloneComponentConfiguration1);
      
      boolean boolean0 = standaloneComponentConfiguration1.isFieldExposed("6[%Jo=N+8C,");
      assertEquals(true, boolean0);
  }

  @Test
  public void test25()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      boolean boolean0 = standaloneComponentConfiguration0.isFieldExposed("AS_BASIC_PROPERTY_COLLECTION");
      assertEquals(false, boolean0);
  }
}
