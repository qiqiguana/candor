/*
 * This file was automatically generated by EvoSuite
 */

package wheel.components;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import org.junit.BeforeClass;
import org.xmlpull.v1.XmlSerializer;
import wheel.components.Component;
import wheel.components.Hidden;

@RunWith(EvoSuiteRunner.class)
public class HiddenEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Hidden hidden0 = new Hidden((Component) null, ",;oNE*", ",;oNE*");
      String string0 = hidden0.getTagName();
      assertEquals("<input id=\",;oNE*\"type=\"hidden\" />", hidden0.toString());
      assertEquals("input", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      Hidden hidden0 = new Hidden((Component) null, ",;oNE*", ",;oNE*");
      Hidden hidden1 = (Hidden)hidden0.value(",;oNE*");
      assertEquals("<input id=\",;oNE*\"type=\"hidden\" />", hidden0.toString());
      assertEquals("<input id=\",;oNE*\"type=\"hidden\" />", hidden1.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      Hidden hidden0 = new Hidden((Component) null, ",;oNE*", ",;oNE*");
      // Undeclared exception!
      try {
        hidden0.renderComponent((XmlSerializer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Hidden hidden0 = new Hidden((Component) null, "&'Q[LRki-Jf 17k^", "&'Q[LRki-Jf 17k^");
      String string0 = hidden0.defaultDomEvent();
      assertEquals("<input id=\"&'Q[LRki-Jf 17k^\"type=\"hidden\" />", hidden0.toString());
      assertEquals("onsubmit", string0);
  }
}
