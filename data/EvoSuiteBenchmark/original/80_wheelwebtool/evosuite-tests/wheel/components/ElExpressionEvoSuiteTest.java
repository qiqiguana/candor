/*
 * This file was automatically generated by EvoSuite
 */

package wheel.components;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import wheel.ErrorPage;
import wheel.WheelException;
import wheel.components.Any;
import wheel.components.Component;
import wheel.components.DateInput;
import wheel.components.ElExpression;
import wheel.components.FileInput;
import wheel.components.Radio;

@RunWith(EvoSuiteRunner.class)
public class ElExpressionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ElExpression elExpression0 = errorPage0.el(".**w");
      String string0 = elExpression0.getExpression();
      assertEquals(".**w", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Radio radio0 = new Radio(errorPage0, "J}w{5&", "J}w{5&");
      FileInput fileInput0 = new FileInput(radio0, "J}w{5&", "J}w{5&");
      ElExpression elExpression0 = fileInput0.el("J}w{5&");
      ElExpression elExpression1 = elExpression0.errorMessage("J}w{5&");
      assertSame(elExpression1, elExpression0);
  }

  @Test
  public void test2()  throws Throwable  {
      ElExpression elExpression0 = new ElExpression("'Kkg9]ek%`T?");
      DateInput dateInput0 = new DateInput((Component) null, "'Kkg9]ek%`T?", "'Kkg9]ek%`T?", elExpression0);
      // Undeclared exception!
      try {
        elExpression0.store((Object) elExpression0, (Component) dateInput0, (Object) elExpression0);
        fail("Expecting exception: WheelException");
      } catch(WheelException e) {
        /*
         * Could not bind property 'Kkg9]ek%`T? in class wheel.components.ElExpression
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ElExpression elExpression0 = errorPage0.el(".**w");
      Any any0 = new Any((Component) errorPage0, (CharSequence) ".**w");
      // Undeclared exception!
      try {
        elExpression0.eval((Object) ".**w", (Component) any0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Radio radio0 = new Radio(errorPage0, "J}w{5&", "J}w{5&");
      FileInput fileInput0 = new FileInput(radio0, "J}w{5&", "J}w{5&");
      ElExpression elExpression0 = fileInput0.el("J}w{5&");
      // Undeclared exception!
      try {
        elExpression0.eval((Object) "J}w{5&", (Component) radio0);
        fail("Expecting exception: WheelException");
      } catch(WheelException e) {
      }
  }
}
