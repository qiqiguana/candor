/*
 * This file was automatically generated by EvoSuite
 */

package wheel.components;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import wheel.ErrorPage;
import wheel.WheelException;
import wheel.components.ActionExpression;
import wheel.components.Any;
import wheel.components.Block;
import wheel.components.Checkbox;
import wheel.components.CheckboxGroup;
import wheel.components.Component;
import wheel.components.DateInput;
import wheel.components.ElExpression;
import wheel.components.FileInput;
import wheel.components.Form;
import wheel.components.Image;
import wheel.components.Label;
import wheel.components.Link;
import wheel.components.Table;
import wheel.components.TableBlock;
import wheel.components.TableRow;
import wheel.components.TextArea;
import wheel.components.TextInput;
import wheel.components.XmlEntityRef;
import wheel.util.StringSelectModel;

@RunWith(EvoSuiteRunner.class)
public class ComponentEvoSuiteTest {


  //Test case number: 0
  /*
   * 32 covered goals:
   * 1 wheel.components.Component.dfn()Lwheel/components/Component;: root-Branch
   * 2 wheel.components.Component.<init>(Lwheel/components/Component;)V: root-Branch
   * 3 wheel.components.Component.getComponentId()Ljava/lang/String;: root-Branch
   * 4 wheel.components.Component.add(Lwheel/components/Component;)Lwheel/components/Component;: root-Branch
   * 5 wheel.components.Component._isGeneratedId()Z: root-Branch
   * 6 wheel.components.Component.afterAdd()V: root-Branch
   * 7 wheel.components.Component._setGeneratedId(Z)V: root-Branch
   * 8 wheel.components.Component.getParent()Lwheel/components/Component;: root-Branch
   * 9 wheel.components.Component.<init>(Ljava/lang/String;)V: I7 Branch 1 IFNULL L61 - false
   * 10 wheel.components.Component.<init>(Ljava/lang/String;)V: I10 Branch 2 IFNE L61 - false
   * 11 wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I4 Branch 11 IFNONNULL L139 - false
   * 12 wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I16 Branch 12 IFNULL L142 - true
   * 13 wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I30 Branch 14 IFEQ L145 - false
   * 14 wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I36 Branch 15 IF_ICMPEQ L145 - true
   * 15 wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I92 Branch 18 IFGT L157 - false
   * 16 wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I4 Branch 56 IFEQ L1731 - false
   * 17 wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I6 Branch 57 IFEQ L1731 - false
   * 18 wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I8 Branch 60 IFNONNULL L1753 - false
   * 19 wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I13 Branch 61 IFNE L1754 - true
   * 20 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I4 Branch 65 IFNE L1798 - true
   * 21 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I22 Branch 66 IFEQ L1803 - true
   * 22 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I80 Branch 68 IFNONNULL L1819 - false
   * 23 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I92 Branch 69 IFEQ L1822 - false
   * 24 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I96 Branch 70 IFNE L1822 - false
   * 25 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I99 Branch 71 IFEQ L1822 - false
   * 26 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I110 Branch 72 IFEQ L1825 - true
   * 27 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I143 Branch 74 IFEQ L1837 - true
   * 28 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I162 Branch 75 IFEQ L1842 - true
   * 29 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I229 Branch 79 IFEQ L1859 - true
   * 30 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I261 Branch 82 IFNONNULL L1868 - false
   * 31 wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I3 Branch 119 IFNONNULL L2100 - true
   * 32 wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I12 Branch 120 IFEQ L2103 - true
   */
  @Test
  public void test0()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      Block block0 = (Block)errorPage0.dfn();
      assertEquals("<div id=\"wheel_ErrorPage\"/>", errorPage0.toString());
      assertEquals(true, block0._isGeneratedId());
      assertNotNull(block0);
      assertEquals("dfn", block0.getTagName());
  }

  //Test case number: 1
  /*
   * 14 covered goals:
   * 1 wheel.components.Component.table()Lwheel/components/Component;: root-Branch
   * 2 wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I12 Branch 3 IFNULL L84 - true
   * 3 wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I12 Branch 3 IFNULL L84 - false
   * 4 wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I15 Branch 4 IFLE L84 - false
   * 5 wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I34 Branch 5 IFNE L89 - true
   * 6 wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I34 Branch 5 IFNE L89 - false
   * 7 wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I37 Branch 6 IFNE L89 - false
   * 8 wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I4 Branch 56 IFEQ L1731 - true
   * 9 wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I20 Branch 58 IFNULL L1736 - false
   * 10 wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I25 Branch 59 IFEQ L1737 - false
   * 11 wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I8 Branch 60 IFNONNULL L1753 - true
   * 12 wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I28 Branch 62 IFNULL L1760 - true
   * 13 wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I16 Branch 116 IFEQ L2079 - true
   * 14 wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I37 Branch 117 IFEQ L2084 - true
   */
  @Test
  public void test1()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      TableBlock tableBlock0 = new TableBlock(errorPage0, "b~go6EA`FY8bNdd");
      assertNotNull(tableBlock0);
      
      Table table0 = (Table)tableBlock0.table();
      assertEquals(true, table0._isGeneratedId());
      assertNotNull(table0);
      assertEquals("<div id=\"b~go6EA`FY8bNdd\"/>", tableBlock0.toString());
      assertEquals("<div id=\"wheel_ErrorPage\"/>", errorPage0.toString());
      assertEquals("Table_1", table0.getComponentId());
  }

  //Test case number: 2
  /*
   * 8 covered goals:
   * 1 wheel.components.Component._getRenderHints()Ljava/util/List;: I4 Branch 37 IFNONNULL L310 - true
   * 2 wheel.components.Component.noframes()Lwheel/components/Component;: root-Branch
   * 3 wheel.components.Component._getXhtmlAttributes()Ljava/util/Map;: root-Branch
   * 4 wheel.components.Component.p(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * 5 wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I25 Branch 59 IFEQ L1737 - true
   * 6 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I261 Branch 82 IFNONNULL L1868 - true
   * 7 wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I28 Branch 62 IFNULL L1760 - false
   * 8 wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I15 Branch 4 IFLE L84 - true
   */
  @Test
  public void test2()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      Table table0 = new Table(errorPage0, "");
      assertNotNull(table0);
      
      Block block0 = (Block)table0.noframes();
      assertNotNull(block0);
      
      Label label0 = (Label)errorPage0.p((Object) block0);
      assertEquals("<p id=\"Label_1\"/>", label0.toString());
      assertEquals("<div id=\"wheel_ErrorPage\"/>", errorPage0.toString());
      assertEquals(true, table0._isGeneratedId());
      assertEquals("body", block0.getTagName());
      assertEquals("Table_1", table0.getComponentId());
      assertNotNull(label0);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 wheel.components.Component.img(Ljava/lang/String;Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   * 2 wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I3 Branch 119 IFNONNULL L2100 - false
   */
  @Test
  public void test3()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      Image image0 = (Image)errorPage0.img((String) null, (String) null);
      assertNotNull(image0);
      assertEquals("<div id=\"wheel_ErrorPage\"/>", errorPage0.toString());
      assertEquals(true, image0._isGeneratedId());
  }

  //Test case number: 4
  /*
   * 26 covered goals:
   * 1 wheel.components.Component.form(Ljava/lang/String;Lwheel/components/ActionExpression;)Lwheel/components/Component;: root-Branch
   * 2 wheel.components.Component.actionBinding(Lwheel/components/ActionExpression;)Lwheel/components/Component;: root-Branch
   * 3 wheel.components.Component.action(Ljava/lang/String;)Lwheel/components/ActionExpression;: root-Branch
   * 4 wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I37 Branch 6 IFNE L89 - true
   * 5 wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;Ljava/lang/CharSequence;)V: I12 Branch 7 IFNULL L102 - true
   * 6 wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;Ljava/lang/CharSequence;)V: I34 Branch 9 IFNE L107 - true
   * 7 wheel.components.Component.attribute(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/Component;: I4 Branch 19 IFNONNULL L175 - true
   * 8 wheel.components.Component.attribute(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/Component;: I4 Branch 19 IFNONNULL L175 - false
   * 9 wheel.components.Component.addAction(Lwheel/components/ActionExpression;)V: I4 Branch 26 IFNONNULL L239 - false
   * 10 wheel.components.Component.addAction(Lwheel/components/ActionExpression;)V: I20 Branch 27 IFNULL L244 - true
   * 11 wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I4 Branch 30 IFNULL L264 - false
   * 12 wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I8 Branch 31 IFGT L264 - true
   * 13 wheel.components.Component.create()Lwheel/components/ComponentCreator;: I4 Branch 36 IFNONNULL L299 - false
   * 14 wheel.components.Component._getForm(Z)Lwheel/components/Form;: I3 Branch 46 IFEQ L1684 - true
   * 15 wheel.components.Component._getForm(Z)Lwheel/components/Form;: I3 Branch 46 IFEQ L1684 - false
   * 16 wheel.components.Component._getForm(Z)Lwheel/components/Form;: I6 Branch 47 IFEQ L1684 - false
   * 17 wheel.components.Component._getForm(Z)Lwheel/components/Form;: I20 Branch 48 IFNULL L1689 - true
   * 18 wheel.components.Component._getForm(Z)Lwheel/components/Form;: I20 Branch 48 IFNULL L1689 - false
   * 19 wheel.components.Component._getForm(Z)Lwheel/components/Form;: I25 Branch 49 IFEQ L1690 - true
   * 20 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I99 Branch 71 IFEQ L1822 - true
   * 21 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I110 Branch 72 IFEQ L1825 - false
   * 22 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I120 Branch 73 IFNE L1828 - false
   * 23 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I162 Branch 75 IFEQ L1842 - false
   * 24 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I172 Branch 76 IFNONNULL L1845 - true
   * 25 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I185 Branch 77 IFEQ L1848 - true
   * 26 wheel.components.Component.hashCode()I: I4 Branch 97 IFNULL L1932 - false
   */
  @Test
  public void test4()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      Table table0 = new Table(errorPage0, "object");
      assertNotNull(table0);
      
      TableBlock tableBlock0 = (TableBlock)table0.tfoot();
      assertNotNull(tableBlock0);
      
      Any any0 = tableBlock0.col();
      assertNotNull(any0);
      
      ActionExpression actionExpression0 = any0.action("object");
      Form form0 = (Form)errorPage0.form("object", actionExpression0);
      assertEquals("<div id=\"wheel_ErrorPage\"/>", errorPage0.toString());
      assertEquals(true, tableBlock0._isGeneratedId());
      assertEquals("<form id=\"object\"method=\"POST\" />", form0.toString());
      assertEquals("Any_1", any0.getComponentId());
      assertNotNull(form0);
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 wheel.components.Component.pre()Lwheel/components/Component;: root-Branch
   * 2 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I4 Branch 65 IFNE L1798 - false
   */
  @Test
  public void test5()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      Checkbox checkbox0 = new Checkbox(errorPage0, "object", "object");
      assertNotNull(checkbox0);
      
      // Undeclared exception!
      try {
        checkbox0.pre();
        fail("Expecting exception: WheelException");
      } catch(WheelException e) {
        /*
         * Can't add components to a component that is not an instance of IContainer.
         */
      }
  }

  //Test case number: 6
  /*
   * 4 covered goals:
   * 1 wheel.components.Component.meta()Lwheel/components/Component;: root-Branch
   * 2 wheel.components.Component.head()Lwheel/components/Component;: root-Branch
   * 3 wheel.components.Component._setComponentId(Ljava/lang/String;)V: root-Branch
   * 4 wheel.components.Component.create()Lwheel/components/ComponentCreator;: I4 Branch 36 IFNONNULL L299 - true
   */
  @Test
  public void test6()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      // Undeclared exception!
      try {
        errorPage0.title("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 7
  /*
   * 8 covered goals:
   * 1 wheel.components.Component.area([Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   * 2 wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I3 Branch 20 IFNULL L189 - false
   * 3 wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I6 Branch 21 IFNE L189 - true
   * 4 wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I17 Branch 22 IFLE L192 - true
   * 5 wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I30 Branch 23 IF_ICMPLE L195 - false
   * 6 wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I33 Branch 24 IFNONNULL L195 - false
   * 7 wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I49 Branch 25 IF_ICMPGE L198 - true
   * 8 wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I49 Branch 25 IF_ICMPGE L198 - false
   */
  @Test
  public void test7()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      String[] stringArray0 = new String[4];
      Any any0 = (Any)errorPage0.area(stringArray0);
      assertEquals(true, any0._isGeneratedId());
      assertNotNull(any0);
      assertEquals("<div id=\"wheel_ErrorPage\"/>", errorPage0.toString());
      assertEquals("<area id=\"Any_1\"null=\"null\" />", any0.toString());
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 wheel.components.Component.i()Lwheel/components/Component;: root-Branch
   */
  @Test
  public void test8()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      Block block0 = (Block)errorPage0.i();
      assertEquals("i", block0.getTagName());
      assertEquals("<div id=\"wheel_ErrorPage\"/>", errorPage0.toString());
      assertEquals(true, block0._isGeneratedId());
      assertNotNull(block0);
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * 1 wheel.components.Component.acronym()Lwheel/components/Component;: root-Branch
   * 2 wheel.components.Component.<init>(Ljava/lang/String;)V: I10 Branch 2 IFNE L61 - true
   */
  @Test
  public void test9()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("b(EYy2_Y{");
      TextInput textInput0 = new TextInput(xmlEntityRef0, "b(EYy2_Y{", "b(EYy2_Y{");
      assertNotNull(textInput0);
      
      // Undeclared exception!
      try {
        textInput0.acronym();
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
      }
  }

  //Test case number: 10
  /*
   * 9 covered goals:
   * 1 wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I48 Branch 42 IFEQ L1649 - false
   * 2 wheel.components.Component.dd()Lwheel/components/Component;: root-Branch
   * 3 wheel.components.Component.getComponents()Ljava/util/Map;: I9 Branch 63 IFNE L1774 - true
   * 4 wheel.components.Component.getComponents()Ljava/util/Map;: I20 Branch 64 IFNONNULL L1777 - true
   * 5 wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I18 Branch 40 IFNE L1642 - false
   * 6 wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I21 Branch 41 IFEQ L1642 - true
   * 7 wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I58 Branch 43 IFEQ L1652 - false
   * 8 wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I69 Branch 44 IFNE L1654 - false
   * 9 wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I72 Branch 45 IFNE L1654 - true
   */
  @Test
  public void test10()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      Block block0 = (Block)errorPage0.dd();
      assertNotNull(block0);
      
      Table table0 = new Table(errorPage0, "");
      table0.id((String) null);
      assertEquals(false, table0._isGeneratedId());
      assertEquals("<table id=\"null\"/>", table0.toString());
      assertEquals("<div id=\"wheel_ErrorPage\"/>", errorPage0.toString());
  }

  //Test case number: 11
  /*
   * 5 covered goals:
   * 1 wheel.components.Component.actionBinding(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   * 2 wheel.components.Component.addAction(Lwheel/components/ActionExpression;)V: I4 Branch 26 IFNONNULL L239 - false
   * 3 wheel.components.Component.addAction(Lwheel/components/ActionExpression;)V: I20 Branch 27 IFNULL L244 - true
   * 4 wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I4 Branch 30 IFNULL L264 - false
   * 5 wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I8 Branch 31 IFGT L264 - true
   */
  @Test
  public void test11()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      Table table0 = new Table(errorPage0, "");
      assertNotNull(table0);
      
      TableRow tableRow0 = (TableRow)table0.tr();
      assertNotNull(tableRow0);
      
      TableRow tableRow1 = (TableRow)tableRow0.actionBinding("");
      assertEquals("<tr id=\"TableRow_1\"/>", tableRow0.toString());
      assertEquals(true, table0._isGeneratedId());
      assertNotNull(tableRow1);
      assertEquals("<div id=\"wheel_ErrorPage\"/>", errorPage0.toString());
      assertEquals("Table_1", table0.getComponentId());
  }

  //Test case number: 12
  /*
   * 3 covered goals:
   * 1 wheel.components.Component._getXhtmlAttributes()Ljava/util/Map;: root-Branch
   * 2 wheel.components.Component.h1(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * 3 wheel.components.Component._getRenderHints()Ljava/util/List;: I4 Branch 37 IFNONNULL L310 - false
   */
  @Test
  public void test12()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      Image image0 = new Image(errorPage0, "b~go6EA`FY8bNdd", "b~go6EA`FY8bNdd");
      assertNotNull(image0);
      
      Label label0 = (Label)errorPage0.h1((Object) image0);
      assertEquals("<h1 id=\"Label_1\"/>", label0.toString());
      assertEquals("<div id=\"wheel_ErrorPage\"/>", errorPage0.toString());
      assertEquals(true, image0._isGeneratedId());
      assertNotNull(label0);
  }

  //Test case number: 13
  /*
   * 2 covered goals:
   * 1 wheel.components.Component.placeholder(Ljava/lang/String;)Lwheel/components/Block;: root-Branch
   * 2 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I99 Branch 71 IFEQ L1822 - true
   */
  @Test
  public void test13()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      Block block0 = errorPage0.placeholder("f.V:9Had");
      assertEquals("<div id=\"wheel_ErrorPage\"/>", errorPage0.toString());
      assertNotNull(block0);
      assertEquals("<div id=\"f.V:9Had\"/>", block0.toString());
  }

  //Test case number: 14
  /*
   * 2 covered goals:
   * 1 wheel.components.Component.hr()Lwheel/components/Component;: root-Branch
   * 2 wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I13 Branch 61 IFNE L1754 - false
   */
  @Test
  public void test14()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef(" 4%Wf.zHe$W&78");
      // Undeclared exception!
      try {
        xmlEntityRef0.hr();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 15
  /*
   * 2 covered goals:
   * 1 wheel.components.Component.button()Lwheel/components/Component;: root-Branch
   * 2 wheel.components.Component.<init>(Ljava/lang/String;)V: I10 Branch 2 IFNE L61 - true
   */
  @Test
  public void test15()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("f.V:9Had");
      // Undeclared exception!
      try {
        xmlEntityRef0.button();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 wheel.components.Component.el(Ljava/lang/String;)Lwheel/components/ElExpression;: root-Branch
   */
  @Test
  public void test16()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      assertNotNull(checkbox0);
      
      DateInput dateInput0 = new DateInput(checkbox0, "", "YMWPTd%ZBr}6", "");
      dateInput0.el("");
      assertEquals("<div id=\"wheel_ErrorPage\"/>", errorPage0.toString());
      assertEquals("<input id=\"YMWPTd%ZBr}6\"type=\"text\" />", dateInput0.toString());
      assertEquals(true, checkbox0._isGeneratedId());
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 wheel.components.Component.h2()Lwheel/components/Component;: root-Branch
   */
  @Test
  public void test17()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      assertNotNull(xmlEntityRef0);
      
      // Undeclared exception!
      try {
        xmlEntityRef0.h2();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 18
  /*
   * 4 covered goals:
   * 1 wheel.components.Component.numberInput(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/FormElement;: root-Branch
   * 2 wheel.components.Component._getForm(Z)Lwheel/components/Form;: I6 Branch 47 IFEQ L1684 - true
   * 3 wheel.components.Component._getForm(Z)Lwheel/components/Form;: I20 Branch 48 IFNULL L1689 - false
   * 4 wheel.components.Component._getForm(Z)Lwheel/components/Form;: I25 Branch 49 IFEQ L1690 - true
   */
  @Test
  public void test18()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      Table table0 = new Table(errorPage0, "");
      assertNotNull(table0);
      
      TableBlock tableBlock0 = (TableBlock)table0.colgroup();
      assertNotNull(tableBlock0);
      
      TableRow tableRow0 = (TableRow)tableBlock0.tr();
      assertNotNull(tableRow0);
      
      // Undeclared exception!
      try {
        tableRow0.numberInput("", "");
        fail("Expecting exception: WheelException");
      } catch(WheelException e) {
        /*
         * Form elements can be created only by compoents that are attached to a form component.
         */
      }
  }

  //Test case number: 19
  /*
   * 5 covered goals:
   * 1 wheel.components.Component.wBlock(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   * 2 wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I36 Branch 15 IF_ICMPEQ L145 - false
   * 3 wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I52 Branch 16 IF_ICMPGE L147 - true
   * 4 wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I52 Branch 16 IF_ICMPGE L147 - false
   * 5 wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I65 Branch 17 IFGT L150 - false
   */
  @Test
  public void test19()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      Block block0 = (Block)errorPage0.wBlock((CharSequence) "Caught Exception while in Loader.getResource. This may be innocuous.");
      assertEquals(true, block0._isGeneratedId());
      assertNotNull(block0);
      assertEquals("<div id=\"Block_1\"class=\"Caught Exception while in Loader.getResource. This may be innocuous.\"/>", block0.toString());
      assertEquals("<div id=\"wheel_ErrorPage\"/>", errorPage0.toString());
  }

  //Test case number: 20
  /*
   * 9 covered goals:
   * 1 wheel.components.Component._getChildren()Ljava/util/List;: I4 Branch 32 IFNONNULL L275 - true
   * 2 wheel.components.Component._getChildren()Ljava/util/List;: I4 Branch 32 IFNONNULL L275 - false
   * 3 wheel.components.Component.find(Ljava/lang/String;)Lwheel/components/Component;: I22 Branch 104 IFEQ L1999 - true
   * 4 wheel.components.Component.find(Ljava/lang/String;)Lwheel/components/Component;: I22 Branch 104 IFEQ L1999 - false
   * 5 wheel.components.Component.find(Ljava/lang/String;)Lwheel/components/Component;: I35 Branch 105 IFLE L2002 - true
   * 6 wheel.components.Component.find(Ljava/lang/String;)Lwheel/components/Component;: I45 Branch 106 IFLE L2005 - true
   * 7 wheel.components.Component.find(Ljava/lang/String;)Lwheel/components/Component;: I62 Branch 107 IFNE L2010 - false
   * 8 wheel.components.Component.find(Ljava/lang/String;)Lwheel/components/Component;: I65 Branch 108 IFNE L2010 - true
   * 9 wheel.components.Component.span()Lwheel/components/Component;: root-Branch
   */
  @Test
  public void test20()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      Block block0 = (Block)errorPage0.span();
      assertEquals("<span id=\"Block_1\"/>", block0.toString());
      assertEquals(true, block0._isGeneratedId());
      assertNotNull(block0);
      
      // Undeclared exception!
      try {
        errorPage0.find("#b");
        fail("Expecting exception: WheelException");
      } catch(WheelException e) {
        /*
         * Could not find component with id #b on the page.
         */
      }
  }

  //Test case number: 21
  /*
   * 6 covered goals:
   * 1 wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I48 Branch 42 IFEQ L1649 - true
   * 2 wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I58 Branch 43 IFEQ L1652 - false
   * 3 wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I69 Branch 44 IFNE L1654 - false
   * 4 wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I72 Branch 45 IFNE L1654 - true
   * 5 wheel.components.Component.getComponents()Ljava/util/Map;: I20 Branch 64 IFNONNULL L1777 - true
   * 6 wheel.components.Component.a()Lwheel/components/Component;: root-Branch
   */
  @Test
  public void test21()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      Link link0 = (Link)errorPage0.a();
      assertNotNull(link0);
      
      TableBlock tableBlock0 = new TableBlock(link0, "b~go6EA`FY8bNdd");
      assertNotNull(tableBlock0);
      
      TableBlock tableBlock1 = (TableBlock)tableBlock0.id("b~go6EA`FY8bNdd");
      assertEquals("<div id=\"wheel_ErrorPage\"/>", errorPage0.toString());
      assertEquals("<div id=\"b~go6EA`FY8bNdd\"/>", tableBlock0.toString());
      assertEquals(true, link0._isGeneratedId());
      assertNotNull(tableBlock1);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 22
  /*
   * 2 covered goals:
   * 1 wheel.components.Component.bdo(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   * 2 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I4 Branch 65 IFNE L1798 - false
   */
  @Test
  public void test22()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      FileInput fileInput0 = new FileInput(errorPage0, (String) null, "");
      assertNotNull(fileInput0);
      
      // Undeclared exception!
      try {
        fileInput0.bdo((CharSequence) "");
        fail("Expecting exception: WheelException");
      } catch(WheelException e) {
        /*
         * Can't add components to a component that is not an instance of IContainer.
         */
      }
  }

  //Test case number: 23
  /*
   * 3 covered goals:
   * 1 wheel.components.Component.p(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * 2 wheel.components.Component._getXhtmlAttributes()Ljava/util/Map;: root-Branch
   * 3 wheel.components.Component._getRenderHints()Ljava/util/List;: I4 Branch 37 IFNONNULL L310 - false
   */
  @Test
  public void test23()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      Table table0 = new Table(errorPage0, "");
      assertNotNull(table0);
      
      Label label0 = (Label)errorPage0.p((Object) table0);
      assertEquals("<p id=\"Label_1\"/>", label0.toString());
      assertEquals("Table_1", table0.getComponentId());
      assertEquals(true, table0._isGeneratedId());
      assertEquals("<div id=\"wheel_ErrorPage\"/>", errorPage0.toString());
      assertNotNull(label0);
  }

  //Test case number: 24
  /*
   * 2 covered goals:
   * 1 wheel.components.Component.samp()Lwheel/components/Component;: root-Branch
   * 2 wheel.components.Component.attribute(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/Component;: I4 Branch 19 IFNONNULL L175 - false
   */
  @Test
  public void test24()  throws Throwable  {
      DateInput dateInput0 = new DateInput((Component) null, "X4Vo,l<+", "X4Vo,l<+", "X4Vo,l<+");
      assertNotNull(dateInput0);
      
      // Undeclared exception!
      try {
        dateInput0.samp();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 25
  /*
   * 2 covered goals:
   * 1 wheel.components.Component.tt()Lwheel/components/Component;: root-Branch
   * 2 wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I13 Branch 61 IFNE L1754 - false
   */
  @Test
  public void test25()  throws Throwable  {
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      CheckboxGroup checkboxGroup0 = new CheckboxGroup((Component) null, "e`L`!K>", "e`L`!K>", stringSelectModel0, (ElExpression) null);
      // Undeclared exception!
      try {
        checkboxGroup0.tt();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 26
  /*
   * 5 covered goals:
   * 1 wheel.components.Component.buttonInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   * 2 wheel.components.Component.<init>(Ljava/lang/String;)V: I7 Branch 1 IFNULL L61 - true
   * 3 wheel.components.Component._getForm(Z)Lwheel/components/Form;: I3 Branch 46 IFEQ L1684 - false
   * 4 wheel.components.Component._getForm(Z)Lwheel/components/Form;: I6 Branch 47 IFEQ L1684 - true
   * 5 wheel.components.Component._getForm(Z)Lwheel/components/Form;: I20 Branch 48 IFNULL L1689 - true
   */
  @Test
  public void test26()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      assertNotNull(xmlEntityRef0);
      
      // Undeclared exception!
      try {
        xmlEntityRef0.buttonInput((String) null);
        fail("Expecting exception: WheelException");
      } catch(WheelException e) {
        /*
         * Form elements can be created only by compoents that are attached to a form component.
         */
      }
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 wheel.components.Component.selectModel()Lwheel/util/DynamicSelectModel;: root-Branch
   */
  @Test
  public void test27()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      Table table0 = new Table(errorPage0, "");
      assertNotNull(table0);
      
      table0.selectModel();
      assertEquals("<div id=\"wheel_ErrorPage\"/>", errorPage0.toString());
      assertEquals(true, table0._isGeneratedId());
      assertEquals("Table_1", table0.getComponentId());
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I30 Branch 14 IFEQ L145 - true
   * 2 wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I3 Branch 119 IFNONNULL L2100 - false
   */
  @Test
  public void test28()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      Table table0 = new Table(errorPage0, "");
      assertNotNull(table0);
      
      table0.renderHint((CharSequence) null);
      assertEquals("<table id=\"Table_1\"class=\"null\"/>", table0.toString());
  }

  //Test case number: 29
  /*
   * 5 covered goals:
   * 1 wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I18 Branch 40 IFNE L1642 - false
   * 2 wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I21 Branch 41 IFEQ L1642 - true
   * 3 wheel.components.Component.getComponents()Ljava/util/Map;: I9 Branch 63 IFNE L1774 - true
   * 4 wheel.components.Component.getComponents()Ljava/util/Map;: I20 Branch 64 IFNONNULL L1777 - false
   * 5 wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I15 Branch 4 IFLE L84 - true
   */
  @Test
  public void test29()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      Table table0 = new Table(errorPage0, "");
      assertNotNull(table0);
      
      // Undeclared exception!
      try {
        table0.id((String) null);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I3 Branch 50 IFEQ L1701 - true
   * 2 wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I29 Branch 53 IFNULL L1710 - true
   */
  @Test
  public void test30()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      errorPage0._getVisibleForm(false);
      assertEquals("<div id=\"wheel_ErrorPage\"/>", errorPage0.toString());
  }

  //Test case number: 31
  /*
   * 7 covered goals:
   * 1 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I80 Branch 68 IFNONNULL L1819 - true
   * 2 wheel.components.Component.style()Lwheel/components/Component;: root-Branch
   * 3 wheel.components.Component.span()Lwheel/components/Component;: root-Branch
   * 4 wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I4 Branch 56 IFEQ L1731 - false
   * 5 wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I6 Branch 57 IFEQ L1731 - false
   * 6 wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I12 Branch 3 IFNULL L84 - true
   * 7 wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I34 Branch 5 IFNE L89 - true
   */
  @Test
  public void test31()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      Block block0 = (Block)errorPage0.span();
      assertEquals("<span id=\"Block_1\"/>", block0.toString());
      assertNotNull(block0);
      
      Block block1 = (Block)errorPage0.style();
      assertEquals("style", block1.getTagName());
      assertEquals(true, block1._isGeneratedId());
      assertEquals("<div id=\"wheel_ErrorPage\"/>", errorPage0.toString());
      assertNotNull(block1);
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * 1 wheel.components.Component.addInternalRenderHint(Ljava/lang/String;)Lwheel/components/Component;: I4 Branch 83 IFNONNULL L1880 - false
   */
  @Test
  public void test32()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      Table table0 = new Table(errorPage0, "object");
      assertNotNull(table0);
      
      TextArea textArea0 = new TextArea((Component) table0, "object", "object");
      textArea0.addInternalRenderHint("object");
      assertEquals("<textarea id=\"object\"class=\"object\"/>", textArea0.toString());
      assertEquals("<div id=\"wheel_ErrorPage\"/>", errorPage0.toString());
  }

  //Test case number: 33
  /*
   * 34 covered goals:
   * 1 wheel.components.Component.equals(Ljava/lang/Object;)Z: I4 Branch 91 IF_ACMPNE L1920 - true
   * 2 wheel.components.Component.equals(Ljava/lang/Object;)Z: I10 Branch 92 IFNULL L1921 - false
   * 3 wheel.components.Component.equals(Ljava/lang/Object;)Z: I15 Branch 93 IF_ACMPEQ L1921 - false
   * 4 wheel.components.Component.remove(Lwheel/components/Component;)Lwheel/components/Component;: root-Branch
   * 5 wheel.components.Component.<init>(Lwheel/components/Component;)V: root-Branch
   * 6 wheel.components.Component.getComponentId()Ljava/lang/String;: root-Branch
   * 7 wheel.components.Component.add(Lwheel/components/Component;)Lwheel/components/Component;: root-Branch
   * 8 wheel.components.Component._isGeneratedId()Z: root-Branch
   * 9 wheel.components.Component.afterAdd()V: root-Branch
   * 10 wheel.components.Component._setGeneratedId(Z)V: root-Branch
   * 11 wheel.components.Component.create()Lwheel/components/ComponentCreator;: I4 Branch 36 IFNONNULL L299 - false
   * 12 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I4 Branch 65 IFNE L1798 - true
   * 13 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I22 Branch 66 IFEQ L1803 - true
   * 14 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I80 Branch 68 IFNONNULL L1819 - false
   * 15 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I92 Branch 69 IFEQ L1822 - false
   * 16 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I96 Branch 70 IFNE L1822 - false
   * 17 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I99 Branch 71 IFEQ L1822 - false
   * 18 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I110 Branch 72 IFEQ L1825 - true
   * 19 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I143 Branch 74 IFEQ L1837 - true
   * 20 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I162 Branch 75 IFEQ L1842 - true
   * 21 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I229 Branch 79 IFEQ L1859 - true
   * 22 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I261 Branch 82 IFNONNULL L1868 - true
   * 23 wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I261 Branch 82 IFNONNULL L1868 - false
   * 24 wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I4 Branch 11 IFNONNULL L139 - false
   * 25 wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I16 Branch 12 IFNULL L142 - true
   * 26 wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I30 Branch 14 IFEQ L145 - false
   * 27 wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I36 Branch 15 IF_ICMPEQ L145 - true
   * 28 wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I92 Branch 18 IFGT L157 - false
   * 29 wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I8 Branch 60 IFNONNULL L1753 - false
   * 30 wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I13 Branch 61 IFNE L1754 - true
   * 31 wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I3 Branch 119 IFNONNULL L2100 - true
   * 32 wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I12 Branch 120 IFEQ L2103 - true
   * 33 wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;Ljava/lang/CharSequence;)V: I12 Branch 7 IFNULL L102 - true
   * 34 wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;Ljava/lang/CharSequence;)V: I34 Branch 9 IFNE L107 - true
   */
  @Test
  public void test33()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      Table table0 = new Table(errorPage0, "object");
      assertNotNull(table0);
      
      TableBlock tableBlock0 = (TableBlock)table0.tfoot();
      assertNotNull(tableBlock0);
      
      Any any0 = tableBlock0.col();
      assertEquals("<col id=\"Any_1\"/>", any0.toString());
      assertNotNull(any0);
      
      TableBlock tableBlock1 = (TableBlock)tableBlock0.remove((Component) table0);
      assertEquals("<div id=\"wheel_ErrorPage\"/>", errorPage0.toString());
      assertEquals(true, tableBlock1._isGeneratedId());
      assertNotNull(tableBlock1);
      assertEquals("<table id=\"object\"/>", table0.toString());
  }

  //Test case number: 34
  /*
   * 19 covered goals:
   * 1 wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I37 Branch 117 IFEQ L2084 - false
   * 2 wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I41 Branch 118 IFEQ L2084 - true
   * 3 wheel.components.Component.getParent()Lwheel/components/Component;: root-Branch
   * 4 wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I4 Branch 56 IFEQ L1731 - true
   * 5 wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I20 Branch 58 IFNULL L1736 - false
   * 6 wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I25 Branch 59 IFEQ L1737 - true
   * 7 wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I25 Branch 59 IFEQ L1737 - false
   * 8 wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I16 Branch 116 IFEQ L2079 - true
   * 9 wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I37 Branch 117 IFEQ L2084 - true
   * 10 wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I8 Branch 60 IFNONNULL L1753 - true
   * 11 wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I28 Branch 62 IFNULL L1760 - true
   * 12 wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I28 Branch 62 IFNULL L1760 - false
   * 13 wheel.components.Component.<init>(Ljava/lang/String;)V: I7 Branch 1 IFNULL L61 - false
   * 14 wheel.components.Component.<init>(Ljava/lang/String;)V: I10 Branch 2 IFNE L61 - false
   * 15 wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I12 Branch 3 IFNULL L84 - false
   * 16 wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I15 Branch 4 IFLE L84 - false
   * 17 wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I34 Branch 5 IFNE L89 - false
   * 18 wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I37 Branch 6 IFNE L89 - true
   * 19 wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I37 Branch 6 IFNE L89 - false
   */
  @Test
  public void test34()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertNotNull(errorPage0);
      
      Table table0 = new Table(errorPage0, "object");
      assertNotNull(table0);
      
      TextArea textArea0 = new TextArea((Component) table0, "object", "object");
      String string0 = textArea0._wrapComponentId("object");
      assertEquals("<table id=\"object\"/>", table0.toString());
      assertNotNull(string0);
      assertEquals("<div id=\"wheel_ErrorPage\"/>", errorPage0.toString());
      assertEquals("object", string0);
  }
}
