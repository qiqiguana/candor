/*
 * This file was automatically generated by EvoSuite
 */

package wheel.components;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import org.junit.BeforeClass;
import org.xmlpull.v1.XmlSerializer;
import wheel.ErrorPage;
import wheel.components.Component;
import wheel.components.TextInput;

@RunWith(EvoSuiteRunner.class)
public class TextInputEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput((Component) errorPage0, "KcWf", "KcWf");
      String string0 = textInput0.toString();
      assertEquals("<input id=\"KcWf\"type=\"text\" />", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput((Component) errorPage0, "KcWf", "KcWf");
      TextInput textInput1 = (TextInput)textInput0.value("KcWf");
      assertEquals("<input id=\"KcWf\"type=\"text\" />", textInput0.toString());
      assertEquals("<input id=\"KcWf\"type=\"text\" />", textInput1.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      TextInput textInput0 = new TextInput((Component) null, "Excepio thrown for evaluator name [", "Excepio thrown for evaluator name [");
      textInput0.addValidationError("Excepio thrown for evaluator name [");
      // Undeclared exception!
      try {
        textInput0.renderComponent((XmlSerializer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TextInput textInput0 = new TextInput((Component) null, "Z[fIU:L$6}xVd", "Z[fIU:L$6}xVd");
      // Undeclared exception!
      try {
        textInput0.renderComponent((XmlSerializer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
