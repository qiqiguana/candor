/*
 * This file was automatically generated by EvoSuite
 */

package wheel.components;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.util.List;
import java.util.Set;
import org.junit.BeforeClass;
import org.xmlpull.mxp1_serializer.MXSerializer;
import org.xmlpull.v1.XmlPullParserException;
import org.xmlpull.v1.XmlPullParserFactory;
import org.xmlpull.v1.XmlSerializer;
import wheel.ErrorPage;
import wheel.WheelException;
import wheel.components.ActionExpression;
import wheel.components.DateInput;
import wheel.components.ElExpression;
import wheel.components.Form;
import wheel.components.FormElement;
import wheel.components.Image;
import wheel.components.NumberInput;
import wheel.components.Table;
import wheel.components.TextInput;
import wheel.components.ValidationError;

@RunWith(EvoSuiteRunner.class)
public class FormEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Form form0 = new Form("Zz?0R9SpH g`");
      String string0 = form0.defaultDomEvent();
      assertEquals("onsubmit", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = (Form)errorPage0.form("c|e'OiaFe(/GE=;Uth5");
      assertNotNull(form0);
      
      Image image0 = new Image(form0, "c|e'OiaFe(/GE=;Uth5", "c|e'OiaFe(/GE=;Uth5");
      DateInput dateInput0 = new DateInput(image0, "c|e'OiaFe(/GE=;Uth5", "c|e'OiaFe(/GE=;Uth5", "c|e'OiaFe(/GE=;Uth5");
      Form form1 = image0._getVisibleForm(true);
      NumberInput numberInput0 = new NumberInput(dateInput0, "G H~I`uo", "c|e'OiaFe(/GE=;Uth5", "G H~I`uo");
      ElExpression elExpression0 = numberInput0.el("G H~I`uo");
      form1.fileInput("c|e'OiaFe(/GE=;Uth5", elExpression0);
      // Undeclared exception!
      try {
        form1._render((XmlSerializer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = (Form)errorPage0.form("c|e'OiaFe(/GE;@th5");
      assertNotNull(form0);
      
      DateInput dateInput0 = new DateInput(form0, "c|e'OiaFe(/GE;@th5", "c|e'OiaFe(/GE;@th5", "c|e'OiaFe(/GE;@th5");
      Table table0 = new Table(dateInput0, "c|e'OiaFe(/GE;@th5");
      Form form1 = table0._getVisibleForm(true);
      Form form2 = (Form)form1.id("c|e'OiaFe(/GE;@th5");
      assertEquals("<form id=\"c|e'OiaFe(/GE;@th5\"method=\"POST\" />", form1.toString());
      assertNotNull(form2);
      assertEquals(true, form1._isBuilt());
      assertEquals("<form id=\"c|e'OiaFe(/GE;@th5\"method=\"POST\" />", form0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      Form form0 = new Form((String) null);
      ActionExpression actionExpression0 = form0.getAction();
      assertNull(actionExpression0);
  }

  @Test
  public void test4()  throws Throwable  {
      Form form0 = new Form((String) null);
      form0.postBuild();
      assertEquals("<form id=\"wheel_components_Form\"/>", form0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      Form form0 = new Form("Zz?0R9SpH g`");
      Form form1 = (Form)form0.clasS((CharSequence) "onsubmit");
      assertSame(form0, form1);
  }

  @Test
  public void test6()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        errorPage0.form((String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * A Form must always have a given componentId.
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        errorPage0.form("");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * A Form must always have a given componentId.
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = (Form)errorPage0.form("c|e'OiaFe(/GE=;Uth5");
      assertNotNull(form0);
      
      Image image0 = new Image(form0, "c|e'OiaFe(/GE=;Uth5", "c|e'OiaFe(/GE=;Uth5");
      Form form1 = image0._getVisibleForm(true);
      Form form2 = (Form)form1.form("c|e'OiaFe(/GE=;Uth5");
      assertEquals(true, form2._isBuilt());
      assertNotNull(form2);
      assertEquals("<form id=\"c|e'OiaFe(/GE=;Uth5\"method=\"POST\" />", form0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = (Form)errorPage0.form("] line ");
      assertNotNull(form0);
      
      Image image0 = new Image(form0, "] line ", "] line ");
      Form form1 = image0._getForm(false);
      List<ValidationError> list0 = form1.getValidationErrors();
      assertEquals("<form id=\"] line \"method=\"POST\" />", form1.toString());
      assertEquals(true, form1.isFormValid());
      assertNotNull(list0);
      assertEquals(true, form1._isBuilt());
      assertEquals("<form id=\"] line \"method=\"POST\" />", form0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = (Form)errorPage0.form("] line ");
      assertNotNull(form0);
      
      Image image0 = new Image(form0, "] line ", "] line ");
      Form form1 = image0._getForm(false);
      boolean boolean0 = form1.isValid("] line ");
      assertEquals(true, form0._isBuilt());
      assertEquals(true, boolean0);
      assertEquals("<form id=\"] line \"method=\"POST\" />", form0.toString());
  }

  @Test
  public void test11()  throws Throwable  {
      Form form0 = new Form((String) null);
      // Undeclared exception!
      try {
        form0.isFormValid();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      Form form0 = new Form("Zz?0R9SpH g`");
      form0.addFormValidationRule("Zz?0R9SpH g`", "Zz?0R9SpH g`");
      // Undeclared exception!
      try {
        form0.isFormValid();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = (Form)errorPage0.form("] line ");
      assertNotNull(form0);
      
      Image image0 = new Image(form0, "] line ", "] line ");
      Form form1 = image0._getForm(false);
      Form form2 = form1.addFormValidationError("] line ");
      assertNotNull(form2);
      
      List<ValidationError> list0 = form2.getValidationErrors();
      assertEquals(true, form1._isBuilt());
      assertEquals(1, list0.size());
      assertNotNull(list0);
      assertEquals("<form id=\"] line \"method=\"POST\" />", form1.toString());
      assertEquals(true, form1.isFormValid());
  }

  @Test
  public void test14()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = (Form)errorPage0.form("] line ");
      assertNotNull(form0);
      
      Image image0 = new Image(form0, "] line ", "] line ");
      Form form1 = image0._getForm(false);
      Form form2 = form1.addFormValidationError("] line ");
      assertNotNull(form2);
      assertEquals("<form id=\"] line \"method=\"POST\" />", form1.toString());
      
      form1._clear();
      assertEquals(true, form0._isBuilt());
  }

  @Test
  public void test15()  throws Throwable  {
      Form form0 = new Form("Zz?0R9SpH g`");
      form0.addFormValidationRule("Zz?0R9SpH g`", "Zz?0R9SpH g`");
      form0._clear();
      assertNull(form0._classReferenceFromHints());
  }

  @Test
  public void test16()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = (Form)errorPage0.form("] line ");
      assertNotNull(form0);
      
      Image image0 = new Image(form0, "] line ", "] line ");
      Form form1 = image0._getForm(false);
      // Undeclared exception!
      try {
        form1.field("] line ");
        fail("Expecting exception: WheelException");
      } catch(WheelException e) {
        /*
         * Form field with name ] line  doesn't exist.
         */
      }
  }

  @Test
  public void test17()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = (Form)errorPage0.form("] line ");
      assertNotNull(form0);
      
      Image image0 = new Image(form0, "] line ", "] line ");
      Form form1 = image0._getForm(false);
      form1.passwordInput("] line ");
      TextInput textInput0 = (TextInput)form1.field("] line ");
      assertEquals("<form id=\"] line \"method=\"POST\" />", form0.toString());
      assertEquals(true, form0._isBuilt());
      assertNotNull(textInput0);
      assertEquals(true, form1._isBuilt());
  }

  @Test
  public void test18()  throws Throwable  {
      Form form0 = new Form("Zz?0R9SpH g`");
      form0.addFormValidationRule("Zz?0R9SpH g`", "Zz?0R9SpH g`");
      Form form1 = form0.addFormValidationRule("onsubmit", "Zz?0R9SpH g`");
      assertEquals("Zz?0R9SpH g`", form1.getComponentId());
  }

  @Test
  public void test19()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = (Form)errorPage0.form("c|e'OiaFe(/GE;@th5");
      assertNotNull(form0);
      
      DateInput dateInput0 = new DateInput(form0, "c|e'OiaFe(/GE;@th5", "c|e'OiaFe(/GE;@th5", "c|e'OiaFe(/GE;@th5");
      Table table0 = new Table(dateInput0, "c|e'OiaFe(/GE;@th5");
      Form form1 = table0._getVisibleForm(true);
      Form form2 = form1.addFormValidationError("c|e'OiaFe(/GE;@th5");
      assertNotNull(form2);
      
      form1.addFormValidationError("c|e'OiaFe(/GE;@th5");
      assertEquals(true, form1._isBuilt());
      assertEquals("<form id=\"c|e'OiaFe(/GE;@th5\"method=\"POST\" />", form1.toString());
      assertEquals(true, form0._isBuilt());
  }

  @Test
  public void test20()  throws Throwable  {
      Form form0 = new Form("Zz?0R9SpH g`");
      XmlPullParserFactory xmlPullParserFactory0 = XmlPullParserFactory.newInstance();
      MXSerializer mXSerializer0 = (MXSerializer)xmlPullParserFactory0.newSerializer();
      form0._renderActions((XmlSerializer) mXSerializer0);
      assertEquals("form", form0.defaultTagName());
  }

  @Test
  public void test21()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = (Form)errorPage0.form("c|e'OiaFe(/GE;@th5");
      assertNotNull(form0);
      
      DateInput dateInput0 = new DateInput(form0, "c|e'OiaFe(/GE;@th5", "c|e'OiaFe(/GE;@th5", "c|e'OiaFe(/GE;@th5");
      Table table0 = new Table(dateInput0, "c|e'OiaFe(/GE;@th5");
      Form form1 = table0._getVisibleForm(true);
      Set<FormElement> set0 = form1.getRewindFormElements();
      assertNotNull(set0);
      
      Set<FormElement> set1 = form1.getRewindFormElements();
      assertSame(set1, set0);
      assertEquals(0, set1.size());
      assertEquals(true, form0._isBuilt());
      assertEquals("<form id=\"c|e'OiaFe(/GE;@th5\"method=\"POST\" />", form0.toString());
  }

  @Test
  public void test22()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = (Form)errorPage0.form("c|e'OiaFe(/GE;@th5");
      assertNotNull(form0);
      
      DateInput dateInput0 = new DateInput(form0, "c|e'OiaFe(/GE;@th5", "c|e'OiaFe(/GE;@th5", "c|e'OiaFe(/GE;@th5");
      Table table0 = new Table(dateInput0, "c|e'OiaFe(/GE;@th5");
      Form form1 = table0._getVisibleForm(true);
      TextInput textInput0 = (TextInput)form1.buttonInput("c|e'OiaFe(/GE;@th5");
      assertNotNull(textInput0);
      
      // Undeclared exception!
      try {
        form1._render((XmlSerializer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test23()  throws Throwable  {
      Form form0 = new Form((String) null);
      String[] stringArray0 = new String[2];
      Form form1 = form0._buildFromSerializedString(stringArray0);
      assertEquals("<form id=\"wheel_components_Form\"/>", form1.toString());
  }

  @Test
  public void test24()  throws Throwable  {
      Form form0 = new Form((String) null);
      String[] stringArray0 = new String[3];
      Form form1 = form0._buildFromSerializedString(stringArray0);
      assertEquals(false, form1._isGeneratedId());
  }

  @Test
  public void test25()  throws Throwable  {
      Form form0 = new Form((String) null);
      String[] stringArray0 = new String[8];
      // Undeclared exception!
      try {
        form0._buildFromSerializedString(stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
