/*
 * This file was automatically generated by EvoSuite
 */

package wheel.components;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import wheel.ErrorPage;
import wheel.components.Any;
import wheel.components.Component;
import wheel.components.DateInput;
import wheel.components.RenderableComponentConfiguration;
import wheel.components.StandaloneComponentConfiguration;

@RunWith(EvoSuiteRunner.class)
public class RenderableComponentConfigurationEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "FLjx<", "FLjx<", "FLjx<");
      RenderableComponentConfiguration renderableComponentConfiguration0 = dateInput0.config();
      boolean boolean0 = renderableComponentConfiguration0.isUseXhtml();
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "FLjx<", "FLjx<", "FLjx<");
      RenderableComponentConfiguration renderableComponentConfiguration0 = dateInput0.config();
      boolean boolean0 = renderableComponentConfiguration0.isRenderId();
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      StandaloneComponentConfiguration standaloneComponentConfiguration1 = (StandaloneComponentConfiguration)standaloneComponentConfiguration0.setRenderId(false);
      assertEquals(false, standaloneComponentConfiguration0.isRenderId());
      assertEquals(false, standaloneComponentConfiguration1.isRenderId());
  }

  @Test
  public void test3()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = new Any((Component) errorPage0, (CharSequence) null);
      RenderableComponentConfiguration renderableComponentConfiguration0 = any0.config();
      renderableComponentConfiguration0.setVisible(false);
      assertEquals(false, renderableComponentConfiguration0.isVisible());
  }

  @Test
  public void test4()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      standaloneComponentConfiguration0.setUseXhtml(false);
      assertEquals(false, standaloneComponentConfiguration0.isRenderId());
      assertEquals(false, standaloneComponentConfiguration0.isUseXhtml());
  }

  @Test
  public void test5()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      StandaloneComponentConfiguration standaloneComponentConfiguration1 = (StandaloneComponentConfiguration)standaloneComponentConfiguration0.setRenderSelf(true);
      assertEquals(true, standaloneComponentConfiguration1.isRenderSelf());
      assertNotNull(standaloneComponentConfiguration1);
  }

  @Test
  public void test6()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      boolean boolean0 = standaloneComponentConfiguration0.isRenderSelf();
      assertEquals(true, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponentConfiguration standaloneComponentConfiguration0 = (StandaloneComponentConfiguration)errorPage0.config();
      boolean boolean0 = standaloneComponentConfiguration0.isVisible();
      assertEquals(true, boolean0);
  }
}
