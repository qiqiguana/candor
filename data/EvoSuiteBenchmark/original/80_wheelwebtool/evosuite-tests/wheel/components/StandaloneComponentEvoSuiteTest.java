/*
 * This file was automatically generated by EvoSuite
 */

package wheel.components;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.List;
import wheel.ErrorPage;
import wheel.WheelException;
import wheel.components.ActionExpression;
import wheel.components.Checkbox;
import wheel.components.Component;
import wheel.components.Form;
import wheel.components.ValidationError;

@RunWith(EvoSuiteRunner.class)
public class StandaloneComponentEvoSuiteTest {


  //Test case number: 0
  /*
   * 6 covered goals:
   * 1 wheel.components.StandaloneComponent.isPageRewinding()Z: root-Branch
   * 2 wheel.components.StandaloneComponent.<init>()V: root-Branch
   * 3 wheel.components.StandaloneComponent._isRewindingForm(Lwheel/components/Form;)Z: I4 Branch 58 IFEQ L521 - true
   * 4 wheel.components.StandaloneComponent._getComponentStore()Lwheel/util/ComponentStore;: I4 Branch 60 IFNONNULL L533 - true
   * 5 wheel.components.StandaloneComponent._getComponentStore()Lwheel/util/ComponentStore;: I4 Branch 60 IFNONNULL L533 - false
   * 6 wheel.components.StandaloneComponent._addPostBuildCallback(Lwheel/components/IBuildableComponent;)V: I9 Branch 70 IFNONNULL L669 - false
   */
  @Test
  public void test0()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "a%PI p]46xeZG4", "a%PI p]46xeZG4");
      ActionExpression actionExpression0 = checkbox0.action("a%PI p]46xeZG4");
      Form form0 = (Form)errorPage0.form("a%PI p]46xeZG4", actionExpression0);
      assertEquals(false, errorPage0.isPageRewinding());
      assertNotNull(form0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 wheel.components.StandaloneComponent.getMessages()Lwheel/Messages;: root-Branch
   * 2 wheel.components.StandaloneComponent.isPage()Z: I4 Branch 71 IFNONNULL L676 - false
   */
  @Test
  public void test1()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        errorPage0.message("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * 1 wheel.components.StandaloneComponent.getBody()Lwheel/components/Block;: root-Branch
   * 2 wheel.components.StandaloneComponent.buildPage()V: I4 Branch 50 IFEQ L421 - true
   * 3 wheel.components.StandaloneComponent.buildPage()V: I35 Branch 51 IFNULL L430 - true
   * 4 wheel.components.StandaloneComponent._generateComponentId(Lwheel/components/Component;)Ljava/lang/String;: I42 Branch 56 IFLE L473 - true
   * 5 wheel.components.StandaloneComponent._generateComponentId(Lwheel/components/Component;)Ljava/lang/String;: I42 Branch 56 IFLE L473 - false
   */
  @Test
  public void test2()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        errorPage0.body();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 wheel.components.StandaloneComponent.setFocus(Lwheel/components/Component;)V: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ErrorPage errorPage1 = (ErrorPage)errorPage0.requestFocus();
      assertEquals("<div id=\"wheel_ErrorPage\"/>", errorPage1.toString());
  }

  //Test case number: 4
  /*
   * 4 covered goals:
   * 1 wheel.components.StandaloneComponent.loadJQuery()V: root-Branch
   * 2 wheel.components.StandaloneComponent._addAsset(Lwheel/Asset;)V: I9 Branch 61 IFNONNULL L559 - false
   * 3 wheel.components.StandaloneComponent._addAsset(Lwheel/Asset;)V: I23 Branch 62 IFGT L562 - false
   * 4 wheel.components.StandaloneComponent._addAsset(Lwheel/Asset;)V: I35 Branch 63 IFNULL L565 - true
   */
  @Test
  public void test4()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.loadJQuery();
      assertEquals(true, errorPage0.isPage());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 wheel.components.StandaloneComponent.defaultTagName()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test5()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = errorPage0.toString();
      assertEquals("<div id=\"wheel_ErrorPage\"/>", string0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 wheel.components.StandaloneComponent._setSubmittedForm(Lwheel/components/Form;)V: root-Branch
   */
  @Test
  public void test6()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0._setSubmittedForm((Form) null);
      assertEquals(false, errorPage0.isRewinding());
  }

  //Test case number: 7
  /*
   * 6 covered goals:
   * 1 wheel.components.StandaloneComponent.getHead()Lwheel/components/Block;: root-Branch
   * 2 wheel.components.StandaloneComponent.config()Lwheel/components/StandaloneComponentConfiguration;: I4 Branch 1 IFNONNULL L98 - false
   * 3 wheel.components.StandaloneComponent._generateComponentId(Lwheel/components/Component;)Ljava/lang/String;: I42 Branch 56 IFLE L473 - true
   * 4 wheel.components.StandaloneComponent._generateComponentId(Lwheel/components/Component;)Ljava/lang/String;: I42 Branch 56 IFLE L473 - false
   * 5 wheel.components.StandaloneComponent.buildPage()V: I4 Branch 50 IFEQ L421 - true
   * 6 wheel.components.StandaloneComponent.buildPage()V: I35 Branch 51 IFNULL L430 - true
   */
  @Test
  public void test7()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        errorPage0.buildComponent();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * 1 wheel.components.StandaloneComponent.isRewinding()Z: I9 Branch 2 IFEQ L114 - true
   * 2 wheel.components.StandaloneComponent.isValid(Ljava/lang/String;)Z: I4 Branch 4 IFEQ L138 - true
   */
  @Test
  public void test8()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      boolean boolean0 = errorPage0.isValid("a%PI p]46xeZG4");
      assertEquals(true, boolean0);
      assertEquals(false, errorPage0.isRewinding());
      assertEquals(false, errorPage0.isPageRewinding());
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 wheel.components.StandaloneComponent.listErrors()Ljava/util/List;: I10 Branch 6 IFEQ L151 - true
   */
  @Test
  public void test9()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      List<ValidationError> list0 = errorPage0.listErrors();
      assertNotNull(list0);
      assertEquals(false, errorPage0.isRewinding());
  }

  //Test case number: 10
  /*
   * 3 covered goals:
   * 1 wheel.components.StandaloneComponent.getError(Ljava/lang/String;)Lwheel/components/ValidationError;: I4 Branch 8 IFEQ L166 - true
   * 2 wheel.components.StandaloneComponent.isPageRewinding()Z: root-Branch
   * 3 wheel.components.StandaloneComponent.isRewinding()Z: I9 Branch 2 IFEQ L114 - true
   */
  @Test
  public void test10()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.getError("*>!Y%:K][V/s7(=");
      assertEquals(false, errorPage0.isPageRewinding());
      assertEquals(false, errorPage0.isRewinding());
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 wheel.components.StandaloneComponent.afterAdd()V: I4 Branch 23 IFNULL L253 - true
   */
  @Test
  public void test11()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.afterAdd();
      assertNull(errorPage0._classReferenceFromHints());
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 wheel.components.StandaloneComponent._postProcessRequest()V: I4 Branch 53 IFNULL L443 - true
   */
  @Test
  public void test12()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0._postProcessRequest();
      assertEquals("div", errorPage0.defaultTagName());
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 wheel.components.StandaloneComponent.getSubmittedForm()Lwheel/components/Form;: I9 Branch 67 IFNONNULL L608 - false
   */
  @Test
  public void test13()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        errorPage0.getSubmittedForm();
        fail("Expecting exception: WheelException");
      } catch(WheelException e) {
        /*
         * Tried to access a form, but none was submitted.
         */
      }
  }

  //Test case number: 14
  /*
   * 3 covered goals:
   * 1 wheel.components.StandaloneComponent.addUsedStandaloneComponent(Lwheel/components/StandaloneComponent;)V: I4 Branch 72 IFNONNULL L680 - false
   * 2 wheel.components.StandaloneComponent.addUsedStandaloneComponent(Lwheel/components/StandaloneComponent;)V: I23 Branch 73 IFLE L685 - true
   * 3 wheel.components.StandaloneComponent.<init>()V: root-Branch
   */
  @Test
  public void test14()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ErrorPage errorPage1 = new ErrorPage();
      // Undeclared exception!
      try {
        errorPage1.add((Component) errorPage0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
