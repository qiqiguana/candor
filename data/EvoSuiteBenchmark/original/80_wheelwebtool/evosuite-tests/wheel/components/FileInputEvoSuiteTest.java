/*
 * This file was automatically generated by EvoSuite
 */

package wheel.components;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import wheel.components.Component;
import wheel.components.ElExpression;
import wheel.components.FileInput;
import wheel.components.TextInput;

@RunWith(EvoSuiteRunner.class)
public class FileInputEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FileInput fileInput0 = new FileInput((Component) null, "NNb}Mb2", "NNb}Mb2");
      assertNotNull(fileInput0);
      
      int int0 = fileInput0.getMaxMemoryFileSize();
      assertEquals(1000, fileInput0.getMaxRequestSize());
      assertEquals("<input id=\"NNb}Mb2\"type=\"file\" />", fileInput0.toString());
      assertEquals(1000, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      FileInput fileInput0 = new FileInput((Component) null, "NNb}Mb2", "NNb}Mb2");
      assertNotNull(fileInput0);
      
      String string0 = fileInput0.defaultTagName();
      assertEquals(1000, fileInput0.getMaxMemoryFileSize());
      assertEquals(1000, fileInput0.getMaxRequestSize());
      assertEquals("<input id=\"NNb}Mb2\"type=\"file\" />", fileInput0.toString());
      assertEquals("input", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      FileInput fileInput0 = new FileInput((Component) null, "Yw9v% 8Y9", "Yw9v% 8Y9");
      assertNotNull(fileInput0);
      
      TextInput textInput0 = new TextInput((Component) null, "Yw9v% 8Y9", "Yw9v% 8Y9");
      ElExpression elExpression0 = textInput0.el("Yw9v% 8Y9");
      fileInput0.setMetadataBind(elExpression0);
      assertEquals(1000, fileInput0.getMaxMemoryFileSize());
      assertEquals(1000, fileInput0.getMaxRequestSize());
      assertEquals("<input id=\"Yw9v% 8Y9\"type=\"file\" />", fileInput0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      FileInput fileInput0 = new FileInput((Component) null, "NNb}Mb2", "NNb}Mb2");
      assertNotNull(fileInput0);
      
      fileInput0.setMaxMemoryFileSize(1000);
      assertEquals(1000, fileInput0.getMaxMemoryFileSize());
      assertEquals(1000, fileInput0.getMaxRequestSize());
      assertEquals("<input id=\"NNb}Mb2\"type=\"file\" />", fileInput0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      FileInput fileInput0 = new FileInput((Component) null, "N23:6WINk5|I=z", "N23:6WINk5|I=z");
      assertNotNull(fileInput0);
      
      int int0 = fileInput0.getMaxRequestSize();
      assertEquals(1000, fileInput0.getMaxMemoryFileSize());
      assertEquals(1000, int0);
      assertEquals("<input id=\"N23:6WINk5|I=z\"type=\"file\" />", fileInput0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      FileInput fileInput0 = new FileInput((Component) null, "Yw9v% 8Y9", "Yw9v% 8Y9");
      assertNotNull(fileInput0);
      
      fileInput0.setTempFileLocation("Yw9v% 8Y9");
      assertEquals(1000, fileInput0.getMaxMemoryFileSize());
      assertEquals("<input id=\"Yw9v% 8Y9\"type=\"file\" />", fileInput0.toString());
      assertEquals(1000, fileInput0.getMaxRequestSize());
  }

  @Test
  public void test6()  throws Throwable  {
      FileInput fileInput0 = new FileInput((Component) null, "N23:6WINk5|I=z", "N23:6WINk5|I=z");
      assertNotNull(fileInput0);
      
      String string0 = fileInput0.getTempFileLocation();
      assertEquals("<input id=\"N23:6WINk5|I=z\"type=\"file\" />", fileInput0.toString());
      assertNotNull(string0);
      assertEquals(1000, fileInput0.getMaxMemoryFileSize());
      assertEquals(1000, fileInput0.getMaxRequestSize());
  }

  @Test
  public void test7()  throws Throwable  {
      FileInput fileInput0 = new FileInput((Component) null, "Yw9v% 8Y9", "Yw9v% 8Y9");
      assertNotNull(fileInput0);
      
      fileInput0.setMaxRequestSize((-16));
      assertEquals(-16, fileInput0.getMaxRequestSize());
      assertEquals("<input id=\"Yw9v% 8Y9\"type=\"file\" />", fileInput0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      FileInput fileInput0 = new FileInput((Component) null, "b", "b");
      assertNotNull(fileInput0);
      
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try {
        fileInput0._setSubmitValue(stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      FileInput fileInput0 = new FileInput((Component) null, "NNb}Mb2", "NNb}Mb2");
      assertNotNull(fileInput0);
      
      String[] stringArray0 = new String[8];
      fileInput0.addValidationError("NNb}Mb2");
      fileInput0._setSubmitValue(stringArray0);
      assertEquals(1000, fileInput0.getMaxRequestSize());
      assertEquals(1000, fileInput0.getMaxMemoryFileSize());
      assertEquals("<input id=\"NNb}Mb2\"type=\"file\" />", fileInput0.toString());
  }
}
