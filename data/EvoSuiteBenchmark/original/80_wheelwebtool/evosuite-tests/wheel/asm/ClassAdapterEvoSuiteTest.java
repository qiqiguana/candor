/*
 * This file was automatically generated by EvoSuite
 */

package wheel.asm;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;

@RunWith(EvoSuiteRunner.class)
public class ClassAdapterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) classWriter0);
      FieldVisitor fieldVisitor0 = classAdapter0.visitField((-1025), "5IN1zmxs5w", "SY+}U\"YEvop", "SY+}U\"YEvop", (Object) null);
      assertNotNull(fieldVisitor0);
  }

  @Test
  public void test1()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-180));
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) classWriter0);
      // Undeclared exception!
      try {
        classAdapter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-946));
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) classWriter0);
      classAdapter0.visitSource("", "");
  }

  @Test
  public void test3()  throws Throwable  {
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) null);
      // Undeclared exception!
      try {
        classAdapter0.visitEnd();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) classWriter0);
      String[] stringArray0 = new String[9];
      // Undeclared exception!
      try {
        classAdapter0.visit(4, 4, "", "", ">", stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-946));
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) classWriter0);
      classAdapter0.visitInnerClass("", "", "", 357);
  }

  @Test
  public void test6()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-946));
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) classWriter0);
      AnnotationVisitor annotationVisitor0 = classAdapter0.visitAnnotation("", true);
      assertNotNull(annotationVisitor0);
  }

  @Test
  public void test7()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) classWriter0);
      String[] stringArray0 = new String[10];
      // Undeclared exception!
      try {
        classAdapter0.visitMethod(0, "0.Zukz'bOSV", "0.Zukz'bOSV", "0.Zukz'bOSV", stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-946));
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) classWriter0);
      classAdapter0.visitOuterClass("", "", "");
  }
}
