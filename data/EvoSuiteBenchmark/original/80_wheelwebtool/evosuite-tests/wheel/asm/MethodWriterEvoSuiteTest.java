/*
 * This file was automatically generated by EvoSuite
 */

package wheel.asm;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import wheel.asm.AnnotationVisitor;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.Label;
import wheel.asm.MethodWriter;

@RunWith(EvoSuiteRunner.class)
public class MethodWriterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try {
        MethodWriter.readInt(byteArray0, (int) (byte)44);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 44
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      int int0 = MethodWriter.readUnsignedShort(byteArray0, 6);
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitAnnotationDefault();
      int int0 = methodWriter0.getSize();
      assertEquals(34, methodWriter0.getSize());
      assertEquals(34, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      MethodWriter.writeShort(byteArray0, 0, (int) (byte) (-113));
  }

  @Test
  public void test4()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "7)5NT";
      stringArray0[1] = "pJq\f^d.!H7fx";
      stringArray0[2] = "7)5NT";
      stringArray0[3] = "7)5NT";
      stringArray0[4] = "7)5NT";
      stringArray0[5] = "pJq\f^d.!H7fx";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", stringArray0, true, true);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(6, label0);
      assertEquals(69, methodWriter0.getSize());
      assertEquals("L606413743", label0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1417));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "!IMyX2d5C";
      stringArray0[1] = "s*2R94-+JOv";
      stringArray0[2] = "!IMyX2d5C";
      stringArray0[3] = "!IMyX2d5C";
      stringArray0[4] = "!IMyX2d5C";
      stringArray0[5] = "!IMyX2d5C";
      stringArray0[6] = "!IMyX2d5C";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-815), "!IMyX2d5C", "!IMyX2d5C", "!IMyX2d5C", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitCode();
      assertEquals(50, methodWriter0.getSize());
  }

  @Test
  public void test6()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1417));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "!IMyX2d5C";
      stringArray0[1] = "s*2R94-+JOv";
      stringArray0[2] = "!IMyX2d5C";
      stringArray0[3] = "!IMyX2d5C";
      stringArray0[4] = "!IMyX2d5C";
      stringArray0[5] = "!IMyX2d5C";
      stringArray0[6] = "!IMyX2d5C";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-815), "!IMyX2d5C", "!IMyX2d5C", "!IMyX2d5C", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitEnd();
      assertEquals(50, methodWriter0.getSize());
  }

  @Test
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      short short0 = MethodWriter.readShort(byteArray0, 0);
      assertEquals((short)0, short0);
  }

  @Test
  public void test8()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1417));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "!IMyX2d5C";
      stringArray0[1] = "s*2R94-+JOv";
      stringArray0[2] = "!IMyX2d5C";
      stringArray0[3] = "!IMyX2d5C";
      stringArray0[4] = "!IMyX2d5C";
      stringArray0[5] = "!IMyX2d5C";
      stringArray0[6] = "!IMyX2d5C";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-815), "!IMyX2d5C", "!IMyX2d5C", "!IMyX2d5C", stringArray0, false, false);
      String[] stringArray1 = new String[9];
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, (-461), "a~Th&J^E(Yw<3rEt!|", "a~Th&J^E(Yw<3rEt!|", "a~Th&J^E(Yw<3rEt!|", stringArray1, false, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1417));
      String[] stringArray0 = new String[9];
      stringArray0[0] = "a~Th&J^E(Yw<3rEt!|";
      stringArray0[1] = "a~Th&J^E(Yw<3rEt!|";
      stringArray0[2] = "a~Th&J^E(Yw<3rEt!|";
      stringArray0[3] = "a~Th&J^E(Yw<3rEt!|";
      stringArray0[4] = "a~Th&J^E(Yw<3rEt!|";
      stringArray0[5] = "a~Th&J^E(Yw<3rEt!|";
      stringArray0[6] = "a~Th&J^E(Yw<3rEt!|";
      stringArray0[7] = "a~Th&J^E(Yw<3rEt!|";
      stringArray0[8] = "a~Th&J^E(Yw<3rEt!|";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, (-461), "a~Th&J^E(Yw<3rEt!|", "a~Th&J^E(Yw<3rEt!|", "a~Th&J^E(Yw<3rEt!|", stringArray0, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: 18
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1417));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "!IMyX2d5C";
      stringArray0[1] = "s*2R94-+JOv";
      stringArray0[2] = "!IMyX2d5C";
      stringArray0[3] = "!IMyX2d5C";
      stringArray0[4] = "!IMyX2d5C";
      stringArray0[5] = "!IMyX2d5C";
      stringArray0[6] = "!IMyX2d5C";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-815), "!IMyX2d5C", "!IMyX2d5C", "!IMyX2d5C", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("!IMyX2d5C", true);
      assertNotNull(annotationVisitor0);
      assertEquals(62, methodWriter0.getSize());
  }

  @Test
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1417));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "!IMyX2d5C";
      stringArray0[1] = "s*2R94-+JOv";
      stringArray0[2] = "!IMyX2d5C";
      stringArray0[3] = "!IMyX2d5C";
      stringArray0[4] = "!IMyX2d5C";
      stringArray0[5] = "!IMyX2d5C";
      stringArray0[6] = "!IMyX2d5C";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-815), "!IMyX2d5C", "!IMyX2d5C", "!IMyX2d5C", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      // Undeclared exception!
      try {
        methodWriter0.visitParameterAnnotation((-1417), "x?w%Gh,MGaeUe", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 9
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1417));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "yN@~Oz ,Rx7cTpZ";
      stringArray0[1] = "a~Th&J^E(Yw<3rEt!|";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1220, "a~Th&J^E(Yw<3rEt!|", "a~Th&J^E(Yw<3rEt!|", "a~Th&J^E(Yw<3rEt!|", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      // Undeclared exception!
      try {
        methodWriter0.visitParameterAnnotation((-317), "a~Th&J^E(Yw<3rEt!|", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 18
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((int) (byte)122);
      String[] stringArray0 = new String[10];
      stringArray0[0] = "L@GS";
      stringArray0[1] = "JCn#&G";
      stringArray0[2] = "L@GS";
      stringArray0[3] = "RuntimeInvisibleAnnotations";
      stringArray0[4] = "L@GS";
      stringArray0[5] = "JCn#&G";
      stringArray0[6] = "L@GS";
      stringArray0[7] = "JCn#&G";
      stringArray0[8] = "";
      stringArray0[9] = "L@GS";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (int) (byte)122, "L@GS", "JCn#&G", "JCn#&G", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame((int) (byte)0, (int) (byte)8, (Object[]) stringArray0, 0, (Object[]) stringArray0);
      methodWriter0.visitLdcInsn((Object) "Thu Jan 01 00:59:59 GMT 1970");
      int int0 = methodWriter0.getSize();
      assertEquals(103, methodWriter0.getSize());
      assertEquals(103, int0);
  }

  @Test
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((int) (byte)52);
      String[] stringArray0 = new String[10];
      stringArray0[0] = "L@GS";
      stringArray0[1] = "JCn#&G";
      stringArray0[2] = "L@GS";
      stringArray0[3] = "JCn#&G";
      stringArray0[4] = "L@GS";
      stringArray0[5] = "JCn#&G";
      stringArray0[6] = "L@GS";
      stringArray0[7] = "JCn#&G";
      stringArray0[8] = "";
      stringArray0[9] = "L@GS";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (int) (byte)122, "L@GS", "JCn#&G", "JCn#&G", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame((int) (byte)122, (int) (byte)11, (Object[]) stringArray0, 0, (Object[]) stringArray0);
      assertEquals(44, methodWriter0.getSize());
  }

  @Test
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "7)5NT";
      stringArray0[1] = "pJq\f^d.!H7fx";
      stringArray0[2] = "7)5NT";
      stringArray0[3] = "7)5NT";
      stringArray0[4] = "7)5NT";
      stringArray0[5] = "pJq\f^d.!H7fx";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", stringArray0, true, true);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitInsn(0);
      assertEquals(67, methodWriter0.getSize());
  }

  @Test
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn((-301), (-751));
      assertEquals(48, methodWriter0.getSize());
  }

  @Test
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      
      // Undeclared exception!
      try {
        methodWriter0.visitIntInsn((-301), (-751));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1417));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "yN@~Oz ,Rx7cTpZ";
      stringArray0[1] = "a~Th&J^E(Yw<3rEt!|";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1220, "a~Th&J^E(Yw<3rEt!|", "a~Th&J^E(Yw<3rEt!|", "a~Th&J^E(Yw<3rEt!|", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(16777226, 0);
      assertEquals(47, methodWriter0.getSize());
  }

  @Test
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(0, (-751));
      int int0 = methodWriter0.getSize();
      assertEquals(47, methodWriter0.getSize());
      assertEquals(47, int0);
  }

  @Test
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1417));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "!IMyX2d5C";
      stringArray0[1] = "s*2R94-+JOv";
      stringArray0[2] = "!IMyX2d5C";
      stringArray0[3] = "!IMyX2d5C";
      stringArray0[4] = "!IMyX2d5C";
      stringArray0[5] = "!IMyX2d5C";
      stringArray0[6] = "!IMyX2d5C";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-815), "!IMyX2d5C", "!IMyX2d5C", "!IMyX2d5C", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitTypeInsn((-815), "!IMyX2d5C");
      assertEquals(71, methodWriter0.getSize());
  }

  @Test
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn(5, "7)5NT", "7)5NT", "pJq\f^d.!H7fx");
      assertEquals(49, methodWriter0.getSize());
  }

  @Test
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn(191, "7)5NT", "pJq\f^d.!H7fx", "7)5NT");
      assertEquals(49, methodWriter0.getSize());
  }

  @Test
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1417));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "!IMyX2d5C";
      stringArray0[1] = "s*2R94-+JOv";
      stringArray0[2] = "!IMyX2d5C";
      stringArray0[3] = "!IMyX2d5C";
      stringArray0[4] = "!IMyX2d5C";
      stringArray0[5] = "!IMyX2d5C";
      stringArray0[6] = "!IMyX2d5C";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-815), "!IMyX2d5C", "!IMyX2d5C", "!IMyX2d5C", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMethodInsn(0, "java/lang/Object", "java/lang/Object", "java/lang/Object");
      assertEquals(71, methodWriter0.getSize());
  }

  @Test
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMethodInsn((int) (byte) (-113), "7)5NT", "pJq\f^d.!H7fx", "7)5NT");
      assertEquals(49, methodWriter0.getSize());
  }

  @Test
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1417));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "!IMyX2d5C";
      stringArray0[1] = "s*2R94-+JOv";
      stringArray0[2] = "!IMyX2d5C";
      stringArray0[3] = "!IMyX2d5C";
      stringArray0[4] = "!IMyX2d5C";
      stringArray0[5] = "!IMyX2d5C";
      stringArray0[6] = "!IMyX2d5C";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-815), "!IMyX2d5C", "!IMyX2d5C", "!IMyX2d5C", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(285212681, label0);
      assertEquals("L1478237658", label0.toString());
      assertEquals(71, methodWriter0.getSize());
  }

  @Test
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      String[] stringArray0 = new String[10];
      stringArray0[0] = "7)5NT";
      stringArray0[1] = "7)5NT";
      stringArray0[2] = "7)5NT";
      stringArray0[3] = "pJq\f^d.!H7fx";
      stringArray0[4] = "pJq\f^d.!H7fx";
      stringArray0[5] = "7)5NT";
      stringArray0[6] = "pJq\f^d.!H7fx";
      stringArray0[7] = "7)5NT";
      stringArray0[8] = "7)5NT";
      stringArray0[9] = "7)5NT";
      Label label0 = new Label();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", stringArray0, true, false);
      methodWriter0.visitLabel(label0);
      assertEquals("L749103994", label0.toString());
  }

  @Test
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((int) (byte)122);
      String[] stringArray0 = new String[10];
      stringArray0[0] = "L@GS";
      stringArray0[1] = "JCn#&G";
      stringArray0[2] = "L@GS";
      stringArray0[3] = "RuntimeInvisibleAnnotations";
      stringArray0[4] = "L@GS";
      stringArray0[5] = "JCn#&G";
      stringArray0[6] = "L@GS";
      stringArray0[7] = "JCn#&G";
      stringArray0[8] = "";
      stringArray0[9] = "L@GS";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (int) (byte)122, "L@GS", "JCn#&G", "JCn#&G", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitLdcInsn((Object) "Thu Jan 01 00:59:59 GMT 1970");
      assertEquals(64, methodWriter0.getSize());
  }

  @Test
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "7)5NT";
      stringArray0[1] = "pJq\f^d.!H7fx";
      stringArray0[2] = "7)5NT";
      stringArray0[3] = "7)5NT";
      stringArray0[4] = "7)5NT";
      stringArray0[5] = "pJq\f^d.!H7fx";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", stringArray0, true, true);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitLdcInsn((Object) "/");
      assertEquals(68, methodWriter0.getSize());
  }

  @Test
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIincInsn(0, 0);
      assertEquals(49, methodWriter0.getSize());
  }

  @Test
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIincInsn(0, 0);
      assertEquals(49, methodWriter0.getSize());
  }

  @Test
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "7)5NT";
      stringArray0[1] = "pJq\f^d.!H7fx";
      stringArray0[2] = "7)5NT";
      stringArray0[3] = "7)5NT";
      stringArray0[4] = "7)5NT";
      stringArray0[5] = "pJq\f^d.!H7fx";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", stringArray0, true, true);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIincInsn(0, 1723);
      assertEquals(72, methodWriter0.getSize());
  }

  @Test
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1417));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "!IMyX2d5C";
      stringArray0[1] = "s*2R94-+JOv";
      stringArray0[2] = "!IMyX2d5C";
      stringArray0[3] = "!IMyX2d5C";
      stringArray0[4] = "!IMyX2d5C";
      stringArray0[5] = "!IMyX2d5C";
      stringArray0[6] = "!IMyX2d5C";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-815), "!IMyX2d5C", "!IMyX2d5C", "!IMyX2d5C", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, methodWriter0.exceptions, labelArray0);
      assertEquals(88, methodWriter0.getSize());
      assertEquals("L1134544301", label0.toString());
  }

  @Test
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      String[] stringArray0 = new String[10];
      stringArray0[0] = "7)5NT";
      stringArray0[1] = "7)5NT";
      stringArray0[2] = "7)5NT";
      stringArray0[3] = "pJq\f^d.!H7fx";
      stringArray0[4] = "pJq\f^d.!H7fx";
      stringArray0[5] = "7)5NT";
      stringArray0[6] = "pJq\f^d.!H7fx";
      stringArray0[7] = "7)5NT";
      stringArray0[8] = "7)5NT";
      stringArray0[9] = "7)5NT";
      Label label0 = new Label();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", stringArray0, true, false);
      Label[] labelArray0 = new Label[9];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      labelArray0[5] = label0;
      labelArray0[6] = label0;
      labelArray0[7] = label0;
      labelArray0[8] = label0;
      methodWriter0.visitTableSwitchInsn((-1), 52, label0, labelArray0);
      assertEquals("L1654233914", label0.toString());
      
      methodWriter0.visitMaxs(0, 170);
      assertEquals(126, methodWriter0.getSize());
  }

  @Test
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMultiANewArrayInsn("pJq\f^d.!H7fx", 2027);
      assertEquals(50, methodWriter0.getSize());
  }

  @Test
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "7)5NT";
      stringArray0[1] = "pJq\f^d.!H7fx";
      stringArray0[2] = "7)5NT";
      stringArray0[3] = "7)5NT";
      stringArray0[4] = "7)5NT";
      stringArray0[5] = "pJq\f^d.!H7fx";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", stringArray0, true, true);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMultiANewArrayInsn("7)5NT", 42);
      assertEquals(70, methodWriter0.getSize());
  }

  @Test
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "7)5NT");
      assertEquals("L46910260", label0.toString());
      assertEquals(28, methodWriter0.getSize());
  }

  @Test
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "7)5NT";
      stringArray0[1] = "pJq\f^d.!H7fx";
      stringArray0[2] = "7)5NT";
      stringArray0[3] = "7)5NT";
      stringArray0[4] = "7)5NT";
      stringArray0[5] = "pJq\f^d.!H7fx";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", stringArray0, true, true);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("pJq\f^d.!H7fx", "pJq\f^d.!H7fx", "pJq\f^d.!H7fx", label0, label0, (-429));
      methodWriter0.visitLocalVariable("pJq\f^d.!H7fx", "7)5NT", "7)5NT", label0, label0, 6);
      assertEquals("L1971050858", label0.toString());
  }

  @Test
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1941);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 119, "", "", "", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("", "", "", label0, label0, 1160);
      assertEquals("L197883358", label0.toString());
  }

  @Test
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1417));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "!IMyX2d5C";
      stringArray0[1] = "s*2R94-+JOv";
      stringArray0[2] = "!IMyX2d5C";
      stringArray0[3] = "!IMyX2d5C";
      stringArray0[4] = "!IMyX2d5C";
      stringArray0[5] = "!IMyX2d5C";
      stringArray0[6] = "!IMyX2d5C";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-815), "!IMyX2d5C", "!IMyX2d5C", "!IMyX2d5C", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMaxs((-263), (-2009));
      assertEquals(50, methodWriter0.getSize());
  }

  @Test
  public void test40()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "t, s3wP[=]|Bj?5zOr";
      stringArray0[1] = "t, s3wP[=]|Bj?5zOr";
      stringArray0[2] = "t, s3wP[=]|Bj?5zOr";
      stringArray0[3] = "t, s3wP[=]|Bj?5zOr";
      stringArray0[4] = "t, s3wP[=]|Bj?5zOr";
      stringArray0[5] = "t, s3wP[=]|Bj?5zOr";
      stringArray0[6] = "t, s3wP[=]|Bj?5zOr";
      stringArray0[7] = "t, s3wP[=]|Bj?5zOr";
      stringArray0[8] = "t, s3wP[=]|Bj?5zOr";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 0, "t, s3wP[=]|Bj?5zOr", "t, s3wP[=]|Bj?5zOr", "t, s3wP[=]|Bj?5zOr", stringArray0, true, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: 18
         */
      }
  }

  @Test
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test
  public void test42()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      classWriter0.version = (-751);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "7)5NT";
      stringArray0[1] = "pJq\f^d.!H7fx";
      stringArray0[2] = "7)5NT";
      stringArray0[3] = "7)5NT";
      stringArray0[4] = "7)5NT";
      stringArray0[5] = "pJq\f^d.!H7fx";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", stringArray0, true, true);
      assertNotNull(methodWriter0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(42, int0);
  }

  @Test
  public void test43()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      classWriter0.version = (-751);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "7)5NT";
      stringArray0[1] = "pJq\f^d.!H7fx";
      stringArray0[2] = "7)5NT";
      stringArray0[3] = "7)5NT";
      stringArray0[4] = "7)5NT";
      stringArray0[5] = "pJq\f^d.!H7fx";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", stringArray0, true, true);
      assertNotNull(methodWriter0);
      
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
      assertEquals(42, methodWriter0.getSize());
  }

  @Test
  public void test44()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.visitAnnotationDefault();
      methodWriter0.put(byteVector0);
      assertEquals(34, methodWriter0.getSize());
  }

  @Test
  public void test45()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(41);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "InnerClasses";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 128, "InnerClasses", "InnerClasses", "InnerClasses", stringArray0, false, false);
      assertNotNull(methodWriter0);
      
      ByteVector byteVector0 = new ByteVector(0);
      methodWriter0.visitAnnotation("InnerClasses", false);
      methodWriter0.put(byteVector0);
      assertEquals(38, methodWriter0.getSize());
  }

  @Test
  public void test46()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "7)5NT";
      stringArray0[1] = "pJq\f^d.!H7fx";
      stringArray0[2] = "7)5NT";
      stringArray0[3] = "7)5NT";
      stringArray0[4] = "7)5NT";
      stringArray0[5] = "pJq\f^d.!H7fx";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", stringArray0, true, true);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(6, (-751));
      ByteVector byteVector0 = new ByteVector();
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("pJq\f^d.!H7fx", "7)5NT", "7)5NT", label0, label0, 6);
      assertEquals("L1423998956", label0.toString());
      
      methodWriter0.put(byteVector0);
      assertEquals(103, methodWriter0.getSize());
  }

  @Test
  public void test47()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "7)5NT";
      stringArray0[1] = "pJq\f^d.!H7fx";
      stringArray0[2] = "7)5NT";
      stringArray0[3] = "7)5NT";
      stringArray0[4] = "7)5NT";
      stringArray0[5] = "pJq\f^d.!H7fx";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", stringArray0, true, true);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(6, (-751));
      ByteVector byteVector0 = new ByteVector();
      Label label0 = new Label();
      methodWriter0.visitLineNumber(1244, label0);
      methodWriter0.put(byteVector0);
      assertEquals(79, methodWriter0.getSize());
  }

  @Test
  public void test48()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-751));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "7)5NT";
      stringArray0[1] = "pJq\f^d.!H7fx";
      stringArray0[2] = "7)5NT";
      stringArray0[3] = "7)5NT";
      stringArray0[4] = "7)5NT";
      stringArray0[5] = "pJq\f^d.!H7fx";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-751), "7)5NT", "7)5NT", "pJq\f^d.!H7fx", stringArray0, true, true);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      MethodWriter.getNewOffset(methodWriter0.exceptions, methodWriter0.exceptions, label0);
      assertEquals("L995327512", label0.toString());
  }

  @Test
  public void test49()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = (-751);
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, (-751), (-1522));
      assertEquals((-20), int0);
  }

  @Test
  public void test50()  throws Throwable  {
      int[] intArray0 = new int[7];
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, (-749), 1501);
      assertEquals(2250, int0);
  }

  @Test
  public void test51()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = (-751);
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, (-751), (-751));
      assertEquals(0, int0);
  }
}
