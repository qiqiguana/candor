/*
 * This file was automatically generated by EvoSuite
 */

package wheel.asm;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoSuiteRunner.class)
public class FieldWriterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1602);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1602, "", "", "", (Object) null);
      assertNotNull(fieldWriter0);
      
      // Undeclared exception!
      try {
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-407));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-407), "NotFileFilter(AgeFileFilter(<=-407))", "NotFileFilter(AgeFileFilter(<=-407))", "NotFileFilter(AgeFileFilter(<=-407))", (Object) "NotFileFilter(AgeFileFilter(<=-407))");
      assertNotNull(fieldWriter0);
      
      fieldWriter0.visitEnd();
      assertEquals(36, fieldWriter0.getSize());
  }

  @Test
  public void test2()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-407));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-407), "NotFileFilter(AgeFileFilter(<=-407))", "NotFileFilter(AgeFileFilter(<=-407))", "NotFileFilter(AgeFileFilter(<=-407))", (Object) "NotFileFilter(AgeFileFilter(<=-407))");
      assertEquals(36, fieldWriter0.getSize());
      assertNotNull(fieldWriter0);
      
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 42, "kt>pY*K-{9^", "NotFileFilter(AgeFileFilter(<=-407))", (String) null, (Object) null);
      assertNotNull(fieldWriter1);
      assertEquals(8, fieldWriter1.getSize());
  }

  @Test
  public void test3()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-407));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-407), "NotFileFilter(AgeFileFilter(<=-407))", "NotFileFilter(AgeFileFilter(<=-407))", "NotFileFilter(AgeFileFilter(<=-407))", (Object) "NotFileFilter(AgeFileFilter(<=-407))");
      assertNotNull(fieldWriter0);
      
      fieldWriter0.visitAnnotation("NotFileFilter(AgeFileFilter(<=-407))", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, fieldWriter0.getSize());
      assertEquals(48, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-407));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-407), "NotFileFilter(AgeFileFilter(<=-407))", "NotFileFilter(AgeFileFilter(<=-407))", "NotFileFilter(AgeFileFilter(<=-407))", (Object) "NotFileFilter(AgeFileFilter(<=-407))");
      fieldWriter0.visitAnnotation("kt>pY*K-{9^", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test
  public void test5()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-407));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 42, "kt>pY*K-{9^", "NotFileFilter(AgeFileFilter(<=-407))", (String) null, (Object) null);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test
  public void test6()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-407));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-407), "NotFileFilter(AgeFileFilter(<=-407))", "NotFileFilter(AgeFileFilter(<=-407))", "NotFileFilter(AgeFileFilter(<=-407))", (Object) "NotFileFilter(AgeFileFilter(<=-407))");
      assertNotNull(fieldWriter0);
      
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test
  public void test7()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-407));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-407), "NotFileFilter(AgeFileFilter(<=-407))", "NotFileFilter(AgeFileFilter(<=-407))", "NotFileFilter(AgeFileFilter(<=-407))", (Object) "NotFileFilter(AgeFileFilter(<=-407))");
      assertEquals(36, fieldWriter0.getSize());
      assertNotNull(fieldWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "NotFileFilter(AgeFileFilter(<=-407))";
      stringArray0[1] = "kt>pY*K-{9^";
      stringArray0[2] = "kt>pY*K-{9^";
      stringArray0[3] = "NotFileFilter(AgeFileFilter(<=-407))";
      stringArray0[4] = "NotFileFilter(AgeFileFilter(<=-407))";
      stringArray0[5] = "NotFileFilter(AgeFileFilter(<=-407))";
      stringArray0[6] = "kt>pY*K-{9^";
      stringArray0[7] = "kt>pY*K-{9^";
      classWriter0.visit((-407), (-407), "NotFileFilter(AgeFileFilter(<=-407))", "NotFileFilter(AgeFileFilter(<=-407))", "NotFileFilter(AgeFileFilter(<=-407))", stringArray0);
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-407));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-407), "NotFileFilter(AgeFileFilter(<=-407))", "NotFileFilter(AgeFileFilter(<=-407))", "NotFileFilter(AgeFileFilter(<=-407))", (Object) "NotFileFilter(AgeFileFilter(<=-407))");
      assertNotNull(fieldWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "NotFileFilter(AgeFileFilter(<=-407))";
      stringArray0[1] = "kt>pY*K-{9^";
      stringArray0[2] = "kt>pY*K-{9^";
      stringArray0[3] = "NotFileFilter(AgeFileFilter(<=-407))";
      stringArray0[4] = "NotFileFilter(AgeFileFilter(<=-407))";
      stringArray0[5] = "NotFileFilter(AgeFileFilter(<=-407))";
      stringArray0[6] = "kt>pY*K-{9^";
      stringArray0[7] = "kt>pY*K-{9^";
      classWriter0.visit((-407), (-407), "NotFileFilter(AgeFileFilter(<=-407))", "NotFileFilter(AgeFileFilter(<=-407))", "NotFileFilter(AgeFileFilter(<=-407))", stringArray0);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      assertEquals(30, fieldWriter0.getSize());
  }

  @Test
  public void test9()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-407));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-407), "NotFileFilter(AgeFileFilter(<=-407))", "NotFileFilter(AgeFileFilter(<=-407))", "NotFileFilter(AgeFileFilter(<=-407))", (Object) "NotFileFilter(AgeFileFilter(<=-407))");
      assertNotNull(fieldWriter0);
      
      fieldWriter0.visitAnnotation("NotFileFilter(AgeFileFilter(<=-407))", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      assertEquals(48, fieldWriter0.getSize());
  }
}
