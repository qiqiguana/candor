/*
 * This file was automatically generated by EvoSuite
 */

package wheel.asm;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import wheel.asm.ByteVector;
import wheel.asm.Label;
import wheel.asm.MethodWriter;

@RunWith(EvoSuiteRunner.class)
public class LabelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Label label0 = new Label();
      String string0 = label0.toString();
      assertNotNull(string0);
      assertEquals("L1885988371", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      Label label0 = new Label();
      byte[] byteArray0 = new byte[24];
      label0.resolve((MethodWriter) null, 25165807, byteArray0);
      int int0 = label0.getOffset();
      assertEquals(2, label0.status);
      assertEquals(25165807, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      Label label0 = new Label();
      // Undeclared exception!
      try {
        label0.getOffset();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Label offset position has not been resolved yet
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Label label0 = new Label();
      ByteVector byteVector0 = new ByteVector();
      byte[] byteArray0 = new byte[24];
      label0.resolve((MethodWriter) null, 25165807, byteArray0);
      label0.put((MethodWriter) null, byteVector0, 0, true);
      assertEquals(2, label0.status);
      assertEquals("L1830596076", label0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      Label label0 = new Label();
      ByteVector byteVector0 = new ByteVector();
      label0.put((MethodWriter) null, byteVector0, 1024, true);
      label0.put((MethodWriter) null, byteVector0, (-2047), true);
      label0.put((MethodWriter) null, byteVector0, 1024, false);
      label0.put((MethodWriter) null, byteVector0, 0, false);
      assertEquals("L1724053473", label0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      Label label0 = new Label();
      ByteVector byteVector0 = new ByteVector();
      byte[] byteArray0 = new byte[24];
      label0.resolve((MethodWriter) null, 25165807, byteArray0);
      label0.put((MethodWriter) null, byteVector0, 0, false);
      assertEquals(2, label0.status);
      assertEquals("L434821509", label0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      Label label0 = new Label();
      ByteVector byteVector0 = new ByteVector();
      label0.put((MethodWriter) null, byteVector0, (-2047), true);
      byte[] byteArray0 = new byte[24];
      label0.resolve((MethodWriter) null, (-2047), byteArray0);
      assertEquals(2, label0.status);
      assertEquals("L1814262585", label0.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      Label label0 = new Label();
      ByteVector byteVector0 = new ByteVector();
      label0.put((MethodWriter) null, byteVector0, 1024, true);
      label0.put((MethodWriter) null, byteVector0, (-2047), true);
      label0.put((MethodWriter) null, byteVector0, 1024, false);
      byte[] byteArray0 = new byte[24];
      boolean boolean0 = label0.resolve((MethodWriter) null, 25165807, byteArray0);
      assertEquals(2, label0.status);
      assertEquals(true, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      Label label0 = new Label();
      label0.getFirst();
      assertEquals("L85276026", label0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      Label label0 = new Label();
      label0.visitSubroutine((Label) null, (long) 0, 0);
      assertEquals(1024, label0.status);
      assertEquals("L1495218369", label0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      Label label0 = new Label();
      label0.addToSubroutine((long) 0, 0);
      boolean boolean0 = label0.inSubroutine((long) 1024);
      assertEquals(1024, label0.status);
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      Label label0 = new Label();
      ByteVector byteVector0 = new ByteVector();
      label0.visitSubroutine(label0, (long) 1024, 1024);
      label0.put((MethodWriter) null, byteVector0, 1024, true);
      label0.visitSubroutine((Label) null, (long) (byte)1, (int) (byte) (-1));
      assertEquals(1024, label0.status);
      assertEquals("L725699238", label0.toString());
  }

  @Test
  public void test12()  throws Throwable  {
      Label label0 = new Label();
      label0.addToSubroutine((long) 0, 0);
      boolean boolean0 = label0.inSameSubroutine(label0);
      assertEquals(1024, label0.status);
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      Label label0 = new Label();
      ByteVector byteVector0 = new ByteVector();
      label0.put((MethodWriter) null, byteVector0, 1024, true);
      boolean boolean0 = label0.inSameSubroutine(label0);
      assertEquals("L1615728158", label0.toString());
      assertEquals(true, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      Label label0 = new Label();
      label0.visitSubroutine(label0, (long) 1024, 1024);
      // Undeclared exception!
      try {
        label0.addToSubroutine((long) (byte)0, 1026);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      Label label0 = new Label();
      label0.visitSubroutine(label0, (long) 1024, 1024);
      label0.visitSubroutine(label0, (long) 0, 0);
      assertEquals(1024, label0.status);
      assertEquals("L499151288", label0.toString());
  }
}
