/*
 * This file was automatically generated by EvoSuite
 */

package wheel.asm;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import org.junit.BeforeClass;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;

@RunWith(EvoSuiteRunner.class)
public class ClassReaderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Class");
      assertNotNull(classReader0);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, 0);
      assertNotNull(classWriter0);
      
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 995);
      assertEquals("java/lang/Object", classReader0.getSuperName());
      assertEquals("java/lang/Class", classReader0.getClassName());
  }

  @Test
  public void test1()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      assertNotNull(classReader0);
      
      int int0 = classReader0.getAccess();
      assertEquals(33, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Class");
      assertNotNull(classReader0);
      
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) null);
      // Undeclared exception!
      try {
        classReader0.accept((ClassVisitor) classAdapter0, 989);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Class");
      assertNotNull(classReader0);
      
      ClassWriter classWriter0 = new ClassWriter(1);
      classReader0.accept((ClassVisitor) classWriter0, 0);
      assertEquals("java/lang/Class", classReader0.getClassName());
      assertEquals(49, classReader0.getAccess());
  }

  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = new ClassReader((InputStream) byteArrayInputStream0);
      // Undeclared exception!
      try {
        classReader0.getItem((int) (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 0
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Class");
      assertNotNull(classReader0);
      
      String string0 = classReader0.getClassName();
      assertNotNull(string0);
      assertEquals("java/lang/Class", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      assertNotNull(classReader0);
      
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
      assertNotNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      assertNotNull(classReader0);
      
      String string0 = classReader0.getSuperName();
      assertEquals(33, classReader0.getAccess());
      assertNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      ClassReader classReader0 = new ClassReader(byteArray0);
      String[] stringArray0 = classReader0.getInterfaces();
      assertNotNull(stringArray0);
  }

  @Test
  public void test9()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Class");
      assertNotNull(classReader0);
      
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(49, classReader0.getAccess());
      assertEquals("java/lang/Class", classReader0.getClassName());
      assertNotNull(stringArray0);
  }

  @Test
  public void test10()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("");
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * Class not found
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      assertNotNull(classReader0);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-2043));
      assertNotNull(classWriter0);
      
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, (-2043));
      assertEquals("java/lang/Object", classReader0.getSuperName());
      assertEquals("java/lang/String", classReader0.getClassName());
  }
}
