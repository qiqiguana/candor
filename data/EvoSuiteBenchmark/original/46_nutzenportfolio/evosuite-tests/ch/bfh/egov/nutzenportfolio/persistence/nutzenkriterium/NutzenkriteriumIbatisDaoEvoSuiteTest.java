/*
 * This file was automatically generated by EvoSuite
 */

package ch.bfh.egov.nutzenportfolio.persistence.nutzenkriterium;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import ch.bfh.egov.nutzenportfolio.persistence.nutzenkriterium.NutzenkriteriumIbatisDao;
import ch.bfh.egov.nutzenportfolio.tos.NaOpNu;
import ch.bfh.egov.nutzenportfolio.tos.Nutzenkriterium;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class NutzenkriteriumIbatisDaoEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      NutzenkriteriumIbatisDao nutzenkriteriumIbatisDao0 = new NutzenkriteriumIbatisDao();
      Integer integer0 = new Integer(718);
      // Undeclared exception!
      try {
        nutzenkriteriumIbatisDao0.unsetAssignmentGewichtung(integer0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      NutzenkriteriumIbatisDao nutzenkriteriumIbatisDao0 = new NutzenkriteriumIbatisDao();
      // Undeclared exception!
      try {
        nutzenkriteriumIbatisDao0.delete((Nutzenkriterium) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      NutzenkriteriumIbatisDao nutzenkriteriumIbatisDao0 = new NutzenkriteriumIbatisDao();
      // Undeclared exception!
      try {
        nutzenkriteriumIbatisDao0.getAll((Integer) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      NutzenkriteriumIbatisDao nutzenkriteriumIbatisDao0 = new NutzenkriteriumIbatisDao();
      // Undeclared exception!
      try {
        nutzenkriteriumIbatisDao0.getLinkedCustomizings((Nutzenkriterium) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      NutzenkriteriumIbatisDao nutzenkriteriumIbatisDao0 = new NutzenkriteriumIbatisDao();
      // Undeclared exception!
      try {
        nutzenkriteriumIbatisDao0.getByNaOpNuAndKategorie((Nutzenkriterium) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      NutzenkriteriumIbatisDao nutzenkriteriumIbatisDao0 = new NutzenkriteriumIbatisDao();
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      // Undeclared exception!
      try {
        nutzenkriteriumIbatisDao0.getByName(nutzenkriterium0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      NutzenkriteriumIbatisDao nutzenkriteriumIbatisDao0 = new NutzenkriteriumIbatisDao();
      // Undeclared exception!
      try {
        nutzenkriteriumIbatisDao0.getDefaultFragen((Nutzenkriterium) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      NutzenkriteriumIbatisDao nutzenkriteriumIbatisDao0 = new NutzenkriteriumIbatisDao();
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      // Undeclared exception!
      try {
        nutzenkriteriumIbatisDao0.getAssignmentById(nutzenkriterium0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      NutzenkriteriumIbatisDao nutzenkriteriumIbatisDao0 = new NutzenkriteriumIbatisDao();
      // Undeclared exception!
      try {
        nutzenkriteriumIbatisDao0.deleteAssignments((Integer) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      NutzenkriteriumIbatisDao nutzenkriteriumIbatisDao0 = new NutzenkriteriumIbatisDao();
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      // Undeclared exception!
      try {
        nutzenkriteriumIbatisDao0.insert(nutzenkriterium0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      NutzenkriteriumIbatisDao nutzenkriteriumIbatisDao0 = new NutzenkriteriumIbatisDao();
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      // Undeclared exception!
      try {
        nutzenkriteriumIbatisDao0.getById(nutzenkriterium0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      NutzenkriteriumIbatisDao nutzenkriteriumIbatisDao0 = new NutzenkriteriumIbatisDao();
      // Undeclared exception!
      try {
        nutzenkriteriumIbatisDao0.updateAssignmentGewichtung((Nutzenkriterium) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      NutzenkriteriumIbatisDao nutzenkriteriumIbatisDao0 = new NutzenkriteriumIbatisDao();
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      // Undeclared exception!
      try {
        nutzenkriteriumIbatisDao0.update(nutzenkriterium0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      NutzenkriteriumIbatisDao nutzenkriteriumIbatisDao0 = new NutzenkriteriumIbatisDao();
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      // Undeclared exception!
      try {
        nutzenkriteriumIbatisDao0.deleteAssignment(nutzenkriterium0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      NutzenkriteriumIbatisDao nutzenkriteriumIbatisDao0 = new NutzenkriteriumIbatisDao();
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      // Undeclared exception!
      try {
        nutzenkriteriumIbatisDao0.getByKategorie(nutzenkriterium0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test15()  throws Throwable  {
      NutzenkriteriumIbatisDao nutzenkriteriumIbatisDao0 = new NutzenkriteriumIbatisDao();
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      // Undeclared exception!
      try {
        nutzenkriteriumIbatisDao0.updateAssignment(nutzenkriterium0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test16()  throws Throwable  {
      NutzenkriteriumIbatisDao nutzenkriteriumIbatisDao0 = new NutzenkriteriumIbatisDao();
      NaOpNu naOpNu0 = new NaOpNu();
      // Undeclared exception!
      try {
        nutzenkriteriumIbatisDao0.getByProjektId(naOpNu0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test17()  throws Throwable  {
      NutzenkriteriumIbatisDao nutzenkriteriumIbatisDao0 = new NutzenkriteriumIbatisDao();
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      // Undeclared exception!
      try {
        nutzenkriteriumIbatisDao0.getAssignments(nutzenkriterium0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      NutzenkriteriumIbatisDao nutzenkriteriumIbatisDao0 = new NutzenkriteriumIbatisDao();
      // Undeclared exception!
      try {
        nutzenkriteriumIbatisDao0.insertAssignment((Nutzenkriterium) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }
}
