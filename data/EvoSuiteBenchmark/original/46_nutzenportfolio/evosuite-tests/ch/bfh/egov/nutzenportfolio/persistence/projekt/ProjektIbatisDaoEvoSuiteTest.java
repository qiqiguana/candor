/*
 * This file was automatically generated by EvoSuite
 */

package ch.bfh.egov.nutzenportfolio.persistence.projekt;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import ch.bfh.egov.nutzenportfolio.persistence.projekt.ProjektIbatisDao;
import ch.bfh.egov.nutzenportfolio.tos.Projekt;
import ch.bfh.egov.nutzenportfolio.tos.Projektgruppe;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ProjektIbatisDaoEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ProjektIbatisDao projektIbatisDao0 = new ProjektIbatisDao();
      Projekt projekt0 = new Projekt();
      // Undeclared exception!
      try {
        projektIbatisDao0.delete(projekt0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ProjektIbatisDao projektIbatisDao0 = new ProjektIbatisDao();
      // Undeclared exception!
      try {
        projektIbatisDao0.update((Projekt) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ProjektIbatisDao projektIbatisDao0 = new ProjektIbatisDao();
      Integer integer0 = new Integer(364);
      // Undeclared exception!
      try {
        projektIbatisDao0.getAll(integer0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ProjektIbatisDao projektIbatisDao0 = new ProjektIbatisDao();
      Long long0 = new Long((-1271L));
      // Undeclared exception!
      try {
        projektIbatisDao0.getByUID(long0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      ProjektIbatisDao projektIbatisDao0 = new ProjektIbatisDao();
      Projekt projekt0 = new Projekt();
      // Undeclared exception!
      try {
        projektIbatisDao0.getByName(projekt0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      ProjektIbatisDao projektIbatisDao0 = new ProjektIbatisDao();
      Projektgruppe projektgruppe0 = new Projektgruppe();
      // Undeclared exception!
      try {
        projektIbatisDao0.getGroup(projektgruppe0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      ProjektIbatisDao projektIbatisDao0 = new ProjektIbatisDao();
      Projekt projekt0 = new Projekt();
      // Undeclared exception!
      try {
        projektIbatisDao0.insert(projekt0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      ProjektIbatisDao projektIbatisDao0 = new ProjektIbatisDao();
      Projekt projekt0 = new Projekt();
      // Undeclared exception!
      try {
        projektIbatisDao0.updateStatus(projekt0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      ProjektIbatisDao projektIbatisDao0 = new ProjektIbatisDao();
      Projekt projekt0 = new Projekt();
      // Undeclared exception!
      try {
        projektIbatisDao0.getById(projekt0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }
}
