/*
 * This file was automatically generated by EvoSuite
 */

package ch.bfh.egov.nutzenportfolio.service.customizing;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import ch.bfh.egov.nutzenportfolio.persistence.auswahlfeld.AuswahlfeldDao;
import ch.bfh.egov.nutzenportfolio.persistence.auswahlfeld.AuswahlfeldIbatisDao;
import ch.bfh.egov.nutzenportfolio.persistence.common.CommonDao;
import ch.bfh.egov.nutzenportfolio.persistence.common.CommonIbatisDao;
import ch.bfh.egov.nutzenportfolio.persistence.customizing.CustomizingDao;
import ch.bfh.egov.nutzenportfolio.persistence.customizing.CustomizingIbatisDao;
import ch.bfh.egov.nutzenportfolio.persistence.detailziele.DetailzieleDao;
import ch.bfh.egov.nutzenportfolio.persistence.detailziele.DetailzieleIbatisDao;
import ch.bfh.egov.nutzenportfolio.persistence.fragebogen.NaOpNuDao;
import ch.bfh.egov.nutzenportfolio.persistence.fragebogen.NaOpNuIbatisDao;
import ch.bfh.egov.nutzenportfolio.persistence.fragebogen.ProjektattraktivitaetDao;
import ch.bfh.egov.nutzenportfolio.persistence.fragebogen.ProjektattraktivitaetIbatisDao;
import ch.bfh.egov.nutzenportfolio.persistence.kategorie.KategorieDao;
import ch.bfh.egov.nutzenportfolio.persistence.kategorie.KategorieIbatisDao;
import ch.bfh.egov.nutzenportfolio.persistence.nutzenkriterium.NutzenkriteriumDao;
import ch.bfh.egov.nutzenportfolio.persistence.nutzenkriterium.NutzenkriteriumIbatisDao;
import ch.bfh.egov.nutzenportfolio.persistence.projekt.ProjektDao;
import ch.bfh.egov.nutzenportfolio.persistence.projekt.ProjektIbatisDao;
import ch.bfh.egov.nutzenportfolio.persistence.strategischeziele.StrategischeZieleDao;
import ch.bfh.egov.nutzenportfolio.persistence.strategischeziele.StrategischeZieleIbatisDao;
import ch.bfh.egov.nutzenportfolio.service.auswahlfeld.AuswahlfeldDaoService;
import ch.bfh.egov.nutzenportfolio.service.auswahlfeld.AuswahlfeldService;
import ch.bfh.egov.nutzenportfolio.service.common.CommonDaoService;
import ch.bfh.egov.nutzenportfolio.service.common.CommonService;
import ch.bfh.egov.nutzenportfolio.service.customizing.CustomizingDaoService;
import ch.bfh.egov.nutzenportfolio.service.customizing.CustomizingService;
import ch.bfh.egov.nutzenportfolio.service.detailziele.DetailzieleDaoService;
import ch.bfh.egov.nutzenportfolio.service.detailziele.DetailzieleService;
import ch.bfh.egov.nutzenportfolio.service.fragebogen.NaOpNuDaoService;
import ch.bfh.egov.nutzenportfolio.service.fragebogen.NaOpNuService;
import ch.bfh.egov.nutzenportfolio.service.fragebogen.ProjektattraktivitaetDaoService;
import ch.bfh.egov.nutzenportfolio.service.fragebogen.ProjektattraktivitaetService;
import ch.bfh.egov.nutzenportfolio.service.kategorie.KategorieDaoService;
import ch.bfh.egov.nutzenportfolio.service.kategorie.KategorieService;
import ch.bfh.egov.nutzenportfolio.service.nutzenkriterium.NutzenkriteriumDaoService;
import ch.bfh.egov.nutzenportfolio.service.nutzenkriterium.NutzenkriteriumService;
import ch.bfh.egov.nutzenportfolio.service.projekt.ProjektDaoService;
import ch.bfh.egov.nutzenportfolio.service.projekt.ProjektService;
import ch.bfh.egov.nutzenportfolio.service.projektgruppe.ProjektgruppeService;
import ch.bfh.egov.nutzenportfolio.service.strategischeziele.StrategischeZieleDaoService;
import ch.bfh.egov.nutzenportfolio.service.strategischeziele.StrategischeZieleService;
import ch.bfh.egov.nutzenportfolio.tos.Customizing;
import javax.servlet.http.HttpServletRequest;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CustomizingDaoServiceEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CustomizingIbatisDao customizingIbatisDao0 = new CustomizingIbatisDao();
      CustomizingDaoService customizingDaoService0 = new CustomizingDaoService((CustomizingDao) customizingIbatisDao0);
      // Undeclared exception!
      try {
        customizingDaoService0.unsetStatus((HttpServletRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      CustomizingIbatisDao customizingIbatisDao0 = new CustomizingIbatisDao();
      CustomizingDaoService customizingDaoService0 = new CustomizingDaoService((CustomizingDao) customizingIbatisDao0);
      // Undeclared exception!
      try {
        customizingDaoService0.getByNaOpNuUID((Long) (-246L));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      CustomizingDaoService customizingDaoService0 = new CustomizingDaoService((CustomizingDao) null);
      CommonIbatisDao commonIbatisDao0 = new CommonIbatisDao();
      CommonDaoService commonDaoService0 = new CommonDaoService((CommonDao) commonIbatisDao0);
      StrategischeZieleIbatisDao strategischeZieleIbatisDao0 = new StrategischeZieleIbatisDao();
      StrategischeZieleDaoService strategischeZieleDaoService0 = new StrategischeZieleDaoService((StrategischeZieleDao) strategischeZieleIbatisDao0);
      DetailzieleIbatisDao detailzieleIbatisDao0 = new DetailzieleIbatisDao();
      DetailzieleDaoService detailzieleDaoService0 = new DetailzieleDaoService((DetailzieleDao) detailzieleIbatisDao0);
      AuswahlfeldIbatisDao auswahlfeldIbatisDao0 = new AuswahlfeldIbatisDao();
      AuswahlfeldDaoService auswahlfeldDaoService0 = new AuswahlfeldDaoService((AuswahlfeldDao) auswahlfeldIbatisDao0);
      KategorieIbatisDao kategorieIbatisDao0 = new KategorieIbatisDao();
      KategorieDaoService kategorieDaoService0 = new KategorieDaoService((KategorieDao) kategorieIbatisDao0);
      NutzenkriteriumIbatisDao nutzenkriteriumIbatisDao0 = new NutzenkriteriumIbatisDao();
      NutzenkriteriumDaoService nutzenkriteriumDaoService0 = new NutzenkriteriumDaoService((NutzenkriteriumDao) nutzenkriteriumIbatisDao0);
      NaOpNuIbatisDao naOpNuIbatisDao0 = new NaOpNuIbatisDao();
      ProjektIbatisDao projektIbatisDao0 = new ProjektIbatisDao();
      ProjektDaoService projektDaoService0 = new ProjektDaoService((ProjektDao) projektIbatisDao0, (ProjektgruppeService) null, (NaOpNuDao) naOpNuIbatisDao0);
      NaOpNuDaoService naOpNuDaoService0 = new NaOpNuDaoService((NaOpNuDao) naOpNuIbatisDao0, (ProjektService) projektDaoService0, (KategorieService) kategorieDaoService0, (NutzenkriteriumService) nutzenkriteriumDaoService0, (AuswahlfeldService) auswahlfeldDaoService0);
      ProjektattraktivitaetIbatisDao projektattraktivitaetIbatisDao0 = new ProjektattraktivitaetIbatisDao();
      ProjektattraktivitaetDaoService projektattraktivitaetDaoService0 = new ProjektattraktivitaetDaoService((ProjektattraktivitaetDao) projektattraktivitaetIbatisDao0, (ProjektService) projektDaoService0, (StrategischeZieleService) strategischeZieleDaoService0, (DetailzieleService) detailzieleDaoService0, (AuswahlfeldService) auswahlfeldDaoService0, (CustomizingService) customizingDaoService0);
      customizingDaoService0.init((CommonService) commonDaoService0, (StrategischeZieleService) strategischeZieleDaoService0, (DetailzieleService) detailzieleDaoService0, (AuswahlfeldService) auswahlfeldDaoService0, (KategorieService) kategorieDaoService0, (NutzenkriteriumService) nutzenkriteriumDaoService0, (NaOpNuService) naOpNuDaoService0, (ProjektattraktivitaetService) projektattraktivitaetDaoService0, (ProjektgruppeService) null);
  }

  @Test
  public void test3()  throws Throwable  {
      CustomizingDaoService customizingDaoService0 = new CustomizingDaoService((CustomizingDao) null);
      Customizing customizing0 = new Customizing();
      // Undeclared exception!
      try {
        customizingDaoService0.insert(customizing0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      CustomizingDaoService customizingDaoService0 = new CustomizingDaoService((CustomizingDao) null);
      // Undeclared exception!
      try {
        customizingDaoService0.update((Customizing) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      CustomizingIbatisDao customizingIbatisDao0 = new CustomizingIbatisDao();
      CustomizingDaoService customizingDaoService0 = new CustomizingDaoService((CustomizingDao) customizingIbatisDao0);
      // Undeclared exception!
      try {
        customizingDaoService0.getById((Customizing) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      CustomizingIbatisDao customizingIbatisDao0 = new CustomizingIbatisDao();
      CustomizingDaoService customizingDaoService0 = new CustomizingDaoService((CustomizingDao) customizingIbatisDao0);
      // Undeclared exception!
      try {
        customizingDaoService0.getAll((Integer) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      CustomizingIbatisDao customizingIbatisDao0 = new CustomizingIbatisDao();
      CustomizingDaoService customizingDaoService0 = new CustomizingDaoService((CustomizingDao) customizingIbatisDao0);
      Customizing customizing0 = new Customizing();
      // Undeclared exception!
      try {
        customizingDaoService0.getByName(customizing0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      CustomizingDaoService customizingDaoService0 = new CustomizingDaoService((CustomizingDao) null);
      // Undeclared exception!
      try {
        customizingDaoService0.cascadeDelete((HttpServletRequest) null, (Customizing) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      CustomizingIbatisDao customizingIbatisDao0 = new CustomizingIbatisDao();
      CustomizingDaoService customizingDaoService0 = new CustomizingDaoService((CustomizingDao) customizingIbatisDao0);
      // Undeclared exception!
      try {
        customizingDaoService0.getByPaUID((Long) (-1823L));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }
}
