/*
 * This file was automatically generated by EvoSuite
 */

package ch.bfh.egov.nutzenportfolio.tos;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import ch.bfh.egov.nutzenportfolio.tos.Nutzenkriterium;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class NutzenkriteriumEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      nutzenkriterium0.setName("");
      assertNull(nutzenkriterium0.getBeschreibung());
  }

  @Test
  public void test1()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      nutzenkriterium0.getMandantId();
  }

  @Test
  public void test2()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      String string0 = nutzenkriterium0.getFrage();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      nutzenkriterium0.getGewichtung();
  }

  @Test
  public void test4()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      nutzenkriterium0.setBeschreibung("");
      assertEquals("", nutzenkriterium0.getBeschreibung());
  }

  @Test
  public void test5()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      String string0 = nutzenkriterium0.getKategorieName();
      assertNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      nutzenkriterium0.setFrageManagementDefault((String) null);
      assertNull(nutzenkriterium0.getFrageProjektbetroffeneDefault());
  }

  @Test
  public void test7()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      nutzenkriterium0.getKategorieId();
  }

  @Test
  public void test8()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      nutzenkriterium0.setGewichtungen((List) linkedList0);
      assertNull(nutzenkriterium0.getFrageProjektbetroffene());
  }

  @Test
  public void test9()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      Integer integer0 = new Integer(0);
      nutzenkriterium0.setNutzenkriteriumId(integer0);
      assertNull(nutzenkriterium0.getFrageManagement());
  }

  @Test
  public void test10()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      nutzenkriterium0.setMandantId((Integer) null);
      assertNull(nutzenkriterium0.getName());
  }

  @Test
  public void test11()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      Integer integer0 = new Integer(1287);
      nutzenkriterium0.setKategorieId(integer0);
      assertNull(nutzenkriterium0.getFrageProjektbetroffeneDefault());
  }

  @Test
  public void test12()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      List<Object> list0 = nutzenkriterium0.getGewichtungen();
      assertNull(list0);
  }

  @Test
  public void test13()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      nutzenkriterium0.getNutzenattraktivitaetOperativerNutzenId();
  }

  @Test
  public void test14()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      String string0 = nutzenkriterium0.getName();
      assertNull(string0);
  }

  @Test
  public void test15()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      String string0 = nutzenkriterium0.getFrageProjektbetroffene();
      assertNull(string0);
  }

  @Test
  public void test16()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      String string0 = nutzenkriterium0.getBeschreibung();
      assertNull(string0);
  }

  @Test
  public void test17()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      Integer integer0 = new Integer(1);
      Double double0 = new Double((double) integer0);
      nutzenkriterium0.setGewichtung(double0);
      assertNull(nutzenkriterium0.getBeschreibung());
  }

  @Test
  public void test18()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      Integer integer0 = new Integer(1);
      nutzenkriterium0.setNutzenattraktivitaetOperativerNutzenId(integer0);
      assertEquals("1", integer0.toString());
  }

  @Test
  public void test19()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      nutzenkriterium0.setFrageManagement((String) null);
      assertNull(nutzenkriterium0.getName());
  }

  @Test
  public void test20()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      nutzenkriterium0.setFrageProjektbetroffeneDefault((String) null);
      assertNull(nutzenkriterium0.getName());
  }

  @Test
  public void test21()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      nutzenkriterium0.setFrageProjektbetroffene((String) null);
      assertNull(nutzenkriterium0.getFrageManagementDefault());
  }

  @Test
  public void test22()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      nutzenkriterium0.getNutzenkriteriumId();
  }

  @Test
  public void test23()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      String string0 = nutzenkriterium0.getFrageManagementDefault();
      assertNull(string0);
  }

  @Test
  public void test24()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      List<Object> list0 = nutzenkriterium0.getAbstufungen();
      assertNull(list0);
  }

  @Test
  public void test25()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      String string0 = nutzenkriterium0.getFrageProjektbetroffeneDefault();
      assertNull(string0);
  }

  @Test
  public void test26()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      Double double0 = new Double(0.0);
      nutzenkriterium0.setKategorieGewichtung(double0);
      assertEquals("0.0", double0.toString());
  }

  @Test
  public void test27()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      nutzenkriterium0.setFrage("");
      assertNull(nutzenkriterium0.getBeschreibung());
  }

  @Test
  public void test28()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      String string0 = nutzenkriterium0.getFrageManagement();
      assertNull(string0);
  }

  @Test
  public void test29()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      nutzenkriterium0.setAbstufungen((List) null);
      assertNull(nutzenkriterium0.getBeschreibung());
  }

  @Test
  public void test30()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      nutzenkriterium0.setKategorieName((String) null);
      assertNull(nutzenkriterium0.getName());
  }

  @Test
  public void test31()  throws Throwable  {
      Nutzenkriterium nutzenkriterium0 = new Nutzenkriterium();
      nutzenkriterium0.getKategorieGewichtung();
  }
}
