/*
 * This file was automatically generated by EvoSuite
 */

package ch.bfh.egov.nutzenportfolio.service.auswahlfeld;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import ch.bfh.egov.nutzenportfolio.persistence.auswahlfeld.AuswahlfeldDao;
import ch.bfh.egov.nutzenportfolio.persistence.auswahlfeld.AuswahlfeldIbatisDao;
import ch.bfh.egov.nutzenportfolio.persistence.common.CommonDao;
import ch.bfh.egov.nutzenportfolio.persistence.common.CommonIbatisDao;
import ch.bfh.egov.nutzenportfolio.persistence.customizing.CustomizingDao;
import ch.bfh.egov.nutzenportfolio.persistence.customizing.CustomizingIbatisDao;
import ch.bfh.egov.nutzenportfolio.persistence.nutzenkriterium.NutzenkriteriumDao;
import ch.bfh.egov.nutzenportfolio.persistence.nutzenkriterium.NutzenkriteriumIbatisDao;
import ch.bfh.egov.nutzenportfolio.persistence.strategischeziele.StrategischeZieleDao;
import ch.bfh.egov.nutzenportfolio.persistence.strategischeziele.StrategischeZieleIbatisDao;
import ch.bfh.egov.nutzenportfolio.service.auswahlfeld.AuswahlfeldDaoService;
import ch.bfh.egov.nutzenportfolio.service.common.CommonDaoService;
import ch.bfh.egov.nutzenportfolio.service.common.CommonService;
import ch.bfh.egov.nutzenportfolio.service.customizing.CustomizingDaoService;
import ch.bfh.egov.nutzenportfolio.service.customizing.CustomizingService;
import ch.bfh.egov.nutzenportfolio.service.nutzenkriterium.NutzenkriteriumDaoService;
import ch.bfh.egov.nutzenportfolio.service.nutzenkriterium.NutzenkriteriumService;
import ch.bfh.egov.nutzenportfolio.service.strategischeziele.StrategischeZieleDaoService;
import ch.bfh.egov.nutzenportfolio.service.strategischeziele.StrategischeZieleService;
import ch.bfh.egov.nutzenportfolio.tos.Auswahlfeld;
import javax.servlet.http.HttpServletRequest;
import org.apache.struts.action.DynaActionForm;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AuswahlfeldDaoServiceEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AuswahlfeldIbatisDao auswahlfeldIbatisDao0 = new AuswahlfeldIbatisDao();
      AuswahlfeldDaoService auswahlfeldDaoService0 = new AuswahlfeldDaoService((AuswahlfeldDao) auswahlfeldIbatisDao0);
      Auswahlfeld auswahlfeld0 = new Auswahlfeld();
      // Undeclared exception!
      try {
        auswahlfeldDaoService0.getByProjektId(auswahlfeld0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      AuswahlfeldDaoService auswahlfeldDaoService0 = new AuswahlfeldDaoService((AuswahlfeldDao) null);
      // Undeclared exception!
      try {
        auswahlfeldDaoService0.getGewichtungStatus((Integer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      AuswahlfeldIbatisDao auswahlfeldIbatisDao0 = new AuswahlfeldIbatisDao();
      AuswahlfeldDaoService auswahlfeldDaoService0 = new AuswahlfeldDaoService((AuswahlfeldDao) auswahlfeldIbatisDao0);
      // Undeclared exception!
      try {
        auswahlfeldDaoService0.deleteGewichtungen((Auswahlfeld) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      AuswahlfeldIbatisDao auswahlfeldIbatisDao0 = new AuswahlfeldIbatisDao();
      AuswahlfeldDaoService auswahlfeldDaoService0 = new AuswahlfeldDaoService((AuswahlfeldDao) auswahlfeldIbatisDao0);
      // Undeclared exception!
      try {
        auswahlfeldDaoService0.getAnzahlGewichtungen((Integer) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      AuswahlfeldDaoService auswahlfeldDaoService0 = new AuswahlfeldDaoService((AuswahlfeldDao) null);
      // Undeclared exception!
      try {
        auswahlfeldDaoService0.isOperativerNutzen((HttpServletRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      AuswahlfeldIbatisDao auswahlfeldIbatisDao0 = new AuswahlfeldIbatisDao();
      AuswahlfeldDaoService auswahlfeldDaoService0 = new AuswahlfeldDaoService((AuswahlfeldDao) auswahlfeldIbatisDao0);
      DynaActionForm dynaActionForm0 = new DynaActionForm();
      // Undeclared exception!
      try {
        auswahlfeldDaoService0.getAuswahlfeld((HttpServletRequest) null, dynaActionForm0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      AuswahlfeldIbatisDao auswahlfeldIbatisDao0 = new AuswahlfeldIbatisDao();
      AuswahlfeldDaoService auswahlfeldDaoService0 = new AuswahlfeldDaoService((AuswahlfeldDao) auswahlfeldIbatisDao0);
      Integer integer0 = new Integer((-3));
      // Undeclared exception!
      try {
        auswahlfeldDaoService0.getAbstufungStatus(integer0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      AuswahlfeldIbatisDao auswahlfeldIbatisDao0 = new AuswahlfeldIbatisDao();
      AuswahlfeldDaoService auswahlfeldDaoService0 = new AuswahlfeldDaoService((AuswahlfeldDao) auswahlfeldIbatisDao0);
      Auswahlfeld auswahlfeld0 = new Auswahlfeld();
      // Undeclared exception!
      try {
        auswahlfeldDaoService0.getSelectedByNaOpNuId(auswahlfeld0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      AuswahlfeldIbatisDao auswahlfeldIbatisDao0 = new AuswahlfeldIbatisDao();
      AuswahlfeldDaoService auswahlfeldDaoService0 = new AuswahlfeldDaoService((AuswahlfeldDao) auswahlfeldIbatisDao0);
      NutzenkriteriumIbatisDao nutzenkriteriumIbatisDao0 = new NutzenkriteriumIbatisDao();
      NutzenkriteriumDaoService nutzenkriteriumDaoService0 = new NutzenkriteriumDaoService((NutzenkriteriumDao) nutzenkriteriumIbatisDao0);
      CommonIbatisDao commonIbatisDao0 = new CommonIbatisDao();
      CommonDaoService commonDaoService0 = new CommonDaoService((CommonDao) commonIbatisDao0);
      CustomizingIbatisDao customizingIbatisDao0 = new CustomizingIbatisDao();
      CustomizingDaoService customizingDaoService0 = new CustomizingDaoService((CustomizingDao) customizingIbatisDao0);
      StrategischeZieleIbatisDao strategischeZieleIbatisDao0 = new StrategischeZieleIbatisDao();
      StrategischeZieleDaoService strategischeZieleDaoService0 = new StrategischeZieleDaoService((StrategischeZieleDao) strategischeZieleIbatisDao0);
      auswahlfeldDaoService0.init((NutzenkriteriumService) nutzenkriteriumDaoService0, (CommonService) commonDaoService0, (CustomizingService) customizingDaoService0, (StrategischeZieleService) strategischeZieleDaoService0);
  }

  @Test
  public void test9()  throws Throwable  {
      AuswahlfeldIbatisDao auswahlfeldIbatisDao0 = new AuswahlfeldIbatisDao();
      AuswahlfeldDaoService auswahlfeldDaoService0 = new AuswahlfeldDaoService((AuswahlfeldDao) auswahlfeldIbatisDao0);
      // Undeclared exception!
      try {
        auswahlfeldDaoService0.next((HttpServletRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      AuswahlfeldIbatisDao auswahlfeldIbatisDao0 = new AuswahlfeldIbatisDao();
      AuswahlfeldDaoService auswahlfeldDaoService0 = new AuswahlfeldDaoService((AuswahlfeldDao) auswahlfeldIbatisDao0);
      // Undeclared exception!
      try {
        auswahlfeldDaoService0.getAnzahlAbstufungen((Integer) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      AuswahlfeldIbatisDao auswahlfeldIbatisDao0 = new AuswahlfeldIbatisDao();
      AuswahlfeldDaoService auswahlfeldDaoService0 = new AuswahlfeldDaoService((AuswahlfeldDao) auswahlfeldIbatisDao0);
      // Undeclared exception!
      try {
        auswahlfeldDaoService0.getSelectedByPaId((Auswahlfeld) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      AuswahlfeldDaoService auswahlfeldDaoService0 = new AuswahlfeldDaoService((AuswahlfeldDao) null);
      // Undeclared exception!
      try {
        auswahlfeldDaoService0.customizingComplete((HttpServletRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      AuswahlfeldIbatisDao auswahlfeldIbatisDao0 = new AuswahlfeldIbatisDao();
      AuswahlfeldDaoService auswahlfeldDaoService0 = new AuswahlfeldDaoService((AuswahlfeldDao) auswahlfeldIbatisDao0);
      Auswahlfeld auswahlfeld0 = new Auswahlfeld();
      // Undeclared exception!
      try {
        auswahlfeldDaoService0.getByNaOpNu(auswahlfeld0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      AuswahlfeldIbatisDao auswahlfeldIbatisDao0 = new AuswahlfeldIbatisDao();
      AuswahlfeldDaoService auswahlfeldDaoService0 = new AuswahlfeldDaoService((AuswahlfeldDao) auswahlfeldIbatisDao0);
      // Undeclared exception!
      try {
        auswahlfeldDaoService0.deletePaAssignmentsById((Integer) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test15()  throws Throwable  {
      AuswahlfeldIbatisDao auswahlfeldIbatisDao0 = new AuswahlfeldIbatisDao();
      AuswahlfeldDaoService auswahlfeldDaoService0 = new AuswahlfeldDaoService((AuswahlfeldDao) auswahlfeldIbatisDao0);
      // Undeclared exception!
      try {
        auswahlfeldDaoService0.deleteNaOpNuAssignmentsById((Integer) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test16()  throws Throwable  {
      AuswahlfeldIbatisDao auswahlfeldIbatisDao0 = new AuswahlfeldIbatisDao();
      AuswahlfeldDaoService auswahlfeldDaoService0 = new AuswahlfeldDaoService((AuswahlfeldDao) auswahlfeldIbatisDao0);
      // Undeclared exception!
      try {
        auswahlfeldDaoService0.getById((Auswahlfeld) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test17()  throws Throwable  {
      AuswahlfeldIbatisDao auswahlfeldIbatisDao0 = new AuswahlfeldIbatisDao();
      AuswahlfeldDaoService auswahlfeldDaoService0 = new AuswahlfeldDaoService((AuswahlfeldDao) auswahlfeldIbatisDao0);
      Integer integer0 = Integer.valueOf(2);
      // Undeclared exception!
      try {
        auswahlfeldDaoService0.copy(integer0, (Integer) 2, (Integer) 2, (Integer) 2, integer0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      AuswahlfeldIbatisDao auswahlfeldIbatisDao0 = new AuswahlfeldIbatisDao();
      AuswahlfeldDaoService auswahlfeldDaoService0 = new AuswahlfeldDaoService((AuswahlfeldDao) auswahlfeldIbatisDao0);
      Integer integer0 = new Integer(1984);
      // Undeclared exception!
      try {
        auswahlfeldDaoService0.copy((Integer) null, (Integer) null, (Integer) null, integer0, (Integer) 1984);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }
}
