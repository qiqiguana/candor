/*
 * This file was automatically generated by EvoSuite
 */

package ch.bfh.egov.nutzenportfolio.service.kategorie;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import ch.bfh.egov.nutzenportfolio.persistence.common.CommonDao;
import ch.bfh.egov.nutzenportfolio.persistence.common.CommonIbatisDao;
import ch.bfh.egov.nutzenportfolio.persistence.customizing.CustomizingDao;
import ch.bfh.egov.nutzenportfolio.persistence.customizing.CustomizingIbatisDao;
import ch.bfh.egov.nutzenportfolio.persistence.kategorie.KategorieDao;
import ch.bfh.egov.nutzenportfolio.persistence.kategorie.KategorieIbatisDao;
import ch.bfh.egov.nutzenportfolio.service.common.CommonDaoService;
import ch.bfh.egov.nutzenportfolio.service.common.CommonService;
import ch.bfh.egov.nutzenportfolio.service.customizing.CustomizingDaoService;
import ch.bfh.egov.nutzenportfolio.service.customizing.CustomizingService;
import ch.bfh.egov.nutzenportfolio.service.kategorie.KategorieDaoService;
import ch.bfh.egov.nutzenportfolio.service.nutzenkriterium.NutzenkriteriumService;
import ch.bfh.egov.nutzenportfolio.tos.Kategorie;
import ch.bfh.egov.nutzenportfolio.tos.NaOpNu;
import javax.servlet.http.HttpServletRequest;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.action.DynaActionForm;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class KategorieDaoServiceEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      KategorieIbatisDao kategorieIbatisDao0 = new KategorieIbatisDao();
      KategorieDaoService kategorieDaoService0 = new KategorieDaoService((KategorieDao) kategorieIbatisDao0);
      // Undeclared exception!
      try {
        kategorieDaoService0.deleteQuestion((HttpServletRequest) null, (Kategorie) null, (ActionMessages) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      KategorieIbatisDao kategorieIbatisDao0 = new KategorieIbatisDao();
      KategorieDaoService kategorieDaoService0 = new KategorieDaoService((KategorieDao) kategorieIbatisDao0);
      // Undeclared exception!
      try {
        kategorieDaoService0.updateAssignment((Kategorie) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      KategorieIbatisDao kategorieIbatisDao0 = new KategorieIbatisDao();
      KategorieDaoService kategorieDaoService0 = new KategorieDaoService((KategorieDao) kategorieIbatisDao0);
      DynaActionForm dynaActionForm0 = new DynaActionForm();
      // Undeclared exception!
      try {
        kategorieDaoService0.getKategorie((HttpServletRequest) null, dynaActionForm0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      KategorieIbatisDao kategorieIbatisDao0 = new KategorieIbatisDao();
      KategorieDaoService kategorieDaoService0 = new KategorieDaoService((KategorieDao) kategorieIbatisDao0);
      DynaActionForm dynaActionForm0 = new DynaActionForm();
      // Undeclared exception!
      try {
        kategorieDaoService0.populate((HttpServletRequest) null, dynaActionForm0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      KategorieIbatisDao kategorieIbatisDao0 = new KategorieIbatisDao();
      KategorieDaoService kategorieDaoService0 = new KategorieDaoService((KategorieDao) kategorieIbatisDao0);
      // Undeclared exception!
      try {
        kategorieDaoService0.getAll((Integer) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      KategorieIbatisDao kategorieIbatisDao0 = new KategorieIbatisDao();
      KategorieDaoService kategorieDaoService0 = new KategorieDaoService((KategorieDao) kategorieIbatisDao0);
      CommonIbatisDao commonIbatisDao0 = new CommonIbatisDao();
      CommonDaoService commonDaoService0 = new CommonDaoService((CommonDao) commonIbatisDao0);
      CustomizingIbatisDao customizingIbatisDao0 = new CustomizingIbatisDao();
      CustomizingDaoService customizingDaoService0 = new CustomizingDaoService((CustomizingDao) customizingIbatisDao0);
      kategorieDaoService0.init((CommonService) commonDaoService0, (CustomizingService) customizingDaoService0, (NutzenkriteriumService) null);
  }

  @Test
  public void test6()  throws Throwable  {
      KategorieIbatisDao kategorieIbatisDao0 = new KategorieIbatisDao();
      KategorieDaoService kategorieDaoService0 = new KategorieDaoService((KategorieDao) kategorieIbatisDao0);
      // Undeclared exception!
      try {
        kategorieDaoService0.getByProjektId((NaOpNu) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      KategorieIbatisDao kategorieIbatisDao0 = new KategorieIbatisDao();
      KategorieDaoService kategorieDaoService0 = new KategorieDaoService((KategorieDao) kategorieIbatisDao0);
      // Undeclared exception!
      try {
        kategorieDaoService0.list((HttpServletRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      KategorieIbatisDao kategorieIbatisDao0 = new KategorieIbatisDao();
      KategorieDaoService kategorieDaoService0 = new KategorieDaoService((KategorieDao) kategorieIbatisDao0);
      Kategorie kategorie0 = new Kategorie();
      // Undeclared exception!
      try {
        kategorieDaoService0.getAssignments(kategorie0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      KategorieIbatisDao kategorieIbatisDao0 = new KategorieIbatisDao();
      KategorieDaoService kategorieDaoService0 = new KategorieDaoService((KategorieDao) kategorieIbatisDao0);
      // Undeclared exception!
      try {
        kategorieDaoService0.deleteAssignments((Integer) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No SqlMapClient specified
         */
      }
  }
}
