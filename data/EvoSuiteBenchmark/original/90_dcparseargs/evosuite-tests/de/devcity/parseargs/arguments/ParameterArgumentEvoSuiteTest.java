/*
 * This file was automatically generated by EvoSuite
 */

package de.devcity.parseargs.arguments;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.devcity.parseargs.arguments.ParameterArgument;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ParameterArgumentEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ParameterArgument parameterArgument0 = new ParameterArgument((-1953), "Key cannot be an empty string.", "Key cannot be an empty string.");
      String string0 = parameterArgument0.getValue();
      assertEquals("Key cannot be an empty string.", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      ParameterArgument parameterArgument0 = null;
      try {
        parameterArgument0 = new ParameterArgument(535, "OtDZ<", (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ParameterArgument parameterArgument0 = null;
      try {
        parameterArgument0 = new ParameterArgument(1, "W~f,w_k9rDp|Np%a", "");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Value cannot be an empty string.
         */
      }
  }
}
