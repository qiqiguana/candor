/*
 * This file was automatically generated by EvoSuite
 */

package com.pmdesigns.jvc.tools;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.pmdesigns.jvc.tools.JVCBootstrapGenerator;
import com.pmdesigns.jvc.tools.ParseException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JVCBootstrapGeneratorEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = false; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  //Test case number: 0
  /*
   * 1 covered goal:
   * 1 com.pmdesigns.jvc.tools.JVCBootstrapGenerator.usage()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      JVCBootstrapGenerator.usage();
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 com.pmdesigns.jvc.tools.JVCBootstrapGenerator.<init>()V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      JVCBootstrapGenerator jVCBootstrapGenerator0 = new JVCBootstrapGenerator();
      assertNotNull(jVCBootstrapGenerator0);
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 com.pmdesigns.jvc.tools.JVCBootstrapGenerator.generate(Ljava/io/File;Ljava/io/File;ZZ)V: I4 Branch 1 IFNE L61 - true
   * 2 com.pmdesigns.jvc.tools.JVCBootstrapGenerator.generate(Ljava/io/File;Ljava/io/File;ZZ)V: I40 Branch 2 IFNE L67 - false
   */
  @Test
  public void test2()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          File file0 = new File("");
          File file1 = file0.getCanonicalFile();
          // Undeclared exception!
          try {
            JVCBootstrapGenerator.generate(file1, file0, false, false);
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.io.FilePermission /com/pmdesigns/jvc/tools/bootstrap write)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkWrite(SecurityManager.java:962)
             * java.io.File.mkdir(File.java:1155)
             * java.io.File.mkdirs(File.java:1184)
             * com.pmdesigns.jvc.tools.JVCBootstrapGenerator.generate(JVCBootstrapGenerator.java:67)
             * sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 com.pmdesigns.jvc.tools.JVCBootstrapGenerator.generate(Ljava/io/File;Ljava/io/File;ZZ)V: I4 Branch 1 IFNE L61 - false
   */
  @Test
  public void test3()  throws Throwable  {
      File file0 = new File("?+;I", "?+;I");
      try {
        JVCBootstrapGenerator.generate(file0, file0, false, false);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
        /*
         * Template root directory '?+;I/?+;I' doesn't exist.
         */
      }
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 com.pmdesigns.jvc.tools.JVCBootstrapGenerator.getGeneratorName(Ljava/io/File;)Ljava/lang/String;: I4 Branch 9 IFEQ L114 - true
   * 2 com.pmdesigns.jvc.tools.JVCBootstrapGenerator.getGeneratorName(Ljava/io/File;)Ljava/lang/String;: I17 Branch 10 IFGT L117 - false
   */
  @Test
  public void test4()  throws Throwable  {
      File file0 = new File("?+;I", "?+;I");
      String string0 = JVCBootstrapGenerator.getGeneratorName(file0);
      assertNull(string0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 com.pmdesigns.jvc.tools.JVCBootstrapGenerator.getGeneratorName(Ljava/io/File;)Ljava/lang/String;: I4 Branch 9 IFEQ L114 - false
   */
  @Test
  public void test5()  throws Throwable  {
      File file0 = new File("", "");
      String string0 = JVCBootstrapGenerator.getGeneratorName(file0);
      assertNull(string0);
  }

  //Test case number: 6
  /*
   * 4 covered goals:
   * 1 com.pmdesigns.jvc.tools.JVCBootstrapGenerator.getGeneratorName(Ljava/io/File;)Ljava/lang/String;: I17 Branch 10 IFGT L117 - true
   * 2 com.pmdesigns.jvc.tools.JVCBootstrapGenerator.capitalize(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 11 IFNULL L124 - false
   * 3 com.pmdesigns.jvc.tools.JVCBootstrapGenerator.capitalize(Ljava/lang/String;)Ljava/lang/String;: I6 Branch 12 IFNE L124 - true
   * 4 com.pmdesigns.jvc.tools.JVCBootstrapGenerator.getGeneratorName(Ljava/io/File;)Ljava/lang/String;: I4 Branch 9 IFEQ L114 - true
   */
  @Test
  public void test6()  throws Throwable  {
      File file0 = new File("?+;I", "?+;I");
      File file1 = new File(file0, "X<Sy\"h C.java.tpl");
      String string0 = JVCBootstrapGenerator.getGeneratorName(file1);
      assertEquals("X<Sy\"h C", string0);
      assertNotNull(string0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 com.pmdesigns.jvc.tools.JVCBootstrapGenerator.capitalize(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 11 IFNULL L124 - true
   */
  @Test
  public void test7()  throws Throwable  {
      String string0 = JVCBootstrapGenerator.capitalize((String) null);
      assertNull(string0);
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * 1 com.pmdesigns.jvc.tools.JVCBootstrapGenerator.capitalize(Ljava/lang/String;)Ljava/lang/String;: I6 Branch 12 IFNE L124 - false
   * 2 com.pmdesigns.jvc.tools.JVCBootstrapGenerator.capitalize(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 11 IFNULL L124 - false
   */
  @Test
  public void test8()  throws Throwable  {
      String string0 = JVCBootstrapGenerator.capitalize("");
      assertNotNull(string0);
      assertEquals("", string0);
  }
}
