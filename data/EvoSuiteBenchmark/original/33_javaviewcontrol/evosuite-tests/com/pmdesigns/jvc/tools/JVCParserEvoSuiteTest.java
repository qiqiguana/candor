/*
 * This file was automatically generated by EvoSuite
 */

package com.pmdesigns.jvc.tools;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.pmdesigns.jvc.tools.JVCParser;
import com.pmdesigns.jvc.tools.JVCParserTokenManager;
import com.pmdesigns.jvc.tools.ParseException;
import com.pmdesigns.jvc.tools.Token;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import org.evosuite.testcase.CodeUnderTestException;

@RunWith(EvoSuiteRunner.class)
public class JVCParserEvoSuiteTest {


  //Test case number: 0
  /*
   * 5 covered goals:
   * 1 com.pmdesigns.jvc.tools.JVCParser.ReInit(Ljava/io/InputStream;)V: root-Branch
   * 2 com.pmdesigns.jvc.tools.JVCParser.ReInit(Ljava/io/InputStream;Ljava/lang/String;)V: I50 Branch 84 IF_ICMPGE L487 - true
   * 3 com.pmdesigns.jvc.tools.JVCParser.ReInit(Ljava/io/InputStream;Ljava/lang/String;)V: I50 Branch 84 IF_ICMPGE L487 - false
   * 4 com.pmdesigns.jvc.tools.JVCParser.<init>(Ljava/io/Reader;)V: I114 Branch 85 IF_ICMPGE L496 - true
   * 5 com.pmdesigns.jvc.tools.JVCParser.<init>(Ljava/io/Reader;)V: I114 Branch 85 IF_ICMPGE L496 - false
   */
  @Test
  public void test0()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JVCParser jVCParser0 = new JVCParser((Reader) charArrayReader0);
      assertNotNull(jVCParser0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream((InputStream) pipedInputStream0, (InputStream) pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) sequenceInputStream0);
      jVCParser0.ReInit((InputStream) dataInputStream0);
      assertEquals("_sb.append(\"\u0000\u0000\u0000\");", jVCParser0.parse());
      assertEquals(100, jVCParser0.debugColumn);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 com.pmdesigns.jvc.tools.JVCParser.disable_tracing()V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JVCParser jVCParser0 = new JVCParser((Reader) charArrayReader0);
      assertNotNull(jVCParser0);
      
      jVCParser0.disable_tracing();
      assertEquals(100, jVCParser0.debugColumn);
      assertEquals("_sb.append(\"\u0000\u0000\u0000\");", jVCParser0.parse());
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * 1 com.pmdesigns.jvc.tools.JVCParser.<init>(Lcom/pmdesigns/jvc/tools/JVCParserTokenManager;)V: I100 Branch 87 IF_ICMPGE L513 - true
   * 2 com.pmdesigns.jvc.tools.JVCParser.<init>(Lcom/pmdesigns/jvc/tools/JVCParserTokenManager;)V: I100 Branch 87 IF_ICMPGE L513 - false
   * 3 com.pmdesigns.jvc.tools.JVCParser.<init>(Ljava/io/InputStream;)V: root-Branch
   * 4 com.pmdesigns.jvc.tools.JVCParser.<init>(Ljava/io/InputStream;Ljava/lang/String;)V: I125 Branch 83 IF_ICMPGE L475 - true
   * 5 com.pmdesigns.jvc.tools.JVCParser.<init>(Ljava/io/InputStream;Ljava/lang/String;)V: I125 Branch 83 IF_ICMPGE L475 - false
   */
  @Test
  public void test2()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      JVCParser jVCParser0 = new JVCParser((InputStream) bufferedInputStream0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 com.pmdesigns.jvc.tools.JVCParser.enable_tracing()V: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JVCParser jVCParser0 = new JVCParser((InputStream) byteArrayInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      
      jVCParser0.enable_tracing();
      assertEquals(100, jVCParser0.debugColumn);
  }

  //Test case number: 4
  /*
   * 52 covered goals:
   * 1 com.pmdesigns.jvc.tools.JVCParser.startTag(Lcom/pmdesigns/jvc/tools/Token;)V: I4 Branch 2 IFNE L73 - true
   * 2 com.pmdesigns.jvc.tools.JVCParser.startTag(Lcom/pmdesigns/jvc/tools/Token;)V: I49 Branch 4 IF_ICMPEQ L84 - true
   * 3 com.pmdesigns.jvc.tools.JVCParser.startTag(Lcom/pmdesigns/jvc/tools/Token;)V: I88 Branch 5 IFLE L92 - false
   * 4 com.pmdesigns.jvc.tools.JVCParser.startTag(Lcom/pmdesigns/jvc/tools/Token;)V: I93 Branch 6 IFNE L93 - false
   * 5 com.pmdesigns.jvc.tools.JVCParser.flush()V: I5 Branch 42 IF_ICMPEQ L340 - false
   * 6 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 48 TABLESWITCH L377 Case 1 - true
   * 7 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 66 TABLESWITCH L395 Case 1 - true
   * 8 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 81 TABLESWITCH L395 Case 16 - false
   * 9 com.pmdesigns.jvc.tools.JVCParser.addOther(Lcom/pmdesigns/jvc/tools/Token;)V: root-Branch
   * 10 com.pmdesigns.jvc.tools.JVCParser.jj_ntk()I: I8 Branch 94 IFNONNULL L556 - false
   * 11 com.pmdesigns.jvc.tools.JVCParser.jj_consume_token(I)Lcom/pmdesigns/jvc/tools/Token;: I8 Branch 89 IFNULL L526 - false
   * 12 com.pmdesigns.jvc.tools.JVCParser.jj_consume_token(I)Lcom/pmdesigns/jvc/tools/Token;: I37 Branch 90 IF_ICMPNE L529 - false
   * 13 com.pmdesigns.jvc.tools.JVCParser.addEscaped(Lcom/pmdesigns/jvc/tools/Token;)V: I3 Branch 40 IFNULL L328 - true
   * 14 com.pmdesigns.jvc.tools.JVCParser.escapeQuotes(Ljava/lang/StringBuilder;)V: I9 Branch 46 IFLT L364 - true
   * 15 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I5 Branch 47 IF_ICMPNE L377 - false
   * 16 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 48 TABLESWITCH L377 Case 1 - false
   * 17 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 49 TABLESWITCH L377 Case 2 - false
   * 18 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 50 TABLESWITCH L377 Case 3 - false
   * 19 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 51 TABLESWITCH L377 Case 4 - false
   * 20 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 52 TABLESWITCH L377 Case 5 - false
   * 21 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 53 TABLESWITCH L377 Case 6 - false
   * 22 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 54 TABLESWITCH L377 Case 7 - false
   * 23 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 55 TABLESWITCH L377 Case 8 - false
   * 24 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 56 TABLESWITCH L377 Case 9 - false
   * 25 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 57 TABLESWITCH L377 Case 10 - false
   * 26 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 58 TABLESWITCH L377 Case 11 - false
   * 27 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 59 TABLESWITCH L377 Case 12 - false
   * 28 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 60 TABLESWITCH L377 Case 13 - false
   * 29 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 61 TABLESWITCH L377 Case 14 - false
   * 30 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 62 TABLESWITCH L377 Case 15 - false
   * 31 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 63 TABLESWITCH L377 Case 16 - true
   * 32 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 63 TABLESWITCH L377 Case 16 - false
   * 33 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 64 TABLESWITCH L377 Default-Case - true
   * 34 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 64 TABLESWITCH L377 Default-Case - false
   * 35 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I33 Branch 65 IF_ICMPNE L395 - true
   * 36 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 66 TABLESWITCH L395 Case 1 - false
   * 37 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 67 TABLESWITCH L395 Case 2 - false
   * 38 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 68 TABLESWITCH L395 Case 3 - false
   * 39 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 69 TABLESWITCH L395 Case 4 - false
   * 40 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 70 TABLESWITCH L395 Case 5 - false
   * 41 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 71 TABLESWITCH L395 Case 6 - false
   * 42 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 72 TABLESWITCH L395 Case 7 - false
   * 43 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 73 TABLESWITCH L395 Case 8 - false
   * 44 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 74 TABLESWITCH L395 Case 9 - false
   * 45 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 75 TABLESWITCH L395 Case 10 - false
   * 46 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 76 TABLESWITCH L395 Case 11 - false
   * 47 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 77 TABLESWITCH L395 Case 12 - false
   * 48 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 78 TABLESWITCH L395 Case 13 - false
   * 49 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 79 TABLESWITCH L395 Case 14 - false
   * 50 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 80 TABLESWITCH L395 Case 15 - false
   * 51 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 81 TABLESWITCH L395 Case 16 - true
   * 52 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 82 TABLESWITCH L395 Default-Case - false
   */
  @Test
  public void test4()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[1] = '[';
      charArray0[2] = '[';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JVCParser jVCParser0 = new JVCParser((Reader) charArrayReader0);
      assertNotNull(jVCParser0);
      
      try {
        jVCParser0.parse();
        fail("Expecting exception: ParseException");
      } catch(ParseException e) {
        /*
         * Unbalanced tag at end of null
         */
      }
  }

  //Test case number: 5
  /*
   * 8 covered goals:
   * 1 com.pmdesigns.jvc.tools.JVCParser.endTag(Lcom/pmdesigns/jvc/tools/Token;)V: I10 Branch 7 TABLESWITCH L107 Case 0 - false
   * 2 com.pmdesigns.jvc.tools.JVCParser.endTag(Lcom/pmdesigns/jvc/tools/Token;)V: I10 Branch 8 TABLESWITCH L107 Case 1 - false
   * 3 com.pmdesigns.jvc.tools.JVCParser.endTag(Lcom/pmdesigns/jvc/tools/Token;)V: I10 Branch 9 TABLESWITCH L107 Case 2 - false
   * 4 com.pmdesigns.jvc.tools.JVCParser.endTag(Lcom/pmdesigns/jvc/tools/Token;)V: I10 Branch 10 TABLESWITCH L107 Case 3 - false
   * 5 com.pmdesigns.jvc.tools.JVCParser.endTag(Lcom/pmdesigns/jvc/tools/Token;)V: I10 Branch 11 TABLESWITCH L107 Case 4 - false
   * 6 com.pmdesigns.jvc.tools.JVCParser.endTag(Lcom/pmdesigns/jvc/tools/Token;)V: I10 Branch 12 TABLESWITCH L107 Default-Case - true
   * 7 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 56 TABLESWITCH L377 Case 9 - true
   * 8 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 74 TABLESWITCH L395 Case 9 - true
   */
  @Test
  public void test5()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = ']';
      charArray0[1] = ']';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JVCParser jVCParser0 = new JVCParser((Reader) charArrayReader0);
      assertNotNull(jVCParser0);
      
      String string0 = "";
      try {
        string0 = jVCParser0.parse();
        fail("Expecting exception: ParseException");
      } catch(ParseException e) {
        /*
         * Unbalanced end tag in null, line: 1
         */
      }
      assertEquals(100, jVCParser0.debugColumn);
  }

  //Test case number: 6
  /*
   * 12 covered goals:
   * 1 com.pmdesigns.jvc.tools.JVCParser.addEOL(Lcom/pmdesigns/jvc/tools/Token;)V: I11 Branch 33 IF_ICMPEQ L281 - true
   * 2 com.pmdesigns.jvc.tools.JVCParser.addEOL(Lcom/pmdesigns/jvc/tools/Token;)V: I35 Branch 34 IF_ICMPNE L287 - true
   * 3 com.pmdesigns.jvc.tools.JVCParser.addEOL(Lcom/pmdesigns/jvc/tools/Token;)V: I53 Branch 35 IF_ICMPNE L290 - false
   * 4 com.pmdesigns.jvc.tools.JVCParser.addEOL(Lcom/pmdesigns/jvc/tools/Token;)V: I65 Branch 36 IFNE L293 - false
   * 5 com.pmdesigns.jvc.tools.JVCParser.isDebug()Z: I4 Branch 37 IFNULL L309 - true
   * 6 com.pmdesigns.jvc.tools.JVCParser.addDebugging(Ljava/lang/StringBuilder;I)V: I4 Branch 38 IFEQ L313 - true
   * 7 com.pmdesigns.jvc.tools.JVCParser.flush()V: I26 Branch 43 IFNE L344 - false
   * 8 com.pmdesigns.jvc.tools.JVCParser.flush()V: I31 Branch 44 IFEQ L345 - true
   * 9 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 53 TABLESWITCH L377 Case 6 - true
   * 10 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 71 TABLESWITCH L395 Case 6 - true
   * 11 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 81 TABLESWITCH L395 Case 16 - false
   * 12 com.pmdesigns.jvc.tools.JVCParser.flush()V: I5 Branch 42 IF_ICMPEQ L340 - true
   */
  @Test
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      byteArray0[16] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JVCParser jVCParser0 = new JVCParser((InputStream) byteArrayInputStream0);
      String string0 = jVCParser0.parse();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals("_sb.append(\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\\n\");\n", string0);
  }

  //Test case number: 7
  /*
   * 4 covered goals:
   * 1 com.pmdesigns.jvc.tools.JVCParser.addEscaped(Lcom/pmdesigns/jvc/tools/Token;)V: I3 Branch 40 IFNULL L328 - false
   * 2 com.pmdesigns.jvc.tools.JVCParser.addEscaped(Lcom/pmdesigns/jvc/tools/Token;)V: I15 Branch 41 IF_ICMPNE L333 - false
   * 3 com.pmdesigns.jvc.tools.JVCParser.flush()V: I26 Branch 43 IFNE L344 - true
   * 4 com.pmdesigns.jvc.tools.JVCParser.flush()V: I49 Branch 45 IFNE L350 - false
   */
  @Test
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JVCParser jVCParser0 = new JVCParser((InputStream) byteArrayInputStream0);
      String string0 = jVCParser0.parse();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals("_sb.append(\"\u0000\u0000\u0000\u0000\");", string0);
  }

  //Test case number: 8
  /*
   * 27 covered goals:
   * 1 com.pmdesigns.jvc.tools.JVCParser.escapeQuotes(Ljava/lang/StringBuilder;)V: I9 Branch 46 IFLT L364 - false
   * 2 com.pmdesigns.jvc.tools.JVCParser.addOther(Lcom/pmdesigns/jvc/tools/Token;)V: root-Branch
   * 3 com.pmdesigns.jvc.tools.JVCParser.jj_ntk()I: I8 Branch 94 IFNONNULL L556 - false
   * 4 com.pmdesigns.jvc.tools.JVCParser.flush()V: I26 Branch 43 IFNE L344 - true
   * 5 com.pmdesigns.jvc.tools.JVCParser.flush()V: I49 Branch 45 IFNE L350 - false
   * 6 com.pmdesigns.jvc.tools.JVCParser.addEscaped(Lcom/pmdesigns/jvc/tools/Token;)V: I3 Branch 40 IFNULL L328 - true
   * 7 com.pmdesigns.jvc.tools.JVCParser.escapeQuotes(Ljava/lang/StringBuilder;)V: I9 Branch 46 IFLT L364 - true
   * 8 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 63 TABLESWITCH L377 Case 16 - true
   * 9 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 64 TABLESWITCH L377 Default-Case - false
   * 10 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I33 Branch 65 IF_ICMPNE L395 - true
   * 11 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 66 TABLESWITCH L395 Case 1 - false
   * 12 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 67 TABLESWITCH L395 Case 2 - false
   * 13 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 68 TABLESWITCH L395 Case 3 - false
   * 14 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 69 TABLESWITCH L395 Case 4 - false
   * 15 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 70 TABLESWITCH L395 Case 5 - false
   * 16 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 71 TABLESWITCH L395 Case 6 - false
   * 17 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 72 TABLESWITCH L395 Case 7 - false
   * 18 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 73 TABLESWITCH L395 Case 8 - false
   * 19 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 74 TABLESWITCH L395 Case 9 - false
   * 20 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 75 TABLESWITCH L395 Case 10 - false
   * 21 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 76 TABLESWITCH L395 Case 11 - false
   * 22 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 77 TABLESWITCH L395 Case 12 - false
   * 23 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 78 TABLESWITCH L395 Case 13 - false
   * 24 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 79 TABLESWITCH L395 Case 14 - false
   * 25 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 80 TABLESWITCH L395 Case 15 - false
   * 26 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 81 TABLESWITCH L395 Case 16 - true
   * 27 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I41 Branch 82 TABLESWITCH L395 Default-Case - false
   */
  @Test
  public void test8()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[2] = '\"';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JVCParser jVCParser0 = new JVCParser((Reader) charArrayReader0);
      assertNotNull(jVCParser0);
      
      String string0 = jVCParser0.parse();
      assertNotNull(string0);
      assertEquals("_sb.append(\"\u0000\\\"\u0000\");", string0);
      assertEquals(100, jVCParser0.debugColumn);
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * 1 com.pmdesigns.jvc.tools.JVCParser.ReInit(Ljava/io/Reader;)V: I39 Branch 86 IF_ICMPGE L505 - true
   * 2 com.pmdesigns.jvc.tools.JVCParser.ReInit(Ljava/io/Reader;)V: I39 Branch 86 IF_ICMPGE L505 - false
   */
  @Test
  public void test9()  throws Throwable  {
      FileDescriptor fileDescriptor0 = FileDescriptor.err;
      FileReader fileReader0 = new FileReader(fileDescriptor0);
      JVCParser jVCParser0 = new JVCParser((Reader) fileReader0);
      assertNotNull(jVCParser0);
      
      jVCParser0.ReInit((Reader) fileReader0);
      assertEquals("", jVCParser0.parse());
      assertEquals(100, jVCParser0.debugColumn);
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * 1 com.pmdesigns.jvc.tools.JVCParser.ReInit(Lcom/pmdesigns/jvc/tools/JVCParserTokenManager;)V: I29 Branch 88 IF_ICMPGE L521 - true
   * 2 com.pmdesigns.jvc.tools.JVCParser.ReInit(Lcom/pmdesigns/jvc/tools/JVCParserTokenManager;)V: I29 Branch 88 IF_ICMPGE L521 - false
   */
  @Test
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JVCParser jVCParser0 = new JVCParser((Reader) charArrayReader0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 com.pmdesigns.jvc.tools.JVCParser.getNextToken()Lcom/pmdesigns/jvc/tools/Token;: I5 Branch 91 IFNULL L539 - true
   */
  @Test
  public void test11()  throws Throwable  {
      FileDescriptor fileDescriptor0 = FileDescriptor.err;
      FileReader fileReader0 = new FileReader(fileDescriptor0);
      JVCParser jVCParser0 = new JVCParser((Reader) fileReader0);
      assertNotNull(jVCParser0);
      
      Token token0 = jVCParser0.getNextToken();
      assertEquals(100, jVCParser0.debugColumn);
      assertNotNull(token0);
      assertEquals("", jVCParser0.parse());
  }

  //Test case number: 12
  /*
   * 4 covered goals:
   * 1 com.pmdesigns.jvc.tools.JVCParser.getNextToken()Lcom/pmdesigns/jvc/tools/Token;: I5 Branch 91 IFNULL L539 - false
   * 2 com.pmdesigns.jvc.tools.JVCParser.getToken(I)Lcom/pmdesigns/jvc/tools/Token;: I12 Branch 92 IF_ICMPGE L548 - true
   * 3 com.pmdesigns.jvc.tools.JVCParser.getToken(I)Lcom/pmdesigns/jvc/tools/Token;: I12 Branch 92 IF_ICMPGE L548 - false
   * 4 com.pmdesigns.jvc.tools.JVCParser.getToken(I)Lcom/pmdesigns/jvc/tools/Token;: I17 Branch 93 IFNULL L549 - true
   */
  @Test
  public void test12()  throws Throwable  {
      FileDescriptor fileDescriptor0 = FileDescriptor.err;
      FileReader fileReader0 = new FileReader(fileDescriptor0);
      JVCParser jVCParser0 = new JVCParser((Reader) fileReader0);
      assertNotNull(jVCParser0);
      
      Token token0 = jVCParser0.getToken(215);
      assertNotNull(token0);
      
      Token token1 = jVCParser0.getNextToken();
      assertNotNull(token1);
      assertEquals("", jVCParser0.parse());
      assertNotSame(token1, token0);
      assertEquals(100, jVCParser0.debugColumn);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 com.pmdesigns.jvc.tools.JVCParser.getToken(I)Lcom/pmdesigns/jvc/tools/Token;: I17 Branch 93 IFNULL L549 - false
   */
  @Test
  public void test13()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      JVCParser jVCParser0 = new JVCParser((InputStream) bufferedInputStream0);
      assertNotNull(jVCParser0);
      
      Token token0 = jVCParser0.getToken(100);
      assertNotNull(token0);
      
      Token token1 = jVCParser0.getToken(100);
      assertNotNull(token1);
      assertEquals("", jVCParser0.parse());
      assertEquals(100, jVCParser0.debugColumn);
  }

  //Test case number: 14
  /*
   * 30 covered goals:
   * 1 com.pmdesigns.jvc.tools.JVCParser.jj_ntk()I: I8 Branch 94 IFNONNULL L556 - true
   * 2 com.pmdesigns.jvc.tools.JVCParser.<init>(Ljava/io/InputStream;)V: root-Branch
   * 3 com.pmdesigns.jvc.tools.JVCParser.flush()V: I5 Branch 42 IF_ICMPEQ L340 - true
   * 4 com.pmdesigns.jvc.tools.JVCParser.flush()V: I26 Branch 43 IFNE L344 - false
   * 5 com.pmdesigns.jvc.tools.JVCParser.flush()V: I31 Branch 44 IFEQ L345 - true
   * 6 com.pmdesigns.jvc.tools.JVCParser.jj_consume_token(I)Lcom/pmdesigns/jvc/tools/Token;: I8 Branch 89 IFNULL L526 - false
   * 7 com.pmdesigns.jvc.tools.JVCParser.jj_consume_token(I)Lcom/pmdesigns/jvc/tools/Token;: I37 Branch 90 IF_ICMPNE L529 - false
   * 8 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I5 Branch 47 IF_ICMPNE L377 - false
   * 9 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 48 TABLESWITCH L377 Case 1 - false
   * 10 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 49 TABLESWITCH L377 Case 2 - false
   * 11 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 50 TABLESWITCH L377 Case 3 - false
   * 12 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 51 TABLESWITCH L377 Case 4 - false
   * 13 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 52 TABLESWITCH L377 Case 5 - false
   * 14 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 53 TABLESWITCH L377 Case 6 - false
   * 15 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 54 TABLESWITCH L377 Case 7 - false
   * 16 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 55 TABLESWITCH L377 Case 8 - false
   * 17 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 56 TABLESWITCH L377 Case 9 - false
   * 18 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 57 TABLESWITCH L377 Case 10 - false
   * 19 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 58 TABLESWITCH L377 Case 11 - false
   * 20 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 59 TABLESWITCH L377 Case 12 - false
   * 21 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 60 TABLESWITCH L377 Case 13 - false
   * 22 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 61 TABLESWITCH L377 Case 14 - false
   * 23 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 62 TABLESWITCH L377 Case 15 - false
   * 24 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 63 TABLESWITCH L377 Case 16 - false
   * 25 com.pmdesigns.jvc.tools.JVCParser.parse()Ljava/lang/String;: I13 Branch 64 TABLESWITCH L377 Default-Case - true
   * 26 com.pmdesigns.jvc.tools.JVCParser.<init>(Ljava/io/InputStream;Ljava/lang/String;)V: I125 Branch 83 IF_ICMPGE L475 - true
   * 27 com.pmdesigns.jvc.tools.JVCParser.<init>(Ljava/io/InputStream;Ljava/lang/String;)V: I125 Branch 83 IF_ICMPGE L475 - false
   * 28 com.pmdesigns.jvc.tools.JVCParser.getToken(I)Lcom/pmdesigns/jvc/tools/Token;: I12 Branch 92 IF_ICMPGE L548 - true
   * 29 com.pmdesigns.jvc.tools.JVCParser.getToken(I)Lcom/pmdesigns/jvc/tools/Token;: I12 Branch 92 IF_ICMPGE L548 - false
   * 30 com.pmdesigns.jvc.tools.JVCParser.getToken(I)Lcom/pmdesigns/jvc/tools/Token;: I17 Branch 93 IFNULL L549 - true
   */
  @Test
  public void test14()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      JVCParser jVCParser0 = new JVCParser((InputStream) bufferedInputStream0);
      assertNotNull(jVCParser0);
      
      Token token0 = jVCParser0.getToken(100);
      assertNotNull(token0);
      
      String string0 = jVCParser0.parse();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  //Test case number: 15
  /*
   * 12 covered goals:
   * 1 com.pmdesigns.jvc.tools.JVCParser.generateParseException()Lcom/pmdesigns/jvc/tools/ParseException;: I17 Branch 95 IF_ICMPGE L569 - true
   * 2 com.pmdesigns.jvc.tools.JVCParser.generateParseException()Lcom/pmdesigns/jvc/tools/ParseException;: I17 Branch 95 IF_ICMPGE L569 - false
   * 3 com.pmdesigns.jvc.tools.JVCParser.generateParseException()Lcom/pmdesigns/jvc/tools/ParseException;: I32 Branch 96 IFLT L572 - true
   * 4 com.pmdesigns.jvc.tools.JVCParser.generateParseException()Lcom/pmdesigns/jvc/tools/ParseException;: I52 Branch 97 IF_ICMPGE L576 - true
   * 5 com.pmdesigns.jvc.tools.JVCParser.generateParseException()Lcom/pmdesigns/jvc/tools/ParseException;: I52 Branch 97 IF_ICMPGE L576 - false
   * 6 com.pmdesigns.jvc.tools.JVCParser.generateParseException()Lcom/pmdesigns/jvc/tools/ParseException;: I61 Branch 98 IF_ICMPNE L577 - true
   * 7 com.pmdesigns.jvc.tools.JVCParser.generateParseException()Lcom/pmdesigns/jvc/tools/ParseException;: I101 Branch 101 IF_ICMPGE L585 - true
   * 8 com.pmdesigns.jvc.tools.JVCParser.generateParseException()Lcom/pmdesigns/jvc/tools/ParseException;: I101 Branch 101 IF_ICMPGE L585 - false
   * 9 com.pmdesigns.jvc.tools.JVCParser.generateParseException()Lcom/pmdesigns/jvc/tools/ParseException;: I107 Branch 102 IFEQ L586 - true
   * 10 com.pmdesigns.jvc.tools.JVCParser.generateParseException()Lcom/pmdesigns/jvc/tools/ParseException;: I148 Branch 103 IF_ICMPGE L593 - true
   * 11 com.pmdesigns.jvc.tools.JVCParser.<init>(Ljava/io/Reader;)V: I114 Branch 85 IF_ICMPGE L496 - true
   * 12 com.pmdesigns.jvc.tools.JVCParser.<init>(Ljava/io/Reader;)V: I114 Branch 85 IF_ICMPGE L496 - false
   */
  @Test
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[11];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JVCParser jVCParser0 = new JVCParser((Reader) charArrayReader0);
      assertNotNull(jVCParser0);
      
      // Undeclared exception!
      try {
        jVCParser0.generateParseException();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
