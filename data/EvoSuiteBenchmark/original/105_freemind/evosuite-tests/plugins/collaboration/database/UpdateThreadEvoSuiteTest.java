/*
 * This file was automatically generated by EvoSuite
 */

package plugins.collaboration.database;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import freemind.modes.mindmapmode.MindMapController;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.hsqldb.HsqlException;
import org.hsqldb.Session;
import org.hsqldb.jdbc.jdbcConnection;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import plugins.collaboration.database.UpdateThread;

@RunWith(EvoSuiteRunner.class)
public class UpdateThreadEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      jdbcConnection jdbcConnection0 = new jdbcConnection((Session) null);
      UpdateThread updateThread0 = new UpdateThread((Connection) jdbcConnection0, (MindMapController) null);
      // Undeclared exception!
      try {
        updateThread0.registerFilter();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      UpdateThread updateThread0 = new UpdateThread((Connection) null, (MindMapController) null);
      updateThread0.getPort();
      assertEquals("Thread-1264", updateThread0.getName());
      assertEquals("Thread[Thread-1264,5,Test Execution]", updateThread0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      UpdateThread updateThread0 = new UpdateThread((Connection) null, (MindMapController) null);
      updateThread0.signalEndOfSession();
      assertEquals("Thread[Thread-1277,5,Test Execution]", updateThread0.toString());
      assertEquals("Thread-1277", updateThread0.getName());
  }

  @Test
  public void test3()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          UpdateThread updateThread0 = new UpdateThread((Connection) null, (MindMapController) null);
          // Undeclared exception!
          try {
            updateThread0.insertUser();
            fail("Expecting exception: NullPointerException");
          } catch(NullPointerException e) {
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test4()  throws Throwable  {
      UpdateThread updateThread0 = new UpdateThread((Connection) null, (MindMapController) null);
      updateThread0.setHost("");
      assertEquals(1368L, updateThread0.getId());
      assertEquals("Thread-1349", updateThread0.getName());
  }

  @Test
  public void test5()  throws Throwable  {
      UpdateThread updateThread0 = new UpdateThread((Connection) null, (MindMapController) null);
      updateThread0.setPort("");
      assertEquals(1380L, updateThread0.getId());
      assertEquals("Thread-1361", updateThread0.getName());
  }

  @Test
  public void test6()  throws Throwable  {
      jdbcConnection jdbcConnection0 = new jdbcConnection((Session) null);
      UpdateThread updateThread0 = new UpdateThread((Connection) jdbcConnection0, (MindMapController) null);
      updateThread0.shutdown(false);
      assertEquals("Thread[Thread-1373,5,Test Execution]", updateThread0.toString());
      assertEquals(1392L, updateThread0.getId());
  }

  @Test
  public void test7()  throws Throwable  {
      UpdateThread updateThread0 = new UpdateThread((Connection) null, (MindMapController) null);
      updateThread0.shutdown(true);
      assertEquals("Thread-1391", updateThread0.getName());
      assertEquals("Thread[Thread-1391,5,Test Execution]", updateThread0.toString());
  }
}
