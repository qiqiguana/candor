/*
 * This file was automatically generated by EvoSuite
 */

package freemind.common;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.jgoodies.forms.builder.DefaultFormBuilder;
import com.jgoodies.forms.layout.FormLayout;
import freemind.common.NumberProperty;
import freemind.common.TextTranslator;
import java.util.ResourceBundle;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class NumberPropertyEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      NumberProperty numberProperty0 = new NumberProperty("", "", (-1896), (-1896), (-1896));
      assertNotNull(numberProperty0);
      
      numberProperty0.setEnabled(true);
      assertEquals("-1896", numberProperty0.getValue());
      assertEquals(-1896, numberProperty0.getIntValue());
  }

  @Test
  public void test1()  throws Throwable  {
      NumberProperty numberProperty0 = new NumberProperty("", "", (-699), 0, 0);
      assertNotNull(numberProperty0);
      
      FormLayout formLayout0 = new FormLayout("", "");
      DefaultFormBuilder defaultFormBuilder0 = new DefaultFormBuilder(formLayout0, (ResourceBundle) null);
      // Undeclared exception!
      try {
        numberProperty0.layout(defaultFormBuilder0, (TextTranslator) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      NumberProperty numberProperty0 = new NumberProperty("", "", (-1896), (-1896), (-1896));
      assertNotNull(numberProperty0);
      
      int int0 = numberProperty0.getIntValue();
      assertEquals((-1896), int0);
  }

  @Test
  public void test3()  throws Throwable  {
      NumberProperty numberProperty0 = new NumberProperty("", "", (-1896), (-1896), (-1896));
      assertNotNull(numberProperty0);
      
      String string0 = numberProperty0.getValue();
      assertEquals("-1896", string0);
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      NumberProperty numberProperty0 = new NumberProperty("", "", (-1896), (-1896), (-1896));
      assertNotNull(numberProperty0);
      
      String string0 = numberProperty0.getDescription();
      assertNotNull(string0);
      assertEquals("-1896", numberProperty0.getValue());
      assertEquals(-1896, numberProperty0.getIntValue());
  }

  @Test
  public void test5()  throws Throwable  {
      NumberProperty numberProperty0 = new NumberProperty("", "", (-1896), (-1896), (-1896));
      assertNotNull(numberProperty0);
      
      numberProperty0.setValue("124");
      assertEquals("-1896", numberProperty0.getValue());
      assertEquals(-1896, numberProperty0.getIntValue());
  }

  @Test
  public void test6()  throws Throwable  {
      NumberProperty numberProperty0 = new NumberProperty("", "", (-1896), (-1896), (-1896));
      assertNotNull(numberProperty0);
      
      numberProperty0.setValue("-1896");
      assertEquals("-1896", numberProperty0.getValue());
      assertEquals(-1896, numberProperty0.getIntValue());
  }
}
