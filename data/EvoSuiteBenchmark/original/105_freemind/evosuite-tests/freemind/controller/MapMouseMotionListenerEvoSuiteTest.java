/*
 * This file was automatically generated by EvoSuite
 */

package freemind.controller;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import freemind.controller.Controller;
import freemind.controller.MapMouseMotionListener;
import java.awt.Component;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import javax.swing.JMenuItem;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuDragMouseEvent;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MapMouseMotionListenerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MapMouseMotionListener mapMouseMotionListener0 = new MapMouseMotionListener((Controller) null);
      mapMouseMotionListener0.mouseEntered((MouseEvent) null);
  }

  @Test
  public void test1()  throws Throwable  {
      MapMouseMotionListener mapMouseMotionListener0 = new MapMouseMotionListener((Controller) null);
      mapMouseMotionListener0.mouseMoved((MouseEvent) null);
  }

  @Test
  public void test2()  throws Throwable  {
      MapMouseMotionListener mapMouseMotionListener0 = new MapMouseMotionListener((Controller) null);
      mapMouseMotionListener0.register((MapMouseMotionListener.MapMouseMotionReceiver) null);
  }

  @Test
  public void test3()  throws Throwable  {
      MapMouseMotionListener mapMouseMotionListener0 = new MapMouseMotionListener((Controller) null);
      // Undeclared exception!
      try {
        mapMouseMotionListener0.mouseClicked((MouseEvent) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      MapMouseMotionListener mapMouseMotionListener0 = new MapMouseMotionListener((Controller) null);
      mapMouseMotionListener0.deregister();
  }

  @Test
  public void test5()  throws Throwable  {
      MapMouseMotionListener mapMouseMotionListener0 = new MapMouseMotionListener((Controller) null);
      JMenuItem jMenuItem0 = new JMenuItem();
      MenuElement[] menuElementArray0 = new MenuElement[3];
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent((Component) jMenuItem0, 195, (long) 195, 209, (-1), 0, (-96), true, menuElementArray0, menuSelectionManager0);
      // Undeclared exception!
      try {
        mapMouseMotionListener0.mouseReleased((MouseEvent) menuDragMouseEvent0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      MapMouseMotionListener mapMouseMotionListener0 = new MapMouseMotionListener((Controller) null);
      JMenuItem jMenuItem0 = new JMenuItem();
      MenuElement[] menuElementArray0 = new MenuElement[3];
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent((Component) jMenuItem0, 195, (long) 195, 209, (-1), 0, (-96), true, menuElementArray0, menuSelectionManager0);
      mapMouseMotionListener0.mouseDragged((MouseEvent) menuDragMouseEvent0);
      assertEquals(195L, menuDragMouseEvent0.getWhen());
  }

  @Test
  public void test7()  throws Throwable  {
      MapMouseMotionListener mapMouseMotionListener0 = new MapMouseMotionListener((Controller) null);
      JMenuItem jMenuItem0 = new JMenuItem();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent((Component) jMenuItem0, 0, 1945L, 0, 0, 353, 0, 0, 353, false, (-96), 195, 195);
      mapMouseMotionListener0.mousePressed((MouseEvent) mouseWheelEvent0);
      assertEquals(true, mouseWheelEvent0.isConsumed());
  }
}
