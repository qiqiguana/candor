/*
 * This file was automatically generated by EvoSuite
 */

package freemind.controller;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import freemind.controller.FreeMindPopupMenu;
import freemind.controller.StructuredMenuHolder;
import javax.swing.event.MenuListener;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FreeMindPopupMenuEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FreeMindPopupMenu freeMindPopupMenu0 = new FreeMindPopupMenu();
      StructuredMenuHolder.StructuredMenuListener structuredMenuHolder_StructuredMenuListener0 = new StructuredMenuHolder.StructuredMenuListener();
      freeMindPopupMenu0.addMenuListener((MenuListener) structuredMenuHolder_StructuredMenuListener0);
      freeMindPopupMenu0.firePopupMenuCanceled();
      assertEquals(false, freeMindPopupMenu0.isFocusOwner());
  }

  @Test
  public void test1()  throws Throwable  {
      FreeMindPopupMenu freeMindPopupMenu0 = new FreeMindPopupMenu();
      StructuredMenuHolder.StructuredMenuListener structuredMenuHolder_StructuredMenuListener0 = new StructuredMenuHolder.StructuredMenuListener();
      freeMindPopupMenu0.removeMenuListener((MenuListener) structuredMenuHolder_StructuredMenuListener0);
      assertEquals(true, freeMindPopupMenu0.isFocusTraversable());
  }

  @Test
  public void test2()  throws Throwable  {
      FreeMindPopupMenu freeMindPopupMenu0 = new FreeMindPopupMenu();
      StructuredMenuHolder.StructuredMenuListener structuredMenuHolder_StructuredMenuListener0 = new StructuredMenuHolder.StructuredMenuListener();
      freeMindPopupMenu0.addMenuListener((MenuListener) structuredMenuHolder_StructuredMenuListener0);
      freeMindPopupMenu0.firePopupMenuWillBecomeVisible();
      assertEquals(false, freeMindPopupMenu0.isMinimumSizeSet());
  }

  @Test
  public void test3()  throws Throwable  {
      FreeMindPopupMenu freeMindPopupMenu0 = new FreeMindPopupMenu();
      freeMindPopupMenu0.firePopupMenuCanceled();
      assertEquals(0, freeMindPopupMenu0.getY());
  }

  @Test
  public void test4()  throws Throwable  {
      FreeMindPopupMenu freeMindPopupMenu0 = new FreeMindPopupMenu();
      StructuredMenuHolder.StructuredMenuListener structuredMenuHolder_StructuredMenuListener0 = new StructuredMenuHolder.StructuredMenuListener();
      freeMindPopupMenu0.addMenuListener((MenuListener) structuredMenuHolder_StructuredMenuListener0);
      freeMindPopupMenu0.firePopupMenuWillBecomeInvisible();
      assertEquals("PopupMenuUI", freeMindPopupMenu0.getUIClassID());
  }
}
