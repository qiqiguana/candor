/*
 * This file was automatically generated by EvoSuite
 */

package freemind.controller.filter.condition;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import freemind.controller.filter.condition.JCondition;
import freemind.controller.filter.condition.SelectedViewCondition;
import freemind.main.XMLElement;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SelectedViewConditionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SelectedViewCondition selectedViewCondition0 = new SelectedViewCondition();
      selectedViewCondition0.save((XMLElement) null);
      assertEquals("filter_selected_node_view", selectedViewCondition0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      SelectedViewCondition selectedViewCondition0 = new SelectedViewCondition();
      String string0 = selectedViewCondition0.toString();
      assertEquals("filter_selected_node_view", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      SelectedViewCondition selectedViewCondition0 = new SelectedViewCondition();
      JCondition jCondition0 = (JCondition)selectedViewCondition0.getListCellRendererComponent();
      assertEquals(true, jCondition0.getFocusTraversalKeysEnabled());
  }

  @Test
  public void test3()  throws Throwable  {
      SelectedViewCondition selectedViewCondition0 = (SelectedViewCondition)SelectedViewCondition.CreateCondition();
      assertEquals("filter_selected_node_view", selectedViewCondition0.toString());
  }
}
