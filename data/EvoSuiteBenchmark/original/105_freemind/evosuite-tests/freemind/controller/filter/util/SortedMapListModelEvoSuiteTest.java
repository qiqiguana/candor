/*
 * This file was automatically generated by EvoSuite
 */

package freemind.controller.filter.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import freemind.controller.filter.util.SortedMapListModel;
import java.util.NoSuchElementException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SortedMapListModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SortedMapListModel sortedMapListModel0 = new SortedMapListModel();
      boolean boolean0 = sortedMapListModel0.contains((Object) "lighten");
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      SortedMapListModel sortedMapListModel0 = new SortedMapListModel();
      // Undeclared exception!
      try {
        sortedMapListModel0.lastElement();
        fail("Expecting exception: NoSuchElementException");
      } catch(NoSuchElementException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      SortedMapListModel sortedMapListModel0 = new SortedMapListModel();
      sortedMapListModel0.add((Object) "darkkhaki");
      int int0 = sortedMapListModel0.getIndexOf((Object) "darkkhaki");
      assertEquals(1, sortedMapListModel0.getSize());
      assertEquals(0, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      SortedMapListModel sortedMapListModel0 = new SortedMapListModel();
      // Undeclared exception!
      try {
        sortedMapListModel0.firstElement();
        fail("Expecting exception: NoSuchElementException");
      } catch(NoSuchElementException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      SortedMapListModel sortedMapListModel0 = new SortedMapListModel();
      Object[] objectArray0 = new Object[9];
      // Undeclared exception!
      try {
        sortedMapListModel0.addAll(objectArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      SortedMapListModel sortedMapListModel0 = new SortedMapListModel();
      // Undeclared exception!
      try {
        sortedMapListModel0.getElementAt(1993);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 1993
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      SortedMapListModel sortedMapListModel0 = new SortedMapListModel();
      sortedMapListModel0.add((Object) "font-variant");
      sortedMapListModel0.add((Object) "font-variant");
      assertEquals(1, sortedMapListModel0.getSize());
  }

  @Test
  public void test7()  throws Throwable  {
      SortedMapListModel sortedMapListModel0 = new SortedMapListModel();
      sortedMapListModel0.clear();
      assertEquals(0, sortedMapListModel0.getSize());
  }

  @Test
  public void test8()  throws Throwable  {
      SortedMapListModel sortedMapListModel0 = new SortedMapListModel();
      sortedMapListModel0.replace((Object) "x-large", (Object) "direction");
      assertEquals(1, sortedMapListModel0.getSize());
      
      sortedMapListModel0.clear();
      assertEquals(0, sortedMapListModel0.getSize());
  }

  @Test
  public void test9()  throws Throwable  {
      SortedMapListModel sortedMapListModel0 = new SortedMapListModel();
      sortedMapListModel0.add((Object) "font-variant");
      int int0 = sortedMapListModel0.getIndexOf((Object) "feDiffuseLighting");
      assertEquals(1, sortedMapListModel0.getSize());
      assertEquals((-1), int0);
  }

  @Test
  public void test10()  throws Throwable  {
      SortedMapListModel sortedMapListModel0 = new SortedMapListModel();
      sortedMapListModel0.replace((Object) "font-variant", (Object) "font-variant");
      assertEquals(0, sortedMapListModel0.getSize());
  }

  @Test
  public void test11()  throws Throwable  {
      SortedMapListModel sortedMapListModel0 = new SortedMapListModel();
      sortedMapListModel0.add((Object) "darkkhaki");
      sortedMapListModel0.replace((Object) "stroke-linecap", (Object) "darkkhaki");
      assertEquals(1, sortedMapListModel0.getSize());
  }

  @Test
  public void test12()  throws Throwable  {
      SortedMapListModel sortedMapListModel0 = new SortedMapListModel();
      sortedMapListModel0.remove((Object) "stop-opacity");
      assertEquals(0, sortedMapListModel0.getSize());
  }

  @Test
  public void test13()  throws Throwable  {
      SortedMapListModel sortedMapListModel0 = new SortedMapListModel();
      sortedMapListModel0.add((Object) "darkkhaki");
      assertEquals(1, sortedMapListModel0.getSize());
      
      sortedMapListModel0.remove((Object) "darkkhaki");
      assertEquals(0, sortedMapListModel0.getSize());
  }
}
