/*
 * This file was automatically generated by EvoSuite
 */

package freemind.controller.filter.condition;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import freemind.controller.filter.condition.NodeContainsCondition;
import freemind.main.XMLElement;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class NodeContainsConditionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      XMLElement xMLElement0 = new XMLElement();
      NodeContainsCondition nodeContainsCondition0 = (NodeContainsCondition)NodeContainsCondition.load(xMLElement0);
      assertEquals("filter_node filter_contains", nodeContainsCondition0.createDesctiption());
  }

  @Test
  public void test1()  throws Throwable  {
      NodeContainsCondition nodeContainsCondition0 = new NodeContainsCondition((String) null);
      String string0 = nodeContainsCondition0.createDesctiption();
      assertEquals("filter_node filter_contains", string0);
      assertNotNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      NodeContainsCondition nodeContainsCondition0 = new NodeContainsCondition((String) null);
      XMLElement xMLElement0 = new XMLElement();
      // Undeclared exception!
      try {
        nodeContainsCondition0.save(xMLElement0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
