/*
 * This file was automatically generated by EvoSuite
 */

package freemind.controller.filter.condition;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import freemind.controller.filter.condition.AttributeExistsCondition;
import freemind.controller.filter.condition.AttributeNotExistsCondition;
import freemind.controller.filter.condition.JCondition;
import freemind.main.XMLElement;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class NodeConditionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AttributeExistsCondition attributeExistsCondition0 = new AttributeExistsCondition("2ePD");
      XMLElement xMLElement0 = new XMLElement(true);
      attributeExistsCondition0.save(xMLElement0);
      assertEquals(1, xMLElement0.countChildren());
  }

  @Test
  public void test1()  throws Throwable  {
      AttributeNotExistsCondition attributeNotExistsCondition0 = new AttributeNotExistsCondition("#;8+8");
      JCondition jCondition0 = (JCondition)attributeNotExistsCondition0.getListCellRendererComponent();
      JCondition jCondition1 = (JCondition)attributeNotExistsCondition0.getListCellRendererComponent();
      assertNotNull(jCondition1);
      assertEquals(0.46666667F, jCondition1.getAlignmentY(), 0.01F);
      assertSame(jCondition1, jCondition0);
  }

  @Test
  public void test2()  throws Throwable  {
      AttributeExistsCondition attributeExistsCondition0 = new AttributeExistsCondition("N:$x[D[JzE4wBG,");
      attributeExistsCondition0.getListCellRendererComponent();
      String string0 = attributeExistsCondition0.toString();
      assertEquals("N:$x[D[JzE4wBG, filter_exist", string0);
  }
}
