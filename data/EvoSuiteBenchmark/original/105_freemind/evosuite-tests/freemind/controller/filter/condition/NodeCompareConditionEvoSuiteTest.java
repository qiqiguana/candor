/*
 * This file was automatically generated by EvoSuite
 */

package freemind.controller.filter.condition;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import freemind.controller.filter.condition.JCondition;
import freemind.controller.filter.condition.NodeCompareCondition;
import freemind.main.XMLElement;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class NodeCompareConditionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      XMLElement xMLElement0 = new XMLElement(false);
      NodeCompareCondition nodeCompareCondition0 = (NodeCompareCondition)NodeCompareCondition.load(xMLElement0);
      assertEquals("filter_node filter_is_not_equal_to", nodeCompareCondition0.createDesctiption());
  }

  @Test
  public void test1()  throws Throwable  {
      NodeCompareCondition nodeCompareCondition0 = new NodeCompareCondition("", false, (-1), false);
      XMLElement xMLElement0 = new XMLElement(false);
      nodeCompareCondition0.save(xMLElement0);
      assertEquals(1, xMLElement0.countChildren());
      assertEquals("filter_node >= \"\"", nodeCompareCondition0.createDesctiption());
  }

  @Test
  public void test2()  throws Throwable  {
      NodeCompareCondition nodeCompareCondition0 = new NodeCompareCondition("", false, (-1), false);
      JCondition jCondition0 = (JCondition)nodeCompareCondition0.getListCellRendererComponent();
      assertNotNull(jCondition0);
      assertEquals("filter_node >= \"\"", nodeCompareCondition0.createDesctiption());
      assertEquals("filter_node >= \"\"", nodeCompareCondition0.toString());
  }
}
