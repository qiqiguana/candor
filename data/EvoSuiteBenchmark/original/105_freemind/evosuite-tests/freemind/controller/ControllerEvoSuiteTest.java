/*
 * This file was automatically generated by EvoSuite
 */

package freemind.controller;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import freemind.controller.Controller;
import freemind.main.FreeMindMain;
import freemind.preferences.FreemindPropertyListener;
import java.awt.Color;
import java.awt.Component;
import java.awt.HeadlessException;
import java.awt.event.ComponentEvent;
import java.awt.event.FocusEvent;
import java.util.Collection;
import javax.swing.Icon;
import javax.swing.JCheckBox;
import javax.swing.JColorChooser;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ControllerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JCheckBox jCheckBox0 = new JCheckBox((Icon) null);
      try {
        Controller.showCommonJColorChooserDialog((Component) jCheckBox0, ">z!", (Color) null);
        fail("Expecting exception: HeadlessException");
      } catch(HeadlessException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Collection<Object> collection0 = Controller.getPropertyChangeListeners();
      assertEquals(true, collection0.isEmpty());
  }

  @Test
  public void test2()  throws Throwable  {
      Controller.addPropertyChangeListener((FreemindPropertyListener) null);
  }

  @Test
  public void test3()  throws Throwable  {
      Controller.removePropertyChangeListener((FreemindPropertyListener) null);
  }

  @Test
  public void test4()  throws Throwable  {
      Controller controller0 = null;
      try {
        controller0 = new Controller((FreeMindMain) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      JColorChooser jColorChooser0 = Controller.getCommonJColorChooser();
      Controller.DisposeOnClose controller_DisposeOnClose0 = new Controller.DisposeOnClose();
      FocusEvent focusEvent0 = new FocusEvent((Component) jColorChooser0, (-1545), true);
      // Undeclared exception!
      try {
        controller_DisposeOnClose0.componentHidden((ComponentEvent) focusEvent0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * javax.swing.JColorChooser cannot be cast to java.awt.Window
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Controller.Closer controller_Closer0 = new Controller.Closer();
      assertNotNull(controller_Closer0);
  }

  @Test
  public void test7()  throws Throwable  {
      Controller.CloseAction controller_CloseAction0 = null;
      try {
        controller_CloseAction0 = new Controller.CloseAction((Controller) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
