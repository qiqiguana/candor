/*
 * This file was automatically generated by EvoSuite
 */

package freemind.controller;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import freemind.controller.LastStateStorageManagement;
import freemind.controller.actions.generated.instance.MindmapLastStateStorage;
import freemind.controller.actions.generated.instance.NodeListMember;
import java.util.List;
import org.jibx.runtime.JiBXException;
import org.jibx.runtime.impl.UnmarshallingContext;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LastStateStorageManagementEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LastStateStorageManagement lastStateStorageManagement0 = new LastStateStorageManagement("EB>ES{zSm~2G!7K:0");
      assertNotNull(lastStateStorageManagement0);
      
      lastStateStorageManagement0.setLastFocussedTab((-9));
      assertEquals(-9, lastStateStorageManagement0.getLastFocussedTab());
      assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?><mindmap_last_state_map_storage last_focused_tab=\"-9\"></mindmap_last_state_map_storage>", lastStateStorageManagement0.getXml());
  }

  @Test
  public void test1()  throws Throwable  {
      LastStateStorageManagement lastStateStorageManagement0 = new LastStateStorageManagement("");
      int int0 = lastStateStorageManagement0.getLastFocussedTab();
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      LastStateStorageManagement lastStateStorageManagement0 = new LastStateStorageManagement("");
      String string0 = lastStateStorageManagement0.getXml();
      assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?><mindmap_last_state_map_storage></mindmap_last_state_map_storage>", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      LastStateStorageManagement lastStateStorageManagement0 = new LastStateStorageManagement("<?xml version=\"1.0\" encoding=\"UTF-8\"?><mindmap_last_state_map_storage></mindmap_last_state_map_storage>");
      assertEquals(0, lastStateStorageManagement0.getLastFocussedTab());
  }

  @Test
  public void test4()  throws Throwable  {
      LastStateStorageManagement lastStateStorageManagement0 = new LastStateStorageManagement((String) null);
      assertNotNull(lastStateStorageManagement0);
      
      MindmapLastStateStorage mindmapLastStateStorage0 = new MindmapLastStateStorage();
      lastStateStorageManagement0.changeOrAdd(mindmapLastStateStorage0);
      lastStateStorageManagement0.clearTabIndices();
      List<Object> list0 = lastStateStorageManagement0.getLastOpenList();
      assertNotNull(list0);
      assertEquals(true, list0.isEmpty());
  }

  @Test
  public void test5()  throws Throwable  {
      LastStateStorageManagement lastStateStorageManagement0 = new LastStateStorageManagement("EB>ES{zSm~2G!7K:0");
      assertNotNull(lastStateStorageManagement0);
      
      MindmapLastStateStorage mindmapLastStateStorage0 = new MindmapLastStateStorage();
      UnmarshallingContext unmarshallingContext0 = new UnmarshallingContext();
      NodeListMember nodeListMember0 = NodeListMember.JiBX_binding_newinstance_1_0(unmarshallingContext0);
      mindmapLastStateStorage0.addNodeListMember(nodeListMember0);
      lastStateStorageManagement0.changeOrAdd(mindmapLastStateStorage0);
      lastStateStorageManagement0.changeOrAdd(mindmapLastStateStorage0);
      assertEquals(1, mindmapLastStateStorage0.sizeNodeListMemberList());
  }

  @Test
  public void test6()  throws Throwable  {
      LastStateStorageManagement lastStateStorageManagement0 = new LastStateStorageManagement("");
      MindmapLastStateStorage mindmapLastStateStorage0 = new MindmapLastStateStorage();
      lastStateStorageManagement0.changeOrAdd(mindmapLastStateStorage0);
      MindmapLastStateStorage mindmapLastStateStorage1 = lastStateStorageManagement0.getStorage("<?xml version=\"1.0\" encoding=\"UTF-8\"?><mindmap_last_state_map_storage></mindmap_last_state_map_storage>");
      assertNull(mindmapLastStateStorage1);
  }

  @Test
  public void test7()  throws Throwable  {
      LastStateStorageManagement lastStateStorageManagement0 = new LastStateStorageManagement("");
      MindmapLastStateStorage mindmapLastStateStorage0 = new MindmapLastStateStorage();
      lastStateStorageManagement0.changeOrAdd(mindmapLastStateStorage0);
      MindmapLastStateStorage mindmapLastStateStorage1 = lastStateStorageManagement0.getStorage((String) null);
      assertSame(mindmapLastStateStorage1, mindmapLastStateStorage0);
  }

  @Test
  public void test8()  throws Throwable  {
      LastStateStorageManagement lastStateStorageManagement0 = new LastStateStorageManagement("");
      assertNotNull(lastStateStorageManagement0);
      
      MindmapLastStateStorage mindmapLastStateStorage0 = new MindmapLastStateStorage();
      lastStateStorageManagement0.changeOrAdd(mindmapLastStateStorage0);
      List<Object> list0 = lastStateStorageManagement0.getLastOpenList();
      assertNotNull(list0);
      assertEquals(1, list0.size());
  }
}
