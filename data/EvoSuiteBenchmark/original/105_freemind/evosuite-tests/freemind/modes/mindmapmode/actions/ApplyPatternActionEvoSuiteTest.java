/*
 * This file was automatically generated by EvoSuite
 */

package freemind.modes.mindmapmode.actions;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import freemind.modes.mindmapmode.actions.ApplyPatternAction;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ApplyPatternActionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try {
        ApplyPatternAction.edgeWidthStringToInt("M<q+H%kz ykf");
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
        /*
         * For input string: \"M<q+H%kz ykf\"
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = ApplyPatternAction.edgeWidthStringToInt((String) null);
      assertEquals((-1), int0);
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = ApplyPatternAction.edgeWidthStringToInt("thin");
      assertEquals(0, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      String string0 = ApplyPatternAction.edgeWidthIntToString((-850));
      assertNotNull(string0);
      assertEquals("-850", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      String string0 = ApplyPatternAction.edgeWidthIntToString(0);
      assertNotNull(string0);
      assertEquals("thin", string0);
  }
}
