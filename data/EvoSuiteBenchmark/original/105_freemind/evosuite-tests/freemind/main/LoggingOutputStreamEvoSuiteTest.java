/*
 * This file was automatically generated by EvoSuite
 */

package freemind.main;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import freemind.main.LoggingOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LoggingOutputStreamEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Level level0 = Level.CONFIG;
      LoggingOutputStream loggingOutputStream0 = new LoggingOutputStream((Logger) null, level0);
      byte[] byteArray0 = new byte[5];
      loggingOutputStream0.write(byteArray0);
      // Undeclared exception!
      try {
        loggingOutputStream0.flush();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Logger logger0 = Logger.getAnonymousLogger();
      Level level0 = Level.FINER;
      LoggingOutputStream loggingOutputStream0 = new LoggingOutputStream(logger0, level0);
      loggingOutputStream0.flush();
      assertEquals(0, loggingOutputStream0.size());
  }
}
