/*
 * This file was automatically generated by EvoSuite
 */

package freemind.main;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import freemind.main.FixedHTMLWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Writer;
import javax.swing.JTextField;
import javax.swing.JTextPane;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.JTextComponent;
import javax.swing.text.StyleContext;
import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.StyleSheet;
import org.apache.xml.utils.DefaultErrorHandler;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FixedHTMLWriterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      StyleSheet styleSheet0 = new StyleSheet();
      HTMLDocument hTMLDocument0 = new HTMLDocument(styleSheet0);
      FixedHTMLWriter fixedHTMLWriter0 = new FixedHTMLWriter((Writer) null, hTMLDocument0);
      fixedHTMLWriter0.writeAttributes((AttributeSet) null);
      assertEquals("{default=AttributeSet,}\n{margin-top=0,name=p,}\n{name=body,}\n{margin-top=0,resolver=AttributeSet,name=p,}\n{name=default,}\n{name=content,}\n{name=html,}\n{bidiLevel=0,}\n{}\n", styleSheet0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultErrorHandler defaultErrorHandler0 = new DefaultErrorHandler(true);
      PrintWriter printWriter0 = defaultErrorHandler0.getErrorWriter();
      HTMLDocument hTMLDocument0 = new HTMLDocument();
      FixedHTMLWriter fixedHTMLWriter0 = new FixedHTMLWriter((Writer) printWriter0, hTMLDocument0, 0, 0);
      StyleSheet styleSheet0 = hTMLDocument0.getStyleSheet();
      JTextPane jTextPane0 = new JTextPane();
      StyleContext.NamedStyle styleContext_NamedStyle0 = (StyleContext.NamedStyle)jTextPane0.getLogicalStyle();
      StyleContext.NamedStyle styleContext_NamedStyle1 = (StyleContext.NamedStyle)styleSheet0.addAttributes((AttributeSet) styleContext_NamedStyle0, (AttributeSet) styleContext_NamedStyle0);
      fixedHTMLWriter0.writeAttributes((AttributeSet) styleContext_NamedStyle1);
      assertEquals("{name=body,}\n{default=AttributeSet,}\n{margin-top=0,resolver=AttributeSet,name=p,}\n{name=default,}\n{name=content,}\n{margin-top=0,name=p,}\n{name=html,}\n{bidiLevel=0,}\n{}\n", styleSheet0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultErrorHandler defaultErrorHandler0 = new DefaultErrorHandler(true);
      PrintWriter printWriter0 = defaultErrorHandler0.getErrorWriter();
      HTMLDocument hTMLDocument0 = new HTMLDocument();
      FixedHTMLWriter fixedHTMLWriter0 = new FixedHTMLWriter((Writer) printWriter0, hTMLDocument0, 0, 0);
      fixedHTMLWriter0.write();
      assertEquals("\n", fixedHTMLWriter0.getLineSeparator());
  }

  @Test
  public void test3()  throws Throwable  {
      HTMLDocument hTMLDocument0 = new HTMLDocument();
      FixedHTMLWriter fixedHTMLWriter0 = new FixedHTMLWriter((Writer) null, hTMLDocument0);
      JTextField jTextField0 = new JTextField("d%D'\"-?^", 1259);
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jTextField0.new AccessibleJTextComponent();
      AbstractDocument.LeafElement abstractDocument_LeafElement0 = (AbstractDocument.LeafElement)jTextComponent_AccessibleJTextComponent0.getCharacterAttribute(1259);
      fixedHTMLWriter0.writeAttributes((AttributeSet) abstractDocument_LeafElement0);
      assertEquals("\n", fixedHTMLWriter0.getLineSeparator());
  }
}
