/*
 * This file was automatically generated by EvoSuite
 */

package accessories.plugins;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import accessories.plugins.BlinkingNodeHook;
import freemind.modes.MindMapNode;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BlinkingNodeHookEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BlinkingNodeHook blinkingNodeHook0 = new BlinkingNodeHook();
      BlinkingNodeHook.TimerColorChanger blinkingNodeHook_TimerColorChanger0 = blinkingNodeHook0.new TimerColorChanger();
      blinkingNodeHook_TimerColorChanger0.run();
      assertEquals(false, blinkingNodeHook_TimerColorChanger0.cancel());
  }

  @Test
  public void test1()  throws Throwable  {
      BlinkingNodeHook blinkingNodeHook0 = new BlinkingNodeHook();
      // Undeclared exception!
      try {
        blinkingNodeHook0.shutdownMapHook();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      BlinkingNodeHook blinkingNodeHook0 = new BlinkingNodeHook();
      // Undeclared exception!
      try {
        blinkingNodeHook0.invoke((MindMapNode) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
