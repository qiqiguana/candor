/*
 * This file was automatically generated by EvoSuite
 */

package accessories.plugins.dialogs;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import accessories.plugins.dialogs.ArrayListTransferHandler;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.util.ArrayList;
import java.util.Locale;
import javax.help.FavoritesItem;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JComponent;
import javax.swing.JInternalFrame;
import javax.swing.JList;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ArrayListTransferHandlerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ArrayListTransferHandler arrayListTransferHandler0 = new ArrayListTransferHandler();
      assertNotNull(arrayListTransferHandler0);
      
      ArrayList<JList> arrayList0 = new ArrayList<JList>(0);
      ArrayListTransferHandler.ArrayListTransferable arrayListTransferHandler_ArrayListTransferable0 = arrayListTransferHandler0.new ArrayListTransferable((ArrayList) arrayList0);
      // Undeclared exception!
      try {
        arrayListTransferHandler0.importData((JComponent) null, (Transferable) arrayListTransferHandler_ArrayListTransferable0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ArrayListTransferHandler arrayListTransferHandler0 = new ArrayListTransferHandler();
      assertNotNull(arrayListTransferHandler0);
      
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      int int0 = arrayListTransferHandler0.getSourceActions((JComponent) defaultListCellRenderer0);
      assertEquals((-1), arrayListTransferHandler0.addIndex);
      assertEquals(0, arrayListTransferHandler0.addCount);
      assertEquals(3, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      ArrayListTransferHandler arrayListTransferHandler0 = new ArrayListTransferHandler();
      assertNotNull(arrayListTransferHandler0);
      
      Locale locale0 = Locale.UK;
      FavoritesItem favoritesItem0 = new FavoritesItem("application/x-java-jvm-local-objectref;class=java.util.ArrayList", "application/x-java-jvm-local-objectref;class=java.util.ArrayList", "application/x-java-jvm-local-objectref;class=java.util.ArrayList", "application/x-java-jvm-local-objectref;class=java.util.ArrayList", locale0);
      boolean boolean0 = arrayListTransferHandler0.importData((JComponent) null, (Transferable) favoritesItem0);
      assertEquals(0, arrayListTransferHandler0.addCount);
      assertEquals(false, boolean0);
      assertEquals((-1), arrayListTransferHandler0.addIndex);
  }

  @Test
  public void test3()  throws Throwable  {
      ArrayListTransferHandler arrayListTransferHandler0 = new ArrayListTransferHandler();
      assertEquals(0, arrayListTransferHandler0.addCount);
      assertNotNull(arrayListTransferHandler0);
      
      arrayListTransferHandler0.exportDone((JComponent) null, (Transferable) null, 1);
      assertEquals((-1), arrayListTransferHandler0.addIndex);
  }

  @Test
  public void test4()  throws Throwable  {
      ArrayListTransferHandler arrayListTransferHandler0 = new ArrayListTransferHandler();
      assertNotNull(arrayListTransferHandler0);
      
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      arrayListTransferHandler0.createTransferable((JComponent) jInternalFrame0);
      assertEquals(0, arrayListTransferHandler0.addCount);
      assertEquals((-1), arrayListTransferHandler0.addIndex);
  }

  @Test
  public void test5()  throws Throwable  {
      ArrayListTransferHandler arrayListTransferHandler0 = new ArrayListTransferHandler();
      assertNotNull(arrayListTransferHandler0);
      
      ArrayListTransferHandler.ArrayListTransferable arrayListTransferHandler_ArrayListTransferable0 = arrayListTransferHandler0.new ArrayListTransferable((ArrayList) null);
      DataFlavor dataFlavor0 = new DataFlavor();
      try {
        arrayListTransferHandler_ArrayListTransferable0.getTransferData(dataFlavor0);
        fail("Expecting exception: UnsupportedFlavorException");
      } catch(UnsupportedFlavorException e) {
      }
  }
}
