/*
 * This file was automatically generated by EvoSuite
 */

package accessories.plugins.time;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import accessories.plugins.time.JDayChooser;
import accessories.plugins.time.JYearChooser;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JYearChooserEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JYearChooser jYearChooser0 = new JYearChooser();
      assertNotNull(jYearChooser0);
      
      jYearChooser0.setEndYear((-1895));
      assertEquals(-1895, jYearChooser0.getEndYear());
      assertEquals("accessories.plugins.time.JYearChooser[JYearChooser,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", jYearChooser0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      JYearChooser jYearChooser0 = new JYearChooser();
      assertNotNull(jYearChooser0);
      
      int int0 = jYearChooser0.getYear();
      assertEquals(292278994, jYearChooser0.getMaximum());
      assertEquals("accessories.plugins.time.JYearChooser[JYearChooser,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", jYearChooser0.toString());
      assertEquals(1, jYearChooser0.getMinimum());
      assertEquals(2013, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      JYearChooser jYearChooser0 = new JYearChooser();
      assertNotNull(jYearChooser0);
      
      jYearChooser0.setStartYear(969);
      assertEquals(969, jYearChooser0.getMinimum());
      assertEquals(2013, jYearChooser0.getValue());
  }

  @Test
  public void test3()  throws Throwable  {
      JYearChooser jYearChooser0 = new JYearChooser();
      assertNotNull(jYearChooser0);
      
      JDayChooser jDayChooser0 = new JDayChooser();
      jYearChooser0.setDayChooser(jDayChooser0);
      assertEquals(2013, jYearChooser0.getYear());
      
      jYearChooser0.setValue(0);
      assertEquals(1, jYearChooser0.getValue());
  }

  @Test
  public void test4()  throws Throwable  {
      JYearChooser jYearChooser0 = new JYearChooser();
      assertNotNull(jYearChooser0);
      
      int int0 = jYearChooser0.getEndYear();
      assertEquals(292278994, int0);
      assertEquals(2013, jYearChooser0.getValue());
      assertEquals("accessories.plugins.time.JYearChooser[JYearChooser,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", jYearChooser0.toString());
      assertEquals(1, jYearChooser0.getStartYear());
  }

  @Test
  public void test5()  throws Throwable  {
      JYearChooser jYearChooser0 = new JYearChooser();
      assertNotNull(jYearChooser0);
      
      int int0 = jYearChooser0.getStartYear();
      assertEquals(1, int0);
      assertEquals("JYearChooser", jYearChooser0.getName());
      assertEquals(292278994, jYearChooser0.getEndYear());
      assertEquals(2013, jYearChooser0.getYear());
  }
}
