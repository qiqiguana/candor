/*
 * This file was automatically generated by EvoSuite
 */

package accessories.plugins.time;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import accessories.plugins.time.TimeManagement;
import freemind.modes.Mode;
import freemind.modes.browsemode.BrowseMode;
import freemind.modes.filemode.FileMode;
import freemind.view.MapModule;
import java.awt.event.ActionEvent;
import java.beans.PropertyChangeEvent;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TimeManagementEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TimeManagement timeManagement0 = new TimeManagement();
      timeManagement0.numberOfOpenMapInformation(0, 0);
      assertNull(timeManagement0.getName());
  }

  @Test
  public void test1()  throws Throwable  {
      TimeManagement timeManagement0 = new TimeManagement();
      BrowseMode browseMode0 = new BrowseMode();
      FileMode fileMode0 = new FileMode();
      // Undeclared exception!
      try {
        timeManagement0.beforeMapModuleChange((MapModule) null, (Mode) browseMode0, (MapModule) null, (Mode) fileMode0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TimeManagement timeManagement0 = new TimeManagement();
      BrowseMode browseMode0 = new BrowseMode();
      timeManagement0.afterMapClose((MapModule) null, (Mode) browseMode0);
      assertEquals("Browse", browseMode0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      TimeManagement timeManagement0 = new TimeManagement();
      ActionEvent actionEvent0 = new ActionEvent((Object) "cap-height", 998, "mV#s^", 879L, 998);
      // Undeclared exception!
      try {
        timeManagement0.actionPerformed(actionEvent0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TimeManagement timeManagement0 = new TimeManagement();
      BrowseMode browseMode0 = new BrowseMode();
      boolean boolean0 = timeManagement0.isMapModuleChangeAllowed((MapModule) null, (Mode) null, (MapModule) null, (Mode) browseMode0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      TimeManagement timeManagement0 = new TimeManagement();
      BrowseMode browseMode0 = new BrowseMode();
      timeManagement0.afterMapModuleChange((MapModule) null, (Mode) browseMode0, (MapModule) null, (Mode) browseMode0);
      assertEquals("Browse", browseMode0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      TimeManagement timeManagement0 = new TimeManagement();
      // Undeclared exception!
      try {
        timeManagement0.startupMapHook();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TimeManagement timeManagement0 = new TimeManagement();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent((Object) "stroke-dasharray", "stroke-dasharray", (Object) "stroke-dasharray", (Object) "stroke-dasharray");
      timeManagement0.propertyChange(propertyChangeEvent0);
      assertNull(timeManagement0.getName());
  }
}
