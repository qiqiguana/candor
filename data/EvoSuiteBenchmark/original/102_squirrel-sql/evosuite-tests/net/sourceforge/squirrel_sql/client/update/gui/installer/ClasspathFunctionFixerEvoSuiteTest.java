/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.client.update.gui.installer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sourceforge.squirrel_sql.client.update.gui.installer.ClasspathFunctionFixer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ClasspathFunctionFixerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ClasspathFunctionFixer classpathFunctionFixer0 = new ClasspathFunctionFixer();
      String string0 = classpathFunctionFixer0.fixLine(":`s#;|;d.sh", ":`s#;|;d.sh");
      assertEquals(":`s#;|;d.sh", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      ClasspathFunctionFixer classpathFunctionFixer0 = new ClasspathFunctionFixer();
      String string0 = classpathFunctionFixer0.fixLine(":`s#;|;d.sh", ")buildCPFromDir()");
      assertNotNull(string0);
      
      String string1 = classpathFunctionFixer0.fixLine(":`s#;|;d.sh", "6/2w{");
      assertEquals("6/2w{", string1);
      
      String string2 = classpathFunctionFixer0.fixLine(":`s#;|;d.sh", ":`s#;|;d.sh");
      assertEquals("\tCP=\"\"\n:`s#;|;d.sh", string2);
      
      String string3 = classpathFunctionFixer0.fixLine("\tCP=\"\"\n:`s#;|;d.sh", ")buildCPFromDir()");
      assertTrue(string3.equals(string0));
  }

  @Test
  public void test2()  throws Throwable  {
      ClasspathFunctionFixer classpathFunctionFixer0 = new ClasspathFunctionFixer();
      String string0 = classpathFunctionFixer0.fixLine(")buildCPFromDir()", ")buildCPFromDir()");
      assertEquals(")buildCPFromDir()", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      ClasspathFunctionFixer classpathFunctionFixer0 = new ClasspathFunctionFixer();
      String string0 = classpathFunctionFixer0.fixLine(":`s#;|;d.sh", ")buildCPFromDir()");
      assertEquals(")buildCPFromDir()", string0);
      assertNotNull(string0);
      
      String string1 = classpathFunctionFixer0.fixLine(":`s#;|;d.sh", ":`s#;|;d.sh");
      assertEquals(":`s#;|;d.sh", string1);
  }
}
