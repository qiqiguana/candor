/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.gui.action.exportData;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sourceforge.squirrel_sql.fw.datasetviewer.ColumnDisplayDefinition;
import net.sourceforge.squirrel_sql.fw.dialects.DialectType;
import net.sourceforge.squirrel_sql.fw.gui.action.exportData.ExportDataColumn;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ExportDataColumnEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DialectType dialectType0 = DialectType.HADB;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition((-572), "JS:G-qeG(qO7", "JS:G-qeG(qO7", "JS:G-qeG(qO7", 999, "JS:G-qeG(qO7", false, (-1), (-1), (-1), true, false, false, dialectType0);
      ExportDataColumn exportDataColumn0 = new ExportDataColumn(columnDisplayDefinition0, (Object) "caret-begin-line", 999, 999);
      ColumnDisplayDefinition columnDisplayDefinition1 = exportDataColumn0.getColumnDisplayDefinition();
      assertEquals(999, exportDataColumn0.getColumnIndex());
      assertNotNull(columnDisplayDefinition1);
      assertEquals(999, exportDataColumn0.getRowIndex());
  }

  @Test
  public void test1()  throws Throwable  {
      DialectType dialectType0 = DialectType.HADB;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition((-572), "JS:G-qeG(qO7", "JS:G-qeG(qO7", "JS:G-qeG(qO7", 999, "JS:G-qeG(qO7", false, (-1), (-1), (-1), true, false, false, dialectType0);
      ExportDataColumn exportDataColumn0 = new ExportDataColumn(columnDisplayDefinition0, (Object) "caret-begin-line", 999, 999);
      int int0 = exportDataColumn0.getColumnIndex();
      assertEquals(999, exportDataColumn0.getRowIndex());
      assertEquals(999, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      ExportDataColumn exportDataColumn0 = new ExportDataColumn();
      assertEquals(0, exportDataColumn0.getColumnIndex());
  }

  @Test
  public void test3()  throws Throwable  {
      DialectType dialectType0 = DialectType.HADB;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition((-572), "JS:G-qeG(qO7", "JS:G-qeG(qO7", "JS:G-qeG(qO7", 999, "JS:G-qeG(qO7", false, (-1), (-1), (-1), true, false, false, dialectType0);
      ExportDataColumn exportDataColumn0 = new ExportDataColumn(columnDisplayDefinition0, (Object) "caret-begin-line", 999, 999);
      String string0 = (String)exportDataColumn0.getObject();
      assertNotNull(string0);
      assertEquals(999, exportDataColumn0.getColumnIndex());
      assertEquals(999, exportDataColumn0.getRowIndex());
  }

  @Test
  public void test4()  throws Throwable  {
      DialectType dialectType0 = DialectType.HADB;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition((-572), "JS:G-qeG(qO7", "JS:G-qeG(qO7", "JS:G-qeG(qO7", 999, "JS:G-qeG(qO7", false, (-1), (-1), (-1), true, false, false, dialectType0);
      ExportDataColumn exportDataColumn0 = new ExportDataColumn(columnDisplayDefinition0, (Object) "caret-begin-line", 999, 999);
      int int0 = exportDataColumn0.getRowIndex();
      assertEquals(999, exportDataColumn0.getColumnIndex());
      assertEquals(999, int0);
  }
}
