/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import net.sourceforge.squirrel_sql.fw.util.PropertyChangeReporter;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PropertyChangeReporterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PropertyChangeReporter propertyChangeReporter0 = new PropertyChangeReporter((Object) "K`XZ");
      propertyChangeReporter0.removePropertyChangeListener((PropertyChangeListener) null);
  }

  @Test
  public void test1()  throws Throwable  {
      PropertyChangeReporter propertyChangeReporter0 = new PropertyChangeReporter((Object) "11$=F");
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("40Bm", (PropertyChangeListener) null);
      propertyChangeReporter0.addPropertyChangeListener((PropertyChangeListener) propertyChangeListenerProxy0);
      assertEquals("40Bm", propertyChangeListenerProxy0.getPropertyName());
  }

  @Test
  public void test2()  throws Throwable  {
      PropertyChangeReporter propertyChangeReporter0 = null;
      try {
        propertyChangeReporter0 = new PropertyChangeReporter((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Null srcBean passed
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      PropertyChangeReporter propertyChangeReporter0 = new PropertyChangeReporter((Object) ">EP+)@");
      propertyChangeReporter0.setNotify(false);
      propertyChangeReporter0.firePropertyChange(">EP+)@", (Object) null, (Object) null);
  }

  @Test
  public void test4()  throws Throwable  {
      Object object0 = new Object();
      PropertyChangeReporter propertyChangeReporter0 = new PropertyChangeReporter(object0);
      propertyChangeReporter0.firePropertyChange("DZe!;YZ#:R ,N$S#", object0, object0);
  }

  @Test
  public void test5()  throws Throwable  {
      PropertyChangeReporter propertyChangeReporter0 = new PropertyChangeReporter((Object) ">EP+)@");
      propertyChangeReporter0.setNotify(false);
      propertyChangeReporter0.firePropertyChange(">EP+)@", true, true);
  }

  @Test
  public void test6()  throws Throwable  {
      Object object0 = new Object();
      PropertyChangeReporter propertyChangeReporter0 = new PropertyChangeReporter(object0);
      propertyChangeReporter0.firePropertyChange("", true, true);
      propertyChangeReporter0.firePropertyChange("&}icWd&i) Ze3Mn'T", false, false);
  }

  @Test
  public void test7()  throws Throwable  {
      PropertyChangeReporter propertyChangeReporter0 = new PropertyChangeReporter((Object) "11$=F");
      propertyChangeReporter0.setNotify(false);
      propertyChangeReporter0.firePropertyChange("11$=F", (-1307), (-1307));
  }

  @Test
  public void test8()  throws Throwable  {
      PropertyChangeReporter propertyChangeReporter0 = new PropertyChangeReporter((Object) "11$=F");
      propertyChangeReporter0.firePropertyChange("11$=F", (-1033), (-1033));
  }
}
