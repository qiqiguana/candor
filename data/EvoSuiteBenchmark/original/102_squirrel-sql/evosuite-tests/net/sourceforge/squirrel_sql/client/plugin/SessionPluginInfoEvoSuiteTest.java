/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.client.plugin;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sourceforge.squirrel_sql.client.DummyAppPlugin;
import net.sourceforge.squirrel_sql.client.plugin.PluginInfo;
import net.sourceforge.squirrel_sql.client.plugin.SessionPluginInfo;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SessionPluginInfoEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PluginInfo pluginInfo0 = new PluginInfo("");
      SessionPluginInfo sessionPluginInfo0 = null;
      try {
        sessionPluginInfo0 = new SessionPluginInfo(pluginInfo0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Null IPlugin passed
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      PluginInfo pluginInfo0 = new PluginInfo("cmS<.");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      pluginInfo0.setPlugin(dBCopyPlugin0);
      SessionPluginInfo sessionPluginInfo0 = new SessionPluginInfo(pluginInfo0);
      DBCopyPlugin dBCopyPlugin1 = (DBCopyPlugin)sessionPluginInfo0.getSessionPlugin();
      assertSame(dBCopyPlugin1, dBCopyPlugin0);
  }

  @Test
  public void test2()  throws Throwable  {
      PluginInfo pluginInfo0 = new PluginInfo("");
      DummyAppPlugin dummyAppPlugin0 = new DummyAppPlugin();
      pluginInfo0.setPlugin(dummyAppPlugin0);
      SessionPluginInfo sessionPluginInfo0 = null;
      try {
        sessionPluginInfo0 = new SessionPluginInfo(pluginInfo0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Plugin not an ISessionPlugin
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      SessionPluginInfo sessionPluginInfo0 = null;
      try {
        sessionPluginInfo0 = new SessionPluginInfo((PluginInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Null PluginInfo passed
         */
      }
  }
}
