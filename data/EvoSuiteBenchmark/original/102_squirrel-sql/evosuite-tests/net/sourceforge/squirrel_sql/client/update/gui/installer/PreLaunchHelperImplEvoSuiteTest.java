/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.client.update.gui.installer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.util.List;
import java.util.Vector;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import net.sourceforge.squirrel_sql.client.update.UpdateUtil;
import net.sourceforge.squirrel_sql.client.update.UpdateUtilImpl;
import net.sourceforge.squirrel_sql.client.update.gui.installer.ArtifactInstallerFactory;
import net.sourceforge.squirrel_sql.client.update.gui.installer.ArtifactInstallerFactoryImpl;
import net.sourceforge.squirrel_sql.client.update.gui.installer.PreLaunchHelperImpl;
import net.sourceforge.squirrel_sql.fw.util.IOUtilities;
import net.sourceforge.squirrel_sql.fw.util.IOUtilitiesImpl;
import net.sourceforge.squirrel_sql.fw.util.ScriptLineFixer;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PreLaunchHelperImplEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      PreLaunchHelperImpl preLaunchHelperImpl0 = new PreLaunchHelperImpl();
      preLaunchHelperImpl0.setScriptLocation("Exn-?wOvx4#");
      // Undeclared exception!
      try {
        preLaunchHelperImpl0.updateLaunchScript();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      PreLaunchHelperImpl preLaunchHelperImpl0 = new PreLaunchHelperImpl();
      Vector<ScriptLineFixer> vector0 = new Vector<ScriptLineFixer>(521);
      preLaunchHelperImpl0.setScriptLineFixers((List<ScriptLineFixer>) vector0);
      assertEquals(0, vector0.size());
  }

  @Test
  public void test2()  throws Throwable  {
      PreLaunchHelperImpl preLaunchHelperImpl0 = new PreLaunchHelperImpl();
      IOUtilitiesImpl iOUtilitiesImpl0 = new IOUtilitiesImpl();
      preLaunchHelperImpl0.setIoutils((IOUtilities) iOUtilitiesImpl0);
      assertNull(preLaunchHelperImpl0.getScriptLocation());
  }

  @Test
  public void test3()  throws Throwable  {
      PreLaunchHelperImpl preLaunchHelperImpl0 = new PreLaunchHelperImpl();
      ArtifactInstallerFactoryImpl artifactInstallerFactoryImpl0 = new ArtifactInstallerFactoryImpl();
      preLaunchHelperImpl0.setArtifactInstallerFactory((ArtifactInstallerFactory) artifactInstallerFactoryImpl0);
      assertNull(preLaunchHelperImpl0.getScriptLocation());
  }

  @Test
  public void test4()  throws Throwable  {
      PreLaunchHelperImpl preLaunchHelperImpl0 = new PreLaunchHelperImpl();
      UpdateUtilImpl updateUtilImpl0 = new UpdateUtilImpl();
      preLaunchHelperImpl0.setUpdateUtil((UpdateUtil) updateUtilImpl0);
      assertNull(preLaunchHelperImpl0.getScriptLocation());
  }

  @Test
  public void test5()  throws Throwable  {
      PreLaunchHelperImpl preLaunchHelperImpl0 = new PreLaunchHelperImpl();
      String string0 = preLaunchHelperImpl0.getScriptLocation();
      assertNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      PreLaunchHelperImpl preLaunchHelperImpl0 = new PreLaunchHelperImpl();
      // Undeclared exception!
      try {
        preLaunchHelperImpl0.updateLaunchScript();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          PreLaunchHelperImpl preLaunchHelperImpl0 = new PreLaunchHelperImpl();
          // Undeclared exception!
          try {
            preLaunchHelperImpl0.copySplashImage();
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.io.FilePermission /mnt/fastdata/ac1gf/SF110/dist/102_squirrel-sql/icons write)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkWrite(SecurityManager.java:962)
             * java.io.File.mkdir(File.java:1155)
             * net.sourceforge.squirrel_sql.client.update.gui.installer.PreLaunchHelperImpl.copySplashImage(PreLaunchHelperImpl.java:262)
             * sun.reflect.GeneratedMethodAccessor131.invoke(Unknown Source)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }
}
