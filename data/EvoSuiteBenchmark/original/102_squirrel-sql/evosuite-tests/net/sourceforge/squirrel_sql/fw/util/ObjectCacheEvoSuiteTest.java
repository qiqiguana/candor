/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Iterator;
import javax.swing.Icon;
import net.sourceforge.squirrel_sql.fw.id.IHasIdentifier;
import net.sourceforge.squirrel_sql.fw.id.IIdentifier;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.util.DuplicateObjectException;
import net.sourceforge.squirrel_sql.fw.util.IObjectCacheChangeListener;
import net.sourceforge.squirrel_sql.fw.util.ObjectCache;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ObjectCacheEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ObjectCache<IHasIdentifier> objectCache0 = new ObjectCache<IHasIdentifier>();
      Class<?> class0 = Icon.class;
      Iterator<IHasIdentifier> iterator0 = objectCache0.getAllForClass(class0);
      assertEquals(false, iterator0.hasNext());
  }

  @Test
  public void test1()  throws Throwable  {
      ObjectCache<IHasIdentifier> objectCache0 = new ObjectCache<IHasIdentifier>();
      Class<?> class0 = Icon.class;
      objectCache0.removeChangesListener((IObjectCacheChangeListener) null, class0);
      Class<IHasIdentifier>[] classArray0 = objectCache0.getAllClasses();
      assertNotNull(classArray0);
  }

  @Test
  public void test2()  throws Throwable  {
      ObjectCache<IHasIdentifier> objectCache0 = new ObjectCache<IHasIdentifier>();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX_TYPE_DBO;
      objectCache0.add((IHasIdentifier) databaseObjectType0);
      try {
        objectCache0.add((IHasIdentifier) databaseObjectType0);
        fail("Expecting exception: DuplicateObjectException");
      } catch(DuplicateObjectException e) {
        /*
         * An object of class net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType with an ID of 10 already exists in the cache
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ObjectCache<IHasIdentifier> objectCache0 = new ObjectCache<IHasIdentifier>();
      Class<?> class0 = Icon.class;
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(2014);
      IHasIdentifier iHasIdentifier0 = objectCache0.get(class0, (IIdentifier) integerIdentifier0);
      assertNull(iHasIdentifier0);
  }

  @Test
  public void test4()  throws Throwable  {
      ObjectCache<IHasIdentifier> objectCache0 = new ObjectCache<IHasIdentifier>();
      Class<?> class0 = Icon.class;
      objectCache0.addChangesListener((IObjectCacheChangeListener) null, class0);
  }

  @Test
  public void test5()  throws Throwable  {
      ObjectCache<IHasIdentifier> objectCache0 = new ObjectCache<IHasIdentifier>();
      Class<?> class0 = Icon.class;
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(2014);
      objectCache0.remove(class0, (IIdentifier) integerIdentifier0);
      assertEquals("2014", integerIdentifier0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      ObjectCache<IHasIdentifier> objectCache0 = new ObjectCache<IHasIdentifier>();
      Class<IHasIdentifier>[] classArray0 = objectCache0.getAllClasses();
      assertNotNull(classArray0);
  }
}
