/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.sql;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.Vector;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.ProgressCallBack;
import net.sourceforge.squirrel_sql.fw.sql.ProgressCallBackAdaptor;
import net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.SQLUtilities;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SQLUtilitiesEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Vector<ITableInfo> vector0 = new Vector<ITableInfo>();
      ProgressCallBackAdaptor progressCallBackAdaptor0 = new ProgressCallBackAdaptor();
      List<ITableInfo> list0 = SQLUtilities.getDeletionOrder((List<ITableInfo>) vector0, (SQLDatabaseMetaData) null, (ProgressCallBack) progressCallBackAdaptor0);
      assertEquals(true, list0.isEmpty());
  }

  @Test
  public void test1()  throws Throwable  {
      SQLUtilities sQLUtilities0 = new SQLUtilities();
      assertNotNull(sQLUtilities0);
  }

  @Test
  public void test2()  throws Throwable  {
      SQLUtilities.closeResultSet((ResultSet) null);
  }

  @Test
  public void test3()  throws Throwable  {
      String string0 = SQLUtilities.quoteIdentifier("8{Zc\"=H|VI");
      assertEquals("8{Zc\"\"=H|VI", string0);
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      String string0 = SQLUtilities.quoteIdentifier((String) null);
      assertNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      String string0 = SQLUtilities.quoteIdentifier("K\"");
      assertNotNull(string0);
      assertEquals("K\"", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      ProgressCallBackAdaptor progressCallBackAdaptor0 = new ProgressCallBackAdaptor();
      List<ITableInfo> list0 = SQLUtilities.getInsertionOrder((List<ITableInfo>) null, (SQLDatabaseMetaData) null, (ProgressCallBack) progressCallBackAdaptor0);
      assertNull(list0);
  }

  @Test
  public void test7()  throws Throwable  {
      Vector<ITableInfo> vector0 = new Vector<ITableInfo>();
      List<String> list0 = SQLUtilities.getExtFKParents((SQLDatabaseMetaData) null, (List<ITableInfo>) vector0);
      assertEquals(0, list0.size());
  }

  @Test
  public void test8()  throws Throwable  {
      Vector<ITableInfo> vector0 = new Vector<ITableInfo>();
      List<String> list0 = SQLUtilities.getExtFKChildren((SQLDatabaseMetaData) null, (List<ITableInfo>) vector0);
      assertEquals(0, list0.size());
  }

  @Test
  public void test9()  throws Throwable  {
      SQLUtilities.closeStatement((Statement) null);
  }

  @Test
  public void test10()  throws Throwable  {
      String string0 = SQLUtilities.getQualifiedTableName((String) null, (String) null, (String) null);
      assertNotNull(string0);
      assertEquals("null", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      String string0 = SQLUtilities.getQualifiedTableName("K\"", "K\"", "8{Zc\"=H|VI");
      assertEquals("K\".K\".8{Zc\"=H|VI", string0);
      assertNotNull(string0);
  }
}
