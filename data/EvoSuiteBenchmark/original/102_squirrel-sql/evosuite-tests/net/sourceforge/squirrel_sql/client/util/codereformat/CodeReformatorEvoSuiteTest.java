/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.client.util.codereformat;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.ArrayList;
import java.util.regex.PatternSyntaxException;
import net.sourceforge.squirrel_sql.client.util.codereformat.CodeReformator;
import net.sourceforge.squirrel_sql.client.util.codereformat.CodeReformatorConfig;
import net.sourceforge.squirrel_sql.client.util.codereformat.CommentSpec;
import net.sourceforge.squirrel_sql.client.util.codereformat.PieceMarkerSpec;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CodeReformatorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CommentSpec[] commentSpecArray0 = new CommentSpec[2];
      CommentSpec commentSpec0 = new CommentSpec("}')Vw:xz~x(HJ(", "}')Vw:xz~x(HJ(");
      commentSpecArray0[0] = commentSpec0;
      commentSpecArray0[1] = commentSpecArray0[0];
      ArrayList<PieceMarkerSpec> arrayList0 = new ArrayList<PieceMarkerSpec>();
      CodeReformatorConfig codeReformatorConfig0 = new CodeReformatorConfig("}')Vw:xz~x(HJ(", commentSpecArray0, "}')Vw:xz~x(HJ(", (-1313), false, arrayList0);
      CodeReformator codeReformator0 = new CodeReformator(codeReformatorConfig0);
      // Undeclared exception!
      try {
        codeReformator0.reformat("}')Vw:xz~x(HJ(");
        fail("Expecting exception: PatternSyntaxException");
      } catch(PatternSyntaxException e) {
        /*
         * Unmatched closing ')' near index 1
         * }')Vw:xz~x(HJ(
         *  ^
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      CommentSpec[] commentSpecArray0 = new CommentSpec[5];
      CommentSpec commentSpec0 = new CommentSpec("|", "|");
      commentSpecArray0[1] = commentSpec0;
      commentSpecArray0[3] = commentSpec0;
      commentSpecArray0[4] = commentSpecArray0[3];
      ArrayList<PieceMarkerSpec> arrayList0 = new ArrayList<PieceMarkerSpec>();
      commentSpecArray0[0] = commentSpec0;
      commentSpecArray0[2] = commentSpec0;
      CodeReformatorConfig codeReformatorConfig0 = new CodeReformatorConfig("|", commentSpecArray0, "|", (-474), false, arrayList0);
      CodeReformator codeReformator0 = new CodeReformator(codeReformatorConfig0);
      String string0 = codeReformator0.reformat("i'9");
      assertNotNull(string0);
      assertEquals("i'9\n", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      CommentSpec[] commentSpecArray0 = new CommentSpec[4];
      CommentSpec commentSpec0 = new CommentSpec("z|", "z|");
      commentSpecArray0[0] = commentSpec0;
      commentSpecArray0[1] = commentSpec0;
      commentSpecArray0[2] = commentSpecArray0[0];
      commentSpecArray0[3] = commentSpec0;
      ArrayList<PieceMarkerSpec> arrayList0 = new ArrayList<PieceMarkerSpec>();
      CodeReformatorConfig codeReformatorConfig0 = new CodeReformatorConfig("z|", commentSpecArray0, "z|", 1591, false, arrayList0);
      CodeReformator codeReformator0 = new CodeReformator(codeReformatorConfig0);
      // Undeclared exception!
      try {
        codeReformator0.reformat("z|");
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Reformat failed, normalized Strings differ
         * z| z| | z|
         * z| z| | z| z|
         * ----------^
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      CommentSpec[] commentSpecArray0 = new CommentSpec[8];
      CommentSpec commentSpec0 = new CommentSpec("Tm4O7,+&3KFer`3", "Tm4O7,+&3KFer`3");
      commentSpecArray0[1] = commentSpec0;
      commentSpecArray0[2] = commentSpec0;
      commentSpecArray0[3] = commentSpec0;
      ArrayList<PieceMarkerSpec> arrayList0 = new ArrayList<PieceMarkerSpec>();
      CommentSpec[] commentSpecArray1 = new CommentSpec[6];
      commentSpecArray1[0] = commentSpecArray0[2];
      commentSpecArray1[1] = commentSpecArray1[0];
      commentSpecArray1[2] = commentSpecArray1[1];
      commentSpecArray1[3] = commentSpecArray0[3];
      commentSpecArray1[4] = commentSpecArray0[1];
      commentSpecArray1[5] = commentSpecArray0[1];
      CodeReformatorConfig codeReformatorConfig0 = new CodeReformatorConfig("Tm4O7,+&3KFer`3", commentSpecArray1, "<,", 9, true, arrayList0);
      CodeReformator codeReformator0 = new CodeReformator(codeReformatorConfig0);
      // Undeclared exception!
      try {
        codeReformator0.reformat("does not have a class function tolevel ( does not have a class function tolevel ( string , level ) string , does not have a class function tolevel ( string , level ) level )");
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Reformat failed, normalized Strings differ
         * does not have a class function tolevel ( does not have a class function tolevel ( string , level ) string , does not have a class function tolevel ( string , level ) level )
         * does not have a class function tolevel ( < , does not have a class function tolevel ( string , level ) string , < , does not have a class function tolevel < , ( < , < , string , < , < , level < , ) < , level )
         * -----------------------------------------^
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      CommentSpec[] commentSpecArray0 = new CommentSpec[7];
      CommentSpec commentSpec0 = new CommentSpec("] using classloader.getsystemresource(). ( ) .", "] using classloader.getsystemresource(). ( ) .");
      commentSpecArray0[0] = commentSpec0;
      commentSpecArray0[1] = commentSpec0;
      commentSpecArray0[2] = commentSpecArray0[0];
      commentSpecArray0[3] = commentSpecArray0[0];
      commentSpecArray0[4] = commentSpecArray0[1];
      commentSpecArray0[5] = commentSpec0;
      commentSpecArray0[6] = commentSpec0;
      ArrayList<PieceMarkerSpec> arrayList0 = new ArrayList<PieceMarkerSpec>();
      CodeReformatorConfig codeReformatorConfig0 = new CodeReformatorConfig("] using classloader.getsystemresource(). ( ) .", commentSpecArray0, "] using classloader.getsystemresource(). ( ) .", (-1407), true, arrayList0);
      CodeReformator codeReformator0 = new CodeReformator(codeReformatorConfig0);
      String string0 = codeReformator0.reformat("] using classloader.getsystemresource(). ( ) .");
      assertNotNull(string0);
      assertEquals("] using classloader.getsystemresource\n(\n)\n.\n(\n)\n.\n", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      CommentSpec[] commentSpecArray0 = new CommentSpec[8];
      CommentSpec commentSpec0 = new CommentSpec("Tm4O7,+&3KFer`3", "Tm4O7,+&3KFer`3");
      commentSpecArray0[2] = commentSpec0;
      commentSpecArray0[3] = commentSpec0;
      ArrayList<PieceMarkerSpec> arrayList0 = new ArrayList<PieceMarkerSpec>();
      CommentSpec[] commentSpecArray1 = new CommentSpec[6];
      commentSpecArray1[0] = commentSpecArray0[2];
      commentSpecArray1[1] = commentSpec0;
      CodeReformatorConfig codeReformatorConfig0 = new CodeReformatorConfig("<,", commentSpecArray1, "Tm4O7,+&3KFer`3", (-2013), true, arrayList0);
      CodeReformator codeReformator0 = new CodeReformator(codeReformatorConfig0);
      commentSpecArray1[2] = commentSpecArray1[1];
      commentSpecArray1[3] = commentSpecArray0[3];
      commentSpecArray1[4] = commentSpecArray1[0];
      CommentSpec commentSpec1 = new CommentSpec("<,", "does not have a class function tolevel ( does not have a class function tolevel ( string , level ) string , does not have a class function tolevel ( string , level ) level )");
      commentSpecArray1[5] = commentSpec1;
      String string0 = codeReformator0.reformat("<,");
      assertNotNull(string0);
      assertEquals("<,\n", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      CommentSpec[] commentSpecArray0 = new CommentSpec[5];
      CommentSpec commentSpec0 = new CommentSpec("|", "|");
      commentSpecArray0[1] = commentSpec0;
      commentSpecArray0[3] = commentSpec0;
      commentSpecArray0[4] = commentSpecArray0[3];
      ArrayList<PieceMarkerSpec> arrayList0 = new ArrayList<PieceMarkerSpec>();
      commentSpecArray0[0] = commentSpec0;
      commentSpecArray0[2] = commentSpec0;
      CodeReformatorConfig codeReformatorConfig0 = new CodeReformatorConfig("|", commentSpecArray0, "|", (-474), false, arrayList0);
      CodeReformator codeReformator0 = new CodeReformator(codeReformatorConfig0);
      commentSpecArray0[4].commentEnd = "i'9\n";
      String string0 = codeReformator0.reformat("|");
      assertEquals("|\n", string0);
  }
}
