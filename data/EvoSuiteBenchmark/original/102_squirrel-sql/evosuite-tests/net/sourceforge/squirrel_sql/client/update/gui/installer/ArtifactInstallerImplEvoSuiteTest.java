/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.client.update.gui.installer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.List;
import java.util.Vector;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import net.sourceforge.squirrel_sql.client.update.UpdateUtil;
import net.sourceforge.squirrel_sql.client.update.UpdateUtilImpl;
import net.sourceforge.squirrel_sql.client.update.gui.ArtifactStatus;
import net.sourceforge.squirrel_sql.client.update.gui.installer.ArtifactInstallerImpl;
import net.sourceforge.squirrel_sql.client.update.gui.installer.ProgressDialogController;
import net.sourceforge.squirrel_sql.client.update.gui.installer.ProgressDialogControllerImpl;
import net.sourceforge.squirrel_sql.client.update.gui.installer.event.InstallStatusEventFactory;
import net.sourceforge.squirrel_sql.client.update.gui.installer.event.InstallStatusEventFactoryImpl;
import net.sourceforge.squirrel_sql.client.update.gui.installer.event.InstallStatusListener;
import net.sourceforge.squirrel_sql.client.update.gui.installer.event.InstallStatusListenerImpl;
import net.sourceforge.squirrel_sql.client.update.gui.installer.util.InstallFileOperationInfoFactory;
import net.sourceforge.squirrel_sql.client.update.gui.installer.util.InstallFileOperationInfoFactoryImpl;
import net.sourceforge.squirrel_sql.client.update.xmlbeans.ArtifactXmlBean;
import net.sourceforge.squirrel_sql.client.update.xmlbeans.ChangeListXmlBean;
import net.sourceforge.squirrel_sql.fw.util.FileWrapper;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ArtifactInstallerImplEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      ArtifactInstallerImpl artifactInstallerImpl0 = new ArtifactInstallerImpl();
      ChangeListXmlBean changeListXmlBean0 = new ChangeListXmlBean();
      Vector<ArtifactStatus> vector0 = new Vector<ArtifactStatus>();
      changeListXmlBean0.setChanges((List<ArtifactStatus>) vector0);
      InstallStatusEventFactoryImpl installStatusEventFactoryImpl0 = new InstallStatusEventFactoryImpl();
      artifactInstallerImpl0.setInstallStatusEventFactory((InstallStatusEventFactory) installStatusEventFactoryImpl0);
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean("", "", "", (-14L), (-14L));
      ArtifactStatus artifactStatus0 = new ArtifactStatus(artifactXmlBean0);
      vector0.add(artifactStatus0);
      artifactInstallerImpl0.setChangeList(changeListXmlBean0);
      // Undeclared exception!
      try {
        artifactInstallerImpl0.installFiles();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ArtifactInstallerImpl artifactInstallerImpl0 = new ArtifactInstallerImpl();
      ProgressDialogControllerImpl progressDialogControllerImpl0 = new ProgressDialogControllerImpl();
      InstallStatusListenerImpl installStatusListenerImpl0 = new InstallStatusListenerImpl((ProgressDialogController) progressDialogControllerImpl0);
      artifactInstallerImpl0.addListener((InstallStatusListener) installStatusListenerImpl0);
  }

  @Test
  public void test2()  throws Throwable  {
      ArtifactInstallerImpl artifactInstallerImpl0 = new ArtifactInstallerImpl();
      FileWrapper fileWrapper0 = artifactInstallerImpl0.getChangeListFile();
      assertNull(fileWrapper0);
  }

  @Test
  public void test3()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          ArtifactInstallerImpl artifactInstallerImpl0 = new ArtifactInstallerImpl();
          UpdateUtilImpl updateUtilImpl0 = new UpdateUtilImpl();
          // Undeclared exception!
          try {
            artifactInstallerImpl0.setUpdateUtil((UpdateUtil) updateUtilImpl0);
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.io.FilePermission /mnt/fastdata/ac1gf/SF110/dist/102_squirrel-sql/update write)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkWrite(SecurityManager.java:962)
             * java.io.File.mkdir(File.java:1155)
             * net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl.mkdir(FileWrapperImpl.java:415)
             * net.sourceforge.squirrel_sql.client.update.UpdateUtilImpl.getDir(UpdateUtilImpl.java:1027)
             * net.sourceforge.squirrel_sql.client.update.UpdateUtilImpl.getSquirrelUpdateDir(UpdateUtilImpl.java:492)
             * net.sourceforge.squirrel_sql.client.update.gui.installer.ArtifactInstallerImpl.setUpdateUtil(ArtifactInstallerImpl.java:142)
             * sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             * sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test4()  throws Throwable  {
      ArtifactInstallerImpl artifactInstallerImpl0 = new ArtifactInstallerImpl();
      artifactInstallerImpl0.setChangeListFile((FileWrapper) null);
  }

  @Test
  public void test5()  throws Throwable  {
      ArtifactInstallerImpl artifactInstallerImpl0 = new ArtifactInstallerImpl();
      InstallFileOperationInfoFactoryImpl installFileOperationInfoFactoryImpl0 = new InstallFileOperationInfoFactoryImpl();
      artifactInstallerImpl0.setInstallFileOperationInfoFactory((InstallFileOperationInfoFactory) installFileOperationInfoFactoryImpl0);
  }

  @Test
  public void test6()  throws Throwable  {
      ArtifactInstallerImpl artifactInstallerImpl0 = new ArtifactInstallerImpl();
      ChangeListXmlBean changeListXmlBean0 = new ChangeListXmlBean();
      Vector<ArtifactStatus> vector0 = new Vector<ArtifactStatus>();
      changeListXmlBean0.setChanges((List<ArtifactStatus>) vector0);
      InstallStatusEventFactoryImpl installStatusEventFactoryImpl0 = new InstallStatusEventFactoryImpl();
      artifactInstallerImpl0.setInstallStatusEventFactory((InstallStatusEventFactory) installStatusEventFactoryImpl0);
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean("-7`mo", "-7`mo", "-7`mo", 19L, 19L);
      ArtifactStatus artifactStatus0 = new ArtifactStatus(artifactXmlBean0);
      vector0.add(artifactStatus0);
      artifactInstallerImpl0.setChangeList(changeListXmlBean0);
      // Undeclared exception!
      try {
        artifactInstallerImpl0.restoreBackupFiles();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
