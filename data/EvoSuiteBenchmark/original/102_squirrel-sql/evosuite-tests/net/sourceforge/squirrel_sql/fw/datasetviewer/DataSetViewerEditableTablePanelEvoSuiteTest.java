/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.datasetviewer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.HeadlessException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.swing.JTable;
import net.sourceforge.squirrel_sql.client.session.DataSetUpdateableTableModelImpl;
import net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerEditableTablePanel;
import net.sourceforge.squirrel_sql.fw.datasetviewer.IDataModelImplementationDetails;
import net.sourceforge.squirrel_sql.fw.datasetviewer.IDataSetUpdateableModel;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DataSetViewerEditableTablePanelEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
      boolean boolean0 = dataSetViewerEditableTablePanel0.isTableEditable();
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
          IDataModelImplementationDetails iDataModelImplementationDetails0 = dataSetViewerEditableTablePanel0.getDataModelImplementationDetails();
          // Undeclared exception!
          try {
            dataSetViewerEditableTablePanel0.init((IDataSetUpdateableModel) null, iDataModelImplementationDetails0);
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.lang.RuntimePermission preferences)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.util.prefs.Preferences.userRoot(Preferences.java:432)
             * net.sourceforge.squirrel_sql.fw.gui.ButtonTableHeader.isAlwaysAdjustAllColWidths(ButtonTableHeader.java:267)
             * net.sourceforge.squirrel_sql.fw.gui.TablePopupMenu.<init>(TablePopupMenu.java:159)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel$MyJTable.createGUI(DataSetViewerTablePanel.java:531)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel$MyJTable.<init>(DataSetViewerTablePanel.java:275)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel.init(DataSetViewerTablePanel.java:107)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel.init(DataSetViewerTablePanel.java:97)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerEditableTablePanel.init(DataSetViewerEditableTablePanel.java:55)
             * sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             * sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test2()  throws Throwable  {
      DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
      // Undeclared exception!
      try {
        dataSetViewerEditableTablePanel0.isColumnEditable((-1075), (Object) "SwingSelectedKey");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
      boolean boolean0 = dataSetViewerEditableTablePanel0.isColumnEditable((-42), (Object) "SORTED");
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
      JTable jTable0 = new JTable();
      dataSetViewerEditableTablePanel0.setCellEditors(jTable0);
      assertEquals(false, jTable0.isPaintingForPrint());
  }

  @Test
  public void test5()  throws Throwable  {
      DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
      DataSetUpdateableTableModelImpl dataSetUpdateableTableModelImpl0 = new DataSetUpdateableTableModelImpl();
      dataSetViewerEditableTablePanel0.setUpdateableModelReference((IDataSetUpdateableModel) dataSetUpdateableTableModelImpl0);
      // Undeclared exception!
      try {
        dataSetViewerEditableTablePanel0.changeUnderlyingValueAt(1, 1, (Object) "TabbedPaneUI", (Object) "ShortDescription");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 1
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
      int[] intArray0 = dataSetViewerEditableTablePanel0.changeUnderlyingValueAt(27, 27, (Object) dataSetViewerEditableTablePanel0, (Object) dataSetViewerEditableTablePanel0);
      // Undeclared exception!
      try {
        dataSetViewerEditableTablePanel0.deleteRows(intArray0);
        fail("Expecting exception: HeadlessException");
      } catch(HeadlessException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
      DataSetUpdateableTableModelImpl dataSetUpdateableTableModelImpl0 = new DataSetUpdateableTableModelImpl();
      dataSetViewerEditableTablePanel0.setUpdateableModelReference((IDataSetUpdateableModel) dataSetUpdateableTableModelImpl0);
      int[] intArray0 = dataSetViewerEditableTablePanel0.changeUnderlyingValueAt((-12), (-12), (Object) "ToolTipText", (Object) "ToolTipText");
      assertNotNull(intArray0);
  }

  @Test
  public void test8()  throws Throwable  {
      DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
      DataSetUpdateableTableModelImpl dataSetUpdateableTableModelImpl0 = new DataSetUpdateableTableModelImpl();
      dataSetViewerEditableTablePanel0.setUpdateableModelReference((IDataSetUpdateableModel) dataSetUpdateableTableModelImpl0);
      // Undeclared exception!
      try {
        dataSetViewerEditableTablePanel0.changeUnderlyingValueAt(363, 363, (Object) dataSetViewerEditableTablePanel0, (Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
      int[] intArray0 = new int[3];
      // Undeclared exception!
      try {
        dataSetViewerEditableTablePanel0.deleteRows(intArray0);
        fail("Expecting exception: HeadlessException");
      } catch(HeadlessException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
      DataSetUpdateableTableModelImpl dataSetUpdateableTableModelImpl0 = new DataSetUpdateableTableModelImpl();
      dataSetViewerEditableTablePanel0.setUpdateableModelReference((IDataSetUpdateableModel) dataSetUpdateableTableModelImpl0);
      // Undeclared exception!
      try {
        dataSetViewerEditableTablePanel0.insertRow();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
      DataSetUpdateableTableModelImpl dataSetUpdateableTableModelImpl0 = new DataSetUpdateableTableModelImpl();
      dataSetViewerEditableTablePanel0.setUpdateableModelReference((IDataSetUpdateableModel) dataSetUpdateableTableModelImpl0);
      Object[] objectArray0 = new Object[28];
      // Undeclared exception!
      try {
        dataSetViewerEditableTablePanel0.insertRow(objectArray0);
        fail("Expecting exception: HeadlessException");
      } catch(HeadlessException e) {
      }
  }
}
