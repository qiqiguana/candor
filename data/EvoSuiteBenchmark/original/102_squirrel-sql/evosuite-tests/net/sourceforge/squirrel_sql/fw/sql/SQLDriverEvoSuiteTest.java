/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.sql;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.beans.PropertyChangeListener;
import net.sourceforge.squirrel_sql.fw.id.IIdentifier;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.persist.ValidationException;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.util.beanwrapper.StringWrapper;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SQLDriverEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver();
      boolean boolean0 = sQLDriver0.isJDBCDriverClassLoaded();
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-1));
      SQLDriver sQLDriver0 = new SQLDriver((IIdentifier) integerIdentifier0);
      String string0 = sQLDriver0.getUrl();
      assertEquals("", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver((IIdentifier) null);
      SQLDriver sQLDriver1 = (SQLDriver)sQLDriver0.clone();
      assertEquals("", sQLDriver1.getName());
  }

  @Test
  public void test3()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver();
      String string0 = sQLDriver0.getWebSiteUrl();
      assertNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver();
      sQLDriver0.setJDBCDriverClassLoaded(true);
      assertEquals(true, sQLDriver0.isJDBCDriverClassLoaded());
  }

  @Test
  public void test5()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver((IIdentifier) null);
      int int0 = sQLDriver0.compareTo((ISQLDriver) sQLDriver0);
      assertEquals(0, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-1));
      SQLDriver sQLDriver0 = new SQLDriver((IIdentifier) integerIdentifier0);
      StringWrapper stringWrapper0 = new StringWrapper("");
      try {
        sQLDriver0.setJarFileNameWrapper((-1), stringWrapper0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver();
      // Undeclared exception!
      try {
        sQLDriver0.hashCode();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver();
      String string0 = sQLDriver0.toString();
      assertNull(string0);
  }

  @Test
  public void test9()  throws Throwable  {
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(16);
      SQLDriver sQLDriver0 = new SQLDriver((IIdentifier) integerIdentifier0);
      sQLDriver0.addPropertyChangeListener((PropertyChangeListener) null);
      assertEquals("", sQLDriver0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver((IIdentifier) null);
      String string0 = sQLDriver0.getDriverClassName();
      assertNull(string0);
  }

  @Test
  public void test11()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver();
      sQLDriver0.setReportPropertyChanges(true);
      assertNull(sQLDriver0.getDriverClassName());
  }

  @Test
  public void test12()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver((IIdentifier) null);
      try {
        sQLDriver0.assignFrom((ISQLDriver) sQLDriver0);
        fail("Expecting exception: ValidationException");
      } catch(ValidationException e) {
        /*
         * Name cannot be blank.
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver((IIdentifier) uidIdentifier0);
      // Undeclared exception!
      try {
        sQLDriver0.getJarFileNameWrapper(100);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 100, Size: 0
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver();
      String[] stringArray0 = sQLDriver0.getJarFileNames();
      assertNotNull(stringArray0);
  }

  @Test
  public void test15()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver();
      sQLDriver0.removePropertyChangeListener((PropertyChangeListener) null);
      assertEquals(false, sQLDriver0.isJDBCDriverClassLoaded());
  }

  @Test
  public void test16()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver((IIdentifier) null);
      sQLDriver0.setIdentifier((IIdentifier) null);
      assertEquals("", sQLDriver0.getUrl());
  }

  @Test
  public void test17()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver();
      boolean boolean0 = sQLDriver0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver();
      // Undeclared exception!
      try {
        sQLDriver0.equals((Object) sQLDriver0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test19()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver((IIdentifier) uidIdentifier0);
      boolean boolean0 = sQLDriver0.equals((Object) "984");
      assertEquals("5d438a13:13f9fa408b0:-77f9", uidIdentifier0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test20()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver();
      sQLDriver0.setDriverClassName("Wk0i$ckF=h|Z;");
      sQLDriver0.setDriverClassName("Wk0i$ckF=h|Z;");
      assertNull(sQLDriver0.getWebSiteUrl());
  }

  @Test
  public void test21()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver();
      try {
        sQLDriver0.setDriverClassName("");
        fail("Expecting exception: ValidationException");
      } catch(ValidationException e) {
        /*
         * JDBC Driver Class Name cannot be blank.
         */
      }
  }

  @Test
  public void test22()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver((IIdentifier) null);
      sQLDriver0.setJarFileName("");
      sQLDriver0.setJarFileName("");
      assertNull(sQLDriver0.getDriverClassName());
  }

  @Test
  public void test23()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver();
      sQLDriver0.setJarFileName("]C");
      assertEquals("]C", sQLDriver0.getJarFileName());
      
      sQLDriver0.setJarFileName((String) null);
      assertEquals("", sQLDriver0.getJarFileName());
  }

  @Test
  public void test24()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver();
      String[] stringArray0 = new String[6];
      sQLDriver0.setJarFileNames(stringArray0);
      assertNull(sQLDriver0.getUrl());
  }

  @Test
  public void test25()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver();
      sQLDriver0.setJarFileNames((String[]) null);
      assertNull(sQLDriver0.getJarFileName());
  }

  @Test
  public void test26()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver();
      try {
        sQLDriver0.setUrl((String) null);
        fail("Expecting exception: ValidationException");
      } catch(ValidationException e) {
        /*
         * JDBC URL cannot be blank.
         */
      }
  }

  @Test
  public void test27()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver();
      sQLDriver0.setUrl("Lli7aK9>");
      sQLDriver0.setUrl("Lli7aK9>");
      assertNull(sQLDriver0.getJarFileName());
  }

  @Test
  public void test28()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver((IIdentifier) null);
      sQLDriver0.setName("e UYb@fpx\"M");
      sQLDriver0.setName("e UYb@fpx\"M");
      assertEquals("", sQLDriver0.getUrl());
  }

  @Test
  public void test29()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver();
      StringWrapper[] stringWrapperArray0 = new StringWrapper[3];
      StringWrapper stringWrapper0 = new StringWrapper();
      stringWrapperArray0[0] = stringWrapper0;
      stringWrapperArray0[1] = stringWrapperArray0[0];
      stringWrapperArray0[2] = stringWrapper0;
      sQLDriver0.setJarFileNameWrappers(stringWrapperArray0);
      StringWrapper[] stringWrapperArray1 = sQLDriver0.getJarFileNameWrappers();
      assertFalse(stringWrapperArray1.equals(stringWrapperArray0));
  }

  @Test
  public void test30()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver((IIdentifier) uidIdentifier0);
      sQLDriver0.setJarFileNameWrappers((StringWrapper[]) null);
      assertEquals("5d438a13:13f9fa408b0:-77f1", uidIdentifier0.toString());
  }

  @Test
  public void test31()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver((IIdentifier) null);
      sQLDriver0.setWebSiteUrl("");
      assertNull(sQLDriver0.getDriverClassName());
  }

  @Test
  public void test32()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver();
      sQLDriver0.setWebSiteUrl("");
      assertNull(sQLDriver0.getDriverClassName());
  }
}
