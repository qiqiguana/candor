/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Properties;
import net.sourceforge.squirrel_sql.fw.util.IProxySettings;
import net.sourceforge.squirrel_sql.fw.util.ProxyHandler;
import net.sourceforge.squirrel_sql.fw.util.ProxySettings;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ProxyHandlerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ProxySettings proxySettings0 = new ProxySettings();
      Properties properties0 = new Properties();
      ProxyHandler proxyHandler0 = new ProxyHandler();
      proxySettings0.setHttpProxyUser("<pF=aD`");
      proxySettings0.setHttpUseProxy(true);
      proxyHandler0.apply((IProxySettings) proxySettings0, properties0);
      assertEquals(1, properties0.size());
      assertEquals("{proxySet=true}", properties0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      ProxyHandler proxyHandler0 = new ProxyHandler();
      // Undeclared exception!
      try {
        proxyHandler0.apply((IProxySettings) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * ProxySettings == null
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ProxySettings proxySettings0 = new ProxySettings();
      proxySettings0.setHttpUseProxy(true);
      proxySettings0.setHttpProxyPassword("");
      ProxyHandler proxyHandler0 = new ProxyHandler();
      proxyHandler0.apply((IProxySettings) proxySettings0);
      assertEquals(true, proxySettings0.getHttpUseProxy());
  }

  @Test
  public void test3()  throws Throwable  {
      ProxySettings proxySettings0 = new ProxySettings();
      proxySettings0.setHttpProxyUser("");
      proxySettings0.setHttpUseProxy(true);
      ProxyHandler proxyHandler0 = new ProxyHandler();
      proxyHandler0.apply((IProxySettings) proxySettings0);
      assertEquals(true, proxySettings0.getHttpUseProxy());
  }

  @Test
  public void test4()  throws Throwable  {
      ProxySettings proxySettings0 = new ProxySettings();
      proxySettings0.setSocksUseProxy(true);
      ProxyHandler proxyHandler0 = new ProxyHandler();
      proxyHandler0.apply((IProxySettings) proxySettings0);
      assertNull(proxySettings0.getHttpProxyPassword());
  }

  @Test
  public void test5()  throws Throwable  {
      ProxySettings proxySettings0 = new ProxySettings();
      Properties properties0 = new Properties();
      ProxyHandler proxyHandler0 = new ProxyHandler();
      proxySettings0.setHttpProxyPort("");
      proxySettings0.setHttpUseProxy(true);
      proxyHandler0.apply((IProxySettings) proxySettings0, properties0);
      assertEquals(1, properties0.size());
      assertEquals(false, properties0.isEmpty());
  }
}
