/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.FileDescriptor;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.StringWriter;
import java.math.BigDecimal;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JLayeredPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import net.sourceforge.squirrel_sql.fw.datasetviewer.ColumnDisplayDefinition;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.DataTypeBigDecimal;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.RestorableJTextArea;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.RestorableJTextField;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.whereClause.ParameterWhereClausePart;
import net.sourceforge.squirrel_sql.fw.dialects.DialectType;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData;
import org.jfree.data.xy.XYDatasetTableModel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DataTypeBigDecimalEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 7);
      JTable jTable0 = new JTable((TableModel) defaultTableModel0);
      DialectType dialectType0 = DialectType.PROGRESS;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(7, "supportsSavepoints", "supportsSavepoints", "supportsSavepoints", 7, "supportsSavepoints", true, 7, 7, 7, true, true, true, dialectType0);
      DataTypeBigDecimal dataTypeBigDecimal0 = new DataTypeBigDecimal(jTable0, columnDisplayDefinition0);
      RestorableJTextField restorableJTextField0 = (RestorableJTextField)dataTypeBigDecimal0.getJTextField();
      assertNull(restorableJTextField0.getToolTipText());
  }

  @Test
  public void test1()  throws Throwable  {
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(1341, (String) null);
      DataTypeBigDecimal dataTypeBigDecimal0 = new DataTypeBigDecimal((JTable) null, columnDisplayDefinition0);
      assertNotNull(dataTypeBigDecimal0);
      
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      boolean boolean0 = dataTypeBigDecimal0.needToReRead((Object) integer0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(32, "0");
      DataTypeBigDecimal dataTypeBigDecimal0 = new DataTypeBigDecimal((JTable) null, columnDisplayDefinition0);
      assertNotNull(dataTypeBigDecimal0);
      
      String string0 = dataTypeBigDecimal0.getClassName();
      assertEquals("java.math.BigDecimal", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition((-1281), (String) null);
      DataTypeBigDecimal dataTypeBigDecimal0 = new DataTypeBigDecimal((JTable) null, columnDisplayDefinition0);
      assertNotNull(dataTypeBigDecimal0);
      
      RestorableJTextArea restorableJTextArea0 = (RestorableJTextArea)dataTypeBigDecimal0.getJTextArea((Object) "compression");
      assertNotNull(restorableJTextArea0);
      
      RestorableJTextArea restorableJTextArea1 = (RestorableJTextArea)dataTypeBigDecimal0.getJTextArea((Object) "compression");
      assertEquals("compression", restorableJTextArea1.getText());
  }

  @Test
  public void test4()  throws Throwable  {
      JTable jTable0 = new JTable(1294, 1294);
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(1294, "0O6");
      DataTypeBigDecimal dataTypeBigDecimal0 = new DataTypeBigDecimal(jTable0, columnDisplayDefinition0);
      assertNotNull(dataTypeBigDecimal0);
      
      boolean boolean0 = dataTypeBigDecimal0.isEditableInPopup((Object) "icon");
      assertEquals(true, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(0, "wwu");
      DataTypeBigDecimal dataTypeBigDecimal0 = new DataTypeBigDecimal((JTable) null, columnDisplayDefinition0);
      assertNotNull(dataTypeBigDecimal0);
      
      boolean boolean0 = dataTypeBigDecimal0.canDoFileIO();
      assertEquals(true, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      JTable jTable0 = new JTable();
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(0, "YQ*'AEvmvfl$!,S");
      DataTypeBigDecimal dataTypeBigDecimal0 = new DataTypeBigDecimal(jTable0, columnDisplayDefinition0);
      assertNotNull(dataTypeBigDecimal0);
      
      boolean boolean0 = dataTypeBigDecimal0.isEditableInCell((Object) ",");
      assertEquals(true, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(0, "wwu");
      DataTypeBigDecimal dataTypeBigDecimal0 = new DataTypeBigDecimal((JTable) null, columnDisplayDefinition0);
      assertNotNull(dataTypeBigDecimal0);
      
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      dataTypeBigDecimal0.validateAndConvertInPopup("wwu", (Object) "BC", stringBuffer0);
      assertEquals("java.text.ParseException: Unparseable number: \"wwu\"\n", stringBuffer0.toString());
      assertEquals("java.text.ParseException: Unparseable number: \"wwu\"\n", stringWriter0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      Object[][] objectArray0 = new Object[3][9];
      Object[] objectArray1 = new Object[1];
      objectArray0[1] = objectArray1;
      objectArray1[0] = (Object) 0;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(0, "jWSKG-u2");
      JTable jTable0 = new JTable(objectArray0, objectArray0[1]);
      DataTypeBigDecimal dataTypeBigDecimal0 = new DataTypeBigDecimal(jTable0, columnDisplayDefinition0);
      assertNotNull(dataTypeBigDecimal0);
      
      boolean boolean0 = dataTypeBigDecimal0.useBinaryEditingPanel();
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(1341, (String) null);
      DataTypeBigDecimal dataTypeBigDecimal0 = new DataTypeBigDecimal((JTable) null, columnDisplayDefinition0);
      assertNotNull(dataTypeBigDecimal0);
      
      RestorableJTextArea restorableJTextArea0 = (RestorableJTextArea)dataTypeBigDecimal0.getJTextArea((Object) null);
      assertNotNull(restorableJTextArea0);
      assertEquals("<null>", restorableJTextArea0.getText());
  }

  @Test
  public void test10()  throws Throwable  {
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      DefaultListSelectionModel defaultListSelectionModel0 = new DefaultListSelectionModel();
      JTable jTable0 = new JTable((TableModel) xYDatasetTableModel0, (TableColumnModel) null, (ListSelectionModel) defaultListSelectionModel0);
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(10, "");
      DataTypeBigDecimal dataTypeBigDecimal0 = new DataTypeBigDecimal(jTable0, columnDisplayDefinition0);
      dataTypeBigDecimal0.getDefaultValue("");
      assertEquals("javax.swing.DefaultListSelectionModel 1023137635 ={}", defaultListSelectionModel0.toString());
  }

  @Test
  public void test11()  throws Throwable  {
      JTable jTable0 = new JTable();
      DialectType dialectType0 = DialectType.INFORMIX;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition((-1619), "8.8", "8.8", "8.8", 90, "8.8", true, 90, 90, (-1619), true, true, true, dialectType0);
      DataTypeBigDecimal dataTypeBigDecimal0 = new DataTypeBigDecimal(jTable0, columnDisplayDefinition0);
      BigDecimal bigDecimal0 = (BigDecimal)dataTypeBigDecimal0.getDefaultValue("8.8");
      assertEquals(2, bigDecimal0.precision());
  }

  @Test
  public void test12()  throws Throwable  {
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(1341, (String) null);
      DataTypeBigDecimal dataTypeBigDecimal0 = new DataTypeBigDecimal((JTable) null, columnDisplayDefinition0);
      BigDecimal bigDecimal0 = (BigDecimal)dataTypeBigDecimal0.getDefaultValue("6-wwV");
      assertEquals(6.0F, bigDecimal0.floatValue(), 0.01F);
  }

  @Test
  public void test13()  throws Throwable  {
      JTable jTable0 = new JTable();
      DialectType dialectType0 = DialectType.INFORMIX;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(1, "8X", "8X", "8X", 1, "8X", false, 1, 1, 1, false, false, false, dialectType0);
      DataTypeBigDecimal dataTypeBigDecimal0 = new DataTypeBigDecimal(jTable0, columnDisplayDefinition0);
      assertNotNull(dataTypeBigDecimal0);
      
      BigDecimal bigDecimal0 = (BigDecimal)dataTypeBigDecimal0.getDefaultValue("8X");
      assertNotNull(bigDecimal0);
      assertEquals(0, bigDecimal0.intValue());
  }

  @Test
  public void test14()  throws Throwable  {
      JTable jTable0 = new JTable();
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(0, "a{z=05|.aW!VV}aRNRD");
      DataTypeBigDecimal dataTypeBigDecimal0 = new DataTypeBigDecimal(jTable0, columnDisplayDefinition0);
      ParameterWhereClausePart parameterWhereClausePart0 = (ParameterWhereClausePart)dataTypeBigDecimal0.getWhereClauseValue((Object) "CLUSTERED", (ISQLDatabaseMetaData) null);
      assertEquals("a{z=05|.aW!VV}aRNRD = ?", parameterWhereClausePart0.getWhereClause());
  }

  @Test
  public void test15()  throws Throwable  {
      JTable jTable0 = new JTable(1294, 1294);
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(1294, "0O6");
      DataTypeBigDecimal dataTypeBigDecimal0 = new DataTypeBigDecimal(jTable0, columnDisplayDefinition0);
      // Undeclared exception!
      try {
        dataTypeBigDecimal0.setPreparedStatementValue((PreparedStatement) null, (Object) "icon", 1294);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * java.lang.String cannot be cast to java.math.BigDecimal
         */
      }
  }

  @Test
  public void test16()  throws Throwable  {
      JTable jTable0 = new JTable(1294, 1294);
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(1294, "");
      DataTypeBigDecimal dataTypeBigDecimal0 = new DataTypeBigDecimal(jTable0, columnDisplayDefinition0);
      // Undeclared exception!
      try {
        dataTypeBigDecimal0.setPreparedStatementValue((PreparedStatement) null, (Object) null, 1294);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test17()  throws Throwable  {
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(1341, (String) null);
      DataTypeBigDecimal dataTypeBigDecimal0 = new DataTypeBigDecimal((JTable) null, columnDisplayDefinition0);
      BigDecimal bigDecimal0 = (BigDecimal)dataTypeBigDecimal0.getDefaultValue((String) null);
      assertNull(bigDecimal0);
  }

  @Test
  public void test18()  throws Throwable  {
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable((TableModel) xYDatasetTableModel0, (TableColumnModel) defaultTableColumnModel0);
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(0, "EI");
      DataTypeBigDecimal dataTypeBigDecimal0 = new DataTypeBigDecimal(jTable0, columnDisplayDefinition0);
      FileDescriptor fileDescriptor0 = FileDescriptor.out;
      FileInputStream fileInputStream0 = new FileInputStream(fileDescriptor0);
      // Undeclared exception!
      try {
        dataTypeBigDecimal0.importObject(fileInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -1
         */
      }
  }
}
