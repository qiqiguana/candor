/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.datasetviewer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.ResultSet;
import java.util.List;
import net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetDefinition;
import net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetException;
import net.sourceforge.squirrel_sql.fw.datasetviewer.ResultSetDataSet;
import net.sourceforge.squirrel_sql.fw.dialects.DialectType;
import net.sourceforge.squirrel_sql.fw.util.IMessageHandler;
import net.sourceforge.squirrel_sql.fw.util.NullMessageHandler;
import org.hibernate.jdbc.ColumnNameCache;
import org.hibernate.jdbc.ResultSetWrapper;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ResultSetDataSetEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ResultSetDataSet resultSetDataSet0 = new ResultSetDataSet();
      int int0 = resultSetDataSet0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      ResultSetDataSet resultSetDataSet0 = new ResultSetDataSet();
      int[] intArray0 = new int[1];
      DialectType dialectType0 = DialectType.ORACLE;
      int int0 = resultSetDataSet0.setResultSet((ResultSet) null, intArray0, dialectType0);
      assertEquals(0, int0);
      assertEquals(0, resultSetDataSet0.getColumnCount());
  }

  @Test
  public void test2()  throws Throwable  {
      ResultSetDataSet resultSetDataSet0 = new ResultSetDataSet();
      List<Object[]> list0 = resultSetDataSet0.getAllDataForReadOnly();
      assertNull(list0);
  }

  @Test
  public void test3()  throws Throwable  {
      ResultSetDataSet resultSetDataSet0 = new ResultSetDataSet();
      // Undeclared exception!
      try {
        resultSetDataSet0.cancelProcessing();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      ResultSetDataSet resultSetDataSet0 = new ResultSetDataSet();
      DataSetDefinition dataSetDefinition0 = resultSetDataSet0.getDataSetDefinition();
      assertNull(dataSetDefinition0);
  }

  @Test
  public void test5()  throws Throwable  {
      ResultSetDataSet resultSetDataSet0 = new ResultSetDataSet();
      DialectType dialectType0 = DialectType.DAFFODIL;
      int int0 = resultSetDataSet0.setResultSet((ResultSet) null, dialectType0);
      assertEquals(0, int0);
      
      NullMessageHandler nullMessageHandler0 = NullMessageHandler.getInstance();
      boolean boolean0 = resultSetDataSet0.next((IMessageHandler) nullMessageHandler0);
      assertEquals(0, resultSetDataSet0.getColumnCount());
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      ResultSetDataSet resultSetDataSet0 = new ResultSetDataSet();
      resultSetDataSet0.resetCursor();
      assertEquals(0, resultSetDataSet0.getColumnCount());
  }

  @Test
  public void test7()  throws Throwable  {
      ResultSetDataSet resultSetDataSet0 = new ResultSetDataSet();
      DialectType dialectType0 = DialectType.NETEZZA;
      int int0 = resultSetDataSet0.setContentsTabResultSet((ResultSet) null, "jaU`TUw%vw{@ajH*z|", dialectType0);
      assertEquals(0, int0);
      
      // Undeclared exception!
      try {
        resultSetDataSet0.removeRow((-375));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -375
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      ResultSetDataSet resultSetDataSet0 = new ResultSetDataSet();
      DialectType dialectType0 = DialectType.ORACLE;
      ColumnNameCache columnNameCache0 = new ColumnNameCache(0);
      ResultSetWrapper resultSetWrapper0 = new ResultSetWrapper((ResultSet) null, columnNameCache0);
      // Undeclared exception!
      try {
        resultSetDataSet0.setContentsTabResultSet((ResultSet) resultSetWrapper0, "Ib", dialectType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      ResultSetDataSet resultSetDataSet0 = new ResultSetDataSet();
      Object object0 = resultSetDataSet0.get(8);
      assertNull(object0);
  }

  @Test
  public void test10()  throws Throwable  {
      ResultSetDataSet resultSetDataSet0 = new ResultSetDataSet();
      DialectType dialectType0 = DialectType.DAFFODIL;
      int int0 = resultSetDataSet0.setResultSet((ResultSet) null, dialectType0);
      assertEquals(0, int0);
      
      resultSetDataSet0.removeRow(8);
      assertEquals(0, resultSetDataSet0.getColumnCount());
  }

  @Test
  public void test11()  throws Throwable  {
      ResultSetDataSet resultSetDataSet0 = new ResultSetDataSet();
      DialectType dialectType0 = DialectType.NETEZZA;
      int int0 = resultSetDataSet0.setContentsTabResultSet((ResultSet) null, "jaU`TUw%vw{@ajH*z|", dialectType0);
      assertEquals(0, int0);
      
      String string0 = resultSetDataSet0.toString();
      assertNotNull(string0);
      assertEquals(0, resultSetDataSet0.getColumnCount());
  }
}
