/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.sql;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.net.MalformedURLException;
import java.sql.SQLException;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.fw.id.IIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.ISQLAlias;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverClassLoader;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverManager;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SQLDriverManagerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SQLDriverManager sQLDriverManager0 = new SQLDriverManager();
      SQLDriver sQLDriver0 = new SQLDriver();
      // Undeclared exception!
      try {
        sQLDriverManager0.registerSQLDriver((ISQLDriver) sQLDriver0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      SQLDriverManager sQLDriverManager0 = new SQLDriverManager();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriver sQLDriver0 = new SQLDriver();
      // Undeclared exception!
      try {
        sQLDriverManager0.getConnection((ISQLDriver) sQLDriver0, (ISQLAlias) sQLAlias0, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      SQLDriverManager sQLDriverManager0 = new SQLDriverManager();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      // Undeclared exception!
      try {
        sQLDriverManager0.getConnection((ISQLDriver) null, (ISQLAlias) sQLAlias0, "The 'year' argument must be in range 1900 to 9999.", "The 'year' argument must be in range 1900 to 9999.", sQLDriverPropertyCollection0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      SQLDriverManager sQLDriverManager0 = new SQLDriverManager();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      sQLDriverManager0.getJDBCDriver((IIdentifier) uidIdentifier0);
      assertEquals("-728b74b8:13f9fa96dbb:-3e6f", uidIdentifier0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      SQLDriverManager sQLDriverManager0 = new SQLDriverManager();
      // Undeclared exception!
      try {
        sQLDriverManager0.getJDBCDriver((IIdentifier) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * IIdentifier == null
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      SQLDriverManager sQLDriverManager0 = new SQLDriverManager();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLDriverClassLoader sQLDriverClassLoader0 = sQLDriverManager0.getSQLDriverClassLoader((ISQLDriver) sQLDriver0);
      assertNull(sQLDriverClassLoader0);
  }

  @Test
  public void test6()  throws Throwable  {
      SQLDriverManager sQLDriverManager0 = new SQLDriverManager();
      // Undeclared exception!
      try {
        sQLDriverManager0.getSQLDriverClassLoader((ISQLDriver) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * SQLDriverClassLoader == null
         */
      }
  }
}
