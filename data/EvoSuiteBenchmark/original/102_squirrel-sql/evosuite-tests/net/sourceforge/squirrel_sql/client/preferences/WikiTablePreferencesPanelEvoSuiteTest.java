/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.client.preferences;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.preferences.SquirrelPreferences;
import net.sourceforge.squirrel_sql.client.preferences.WikiTablePreferencesPanel;
import net.sourceforge.squirrel_sql.fw.gui.action.wikiTable.IWikiTableConfigurationFactory;
import net.sourceforge.squirrel_sql.fw.gui.action.wikiTable.WikiTableConfigurationFactory;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class WikiTablePreferencesPanelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      WikiTablePreferencesPanel wikiTablePreferencesPanel0 = new WikiTablePreferencesPanel();
      IApplication iApplication0 = wikiTablePreferencesPanel0.getApplication();
      assertNull(iApplication0);
  }

  @Test
  public void test1()  throws Throwable  {
      WikiTablePreferencesPanel wikiTablePreferencesPanel0 = new WikiTablePreferencesPanel();
      wikiTablePreferencesPanel0.setApplication((IApplication) null);
      assertEquals(true, wikiTablePreferencesPanel0.isFocusTraversable());
  }

  @Test
  public void test2()  throws Throwable  {
      WikiTablePreferencesPanel wikiTablePreferencesPanel0 = new WikiTablePreferencesPanel();
      WikiTableConfigurationFactory wikiTableConfigurationFactory0 = (WikiTableConfigurationFactory)WikiTableConfigurationFactory.getInstance();
      wikiTablePreferencesPanel0.setWikiTableConfigFactory((IWikiTableConfigurationFactory) wikiTableConfigurationFactory0);
      assertEquals(false, wikiTablePreferencesPanel0.isFocusOwner());
  }

  @Test
  public void test3()  throws Throwable  {
      WikiTablePreferencesPanel wikiTablePreferencesPanel0 = new WikiTablePreferencesPanel();
      WikiTableConfigurationFactory wikiTableConfigurationFactory0 = (WikiTableConfigurationFactory)wikiTablePreferencesPanel0.getWikiTableConfigFactory();
      assertNotNull(wikiTableConfigurationFactory0);
  }

  @Test
  public void test4()  throws Throwable  {
      WikiTablePreferencesPanel wikiTablePreferencesPanel0 = new WikiTablePreferencesPanel();
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      wikiTablePreferencesPanel0.loadData(squirrelPreferences0);
      assertEquals(true, wikiTablePreferencesPanel0.isEnabled());
  }

  @Test
  public void test5()  throws Throwable  {
      WikiTablePreferencesPanel wikiTablePreferencesPanel0 = new WikiTablePreferencesPanel();
      wikiTablePreferencesPanel0.applyChanges();
      assertEquals(1, wikiTablePreferencesPanel0.getComponentCount());
  }
}
