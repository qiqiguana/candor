/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.Blob;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.BlobDescriptor;
import org.hibernate.lob.BlobImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BlobDescriptorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      BlobDescriptor blobDescriptor0 = new BlobDescriptor((Blob) null, byteArray0, true, true, (int) (byte)59);
      assertEquals(true, blobDescriptor0.getWholeBlobRead());
      
      blobDescriptor0.setWholeBlobRead(false);
      String string0 = blobDescriptor0.toString();
      assertEquals(false, blobDescriptor0.getWholeBlobRead());
      assertEquals("00  00  00  00  00  00  00  00  00  00  00  ", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BlobDescriptor blobDescriptor0 = new BlobDescriptor((Blob) null, byteArray0, true, true, (int) (byte)0);
      blobDescriptor0.setData(byteArray0);
      assertEquals(true, blobDescriptor0.getWholeBlobRead());
      assertEquals(0, blobDescriptor0.getUserSetBlobLimit());
      assertEquals(true, blobDescriptor0.getBlobRead());
  }

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BlobDescriptor blobDescriptor0 = new BlobDescriptor((Blob) null, byteArray0, true, true, 247);
      assertEquals("00  00  00  00  00  00  00  00  00  ", blobDescriptor0.toString());
      
      blobDescriptor0.setBlobRead(false);
      String string0 = blobDescriptor0.toString();
      assertEquals(false, blobDescriptor0.getBlobRead());
      assertEquals("<Blob>", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BlobImpl blobImpl0 = new BlobImpl(byteArray0);
      BlobDescriptor blobDescriptor0 = new BlobDescriptor((Blob) blobImpl0, byteArray0, true, true, (int) (byte)0);
      boolean boolean0 = blobDescriptor0.getWholeBlobRead();
      assertEquals(true, blobDescriptor0.getBlobRead());
      assertEquals(0, blobDescriptor0.getUserSetBlobLimit());
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      BlobImpl blobImpl0 = new BlobImpl(byteArray0);
      BlobDescriptor blobDescriptor0 = new BlobDescriptor((Blob) blobImpl0, byteArray0, false, false, (int) (byte)0);
      boolean boolean0 = blobDescriptor0.equals(blobDescriptor0);
      assertEquals(false, blobDescriptor0.getWholeBlobRead());
      assertEquals(false, blobDescriptor0.getBlobRead());
      assertEquals(true, boolean0);
      assertEquals(0, blobDescriptor0.getUserSetBlobLimit());
  }

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BlobDescriptor blobDescriptor0 = new BlobDescriptor((Blob) null, byteArray0, true, true, 247);
      blobDescriptor0.getBlob();
      assertEquals(true, blobDescriptor0.getBlobRead());
      assertEquals(true, blobDescriptor0.getWholeBlobRead());
      assertEquals(247, blobDescriptor0.getUserSetBlobLimit());
  }

  @Test
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      BlobDescriptor blobDescriptor0 = new BlobDescriptor((Blob) null, byteArray0, false, false, (int) (byte) (-9));
      int int0 = blobDescriptor0.getUserSetBlobLimit();
      assertEquals("<Blob>", blobDescriptor0.toString());
      assertEquals((-9), int0);
      assertEquals(false, blobDescriptor0.getWholeBlobRead());
  }

  @Test
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BlobDescriptor blobDescriptor0 = new BlobDescriptor((Blob) null, byteArray0, true, true, (int) (byte)0);
      blobDescriptor0.setBlob((Blob) null);
      assertEquals(true, blobDescriptor0.getBlobRead());
      assertEquals(true, blobDescriptor0.getWholeBlobRead());
      assertEquals(0, blobDescriptor0.getUserSetBlobLimit());
  }

  @Test
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BlobDescriptor blobDescriptor0 = new BlobDescriptor((Blob) null, byteArray0, true, true, (int) (byte)0);
      blobDescriptor0.setUserSetBlobLimit((int) (byte)0);
      assertEquals(true, blobDescriptor0.getBlobRead());
      assertEquals(true, blobDescriptor0.getWholeBlobRead());
      assertEquals(0, blobDescriptor0.getUserSetBlobLimit());
  }

  @Test
  public void test9()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BlobDescriptor blobDescriptor0 = new BlobDescriptor((Blob) null, byteArray0, true, true, (int) (byte)0);
      boolean boolean0 = blobDescriptor0.equals(blobDescriptor0);
      assertEquals(true, blobDescriptor0.getBlobRead());
      assertEquals(true, boolean0);
      assertEquals(0, blobDescriptor0.getUserSetBlobLimit());
      assertEquals(true, blobDescriptor0.getWholeBlobRead());
  }

  @Test
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      BlobDescriptor blobDescriptor0 = new BlobDescriptor((Blob) null, byteArray0, false, false, (int) (byte) (-9));
      boolean boolean0 = blobDescriptor0.equals((BlobDescriptor) null);
      assertEquals(-9, blobDescriptor0.getUserSetBlobLimit());
      assertEquals("<Blob>", blobDescriptor0.toString());
      assertEquals(false, boolean0);
      assertEquals(false, blobDescriptor0.getWholeBlobRead());
  }

  @Test
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BlobDescriptor blobDescriptor0 = new BlobDescriptor((Blob) null, byteArray0, true, true, 247);
      boolean boolean0 = blobDescriptor0.equals((BlobDescriptor) null);
      assertEquals(false, boolean0);
      assertEquals(true, blobDescriptor0.getBlobRead());
      assertEquals(247, blobDescriptor0.getUserSetBlobLimit());
      assertEquals(true, blobDescriptor0.getWholeBlobRead());
  }

  @Test
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BlobImpl blobImpl0 = new BlobImpl(byteArray0);
      BlobDescriptor blobDescriptor0 = new BlobDescriptor((Blob) blobImpl0, byteArray0, true, true, (int) (byte)0);
      BlobDescriptor blobDescriptor1 = new BlobDescriptor((Blob) blobImpl0, byteArray0, false, true, (int) (byte)0);
      boolean boolean0 = blobDescriptor0.equals(blobDescriptor1);
      assertEquals(true, blobDescriptor0.getBlobRead());
      assertEquals(true, blobDescriptor1.getWholeBlobRead());
      assertEquals(false, boolean0);
      assertEquals(0, blobDescriptor0.getUserSetBlobLimit());
  }

  @Test
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BlobDescriptor blobDescriptor0 = new BlobDescriptor((Blob) null, byteArray0, true, true, 247);
      BlobDescriptor blobDescriptor1 = new BlobDescriptor((Blob) null, byteArray0, false, true, (int) (byte)0);
      boolean boolean0 = blobDescriptor1.equals(blobDescriptor0);
      assertEquals(247, blobDescriptor0.getUserSetBlobLimit());
      assertEquals(true, blobDescriptor0.getBlobRead());
      assertEquals(true, blobDescriptor1.getWholeBlobRead());
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      BlobDescriptor blobDescriptor0 = new BlobDescriptor((Blob) null, byteArray0, true, true, (int) (byte)59);
      String string0 = blobDescriptor0.toString();
      assertEquals(59, blobDescriptor0.getUserSetBlobLimit());
      assertEquals("00  00  00  00  00  00  00  00  00  00  00  ", string0);
      assertEquals(true, blobDescriptor0.getBlobRead());
      assertEquals(true, blobDescriptor0.getWholeBlobRead());
      assertNotNull(string0);
  }

  @Test
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BlobDescriptor blobDescriptor0 = new BlobDescriptor((Blob) null, byteArray0, true, true, (int) (byte)0);
      assertEquals(true, blobDescriptor0.getWholeBlobRead());
      
      blobDescriptor0.setWholeBlobRead(false);
      String string0 = blobDescriptor0.toString();
      assertEquals(false, blobDescriptor0.getWholeBlobRead());
      assertEquals("00  00  00  00  00  00  00  00  00  ...", string0);
  }
}
