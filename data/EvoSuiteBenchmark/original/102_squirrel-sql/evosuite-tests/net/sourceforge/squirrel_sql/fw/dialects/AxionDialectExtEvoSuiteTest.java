/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.dialects;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import net.sourceforge.squirrel_sql.fw.dialects.AxionDialectExt;
import net.sourceforge.squirrel_sql.fw.dialects.DatabaseObjectQualifier;
import net.sourceforge.squirrel_sql.fw.dialects.DialectType;
import net.sourceforge.squirrel_sql.fw.dialects.SqlGenerationPreferences;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import org.hibernate.HibernateException;
import org.hibernate.MappingException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AxionDialectExtEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      boolean boolean0 = axionDialectExt0.supportsAlterColumnType();
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      boolean boolean0 = axionDialectExt0.supportsAlterColumnDefault();
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier();
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        axionDialectExt0.getAlterSequenceSQL("", "", "", "", "", "", true, databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        axionDialectExt0.getDropConstraintSQL(":bo&e ?6iX|@zp)s:", ":bo&e ?6iX|@zp)s:", (DatabaseObjectQualifier) null, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      LinkedList<TableColumnInfo> linkedList0 = new LinkedList<TableColumnInfo>();
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier();
      // Undeclared exception!
      try {
        axionDialectExt0.getCreateTableSQL("(c-k}@R5%", (List<TableColumnInfo>) linkedList0, (List<TableColumnInfo>) linkedList0, sqlGenerationPreferences0, databaseObjectQualifier0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      boolean boolean0 = axionDialectExt0.supportsRenameView();
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier((String) null, (String) null);
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        axionDialectExt0.getCreateViewSQL((String) null, (String) null, (String) null, databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      boolean boolean0 = axionDialectExt0.supportsColumnComment();
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      boolean boolean0 = axionDialectExt0.canPasteTo((IDatabaseObjectInfo) null);
      assertEquals(true, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier((String) null, (String) null);
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      String string0 = axionDialectExt0.getDropPrimaryKeySQL((String) null, (String) null, databaseObjectQualifier0, sqlGenerationPreferences0);
      assertNotNull(string0);
      assertEquals("ALTER TABLE null DROP PRIMARY KEY", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier("'", "'");
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        axionDialectExt0.getDropIndexSQL("'", "'", false, databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      boolean boolean0 = axionDialectExt0.supportsInsertInto();
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        axionDialectExt0.getRenameViewSQL("nX9>!]", "nX9>!]", (DatabaseObjectQualifier) null, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      boolean boolean0 = axionDialectExt0.supportsCreateTable();
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      boolean boolean0 = axionDialectExt0.supportsUpdate();
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      int int0 = axionDialectExt0.getMaxScale(319);
      assertEquals(38, int0);
  }

  @Test
  public void test16()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      boolean boolean0 = axionDialectExt0.supportsDropColumn();
      assertEquals(true, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      boolean boolean0 = axionDialectExt0.supportsCorrelatedSubQuery();
      assertEquals(false, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier("", "");
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        axionDialectExt0.getDropViewSQL("", false, databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test19()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      boolean boolean0 = axionDialectExt0.supportsDropView();
      assertEquals(false, boolean0);
  }

  @Test
  public void test20()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier("c;3int{41RnKM[0f", "AxionAxionAx<pion<99");
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("ALTER TABLE AxionAxionAx<pion<99 DROP CONSTRAINT \"c;3int{41RnKM[0f\"", "ALTER TABLE AxionAxionAx<pion<99 DROP CONSTRAINT \"c;3int{41RnKM[0f\"", "ALTER TABLE AxionAxionAx<pion<99 DROP CONSTRAINT \"c;3int{41RnKM[0f\"", "ALTER TABLE AxionAxionAx<pion<99 DROP CONSTRAINT \"c;3int{41RnKM[0f\"", (-433), "ALTER TABLE AxionAxionAx<pion<99 DROP CONSTRAINT \"c;3int{41RnKM[0f\"", (-433), (-433), (-433), (-433), "ALTER TABLE AxionAxionAx<pion<99 DROP CONSTRAINT \"c;3int{41RnKM[0f\"", "ALTER TABLE AxionAxionAx<pion<99 DROP CONSTRAINT \"c;3int{41RnKM[0f\"", (-433), (-433), "ALTER TABLE AxionAxionAx<pion<99 DROP CONSTRAINT \"c;3int{41RnKM[0f\"");
      String string0 = axionDialectExt0.getColumnDefaultAlterSQL(tableColumnInfo0, databaseObjectQualifier0, sqlGenerationPreferences0);
      assertEquals("ALTER TABLE ALTER TABLE AxionAxionAx<pion<99 DROP CONSTRAINT \"c;3int{41RnKM[0f\" ALTER COLUMN \"ALTER TABLE AxionAxionAx<pion<99 DROP CONSTRAINT \"c;3int{41RnKM[0f\"\"  SET DEFAULT 'ALTER TABLE AxionAxionAx<pion<99 DROP CONSTRAINT \"c;3int{41RnKM[0f\"'", string0);
      assertNotNull(string0);
  }

  @Test
  public void test21()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier((String) null, (String) null);
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "ALTER TABLE null DROP PRIMARY KEY", (String) null, "ALTER TABLE null DROP PRIMARY KEY", 468, "ALTER TABLE null DROP PRIMARY KEY", 468, 468, (-1914), 468, (String) null, "ALTER TABLE null DROP PRIMARY KEY", 1978, 0, "ALTER TABLE null DROP PRIMARY KEY");
      try {
        axionDialectExt0.getColumnTypeAlterSQL(tableColumnInfo0, tableColumnInfo0, databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Axion doesn't support altering a column's type attribute
         */
      }
  }

  @Test
  public void test22()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier("2", "2");
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      String string0 = axionDialectExt0.getColumnDropSQL("2", "2", databaseObjectQualifier0, sqlGenerationPreferences0);
      assertEquals("ALTER TABLE 2 DROP \"2\"", string0);
      assertNotNull(string0);
  }

  @Test
  public void test23()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("1(pA z4g#+B\"y/is", "1(pA z4g#+B\"y/is", "1(pA z4g#+B\"y/is", "1(pA z4g#+B\"y/is", 0, "1(pA z4g#+B\"y/is", 200, 200, 0, 200, "1(pA z4g#+B\"y/is", "1(pA z4g#+B\"y/is", 0, 200, "1(pA z4g#+B\"y/is");
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier();
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      try {
        axionDialectExt0.getColumnCommentAlterSQL(tableColumnInfo0, databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Axion doesn't support column comments
         */
      }
  }

  @Test
  public void test24()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      boolean boolean0 = axionDialectExt0.supportsViewDefinition();
      assertEquals(false, boolean0);
  }

  @Test
  public void test25()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier("c;3int{41RnKM[0f", "AxionAxionAx<pion<99");
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      String string0 = axionDialectExt0.getDropForeignKeySQL("c;3int{41RnKM[0f", "AxionAxionAx<pion<99", databaseObjectQualifier0, sqlGenerationPreferences0);
      assertNotNull(string0);
      assertEquals("ALTER TABLE AxionAxionAx<pion<99 DROP CONSTRAINT \"c;3int{41RnKM[0f\"", string0);
  }

  @Test
  public void test26()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("1(pA z4g#+B\"y/is", "1(pA z4g#+B\"y/is", "1(pA z4g#+B\"y/is", "1(pA z4g#+B\"y/is", 0, "1(pA z4g#+B\"y/is", 200, 200, 0, 200, "1(pA z4g#+B\"y/is", "1(pA z4g#+B\"y/is", 0, 200, "1(pA z4g#+B\"y/is");
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier();
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      String string0 = axionDialectExt0.getColumnNameAlterSQL(tableColumnInfo0, tableColumnInfo0, databaseObjectQualifier0, sqlGenerationPreferences0);
      assertEquals("ALTER TABLE 1(pA z4g#+B\"y/is ALTER COLUMN \"1(pA z4g#+B\"y/is\" RENAME TO \"1(pA z4g#+B\"y/is\"", string0);
  }

  @Test
  public void test27()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier();
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        axionDialectExt0.getDropSequenceSQL("", false, databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test28()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      boolean boolean0 = axionDialectExt0.supportsRenameColumn();
      assertEquals(true, boolean0);
  }

  @Test
  public void test29()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier("UiPO", "UiPO");
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        axionDialectExt0.getSequenceInformationSQL("UiPO", databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test30()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      try {
        axionDialectExt0.getTypeName(227, 227, 227, 227);
        fail("Expecting exception: MappingException");
      } catch(MappingException e) {
        /*
         * No Dialect mapping for JDBC type: 227
         */
      }
  }

  @Test
  public void test31()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier("AxionAxion<99", "AxionAxion<99");
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        axionDialectExt0.getViewDefinitionSQL("AxionAxion<99", databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test32()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Axion", "Axion", "Axion", "Axion", (-7), "Axion", (-7), (-7), (-7), (-7), "Axion", "Axion", (-7), (-7), "Axion");
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        axionDialectExt0.getAddAutoIncrementSQL(tableColumnInfo0, (DatabaseObjectQualifier) null, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test33()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      DialectType dialectType0 = axionDialectExt0.getDialectType();
      assertEquals(DialectType.AXION, dialectType0);
  }

  @Test
  public void test34()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      boolean boolean0 = axionDialectExt0.supportsSchemasInTableDefinition();
      assertEquals(false, boolean0);
  }

  @Test
  public void test35()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      String[] stringArray0 = new String[1];
      String[] stringArray1 = new String[10];
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier((String) null, (String) null);
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        axionDialectExt0.getUpdateSQL("", stringArray0, stringArray0, stringArray1, stringArray1, stringArray1, databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test36()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("E", "E", "E", "E", (-1), "E", (-1), (-1), (-1), (-1), "E", "E", (-1), (-1), "E");
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier("E", "E");
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        axionDialectExt0.getColumnNullableAlterSQL(tableColumnInfo0, databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Axion doesn't support altering a column's nullable attribute
         */
      }
  }

  @Test
  public void test37()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      boolean boolean0 = axionDialectExt0.supportsRenameTable();
      assertEquals(false, boolean0);
  }

  @Test
  public void test38()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      String[] stringArray0 = new String[3];
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier((String) null, (String) null);
      // Undeclared exception!
      try {
        axionDialectExt0.getCreateIndexSQL("returning null as column: ", "returning null as column: ", "returning null as column: ", stringArray0, true, (String) null, (String) null, databaseObjectQualifier0, (SqlGenerationPreferences) null);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test39()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier();
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        axionDialectExt0.getCreateSequenceSQL("", "", "", "", "", "", true, databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test40()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier();
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        axionDialectExt0.getRenameTableSQL((String) null, (String) null, databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test41()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      boolean boolean0 = axionDialectExt0.supportsAlterColumnNull();
      assertEquals(false, boolean0);
  }

  @Test
  public void test42()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      boolean boolean0 = axionDialectExt0.supportsProduct("nX9>!]", "nX9>!]");
      assertEquals(false, boolean0);
  }

  @Test
  public void test43()  throws Throwable  {
      AxionDialectExt axionDialectExt0 = new AxionDialectExt();
      boolean boolean0 = axionDialectExt0.supportsProduct("AxionAxion<99", "AxionAxion<99");
      assertEquals(true, boolean0);
  }
}
