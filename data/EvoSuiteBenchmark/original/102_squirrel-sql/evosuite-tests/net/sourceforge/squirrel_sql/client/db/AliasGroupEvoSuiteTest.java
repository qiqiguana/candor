/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.client.db;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.beans.PropertyChangeListener;
import javax.swing.plaf.basic.BasicRootPaneUI;
import javax.swing.plaf.metal.MetalLabelUI;
import net.sourceforge.squirrel_sql.client.db.AliasGroup;
import net.sourceforge.squirrel_sql.fw.id.IIdentifier;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.persist.ValidationException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AliasGroupEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AliasGroup aliasGroup0 = new AliasGroup();
      MetalLabelUI metalLabelUI0 = new MetalLabelUI();
      aliasGroup0.addPropertyChangeListener((PropertyChangeListener) metalLabelUI0);
      assertEquals("", aliasGroup0.getName());
  }

  @Test
  public void test1()  throws Throwable  {
      AliasGroup aliasGroup0 = new AliasGroup();
      AliasGroup aliasGroup1 = (AliasGroup)aliasGroup0.clone();
      // Undeclared exception!
      try {
        aliasGroup0.equals((Object) aliasGroup1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      AliasGroup aliasGroup0 = new AliasGroup();
      BasicRootPaneUI basicRootPaneUI0 = new BasicRootPaneUI();
      aliasGroup0.removePropertyChangeListener((PropertyChangeListener) basicRootPaneUI0);
      assertEquals("", aliasGroup0.getName());
  }

  @Test
  public void test3()  throws Throwable  {
      AliasGroup aliasGroup0 = new AliasGroup();
      int int0 = aliasGroup0.compareTo(aliasGroup0);
      assertEquals(0, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      AliasGroup aliasGroup0 = new AliasGroup();
      // Undeclared exception!
      try {
        aliasGroup0.hashCode();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      AliasGroup aliasGroup0 = new AliasGroup();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(40);
      aliasGroup0.setIdentifier((IIdentifier) integerIdentifier0);
      assertEquals("", aliasGroup0.getName());
  }

  @Test
  public void test6()  throws Throwable  {
      AliasGroup aliasGroup0 = new AliasGroup();
      boolean boolean0 = aliasGroup0.isValid();
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      AliasGroup aliasGroup0 = new AliasGroup();
      aliasGroup0.setName("HtmlViewerPanel.error.processhyperlink");
      boolean boolean0 = aliasGroup0.isValid();
      assertEquals("HtmlViewerPanel.error.processhyperlink", aliasGroup0.getName());
      assertEquals(true, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      AliasGroup aliasGroup0 = new AliasGroup();
      boolean boolean0 = aliasGroup0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      AliasGroup aliasGroup0 = new AliasGroup();
      boolean boolean0 = aliasGroup0.equals((Object) "Default");
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      AliasGroup aliasGroup0 = new AliasGroup();
      aliasGroup0.setName("HtmlViewerPanel.error.processhyperlink");
      aliasGroup0.setName("HtmlViewerPanel.error.processhyperlink");
      assertEquals("HtmlViewerPanel.error.processhyperlink", aliasGroup0.getName());
      assertEquals(true, aliasGroup0.isValid());
  }

  @Test
  public void test11()  throws Throwable  {
      AliasGroup aliasGroup0 = new AliasGroup();
      aliasGroup0.setName("%[6YG0.Zukz");
      aliasGroup0.setName("g}ExZ5w8");
      assertEquals(true, aliasGroup0.isValid());
      assertEquals("g}ExZ5w8", aliasGroup0.getName());
  }

  @Test
  public void test12()  throws Throwable  {
      AliasGroup aliasGroup0 = new AliasGroup();
      try {
        aliasGroup0.setName((String) null);
        fail("Expecting exception: ValidationException");
      } catch(ValidationException e) {
        /*
         * Name cannot be blank.
         */
      }
  }
}
