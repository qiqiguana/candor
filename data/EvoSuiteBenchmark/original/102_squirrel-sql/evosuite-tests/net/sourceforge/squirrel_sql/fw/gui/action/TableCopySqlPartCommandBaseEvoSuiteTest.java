/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.gui.action;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Date;
import net.sourceforge.squirrel_sql.fw.datasetviewer.ColumnDisplayDefinition;
import net.sourceforge.squirrel_sql.fw.dialects.DialectType;
import net.sourceforge.squirrel_sql.fw.gui.action.TableCopySqlPartCommandBase;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TableCopySqlPartCommandBaseEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TableCopySqlPartCommandBase tableCopySqlPartCommandBase0 = new TableCopySqlPartCommandBase();
      DialectType dialectType0 = DialectType.FIREBIRD;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(0, "Null 'categoryKeys' argument.", "Null 'categoryKeys' argument.", "Null 'categoryKeys' argument.", (-7), "Null 'categoryKeys' argument.", false, (-7), 0, (-7), false, false, false, dialectType0);
      TableCopySqlPartCommandBase.StatType tableCopySqlPartCommandBase_StatType0 = TableCopySqlPartCommandBase.StatType.UPDATE;
      String string0 = tableCopySqlPartCommandBase0.getData(columnDisplayDefinition0, (Object) "java.awt.CheckboxGroup[selectedCheckbox=null]", tableCopySqlPartCommandBase_StatType0);
      assertNotNull(string0);
      assertEquals("=java.awt.CheckboxGroup[selectedCheckbox=null]", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      TableCopySqlPartCommandBase tableCopySqlPartCommandBase0 = new TableCopySqlPartCommandBase();
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(851, "oC}o5*cLV{;IL");
      TableCopySqlPartCommandBase.StatType tableCopySqlPartCommandBase_StatType0 = TableCopySqlPartCommandBase.StatType.UPDATE;
      String string0 = tableCopySqlPartCommandBase0.getData(columnDisplayDefinition0, (Object) null, tableCopySqlPartCommandBase_StatType0);
      assertEquals("=null", string0);
      assertNotNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      TableCopySqlPartCommandBase tableCopySqlPartCommandBase0 = new TableCopySqlPartCommandBase();
      TableCopySqlPartCommandBase.StatType tableCopySqlPartCommandBase_StatType0 = TableCopySqlPartCommandBase.StatType.UPDATE;
      String string0 = tableCopySqlPartCommandBase0.getData((ColumnDisplayDefinition) null, (Object) "=java.awt.CheckboxGroup[selectedCheckbox=null]", tableCopySqlPartCommandBase_StatType0);
      assertEquals("='=java.awt.CheckboxGroup[selectedCheckbox=null]'", string0);
      assertNotNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      TableCopySqlPartCommandBase tableCopySqlPartCommandBase0 = new TableCopySqlPartCommandBase();
      DialectType dialectType0 = DialectType.MCKOI;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(5, "n", "n", "n", 5, "n", false, 5, 5, 5, false, false, false, dialectType0);
      TableCopySqlPartCommandBase.StatType tableCopySqlPartCommandBase_StatType0 = TableCopySqlPartCommandBase.StatType.UPDATE;
      String string0 = tableCopySqlPartCommandBase0.getData(columnDisplayDefinition0, (Object) "SmallIcon", tableCopySqlPartCommandBase_StatType0);
      assertNotNull(string0);
      assertEquals("=SmallIcon", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      TableCopySqlPartCommandBase tableCopySqlPartCommandBase0 = new TableCopySqlPartCommandBase();
      DialectType dialectType0 = DialectType.INFORMIX;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(93, "Ikx5QDg!PJ#Yk", "Ikx5QDg!PJ#Yk", "Ikx5QDg!PJ#Yk", 4, "Ikx5QDg!PJ#Yk", true, 93, 93, 93, false, false, true, dialectType0);
      TableCopySqlPartCommandBase.StatType tableCopySqlPartCommandBase_StatType0 = TableCopySqlPartCommandBase.StatType.WHERE;
      String string0 = tableCopySqlPartCommandBase0.getData(columnDisplayDefinition0, (Object) tableCopySqlPartCommandBase0, tableCopySqlPartCommandBase_StatType0);
      assertNotNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      TableCopySqlPartCommandBase tableCopySqlPartCommandBase0 = new TableCopySqlPartCommandBase();
      DialectType dialectType0 = DialectType.H2;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(3, "Ikx5QDg!PJ#Yk", "Ikx5QDg!PJ#Yk", "Ikx5QDg!PJ#Yk", 3, "Ikx5QDg!PJ#Yk", false, 3, 3, 3, false, false, false, dialectType0);
      TableCopySqlPartCommandBase.StatType tableCopySqlPartCommandBase_StatType0 = TableCopySqlPartCommandBase.StatType.UPDATE;
      String string0 = tableCopySqlPartCommandBase0.getData(columnDisplayDefinition0, (Object) "United Kingdom", tableCopySqlPartCommandBase_StatType0);
      assertNotNull(string0);
      assertEquals("=United Kingdom", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      TableCopySqlPartCommandBase tableCopySqlPartCommandBase0 = new TableCopySqlPartCommandBase();
      DialectType dialectType0 = DialectType.PROGRESS;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(7, "", "", "", 8, "", true, 7, 7, 8, true, true, true, dialectType0);
      TableCopySqlPartCommandBase.StatType tableCopySqlPartCommandBase_StatType0 = TableCopySqlPartCommandBase.StatType.IN;
      String string0 = tableCopySqlPartCommandBase0.getData(columnDisplayDefinition0, (Object) "ShortDescription", tableCopySqlPartCommandBase_StatType0);
      assertNotNull(string0);
      assertEquals("ShortDescription", string0);
  }

  @Test
  public void test7()  throws Throwable  {
      TableCopySqlPartCommandBase tableCopySqlPartCommandBase0 = new TableCopySqlPartCommandBase();
      DialectType dialectType0 = DialectType.PROGRESS;
      TableCopySqlPartCommandBase.StatType tableCopySqlPartCommandBase_StatType0 = TableCopySqlPartCommandBase.StatType.IN;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(7, "ShortDescription", "ShortDescription", "ShortDescription", 2, "ShortDescription", true, 7, 7, 7, true, true, true, dialectType0);
      String string0 = tableCopySqlPartCommandBase0.getData(columnDisplayDefinition0, (Object) "job-state-reason", tableCopySqlPartCommandBase_StatType0);
      assertEquals("job-state-reason", string0);
      assertNotNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      TableCopySqlPartCommandBase tableCopySqlPartCommandBase0 = new TableCopySqlPartCommandBase();
      DialectType dialectType0 = DialectType.INGRES;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition((-6), "aW", "aW", "aW", (-6), "aW", true, (-6), (-6), (-6), true, true, true, dialectType0);
      TableCopySqlPartCommandBase.StatType tableCopySqlPartCommandBase_StatType0 = TableCopySqlPartCommandBase.StatType.IN;
      String string0 = tableCopySqlPartCommandBase0.getData(columnDisplayDefinition0, (Object) "ActionCommandKey", tableCopySqlPartCommandBase_StatType0);
      assertNotNull(string0);
      assertEquals("ActionCommandKey", string0);
  }

  @Test
  public void test9()  throws Throwable  {
      TableCopySqlPartCommandBase tableCopySqlPartCommandBase0 = new TableCopySqlPartCommandBase();
      DialectType dialectType0 = DialectType.H2;
      TableCopySqlPartCommandBase.StatType tableCopySqlPartCommandBase_StatType0 = TableCopySqlPartCommandBase.StatType.UPDATE;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(3, "Ikx5QDg!PJ#Yk", "Ikx5QDg!PJ#Yk", "Ikx5QDg!PJ#Yk", 92, "Ikx5QDg!PJ#Yk", false, 3, 3, 3, false, false, false, dialectType0);
      String string0 = tableCopySqlPartCommandBase0.getData(columnDisplayDefinition0, (Object) "=United Kingdom", tableCopySqlPartCommandBase_StatType0);
      assertNotNull(string0);
      assertEquals("='=United Kingdom'", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      TableCopySqlPartCommandBase tableCopySqlPartCommandBase0 = new TableCopySqlPartCommandBase();
      DialectType dialectType0 = DialectType.PROGRESS;
      TableCopySqlPartCommandBase.StatType tableCopySqlPartCommandBase_StatType0 = TableCopySqlPartCommandBase.StatType.IN;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(7, "", "", "", 7, "", true, 7, 7, 7, true, true, true, dialectType0);
      String string0 = tableCopySqlPartCommandBase0.getData(columnDisplayDefinition0, (Object) "job-state-reason", tableCopySqlPartCommandBase_StatType0);
      assertNotNull(string0);
      assertEquals("job-state-reason", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      TableCopySqlPartCommandBase tableCopySqlPartCommandBase0 = new TableCopySqlPartCommandBase();
      DialectType dialectType0 = DialectType.HADB;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition((-1743), "IkxQDgPJ#Yk", "IkxQDgPJ#Yk", "IkxQDgPJ#Yk", 91, "IkxQDgPJ#Yk", false, (-1743), 91, (-1743), false, false, false, dialectType0);
      TableCopySqlPartCommandBase.StatType tableCopySqlPartCommandBase_StatType0 = TableCopySqlPartCommandBase.StatType.UPDATE;
      String string0 = tableCopySqlPartCommandBase0.getData(columnDisplayDefinition0, (Object) "AcceleratorKey", tableCopySqlPartCommandBase_StatType0);
      assertEquals("='AcceleratorKey'", string0);
      assertNotNull(string0);
  }

  @Test
  public void test12()  throws Throwable  {
      TableCopySqlPartCommandBase tableCopySqlPartCommandBase0 = new TableCopySqlPartCommandBase();
      DialectType dialectType0 = DialectType.HADB;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition((-1743), "IkxQDgPJ#Yk", "IkxQDgPJ#Yk", "IkxQDgPJ#Yk", 91, "IkxQDgPJ#Yk", false, (-1743), 91, (-1743), false, false, false, dialectType0);
      TableCopySqlPartCommandBase.StatType tableCopySqlPartCommandBase_StatType0 = TableCopySqlPartCommandBase.StatType.UPDATE;
      Date date0 = new Date((long) 91);
      String string0 = tableCopySqlPartCommandBase0.getData(columnDisplayDefinition0, (Object) date0, tableCopySqlPartCommandBase_StatType0);
      assertEquals("={d '1970-01-01'}", string0);
      assertNotNull(string0);
  }

  @Test
  public void test13()  throws Throwable  {
      TableCopySqlPartCommandBase tableCopySqlPartCommandBase0 = new TableCopySqlPartCommandBase();
      DialectType dialectType0 = DialectType.INFORMIX;
      TableCopySqlPartCommandBase.StatType tableCopySqlPartCommandBase_StatType0 = TableCopySqlPartCommandBase.StatType.WHERE;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition((-1743), "Ikx5QDg!PJ#Yk", "Ikx5QDg!PJ#Yk", "Ikx5QDg!PJ#Yk", 93, "Ikx5QDg!PJ#Yk", false, (-1743), 93, 93, false, false, false, dialectType0);
      String string0 = tableCopySqlPartCommandBase0.getData(columnDisplayDefinition0, (Object) "ActionCommandKey", tableCopySqlPartCommandBase_StatType0);
      assertNotNull(string0);
      assertEquals("='ActionCommandKey'", string0);
  }

  @Test
  public void test14()  throws Throwable  {
      TableCopySqlPartCommandBase tableCopySqlPartCommandBase0 = new TableCopySqlPartCommandBase();
      DialectType dialectType0 = DialectType.PROGRESS;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(7, "", "", "", 8, "", true, 7, 7, 8, true, true, true, dialectType0);
      TableCopySqlPartCommandBase.StatType tableCopySqlPartCommandBase_StatType0 = TableCopySqlPartCommandBase.StatType.IN;
      String string0 = tableCopySqlPartCommandBase0.getData(columnDisplayDefinition0, (Object) null, tableCopySqlPartCommandBase_StatType0);
      assertNotNull(string0);
      assertEquals("null", string0);
  }

  @Test
  public void test15()  throws Throwable  {
      TableCopySqlPartCommandBase.StatType tableCopySqlPartCommandBase_StatType0 = TableCopySqlPartCommandBase.StatType.WHERE;
      TableCopySqlPartCommandBase tableCopySqlPartCommandBase0 = new TableCopySqlPartCommandBase();
      String string0 = tableCopySqlPartCommandBase0.getData((ColumnDisplayDefinition) null, (Object) null, tableCopySqlPartCommandBase_StatType0);
      assertEquals(" is null", string0);
      assertNotNull(string0);
  }
}
