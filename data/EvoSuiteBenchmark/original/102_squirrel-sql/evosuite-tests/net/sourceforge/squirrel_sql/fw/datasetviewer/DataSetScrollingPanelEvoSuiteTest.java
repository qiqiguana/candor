/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.datasetviewer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import net.sourceforge.squirrel_sql.client.session.DataSetUpdateableTableModelImpl;
import net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetException;
import net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetScrollingPanel;
import net.sourceforge.squirrel_sql.fw.datasetviewer.EmptyDataSet;
import net.sourceforge.squirrel_sql.fw.datasetviewer.IDataSet;
import net.sourceforge.squirrel_sql.fw.datasetviewer.IDataSetUpdateableModel;
import net.sourceforge.squirrel_sql.fw.datasetviewer.IDataSetViewer;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DataSetScrollingPanelEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          DataSetUpdateableTableModelImpl dataSetUpdateableTableModelImpl0 = new DataSetUpdateableTableModelImpl();
          DataSetScrollingPanel dataSetScrollingPanel0 = null;
          try {
            dataSetScrollingPanel0 = new DataSetScrollingPanel("PS^bloZ4bE.", (IDataSetUpdateableModel) dataSetUpdateableTableModelImpl0);
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.lang.RuntimePermission preferences)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.util.prefs.Preferences.userRoot(Preferences.java:432)
             * net.sourceforge.squirrel_sql.fw.gui.ButtonTableHeader.isAlwaysAdjustAllColWidths(ButtonTableHeader.java:267)
             * net.sourceforge.squirrel_sql.fw.gui.TablePopupMenu.<init>(TablePopupMenu.java:159)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel$MyJTable.createGUI(DataSetViewerTablePanel.java:531)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel$MyJTable.<init>(DataSetViewerTablePanel.java:275)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel.init(DataSetViewerTablePanel.java:107)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel.init(DataSetViewerTablePanel.java:97)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.BaseDataSetViewerDestination.getInstance(BaseDataSetViewerDestination.java:207)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetScrollingPanel.createUserInterface(DataSetScrollingPanel.java:97)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetScrollingPanel.<init>(DataSetScrollingPanel.java:53)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetScrollingPanel.<init>(DataSetScrollingPanel.java:47)
             * sun.reflect.GeneratedConstructorAccessor21.newInstance(Unknown Source)
             * sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
             * java.lang.reflect.Constructor.newInstance(Constructor.java:513)
             * org.evosuite.testcase.ConstructorStatement$1.execute(ConstructorStatement.java:226)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.ConstructorStatement.execute(ConstructorStatement.java:188)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test1()  throws Throwable  {
      DataSetScrollingPanel dataSetScrollingPanel0 = new DataSetScrollingPanel();
      IDataSetViewer iDataSetViewer0 = dataSetScrollingPanel0.getViewer();
      assertNull(iDataSetViewer0);
  }

  @Test
  public void test2()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          DataSetScrollingPanel dataSetScrollingPanel0 = new DataSetScrollingPanel();
          EmptyDataSet emptyDataSet0 = new EmptyDataSet();
          dataSetScrollingPanel0.load((IDataSet) emptyDataSet0);
          assertEquals(false, dataSetScrollingPanel0.isDisplayable());
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test3()  throws Throwable  {
      DataSetScrollingPanel dataSetScrollingPanel0 = new DataSetScrollingPanel();
      dataSetScrollingPanel0.clear();
      assertEquals(false, dataSetScrollingPanel0.isDoubleBuffered());
  }
}
