/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.xml;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.dnd.DropTargetEvent;
import java.io.CharArrayReader;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PushbackReader;
import java.io.Reader;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import net.sourceforge.squirrel_sql.fw.id.IHasIdentifier;
import net.sourceforge.squirrel_sql.fw.id.IIdentifier;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.util.DuplicateObjectException;
import net.sourceforge.squirrel_sql.fw.util.IObjectCacheChangeListener;
import net.sourceforge.squirrel_sql.fw.xml.XMLException;
import net.sourceforge.squirrel_sql.fw.xml.XMLObjectCache;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class XMLObjectCacheEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = false; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  //Test case number: 0
  /*
   * 5 covered goals:
   * 1 net.sourceforge.squirrel_sql.fw.xml.XMLObjectCache.save(Ljava/lang/String;)V: I20 Branch 6 IF_ICMPGE L283 - false
   * 2 net.sourceforge.squirrel_sql.fw.xml.XMLObjectCache.save(Ljava/lang/String;)V: I34 Branch 7 IFEQ L286 - true
   * 3 net.sourceforge.squirrel_sql.fw.xml.XMLObjectCache.getAllForClass(Ljava/lang/Class;)Ljava/util/Iterator;: root-Branch
   * 4 net.sourceforge.squirrel_sql.fw.xml.XMLObjectCache.<init>()V: root-Branch
   * 5 net.sourceforge.squirrel_sql.fw.xml.XMLObjectCache.save(Ljava/lang/String;)V: I20 Branch 6 IF_ICMPGE L283 - true
   */
  @Test
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          XMLObjectCache<IHasIdentifier> xMLObjectCache0 = new XMLObjectCache<IHasIdentifier>();
          Class<?> class0 = XMLObjectCache.class;
          xMLObjectCache0.getAllForClass(class0);
          // Undeclared exception!
          try {
            xMLObjectCache0.save("status");
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.io.FilePermission status write)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkWrite(SecurityManager.java:962)
             * java.io.FileOutputStream.<init>(FileOutputStream.java:183)
             * java.io.FileOutputStream.<init>(FileOutputStream.java:84)
             * net.sourceforge.squirrel_sql.fw.xml.XMLBeanWriter.save(XMLBeanWriter.java:89)
             * net.sourceforge.squirrel_sql.fw.xml.XMLObjectCache.save(XMLObjectCache.java:291)
             * sun.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 net.sourceforge.squirrel_sql.fw.xml.XMLObjectCache.getAllClasses()[Ljava/lang/Class;: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      XMLObjectCache<IHasIdentifier> xMLObjectCache0 = new XMLObjectCache<IHasIdentifier>();
      Class<IHasIdentifier>[] classArray0 = xMLObjectCache0.getAllClasses();
      assertNotNull(classArray0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 net.sourceforge.squirrel_sql.fw.xml.XMLObjectCache.addChangesListener(Lnet/sourceforge/squirrel_sql/fw/util/IObjectCacheChangeListener;Ljava/lang/Class;)V: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      XMLObjectCache<IHasIdentifier> xMLObjectCache0 = new XMLObjectCache<IHasIdentifier>();
      Class<?> class0 = DropTargetEvent.class;
      xMLObjectCache0.addChangesListener((IObjectCacheChangeListener) null, class0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 net.sourceforge.squirrel_sql.fw.xml.XMLObjectCache.get(Ljava/lang/Class;Lnet/sourceforge/squirrel_sql/fw/id/IIdentifier;)Lnet/sourceforge/squirrel_sql/fw/id/IHasIdentifier;: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      XMLObjectCache<IHasIdentifier> xMLObjectCache0 = new XMLObjectCache<IHasIdentifier>();
      Class<?> class0 = DropTargetEvent.class;
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      IntegerIdentifier integerIdentifier0 = (IntegerIdentifier)databaseObjectType0.getIdentifier();
      IHasIdentifier iHasIdentifier0 = xMLObjectCache0.get(class0, (IIdentifier) integerIdentifier0);
      assertNull(iHasIdentifier0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 net.sourceforge.squirrel_sql.fw.xml.XMLObjectCache.remove(Ljava/lang/Class;Lnet/sourceforge/squirrel_sql/fw/id/IIdentifier;)V: root-Branch
   */
  @Test
  public void test4()  throws Throwable  {
      XMLObjectCache<IHasIdentifier> xMLObjectCache0 = new XMLObjectCache<IHasIdentifier>();
      Class<?> class0 = DropTargetEvent.class;
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      xMLObjectCache0.remove(class0, (IIdentifier) uidIdentifier0);
      assertEquals("3d87476d:13faa1b33bb:-7f9e", uidIdentifier0.toString());
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 net.sourceforge.squirrel_sql.fw.xml.XMLObjectCache.load(Ljava/io/Reader;)V: root-Branch
   * 2 net.sourceforge.squirrel_sql.fw.xml.XMLObjectCache.load(Ljava/io/Reader;Ljava/lang/ClassLoader;Z)V: I20 Branch 3 IFEQ L246 - true
   */
  @Test
  public void test5()  throws Throwable  {
      XMLObjectCache<IHasIdentifier> xMLObjectCache0 = new XMLObjectCache<IHasIdentifier>();
      char[] charArray0 = new char[1];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0, 0, 0);
      PushbackReader pushbackReader0 = new PushbackReader((Reader) charArrayReader0, (int) ']');
      xMLObjectCache0.load((Reader) pushbackReader0);
      assertEquals(false, pushbackReader0.markSupported());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 net.sourceforge.squirrel_sql.fw.xml.XMLObjectCache.load(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test6()  throws Throwable  {
      XMLObjectCache<IHasIdentifier> xMLObjectCache0 = new XMLObjectCache<IHasIdentifier>();
      try {
        xMLObjectCache0.load("NC:;p+7o\"e-g+dRUq.d");
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
        /*
         * NC:;p+7o\"e-g+dRUq.d (No such file or directory)
         */
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 net.sourceforge.squirrel_sql.fw.xml.XMLObjectCache.save(Ljava/lang/String;)V: I20 Branch 6 IF_ICMPGE L283 - true
   */
  @Test
  public void test7()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          XMLObjectCache<IHasIdentifier> xMLObjectCache0 = new XMLObjectCache<IHasIdentifier>();
          // Undeclared exception!
          try {
            xMLObjectCache0.save("status");
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.io.FilePermission status write)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkWrite(SecurityManager.java:962)
             * java.io.FileOutputStream.<init>(FileOutputStream.java:183)
             * java.io.FileOutputStream.<init>(FileOutputStream.java:84)
             * net.sourceforge.squirrel_sql.fw.xml.XMLBeanWriter.save(XMLBeanWriter.java:89)
             * net.sourceforge.squirrel_sql.fw.xml.XMLObjectCache.save(XMLObjectCache.java:291)
             * sun.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * 1 net.sourceforge.squirrel_sql.fw.xml.XMLObjectCache.saveAllForClass(Ljava/lang/String;Ljava/lang/Class;)V: I16 Branch 8 IFEQ L311 - true
   * 2 net.sourceforge.squirrel_sql.fw.xml.XMLObjectCache.<init>()V: root-Branch
   */
  @Test
  public void test8()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          XMLObjectCache<IHasIdentifier> xMLObjectCache0 = new XMLObjectCache<IHasIdentifier>();
          Class<?> class0 = XMLObjectCache.class;
          // Undeclared exception!
          try {
            xMLObjectCache0.saveAllForClass("Od'CW%", class0);
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.io.FilePermission Od'CW% write)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkWrite(SecurityManager.java:962)
             * java.io.FileOutputStream.<init>(FileOutputStream.java:183)
             * java.io.FileOutputStream.<init>(FileOutputStream.java:84)
             * net.sourceforge.squirrel_sql.fw.xml.XMLBeanWriter.save(XMLBeanWriter.java:89)
             * net.sourceforge.squirrel_sql.fw.xml.XMLObjectCache.saveAllForClass(XMLObjectCache.java:315)
             * sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             * sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }
}
