/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.client.session.schemainfo;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.ISQLAliasExt;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfoCache;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfoCacheSerializer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SchemaInfoCacheSerializerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SchemaInfoCache schemaInfoCache0 = new SchemaInfoCache();
      // Undeclared exception!
      try {
        SchemaInfoCacheSerializer.store((ISession) null, schemaInfoCache0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try {
        SchemaInfoCacheSerializer.load((ISession) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      SchemaInfoCacheSerializer schemaInfoCacheSerializer0 = new SchemaInfoCacheSerializer();
      assertNotNull(schemaInfoCacheSerializer0);
  }

  @Test
  public void test3()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      // Undeclared exception!
      try {
        SchemaInfoCacheSerializer.deleteCacheFile((IApplication) null, (ISQLAliasExt) sQLAlias0, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      SchemaInfoCacheSerializer.waitTillStoringIsDone();
  }
}
