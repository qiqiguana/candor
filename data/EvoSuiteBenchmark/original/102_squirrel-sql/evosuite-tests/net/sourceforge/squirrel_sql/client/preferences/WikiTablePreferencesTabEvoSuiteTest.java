/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.client.preferences;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.preferences.WikiTablePreferencesPanel;
import net.sourceforge.squirrel_sql.client.preferences.WikiTablePreferencesTab;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class WikiTablePreferencesTabEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      WikiTablePreferencesTab wikiTablePreferencesTab0 = new WikiTablePreferencesTab();
      String string0 = wikiTablePreferencesTab0.getTitle();
      assertEquals("Wiki Table", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      WikiTablePreferencesTab wikiTablePreferencesTab0 = new WikiTablePreferencesTab();
      // Undeclared exception!
      try {
        wikiTablePreferencesTab0.applyChanges();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      WikiTablePreferencesTab wikiTablePreferencesTab0 = new WikiTablePreferencesTab();
      wikiTablePreferencesTab0.uninitialize((IApplication) null);
      assertEquals("Wiki Table", wikiTablePreferencesTab0.getTitle());
  }

  @Test
  public void test3()  throws Throwable  {
      WikiTablePreferencesTab wikiTablePreferencesTab0 = new WikiTablePreferencesTab();
      String string0 = wikiTablePreferencesTab0.getHint();
      assertEquals("Configure exports for a Wiki table", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      WikiTablePreferencesTab wikiTablePreferencesTab0 = new WikiTablePreferencesTab();
      WikiTablePreferencesPanel wikiTablePreferencesPanel0 = (WikiTablePreferencesPanel)wikiTablePreferencesTab0.getPanelComponent();
      WikiTablePreferencesPanel wikiTablePreferencesPanel1 = (WikiTablePreferencesPanel)wikiTablePreferencesTab0.getPanelComponent();
      assertSame(wikiTablePreferencesPanel1, wikiTablePreferencesPanel0);
      assertNotNull(wikiTablePreferencesPanel1);
  }

  @Test
  public void test5()  throws Throwable  {
      WikiTablePreferencesTab wikiTablePreferencesTab0 = new WikiTablePreferencesTab();
      // Undeclared exception!
      try {
        wikiTablePreferencesTab0.initialize((IApplication) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Null IApplication passed
         */
      }
  }
}
