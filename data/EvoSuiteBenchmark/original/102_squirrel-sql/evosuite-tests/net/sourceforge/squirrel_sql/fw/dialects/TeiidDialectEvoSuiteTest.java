/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.dialects;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.CallableStatement;
import java.sql.SQLException;
import net.sourceforge.squirrel_sql.fw.dialects.TeiidDialect;
import org.hibernate.LockMode;
import org.hibernate.event.def.DefaultLoadEventListener;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TeiidDialectEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TeiidDialect teiidDialect0 = new TeiidDialect();
      int int0 = teiidDialect0.registerResultSetOutParameter((CallableStatement) null, (-716));
      assertEquals((-716), int0);
  }

  @Test
  public void test1()  throws Throwable  {
      TeiidDialect teiidDialect0 = new TeiidDialect();
      boolean boolean0 = teiidDialect0.supportsCurrentTimestampSelection();
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      TeiidDialect teiidDialect0 = new TeiidDialect();
      boolean boolean0 = teiidDialect0.dropConstraints();
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      TeiidDialect teiidDialect0 = new TeiidDialect();
      boolean boolean0 = teiidDialect0.supportsOuterJoinForUpdate();
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      TeiidDialect teiidDialect0 = new TeiidDialect();
      boolean boolean0 = teiidDialect0.supportsUnique();
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      TeiidDialect teiidDialect0 = new TeiidDialect();
      String string0 = teiidDialect0.getSelectGUIDString();
      assertEquals("select uuid()", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      TeiidDialect teiidDialect0 = new TeiidDialect();
      String string0 = teiidDialect0.getForUpdateString("now");
      assertEquals("", string0);
  }

  @Test
  public void test7()  throws Throwable  {
      TeiidDialect teiidDialect0 = new TeiidDialect();
      String string0 = teiidDialect0.getForUpdateNowaitString("");
      assertEquals("", string0);
  }

  @Test
  public void test8()  throws Throwable  {
      TeiidDialect teiidDialect0 = new TeiidDialect();
      boolean boolean0 = teiidDialect0.supportsCascadeDelete();
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      TeiidDialect teiidDialect0 = new TeiidDialect();
      boolean boolean0 = teiidDialect0.supportsVariableLimit();
      assertEquals(true, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      TeiidDialect teiidDialect0 = new TeiidDialect();
      boolean boolean0 = teiidDialect0.supportsUnionAll();
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      TeiidDialect teiidDialect0 = new TeiidDialect();
      String string0 = teiidDialect0.getForUpdateNowaitString();
      assertEquals("", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      TeiidDialect teiidDialect0 = new TeiidDialect();
      boolean boolean0 = teiidDialect0.supportsColumnCheck();
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      TeiidDialect teiidDialect0 = new TeiidDialect();
      String string0 = teiidDialect0.getCurrentTimestampSQLFunctionName();
      assertEquals("now", string0);
  }

  @Test
  public void test14()  throws Throwable  {
      TeiidDialect teiidDialect0 = new TeiidDialect();
      boolean boolean0 = teiidDialect0.isCurrentTimestampSelectStringCallable();
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      TeiidDialect teiidDialect0 = new TeiidDialect();
      boolean boolean0 = teiidDialect0.supportsTableCheck();
      assertEquals(false, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      TeiidDialect teiidDialect0 = new TeiidDialect();
      String string0 = teiidDialect0.getForUpdateString();
      assertEquals("", string0);
  }

  @Test
  public void test17()  throws Throwable  {
      TeiidDialect teiidDialect0 = new TeiidDialect();
      LockMode lockMode0 = DefaultLoadEventListener.DEFAULT_LOCK_MODE;
      String string0 = teiidDialect0.getForUpdateString(lockMode0);
      assertEquals("", string0);
  }

  @Test
  public void test18()  throws Throwable  {
      TeiidDialect teiidDialect0 = new TeiidDialect();
      boolean boolean0 = teiidDialect0.hasAlterTable();
      assertEquals(false, boolean0);
  }

  @Test
  public void test19()  throws Throwable  {
      TeiidDialect teiidDialect0 = new TeiidDialect();
      String string0 = teiidDialect0.toBooleanValueString(false);
      assertEquals("{b'false'}", string0);
  }

  @Test
  public void test20()  throws Throwable  {
      TeiidDialect teiidDialect0 = new TeiidDialect();
      String string0 = teiidDialect0.toBooleanValueString(true);
      assertEquals("{b'true'}", string0);
  }

  @Test
  public void test21()  throws Throwable  {
      TeiidDialect teiidDialect0 = new TeiidDialect();
      String string0 = teiidDialect0.getLimitString("select uuid()", (-25), (-25));
      assertNotNull(string0);
      assertEquals("select uuid() limit ?", string0);
  }

  @Test
  public void test22()  throws Throwable  {
      TeiidDialect teiidDialect0 = new TeiidDialect();
      String string0 = teiidDialect0.getLimitString("e!n qP6;", 6, 6);
      assertEquals("e!n qP6; limit ?, ?", string0);
      assertNotNull(string0);
  }
}
