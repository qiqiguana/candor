/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.gui.action;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import javax.swing.JTable;
import net.sourceforge.squirrel_sql.fw.gui.action.TableExportCsvCommand;
import net.sourceforge.squirrel_sql.fw.gui.action.exportData.ExportDataException;
import net.sourceforge.squirrel_sql.fw.sql.ProgressAbortCallback;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AbstractExportCommandEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JTable jTable0 = new JTable();
      TableExportCsvCommand tableExportCsvCommand0 = new TableExportCsvCommand(jTable0);
      tableExportCsvCommand0.createProgressController();
      assertEquals((-1L), tableExportCsvCommand0.getWrittenRows());
  }

  @Test
  public void test1()  throws Throwable  {
      JTable jTable0 = new JTable();
      TableExportCsvCommand tableExportCsvCommand0 = new TableExportCsvCommand(jTable0);
      // Undeclared exception!
      try {
        tableExportCsvCommand0.execute();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * java.lang.reflect.InvocationTargetException
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      JTable jTable0 = new JTable();
      TableExportCsvCommand tableExportCsvCommand0 = new TableExportCsvCommand(jTable0);
      tableExportCsvCommand0.getProgressController();
      assertEquals((-1L), tableExportCsvCommand0.getWrittenRows());
  }

  @Test
  public void test3()  throws Throwable  {
      TableExportCsvCommand tableExportCsvCommand0 = new TableExportCsvCommand((JTable) null);
      long long0 = tableExportCsvCommand0.getWrittenRows();
      assertEquals((-1L), long0);
  }

  @Test
  public void test4()  throws Throwable  {
      JTable jTable0 = new JTable();
      TableExportCsvCommand tableExportCsvCommand0 = new TableExportCsvCommand(jTable0);
      tableExportCsvCommand0.setProgressController((ProgressAbortCallback) null);
      assertEquals((-1L), tableExportCsvCommand0.getWrittenRows());
  }

  @Test
  public void test5()  throws Throwable  {
      TableExportCsvCommand tableExportCsvCommand0 = new TableExportCsvCommand((JTable) null);
      tableExportCsvCommand0.getTargetFile();
      assertEquals((-1L), tableExportCsvCommand0.getWrittenRows());
  }

  @Test
  public void test6()  throws Throwable  {
      TableExportCsvCommand tableExportCsvCommand0 = new TableExportCsvCommand((JTable) null);
      tableExportCsvCommand0.progress("\"yBL5^u");
      assertEquals((-1L), tableExportCsvCommand0.getWrittenRows());
  }
}
