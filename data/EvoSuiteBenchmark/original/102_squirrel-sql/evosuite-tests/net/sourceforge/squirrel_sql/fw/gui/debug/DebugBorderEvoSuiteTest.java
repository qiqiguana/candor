/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.gui.debug;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import javax.swing.Action;
import javax.swing.JDesktopPane;
import javax.swing.JMenuItem;
import javax.swing.TransferHandler;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
import javax.swing.plaf.metal.MetalBorders;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.fw.gui.debug.DebugBorder;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DebugBorderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DebugBorder debugBorder0 = new DebugBorder((Border) null);
      // Undeclared exception!
      try {
        debugBorder0.paintBorder((Component) null, (Graphics) null, 0, (-1644), 0, 1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      JDesktopPane jDesktopPane0 = new JDesktopPane();
      DebugBorder debugBorder0 = new DebugBorder((Border) null);
      // Undeclared exception!
      try {
        debugBorder0.getBorderInsets((Component) jDesktopPane0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Color color0 = defaultTreeCellRenderer0.getTextSelectionColor();
      LineBorder lineBorder0 = new LineBorder(color0);
      DebugBorder debugBorder0 = new DebugBorder((Border) lineBorder0);
      LineBorder lineBorder1 = (LineBorder)debugBorder0.getDelegate();
      assertEquals(false, lineBorder1.getRoundedCorners());
  }

  @Test
  public void test3()  throws Throwable  {
      Action action0 = TransferHandler.getPasteAction();
      JMenuItem jMenuItem0 = new JMenuItem(action0);
      MetalBorders.MenuItemBorder metalBorders_MenuItemBorder0 = (MetalBorders.MenuItemBorder)jMenuItem0.getBorder();
      DebugBorder debugBorder0 = new DebugBorder((Border) metalBorders_MenuItemBorder0);
      boolean boolean0 = debugBorder0.isBorderOpaque();
      assertEquals(false, boolean0);
  }
}
