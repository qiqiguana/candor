/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.completion.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sourceforge.squirrel_sql.fw.completion.util.CompletionParser;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CompletionParserEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CompletionParser completionParser0 = new CompletionParser("'", true);
      assertNotNull(completionParser0);
      
      int int0 = completionParser0.getReplacementStart();
      assertEquals(1, completionParser0.size());
      assertEquals(1, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      CompletionParser completionParser0 = new CompletionParser("", true);
      assertNotNull(completionParser0);
      
      String string0 = completionParser0.getStringToReplace();
      assertNotNull(string0);
      assertEquals(1, completionParser0.size());
  }

  @Test
  public void test2()  throws Throwable  {
      CompletionParser completionParser0 = new CompletionParser("q.eSD", false);
      assertNotNull(completionParser0);
      
      String string0 = completionParser0.getLastToken();
      assertEquals("eSD", string0);
      assertEquals(2, completionParser0.getReplacementStart());
      assertNotNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      CompletionParser completionParser0 = new CompletionParser(".");
      assertNotNull(completionParser0);
      
      // Undeclared exception!
      try {
        completionParser0.getToken(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 1, Size: 1
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      CompletionParser completionParser0 = new CompletionParser("'", true);
      assertNotNull(completionParser0);
      
      int int0 = completionParser0.size();
      assertEquals(1, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      CompletionParser completionParser0 = new CompletionParser(".");
      assertNotNull(completionParser0);
      
      String string0 = completionParser0.getTextTillCarret();
      assertEquals(1, completionParser0.size());
      assertNotNull(string0);
      assertEquals("", completionParser0.getStringToReplace());
      assertEquals(1, completionParser0.getReplacementStart());
  }

  @Test
  public void test6()  throws Throwable  {
      CompletionParser completionParser0 = new CompletionParser("'", true);
      assertNotNull(completionParser0);
      
      String string0 = completionParser0.getStringToParse();
      assertNotNull(string0);
      assertEquals(1, completionParser0.size());
  }

  @Test
  public void test7()  throws Throwable  {
      CompletionParser completionParser0 = new CompletionParser("'", true);
      assertNotNull(completionParser0);
      
      int int0 = completionParser0.getStringToParsePosition();
      assertEquals(1, completionParser0.size());
      assertEquals(0, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      CompletionParser completionParser0 = new CompletionParser("", true);
      assertNotNull(completionParser0);
      
      boolean boolean0 = completionParser0.isQualified();
      assertEquals(1, completionParser0.size());
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      CompletionParser completionParser0 = new CompletionParser("q.eSD", false);
      assertNotNull(completionParser0);
      
      boolean boolean0 = completionParser0.isQualified();
      assertEquals(true, boolean0);
      assertEquals("eSD", completionParser0.getStringToReplace());
  }

  @Test
  public void test10()  throws Throwable  {
      CompletionParser completionParser0 = new CompletionParser("q.eSD", false);
      assertNotNull(completionParser0);
      
      String string0 = completionParser0.getAllButFirst();
      assertNotNull(string0);
      assertEquals("eSD", completionParser0.getStringToReplace());
      assertEquals("eSD", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      CompletionParser completionParser0 = new CompletionParser("q.eSD.");
      assertNotNull(completionParser0);
      
      String string0 = completionParser0.getAllButFirst();
      assertEquals("eSD.", string0);
      assertEquals(6, completionParser0.getReplacementStart());
      assertNotNull(string0);
  }
}
