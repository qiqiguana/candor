/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.gui;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Font;
import javax.swing.Icon;
import javax.swing.JButton;
import javax.swing.JMenuItem;
import javax.swing.JTable;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.AttributeSet;
import javax.swing.text.StyleConstants;
import net.sourceforge.squirrel_sql.fw.gui.FontInfo;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FontInfoEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JButton jButton0 = new JButton("5M5{4i.g");
      FontUIResource fontUIResource0 = (FontUIResource)jButton0.getFont();
      FontInfo fontInfo0 = new FontInfo((Font) fontUIResource0);
      assertNotNull(fontInfo0);
      
      String string0 = fontInfo0.getFamily();
      assertEquals("Dialog, 12, bold", fontInfo0.toString());
      assertNotNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      FontInfo fontInfo0 = new FontInfo();
      FontInfo fontInfo1 = (FontInfo)fontInfo0.clone();
      fontInfo0.setIsBold(true);
      boolean boolean0 = fontInfo0.equals((Object) fontInfo1);
      assertEquals(1, fontInfo0.generateStyle());
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      FontInfo fontInfo0 = new FontInfo();
      fontInfo0.setIsBold(true);
      assertEquals(1, fontInfo0.generateStyle());
      assertEquals("Monospaced, 12, bold", fontInfo0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      JButton jButton0 = new JButton("5M5{4i.g");
      FontUIResource fontUIResource0 = (FontUIResource)jButton0.getFont();
      FontInfo fontInfo0 = new FontInfo((Font) fontUIResource0);
      assertNotNull(fontInfo0);
      
      boolean boolean0 = fontInfo0.isBold();
      assertEquals(true, boolean0);
      assertEquals("Dialog, 12, bold", fontInfo0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      FontInfo fontInfo0 = new FontInfo();
      fontInfo0.isItalic();
      assertEquals("Monospaced, 12", fontInfo0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      FontInfo fontInfo0 = null;
      try {
        fontInfo0 = new FontInfo((Font) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Null Font passed
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      FontInfo fontInfo0 = new FontInfo();
      fontInfo0.setFamily((String) null);
      assertEquals("Monospaced, 12", fontInfo0.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      FontInfo fontInfo0 = new FontInfo();
      try {
        fontInfo0.setFont((Font) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Null Font passed
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      FontInfo fontInfo0 = new FontInfo();
      boolean boolean0 = fontInfo0.doesFontMatch((Font) null);
      assertEquals(false, boolean0);
      assertEquals("Monospaced, 12", fontInfo0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      FontInfo fontInfo0 = new FontInfo();
      Object[][] objectArray0 = new Object[25][3];
      Object[] objectArray1 = new Object[1];
      objectArray1[0] = (Object) fontInfo0;
      JTable jTable0 = new JTable(objectArray0, objectArray1);
      assertNotNull(jTable0);
      
      FontUIResource fontUIResource0 = (FontUIResource)jTable0.getFont();
      boolean boolean0 = fontInfo0.doesFontMatch((Font) fontUIResource0);
      assertEquals("Monospaced, 12", fontInfo0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      JMenuItem jMenuItem0 = new JMenuItem((Icon) null);
      FontUIResource fontUIResource0 = (FontUIResource)jMenuItem0.getFont();
      FontInfo fontInfo0 = new FontInfo((Font) fontUIResource0);
      assertNotNull(fontInfo0);
      assertEquals("Dialog, 12, bold", fontInfo0.toString());
      
      fontInfo0.setSize(0);
      boolean boolean0 = fontInfo0.doesFontMatch((Font) fontUIResource0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      FontInfo fontInfo0 = new FontInfo();
      Font font0 = fontInfo0.createFont();
      fontInfo0.setIsItalic(true);
      boolean boolean0 = fontInfo0.doesFontMatch(font0);
      assertEquals(true, fontInfo0.isItalic());
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      JMenuItem jMenuItem0 = new JMenuItem((Icon) null);
      FontUIResource fontUIResource0 = (FontUIResource)jMenuItem0.getFont();
      FontInfo fontInfo0 = new FontInfo((Font) fontUIResource0);
      assertNotNull(fontInfo0);
      
      boolean boolean0 = fontInfo0.doesFontMatch((Font) fontUIResource0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      JMenuItem jMenuItem0 = new JMenuItem((Icon) null);
      FontUIResource fontUIResource0 = (FontUIResource)jMenuItem0.getFont();
      FontInfo fontInfo0 = new FontInfo((Font) fontUIResource0);
      assertNotNull(fontInfo0);
      
      String string0 = fontInfo0.toString();
      assertNotNull(string0);
      assertEquals("Dialog, 12, bold", string0);
  }

  @Test
  public void test14()  throws Throwable  {
      FontInfo fontInfo0 = new FontInfo();
      fontInfo0.setIsItalic(true);
      String string0 = fontInfo0.toString();
      assertEquals(2, fontInfo0.generateStyle());
      assertEquals("Monospaced, 12, italic", string0);
  }

  @Test
  public void test15()  throws Throwable  {
      JButton jButton0 = new JButton("5M5{4i.g");
      FontUIResource fontUIResource0 = (FontUIResource)jButton0.getFont();
      FontInfo fontInfo0 = new FontInfo((Font) fontUIResource0);
      assertNotNull(fontInfo0);
      
      int int0 = fontInfo0.hashCode();
      assertEquals((-948144129), int0);
  }

  @Test
  public void test16()  throws Throwable  {
      FontInfo fontInfo0 = new FontInfo();
      fontInfo0.setIsItalic(true);
      int int0 = fontInfo0.hashCode();
      assertEquals(2, fontInfo0.generateStyle());
      assertEquals((-1059600462), int0);
  }

  @Test
  public void test17()  throws Throwable  {
      JButton jButton0 = new JButton("5M5{4i.g");
      FontUIResource fontUIResource0 = (FontUIResource)jButton0.getFont();
      FontInfo fontInfo0 = new FontInfo((Font) fontUIResource0);
      assertNotNull(fontInfo0);
      
      FontInfo fontInfo1 = (FontInfo)fontInfo0.clone();
      boolean boolean0 = fontInfo0.equals((Object) fontInfo1);
      assertEquals("Dialog, 12, bold", fontInfo0.toString());
      assertEquals(true, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      FontInfo fontInfo0 = new FontInfo();
      boolean boolean0 = fontInfo0.equals((Object) null);
      assertEquals("Monospaced, 12", fontInfo0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test19()  throws Throwable  {
      FontInfo fontInfo0 = new FontInfo();
      Object[] objectArray0 = new Object[8];
      StyleConstants styleConstants0 = (StyleConstants)AttributeSet.ResolveAttribute;
      objectArray0[0] = (Object) styleConstants0;
      boolean boolean0 = fontInfo0.equals(objectArray0[0]);
      assertEquals(false, boolean0);
      assertEquals("Monospaced, 12", fontInfo0.toString());
  }

  @Test
  public void test20()  throws Throwable  {
      FontInfo fontInfo0 = new FontInfo();
      FontInfo fontInfo1 = (FontInfo)fontInfo0.clone();
      fontInfo0.setFamily("Monospaced, 12");
      boolean boolean0 = fontInfo0.equals((Object) fontInfo1);
      assertEquals("Monospaced, 12, 12", fontInfo0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test21()  throws Throwable  {
      FontInfo fontInfo0 = new FontInfo();
      fontInfo0.setIsItalic(true);
      FontInfo fontInfo1 = new FontInfo();
      FontInfo fontInfo2 = (FontInfo)fontInfo1.clone();
      boolean boolean0 = fontInfo0.equals((Object) fontInfo2);
      assertEquals(2, fontInfo0.generateStyle());
      assertEquals(false, boolean0);
  }

  @Test
  public void test22()  throws Throwable  {
      FontInfo fontInfo0 = new FontInfo();
      FontInfo fontInfo1 = new FontInfo();
      fontInfo1.setSize((-19));
      FontInfo fontInfo2 = (FontInfo)fontInfo1.clone();
      boolean boolean0 = fontInfo0.equals((Object) fontInfo2);
      assertEquals(-19, fontInfo1.getSize());
      assertEquals(false, boolean0);
  }
}
