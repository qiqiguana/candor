/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.client.session.schemainfo;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sourceforge.squirrel_sql.client.session.schemainfo.CaseInsensitiveString;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CaseInsensitiveStringEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CaseInsensitiveString caseInsensitiveString0 = new CaseInsensitiveString();
      String string0 = caseInsensitiveString0.toString();
      assertEquals("", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      CaseInsensitiveString caseInsensitiveString0 = new CaseInsensitiveString("Invalid index=");
      assertNotNull(caseInsensitiveString0);
      
      boolean boolean0 = caseInsensitiveString0.equals((Object) caseInsensitiveString0);
      assertEquals("Invalid index=", caseInsensitiveString0.toString());
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      CaseInsensitiveString caseInsensitiveString0 = new CaseInsensitiveString("V");
      assertNotNull(caseInsensitiveString0);
      
      char[] charArray0 = new char[5];
      // Undeclared exception!
      try {
        caseInsensitiveString0.setCharBuffer(charArray0, (int) '\u0000', 1802);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * This CaseInsensitiveString is immutable
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      CaseInsensitiveString caseInsensitiveString0 = new CaseInsensitiveString("iPj4G*U7*7LU");
      assertNotNull(caseInsensitiveString0);
      
      caseInsensitiveString0.hashCode();
      int int0 = caseInsensitiveString0.hashCode();
      assertEquals((-2053023956), int0);
  }

  @Test
  public void test4()  throws Throwable  {
      CaseInsensitiveString caseInsensitiveString0 = new CaseInsensitiveString("Invalid index=");
      assertNotNull(caseInsensitiveString0);
      
      boolean boolean0 = caseInsensitiveString0.equals((Object) null);
      assertEquals("Invalid index=", caseInsensitiveString0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      CaseInsensitiveString caseInsensitiveString0 = new CaseInsensitiveString("yMSWh");
      assertNotNull(caseInsensitiveString0);
      
      boolean boolean0 = caseInsensitiveString0.equals((Object) "yMSWh");
      assertEquals(true, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      CaseInsensitiveString caseInsensitiveString0 = new CaseInsensitiveString("yMSWh");
      assertNotNull(caseInsensitiveString0);
      
      boolean boolean0 = caseInsensitiveString0.equals((Object) "20");
      assertEquals("yMSWh", caseInsensitiveString0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      CaseInsensitiveString caseInsensitiveString0 = new CaseInsensitiveString();
      char[] charArray0 = new char[16];
      caseInsensitiveString0.setCharBuffer(charArray0, 0, 1);
      boolean boolean0 = caseInsensitiveString0.equals((Object) "0");
      assertEquals("\u0000", caseInsensitiveString0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      CaseInsensitiveString caseInsensitiveString0 = new CaseInsensitiveString();
      Object object0 = new Object();
      boolean boolean0 = caseInsensitiveString0.equals(object0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      CaseInsensitiveString caseInsensitiveString0 = new CaseInsensitiveString("Invalid index=");
      assertNotNull(caseInsensitiveString0);
      
      CaseInsensitiveString caseInsensitiveString1 = new CaseInsensitiveString();
      boolean boolean0 = caseInsensitiveString0.equals((Object) caseInsensitiveString1);
      assertEquals("Invalid index=", caseInsensitiveString0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      CaseInsensitiveString caseInsensitiveString0 = new CaseInsensitiveString();
      char[] charArray0 = new char[16];
      caseInsensitiveString0.setCharBuffer(charArray0, 0, 1);
      CaseInsensitiveString caseInsensitiveString1 = new CaseInsensitiveString("0");
      boolean boolean0 = caseInsensitiveString0.equals((Object) caseInsensitiveString1);
      assertEquals("\u0000", caseInsensitiveString0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      CaseInsensitiveString caseInsensitiveString0 = new CaseInsensitiveString("yMSWh");
      assertNotNull(caseInsensitiveString0);
      
      int int0 = caseInsensitiveString0.compareTo(caseInsensitiveString0);
      assertEquals(0, int0);
      assertEquals("yMSWh", caseInsensitiveString0.toString());
  }

  @Test
  public void test12()  throws Throwable  {
      CaseInsensitiveString caseInsensitiveString0 = new CaseInsensitiveString("yMSWh");
      CaseInsensitiveString caseInsensitiveString1 = new CaseInsensitiveString("20");
      int int0 = caseInsensitiveString0.compareTo(caseInsensitiveString1);
      assertEquals(71, int0);
  }

  @Test
  public void test13()  throws Throwable  {
      CaseInsensitiveString caseInsensitiveString0 = new CaseInsensitiveString();
      char[] charArray0 = new char[8];
      caseInsensitiveString0.setCharBuffer(charArray0, (int) 'q', (int) 'q');
      CaseInsensitiveString caseInsensitiveString1 = new CaseInsensitiveString();
      int int0 = caseInsensitiveString0.compareTo(caseInsensitiveString1);
      assertEquals(113, int0);
  }

  @Test
  public void test14()  throws Throwable  {
      CaseInsensitiveString caseInsensitiveString0 = new CaseInsensitiveString();
      CaseInsensitiveString caseInsensitiveString1 = new CaseInsensitiveString("ex3xi/s6C(BmJ");
      assertNotNull(caseInsensitiveString1);
      
      char[] charArray0 = new char[9];
      charArray0[1] = 'e';
      caseInsensitiveString0.setCharBuffer(charArray0, 1, (int) 'e');
      int int0 = caseInsensitiveString1.compareTo(caseInsensitiveString0);
      assertEquals(120, int0);
  }
}
