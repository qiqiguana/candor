/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.gui;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import javax.swing.Action;
import javax.swing.JEditorPane;
import javax.swing.JPasswordField;
import javax.swing.JTextPane;
import javax.swing.TransferHandler;
import javax.swing.text.AbstractDocument;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.JTextComponent;
import javax.swing.text.StringContent;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledDocument;
import net.sourceforge.squirrel_sql.fw.gui.TextPopupMenu;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TextPopupMenuEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TextPopupMenu textPopupMenu0 = new TextPopupMenu();
      assertNotNull(textPopupMenu0);
      
      textPopupMenu0.dispose();
      assertEquals(0, textPopupMenu0.getComponentCount());
      assertEquals(0, textPopupMenu0.countComponents());
  }

  @Test
  public void test1()  throws Throwable  {
      TextPopupMenu textPopupMenu0 = new TextPopupMenu();
      assertNotNull(textPopupMenu0);
      
      // Undeclared exception!
      try {
        textPopupMenu0.show((MouseEvent) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TextPopupMenu textPopupMenu0 = new TextPopupMenu();
      assertNotNull(textPopupMenu0);
      
      StringContent stringContent0 = new StringContent();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      assertEquals("{Sj;v=AttributeSet,default=AttributeSet,}\n{resolver=AttributeSet,name=Sj;v,}\n{resolver=AttributeSet,}\n{bidiLevel=0,}\n{italic=false,name=default,size=12,foreground=sun.swing.PrintColorUIResource[r=51,g=51,b=51],bold=false,FONT_ATTRIBUTE_KEY=javax.swing.plaf.FontUIResource[family=Dialog,name=Dialog,style=plain,size=12],family=Dialog,}\n", styleContext0.toString());
      
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument((AbstractDocument.Content) stringContent0, styleContext0);
      JTextPane jTextPane0 = new JTextPane((StyledDocument) defaultStyledDocument0);
      textPopupMenu0.setTextComponent((JTextComponent) jTextPane0);
      textPopupMenu0.updateActions();
      assertEquals(5, textPopupMenu0.countComponents());
  }

  @Test
  public void test3()  throws Throwable  {
      TextPopupMenu textPopupMenu0 = new TextPopupMenu();
      assertNotNull(textPopupMenu0);
      
      textPopupMenu0.show((Component) null, 0, 0);
      assertEquals(true, textPopupMenu0.isVisible());
  }

  @Test
  public void test4()  throws Throwable  {
      TextPopupMenu textPopupMenu0 = new TextPopupMenu();
      assertNotNull(textPopupMenu0);
      
      textPopupMenu0.getTextComponent();
      assertEquals(5, textPopupMenu0.getComponentCount());
      assertEquals(5, textPopupMenu0.countComponents());
  }

  @Test
  public void test5()  throws Throwable  {
      TextPopupMenu textPopupMenu0 = new TextPopupMenu();
      assertNotNull(textPopupMenu0);
      
      TextPopupMenu.CutAction textPopupMenu_CutAction0 = textPopupMenu0.new CutAction();
      // Undeclared exception!
      try {
        textPopupMenu0.setItemAction((-1), (Action) textPopupMenu_CutAction0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Invalid option type: -1
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TextPopupMenu textPopupMenu0 = new TextPopupMenu();
      assertNotNull(textPopupMenu0);
      
      Action action0 = TransferHandler.getPasteAction();
      // Undeclared exception!
      try {
        textPopupMenu0.setItemAction(1858, action0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Invalid option type: 1858
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TextPopupMenu textPopupMenu0 = new TextPopupMenu();
      assertNotNull(textPopupMenu0);
      
      // Undeclared exception!
      try {
        textPopupMenu0.setItemAction(0, (Action) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Action == null
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TextPopupMenu textPopupMenu0 = new TextPopupMenu();
      assertNotNull(textPopupMenu0);
      
      TextPopupMenu.CutAction textPopupMenu_CutAction0 = textPopupMenu0.new CutAction();
      textPopupMenu0.setItemAction(1, (Action) textPopupMenu_CutAction0);
      assertEquals(5, textPopupMenu0.getComponentCount());
      assertEquals(5, textPopupMenu0.countComponents());
  }

  @Test
  public void test9()  throws Throwable  {
      TextPopupMenu textPopupMenu0 = new TextPopupMenu();
      assertNotNull(textPopupMenu0);
      
      TextPopupMenu.CutAction textPopupMenu_CutAction0 = textPopupMenu0.new CutAction();
      ActionEvent actionEvent0 = new ActionEvent((Object) "verticalTextPosition", 40, "verticalTextPosition", 40);
      textPopupMenu_CutAction0.actionPerformed(actionEvent0);
      assertEquals(5, textPopupMenu0.getComponentCount());
      assertEquals(5, textPopupMenu0.countComponents());
  }

  @Test
  public void test10()  throws Throwable  {
      TextPopupMenu textPopupMenu0 = new TextPopupMenu();
      assertNotNull(textPopupMenu0);
      
      TextPopupMenu.CutAction textPopupMenu_CutAction0 = textPopupMenu0.new CutAction();
      ActionEvent actionEvent0 = new ActionEvent((Object) "verticalTextPosition", (-1417), "verticalTextPosition", (-1417));
      JPasswordField jPasswordField0 = new JPasswordField();
      textPopupMenu0.setTextComponent((JTextComponent) jPasswordField0);
      textPopupMenu_CutAction0.actionPerformed(actionEvent0);
      assertEquals(5, textPopupMenu0.countComponents());
      assertEquals(5, textPopupMenu0.getComponentCount());
  }

  @Test
  public void test11()  throws Throwable  {
      TextPopupMenu textPopupMenu0 = new TextPopupMenu();
      assertNotNull(textPopupMenu0);
      
      TextPopupMenu.CopyAction textPopupMenu_CopyAction0 = textPopupMenu0.new CopyAction();
      textPopupMenu_CopyAction0.actionPerformed((ActionEvent) null);
      assertEquals(5, textPopupMenu0.countComponents());
      assertEquals(5, textPopupMenu0.getComponentCount());
  }

  @Test
  public void test12()  throws Throwable  {
      TextPopupMenu textPopupMenu0 = new TextPopupMenu();
      assertNotNull(textPopupMenu0);
      
      TextPopupMenu.PasteAction textPopupMenu_PasteAction0 = textPopupMenu0.new PasteAction();
      textPopupMenu_PasteAction0.actionPerformed((ActionEvent) null);
      assertEquals(5, textPopupMenu0.getComponentCount());
      assertEquals(5, textPopupMenu0.countComponents());
  }

  @Test
  public void test13()  throws Throwable  {
      TextPopupMenu textPopupMenu0 = new TextPopupMenu();
      assertNotNull(textPopupMenu0);
      
      TextPopupMenu.PasteAction textPopupMenu_PasteAction0 = textPopupMenu0.new PasteAction();
      JEditorPane jEditorPane0 = new JEditorPane("ShortDescription", "ShortDescription");
      textPopupMenu0.setTextComponent((JTextComponent) jEditorPane0);
      ActionEvent actionEvent0 = new ActionEvent((Object) "ShortDescription", (-1752), "ShortDescription", (-1752));
      textPopupMenu_PasteAction0.actionPerformed(actionEvent0);
      assertEquals(5, textPopupMenu0.countComponents());
      assertEquals(5, textPopupMenu0.getComponentCount());
  }

  @Test
  public void test14()  throws Throwable  {
      TextPopupMenu textPopupMenu0 = new TextPopupMenu();
      assertNotNull(textPopupMenu0);
      
      Object object0 = textPopupMenu0.getTreeLock();
      TextPopupMenu.SelectAllAction textPopupMenu_SelectAllAction0 = textPopupMenu0.new SelectAllAction();
      ActionEvent actionEvent0 = new ActionEvent(object0, 0, "'LT");
      textPopupMenu_SelectAllAction0.actionPerformed(actionEvent0);
      assertEquals(5, textPopupMenu0.countComponents());
      assertEquals(5, textPopupMenu0.getComponentCount());
  }
}
