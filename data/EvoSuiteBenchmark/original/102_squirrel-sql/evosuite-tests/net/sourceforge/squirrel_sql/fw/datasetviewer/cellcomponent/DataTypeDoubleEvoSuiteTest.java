/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import net.sourceforge.squirrel_sql.fw.datasetviewer.ColumnDisplayDefinition;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.DataTypeDouble;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.RestorableJTextArea;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.RestorableJTextField;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.whereClause.IsNullWhereClausePart;
import net.sourceforge.squirrel_sql.fw.dialects.DialectType;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DataTypeDoubleEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition((-1652), "}=@F,!.7f$s)m8|");
      DataTypeDouble dataTypeDouble0 = new DataTypeDouble((JTable) null, columnDisplayDefinition0);
      assertNotNull(dataTypeDouble0);
      
      boolean boolean0 = dataTypeDouble0.isEditableInPopup((Object) "}=@F,!.7f$s)m8|");
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(6, "@qB*yA &rMkUp-'%n/j");
      DataTypeDouble dataTypeDouble0 = new DataTypeDouble((JTable) null, columnDisplayDefinition0);
      // Undeclared exception!
      try {
        dataTypeDouble0.validateAndConvertInPopup("@qB*yA &rMkUp-'%n/j", (Object) "java.lang.Double", (StringBuffer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition((-335), ".27dPO%6pIll8=Ri3");
      DataTypeDouble dataTypeDouble0 = new DataTypeDouble((JTable) null, columnDisplayDefinition0);
      assertNotNull(dataTypeDouble0);
      
      boolean boolean0 = dataTypeDouble0.canDoFileIO();
      assertEquals(true, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(6, "@qB*yA &rMkUp-'%n/j");
      DataTypeDouble dataTypeDouble0 = new DataTypeDouble((JTable) null, columnDisplayDefinition0);
      RestorableJTextField restorableJTextField0 = (RestorableJTextField)dataTypeDouble0.getJTextField();
      assertEquals(true, restorableJTextField0.isBackgroundSet());
  }

  @Test
  public void test4()  throws Throwable  {
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(6, "@qB*yA &rMkUp-'%n/j");
      DataTypeDouble dataTypeDouble0 = new DataTypeDouble((JTable) null, columnDisplayDefinition0);
      assertNotNull(dataTypeDouble0);
      
      String string0 = dataTypeDouble0.getClassName();
      assertEquals("java.lang.Double", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition((-335), ".27dPO%6pIll8=Ri3");
      DataTypeDouble dataTypeDouble0 = new DataTypeDouble((JTable) null, columnDisplayDefinition0);
      assertNotNull(dataTypeDouble0);
      
      boolean boolean0 = dataTypeDouble0.needToReRead((Object) "icon");
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition((-1652), "}=@F,!.7f$s)m8|");
      DataTypeDouble dataTypeDouble0 = new DataTypeDouble((JTable) null, columnDisplayDefinition0);
      assertNotNull(dataTypeDouble0);
      
      boolean boolean0 = dataTypeDouble0.useBinaryEditingPanel();
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition((-1652), "}=@F,!.7f$s)m8|");
      DataTypeDouble dataTypeDouble0 = new DataTypeDouble((JTable) null, columnDisplayDefinition0);
      assertNotNull(dataTypeDouble0);
      
      boolean boolean0 = dataTypeDouble0.isEditableInCell((Object) "SwingDisplayedMnemonicIndexKey");
      assertEquals(true, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition((-335), ".27dPO%6pIll8=Ri3");
      DataTypeDouble dataTypeDouble0 = new DataTypeDouble((JTable) null, columnDisplayDefinition0);
      assertNotNull(dataTypeDouble0);
      
      RestorableJTextArea restorableJTextArea0 = (RestorableJTextArea)dataTypeDouble0.getJTextArea((Object) "icon");
      assertNotNull(restorableJTextArea0);
      
      RestorableJTextArea restorableJTextArea1 = (RestorableJTextArea)dataTypeDouble0.getJTextArea((Object) "icon");
      assertEquals("icon", restorableJTextArea1.getText());
  }

  @Test
  public void test9()  throws Throwable  {
      JTable jTable0 = new JTable();
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(25, "+f?zyJRK=");
      DataTypeDouble dataTypeDouble0 = new DataTypeDouble(jTable0, columnDisplayDefinition0);
      String string0 = dataTypeDouble0.renderObject((Object) null);
      assertEquals("<null>", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      JTable jTable0 = new JTable();
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(25, "+f?zyJRK=");
      DataTypeDouble dataTypeDouble0 = new DataTypeDouble(jTable0, columnDisplayDefinition0);
      Object object0 = dataTypeDouble0.getDefaultValue("<null>");
      assertNull(object0);
  }

  @Test
  public void test11()  throws Throwable  {
      JTable jTable0 = new JTable();
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(14, "");
      DataTypeDouble dataTypeDouble0 = new DataTypeDouble(jTable0, columnDisplayDefinition0);
      Object object0 = dataTypeDouble0.getDefaultValue("");
      assertNull(object0);
  }

  @Test
  public void test12()  throws Throwable  {
      JTable jTable0 = new JTable();
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(0, "^");
      DataTypeDouble dataTypeDouble0 = new DataTypeDouble(jTable0, columnDisplayDefinition0);
      IsNullWhereClausePart isNullWhereClausePart0 = (IsNullWhereClausePart)dataTypeDouble0.getWhereClauseValue((Object) null, (ISQLDatabaseMetaData) null);
      assertEquals(false, isNullWhereClausePart0.isParameterUsed());
  }

  @Test
  public void test13()  throws Throwable  {
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      DefaultListSelectionModel defaultListSelectionModel0 = new DefaultListSelectionModel();
      JTable jTable0 = new JTable((TableModel) null, (TableColumnModel) defaultTableColumnModel0, (ListSelectionModel) defaultListSelectionModel0);
      DialectType dialectType0 = DialectType.H2;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(0, "+CL|B", "+CL|B", "+CL|B", 0, "+CL|B", false, 0, 0, 0, false, false, false, dialectType0);
      DataTypeDouble dataTypeDouble0 = new DataTypeDouble(jTable0, columnDisplayDefinition0);
      dataTypeDouble0.getWhereClauseValue((Object) 4L, (ISQLDatabaseMetaData) null);
      assertEquals("javax.swing.DefaultListSelectionModel 1094582600 ={}", defaultListSelectionModel0.toString());
  }

  @Test
  public void test14()  throws Throwable  {
      JTable jTable0 = new JTable();
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(25, "+f?zyJRK=");
      DataTypeDouble dataTypeDouble0 = new DataTypeDouble(jTable0, columnDisplayDefinition0);
      // Undeclared exception!
      try {
        dataTypeDouble0.setPreparedStatementValue((PreparedStatement) null, (Object) 25, 25);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * java.lang.Integer cannot be cast to java.lang.Double
         */
      }
  }

  @Test
  public void test15()  throws Throwable  {
      JTable jTable0 = new JTable();
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(14, "");
      DataTypeDouble dataTypeDouble0 = new DataTypeDouble(jTable0, columnDisplayDefinition0);
      // Undeclared exception!
      try {
        dataTypeDouble0.setPreparedStatementValue((PreparedStatement) null, (Object) null, 14);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      DefaultListSelectionModel defaultListSelectionModel0 = new DefaultListSelectionModel();
      JTable jTable0 = new JTable((TableModel) null, (TableColumnModel) defaultTableColumnModel0, (ListSelectionModel) defaultListSelectionModel0);
      DialectType dialectType0 = DialectType.H2;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(0, "+CL|B", "+CL|B", "+CL|B", 0, "+CL|B", false, 0, 0, 0, false, false, false, dialectType0);
      DataTypeDouble dataTypeDouble0 = new DataTypeDouble(jTable0, columnDisplayDefinition0);
      Double double0 = (Double)dataTypeDouble0.getDefaultValue((String) null);
      assertEquals("javax.swing.DefaultListSelectionModel 334627753 ={}", defaultListSelectionModel0.toString());
      assertEquals(0.0, (double)double0, 0.01D);
  }

  @Test
  public void test17()  throws Throwable  {
      JTable jTable0 = new JTable();
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(25, "+f?zyJRK=");
      DataTypeDouble dataTypeDouble0 = new DataTypeDouble(jTable0, columnDisplayDefinition0);
      Double double0 = (Double)dataTypeDouble0.getDefaultValue("+f?zyJRK=");
      assertNull(double0);
  }
}
