/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.client.session.properties;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Font;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import javax.swing.JRadioButton;
import javax.swing.JSpinner;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.plaf.FontUIResource;
import net.sourceforge.squirrel_sql.client.session.properties.SessionProperties;
import net.sourceforge.squirrel_sql.fw.gui.FontInfo;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SessionPropertiesEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      int int0 = sessionProperties0.getSqlPanelOrientation();
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(0, int0);
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
  }

  @Test
  public void test1()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setKeepTableLayoutOnRerun(false);
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(false, sessionProperties0.getKeepTableLayoutOnRerun());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
  }

  @Test
  public void test2()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      boolean boolean0 = sessionProperties0.getAutoCommit();
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, boolean0);
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
  }

  @Test
  public void test3()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      boolean boolean0 = sessionProperties0.getShowToolBar();
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, boolean0);
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
  }

  @Test
  public void test4()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      String string0 = sessionProperties0.getSchemaFilterExclude();
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertNotNull(string0);
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
  }

  @Test
  public void test5()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      boolean boolean0 = sessionProperties0.getLimitSQLEntryHistorySize();
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, boolean0);
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
  }

  @Test
  public void test6()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      int int0 = sessionProperties0.getObjectTabPlacement();
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(1, int0);
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
  }

  @Test
  public void test7()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      int int0 = sessionProperties0.getSqlResultTabLimit();
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(15, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      boolean boolean0 = sessionProperties0.getCommitOnClosingConnection();
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      String string0 = sessionProperties0.getCatalogFilterInclude();
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertNotNull(string0);
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
  }

  @Test
  public void test10()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      String string0 = sessionProperties0.getSQLStatementSeparator();
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertNotNull(string0);
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
  }

  @Test
  public void test11()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      String string0 = sessionProperties0.getEditableTableOutputClassName();
      assertNotNull(string0);
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
  }

  @Test
  public void test12()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setCatalogFilterInclude("net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel");
      assertEquals("net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel", sessionProperties0.getCatalogFilterInclude());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
  }

  @Test
  public void test13()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      String string0 = sessionProperties0.getObjectFilterExclude();
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertNotNull(string0);
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
  }

  @Test
  public void test14()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.getLoadColumnsInBackground();
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
  }

  @Test
  public void test15()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      String string0 = sessionProperties0.getReadOnlyTableOutputClassName();
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertNotNull(string0);
  }

  @Test
  public void test16()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setShowRowCount(true);
      assertEquals(true, sessionProperties0.getShowRowCount());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
  }

  @Test
  public void test17()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      int int0 = sessionProperties0.getSQLEntryHistorySize();
      assertEquals(100, int0);
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
  }

  @Test
  public void test18()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setSQLEntryHistorySize(100);
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(100, sessionProperties0.getSQLEntryHistorySize());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
  }

  @Test
  public void test19()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      int int0 = sessionProperties0.getSQLExecutionTabPlacement();
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(1, int0);
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
  }

  @Test
  public void test20()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("dOgate", (PropertyChangeListener) null);
      sessionProperties0.addPropertyChangeListener((PropertyChangeListener) propertyChangeListenerProxy0);
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
  }

  @Test
  public void test21()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      int int0 = sessionProperties0.getSQLNbrRowsToShow();
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(100, int0);
      assertEquals(true, sessionProperties0.getContentsLimitRows());
  }

  @Test
  public void test22()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      boolean boolean0 = sessionProperties0.getShowSQLErrorsInTab();
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, boolean0);
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
  }

  @Test
  public void test23()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      boolean boolean0 = sessionProperties0.getShowResultsMetaData();
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, boolean0);
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
  }

  @Test
  public void test24()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setObjectFilterExclude((String) null);
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
  }

  @Test
  public void test25()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setLimitSQLEntryHistorySize(false);
      assertEquals(false, sessionProperties0.getLimitSQLEntryHistorySize());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
  }

  @Test
  public void test26()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      boolean boolean0 = sessionProperties0.getSQLLimitRows();
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, boolean0);
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
  }

  @Test
  public void test27()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      boolean boolean0 = sessionProperties0.getLoadSchemasCatalogs();
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, boolean0);
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
  }

  @Test
  public void test28()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      boolean boolean0 = sessionProperties0.getContentsLimitRows();
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, boolean0);
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
  }

  @Test
  public void test29()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      SpinnerNumberModel spinnerNumberModel0 = new SpinnerNumberModel();
      JSpinner jSpinner0 = new JSpinner((SpinnerModel) spinnerNumberModel0);
      JSpinner.DefaultEditor jSpinner_DefaultEditor0 = new JSpinner.DefaultEditor(jSpinner0);
      sessionProperties0.removePropertyChangeListener((PropertyChangeListener) jSpinner_DefaultEditor0);
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
  }

  @Test
  public void test30()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      String string0 = sessionProperties0.getTableContentsOutputClassName();
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertNotNull(string0);
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
  }

  @Test
  public void test31()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      int int0 = sessionProperties0.getMainTabPlacement();
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(1, int0);
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
  }

  @Test
  public void test32()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      boolean boolean0 = sessionProperties0.getRemoveMultiLineComment();
      assertEquals(true, boolean0);
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
  }

  @Test
  public void test33()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setSchemaFilterInclude("#_fBU;U");
      assertEquals("#_fBU;U", sessionProperties0.getSchemaFilterInclude());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
  }

  @Test
  public void test34()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      String string0 = sessionProperties0.getObjectFilterInclude();
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertNotNull(string0);
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
  }

  @Test
  public void test35()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      boolean boolean0 = sessionProperties0.getAbortOnError();
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, boolean0);
  }

  @Test
  public void test36()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      int int0 = sessionProperties0.getContentsNbrRowsToShow();
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(100, int0);
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
  }

  @Test
  public void test37()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setSQLShareHistory(false);
      assertEquals(false, sessionProperties0.getSQLShareHistory());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
  }

  @Test
  public void test38()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      String string0 = sessionProperties0.getSchemaFilterInclude();
      assertNotNull(string0);
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
  }

  @Test
  public void test39()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.getKeepTableLayoutOnRerun();
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
  }

  @Test
  public void test40()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      
      sessionProperties0.setCommitOnClosingConnection(true);
      assertEquals(true, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
  }

  @Test
  public void test41()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      int int0 = sessionProperties0.getSQLResultsTabPlacement();
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(1, int0);
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
  }

  @Test
  public void test42()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setCatalogFilterExclude("net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel");
      assertEquals("net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel", sessionProperties0.getCatalogFilterExclude());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
  }

  @Test
  public void test43()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setSchemaFilterExclude(";");
      assertEquals(";", sessionProperties0.getSchemaFilterExclude());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
  }

  @Test
  public void test44()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      int int0 = sessionProperties0.getSQLFetchSize();
      assertEquals(50, int0);
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
  }

  @Test
  public void test45()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setLoadSchemasCatalogs(true);
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
  }

  @Test
  public void test46()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.getSQLUseFetchSize();
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
  }

  @Test
  public void test47()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setShowResultsMetaData(true);
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
  }

  @Test
  public void test48()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      String string0 = sessionProperties0.getMetaDataOutputClassName();
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertNotNull(string0);
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
  }

  @Test
  public void test49()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.getWriteSQLErrorsToLog();
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
  }

  @Test
  public void test50()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      String string0 = sessionProperties0.getStartOfLineComment();
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertNotNull(string0);
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
  }

  @Test
  public void test51()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      boolean boolean0 = sessionProperties0.getLimitSQLResultTabs();
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, boolean0);
  }

  @Test
  public void test52()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      String string0 = sessionProperties0.getSQLResultsOutputClassName();
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertNotNull(string0);
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
  }

  @Test
  public void test53()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setRemoveMultiLineComment(false);
      assertEquals(false, sessionProperties0.getRemoveMultiLineComment());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
  }

  @Test
  public void test54()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.getShowRowCount();
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
  }

  @Test
  public void test55()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      String string0 = sessionProperties0.getCatalogFilterExclude();
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertNotNull(string0);
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
  }

  @Test
  public void test56()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setStartOfLineComment("#_fBU;U");
      assertEquals("#_fBU;U", sessionProperties0.getStartOfLineComment());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
  }

  @Test
  public void test57()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      boolean boolean0 = sessionProperties0.getSQLShareHistory();
      assertEquals(true, boolean0);
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
  }

  @Test
  public void test58()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setLimitSQLResultTabs(true);
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getLimitSQLResultTabs());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
  }

  @Test
  public void test59()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setObjectFilterInclude("/([+C.?*rl@|");
      assertEquals("/([+C.?*rl@|", sessionProperties0.getObjectFilterInclude());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
  }

  @Test
  public void test60()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      FontInfo fontInfo0 = sessionProperties0.getFontInfo();
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertNotNull(fontInfo0);
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
  }

  @Test
  public void test61()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      SessionProperties sessionProperties1 = (SessionProperties)sessionProperties0.clone();
      assertNotNull(sessionProperties1);
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertNotSame(sessionProperties0, sessionProperties1);
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
  }

  @Test
  public void test62()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      String string0 = sessionProperties0.getReadOnlySQLResultsOutputClassName();
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertNotNull(string0);
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
  }

  @Test
  public void test63()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setMetaDataOutputClassName("net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel");
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals("net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel", sessionProperties0.getMetaDataOutputClassName());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
  }

  @Test
  public void test64()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setMetaDataOutputClassName((String) null);
      assertEquals("", sessionProperties0.getMetaDataOutputClassName());
  }

  @Test
  public void test65()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setTableContentsOutputClassName("net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel");
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals("net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel", sessionProperties0.getTableContentsOutputClassName());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
  }

  @Test
  public void test66()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setTableContentsOutputClassName((String) null);
      assertEquals("", sessionProperties0.getTableContentsOutputClassName());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
  }

  @Test
  public void test67()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setSQLResultsOutputClassName("net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel");
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals("net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel", sessionProperties0.getSQLResultsOutputClassName());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
  }

  @Test
  public void test68()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setSQLResultsOutputClassName((String) null);
      assertEquals("", sessionProperties0.getReadOnlySQLResultsOutputClassName());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
  }

  @Test
  public void test69()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      assertEquals(true, sessionProperties0.getAutoCommit());
      
      sessionProperties0.setAutoCommit(true);
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
  }

  @Test
  public void test70()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setAutoCommit(false);
      assertEquals(false, sessionProperties0.getAutoCommit());
      
      sessionProperties0.setAutoCommit(true);
      assertEquals(true, sessionProperties0.getContentsLimitRows());
  }

  @Test
  public void test71()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setAbortOnError(true);
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getAutoCommit());
  }

  @Test
  public void test72()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setAbortOnError(false);
      assertEquals(false, sessionProperties0.getAbortOnError());
      
      sessionProperties0.setAbortOnError(true);
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
  }

  @Test
  public void test73()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setShowSQLErrorsInTab(true);
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
  }

  @Test
  public void test74()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setShowSQLErrorsInTab(false);
      assertEquals(false, sessionProperties0.getShowSQLErrorsInTab());
      
      sessionProperties0.setShowSQLErrorsInTab(true);
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
  }

  @Test
  public void test75()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setWriteSQLErrorsToLog(false);
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
  }

  @Test
  public void test76()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setWriteSQLErrorsToLog(true);
      assertEquals(true, sessionProperties0.getWriteSQLErrorsToLog());
      
      sessionProperties0.setWriteSQLErrorsToLog(false);
      assertEquals(true, sessionProperties0.getSQLLimitRows());
  }

  @Test
  public void test77()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setLoadColumnsInBackground(false);
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
  }

  @Test
  public void test78()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setLoadColumnsInBackground(true);
      assertEquals(true, sessionProperties0.getLoadColumnsInBackground());
      
      sessionProperties0.setLoadColumnsInBackground(false);
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
  }

  @Test
  public void test79()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setSqlResultTabLimit(15);
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(15, sessionProperties0.getSqlResultTabLimit());
  }

  @Test
  public void test80()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setSqlResultTabLimit(1);
      assertEquals(1, sessionProperties0.getSqlResultTabLimit());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
  }

  @Test
  public void test81()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setShowToolBar(true);
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
  }

  @Test
  public void test82()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setShowToolBar(false);
      assertEquals(false, sessionProperties0.getShowToolBar());
      
      sessionProperties0.setShowToolBar(true);
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
  }

  @Test
  public void test83()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setContentsNbrRowsToShow(100);
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
  }

  @Test
  public void test84()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setContentsNbrRowsToShow((-158));
      assertEquals(-158, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
  }

  @Test
  public void test85()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setSQLNbrRowsToShow(100);
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
  }

  @Test
  public void test86()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setSQLNbrRowsToShow(27);
      assertEquals(27, sessionProperties0.getSQLNbrRowsToShow());
  }

  @Test
  public void test87()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      
      sessionProperties0.setContentsLimitRows(true);
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
  }

  @Test
  public void test88()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      
      sessionProperties0.setContentsLimitRows(false);
      assertEquals(false, sessionProperties0.getContentsLimitRows());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
  }

  @Test
  public void test89()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      
      sessionProperties0.setSQLLimitRows(true);
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
  }

  @Test
  public void test90()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      
      sessionProperties0.setSQLLimitRows(false);
      assertEquals(false, sessionProperties0.getSQLLimitRows());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
  }

  @Test
  public void test91()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setSQLFetchSize(0);
      sessionProperties0.setSQLFetchSize(0);
      assertEquals(0, sessionProperties0.getSQLFetchSize());
  }

  @Test
  public void test92()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      // Undeclared exception!
      try {
        sessionProperties0.setSQLFetchSize((-1782));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * FetchSize must be >= 0. fetchSize=-1782
         */
      }
  }

  @Test
  public void test93()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setSQLUseFetchSize(false);
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
  }

  @Test
  public void test94()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setSQLUseFetchSize(true);
      assertEquals(true, sessionProperties0.getSQLUseFetchSize());
  }

  @Test
  public void test95()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setSQLStatementSeparator((String) null);
      assertEquals(";", sessionProperties0.getSQLStatementSeparator());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
  }

  @Test
  public void test96()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setSQLStatementSeparator("");
      assertEquals(";", sessionProperties0.getSQLStatementSeparator());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
  }

  @Test
  public void test97()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setSQLStatementSeparator("dOgate");
      assertEquals("dOgate", sessionProperties0.getSQLStatementSeparator());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
  }

  @Test
  public void test98()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      JRadioButton jRadioButton0 = new JRadioButton();
      FontUIResource fontUIResource0 = (FontUIResource)jRadioButton0.getFont();
      FontInfo fontInfo0 = new FontInfo((Font) fontUIResource0);
      sessionProperties0.setFontInfo(fontInfo0);
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
  }

  @Test
  public void test99()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setFontInfo((FontInfo) null);
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
  }

  @Test
  public void test100()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setSqlPanelOrientation(0);
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(0, sessionProperties0.getSqlPanelOrientation());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
  }

  @Test
  public void test101()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setSqlPanelOrientation(1);
      assertEquals(1, sessionProperties0.getSqlPanelOrientation());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
  }

  @Test
  public void test102()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setMainTabPlacement(1);
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(1, sessionProperties0.getMainTabPlacement());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
  }

  @Test
  public void test103()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setMainTabPlacement(27);
      assertEquals(27, sessionProperties0.getMainTabPlacement());
  }

  @Test
  public void test104()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setObjectTabPlacement(1);
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(1, sessionProperties0.getObjectTabPlacement());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
  }

  @Test
  public void test105()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setObjectTabPlacement(100);
      assertEquals(100, sessionProperties0.getObjectTabPlacement());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
  }

  @Test
  public void test106()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setSQLExecutionTabPlacement(1);
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(1, sessionProperties0.getSQLExecutionTabPlacement());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
  }

  @Test
  public void test107()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setSQLExecutionTabPlacement(598);
      assertEquals(598, sessionProperties0.getSQLExecutionTabPlacement());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
  }

  @Test
  public void test108()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setSQLResultsTabPlacement(1);
      assertEquals(true, sessionProperties0.getShowResultsMetaData());
      assertEquals(true, sessionProperties0.getContentsLimitRows());
      assertEquals(false, sessionProperties0.getCommitOnClosingConnection());
      assertEquals(100, sessionProperties0.getSQLNbrRowsToShow());
      assertEquals(true, sessionProperties0.getAutoCommit());
      assertEquals(true, sessionProperties0.getSQLLimitRows());
      assertEquals(true, sessionProperties0.getLoadSchemasCatalogs());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
      assertEquals(1, sessionProperties0.getSQLResultsTabPlacement());
  }

  @Test
  public void test109()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      sessionProperties0.setSQLResultsTabPlacement(100);
      assertEquals(100, sessionProperties0.getSQLResultsTabPlacement());
      assertEquals(100, sessionProperties0.getContentsNbrRowsToShow());
  }
}
