/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.gui.action.wikiTable;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import net.sourceforge.squirrel_sql.fw.gui.action.wikiTable.GenericWikiTableConfigurationBean;
import net.sourceforge.squirrel_sql.fw.gui.action.wikiTable.IWikiTableConfiguration;
import net.sourceforge.squirrel_sql.fw.gui.action.wikiTable.WikiTableConfigurationFactory;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class WikiTableConfigurationFactoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      WikiTableConfigurationFactory wikiTableConfigurationFactory0 = new WikiTableConfigurationFactory();
      LinkedList<IWikiTableConfiguration> linkedList0 = new LinkedList<IWikiTableConfiguration>();
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean0 = new GenericWikiTableConfigurationBean();
      genericWikiTableConfigurationBean0.setName("8{i&PWLr1Ejv\"l Q");
      linkedList0.add((IWikiTableConfiguration) genericWikiTableConfigurationBean0);
      wikiTableConfigurationFactory0.setUserSpecificConfigurations((List<IWikiTableConfiguration>) linkedList0);
      wikiTableConfigurationFactory0.setBuildInConfigurations((List<IWikiTableConfiguration>) linkedList0);
      List<IWikiTableConfiguration> list0 = wikiTableConfigurationFactory0.getConfigurations();
      assertNotNull(list0);
      assertEquals(2, list0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      WikiTableConfigurationFactory wikiTableConfigurationFactory0 = (WikiTableConfigurationFactory)WikiTableConfigurationFactory.getInstance();
      assertNotNull(wikiTableConfigurationFactory0);
  }

  @Test
  public void test2()  throws Throwable  {
      WikiTableConfigurationFactory wikiTableConfigurationFactory0 = new WikiTableConfigurationFactory();
      LinkedList<IWikiTableConfiguration> linkedList0 = new LinkedList<IWikiTableConfiguration>();
      wikiTableConfigurationFactory0.replaceBuilInConfiguration((List<IWikiTableConfiguration>) linkedList0);
      assertEquals(true, linkedList0.isEmpty());
  }

  @Test
  public void test3()  throws Throwable  {
      WikiTableConfigurationFactory wikiTableConfigurationFactory0 = new WikiTableConfigurationFactory();
      LinkedList<IWikiTableConfiguration> linkedList0 = new LinkedList<IWikiTableConfiguration>();
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean0 = new GenericWikiTableConfigurationBean();
      linkedList0.add((IWikiTableConfiguration) genericWikiTableConfigurationBean0);
      // Undeclared exception!
      try {
        wikiTableConfigurationFactory0.replaceBuilInConfiguration((List<IWikiTableConfiguration>) linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * A not read-only configuration cannot be a build-in configuration!
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      WikiTableConfigurationFactory wikiTableConfigurationFactory0 = new WikiTableConfigurationFactory();
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean0 = new GenericWikiTableConfigurationBean();
      // Undeclared exception!
      try {
        wikiTableConfigurationFactory0.addUserSpecificConfigurations((IWikiTableConfiguration) genericWikiTableConfigurationBean0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * The name is required!
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      WikiTableConfigurationFactory wikiTableConfigurationFactory0 = new WikiTableConfigurationFactory();
      LinkedList<IWikiTableConfiguration> linkedList0 = new LinkedList<IWikiTableConfiguration>();
      wikiTableConfigurationFactory0.setBuildInConfigurations((List<IWikiTableConfiguration>) linkedList0);
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean0 = new GenericWikiTableConfigurationBean();
      linkedList0.add((IWikiTableConfiguration) genericWikiTableConfigurationBean0);
      // Undeclared exception!
      try {
        wikiTableConfigurationFactory0.replaceUserSpecificConfigurations((List<IWikiTableConfiguration>) linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * The name of the configuration null is not unique!
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      WikiTableConfigurationFactory wikiTableConfigurationFactory0 = new WikiTableConfigurationFactory();
      LinkedList<IWikiTableConfiguration> linkedList0 = new LinkedList<IWikiTableConfiguration>();
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean0 = new GenericWikiTableConfigurationBean();
      linkedList0.add((IWikiTableConfiguration) genericWikiTableConfigurationBean0);
      wikiTableConfigurationFactory0.setUserSpecificConfigurations((List<IWikiTableConfiguration>) linkedList0);
      // Undeclared exception!
      try {
        wikiTableConfigurationFactory0.addUserSpecificConfigurations((IWikiTableConfiguration) genericWikiTableConfigurationBean0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * The name of the configuration null is not unique!
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      WikiTableConfigurationFactory wikiTableConfigurationFactory0 = new WikiTableConfigurationFactory();
      LinkedList<IWikiTableConfiguration> linkedList0 = new LinkedList<IWikiTableConfiguration>();
      wikiTableConfigurationFactory0.replaceUserSpecificConfigurations((List<IWikiTableConfiguration>) linkedList0);
      assertEquals("[]", linkedList0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      LinkedList<IWikiTableConfiguration> linkedList0 = new LinkedList<IWikiTableConfiguration>();
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean0 = new GenericWikiTableConfigurationBean();
      linkedList0.add((IWikiTableConfiguration) genericWikiTableConfigurationBean0);
      List<IWikiTableConfiguration> list0 = WikiTableConfigurationFactory.merge((List<IWikiTableConfiguration>) linkedList0, (List<IWikiTableConfiguration>) linkedList0);
      assertEquals("[<unnamed>]", linkedList0.toString());
      assertEquals(1, list0.size());
  }
}
