/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.util.log;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sourceforge.squirrel_sql.fw.util.log.ILoggerFactory;
import net.sourceforge.squirrel_sql.fw.util.log.ILoggerListener;
import net.sourceforge.squirrel_sql.fw.util.log.Log4jLogger;
import net.sourceforge.squirrel_sql.fw.util.log.Log4jLoggerFactory;
import net.sourceforge.squirrel_sql.fw.util.log.LoggerController;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LoggerControllerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LoggerController.shutdown();
  }

  @Test
  public void test1()  throws Throwable  {
      Class<?> class0 = LoggerController.class;
      Log4jLogger log4jLogger0 = (Log4jLogger)LoggerController.createLogger(class0);
      assertEquals(true, log4jLogger0.isDebugEnabled());
  }

  @Test
  public void test2()  throws Throwable  {
      LoggerController loggerController0 = new LoggerController();
      assertNotNull(loggerController0);
  }

  @Test
  public void test3()  throws Throwable  {
      LoggerController.registerLoggerFactory((ILoggerFactory) null);
  }

  @Test
  public void test4()  throws Throwable  {
      Log4jLoggerFactory log4jLoggerFactory0 = new Log4jLoggerFactory();
      LoggerController.registerLoggerFactory((ILoggerFactory) log4jLoggerFactory0);
  }

  @Test
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try {
        LoggerController.addLoggerListener((ILoggerListener) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try {
        LoggerController.removeLoggerListener((ILoggerListener) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
