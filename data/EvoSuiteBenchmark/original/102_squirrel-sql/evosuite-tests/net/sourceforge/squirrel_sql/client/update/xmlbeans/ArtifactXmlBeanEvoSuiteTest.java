/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.client.update.xmlbeans;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sourceforge.squirrel_sql.client.update.xmlbeans.ArtifactXmlBean;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ArtifactXmlBeanEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean("$'t}[oHC1~", "$'t}[oHC1~", "$'t}[oHC1~", (-1574L), (-1574L));
      artifactXmlBean0.setSize((-1L));
      assertEquals((-1L), artifactXmlBean0.getSize());
      assertEquals((-1574L), artifactXmlBean0.getChecksum());
  }

  @Test
  public void test1()  throws Throwable  {
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean();
      artifactXmlBean0.getSize();
      assertEquals(false, artifactXmlBean0.isInstalled());
  }

  @Test
  public void test2()  throws Throwable  {
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean("$'t}[oHC1~", "$'t}[oHC1~", "$'t}[oHC1~", (-1574L), (-1574L));
      long long0 = artifactXmlBean0.getChecksum();
      assertEquals((-1574L), long0);
      assertEquals((-1574L), artifactXmlBean0.getSize());
      assertEquals(false, artifactXmlBean0.isInstalled());
  }

  @Test
  public void test3()  throws Throwable  {
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean("$'t}[oHC1~", "$'t}[oHC1~", "$'t}[oHC1~", (-1574L), (-1574L));
      boolean boolean0 = artifactXmlBean0.isInstalled();
      assertEquals((-1574L), artifactXmlBean0.getSize());
      assertEquals(false, boolean0);
      assertEquals((-1574L), artifactXmlBean0.getChecksum());
  }

  @Test
  public void test4()  throws Throwable  {
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean();
      artifactXmlBean0.setChecksum(0L);
      assertEquals(false, artifactXmlBean0.isInstalled());
  }

  @Test
  public void test5()  throws Throwable  {
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean();
      artifactXmlBean0.setInstalled(false);
      assertEquals(false, artifactXmlBean0.isInstalled());
  }

  @Test
  public void test6()  throws Throwable  {
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean();
      String string0 = artifactXmlBean0.toString();
      assertEquals(false, artifactXmlBean0.isInstalled());
      assertNotNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean("$'t}[oHC1~", "$'t}[oHC1~", "$'t}[oHC1~", (-1574L), (-1574L));
      String string0 = artifactXmlBean0.getType();
      assertEquals((-1574L), artifactXmlBean0.getSize());
      assertEquals(false, artifactXmlBean0.isInstalled());
      assertEquals((-1574L), artifactXmlBean0.getChecksum());
      assertNotNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean("<S2", "<S2", "<S2", (-900L), (-900L));
      String string0 = artifactXmlBean0.getName();
      assertEquals(false, artifactXmlBean0.isInstalled());
      assertEquals((-900L), artifactXmlBean0.getChecksum());
      assertNotNull(string0);
      assertEquals((-900L), artifactXmlBean0.getSize());
  }

  @Test
  public void test9()  throws Throwable  {
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean("$'t}[oHC1~", "$'t}[oHC1~", "$'t}[oHC1~", (-1574L), (-1574L));
      String string0 = artifactXmlBean0.getVersion();
      assertEquals((-1574L), artifactXmlBean0.getChecksum());
      assertNotNull(string0);
      assertEquals((-1574L), artifactXmlBean0.getSize());
      assertEquals(false, artifactXmlBean0.isInstalled());
  }

  @Test
  public void test10()  throws Throwable  {
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean("<S2", "<S2", "<S2", (-900L), (-900L));
      int int0 = artifactXmlBean0.hashCode();
      assertEquals((-1637408918), int0);
      assertEquals(false, artifactXmlBean0.isInstalled());
  }

  @Test
  public void test11()  throws Throwable  {
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean("$'t}[oHC1~", "$'t}[oHC1~", "$'t}[oHC1~", (-1574L), (-1574L));
      boolean boolean0 = artifactXmlBean0.equals((Object) null);
      assertEquals((-1574L), artifactXmlBean0.getSize());
      assertEquals(false, boolean0);
      assertEquals((-1574L), artifactXmlBean0.getChecksum());
      assertEquals(false, artifactXmlBean0.isInstalled());
  }

  @Test
  public void test12()  throws Throwable  {
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean("$'t}[oHC1~", "$'t}[oHC1~", "$'t}[oHC1~", (-1574L), (-1574L));
      ArtifactXmlBean artifactXmlBean1 = new ArtifactXmlBean("$'t}[oHC1~", "$'t}[oHC1~", "$'t}[oHC1~", (-1574L), (-1574L));
      boolean boolean0 = artifactXmlBean0.equals((Object) artifactXmlBean1);
      assertEquals(true, boolean0);
      assertEquals(false, artifactXmlBean1.isInstalled());
      assertEquals((-1574L), artifactXmlBean1.getSize());
      assertEquals((-1574L), artifactXmlBean1.getChecksum());
  }

  @Test
  public void test13()  throws Throwable  {
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean();
      boolean boolean0 = artifactXmlBean0.equals((Object) "ArtifactXmlBean ( net.sourceforge.squirrel_sql.client.update.xmlbeans.ArtifactXmlBean@1b4d89f    name = null    type = null    version = null    size = 0    checksum = 0    installed = false     )");
      assertEquals(false, artifactXmlBean0.isInstalled());
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean();
      ArtifactXmlBean artifactXmlBean1 = new ArtifactXmlBean("Uyc'", "Uyc'", "Uyc'", 7L, 1932L);
      boolean boolean0 = artifactXmlBean0.equals((Object) artifactXmlBean1);
      assertEquals(false, artifactXmlBean1.isInstalled());
      assertEquals(false, artifactXmlBean0.isInstalled());
      assertEquals(7L, artifactXmlBean1.getSize());
      assertEquals(false, boolean0);
      assertEquals(1932L, artifactXmlBean1.getChecksum());
  }

  @Test
  public void test15()  throws Throwable  {
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean();
      ArtifactXmlBean artifactXmlBean1 = new ArtifactXmlBean();
      boolean boolean0 = artifactXmlBean1.equals((Object) artifactXmlBean0);
      assertEquals(false, artifactXmlBean0.isInstalled());
      assertEquals(true, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean();
      artifactXmlBean0.setName("dlwpEM-HQL>n.xGrlb");
      ArtifactXmlBean artifactXmlBean1 = new ArtifactXmlBean();
      boolean boolean0 = artifactXmlBean1.equals((Object) artifactXmlBean0);
      assertEquals(false, boolean0);
      assertFalse(artifactXmlBean0.equals(artifactXmlBean1));
      assertEquals(false, artifactXmlBean0.isInstalled());
  }

  @Test
  public void test17()  throws Throwable  {
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean();
      artifactXmlBean0.setName("dlwpEM-HQL>n.xGrlb");
      ArtifactXmlBean artifactXmlBean1 = new ArtifactXmlBean();
      boolean boolean0 = artifactXmlBean0.equals((Object) artifactXmlBean1);
      assertEquals(false, artifactXmlBean0.isInstalled());
      assertEquals(false, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean("<S2", "<S2", "<S2", (-900L), (-900L));
      ArtifactXmlBean artifactXmlBean1 = new ArtifactXmlBean("<S2", "<S2", "<S2", 1L, (-900L));
      boolean boolean0 = artifactXmlBean0.equals((Object) artifactXmlBean1);
      assertFalse(artifactXmlBean1.equals(artifactXmlBean0));
      assertEquals(false, artifactXmlBean0.isInstalled());
      assertEquals((-900L), artifactXmlBean1.getChecksum());
      assertEquals(false, boolean0);
      assertEquals((-900L), artifactXmlBean0.getSize());
  }

  @Test
  public void test19()  throws Throwable  {
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean();
      artifactXmlBean0.setName("dlwpEM-HQL>n.xGrlb");
      ArtifactXmlBean artifactXmlBean1 = new ArtifactXmlBean("dlwpEM-HQL>n.xGrlb", "dlwpEM-HQL>n.xGrlb", "dlwpEM-HQL>n.xGrlb", 0L, 0L);
      boolean boolean0 = artifactXmlBean0.equals((Object) artifactXmlBean1);
      assertEquals(false, artifactXmlBean1.isInstalled());
      assertEquals(false, boolean0);
      assertEquals(false, artifactXmlBean0.isInstalled());
  }

  @Test
  public void test20()  throws Throwable  {
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean();
      artifactXmlBean0.setType("NQ,|FbvFXsG@x9bVKo");
      ArtifactXmlBean artifactXmlBean1 = new ArtifactXmlBean();
      boolean boolean0 = artifactXmlBean0.equals((Object) artifactXmlBean1);
      assertEquals(false, boolean0);
      assertEquals(false, artifactXmlBean1.isInstalled());
  }

  @Test
  public void test21()  throws Throwable  {
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean();
      artifactXmlBean0.setVersion("Za1,B0;I]zHmaH?");
      ArtifactXmlBean artifactXmlBean1 = new ArtifactXmlBean();
      boolean boolean0 = artifactXmlBean1.equals((Object) artifactXmlBean0);
      assertEquals(false, artifactXmlBean0.isInstalled());
      assertEquals(false, boolean0);
  }

  @Test
  public void test22()  throws Throwable  {
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean();
      artifactXmlBean0.setVersion("NQ,|FbvFXsG@x9bVKo");
      ArtifactXmlBean artifactXmlBean1 = new ArtifactXmlBean();
      boolean boolean0 = artifactXmlBean0.equals((Object) artifactXmlBean1);
      assertEquals(false, boolean0);
      assertEquals(false, artifactXmlBean1.isInstalled());
  }
}
