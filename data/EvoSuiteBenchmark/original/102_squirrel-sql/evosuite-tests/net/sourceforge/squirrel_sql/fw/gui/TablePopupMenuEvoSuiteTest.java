/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.gui;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Component;
import java.awt.IllegalComponentStateException;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.sourceforge.squirrel_sql.client.session.DefaultDataModelImplementationDetails;
import net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel;
import net.sourceforge.squirrel_sql.fw.datasetviewer.IDataModelImplementationDetails;
import net.sourceforge.squirrel_sql.fw.datasetviewer.IDataSetUpdateableModel;
import net.sourceforge.squirrel_sql.fw.gui.TablePopupMenu;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TablePopupMenuEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      DataSetViewerTablePanel dataSetViewerTablePanel0 = new DataSetViewerTablePanel();
      JTable jTable0 = new JTable();
      DefaultDataModelImplementationDetails defaultDataModelImplementationDetails0 = new DefaultDataModelImplementationDetails();
      TablePopupMenu tablePopupMenu0 = new TablePopupMenu((IDataSetUpdateableModel) null, dataSetViewerTablePanel0, jTable0, (IDataModelImplementationDetails) defaultDataModelImplementationDetails0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent((Component) tablePopupMenu0, 39, (long) 39, 39, 39, 39, 39, 39, 39, true, 39, 39, 39);
      // Undeclared exception!
      try {
        tablePopupMenu0.show((MouseEvent) mouseWheelEvent0);
        fail("Expecting exception: IllegalComponentStateException");
      } catch(IllegalComponentStateException e) {
        /*
         * component must be showing on the screen to determine its location
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          DataSetViewerTablePanel dataSetViewerTablePanel0 = new DataSetViewerTablePanel();
          IDataModelImplementationDetails iDataModelImplementationDetails0 = dataSetViewerTablePanel0.getDataModelImplementationDetails();
          // Undeclared exception!
          try {
            dataSetViewerTablePanel0.init((IDataSetUpdateableModel) null, iDataModelImplementationDetails0);
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.lang.RuntimePermission preferences)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.util.prefs.Preferences.userRoot(Preferences.java:432)
             * net.sourceforge.squirrel_sql.fw.gui.ButtonTableHeader.isAlwaysAdjustAllColWidths(ButtonTableHeader.java:267)
             * net.sourceforge.squirrel_sql.fw.gui.TablePopupMenu.<init>(TablePopupMenu.java:159)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel$MyJTable.createGUI(DataSetViewerTablePanel.java:531)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel$MyJTable.<init>(DataSetViewerTablePanel.java:275)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel.init(DataSetViewerTablePanel.java:107)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel.init(DataSetViewerTablePanel.java:97)
             * sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             * sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultDataModelImplementationDetails defaultDataModelImplementationDetails0 = new DefaultDataModelImplementationDetails();
      DataSetViewerTablePanel dataSetViewerTablePanel0 = new DataSetViewerTablePanel();
      Object[] objectArray0 = new Object[1];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 0);
      JTable jTable0 = new JTable((TableModel) defaultTableModel0);
      TablePopupMenu tablePopupMenu0 = new TablePopupMenu((IDataSetUpdateableModel) null, dataSetViewerTablePanel0, jTable0, (IDataModelImplementationDetails) defaultDataModelImplementationDetails0);
      tablePopupMenu0.setTable(jTable0);
      assertEquals("javax.swing.JTable[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=251658728,maximumSize=,minimumSize=,preferredSize=,autoCreateColumnsFromModel=true,autoResizeMode=AUTO_RESIZE_SUBSEQUENT_COLUMNS,cellSelectionEnabled=false,editingColumn=-1,editingRow=-1,gridColor=javax.swing.plaf.ColorUIResource[r=122,g=138,b=153],preferredViewportSize=java.awt.Dimension[width=450,height=400],rowHeight=16,rowMargin=1,rowSelectionAllowed=true,selectionBackground=javax.swing.plaf.ColorUIResource[r=184,g=207,b=229],selectionForeground=sun.swing.PrintColorUIResource[r=51,g=51,b=51],showHorizontalLines=true,showVerticalLines=true]", jTable0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      DefaultDataModelImplementationDetails defaultDataModelImplementationDetails0 = new DefaultDataModelImplementationDetails();
      DataSetViewerTablePanel dataSetViewerTablePanel0 = new DataSetViewerTablePanel();
      Object[] objectArray0 = new Object[1];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 0);
      JTable jTable0 = new JTable((TableModel) defaultTableModel0);
      TablePopupMenu tablePopupMenu0 = new TablePopupMenu((IDataSetUpdateableModel) null, dataSetViewerTablePanel0, jTable0, (IDataModelImplementationDetails) defaultDataModelImplementationDetails0);
      // Undeclared exception!
      try {
        tablePopupMenu0.reset();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
