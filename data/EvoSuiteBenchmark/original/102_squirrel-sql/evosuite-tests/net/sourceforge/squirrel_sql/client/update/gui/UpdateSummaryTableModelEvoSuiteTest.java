/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.client.update.gui;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import net.sourceforge.squirrel_sql.client.update.gui.ArtifactStatus;
import net.sourceforge.squirrel_sql.client.update.gui.UpdateSummaryTableModel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UpdateSummaryTableModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UpdateSummaryTableModel updateSummaryTableModel0 = new UpdateSummaryTableModel((List<ArtifactStatus>) null);
      assertNotNull(updateSummaryTableModel0);
      
      // Undeclared exception!
      try {
        updateSummaryTableModel0.setValueAt((Object) "icon", (-1), (-1));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      UpdateSummaryTableModel updateSummaryTableModel0 = new UpdateSummaryTableModel((List<ArtifactStatus>) null);
      assertNotNull(updateSummaryTableModel0);
      
      int int0 = updateSummaryTableModel0.getColumnWidth(1);
      assertEquals(4, updateSummaryTableModel0.getColumnCount());
      assertEquals(100, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      LinkedList<ArtifactStatus> linkedList0 = new LinkedList<ArtifactStatus>();
      UpdateSummaryTableModel updateSummaryTableModel0 = new UpdateSummaryTableModel((List<ArtifactStatus>) linkedList0);
      assertNotNull(updateSummaryTableModel0);
      
      Class<?> class0 = updateSummaryTableModel0.getColumnClass(0);
      assertNotNull(class0);
      assertEquals(4, updateSummaryTableModel0.getColumnCount());
  }

  @Test
  public void test3()  throws Throwable  {
      UpdateSummaryTableModel updateSummaryTableModel0 = new UpdateSummaryTableModel((List<ArtifactStatus>) null);
      assertNotNull(updateSummaryTableModel0);
      
      updateSummaryTableModel0.findColumn("\"");
      assertEquals(4, updateSummaryTableModel0.getColumnCount());
  }

  @Test
  public void test4()  throws Throwable  {
      UpdateSummaryTableModel updateSummaryTableModel0 = new UpdateSummaryTableModel((List<ArtifactStatus>) null);
      assertNotNull(updateSummaryTableModel0);
      
      // Undeclared exception!
      try {
        updateSummaryTableModel0.getRowCount();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      LinkedList<ArtifactStatus> linkedList0 = new LinkedList<ArtifactStatus>();
      ArtifactStatus artifactStatus0 = new ArtifactStatus();
      linkedList0.add(artifactStatus0);
      UpdateSummaryTableModel updateSummaryTableModel0 = new UpdateSummaryTableModel((List<ArtifactStatus>) linkedList0);
      assertNotNull(updateSummaryTableModel0);
      
      updateSummaryTableModel0.getValueAt(0, 0);
      assertEquals(4, updateSummaryTableModel0.getColumnCount());
  }

  @Test
  public void test6()  throws Throwable  {
      LinkedList<ArtifactStatus> linkedList0 = new LinkedList<ArtifactStatus>();
      ArtifactStatus artifactStatus0 = new ArtifactStatus();
      linkedList0.add(artifactStatus0);
      UpdateSummaryTableModel updateSummaryTableModel0 = new UpdateSummaryTableModel((List<ArtifactStatus>) linkedList0);
      assertNotNull(updateSummaryTableModel0);
      
      String string0 = (String)updateSummaryTableModel0.getValueAt(0, 1);
      assertNull(string0);
      assertEquals(4, updateSummaryTableModel0.getColumnCount());
  }

  @Test
  public void test7()  throws Throwable  {
      UpdateSummaryTableModel updateSummaryTableModel0 = new UpdateSummaryTableModel((List<ArtifactStatus>) null);
      assertNotNull(updateSummaryTableModel0);
      
      boolean boolean0 = updateSummaryTableModel0.isCellEditable((-1), (-1));
      assertEquals(false, boolean0);
      assertEquals(4, updateSummaryTableModel0.getColumnCount());
  }

  @Test
  public void test8()  throws Throwable  {
      UpdateSummaryTableModel updateSummaryTableModel0 = new UpdateSummaryTableModel((List<ArtifactStatus>) null);
      assertNotNull(updateSummaryTableModel0);
      
      boolean boolean0 = updateSummaryTableModel0.isCellEditable(3, 3);
      assertEquals(true, boolean0);
      assertEquals(4, updateSummaryTableModel0.getColumnCount());
  }
}
