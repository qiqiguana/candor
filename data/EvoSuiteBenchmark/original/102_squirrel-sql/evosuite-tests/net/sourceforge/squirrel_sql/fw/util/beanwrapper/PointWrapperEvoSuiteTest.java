/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.util.beanwrapper;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Point;
import net.sourceforge.squirrel_sql.fw.util.beanwrapper.PointWrapper;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PointWrapperEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PointWrapper pointWrapper0 = new PointWrapper();
      assertNotNull(pointWrapper0);
      
      pointWrapper0.setY(80);
      assertEquals(80, pointWrapper0.getY());
  }

  @Test
  public void test1()  throws Throwable  {
      PointWrapper pointWrapper0 = new PointWrapper();
      assertNotNull(pointWrapper0);
      
      Point point0 = pointWrapper0.createPoint();
      PointWrapper pointWrapper1 = new PointWrapper(point0);
      assertEquals(0, pointWrapper1.getY());
      assertEquals(0, pointWrapper1.getX());
  }

  @Test
  public void test2()  throws Throwable  {
      PointWrapper pointWrapper0 = new PointWrapper();
      assertNotNull(pointWrapper0);
      
      pointWrapper0.setX(0);
      assertEquals(0, pointWrapper0.getX());
  }

  @Test
  public void test3()  throws Throwable  {
      PointWrapper pointWrapper0 = new PointWrapper();
      assertNotNull(pointWrapper0);
      
      int int0 = pointWrapper0.getY();
      assertEquals(0, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      PointWrapper pointWrapper0 = new PointWrapper();
      assertNotNull(pointWrapper0);
      
      int int0 = pointWrapper0.getX();
      assertEquals(0, int0);
  }
}
