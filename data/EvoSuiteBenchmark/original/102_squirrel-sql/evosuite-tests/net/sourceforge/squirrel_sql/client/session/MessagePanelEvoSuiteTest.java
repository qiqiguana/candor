/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.client.session;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import javax.swing.Action;
import javax.swing.text.StyledEditorKit;
import net.sourceforge.squirrel_sql.client.session.MessagePanel;
import net.sourceforge.squirrel_sql.fw.util.DefaultExceptionFormatter;
import net.sourceforge.squirrel_sql.fw.util.ExceptionFormatter;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MessagePanelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MessagePanel messagePanel0 = new MessagePanel();
      assertNotNull(messagePanel0);
      
      messagePanel0.showErrorMessage("");
      assertEquals(0, messagePanel0.getSelectionStart());
      assertEquals("", messagePanel0.getText());
  }

  @Test
  public void test1()  throws Throwable  {
      MessagePanel messagePanel0 = new MessagePanel();
      StyledEditorKit.FontSizeAction styledEditorKit_FontSizeAction0 = new StyledEditorKit.FontSizeAction((String) null, 19);
      messagePanel0.addToMessagePanelPopup((Action) styledEditorKit_FontSizeAction0);
      assertEquals(0, messagePanel0.getComponentCount());
  }

  @Test
  public void test2()  throws Throwable  {
      MessagePanel messagePanel0 = new MessagePanel();
      // Undeclared exception!
      try {
        messagePanel0.addToMessagePanelPopup((Action) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * action cannot be null
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      MessagePanel messagePanel0 = new MessagePanel();
      DefaultExceptionFormatter defaultExceptionFormatter0 = new DefaultExceptionFormatter();
      // Undeclared exception!
      try {
        messagePanel0.showMessage((Throwable) null, (ExceptionFormatter) defaultExceptionFormatter0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * th cannot be null
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      MessagePanel messagePanel0 = new MessagePanel();
      DefaultExceptionFormatter defaultExceptionFormatter0 = new DefaultExceptionFormatter();
      // Undeclared exception!
      try {
        messagePanel0.showErrorMessage((Throwable) null, (ExceptionFormatter) defaultExceptionFormatter0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * th cannot be null
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      MessagePanel messagePanel0 = new MessagePanel();
      assertNotNull(messagePanel0);
      
      messagePanel0.showMessage("C1:o?6YxMqQ`a'qcz1+@");
      assertEquals(20, messagePanel0.getSelectionStart());
      assertEquals(20, messagePanel0.getCaretPosition());
  }

  @Test
  public void test6()  throws Throwable  {
      MessagePanel messagePanel0 = new MessagePanel();
      // Undeclared exception!
      try {
        messagePanel0.showMessage((String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * msg cannot be null
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      MessagePanel messagePanel0 = new MessagePanel();
      assertNotNull(messagePanel0);
      
      messagePanel0.showWarningMessage("");
      assertEquals("", messagePanel0.getText());
      assertEquals(0, messagePanel0.getSelectionEnd());
  }

  @Test
  public void test8()  throws Throwable  {
      MessagePanel messagePanel0 = new MessagePanel();
      // Undeclared exception!
      try {
        messagePanel0.showWarningMessage((String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * msg cannot be null
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      MessagePanel messagePanel0 = new MessagePanel();
      // Undeclared exception!
      try {
        messagePanel0.showErrorMessage((String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * msg cannot be null
         */
      }
  }
}
