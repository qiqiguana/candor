/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.sql;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sourceforge.squirrel_sql.fw.sql.TableQualifier;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TableQualifierEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TableQualifier tableQualifier0 = new TableQualifier("jt^zW&3/]F.(.1*n");
      assertNotNull(tableQualifier0);
      
      String string0 = tableQualifier0.getCatalog();
      assertNotNull(string0);
      assertEquals("1*n", tableQualifier0.getTableName());
      assertEquals("jt^zW&3/]F", string0);
      assertEquals("(", tableQualifier0.getSchema());
  }

  @Test
  public void test1()  throws Throwable  {
      TableQualifier tableQualifier0 = new TableQualifier("jt^zW&3/]F.(.1*n");
      assertNotNull(tableQualifier0);
      
      String string0 = tableQualifier0.getSchema();
      assertNotNull(string0);
      assertEquals("1*n", tableQualifier0.getTableName());
      assertEquals("(", string0);
      assertEquals("jt^zW&3/]F", tableQualifier0.getCatalog());
  }

  @Test
  public void test2()  throws Throwable  {
      TableQualifier tableQualifier0 = new TableQualifier("''dvYOE.dd7 l");
      assertEquals("''dvYOE", tableQualifier0.getSchema());
      assertEquals("dd7 l", tableQualifier0.getTableName());
      assertNotNull(tableQualifier0);
  }
}
