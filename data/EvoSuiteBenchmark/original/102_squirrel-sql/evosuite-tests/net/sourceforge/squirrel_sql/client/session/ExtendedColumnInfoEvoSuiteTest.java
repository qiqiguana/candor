/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.client.session;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sourceforge.squirrel_sql.client.session.ExtendedColumnInfo;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ExtendedColumnInfoEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("7H|XQG0", "7H|XQG0", "7H|XQG0", "7H|XQG0", 11, "7H|XQG0", 11, 11, 11, 11, "7H|XQG0", "7H|XQG0", 11, 11, "7H|XQG0");
      ExtendedColumnInfo extendedColumnInfo0 = new ExtendedColumnInfo(tableColumnInfo0, "7H|XQG0");
      assertNotNull(extendedColumnInfo0);
      
      String string0 = extendedColumnInfo0.getSchema();
      assertEquals(false, extendedColumnInfo0.isNullable());
      assertNotNull(string0);
      assertEquals(11, extendedColumnInfo0.getDecimalDigits());
      assertEquals(11, extendedColumnInfo0.getColumnSize());
      assertEquals(11, extendedColumnInfo0.getColumnTypeID());
  }

  @Test
  public void test1()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("7H|XQG0", "7H|XQG0", "7H|XQG0", "7H|XQG0", 11, "7H|XQG0", 11, 11, 11, 11, "7H|XQG0", "7H|XQG0", 11, 11, "7H|XQG0");
      ExtendedColumnInfo extendedColumnInfo0 = new ExtendedColumnInfo(tableColumnInfo0, "7H|XQG0");
      assertNotNull(extendedColumnInfo0);
      
      String string0 = extendedColumnInfo0.getRemarks();
      assertEquals(11, extendedColumnInfo0.getColumnTypeID());
      assertNotNull(string0);
      assertEquals(11, extendedColumnInfo0.getDecimalDigits());
      assertEquals(11, extendedColumnInfo0.getColumnSize());
      assertEquals(false, extendedColumnInfo0.isNullable());
  }

  @Test
  public void test2()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "", "", 473, "", 473, 473, 473, 473, "", "", 473, 473, "");
      ExtendedColumnInfo extendedColumnInfo0 = new ExtendedColumnInfo(tableColumnInfo0, "");
      assertNotNull(extendedColumnInfo0);
      
      String string0 = extendedColumnInfo0.getSimpleTableName();
      assertNotNull(string0);
      assertEquals(473, extendedColumnInfo0.getColumnTypeID());
      assertEquals(false, extendedColumnInfo0.isNullable());
      assertEquals(473, extendedColumnInfo0.getDecimalDigits());
      assertEquals(473, extendedColumnInfo0.getColumnSize());
  }

  @Test
  public void test3()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("7H|XQG0", "7H|XQG0", "7H|XQG0", "7H|XQG0", 11, "7H|XQG0", 11, 11, 11, 11, "7H|XQG0", "7H|XQG0", 11, 11, "7H|XQG0");
      ExtendedColumnInfo extendedColumnInfo0 = new ExtendedColumnInfo(tableColumnInfo0, "7H|XQG0");
      assertNotNull(extendedColumnInfo0);
      
      boolean boolean0 = extendedColumnInfo0.isNullable();
      assertEquals(false, boolean0);
      assertEquals(11, extendedColumnInfo0.getColumnSize());
      assertEquals(11, extendedColumnInfo0.getDecimalDigits());
      assertEquals(11, extendedColumnInfo0.getColumnTypeID());
  }

  @Test
  public void test4()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("i`*YIF&i#?pP?X:.e']^", "i`*YIF&i#?pP?X:.e']^", "i`*YIF&i#?pP?X:.e']^", "i`*YIF&i#?pP?X:.e']^", (-1), "i`*YIF&i#?pP?X:.e']^", (-1), (-1), (-1), (-1), "i`*YIF&i#?pP?X:.e']^", "i`*YIF&i#?pP?X:.e']^", (-1), (-1), "i`*YIF&i#?pP?X:.e']^");
      ExtendedColumnInfo extendedColumnInfo0 = new ExtendedColumnInfo(tableColumnInfo0, "i`*YIF&i#?pP?X:.e']^");
      assertNotNull(extendedColumnInfo0);
      
      int int0 = extendedColumnInfo0.getColumnSize();
      assertEquals((-1), int0);
      assertEquals(-1, extendedColumnInfo0.getDecimalDigits());
      assertEquals(false, extendedColumnInfo0.isNullable());
      assertEquals(true, extendedColumnInfo0.isCharacterType());
  }

  @Test
  public void test5()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "", "", 473, "", 473, 473, 473, 473, "", "", 473, 473, "");
      ExtendedColumnInfo extendedColumnInfo0 = new ExtendedColumnInfo(tableColumnInfo0, "");
      assertNotNull(extendedColumnInfo0);
      
      String string0 = extendedColumnInfo0.getColumnType();
      assertEquals(false, extendedColumnInfo0.isNullable());
      assertEquals(473, extendedColumnInfo0.getDecimalDigits());
      assertEquals(473, extendedColumnInfo0.getColumnTypeID());
      assertEquals(473, extendedColumnInfo0.getColumnSize());
      assertNotNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("i`*YIF&i#?pP?X:.e']^", "i`*YIF&i#?pP?X:.e']^", "i`*YIF&i#?pP?X:.e']^", "i`*YIF&i#?pP?X:.e']^", (-1), "i`*YIF&i#?pP?X:.e']^", (-1), (-1), (-1), (-1), "i`*YIF&i#?pP?X:.e']^", "i`*YIF&i#?pP?X:.e']^", (-1), (-1), "i`*YIF&i#?pP?X:.e']^");
      ExtendedColumnInfo extendedColumnInfo0 = new ExtendedColumnInfo(tableColumnInfo0, "i`*YIF&i#?pP?X:.e']^");
      assertNotNull(extendedColumnInfo0);
      
      String string0 = extendedColumnInfo0.getColumnName();
      assertEquals(false, extendedColumnInfo0.isNullable());
      assertEquals(true, extendedColumnInfo0.isCharacterType());
      assertNotNull(string0);
      assertEquals(-1, extendedColumnInfo0.getColumnSize());
      assertEquals(-1, extendedColumnInfo0.getDecimalDigits());
      assertEquals(-1, extendedColumnInfo0.getColumnTypeID());
  }

  @Test
  public void test7()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "", "", 473, "", 473, 473, 473, 473, "", "", 473, 473, "");
      ExtendedColumnInfo extendedColumnInfo0 = new ExtendedColumnInfo(tableColumnInfo0, "");
      assertNotNull(extendedColumnInfo0);
      
      int int0 = extendedColumnInfo0.getDecimalDigits();
      assertEquals(473, extendedColumnInfo0.getColumnTypeID());
      assertEquals(false, extendedColumnInfo0.isNullable());
      assertEquals(473, int0);
      assertEquals(473, extendedColumnInfo0.getColumnSize());
  }

  @Test
  public void test8()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "", "", 473, "", 473, 473, 473, 473, "", "", 473, 473, "");
      ExtendedColumnInfo extendedColumnInfo0 = new ExtendedColumnInfo(tableColumnInfo0, "");
      assertNotNull(extendedColumnInfo0);
      
      int int0 = extendedColumnInfo0.getColumnTypeID();
      assertEquals(473, extendedColumnInfo0.getColumnSize());
      assertEquals(false, extendedColumnInfo0.isNullable());
      assertEquals(473, int0);
      assertEquals(473, extendedColumnInfo0.getDecimalDigits());
  }

  @Test
  public void test9()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("~9Gki", "~9Gki", "~9Gki", "~9Gki", 1212, "YES", 1212, 1212, 1212, 1212, "~9Gki", "~9Gki", 1212, 1212, "YES");
      ExtendedColumnInfo extendedColumnInfo0 = new ExtendedColumnInfo(tableColumnInfo0, "YES");
      assertNotNull(extendedColumnInfo0);
      
      String string0 = extendedColumnInfo0.getCatalog();
      assertEquals(1212, extendedColumnInfo0.getColumnTypeID());
      assertEquals(1212, extendedColumnInfo0.getColumnSize());
      assertEquals(1212, extendedColumnInfo0.getDecimalDigits());
      assertEquals(true, extendedColumnInfo0.isNullable());
      assertNotNull(string0);
  }

  @Test
  public void test10()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("7H|XQG0", "7H|XQG0", "7H|XQG0", "7H|XQG0", 11, "7H|XQG0", 11, 11, 11, 11, "7H|XQG0", "7H|XQG0", 11, 11, "7H|XQG0");
      ExtendedColumnInfo extendedColumnInfo0 = new ExtendedColumnInfo(tableColumnInfo0, "7H|XQG0");
      assertNotNull(extendedColumnInfo0);
      
      boolean boolean0 = extendedColumnInfo0.isCharacterType();
      assertEquals(11, extendedColumnInfo0.getDecimalDigits());
      assertEquals(11, extendedColumnInfo0.getColumnSize());
      assertEquals(11, extendedColumnInfo0.getColumnTypeID());
      assertEquals(false, extendedColumnInfo0.isNullable());
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("i`*YIF&i#?pP?X:.e']^", "i`*YIF&i#?pP?X:.e']^", "i`*YIF&i#?pP?X:.e']^", "i`*YIF&i#?pP?X:.e']^", (-1), "i`*YIF&i#?pP?X:.e']^", (-1), (-1), (-1), (-1), "i`*YIF&i#?pP?X:.e']^", "i`*YIF&i#?pP?X:.e']^", (-1), (-1), "i`*YIF&i#?pP?X:.e']^");
      ExtendedColumnInfo extendedColumnInfo0 = new ExtendedColumnInfo(tableColumnInfo0, "i`*YIF&i#?pP?X:.e']^");
      assertNotNull(extendedColumnInfo0);
      
      boolean boolean0 = extendedColumnInfo0.isCharacterType();
      assertEquals(true, boolean0);
      assertEquals(-1, extendedColumnInfo0.getColumnSize());
      assertEquals(false, extendedColumnInfo0.isNullable());
      assertEquals(-1, extendedColumnInfo0.getDecimalDigits());
  }

  @Test
  public void test12()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, (String) null, 1, (String) null, 1, 1, 1, 1, (String) null, (String) null, 1, 1, (String) null);
      ExtendedColumnInfo extendedColumnInfo0 = new ExtendedColumnInfo(tableColumnInfo0, (String) null);
      assertNotNull(extendedColumnInfo0);
      
      boolean boolean0 = extendedColumnInfo0.isCharacterType();
      assertEquals(false, extendedColumnInfo0.isNullable());
      assertEquals(1, extendedColumnInfo0.getColumnSize());
      assertEquals(true, boolean0);
      assertEquals(1, extendedColumnInfo0.getDecimalDigits());
  }

  @Test
  public void test13()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, (String) null, (-9), (String) null, (-9), (-9), (-9), (-9), (String) null, (String) null, (-9), (-9), (String) null);
      ExtendedColumnInfo extendedColumnInfo0 = new ExtendedColumnInfo(tableColumnInfo0, (String) null);
      assertNotNull(extendedColumnInfo0);
      
      boolean boolean0 = extendedColumnInfo0.isCharacterType();
      assertEquals(true, boolean0);
      assertEquals(false, extendedColumnInfo0.isNullable());
      assertEquals(-9, extendedColumnInfo0.getColumnSize());
      assertEquals(-9, extendedColumnInfo0.getDecimalDigits());
  }

  @Test
  public void test14()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "", "", 473, "", 473, 473, 473, 473, "", "", 473, 473, "");
      ExtendedColumnInfo extendedColumnInfo0 = new ExtendedColumnInfo(tableColumnInfo0, "");
      assertNotNull(extendedColumnInfo0);
      
      int int0 = extendedColumnInfo0.hashCode();
      assertEquals(473, extendedColumnInfo0.getColumnSize());
      assertEquals(45709, int0);
      assertEquals(473, extendedColumnInfo0.getDecimalDigits());
      assertEquals(false, extendedColumnInfo0.isNullable());
      assertEquals(473, extendedColumnInfo0.getColumnTypeID());
  }

  @Test
  public void test15()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "", "", 473, "", 473, 473, 473, 473, "", "", 473, 473, "");
      ExtendedColumnInfo extendedColumnInfo0 = new ExtendedColumnInfo(tableColumnInfo0, "");
      assertNotNull(extendedColumnInfo0);
      
      boolean boolean0 = extendedColumnInfo0.equals((Object) null);
      assertEquals(473, extendedColumnInfo0.getDecimalDigits());
      assertEquals(473, extendedColumnInfo0.getColumnTypeID());
      assertEquals(false, extendedColumnInfo0.isNullable());
      assertEquals(473, extendedColumnInfo0.getColumnSize());
      assertEquals(false, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("7H|XQG0", "7H|XQG0", "7H|XQG0", "7H|XQG0", 11, "7H|XQG0", 11, 11, 11, 11, "7H|XQG0", "7H|XQG0", 11, 11, "7H|XQG0");
      ExtendedColumnInfo extendedColumnInfo0 = new ExtendedColumnInfo(tableColumnInfo0, "7H|XQG0");
      assertNotNull(extendedColumnInfo0);
      
      boolean boolean0 = extendedColumnInfo0.equals((Object) extendedColumnInfo0);
      assertEquals(false, extendedColumnInfo0.isNullable());
      assertEquals(11, extendedColumnInfo0.getColumnSize());
      assertEquals(11, extendedColumnInfo0.getColumnTypeID());
      assertEquals(11, extendedColumnInfo0.getDecimalDigits());
      assertEquals(true, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("~9Gki", "~9Gki", "~9Gki", "~9Gki", 1212, "YES", 1212, 1212, 1212, 1212, "~9Gki", "~9Gki", 1212, 1212, "YES");
      ExtendedColumnInfo extendedColumnInfo0 = new ExtendedColumnInfo(tableColumnInfo0, "YES");
      assertNotNull(extendedColumnInfo0);
      
      boolean boolean0 = extendedColumnInfo0.equals((Object) "~9Gki");
      assertEquals(1212, extendedColumnInfo0.getDecimalDigits());
      assertEquals(1212, extendedColumnInfo0.getColumnTypeID());
      assertEquals(1212, extendedColumnInfo0.getColumnSize());
      assertEquals(false, boolean0);
      assertEquals(true, extendedColumnInfo0.isNullable());
  }
}
