/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.datasetviewer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.HashMap;
import java.util.Map;
import net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetDefinition;
import net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetException;
import net.sourceforge.squirrel_sql.fw.datasetviewer.MapDataSet;
import net.sourceforge.squirrel_sql.fw.util.IMessageHandler;
import net.sourceforge.squirrel_sql.fw.util.NullMessageHandler;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MapDataSetEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HashMap<MapDataSet, Object> hashMap0 = new HashMap<MapDataSet, Object>();
      MapDataSet mapDataSet0 = new MapDataSet((Map<?, ?>) hashMap0);
      assertNotNull(mapDataSet0);
      
      mapDataSet0.get(0);
      assertEquals(2, mapDataSet0.getColumnCount());
  }

  @Test
  public void test1()  throws Throwable  {
      HashMap<MapDataSet, Object> hashMap0 = new HashMap<MapDataSet, Object>();
      MapDataSet mapDataSet0 = new MapDataSet((Map<?, ?>) hashMap0);
      assertNotNull(mapDataSet0);
      
      DataSetDefinition dataSetDefinition0 = mapDataSet0.getDataSetDefinition();
      assertNotNull(dataSetDefinition0);
      assertEquals(2, mapDataSet0.getColumnCount());
  }

  @Test
  public void test2()  throws Throwable  {
      MapDataSet mapDataSet0 = null;
      try {
        mapDataSet0 = new MapDataSet((Map<?, ?>) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Map == null
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      HashMap<MapDataSet, MapDataSet> hashMap0 = new HashMap<MapDataSet, MapDataSet>();
      MapDataSet mapDataSet0 = new MapDataSet((Map<?, ?>) hashMap0);
      assertNotNull(mapDataSet0);
      
      NullMessageHandler nullMessageHandler0 = NullMessageHandler.getInstance();
      boolean boolean0 = mapDataSet0.next((IMessageHandler) nullMessageHandler0);
      assertEquals(2, mapDataSet0.getColumnCount());
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      HashMap<MapDataSet, String> hashMap0 = new HashMap<MapDataSet, String>();
      MapDataSet mapDataSet0 = new MapDataSet((Map<?, ?>) hashMap0);
      assertNotNull(mapDataSet0);
      
      hashMap0.put(mapDataSet0, "");
      MapDataSet mapDataSet1 = new MapDataSet((Map<?, ?>) hashMap0);
      NullMessageHandler nullMessageHandler0 = NullMessageHandler.getInstance();
      boolean boolean0 = mapDataSet1.next((IMessageHandler) nullMessageHandler0);
      assertEquals(true, boolean0);
      assertEquals(2, mapDataSet1.getColumnCount());
  }
}
