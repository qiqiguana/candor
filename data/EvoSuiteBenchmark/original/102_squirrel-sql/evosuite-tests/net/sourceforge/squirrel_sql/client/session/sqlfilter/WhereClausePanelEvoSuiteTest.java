/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.client.session.sqlfilter;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Component;
import java.util.HashMap;
import java.util.Map;
import java.util.SortedSet;
import java.util.TreeSet;
import net.sourceforge.squirrel_sql.client.session.sqlfilter.SQLFilterClauses;
import net.sourceforge.squirrel_sql.client.session.sqlfilter.WhereClausePanel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class WhereClausePanelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      HashMap<String, Boolean> hashMap0 = new HashMap<String, Boolean>();
      WhereClausePanel whereClausePanel0 = new WhereClausePanel((SortedSet<String>) treeSet0, (Map<String, Boolean>) hashMap0, "");
      String string0 = whereClausePanel0.getHint();
      assertEquals("Where clause for the selected table", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      HashMap<String, Boolean> hashMap0 = new HashMap<String, Boolean>();
      WhereClausePanel whereClausePanel0 = new WhereClausePanel((SortedSet<String>) treeSet0, (Map<String, Boolean>) hashMap0, "");
      SQLFilterClauses sQLFilterClauses0 = new SQLFilterClauses();
      whereClausePanel0.initialize(sQLFilterClauses0);
      assertEquals("Where Clause", whereClausePanel0.getClauseIdentifier());
  }

  @Test
  public void test2()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      HashMap<String, Boolean> hashMap0 = new HashMap<String, Boolean>();
      WhereClausePanel whereClausePanel0 = new WhereClausePanel((SortedSet<String>) treeSet0, (Map<String, Boolean>) hashMap0, "");
      whereClausePanel0.applyChanges();
      assertEquals("Where Clause", whereClausePanel0.getClauseIdentifier());
  }

  @Test
  public void test3()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      HashMap<String, Boolean> hashMap0 = new HashMap<String, Boolean>();
      WhereClausePanel whereClausePanel0 = new WhereClausePanel((SortedSet<String>) treeSet0, (Map<String, Boolean>) hashMap0, "");
      Component component0 = whereClausePanel0.getPanelComponent();
      assertEquals(0, component0.getX());
  }

  @Test
  public void test4()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      HashMap<String, Boolean> hashMap0 = new HashMap<String, Boolean>();
      WhereClausePanel whereClausePanel0 = new WhereClausePanel((SortedSet<String>) treeSet0, (Map<String, Boolean>) hashMap0, "");
      whereClausePanel0.clearFilter();
      assertEquals("Where Clause", whereClausePanel0.getClauseIdentifier());
  }

  @Test
  public void test5()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      HashMap<String, Boolean> hashMap0 = new HashMap<String, Boolean>();
      WhereClausePanel whereClausePanel0 = new WhereClausePanel((SortedSet<String>) treeSet0, (Map<String, Boolean>) hashMap0, "");
      String string0 = whereClausePanel0.getTitle();
      assertEquals("Where Clause", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      HashMap<String, Boolean> hashMap0 = new HashMap<String, Boolean>();
      WhereClausePanel whereClausePanel0 = new WhereClausePanel((SortedSet<String>) treeSet0, (Map<String, Boolean>) hashMap0, "");
      try {
        whereClausePanel0.initialize((SQLFilterClauses) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Null sqlFilterClauses passed
         */
      }
  }
}
