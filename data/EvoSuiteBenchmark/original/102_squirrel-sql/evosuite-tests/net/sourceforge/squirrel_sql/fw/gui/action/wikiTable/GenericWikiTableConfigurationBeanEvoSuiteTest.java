/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.gui.action.wikiTable;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sourceforge.squirrel_sql.fw.gui.action.wikiTable.GenericWikiTableConfigurationBean;
import net.sourceforge.squirrel_sql.fw.gui.action.wikiTable.IWikiTableConfiguration;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class GenericWikiTableConfigurationBeanEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean0 = new GenericWikiTableConfigurationBean();
      assertNotNull(genericWikiTableConfigurationBean0);
      
      genericWikiTableConfigurationBean0.setName("hd%<U");
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean1 = new GenericWikiTableConfigurationBean((IWikiTableConfiguration) genericWikiTableConfigurationBean0);
      boolean boolean0 = genericWikiTableConfigurationBean0.equals((Object) genericWikiTableConfigurationBean1);
      assertEquals("hd%<U", genericWikiTableConfigurationBean0.toString());
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean0 = new GenericWikiTableConfigurationBean();
      assertNotNull(genericWikiTableConfigurationBean0);
      
      genericWikiTableConfigurationBean0.createTransformer();
      assertEquals(true, genericWikiTableConfigurationBean0.isEnabled());
      assertEquals("%V", genericWikiTableConfigurationBean0.getHeaderCell());
      assertEquals("%V", genericWikiTableConfigurationBean0.getNoWikiTag());
      assertEquals("%V", genericWikiTableConfigurationBean0.getDataCell());
  }

  @Test
  public void test2()  throws Throwable  {
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean0 = null;
      try {
        genericWikiTableConfigurationBean0 = new GenericWikiTableConfigurationBean("<unnamed>", "<unnamed>", "<unnamed>", "<unnamed>", "<unnamed>", "<unnamed>", "<unnamed>", "<unnamed>", "<unnamed>", "<unnamed>");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * The tag for a header cell must contain a value variable
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean0 = new GenericWikiTableConfigurationBean();
      assertNotNull(genericWikiTableConfigurationBean0);
      
      // Undeclared exception!
      try {
        genericWikiTableConfigurationBean0.copyAsUserSpecific();
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * The name is required!
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean0 = new GenericWikiTableConfigurationBean();
      assertNotNull(genericWikiTableConfigurationBean0);
      
      // Undeclared exception!
      try {
        genericWikiTableConfigurationBean0.clone();
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * The name is required!
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean0 = new GenericWikiTableConfigurationBean();
      assertNotNull(genericWikiTableConfigurationBean0);
      
      // Undeclared exception!
      try {
        genericWikiTableConfigurationBean0.setDataCell("OZu");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * The tag for a data cell must contain a value variable
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean0 = new GenericWikiTableConfigurationBean();
      assertNotNull(genericWikiTableConfigurationBean0);
      
      // Undeclared exception!
      try {
        genericWikiTableConfigurationBean0.setNoWikiTag("hd%<U");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * The noWiki tag must contain a value variable
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean0 = new GenericWikiTableConfigurationBean();
      assertNotNull(genericWikiTableConfigurationBean0);
      
      genericWikiTableConfigurationBean0.setName("hd%<U");
      String string0 = genericWikiTableConfigurationBean0.toString();
      assertEquals("hd%<U", genericWikiTableConfigurationBean0.toString());
      assertEquals("hd%<U", string0);
  }

  @Test
  public void test8()  throws Throwable  {
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean0 = new GenericWikiTableConfigurationBean();
      assertNotNull(genericWikiTableConfigurationBean0);
      
      String string0 = genericWikiTableConfigurationBean0.toString();
      assertNotNull(string0);
      assertEquals("%V", genericWikiTableConfigurationBean0.getDataCell());
      assertEquals("<unnamed>", string0);
      assertEquals("%V", genericWikiTableConfigurationBean0.getHeaderCell());
      assertEquals("%V", genericWikiTableConfigurationBean0.getNoWikiTag());
      assertEquals(true, genericWikiTableConfigurationBean0.isEnabled());
  }

  @Test
  public void test9()  throws Throwable  {
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean0 = new GenericWikiTableConfigurationBean();
      assertNotNull(genericWikiTableConfigurationBean0);
      
      genericWikiTableConfigurationBean0.setName("zeh3)*w bu?{wY$T1");
      int int0 = genericWikiTableConfigurationBean0.hashCode();
      assertEquals("zeh3)*w bu?{wY$T1", genericWikiTableConfigurationBean0.toString());
      assertEquals((-1655363682), int0);
  }

  @Test
  public void test10()  throws Throwable  {
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean0 = new GenericWikiTableConfigurationBean();
      assertNotNull(genericWikiTableConfigurationBean0);
      
      int int0 = genericWikiTableConfigurationBean0.hashCode();
      assertEquals("%V", genericWikiTableConfigurationBean0.getNoWikiTag());
      assertEquals(true, genericWikiTableConfigurationBean0.isEnabled());
      assertEquals(31, int0);
      assertEquals("%V", genericWikiTableConfigurationBean0.getDataCell());
      assertEquals("%V", genericWikiTableConfigurationBean0.getHeaderCell());
  }

  @Test
  public void test11()  throws Throwable  {
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean0 = new GenericWikiTableConfigurationBean();
      assertNotNull(genericWikiTableConfigurationBean0);
      
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean1 = new GenericWikiTableConfigurationBean();
      genericWikiTableConfigurationBean1.setName("OZu");
      boolean boolean0 = genericWikiTableConfigurationBean0.equals((Object) genericWikiTableConfigurationBean1);
      assertEquals("OZu", genericWikiTableConfigurationBean1.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean0 = new GenericWikiTableConfigurationBean();
      assertNotNull(genericWikiTableConfigurationBean0);
      
      boolean boolean0 = genericWikiTableConfigurationBean0.equals((Object) null);
      assertEquals(false, boolean0);
      assertEquals("%V", genericWikiTableConfigurationBean0.getNoWikiTag());
      assertEquals("%V", genericWikiTableConfigurationBean0.getHeaderCell());
      assertEquals("%V", genericWikiTableConfigurationBean0.getDataCell());
      assertEquals(true, genericWikiTableConfigurationBean0.isEnabled());
  }

  @Test
  public void test13()  throws Throwable  {
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean0 = new GenericWikiTableConfigurationBean();
      assertNotNull(genericWikiTableConfigurationBean0);
      
      boolean boolean0 = genericWikiTableConfigurationBean0.equals((Object) "<unnamed>");
      assertEquals(true, genericWikiTableConfigurationBean0.isEnabled());
      assertEquals(false, boolean0);
      assertEquals("%V", genericWikiTableConfigurationBean0.getDataCell());
      assertEquals("%V", genericWikiTableConfigurationBean0.getNoWikiTag());
      assertEquals("%V", genericWikiTableConfigurationBean0.getHeaderCell());
  }

  @Test
  public void test14()  throws Throwable  {
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean0 = new GenericWikiTableConfigurationBean();
      assertNotNull(genericWikiTableConfigurationBean0);
      
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean1 = new GenericWikiTableConfigurationBean();
      boolean boolean0 = genericWikiTableConfigurationBean0.equals((Object) genericWikiTableConfigurationBean1);
      assertEquals("%V", genericWikiTableConfigurationBean0.getDataCell());
      assertEquals("%V", genericWikiTableConfigurationBean0.getNoWikiTag());
      assertEquals("%V", genericWikiTableConfigurationBean0.getHeaderCell());
      assertEquals(true, genericWikiTableConfigurationBean0.isEnabled());
      assertEquals(true, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean0 = new GenericWikiTableConfigurationBean();
      assertNotNull(genericWikiTableConfigurationBean0);
      
      genericWikiTableConfigurationBean0.setName("zeh3)*w bu?{wY$T1");
      GenericWikiTableConfigurationBean genericWikiTableConfigurationBean1 = new GenericWikiTableConfigurationBean();
      boolean boolean0 = genericWikiTableConfigurationBean0.equals((Object) genericWikiTableConfigurationBean1);
      assertEquals("zeh3)*w bu?{wY$T1", genericWikiTableConfigurationBean0.toString());
      assertEquals(false, boolean0);
  }
}
