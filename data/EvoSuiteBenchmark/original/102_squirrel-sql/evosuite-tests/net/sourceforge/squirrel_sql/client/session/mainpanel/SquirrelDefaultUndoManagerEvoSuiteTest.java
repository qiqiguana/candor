/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.client.session.mainpanel;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import javax.swing.event.DocumentEvent;
import javax.swing.text.AbstractDocument;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.PlainDocument;
import javax.swing.text.StringContent;
import javax.swing.text.StyleContext;
import javax.swing.undo.AbstractUndoableEdit;
import javax.swing.undo.CannotRedoException;
import javax.swing.undo.CannotUndoException;
import javax.swing.undo.UndoableEdit;
import net.sourceforge.squirrel_sql.client.session.mainpanel.SquirrelDefaultUndoManager;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SquirrelDefaultUndoManagerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SquirrelDefaultUndoManager squirrelDefaultUndoManager0 = new SquirrelDefaultUndoManager();
      AbstractUndoableEdit abstractUndoableEdit0 = new AbstractUndoableEdit();
      squirrelDefaultUndoManager0.addEdit((UndoableEdit) abstractUndoableEdit0);
      squirrelDefaultUndoManager0.undoOrRedo();
      squirrelDefaultUndoManager0.getUndoOrRedoPresentationName();
      assertEquals(true, squirrelDefaultUndoManager0.canUndoOrRedo());
  }

  @Test
  public void test1()  throws Throwable  {
      SquirrelDefaultUndoManager squirrelDefaultUndoManager0 = new SquirrelDefaultUndoManager();
      try {
        squirrelDefaultUndoManager0.undoOrRedo();
        fail("Expecting exception: CannotUndoException");
      } catch(CannotUndoException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      SquirrelDefaultUndoManager squirrelDefaultUndoManager0 = new SquirrelDefaultUndoManager();
      StringContent stringContent0 = new StringContent((-15));
      PlainDocument plainDocument0 = new PlainDocument((AbstractDocument.Content) stringContent0);
      DocumentEvent.EventType documentEvent_EventType0 = DocumentEvent.EventType.CHANGE;
      AbstractDocument.DefaultDocumentEvent abstractDocument_DefaultDocumentEvent0 = plainDocument0.new DefaultDocumentEvent((-15), (-15), documentEvent_EventType0);
      squirrelDefaultUndoManager0.addEdit((UndoableEdit) abstractDocument_DefaultDocumentEvent0);
      squirrelDefaultUndoManager0.getUndoOrRedoPresentationName();
      assertEquals("style change", squirrelDefaultUndoManager0.getPresentationName());
      assertEquals(200000, squirrelDefaultUndoManager0.getLimit());
  }

  @Test
  public void test3()  throws Throwable  {
      SquirrelDefaultUndoManager squirrelDefaultUndoManager0 = new SquirrelDefaultUndoManager();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      DocumentEvent.EventType documentEvent_EventType0 = DocumentEvent.EventType.REMOVE;
      AbstractDocument.DefaultDocumentEvent abstractDocument_DefaultDocumentEvent0 = defaultStyledDocument0.new DefaultDocumentEvent(164, 164, documentEvent_EventType0);
      squirrelDefaultUndoManager0.addEdit((UndoableEdit) abstractDocument_DefaultDocumentEvent0);
      squirrelDefaultUndoManager0.canUndo();
      assertEquals(true, squirrelDefaultUndoManager0.isSignificant());
      assertEquals("deletion", squirrelDefaultUndoManager0.getPresentationName());
  }

  @Test
  public void test4()  throws Throwable  {
      SquirrelDefaultUndoManager squirrelDefaultUndoManager0 = new SquirrelDefaultUndoManager();
      String string0 = squirrelDefaultUndoManager0.getRedoPresentationName();
      assertNotNull(string0);
      assertEquals(200000, squirrelDefaultUndoManager0.getLimit());
  }
}
