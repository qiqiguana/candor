/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.dialects;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sourceforge.squirrel_sql.fw.dialects.CreateScriptPreferences;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CreateScriptPreferencesEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CreateScriptPreferences createScriptPreferences0 = new CreateScriptPreferences();
      assertEquals(false, createScriptPreferences0.isUpdateRefAction());
      
      createScriptPreferences0.setUpdateRefAction(true);
      assertEquals(true, createScriptPreferences0.isUpdateRefAction());
  }

  @Test
  public void test1()  throws Throwable  {
      CreateScriptPreferences createScriptPreferences0 = new CreateScriptPreferences();
      createScriptPreferences0.setDeleteAction(3);
      assertEquals(3, createScriptPreferences0.getDeleteAction());
      assertEquals(false, createScriptPreferences0.isDeleteRefAction());
      assertEquals(false, createScriptPreferences0.isUpdateRefAction());
      assertEquals(3, createScriptPreferences0.getUpdateAction());
  }

  @Test
  public void test2()  throws Throwable  {
      CreateScriptPreferences createScriptPreferences0 = new CreateScriptPreferences();
      int int0 = createScriptPreferences0.getDeleteAction();
      assertEquals(3, createScriptPreferences0.getUpdateAction());
      assertEquals(3, int0);
      assertEquals(false, createScriptPreferences0.isUpdateRefAction());
      assertEquals(false, createScriptPreferences0.isDeleteRefAction());
  }

  @Test
  public void test3()  throws Throwable  {
      CreateScriptPreferences createScriptPreferences0 = new CreateScriptPreferences();
      createScriptPreferences0.setQualifyTableNames(false);
      assertEquals(false, createScriptPreferences0.isUpdateRefAction());
      assertEquals(3, createScriptPreferences0.getUpdateAction());
      assertEquals(false, createScriptPreferences0.isDeleteRefAction());
      assertEquals(3, createScriptPreferences0.getDeleteAction());
      assertEquals(false, createScriptPreferences0.isQualifyTableNames());
  }

  @Test
  public void test4()  throws Throwable  {
      CreateScriptPreferences createScriptPreferences0 = new CreateScriptPreferences();
      boolean boolean0 = createScriptPreferences0.isDeleteRefAction();
      assertEquals(3, createScriptPreferences0.getDeleteAction());
      assertEquals(false, boolean0);
      assertEquals(false, createScriptPreferences0.isUpdateRefAction());
      assertEquals(3, createScriptPreferences0.getUpdateAction());
  }

  @Test
  public void test5()  throws Throwable  {
      CreateScriptPreferences createScriptPreferences0 = new CreateScriptPreferences();
      int int0 = createScriptPreferences0.getUpdateAction();
      assertEquals(3, int0);
      assertEquals(false, createScriptPreferences0.isDeleteRefAction());
      assertEquals(3, createScriptPreferences0.getDeleteAction());
      assertEquals(false, createScriptPreferences0.isUpdateRefAction());
  }

  @Test
  public void test6()  throws Throwable  {
      CreateScriptPreferences createScriptPreferences0 = new CreateScriptPreferences();
      boolean boolean0 = createScriptPreferences0.isUpdateRefAction();
      assertEquals(3, createScriptPreferences0.getUpdateAction());
      assertEquals(false, createScriptPreferences0.isDeleteRefAction());
      assertEquals(false, boolean0);
      assertEquals(3, createScriptPreferences0.getDeleteAction());
  }

  @Test
  public void test7()  throws Throwable  {
      CreateScriptPreferences createScriptPreferences0 = new CreateScriptPreferences();
      createScriptPreferences0.isIncludeExternalReferences();
      assertEquals(false, createScriptPreferences0.isDeleteRefAction());
      assertEquals(false, createScriptPreferences0.isUpdateRefAction());
      assertEquals(3, createScriptPreferences0.getDeleteAction());
      assertEquals(3, createScriptPreferences0.getUpdateAction());
  }

  @Test
  public void test8()  throws Throwable  {
      CreateScriptPreferences createScriptPreferences0 = new CreateScriptPreferences();
      createScriptPreferences0.setUseDoubleQuotes(true);
      assertEquals(true, createScriptPreferences0.isUseDoubleQuotes());
      assertEquals(3, createScriptPreferences0.getDeleteAction());
  }

  @Test
  public void test9()  throws Throwable  {
      CreateScriptPreferences createScriptPreferences0 = new CreateScriptPreferences();
      createScriptPreferences0.setUpdateAction(3);
      assertEquals(false, createScriptPreferences0.isUpdateRefAction());
      assertEquals(3, createScriptPreferences0.getUpdateAction());
      assertEquals(false, createScriptPreferences0.isDeleteRefAction());
      assertEquals(3, createScriptPreferences0.getDeleteAction());
  }

  @Test
  public void test10()  throws Throwable  {
      CreateScriptPreferences createScriptPreferences0 = new CreateScriptPreferences();
      createScriptPreferences0.isQualifyTableNames();
      assertEquals(false, createScriptPreferences0.isDeleteRefAction());
      assertEquals(false, createScriptPreferences0.isUpdateRefAction());
      assertEquals(3, createScriptPreferences0.getUpdateAction());
      assertEquals(3, createScriptPreferences0.getDeleteAction());
  }

  @Test
  public void test11()  throws Throwable  {
      CreateScriptPreferences createScriptPreferences0 = new CreateScriptPreferences();
      createScriptPreferences0.setDeleteRefAction(false);
      assertEquals(false, createScriptPreferences0.isDeleteRefAction());
      assertEquals(false, createScriptPreferences0.isUpdateRefAction());
      assertEquals(3, createScriptPreferences0.getUpdateAction());
      assertEquals(3, createScriptPreferences0.getDeleteAction());
  }

  @Test
  public void test12()  throws Throwable  {
      CreateScriptPreferences createScriptPreferences0 = new CreateScriptPreferences();
      createScriptPreferences0.setConstraintsAtEnd(false);
      assertEquals(false, createScriptPreferences0.isConstraintsAtEnd());
      assertEquals(false, createScriptPreferences0.isDeleteRefAction());
      assertEquals(3, createScriptPreferences0.getDeleteAction());
      assertEquals(3, createScriptPreferences0.getUpdateAction());
      assertEquals(false, createScriptPreferences0.isUpdateRefAction());
  }

  @Test
  public void test13()  throws Throwable  {
      CreateScriptPreferences createScriptPreferences0 = new CreateScriptPreferences();
      createScriptPreferences0.isUseDoubleQuotes();
      assertEquals(3, createScriptPreferences0.getDeleteAction());
      assertEquals(false, createScriptPreferences0.isUpdateRefAction());
      assertEquals(3, createScriptPreferences0.getUpdateAction());
      assertEquals(false, createScriptPreferences0.isDeleteRefAction());
  }

  @Test
  public void test14()  throws Throwable  {
      CreateScriptPreferences createScriptPreferences0 = new CreateScriptPreferences();
      createScriptPreferences0.isConstraintsAtEnd();
      assertEquals(3, createScriptPreferences0.getDeleteAction());
      assertEquals(3, createScriptPreferences0.getUpdateAction());
      assertEquals(false, createScriptPreferences0.isUpdateRefAction());
      assertEquals(false, createScriptPreferences0.isDeleteRefAction());
  }

  @Test
  public void test15()  throws Throwable  {
      CreateScriptPreferences createScriptPreferences0 = new CreateScriptPreferences();
      createScriptPreferences0.setIncludeExternalReferences(false);
      assertEquals(false, createScriptPreferences0.isIncludeExternalReferences());
      assertEquals(3, createScriptPreferences0.getDeleteAction());
      assertEquals(false, createScriptPreferences0.isUpdateRefAction());
      assertEquals(3, createScriptPreferences0.getUpdateAction());
      assertEquals(false, createScriptPreferences0.isDeleteRefAction());
  }

  @Test
  public void test16()  throws Throwable  {
      CreateScriptPreferences createScriptPreferences0 = new CreateScriptPreferences();
      String string0 = createScriptPreferences0.getRefActionByType(0);
      assertEquals(false, createScriptPreferences0.isUpdateRefAction());
      assertEquals("CASCADE", string0);
      assertEquals(false, createScriptPreferences0.isDeleteRefAction());
      assertEquals(3, createScriptPreferences0.getUpdateAction());
      assertEquals(3, createScriptPreferences0.getDeleteAction());
  }

  @Test
  public void test17()  throws Throwable  {
      CreateScriptPreferences createScriptPreferences0 = new CreateScriptPreferences();
      String string0 = createScriptPreferences0.getRefActionByType(886);
      assertEquals("NO ACTION", string0);
      assertEquals(3, createScriptPreferences0.getUpdateAction());
      assertEquals(3, createScriptPreferences0.getDeleteAction());
      assertEquals(false, createScriptPreferences0.isUpdateRefAction());
      assertEquals(false, createScriptPreferences0.isDeleteRefAction());
  }

  @Test
  public void test18()  throws Throwable  {
      CreateScriptPreferences createScriptPreferences0 = new CreateScriptPreferences();
      String string0 = createScriptPreferences0.getRefActionByType(1);
      assertEquals(3, createScriptPreferences0.getUpdateAction());
      assertEquals(false, createScriptPreferences0.isUpdateRefAction());
      assertEquals(false, createScriptPreferences0.isDeleteRefAction());
      assertEquals(3, createScriptPreferences0.getDeleteAction());
      assertEquals("NO ACTION", string0);
  }

  @Test
  public void test19()  throws Throwable  {
      CreateScriptPreferences createScriptPreferences0 = new CreateScriptPreferences();
      String string0 = createScriptPreferences0.getRefActionByType(2);
      assertEquals(false, createScriptPreferences0.isUpdateRefAction());
      assertEquals("SET NULL", string0);
      assertEquals(3, createScriptPreferences0.getDeleteAction());
      assertEquals(3, createScriptPreferences0.getUpdateAction());
      assertEquals(false, createScriptPreferences0.isDeleteRefAction());
  }

  @Test
  public void test20()  throws Throwable  {
      CreateScriptPreferences createScriptPreferences0 = new CreateScriptPreferences();
      String string0 = createScriptPreferences0.getRefActionByType(3);
      assertEquals(3, createScriptPreferences0.getUpdateAction());
      assertEquals(3, createScriptPreferences0.getDeleteAction());
      assertEquals(false, createScriptPreferences0.isDeleteRefAction());
      assertEquals("NO ACTION", string0);
      assertEquals(false, createScriptPreferences0.isUpdateRefAction());
  }

  @Test
  public void test21()  throws Throwable  {
      CreateScriptPreferences createScriptPreferences0 = new CreateScriptPreferences();
      String string0 = createScriptPreferences0.getRefActionByType(4);
      assertEquals("SET DEFAULT", string0);
      assertEquals(false, createScriptPreferences0.isUpdateRefAction());
      assertEquals(3, createScriptPreferences0.getDeleteAction());
      assertEquals(false, createScriptPreferences0.isDeleteRefAction());
      assertEquals(3, createScriptPreferences0.getUpdateAction());
  }
}
