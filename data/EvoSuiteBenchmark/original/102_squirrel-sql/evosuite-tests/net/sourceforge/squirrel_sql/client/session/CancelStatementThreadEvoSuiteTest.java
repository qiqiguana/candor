/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.client.session;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.Statement;
import net.sourceforge.squirrel_sql.client.session.CancelStatementThread;
import net.sourceforge.squirrel_sql.fw.util.IMessageHandler;
import net.sourceforge.squirrel_sql.fw.util.ListMessageHandler;
import net.sourceforge.squirrel_sql.fw.util.NullMessageHandler;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CancelStatementThreadEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CancelStatementThread cancelStatementThread0 = new CancelStatementThread((Statement) null, (IMessageHandler) null);
      // Undeclared exception!
      try {
        cancelStatementThread0.tryCancel();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      NullMessageHandler nullMessageHandler0 = NullMessageHandler.getInstance();
      CancelStatementThread cancelStatementThread0 = new CancelStatementThread((Statement) null, (IMessageHandler) nullMessageHandler0);
      cancelStatementThread0.tryCancel();
      cancelStatementThread0.run();
      assertEquals(Thread.State.TERMINATED, cancelStatementThread0.getState());
      assertEquals(801L, cancelStatementThread0.getId());
  }

  @Test
  public void test2()  throws Throwable  {
      ListMessageHandler listMessageHandler0 = new ListMessageHandler();
      CancelStatementThread cancelStatementThread0 = new CancelStatementThread((Statement) null, (IMessageHandler) listMessageHandler0);
      cancelStatementThread0.run();
      assertEquals(828L, cancelStatementThread0.getId());
      assertEquals("Thread-812", cancelStatementThread0.getName());
  }
}
