/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.datasetviewer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Adjustable;
import java.awt.RenderingHints;
import java.util.List;
import net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetDefinition;
import net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetException;
import net.sourceforge.squirrel_sql.fw.datasetviewer.JavabeanArrayDataSet;
import net.sourceforge.squirrel_sql.fw.util.IMessageHandler;
import net.sourceforge.squirrel_sql.fw.util.ListMessageHandler;
import net.sourceforge.squirrel_sql.fw.util.NullMessageHandler;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.date.SerialDate;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JavabeanArrayDataSetEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) 100;
      JavabeanArrayDataSet javabeanArrayDataSet0 = new JavabeanArrayDataSet(objectArray0);
      assertNotNull(javabeanArrayDataSet0);
      
      // Undeclared exception!
      try {
        javabeanArrayDataSet0.get(100);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Class<?> class0 = Adjustable.class;
      JavabeanArrayDataSet javabeanArrayDataSet0 = new JavabeanArrayDataSet(class0);
      javabeanArrayDataSet0.setColPos("8,8)sg", 1025);
      javabeanArrayDataSet0.initColsAndBeanInfo(class0);
      assertEquals(7, javabeanArrayDataSet0.getColumnCount());
  }

  @Test
  public void test2()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      Object object0 = RenderingHints.VALUE_TEXT_ANTIALIAS_GASP;
      objectArray0[0] = object0;
      objectArray0[1] = object0;
      objectArray0[2] = objectArray0[0];
      objectArray0[3] = objectArray0[2];
      objectArray0[4] = objectArray0[0];
      objectArray0[5] = objectArray0[3];
      objectArray0[6] = objectArray0[2];
      JavabeanArrayDataSet javabeanArrayDataSet0 = new JavabeanArrayDataSet(objectArray0);
      assertNotNull(javabeanArrayDataSet0);
      
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      List<Object> list0 = defaultMultiValueCategoryDataset0.getColumnKeys();
      javabeanArrayDataSet0.setJavaBeanList(list0);
      assertEquals(1, javabeanArrayDataSet0.getColumnCount());
  }

  @Test
  public void test3()  throws Throwable  {
      Class<?> class0 = SerialDate.class;
      JavabeanArrayDataSet javabeanArrayDataSet0 = new JavabeanArrayDataSet(class0);
      javabeanArrayDataSet0.setColHeader("", "");
  }

  @Test
  public void test4()  throws Throwable  {
      Class<?> class0 = SerialDate.class;
      JavabeanArrayDataSet javabeanArrayDataSet0 = new JavabeanArrayDataSet(class0);
      javabeanArrayDataSet0.setIgnoreProperty("");
  }

  @Test
  public void test5()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      Object object0 = RenderingHints.VALUE_TEXT_ANTIALIAS_GASP;
      objectArray0[0] = object0;
      objectArray0[1] = object0;
      objectArray0[2] = objectArray0[0];
      objectArray0[3] = objectArray0[2];
      objectArray0[4] = objectArray0[0];
      objectArray0[5] = objectArray0[3];
      objectArray0[6] = objectArray0[2];
      JavabeanArrayDataSet javabeanArrayDataSet0 = new JavabeanArrayDataSet(objectArray0);
      assertNotNull(javabeanArrayDataSet0);
      
      int int0 = javabeanArrayDataSet0.getColumnCount();
      assertEquals(1, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      Class<?> class0 = SerialDate.class;
      JavabeanArrayDataSet javabeanArrayDataSet0 = new JavabeanArrayDataSet(class0);
      javabeanArrayDataSet0.setAbsoluteWidht("", (-508));
  }

  @Test
  public void test7()  throws Throwable  {
      Class<?> class0 = Adjustable.class;
      JavabeanArrayDataSet javabeanArrayDataSet0 = new JavabeanArrayDataSet(class0);
      DataSetDefinition dataSetDefinition0 = javabeanArrayDataSet0.getDataSetDefinition();
      assertNull(dataSetDefinition0);
  }

  @Test
  public void test8()  throws Throwable  {
      JavabeanArrayDataSet javabeanArrayDataSet0 = null;
      try {
        javabeanArrayDataSet0 = new JavabeanArrayDataSet((Object[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      Class<?> class0 = JavabeanArrayDataSet.class;
      JavabeanArrayDataSet javabeanArrayDataSet0 = new JavabeanArrayDataSet(class0);
      NullMessageHandler nullMessageHandler0 = NullMessageHandler.getInstance();
      boolean boolean0 = javabeanArrayDataSet0.next((IMessageHandler) nullMessageHandler0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      Object object0 = RenderingHints.VALUE_TEXT_ANTIALIAS_GASP;
      objectArray0[0] = object0;
      objectArray0[1] = object0;
      objectArray0[2] = objectArray0[0];
      objectArray0[3] = objectArray0[2];
      objectArray0[4] = objectArray0[0];
      objectArray0[5] = objectArray0[3];
      objectArray0[6] = objectArray0[2];
      JavabeanArrayDataSet javabeanArrayDataSet0 = new JavabeanArrayDataSet(objectArray0);
      assertNotNull(javabeanArrayDataSet0);
      
      ListMessageHandler listMessageHandler0 = new ListMessageHandler();
      boolean boolean0 = javabeanArrayDataSet0.next((IMessageHandler) listMessageHandler0);
      assertEquals(1, javabeanArrayDataSet0.getColumnCount());
      assertEquals(true, boolean0);
  }
}
