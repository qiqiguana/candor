/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.client.update.gui;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import net.sourceforge.squirrel_sql.client.update.gui.ArtifactStatus;
import net.sourceforge.squirrel_sql.client.update.gui.UpdateSummaryTable;
import net.sourceforge.squirrel_sql.client.update.gui.UpdateSummaryTableModel;
import net.sourceforge.squirrel_sql.client.update.xmlbeans.ArtifactXmlBean;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UpdateSummaryTableEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LinkedList<ArtifactStatus> linkedList0 = new LinkedList<ArtifactStatus>();
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean();
      ArtifactStatus artifactStatus0 = new ArtifactStatus(artifactXmlBean0);
      linkedList0.add(artifactStatus0);
      UpdateSummaryTableModel updateSummaryTableModel0 = new UpdateSummaryTableModel(linkedList0);
      UpdateSummaryTable updateSummaryTable0 = new UpdateSummaryTable((List<ArtifactStatus>) linkedList0, updateSummaryTableModel0);
      assertNotNull(updateSummaryTable0);
      
      List<ArtifactStatus> list0 = updateSummaryTable0.getUserRequestedChanges();
      assertNotNull(list0);
      assertEquals("net.sourceforge.squirrel_sql.client.update.gui.UpdateSummaryTable[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=251658568,maximumSize=,minimumSize=,preferredSize=,autoCreateColumnsFromModel=false,autoResizeMode=AUTO_RESIZE_LAST_COLUMN,cellSelectionEnabled=false,editingColumn=-1,editingRow=-1,gridColor=javax.swing.plaf.ColorUIResource[r=122,g=138,b=153],preferredViewportSize=java.awt.Dimension[width=450,height=400],rowHeight=16,rowMargin=1,rowSelectionAllowed=true,selectionBackground=javax.swing.plaf.ColorUIResource[r=184,g=207,b=229],selectionForeground=sun.swing.PrintColorUIResource[r=51,g=51,b=51],showHorizontalLines=true,showVerticalLines=true]", updateSummaryTable0.toString());
      assertEquals(4, updateSummaryTable0.getColumnCount());
      assertEquals(true, list0.isEmpty());
  }

  @Test
  public void test1()  throws Throwable  {
      LinkedList<ArtifactStatus> linkedList0 = new LinkedList<ArtifactStatus>();
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean();
      ArtifactStatus artifactStatus0 = new ArtifactStatus(artifactXmlBean0);
      linkedList0.add(artifactStatus0);
      UpdateSummaryTableModel updateSummaryTableModel0 = new UpdateSummaryTableModel(linkedList0);
      UpdateSummaryTable updateSummaryTable0 = new UpdateSummaryTable((List<ArtifactStatus>) linkedList0, updateSummaryTableModel0);
      assertEquals(false, updateSummaryTable0.getReleaseVersionWillChange());
      assertNotNull(updateSummaryTable0);
      
      artifactStatus0.setInstalled(true);
      updateSummaryTable0.setReleaseVersionWillChange(true);
      updateSummaryTable0.getUserRequestedChanges();
      assertEquals(true, updateSummaryTable0.getReleaseVersionWillChange());
      assertEquals("net.sourceforge.squirrel_sql.client.update.gui.UpdateSummaryTable[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=251658568,maximumSize=,minimumSize=,preferredSize=,autoCreateColumnsFromModel=false,autoResizeMode=AUTO_RESIZE_LAST_COLUMN,cellSelectionEnabled=false,editingColumn=-1,editingRow=-1,gridColor=javax.swing.plaf.ColorUIResource[r=122,g=138,b=153],preferredViewportSize=java.awt.Dimension[width=450,height=400],rowHeight=16,rowMargin=1,rowSelectionAllowed=true,selectionBackground=javax.swing.plaf.ColorUIResource[r=184,g=207,b=229],selectionForeground=sun.swing.PrintColorUIResource[r=51,g=51,b=51],showHorizontalLines=true,showVerticalLines=true]", updateSummaryTable0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      LinkedList<ArtifactStatus> linkedList0 = new LinkedList<ArtifactStatus>();
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean();
      ArtifactStatus artifactStatus0 = new ArtifactStatus(artifactXmlBean0);
      linkedList0.add(artifactStatus0);
      UpdateSummaryTableModel updateSummaryTableModel0 = new UpdateSummaryTableModel(linkedList0);
      UpdateSummaryTable updateSummaryTable0 = new UpdateSummaryTable((List<ArtifactStatus>) linkedList0, updateSummaryTableModel0);
      assertNotNull(updateSummaryTable0);
      assertEquals(false, updateSummaryTable0.getReleaseVersionWillChange());
      
      updateSummaryTable0.setReleaseVersionWillChange(true);
      assertEquals(true, updateSummaryTable0.getReleaseVersionWillChange());
      assertEquals(4, updateSummaryTable0.getColumnCount());
  }

  @Test
  public void test3()  throws Throwable  {
      LinkedList<ArtifactStatus> linkedList0 = new LinkedList<ArtifactStatus>();
      ArtifactXmlBean artifactXmlBean0 = new ArtifactXmlBean();
      ArtifactStatus artifactStatus0 = new ArtifactStatus(artifactXmlBean0);
      linkedList0.add(artifactStatus0);
      UpdateSummaryTableModel updateSummaryTableModel0 = new UpdateSummaryTableModel(linkedList0);
      UpdateSummaryTable updateSummaryTable0 = new UpdateSummaryTable((List<ArtifactStatus>) linkedList0, updateSummaryTableModel0);
      updateSummaryTable0.setReleaseVersionWillChange(false);
      assertEquals(1, linkedList0.size());
      assertEquals(false, linkedList0.isEmpty());
  }
}
