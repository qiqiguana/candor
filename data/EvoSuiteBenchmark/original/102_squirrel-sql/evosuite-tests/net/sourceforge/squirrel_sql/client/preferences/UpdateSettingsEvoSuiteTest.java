/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.client.preferences;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sourceforge.squirrel_sql.client.preferences.IUpdateSettings;
import net.sourceforge.squirrel_sql.client.preferences.UpdateSettings;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UpdateSettingsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UpdateSettings updateSettings0 = new UpdateSettings();
      assertEquals("projects/squirrel-sql/files/updates", updateSettings0.getUpdateServerPath());
      
      updateSettings0.setUpdateServerPath((String) null);
      assertEquals(true, updateSettings0.isRemoteUpdateSite());
      assertEquals("0", updateSettings0.getLastUpdateCheckTimeMillis());
      assertEquals("80", updateSettings0.getUpdateServerPort());
      assertEquals(true, updateSettings0.isEnableAutomaticUpdates());
      assertEquals("stable", updateSettings0.getUpdateServerChannel());
      assertEquals("WEEKLY", updateSettings0.getUpdateCheckFrequency());
      assertEquals("sourceforge.net", updateSettings0.getUpdateServer());
  }

  @Test
  public void test1()  throws Throwable  {
      UpdateSettings updateSettings0 = new UpdateSettings();
      UpdateSettings updateSettings1 = new UpdateSettings((IUpdateSettings) updateSettings0);
      assertEquals("80", updateSettings1.getUpdateServerPort());
      assertEquals(true, updateSettings0.isEnableAutomaticUpdates());
      assertEquals("sourceforge.net", updateSettings1.getUpdateServer());
      assertEquals("0", updateSettings1.getLastUpdateCheckTimeMillis());
      assertEquals(true, updateSettings0.isRemoteUpdateSite());
      assertEquals("projects/squirrel-sql/files/updates", updateSettings1.getUpdateServerPath());
      assertEquals("WEEKLY", updateSettings1.getUpdateCheckFrequency());
      assertEquals("stable", updateSettings1.getUpdateServerChannel());
      assertEquals("", updateSettings1.getFileSystemUpdatePath());
  }

  @Test
  public void test2()  throws Throwable  {
      UpdateSettings updateSettings0 = new UpdateSettings();
      assertEquals("WEEKLY", updateSettings0.getUpdateCheckFrequency());
      
      updateSettings0.setUpdateCheckFrequency((String) null);
      assertEquals("stable", updateSettings0.getUpdateServerChannel());
      assertEquals(true, updateSettings0.isEnableAutomaticUpdates());
      assertEquals("0", updateSettings0.getLastUpdateCheckTimeMillis());
      assertEquals("sourceforge.net", updateSettings0.getUpdateServer());
      assertEquals(true, updateSettings0.isRemoteUpdateSite());
      assertEquals("projects/squirrel-sql/files/updates", updateSettings0.getUpdateServerPath());
      assertEquals("80", updateSettings0.getUpdateServerPort());
  }

  @Test
  public void test3()  throws Throwable  {
      UpdateSettings updateSettings0 = new UpdateSettings();
      updateSettings0.setUpdateServerPort("80");
      assertEquals(true, updateSettings0.isRemoteUpdateSite());
      assertEquals(true, updateSettings0.isEnableAutomaticUpdates());
      assertEquals("WEEKLY", updateSettings0.getUpdateCheckFrequency());
      assertEquals("80", updateSettings0.getUpdateServerPort());
      assertEquals("sourceforge.net", updateSettings0.getUpdateServer());
      assertEquals("projects/squirrel-sql/files/updates", updateSettings0.getUpdateServerPath());
      assertEquals("0", updateSettings0.getLastUpdateCheckTimeMillis());
      assertEquals("stable", updateSettings0.getUpdateServerChannel());
  }

  @Test
  public void test4()  throws Throwable  {
      UpdateSettings updateSettings0 = new UpdateSettings();
      assertEquals("0", updateSettings0.getLastUpdateCheckTimeMillis());
      
      updateSettings0.setLastUpdateCheckTimeMillis((String) null);
      assertEquals(true, updateSettings0.isRemoteUpdateSite());
      assertEquals("sourceforge.net", updateSettings0.getUpdateServer());
      assertEquals("WEEKLY", updateSettings0.getUpdateCheckFrequency());
      assertEquals(true, updateSettings0.isEnableAutomaticUpdates());
      assertEquals("stable", updateSettings0.getUpdateServerChannel());
      assertEquals("80", updateSettings0.getUpdateServerPort());
      assertEquals("projects/squirrel-sql/files/updates", updateSettings0.getUpdateServerPath());
  }

  @Test
  public void test5()  throws Throwable  {
      UpdateSettings updateSettings0 = new UpdateSettings();
      updateSettings0.setEnableAutomaticUpdates(true);
      assertEquals(true, updateSettings0.isEnableAutomaticUpdates());
      assertEquals("projects/squirrel-sql/files/updates", updateSettings0.getUpdateServerPath());
      assertEquals("sourceforge.net", updateSettings0.getUpdateServer());
      assertEquals("WEEKLY", updateSettings0.getUpdateCheckFrequency());
      assertEquals("0", updateSettings0.getLastUpdateCheckTimeMillis());
      assertEquals(true, updateSettings0.isRemoteUpdateSite());
      assertEquals("80", updateSettings0.getUpdateServerPort());
      assertEquals("stable", updateSettings0.getUpdateServerChannel());
  }

  @Test
  public void test6()  throws Throwable  {
      UpdateSettings updateSettings0 = new UpdateSettings();
      updateSettings0.setUpdateServerChannel("80");
      assertEquals("80", updateSettings0.getUpdateServerChannel());
  }

  @Test
  public void test7()  throws Throwable  {
      UpdateSettings updateSettings0 = new UpdateSettings();
      UpdateSettings updateSettings1 = (UpdateSettings)updateSettings0.clone();
      assertEquals("projects/squirrel-sql/files/updates", updateSettings1.getUpdateServerPath());
      assertEquals(true, updateSettings1.isEnableAutomaticUpdates());
      assertEquals("stable", updateSettings1.getUpdateServerChannel());
      assertEquals("sourceforge.net", updateSettings1.getUpdateServer());
      assertEquals("80", updateSettings1.getUpdateServerPort());
      assertEquals(true, updateSettings1.isRemoteUpdateSite());
      assertEquals("WEEKLY", updateSettings1.getUpdateCheckFrequency());
      assertEquals("0", updateSettings1.getLastUpdateCheckTimeMillis());
  }

  @Test
  public void test8()  throws Throwable  {
      UpdateSettings updateSettings0 = new UpdateSettings();
      assertEquals("sourceforge.net", updateSettings0.getUpdateServer());
      
      updateSettings0.setUpdateServer((String) null);
      UpdateSettings updateSettings1 = new UpdateSettings((IUpdateSettings) updateSettings0);
      assertEquals(true, updateSettings0.isRemoteUpdateSite());
      assertEquals(true, updateSettings0.isEnableAutomaticUpdates());
      assertEquals("projects/squirrel-sql/files/updates", updateSettings0.getUpdateServerPath());
      assertEquals("", updateSettings0.getFileSystemUpdatePath());
      assertEquals("80", updateSettings0.getUpdateServerPort());
      assertEquals("WEEKLY", updateSettings0.getUpdateCheckFrequency());
      assertEquals("0", updateSettings0.getLastUpdateCheckTimeMillis());
      assertEquals("stable", updateSettings0.getUpdateServerChannel());
      assertNotNull(updateSettings1);
      assertEquals("WEEKLY", updateSettings1.getUpdateCheckFrequency());
  }

  @Test
  public void test9()  throws Throwable  {
      UpdateSettings updateSettings0 = new UpdateSettings();
      updateSettings0.setFileSystemUpdatePath((String) null);
      assertEquals("80", updateSettings0.getUpdateServerPort());
      assertEquals("sourceforge.net", updateSettings0.getUpdateServer());
      assertEquals("WEEKLY", updateSettings0.getUpdateCheckFrequency());
      assertEquals("stable", updateSettings0.getUpdateServerChannel());
      assertEquals("projects/squirrel-sql/files/updates", updateSettings0.getUpdateServerPath());
      assertEquals(true, updateSettings0.isRemoteUpdateSite());
      assertEquals(true, updateSettings0.isEnableAutomaticUpdates());
      assertEquals("0", updateSettings0.getLastUpdateCheckTimeMillis());
  }

  @Test
  public void test10()  throws Throwable  {
      UpdateSettings updateSettings0 = new UpdateSettings();
      updateSettings0.setRemoteUpdateSite(true);
      assertEquals(true, updateSettings0.isRemoteUpdateSite());
      assertEquals("WEEKLY", updateSettings0.getUpdateCheckFrequency());
      assertEquals("stable", updateSettings0.getUpdateServerChannel());
      assertEquals("80", updateSettings0.getUpdateServerPort());
      assertEquals(true, updateSettings0.isEnableAutomaticUpdates());
      assertEquals("projects/squirrel-sql/files/updates", updateSettings0.getUpdateServerPath());
      assertEquals("0", updateSettings0.getLastUpdateCheckTimeMillis());
      assertEquals("sourceforge.net", updateSettings0.getUpdateServer());
  }

  @Test
  public void test11()  throws Throwable  {
      UpdateSettings updateSettings0 = new UpdateSettings();
      updateSettings0.setUpdateServer("www.squirrel-sql.net");
      UpdateSettings updateSettings1 = new UpdateSettings((IUpdateSettings) updateSettings0);
      assertEquals("www.squirrel-sql.net", updateSettings0.getUpdateServer());
      assertEquals("sourceforge.net", updateSettings1.getUpdateServer());
  }
}
