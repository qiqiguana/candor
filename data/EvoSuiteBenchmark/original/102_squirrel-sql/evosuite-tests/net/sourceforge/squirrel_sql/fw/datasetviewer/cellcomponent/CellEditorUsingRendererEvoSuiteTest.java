/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Vector;
import javax.swing.JPasswordField;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.JTree;
import javax.swing.table.DefaultTableModel;
import net.sourceforge.squirrel_sql.fw.datasetviewer.ColumnDisplayDefinition;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.CellEditorUsingRenderer;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.DataTypeDouble;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.IDataTypeComponent;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.RestorableJTextField;
import net.sourceforge.squirrel_sql.fw.dialects.DialectType;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CellEditorUsingRendererEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DialectType dialectType0 = DialectType.NETEZZA;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition((-1438), "`MBt6I9Q=_(F*ReA(=", "`MBt6I9Q=_(F*ReA(=", "`MBt6I9Q=_(F*ReA(=", (-886), "", false, 45, (-886), 15, true, false, false, dialectType0);
      DataTypeDouble dataTypeDouble0 = new DataTypeDouble((JTable) null, columnDisplayDefinition0);
      RestorableJTextField restorableJTextField0 = (RestorableJTextField)dataTypeDouble0.getJTextField();
      CellEditorUsingRenderer cellEditorUsingRenderer0 = new CellEditorUsingRenderer((JTextField) restorableJTextField0, (IDataTypeComponent) dataTypeDouble0);
      RestorableJTextField restorableJTextField1 = (RestorableJTextField)cellEditorUsingRenderer0.getTableCellEditorComponent((JTable) null, (Object) null, false, (-7), (-886));
      assertEquals("<null>", restorableJTextField0.getText());
      assertEquals("<null>", restorableJTextField1.getText());
  }

  @Test
  public void test1()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      CellEditorUsingRenderer cellEditorUsingRenderer0 = new CellEditorUsingRenderer((JTextField) jPasswordField0, (IDataTypeComponent) null);
      String string0 = (String)cellEditorUsingRenderer0.getCellEditorValue();
      assertEquals(2, cellEditorUsingRenderer0.getClickCountToStart());
      assertNotNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      CellEditorUsingRenderer cellEditorUsingRenderer0 = new CellEditorUsingRenderer((JTextField) jPasswordField0, (IDataTypeComponent) null);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      Vector<Object> vector0 = defaultTableModel0.getDataVector();
      JTree jTree0 = new JTree(vector0);
      cellEditorUsingRenderer0.getTreeCellEditorComponent(jTree0, (Object) "SwingLargeIconKey", true, true, true, 0);
      assertEquals("SwingLargeIconKey", jPasswordField0.getText());
      assertEquals(2, cellEditorUsingRenderer0.getClickCountToStart());
  }

  @Test
  public void test3()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      CellEditorUsingRenderer cellEditorUsingRenderer0 = new CellEditorUsingRenderer((JTextField) jPasswordField0, (IDataTypeComponent) null);
      JTable jTable0 = new JTable();
      cellEditorUsingRenderer0.getTableCellEditorComponent(jTable0, (Object) null, true, 0, 1391);
      assertEquals("<null>", jPasswordField0.getText());
  }
}
