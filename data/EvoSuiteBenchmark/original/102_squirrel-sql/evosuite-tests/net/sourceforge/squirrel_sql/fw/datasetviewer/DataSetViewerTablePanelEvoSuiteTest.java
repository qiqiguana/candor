/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.datasetviewer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.PrinterException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.swing.JTable;
import net.sourceforge.squirrel_sql.client.session.DataSetUpdateableTableModelImpl;
import net.sourceforge.squirrel_sql.client.session.DefaultDataModelImplementationDetails;
import net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetException;
import net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerEditableTablePanel;
import net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel;
import net.sourceforge.squirrel_sql.fw.datasetviewer.IDataModelImplementationDetails;
import net.sourceforge.squirrel_sql.fw.datasetviewer.IDataSet;
import net.sourceforge.squirrel_sql.fw.datasetviewer.IDataSetTableControls;
import net.sourceforge.squirrel_sql.fw.datasetviewer.IDataSetUpdateableModel;
import net.sourceforge.squirrel_sql.fw.datasetviewer.JavabeanDataSet;
import net.sourceforge.squirrel_sql.fw.datasetviewer.RowSelectionListener;
import net.sourceforge.squirrel_sql.fw.datasetviewer.TableState;
import net.sourceforge.squirrel_sql.fw.util.IMessageHandler;
import net.sourceforge.squirrel_sql.fw.util.ListMessageHandler;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DataSetViewerTablePanelEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
      // Undeclared exception!
      try {
        dataSetViewerEditableTablePanel0.setShowRowNumbers(false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
      // Undeclared exception!
      try {
        dataSetViewerEditableTablePanel0.needToReRead(0, (Object) "delete-previous-word");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 0
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
      dataSetViewerEditableTablePanel0.getUpdateableModel();
      assertEquals(0, dataSetViewerEditableTablePanel0.subPageIndex);
      assertEquals(0, dataSetViewerEditableTablePanel0.subTableSplitSize);
      assertEquals(0, dataSetViewerEditableTablePanel0.prevPageIndex);
      assertEquals(false, dataSetViewerEditableTablePanel0.pageinfoCalculated);
      assertEquals(0.6666666666666666, dataSetViewerEditableTablePanel0.scale, 0.01D);
      assertEquals(0, dataSetViewerEditableTablePanel0.totalNumPages);
  }

  @Test
  public void test3()  throws Throwable  {
      DataSetViewerTablePanel dataSetViewerTablePanel0 = new DataSetViewerTablePanel();
      Object[] objectArray0 = new Object[7];
      StringBuffer stringBuffer0 = new StringBuffer(0);
      // Undeclared exception!
      try {
        dataSetViewerTablePanel0.reReadDatum(objectArray0, 0, stringBuffer0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          DataSetViewerTablePanel dataSetViewerTablePanel0 = new DataSetViewerTablePanel();
          // Undeclared exception!
          try {
            dataSetViewerTablePanel0.init((IDataSetUpdateableModel) null);
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.lang.RuntimePermission preferences)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.util.prefs.Preferences.userRoot(Preferences.java:432)
             * net.sourceforge.squirrel_sql.fw.gui.ButtonTableHeader.isAlwaysAdjustAllColWidths(ButtonTableHeader.java:267)
             * net.sourceforge.squirrel_sql.fw.gui.TablePopupMenu.<init>(TablePopupMenu.java:159)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel$MyJTable.createGUI(DataSetViewerTablePanel.java:531)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel$MyJTable.<init>(DataSetViewerTablePanel.java:275)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel.init(DataSetViewerTablePanel.java:107)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel.init(DataSetViewerTablePanel.java:92)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel.init(DataSetViewerTablePanel.java:86)
             * sun.reflect.GeneratedMethodAccessor85.invoke(Unknown Source)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test5()  throws Throwable  {
      DataSetViewerTablePanel dataSetViewerTablePanel0 = new DataSetViewerTablePanel();
      boolean boolean0 = dataSetViewerTablePanel0.isColumnEditable(1148, (Object) "LongDescription");
      assertEquals(0, dataSetViewerTablePanel0.subTableSplitSize);
      assertEquals(0, dataSetViewerTablePanel0.totalNumPages);
      assertEquals(0.6666666666666666, dataSetViewerTablePanel0.scale, 0.01D);
      assertEquals(0, dataSetViewerTablePanel0.prevPageIndex);
      assertEquals(false, dataSetViewerTablePanel0.pageinfoCalculated);
      assertEquals(0, dataSetViewerTablePanel0.subPageIndex);
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          DataSetViewerTablePanel dataSetViewerTablePanel0 = new DataSetViewerTablePanel();
          DefaultDataModelImplementationDetails defaultDataModelImplementationDetails0 = new DefaultDataModelImplementationDetails();
          // Undeclared exception!
          try {
            dataSetViewerTablePanel0.init((IDataSetUpdateableModel) null, (IDataModelImplementationDetails) defaultDataModelImplementationDetails0);
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.lang.RuntimePermission preferences)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.util.prefs.Preferences.userRoot(Preferences.java:432)
             * net.sourceforge.squirrel_sql.fw.gui.ButtonTableHeader.isAlwaysAdjustAllColWidths(ButtonTableHeader.java:267)
             * net.sourceforge.squirrel_sql.fw.gui.TablePopupMenu.<init>(TablePopupMenu.java:159)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel$MyJTable.createGUI(DataSetViewerTablePanel.java:531)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel$MyJTable.<init>(DataSetViewerTablePanel.java:275)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel.init(DataSetViewerTablePanel.java:107)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel.init(DataSetViewerTablePanel.java:97)
             * sun.reflect.GeneratedMethodAccessor87.invoke(Unknown Source)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test7()  throws Throwable  {
      DataSetViewerTablePanel dataSetViewerTablePanel0 = new DataSetViewerTablePanel();
      // Undeclared exception!
      try {
        dataSetViewerTablePanel0.getRowCount();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
      JTable jTable0 = new JTable();
      TableState tableState0 = new TableState(jTable0);
      dataSetViewerEditableTablePanel0.applyResultSortableTableState(tableState0);
      assertEquals(0.6666666666666666, dataSetViewerEditableTablePanel0.scale, 0.01D);
      assertEquals(0, dataSetViewerEditableTablePanel0.subTableSplitSize);
      assertEquals(false, dataSetViewerEditableTablePanel0.pageinfoCalculated);
      assertEquals(0, dataSetViewerEditableTablePanel0.prevPageIndex);
      assertEquals(0, dataSetViewerEditableTablePanel0.subPageIndex);
      assertEquals(0, dataSetViewerEditableTablePanel0.totalNumPages);
  }

  @Test
  public void test9()  throws Throwable  {
      DataSetViewerTablePanel dataSetViewerTablePanel0 = new DataSetViewerTablePanel();
      dataSetViewerTablePanel0.deleteRows((int[]) null);
      assertEquals(0, dataSetViewerTablePanel0.prevPageIndex);
      assertEquals(0, dataSetViewerTablePanel0.subTableSplitSize);
      assertEquals(0, dataSetViewerTablePanel0.subPageIndex);
      assertEquals(false, dataSetViewerTablePanel0.pageinfoCalculated);
      assertEquals(0.6666666666666666, dataSetViewerTablePanel0.scale, 0.01D);
      assertEquals(0, dataSetViewerTablePanel0.totalNumPages);
  }

  @Test
  public void test10()  throws Throwable  {
      DataSetViewerTablePanel dataSetViewerTablePanel0 = new DataSetViewerTablePanel();
      // Undeclared exception!
      try {
        dataSetViewerTablePanel0.allRowsAdded();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      DataSetViewerTablePanel dataSetViewerTablePanel0 = new DataSetViewerTablePanel();
      JavabeanDataSet javabeanDataSet0 = new JavabeanDataSet((Object) "deflate");
      ListMessageHandler listMessageHandler0 = new ListMessageHandler();
      // Undeclared exception!
      try {
        dataSetViewerTablePanel0.show((IDataSet) javabeanDataSet0, (IMessageHandler) listMessageHandler0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      DataSetViewerTablePanel dataSetViewerTablePanel0 = new DataSetViewerTablePanel();
      DataSetUpdateableTableModelImpl dataSetUpdateableTableModelImpl0 = new DataSetUpdateableTableModelImpl();
      Object[][] objectArray0 = new Object[13][6];
      Object[] objectArray1 = new Object[3];
      objectArray1[0] = (Object) dataSetUpdateableTableModelImpl0;
      objectArray1[1] = (Object) dataSetViewerTablePanel0;
      objectArray1[2] = (Object) dataSetUpdateableTableModelImpl0;
      JTable jTable0 = new JTable(objectArray0, objectArray1);
      dataSetViewerTablePanel0.setCellEditors(jTable0);
      assertEquals(0, dataSetViewerTablePanel0.totalNumPages);
      assertEquals(0.6666666666666666, dataSetViewerTablePanel0.scale, 0.01D);
      assertEquals(0, dataSetViewerTablePanel0.prevPageIndex);
      assertEquals(0, dataSetViewerTablePanel0.subPageIndex);
      assertEquals(0, dataSetViewerTablePanel0.subTableSplitSize);
      assertEquals(false, dataSetViewerTablePanel0.pageinfoCalculated);
  }

  @Test
  public void test13()  throws Throwable  {
      DataSetViewerTablePanel dataSetViewerTablePanel0 = new DataSetViewerTablePanel();
      // Undeclared exception!
      try {
        dataSetViewerTablePanel0.getSeletedRows();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
      // Undeclared exception!
      try {
        dataSetViewerEditableTablePanel0.addRowSelectionListener((RowSelectionListener) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
      // Undeclared exception!
      try {
        dataSetViewerEditableTablePanel0.getResultSortableTableState();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      DataSetViewerTablePanel dataSetViewerTablePanel0 = new DataSetViewerTablePanel();
      DataSetUpdateableTableModelImpl dataSetUpdateableTableModelImpl0 = new DataSetUpdateableTableModelImpl();
      dataSetViewerTablePanel0.changeUnderlyingValueAt(0, 0, (Object) dataSetUpdateableTableModelImpl0, (Object) dataSetUpdateableTableModelImpl0);
      assertEquals(0, dataSetViewerTablePanel0.subTableSplitSize);
      assertEquals(0, dataSetViewerTablePanel0.prevPageIndex);
      assertEquals(0, dataSetViewerTablePanel0.totalNumPages);
      assertEquals(0.6666666666666666, dataSetViewerTablePanel0.scale, 0.01D);
      assertEquals(false, dataSetViewerTablePanel0.pageinfoCalculated);
      assertEquals(0, dataSetViewerTablePanel0.subPageIndex);
  }

  @Test
  public void test17()  throws Throwable  {
      DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
      dataSetViewerEditableTablePanel0.getComponent();
      assertEquals(0.6666666666666666, dataSetViewerEditableTablePanel0.scale, 0.01D);
      assertEquals(0, dataSetViewerEditableTablePanel0.totalNumPages);
      assertEquals(0, dataSetViewerEditableTablePanel0.prevPageIndex);
      assertEquals(0, dataSetViewerEditableTablePanel0.subPageIndex);
      assertEquals(false, dataSetViewerEditableTablePanel0.pageinfoCalculated);
      assertEquals(0, dataSetViewerEditableTablePanel0.subTableSplitSize);
  }

  @Test
  public void test18()  throws Throwable  {
      DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
      // Undeclared exception!
      try {
        dataSetViewerEditableTablePanel0.removeRowSelectionListener((RowSelectionListener) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test19()  throws Throwable  {
      DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try {
        dataSetViewerEditableTablePanel0.addRow(objectArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test20()  throws Throwable  {
      DataSetViewerTablePanel dataSetViewerTablePanel0 = new DataSetViewerTablePanel();
      dataSetViewerTablePanel0.insertRow();
      assertEquals(0, dataSetViewerTablePanel0.prevPageIndex);
      assertEquals(0, dataSetViewerTablePanel0.subTableSplitSize);
      assertEquals(0, dataSetViewerTablePanel0.totalNumPages);
      assertEquals(false, dataSetViewerTablePanel0.pageinfoCalculated);
      assertEquals(0.6666666666666666, dataSetViewerTablePanel0.scale, 0.01D);
      assertEquals(0, dataSetViewerTablePanel0.subPageIndex);
  }

  @Test
  public void test21()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
          DataSetUpdateableTableModelImpl dataSetUpdateableTableModelImpl0 = new DataSetUpdateableTableModelImpl();
          DataSetViewerTablePanel.MyJTable dataSetViewerTablePanel_MyJTable0 = null;
          try {
            dataSetViewerTablePanel_MyJTable0 = dataSetViewerEditableTablePanel0.new MyJTable((IDataSetTableControls) dataSetViewerEditableTablePanel0, (IDataSetUpdateableModel) dataSetUpdateableTableModelImpl0, 0);
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.lang.RuntimePermission preferences)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.util.prefs.Preferences.userRoot(Preferences.java:432)
             * net.sourceforge.squirrel_sql.fw.gui.ButtonTableHeader.isAlwaysAdjustAllColWidths(ButtonTableHeader.java:267)
             * net.sourceforge.squirrel_sql.fw.gui.TablePopupMenu.<init>(TablePopupMenu.java:159)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel$MyJTable.createGUI(DataSetViewerTablePanel.java:531)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel$MyJTable.<init>(DataSetViewerTablePanel.java:275)
             * sun.reflect.GeneratedConstructorAccessor30.newInstance(Unknown Source)
             * sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
             * java.lang.reflect.Constructor.newInstance(Constructor.java:513)
             * org.evosuite.testcase.ConstructorStatement$1.execute(ConstructorStatement.java:226)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.ConstructorStatement.execute(ConstructorStatement.java:188)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test22()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          DataSetViewerTablePanel dataSetViewerTablePanel0 = new DataSetViewerTablePanel();
          DataSetUpdateableTableModelImpl dataSetUpdateableTableModelImpl0 = new DataSetUpdateableTableModelImpl();
          DataSetViewerTablePanel.MyJTable dataSetViewerTablePanel_MyJTable0 = null;
          try {
            dataSetViewerTablePanel_MyJTable0 = dataSetViewerTablePanel0.new MyJTable((IDataSetTableControls) dataSetViewerTablePanel0, (IDataSetUpdateableModel) dataSetUpdateableTableModelImpl0, 0);
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.lang.RuntimePermission preferences)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.util.prefs.Preferences.userRoot(Preferences.java:432)
             * net.sourceforge.squirrel_sql.fw.gui.ButtonTableHeader.isAlwaysAdjustAllColWidths(ButtonTableHeader.java:267)
             * net.sourceforge.squirrel_sql.fw.gui.TablePopupMenu.<init>(TablePopupMenu.java:159)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel$MyJTable.createGUI(DataSetViewerTablePanel.java:531)
             * net.sourceforge.squirrel_sql.fw.datasetviewer.DataSetViewerTablePanel$MyJTable.<init>(DataSetViewerTablePanel.java:275)
             * sun.reflect.GeneratedConstructorAccessor30.newInstance(Unknown Source)
             * sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
             * java.lang.reflect.Constructor.newInstance(Constructor.java:513)
             * org.evosuite.testcase.ConstructorStatement$1.execute(ConstructorStatement.java:226)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.ConstructorStatement.execute(ConstructorStatement.java:188)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test23()  throws Throwable  {
      DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
      PageFormat pageFormat0 = new PageFormat();
      // Undeclared exception!
      try {
        dataSetViewerEditableTablePanel0.print((Graphics) null, pageFormat0, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test24()  throws Throwable  {
      DataSetViewerEditableTablePanel dataSetViewerEditableTablePanel0 = new DataSetViewerEditableTablePanel();
      assertEquals(false, dataSetViewerEditableTablePanel0.pageinfoCalculated);
      
      dataSetViewerEditableTablePanel0.pageinfoCalculated = true;
      PageFormat pageFormat0 = new PageFormat();
      // Undeclared exception!
      try {
        dataSetViewerEditableTablePanel0.print((Graphics) null, pageFormat0, 840);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test25()  throws Throwable  {
      DataSetViewerTablePanel dataSetViewerTablePanel0 = new DataSetViewerTablePanel();
      PageFormat pageFormat0 = new PageFormat();
      // Undeclared exception!
      try {
        dataSetViewerTablePanel0.printTablePart((Graphics2D) null, pageFormat0, 509, (-521));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
