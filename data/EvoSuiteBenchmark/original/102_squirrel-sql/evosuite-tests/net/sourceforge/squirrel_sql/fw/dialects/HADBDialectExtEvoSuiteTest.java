/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.dialects;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.List;
import net.sourceforge.squirrel_sql.fw.dialects.DatabaseObjectQualifier;
import net.sourceforge.squirrel_sql.fw.dialects.DialectType;
import net.sourceforge.squirrel_sql.fw.dialects.HADBDialectExt;
import net.sourceforge.squirrel_sql.fw.dialects.SqlGenerationPreferences;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import org.hibernate.MappingException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class HADBDialectExtEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      boolean boolean0 = hADBDialectExt0.supportsDropColumn();
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("MYl1kYKs)", "MYl1kYKs)", "MYl1kYKs)", "MYl1kYKs)", 957, "MYl1kYKs)", 957, 957, 957, 1845, "MYl1kYKs)", "MYl1kYKs)", 957, 957, "MYl1kYKs)");
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        hADBDialectExt0.getColumnDefaultAlterSQL(tableColumnInfo0, (DatabaseObjectQualifier) null, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      boolean boolean0 = hADBDialectExt0.supportsSchemasInTableDefinition();
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(",un java system high availabilitypq>@oe~z", ",un java system high availabilitypq>@oe~z", ",un java system high availabilitypq>@oe~z", ",un java system high availabilitypq>@oe~z", (-1727), ",un java system high availabilitypq>@oe~z", (-1727), (-1727), 3, (-1727), ",un java system high availabilitypq>@oe~z", ",un java system high availabilitypq>@oe~z", 3, 3, ",un java system high availabilitypq>@oe~z");
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier(",un java system high availabilitypq>@oe~z", ",un java system high availabilitypq>@oe~z");
      String string0 = hADBDialectExt0.getColumnNameAlterSQL(tableColumnInfo0, tableColumnInfo0, databaseObjectQualifier0, (SqlGenerationPreferences) null);
      assertNotNull(string0);
      assertEquals("ALTER TABLE ,un java system high availabilitypq>@oe~z RENAME COLUMN ,un java system high availabilitypq>@oe~z ,un java system high availabilitypq>@oe~z", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      boolean boolean0 = hADBDialectExt0.supportsRenameColumn();
      assertEquals(true, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      boolean boolean0 = hADBDialectExt0.supportsUpdate();
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier();
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        hADBDialectExt0.getAlterSequenceSQL("lm", "lm", "lm", "lm", "lm", "lm", false, databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("5@@FV;X11c", "5@@FV;X11c", "5@@FV;X11c", "5@@FV;X11c", 0, "5@@FV;X11c", 0, 1697, 0, 0, "5@@FV;X11c", "5@@FV;X11c", 1697, 0, "5@@FV;X11c");
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier("5@@FV;X11c", "5@@FV;X11c");
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        hADBDialectExt0.getAddAutoIncrementSQL(tableColumnInfo0, "5@@FV;X11c", databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      boolean boolean0 = hADBDialectExt0.supportsRenameTable();
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier("ps'Bl^", "ps'Bl^");
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      try {
        hADBDialectExt0.getColumnCommentAlterSQL((TableColumnInfo) null, databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier("sun java system high availabilitylast-modifie", "sun java system high availabilitylast-modifie");
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        hADBDialectExt0.getDropViewSQL("sun java system high availabilitylast-modifie", false, databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier();
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        hADBDialectExt0.getCreateSequenceSQL("", "", "", "", "", "", true, databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier();
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        hADBDialectExt0.getDropIndexSQL("quG}[N/v@YQau1i{re)", "quG}[N/v@YQau1i{re)", false, databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier("45", "45");
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        hADBDialectExt0.getRenameViewSQL("45", "45", databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      boolean boolean0 = hADBDialectExt0.supportsColumnComment();
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "hL", "", 831, "hL", 1998, 831, 1111, 1998, "hL", "", 1998, 1117, "sun java system high availabilitylaso-modified");
      // Undeclared exception!
      try {
        hADBDialectExt0.getTypeName(tableColumnInfo0);
        fail("Expecting exception: MappingException");
      } catch(MappingException e) {
        /*
         * No Dialect mapping for JDBC type: 831
         */
      }
  }

  @Test
  public void test16()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      boolean boolean0 = hADBDialectExt0.supportsCreateTable();
      assertEquals(false, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try {
        hADBDialectExt0.getCreateIndexSQL("max", "max", "max", stringArray0, false, (String) null, (String) null, (DatabaseObjectQualifier) null, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier();
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        hADBDialectExt0.getSequenceInformationSQL("21H2;\",|x@?", databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test19()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      boolean boolean0 = hADBDialectExt0.supportsAddColumn();
      assertEquals(false, boolean0);
  }

  @Test
  public void test20()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      boolean boolean0 = hADBDialectExt0.supportsCorrelatedSubQuery();
      assertEquals(false, boolean0);
  }

  @Test
  public void test21()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      boolean boolean0 = hADBDialectExt0.supportsAlterColumnType();
      assertEquals(true, boolean0);
  }

  @Test
  public void test22()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier((String) null, (String) null);
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      try {
        hADBDialectExt0.getColumnDropSQL((String) null, (String) null, databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test23()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      String[] stringArray0 = new String[6];
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier("55^c", "55^c");
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        hADBDialectExt0.getUpdateSQL("55^c", stringArray0, stringArray0, stringArray0, stringArray0, stringArray0, databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test24()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      String string0 = hADBDialectExt0.getMaxFunction();
      assertEquals("max", string0);
  }

  @Test
  public void test25()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      boolean boolean0 = hADBDialectExt0.supportsRenameView();
      assertEquals(false, boolean0);
  }

  @Test
  public void test26()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      boolean boolean0 = hADBDialectExt0.supportsAlterColumnNull();
      assertEquals(false, boolean0);
  }

  @Test
  public void test27()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      DialectType dialectType0 = hADBDialectExt0.getDialectType();
      assertEquals(DialectType.HADB, dialectType0);
  }

  @Test
  public void test28()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      boolean boolean0 = hADBDialectExt0.supportsDropView();
      assertEquals(false, boolean0);
  }

  @Test
  public void test29()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier();
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        hADBDialectExt0.getViewDefinitionSQL("", databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test30()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier();
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        hADBDialectExt0.getAddColumnSQL((TableColumnInfo) null, databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Sun HADB doesn't support adding new columns
         */
      }
  }

  @Test
  public void test31()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      String string0 = hADBDialectExt0.getLengthFunction(1001);
      assertEquals("char_length", string0);
  }

  @Test
  public void test32()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      boolean boolean0 = hADBDialectExt0.supportsInsertInto();
      assertEquals(false, boolean0);
  }

  @Test
  public void test33()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "", "", (-1), "", 0, 0, 833, 833, "", "", (-1), 1594, "");
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier("", "");
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        hADBDialectExt0.getColumnNullableAlterSQL(tableColumnInfo0, databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test34()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      int int0 = hADBDialectExt0.getMaxScale(1);
      assertEquals(0, int0);
  }

  @Test
  public void test35()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        hADBDialectExt0.getTableDropSQL((ITableInfo) null, true, false, (DatabaseObjectQualifier) null, sqlGenerationPreferences0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test36()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier();
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      String string0 = hADBDialectExt0.getDropPrimaryKeySQL("char_length", "char_length", databaseObjectQualifier0, sqlGenerationPreferences0);
      assertEquals("ALTER TABLE char_length DROP PRIMARY KEY", string0);
  }

  @Test
  public void test37()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("5^O,nxX=H]qzf", "5^O,nxX=H]qzf", "5^O,nxX=H]qzf", "5^O,nxX=H]qzf", (-1), "5^O,nxX=H]qzf", (-1), (-1), 0, 0, "5^O,nxX=H]qzf", "5^O,nxX=H]qzf", (-1), 1800, "5^O,nxX=H]qzf");
      boolean boolean0 = hADBDialectExt0.canPasteTo((IDatabaseObjectInfo) tableColumnInfo0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test38()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier(",un java system high availabilitypq>@oe~z", ",un java system high availabilitypq>@oe~z");
      // Undeclared exception!
      try {
        hADBDialectExt0.getDropConstraintSQL("ALTER TABLE ,un java system high availabilitypq>@oe~z RENAME COLUMN ,un java system high availabilitypq>@oe~z ,un java system high availabilitypq>@oe~z", "ALTER TABLE ,un java system high availabilitypq>@oe~z RENAME COLUMN ,un java system high availabilitypq>@oe~z ,un java system high availabilitypq>@oe~z", databaseObjectQualifier0, (SqlGenerationPreferences) null);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test39()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier();
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        hADBDialectExt0.getInsertIntoSQL("", (List<String>) null, "", databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test40()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier();
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      String string0 = hADBDialectExt0.getDropForeignKeySQL("21H2;\",|x@?", (String) null, databaseObjectQualifier0, sqlGenerationPreferences0);
      assertEquals("ALTER TABLE null DROP CONSTRAINT \"21H2;\",|x@?\"", string0);
  }

  @Test
  public void test41()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier();
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        hADBDialectExt0.getRenameTableSQL("char_length", "ALTER TABLE char_length DROP PRIMARY KEY", databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test42()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      boolean boolean0 = hADBDialectExt0.supportsAlterColumnDefault();
      assertEquals(true, boolean0);
  }

  @Test
  public void test43()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      DatabaseObjectQualifier databaseObjectQualifier0 = new DatabaseObjectQualifier();
      SqlGenerationPreferences sqlGenerationPreferences0 = new SqlGenerationPreferences();
      // Undeclared exception!
      try {
        hADBDialectExt0.getCreateViewSQL("sun java system high availabilitylaso-modified", "sun java system high availabilitylaso-modified", "sun java system high availabilitylaso-modified", databaseObjectQualifier0, sqlGenerationPreferences0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * Not yet implemented
         */
      }
  }

  @Test
  public void test44()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      int int0 = hADBDialectExt0.getColumnLength(2005, 2005);
      assertEquals(Integer.MAX_VALUE, int0);
  }

  @Test
  public void test45()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      int int0 = hADBDialectExt0.getColumnLength(360, 360);
      assertEquals(360, int0);
  }

  @Test
  public void test46()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      boolean boolean0 = hADBDialectExt0.supportsProduct("sun java system high availabilitylast-modified", "sun java system high availabilitylast-modified");
      assertEquals(true, boolean0);
  }

  @Test
  public void test47()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      boolean boolean0 = hADBDialectExt0.supportsProduct((String) null, (String) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test48()  throws Throwable  {
      HADBDialectExt hADBDialectExt0 = new HADBDialectExt();
      boolean boolean0 = hADBDialectExt0.supportsProduct("last-modified", "last-modified");
      assertEquals(false, boolean0);
  }
}
