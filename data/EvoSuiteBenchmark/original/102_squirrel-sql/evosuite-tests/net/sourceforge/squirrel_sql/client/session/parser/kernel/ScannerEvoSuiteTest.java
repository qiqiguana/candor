/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.client.session.parser.kernel;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.File;
import java.io.IOException;
import net.sourceforge.squirrel_sql.client.session.parser.kernel.ErrorStream;
import net.sourceforge.squirrel_sql.client.session.parser.kernel.Scanner;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ScannerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Scanner.FBuffer scanner_FBuffer0 = null;
      try {
        scanner_FBuffer0 = new Scanner.FBuffer((File) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("Could not find class [");
      assertNotNull(scanner_SBuffer0);
      
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner((Scanner.Buffer) scanner_SBuffer0, errorStream0);
      scanner0.setPos(1);
      assertEquals(2, scanner_SBuffer0._pos);
      assertEquals('o', scanner_SBuffer0.read());
  }

  @Test
  public void test2()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("Could not find class [");
      assertNotNull(scanner_SBuffer0);
      
      scanner_SBuffer0.setIndex((-510));
      assertEquals(1, scanner_SBuffer0._pos);
      assertEquals('C', scanner_SBuffer0.read());
  }

  @Test
  public void test3()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("O>1u%oFQ>J6(H.'*");
      assertNotNull(scanner_SBuffer0);
      
      scanner_SBuffer0.setIndex(18);
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner((Scanner.Buffer) scanner_SBuffer0, errorStream0);
      assertEquals(17, scanner_SBuffer0._pos);
      assertEquals(17, scanner_SBuffer0._bufLen);
  }

  @Test
  public void test4()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("\n\n");
      assertNotNull(scanner_SBuffer0);
      
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner((Scanner.Buffer) scanner_SBuffer0, errorStream0);
      assertEquals('\uFFFF', scanner_SBuffer0.read());
      assertEquals(2, scanner_SBuffer0._pos);
  }
}
