/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.sql;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.DriverPropertyInfo;
import java.util.Properties;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverProperty;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SQLDriverPropertyCollectionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      DriverPropertyInfo[] driverPropertyInfoArray0 = new DriverPropertyInfo[1];
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("TimePeriodA=nchor.EN", "TimePeriodA=nchor.EN");
      driverPropertyInfoArray0[0] = driverPropertyInfo0;
      sQLDriverPropertyCollection0.applyDriverPropertynfo(driverPropertyInfoArray0);
      sQLDriverPropertyCollection0.applyTo((Properties) null);
      assertEquals(1, sQLDriverPropertyCollection0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      DriverPropertyInfo[] driverPropertyInfoArray0 = new DriverPropertyInfo[1];
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("TimePeriodA=nchor.EN", "TimePeriodA=nchor.EN");
      driverPropertyInfoArray0[0] = driverPropertyInfo0;
      sQLDriverPropertyCollection0.applyDriverPropertynfo(driverPropertyInfoArray0);
      SQLDriverProperty sQLDriverProperty0 = sQLDriverPropertyCollection0.getDriverProperty(0);
      sQLDriverPropertyCollection0.addDriverProperty(sQLDriverProperty0);
      assertEquals(2, sQLDriverPropertyCollection0.size());
      assertEquals("TimePeriodA=nchor.EN", sQLDriverProperty0.getName());
  }

  @Test
  public void test2()  throws Throwable  {
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriverProperty[] sQLDriverPropertyArray0 = sQLDriverPropertyCollection0.getDriverProperties();
      assertNotNull(sQLDriverPropertyArray0);
  }

  @Test
  public void test3()  throws Throwable  {
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      sQLDriverPropertyCollection0.clear();
      assertEquals(0, sQLDriverPropertyCollection0.size());
  }

  @Test
  public void test4()  throws Throwable  {
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      DriverPropertyInfo[] driverPropertyInfoArray0 = new DriverPropertyInfo[1];
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("TimePeriodA=nchor.EN", "TimePeriodA=nchor.EN");
      driverPropertyInfoArray0[0] = driverPropertyInfo0;
      sQLDriverPropertyCollection0.applyDriverPropertynfo(driverPropertyInfoArray0);
      SQLDriverProperty sQLDriverProperty0 = sQLDriverPropertyCollection0.getDriverProperty(0);
      sQLDriverPropertyCollection0.setDriverProperty(0, sQLDriverProperty0);
      assertEquals(2, sQLDriverPropertyCollection0.size());
  }

  @Test
  public void test5()  throws Throwable  {
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      sQLDriverPropertyCollection0.removeDriverProperty("TimePeriodA=nchor.EN");
      assertEquals(0, sQLDriverPropertyCollection0.size());
  }

  @Test
  public void test6()  throws Throwable  {
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("?:6q`P,+/$.,", "?:6q`P,+/$.,");
      SQLDriverProperty sQLDriverProperty0 = new SQLDriverProperty(driverPropertyInfo0);
      SQLDriverProperty[] sQLDriverPropertyArray0 = new SQLDriverProperty[2];
      sQLDriverPropertyArray0[0] = sQLDriverProperty0;
      sQLDriverPropertyArray0[1] = sQLDriverProperty0;
      sQLDriverPropertyArray0[1].setIsSpecified(true);
      sQLDriverPropertyCollection0.setDriverProperties(sQLDriverPropertyArray0);
      Properties properties0 = new Properties();
      sQLDriverPropertyCollection0.applyTo(properties0);
      assertEquals(2, sQLDriverPropertyCollection0.size());
      assertEquals("{?:6q`P,+/$.,=?:6q`P,+/$.,}", properties0.toString());
      assertEquals(1, properties0.size());
  }

  @Test
  public void test7()  throws Throwable  {
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      sQLDriverPropertyCollection0.applyDriverPropertynfo((DriverPropertyInfo[]) null);
      assertEquals(1, sQLDriverPropertyCollection0.size());
  }

  @Test
  public void test8()  throws Throwable  {
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      DriverPropertyInfo[] driverPropertyInfoArray0 = new DriverPropertyInfo[3];
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("?:6q`P,+/$.,", "?:6q`P,+/$.,");
      driverPropertyInfoArray0[0] = driverPropertyInfo0;
      driverPropertyInfoArray0[1] = driverPropertyInfoArray0[0];
      // Undeclared exception!
      try {
        sQLDriverPropertyCollection0.applyDriverPropertynfo(driverPropertyInfoArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
