/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Component;
import java.awt.LayoutManager;
import java.awt.Panel;
import java.awt.event.KeyEvent;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuKeyEvent;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.IRestorableTextComponent;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.IToolkitBeepHelper;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.RestorableJTextArea;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.RestorableJTextField;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.StringFieldKeyTextHandler;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.ToolkitBeepHelper;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class StringFieldKeyTextHandlerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RestorableJTextArea restorableJTextArea0 = new RestorableJTextArea();
      ToolkitBeepHelper toolkitBeepHelper0 = new ToolkitBeepHelper();
      StringFieldKeyTextHandler stringFieldKeyTextHandler0 = new StringFieldKeyTextHandler((IRestorableTextComponent) restorableJTextArea0, 0, true, (IToolkitBeepHelper) toolkitBeepHelper0);
      StringFieldKeyTextHandler stringFieldKeyTextHandler1 = new StringFieldKeyTextHandler((IRestorableTextComponent) restorableJTextArea0, 1, true, (IToolkitBeepHelper) toolkitBeepHelper0);
      MenuElement[] menuElementArray0 = new MenuElement[1];
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent((Component) restorableJTextArea0, 937, (-8L), 1159, 1159, '', menuElementArray0, menuSelectionManager0);
      stringFieldKeyTextHandler0.keyTyped((KeyEvent) menuKeyEvent0);
      stringFieldKeyTextHandler1.keyTyped((KeyEvent) menuKeyEvent0);
      assertEquals(true, menuKeyEvent0.isConsumed());
  }

  @Test
  public void test1()  throws Throwable  {
      RestorableJTextArea restorableJTextArea0 = new RestorableJTextArea();
      ToolkitBeepHelper toolkitBeepHelper0 = new ToolkitBeepHelper();
      StringFieldKeyTextHandler stringFieldKeyTextHandler0 = new StringFieldKeyTextHandler((IRestorableTextComponent) restorableJTextArea0, 0, true, (IToolkitBeepHelper) toolkitBeepHelper0);
      StringFieldKeyTextHandler stringFieldKeyTextHandler1 = new StringFieldKeyTextHandler((IRestorableTextComponent) restorableJTextArea0, 1, true, (IToolkitBeepHelper) toolkitBeepHelper0);
      MenuElement[] menuElementArray0 = new MenuElement[1];
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent((Component) restorableJTextArea0, 937, (-8L), 1159, 1159, '', menuElementArray0, menuSelectionManager0);
      stringFieldKeyTextHandler0.keyTyped((KeyEvent) menuKeyEvent0);
      KeyEvent keyEvent0 = new KeyEvent((Component) restorableJTextArea0, 744, (-496L), 0, 0, '\r');
      assertEquals("<null>", restorableJTextArea0.getText());
      
      stringFieldKeyTextHandler1.keyTyped(keyEvent0);
      assertEquals(true, keyEvent0.isConsumed());
  }

  @Test
  public void test2()  throws Throwable  {
      RestorableJTextField restorableJTextField0 = new RestorableJTextField();
      ToolkitBeepHelper toolkitBeepHelper0 = new ToolkitBeepHelper();
      Panel panel0 = new Panel((LayoutManager) null);
      KeyEvent keyEvent0 = new KeyEvent((Component) panel0, 463, 1308L, (int) 'I', 0, 'I');
      StringFieldKeyTextHandler stringFieldKeyTextHandler0 = new StringFieldKeyTextHandler((IRestorableTextComponent) restorableJTextField0, 676, false, (IToolkitBeepHelper) toolkitBeepHelper0);
      stringFieldKeyTextHandler0.keyTyped(keyEvent0);
      assertEquals("java.awt.Panel[panel1,0,0,0x0,invalid]", panel0.toString());
      assertEquals("java.awt.event.KeyEvent[unknown type,keyCode=0,keyText=Unknown keyCode: 0x0,keyChar='I',modifiers=Alt+Shift,extModifiers=Shift,keyLocation=KEY_LOCATION_UNKNOWN,rawCode=0,primaryLevelUnicode=0,scancode=0] on panel1", keyEvent0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      RestorableJTextField restorableJTextField0 = new RestorableJTextField();
      ToolkitBeepHelper toolkitBeepHelper0 = new ToolkitBeepHelper();
      StringFieldKeyTextHandler stringFieldKeyTextHandler0 = new StringFieldKeyTextHandler((IRestorableTextComponent) restorableJTextField0, (-1989), true, (IToolkitBeepHelper) toolkitBeepHelper0);
      KeyEvent keyEvent0 = new KeyEvent((Component) restorableJTextField0, (-1989), (long) (-1989), 0, 1447, '\r');
      stringFieldKeyTextHandler0.keyTyped(keyEvent0);
      assertEquals(false, keyEvent0.isConsumed());
  }
}
