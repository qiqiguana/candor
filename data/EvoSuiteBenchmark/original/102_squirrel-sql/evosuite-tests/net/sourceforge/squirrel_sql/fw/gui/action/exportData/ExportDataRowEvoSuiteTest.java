/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.gui.action.exportData;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import net.sourceforge.squirrel_sql.fw.gui.action.exportData.ExportDataRow;
import net.sourceforge.squirrel_sql.fw.gui.action.exportData.IExportDataCell;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ExportDataRowEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Vector<IExportDataCell> vector0 = new Vector<IExportDataCell>();
      ExportDataRow exportDataRow0 = new ExportDataRow((List<IExportDataCell>) vector0, 621);
      assertNotNull(exportDataRow0);
      
      Iterator<IExportDataCell> iterator0 = exportDataRow0.getCells();
      assertEquals(621, exportDataRow0.getRowIndex());
      assertNotNull(iterator0);
  }

  @Test
  public void test1()  throws Throwable  {
      Vector<IExportDataCell> vector0 = new Vector<IExportDataCell>();
      ExportDataRow exportDataRow0 = new ExportDataRow((List<IExportDataCell>) vector0, 621);
      assertNotNull(exportDataRow0);
      
      int int0 = exportDataRow0.getRowIndex();
      assertEquals(621, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      ExportDataRow exportDataRow0 = null;
      try {
        exportDataRow0 = new ExportDataRow((List<IExportDataCell>) null, (-1));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * cells = null
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Vector<IExportDataCell> vector0 = new Vector<IExportDataCell>();
      ExportDataRow exportDataRow0 = null;
      try {
        exportDataRow0 = new ExportDataRow((List<IExportDataCell>) vector0, (-618));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * rowIndex < 0
         */
      }
  }
}
