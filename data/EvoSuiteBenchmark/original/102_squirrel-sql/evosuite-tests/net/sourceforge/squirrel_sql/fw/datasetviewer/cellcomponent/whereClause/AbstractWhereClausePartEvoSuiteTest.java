/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.whereClause;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import javax.swing.JTable;
import net.sourceforge.squirrel_sql.fw.datasetviewer.ColumnDisplayDefinition;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.DataTypeFloat;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.IDataTypeComponent;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.whereClause.IsNullWhereClausePart;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.whereClause.NoParameterWhereClausePart;
import net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.whereClause.ParameterWhereClausePart;
import net.sourceforge.squirrel_sql.fw.dialects.DialectType;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AbstractWhereClausePartEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition((-516), "z_e&PLS7+3");
      IsNullWhereClausePart isNullWhereClausePart0 = new IsNullWhereClausePart(columnDisplayDefinition0);
      assertNotNull(isNullWhereClausePart0);
      
      StringBuilder stringBuilder0 = new StringBuilder();
      isNullWhereClausePart0.appendToClause(stringBuilder0);
      assertEquals(" WHERE z_e&PLS7+3 is null", stringBuilder0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(4, "K|KADZ};n,=UNhn");
      IsNullWhereClausePart isNullWhereClausePart0 = new IsNullWhereClausePart(columnDisplayDefinition0);
      String string0 = isNullWhereClausePart0.getColumn();
      assertEquals("K|KADZ};n,=UNhn", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(193, "");
      Object[][] objectArray0 = new Object[8][3];
      Object[] objectArray1 = new Object[7];
      objectArray1[0] = (Object) "SwingSelectedKey";
      objectArray1[1] = (Object) "";
      objectArray1[2] = (Object) "SwingSelectedKey";
      objectArray1[3] = (Object) "SwingSelectedKey";
      objectArray1[4] = objectArray1[0];
      objectArray1[5] = (Object) columnDisplayDefinition0;
      objectArray1[6] = (Object) columnDisplayDefinition0;
      objectArray0[5] = objectArray1;
      JTable jTable0 = new JTable(objectArray0, objectArray0[5]);
      DataTypeFloat dataTypeFloat0 = new DataTypeFloat(jTable0, columnDisplayDefinition0);
      ParameterWhereClausePart parameterWhereClausePart0 = null;
      try {
        parameterWhereClausePart0 = new ParameterWhereClausePart(columnDisplayDefinition0, (Object) "SwingSelectedKey", (IDataTypeComponent) dataTypeFloat0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * column must be not empty
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ParameterWhereClausePart parameterWhereClausePart0 = null;
      try {
        parameterWhereClausePart0 = new ParameterWhereClausePart((ColumnDisplayDefinition) null, (Object) null, (IDataTypeComponent) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * columnDef must not be null
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition((-516), "z_e&PLS7+3");
      IsNullWhereClausePart isNullWhereClausePart0 = new IsNullWhereClausePart(columnDisplayDefinition0);
      assertNotNull(isNullWhereClausePart0);
      
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = (StringBuilder)stringBuilder0.append((float) (-516));
      isNullWhereClausePart0.appendToClause(stringBuilder1);
      assertEquals("-516.0 AND z_e&PLS7+3 is null", stringBuilder1.toString());
      assertEquals("-516.0 AND z_e&PLS7+3 is null", stringBuilder0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      DialectType dialectType0 = DialectType.INTERBASE;
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition(146, "S*x<Fv~9a bpp1`nZ", "S*x<Fv~9a bpp1`nZ", "", 146, "S*x<Fv~9a bpp1`nZ", true, 146, 146, 146, true, true, true, dialectType0);
      NoParameterWhereClausePart noParameterWhereClausePart0 = null;
      try {
        noParameterWhereClausePart0 = new NoParameterWhereClausePart(columnDisplayDefinition0, "");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * clause must not be blank.
         */
      }
  }
}
