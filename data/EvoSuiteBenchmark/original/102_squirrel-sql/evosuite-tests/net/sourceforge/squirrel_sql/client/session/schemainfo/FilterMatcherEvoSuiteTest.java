/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.client.session.schemainfo;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sourceforge.squirrel_sql.client.session.schemainfo.FilterMatcher;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FilterMatcherEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FilterMatcher filterMatcher0 = new FilterMatcher("&';YgSX&Lo", "&';YgSX&Lo");
      assertNotNull(filterMatcher0);
      
      String string0 = filterMatcher0.getMetaDataMatchString();
      assertNotNull(string0);
      assertEquals("&';YgSX&Lo", filterMatcher0.getSqlLikeMatchString());
      assertEquals("&';YgSX&Lo", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      FilterMatcher filterMatcher0 = new FilterMatcher((String) null, (String) null);
      assertNotNull(filterMatcher0);
      
      boolean boolean0 = filterMatcher0.matches((String) null);
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      FilterMatcher filterMatcher0 = new FilterMatcher("", "");
      assertNotNull(filterMatcher0);
      
      String string0 = filterMatcher0.getSqlLikeMatchString();
      assertNotNull(string0);
      assertEquals("%", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      FilterMatcher filterMatcher0 = new FilterMatcher("wd_y,K", "wd_y,K");
      assertEquals("wd_y", filterMatcher0.getSqlLikeMatchString());
      assertNotNull(filterMatcher0);
  }

  @Test
  public void test4()  throws Throwable  {
      FilterMatcher filterMatcher0 = new FilterMatcher("_", "_");
      assertNotNull(filterMatcher0);
      
      boolean boolean0 = filterMatcher0.matches(" sequence.length()=");
      assertEquals(false, boolean0);
      assertEquals("_", filterMatcher0.getSqlLikeMatchString());
  }

  @Test
  public void test5()  throws Throwable  {
      FilterMatcher filterMatcher0 = new FilterMatcher(" dstBegin=", " dstBegin=");
      assertNotNull(filterMatcher0);
      
      boolean boolean0 = filterMatcher0.matches(" dstBegin=");
      assertEquals(" dstBegin=", filterMatcher0.getSqlLikeMatchString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      FilterMatcher filterMatcher0 = new FilterMatcher("/NZy}", (String) null);
      assertNotNull(filterMatcher0);
      
      String string0 = filterMatcher0.getSqlLikeMatchString();
      assertNotNull(string0);
      assertEquals("/NZy}", string0);
  }
}
