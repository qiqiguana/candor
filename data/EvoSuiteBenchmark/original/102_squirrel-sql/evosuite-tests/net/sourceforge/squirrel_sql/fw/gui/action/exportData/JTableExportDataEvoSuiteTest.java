/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.gui.action.exportData;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Iterator;
import javax.swing.JTable;
import net.sourceforge.squirrel_sql.fw.gui.action.exportData.IExportDataRow;
import net.sourceforge.squirrel_sql.fw.gui.action.exportData.JTableExportData;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JTableExportDataEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JTable jTable0 = new JTable(50, 50);
      JTableExportData jTableExportData0 = new JTableExportData(jTable0, true);
      assertNotNull(jTableExportData0);
      
      Iterator<String> iterator0 = jTableExportData0.getHeaders();
      assertNotNull(iterator0);
      assertEquals(true, iterator0.hasNext());
      assertEquals(50, jTableExportData0.nbrSelRows);
  }

  @Test
  public void test1()  throws Throwable  {
      JTable jTable0 = new JTable(50, 50);
      jTable0.selectAll();
      JTableExportData jTableExportData0 = new JTableExportData(jTable0, true);
      assertEquals(50, jTableExportData0.nbrSelCols);
      assertEquals(50, jTableExportData0.nbrSelRows);
      assertNotNull(jTableExportData0);
  }

  @Test
  public void test2()  throws Throwable  {
      JTable jTable0 = new JTable(50, 50);
      jTable0.selectAll();
      JTableExportData jTableExportData0 = new JTableExportData(jTable0, false);
      assertEquals(50, jTableExportData0.nbrSelCols);
  }

  @Test
  public void test3()  throws Throwable  {
      JTable jTable0 = new JTable(50, 50);
      JTableExportData jTableExportData0 = new JTableExportData(jTable0, true);
      assertNotNull(jTableExportData0);
      
      Iterator<IExportDataRow> iterator0 = jTableExportData0.getRows();
      assertEquals(true, iterator0.hasNext());
      assertNotNull(iterator0);
  }
}
