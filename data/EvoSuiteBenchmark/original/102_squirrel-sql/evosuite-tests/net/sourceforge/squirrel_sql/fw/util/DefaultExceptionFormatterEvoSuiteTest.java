/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sourceforge.squirrel_sql.fw.util.DefaultExceptionFormatter;
import net.sourceforge.squirrel_sql.fw.util.ExceptionFormatter;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DefaultExceptionFormatterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultExceptionFormatter defaultExceptionFormatter0 = new DefaultExceptionFormatter();
      boolean boolean0 = defaultExceptionFormatter0.formatsException((Throwable) null);
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultExceptionFormatter defaultExceptionFormatter0 = new DefaultExceptionFormatter();
      // Undeclared exception!
      try {
        defaultExceptionFormatter0.format((Throwable) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * format: th cannot be null
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultExceptionFormatter defaultExceptionFormatter0 = new DefaultExceptionFormatter();
      // Undeclared exception!
      try {
        defaultExceptionFormatter0.defaultFormatSQLException((Throwable) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      DefaultExceptionFormatter defaultExceptionFormatter0 = new DefaultExceptionFormatter();
      defaultExceptionFormatter0.setCustomExceptionFormatter((ExceptionFormatter) defaultExceptionFormatter0);
      defaultExceptionFormatter0.setCustomExceptionFormatter((ExceptionFormatter) defaultExceptionFormatter0);
  }

  @Test
  public void test4()  throws Throwable  {
      DefaultExceptionFormatter defaultExceptionFormatter0 = new DefaultExceptionFormatter();
      // Undeclared exception!
      try {
        defaultExceptionFormatter0.setCustomExceptionFormatter((ExceptionFormatter) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * customFormatter cannot be null
         */
      }
  }
}
