/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.fw.gui.action.exportData;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.File;
import javax.swing.JTable;
import net.sourceforge.squirrel_sql.fw.datasetviewer.ColumnDisplayDefinition;
import net.sourceforge.squirrel_sql.fw.gui.action.TableExportCsvController;
import net.sourceforge.squirrel_sql.fw.gui.action.exportData.DataExportXMLWriter;
import net.sourceforge.squirrel_sql.fw.gui.action.exportData.ExportDataColumn;
import net.sourceforge.squirrel_sql.fw.gui.action.exportData.IExportData;
import net.sourceforge.squirrel_sql.fw.gui.action.exportData.IExportDataCell;
import net.sourceforge.squirrel_sql.fw.gui.action.exportData.JTableExportData;
import net.sourceforge.squirrel_sql.fw.sql.ProgressAbortCallback;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DataExportXMLWriterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DataExportXMLWriter dataExportXMLWriter0 = new DataExportXMLWriter((File) null, (TableExportCsvController) null, true, (ProgressAbortCallback) null);
      JTable jTable0 = new JTable(7, 7);
      JTableExportData jTableExportData0 = new JTableExportData(jTable0, true);
      try {
        dataExportXMLWriter0.write((IExportData) jTableExportData0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * name can't be null
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      DataExportXMLWriter dataExportXMLWriter0 = new DataExportXMLWriter((File) null, (TableExportCsvController) null, true, (ProgressAbortCallback) null);
      ColumnDisplayDefinition columnDisplayDefinition0 = new ColumnDisplayDefinition((-1060), (String) null);
      ExportDataColumn exportDataColumn0 = new ExportDataColumn(columnDisplayDefinition0, (Object) "javax.swing.JFormattedTextField[,0,0,0x0,invalid,layout=javax.swing.plaf.basic.BasicTextUI$UpdateHandler,alignmentX=0.0,alignmentY=0.0,border=javax.swing.plaf.BorderUIResource$CompoundBorderUIResource@3f961354,flags=296,maximumSize=,minimumSize=,preferredSize=,caretColor=sun.swing.PrintColorUIResource[r=51,g=51,b=51],disabledTextColor=javax.swing.plaf.ColorUIResource[r=184,g=207,b=229],editable=true,margin=javax.swing.plaf.InsetsUIResource[top=0,left=0,bottom=0,right=0],selectedTextColor=sun.swing.PrintColorUIResource[r=51,g=51,b=51],selectionColor=javax.swing.plaf.ColorUIResource[r=184,g=207,b=229],columns=0,columnWidth=0,command=,horizontalAlignment=LEADING]", (-1060), (-1060));
      try {
        dataExportXMLWriter0.addCell((IExportDataCell) exportDataColumn0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
