/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.squirrel_sql.client.preferences;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.beans.PropertyChangeListener;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.swing.plaf.metal.MetalLabelUI;
import javax.swing.table.DefaultTableColumnModel;
import net.sourceforge.squirrel_sql.client.action.ActionKeys;
import net.sourceforge.squirrel_sql.client.gui.mainframe.MainFrameWindowState;
import net.sourceforge.squirrel_sql.client.plugin.PluginStatus;
import net.sourceforge.squirrel_sql.client.preferences.IUpdateSettings;
import net.sourceforge.squirrel_sql.client.preferences.SquirrelPreferences;
import net.sourceforge.squirrel_sql.client.preferences.UpdateSettings;
import net.sourceforge.squirrel_sql.client.session.properties.SessionProperties;
import net.sourceforge.squirrel_sql.fw.util.ProxySettings;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SquirrelPreferencesEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertNotNull(squirrelPreferences0);
      assertEquals(true, squirrelPreferences0.isJdbcDebugDontDebug());
      
      squirrelPreferences0.doJdbcDebugToStream();
      assertEquals(false, squirrelPreferences0.isJdbcDebugDontDebug());
      assertEquals(true, squirrelPreferences0.isJdbcDebugToStream());
  }

  @Test
  public void test1()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
          assertNotNull(squirrelPreferences0);
          
          squirrelPreferences0.save();
          assertEquals(true, squirrelPreferences0.getShowAliasesToolBar());
          assertEquals(true, squirrelPreferences0.isFirstRun());
          assertEquals(true, squirrelPreferences0.getWarnForUnsavedFileEdits());
          assertEquals(true, squirrelPreferences0.getTabbedStyle());
          assertEquals(true, squirrelPreferences0.getWarnForUnsavedBufferEdits());
          assertEquals(true, squirrelPreferences0.getShowToolTips());
          assertEquals(true, squirrelPreferences0.getShowDebugLogMessage());
          assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
          assertEquals(true, squirrelPreferences0.getWarnJreJdbcMismatch());
          assertEquals(true, squirrelPreferences0.getSelectOnRightMouseClick());
          assertEquals(true, squirrelPreferences0.getShowColoriconsInToolbar());
          assertEquals(0, squirrelPreferences0.getJdbcDebugType());
          assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
          assertEquals(30, squirrelPreferences0.getLoginTimeout());
          assertEquals(true, squirrelPreferences0.getShowDriversToolBar());
          assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
          assertEquals(true, squirrelPreferences0.getConfirmSessionClose());
          assertEquals(true, squirrelPreferences0.getShowErrorLogMessages());
          assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
          assertEquals(true, squirrelPreferences0.getShowMainToolBar());
          assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
          assertEquals(true, squirrelPreferences0.getShowInfoLogMessages());
          assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
          assertEquals(true, squirrelPreferences0.getShowSessionStartupTimeHint());
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test2()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertNotNull(squirrelPreferences0);
      
      // Undeclared exception!
      try {
        squirrelPreferences0.setPluginStatus(0, (PluginStatus) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertNotNull(squirrelPreferences0);
      
      // Undeclared exception!
      try {
        squirrelPreferences0.getPluginStatus(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.doJdbcDebugToWriter();
      squirrelPreferences0.setNewSessionView("");
      assertEquals(2, squirrelPreferences0.getJdbcDebugType());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
  }

  @Test
  public void test5()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setMainFrameWindowState((MainFrameWindowState) null);
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(true, squirrelPreferences0.isJdbcDebugDontDebug());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
  }

  @Test
  public void test6()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.dontDoJdbcDebug();
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(0, squirrelPreferences0.getJdbcDebugType());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
  }

  @Test
  public void test7()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setPreferredLocale("JOw'~m{r9&)o~p>Gr");
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(true, squirrelPreferences0.isJdbcDebugDontDebug());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
  }

  @Test
  public void test8()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      MetalLabelUI metalLabelUI0 = new MetalLabelUI();
      squirrelPreferences0.addPropertyChangeListener((PropertyChangeListener) metalLabelUI0);
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(0, squirrelPreferences0.getJdbcDebugType());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
  }

  @Test
  public void test9()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowPleaseWaitDialog(true);
      assertEquals(true, squirrelPreferences0.getShowPleaseWaitDialog());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
  }

  @Test
  public void test10()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      squirrelPreferences0.removePropertyChangeListener((PropertyChangeListener) defaultTableColumnModel0);
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(false, squirrelPreferences0.isJdbcDebugToStream());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
  }

  @Test
  public void test11()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertNotNull(squirrelPreferences0);
      
      ActionKeys actionKeys0 = new ActionKeys("TimePeriodAnchor.MIDDLE", "TimePeriodAnchor.MIDDLE", 283);
      // Undeclared exception!
      try {
        squirrelPreferences0.setActionKeys(283, actionKeys0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 283
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setSelectOnRightMouseClick(true);
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(true, squirrelPreferences0.getSelectOnRightMouseClick());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(0, squirrelPreferences0.getJdbcDebugType());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
  }

  @Test
  public void test13()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertNotNull(squirrelPreferences0);
      
      // Undeclared exception!
      try {
        squirrelPreferences0.getActionKeys(100);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 100
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setNewSessionView("");
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(true, squirrelPreferences0.isJdbcDebugDontDebug());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
  }

  @Test
  public void test15()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setNewSessionView((String) null);
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(true, squirrelPreferences0.isJdbcDebugDontDebug());
  }

  @Test
  public void test16()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertNotNull(squirrelPreferences0);
      
      SessionProperties sessionProperties0 = new SessionProperties();
      squirrelPreferences0.setSessionProperties(sessionProperties0);
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(0, squirrelPreferences0.getJdbcDebugType());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
  }

  @Test
  public void test17()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setTabbedStyle(true);
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(true, squirrelPreferences0.isJdbcDebugDontDebug());
  }

  @Test
  public void test18()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setTabbedStyle(false);
      assertEquals(false, squirrelPreferences0.getTabbedStyle());
  }

  @Test
  public void test19()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setUseScrollableTabbedPanesForSessionTabs(false);
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanesForSessionTabs());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(false, squirrelPreferences0.isJdbcDebugToStream());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
  }

  @Test
  public void test20()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setUseScrollableTabbedPanesForSessionTabs(true);
      assertEquals(true, squirrelPreferences0.getUseScrollableTabbedPanesForSessionTabs());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
  }

  @Test
  public void test21()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      
      squirrelPreferences0.setShowTabbedStyleHint(false);
      squirrelPreferences0.setShowTabbedStyleHint(false);
      assertEquals(false, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
  }

  @Test
  public void test22()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowContentsWhenDragging(false);
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(true, squirrelPreferences0.isJdbcDebugDontDebug());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
  }

  @Test
  public void test23()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowContentsWhenDragging(true);
      assertEquals(true, squirrelPreferences0.getShowContentsWhenDragging());
  }

  @Test
  public void test24()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowMainStatusBar(true);
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(false, squirrelPreferences0.isJdbcDebugToStream());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(true, squirrelPreferences0.isJdbcDebugDontDebug());
  }

  @Test
  public void test25()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowMainStatusBar(false);
      assertEquals(false, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
  }

  @Test
  public void test26()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowMainToolBar(true);
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(true, squirrelPreferences0.isJdbcDebugDontDebug());
  }

  @Test
  public void test27()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowMainToolBar(false);
      assertEquals(false, squirrelPreferences0.getShowMainToolBar());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
  }

  @Test
  public void test28()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowAliasesToolBar(true);
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(true, squirrelPreferences0.getShowAliasesToolBar());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(0, squirrelPreferences0.getJdbcDebugType());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
  }

  @Test
  public void test29()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowAliasesToolBar(false);
      assertEquals(false, squirrelPreferences0.getShowAliasesToolBar());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
  }

  @Test
  public void test30()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowDriversToolBar(true);
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(true, squirrelPreferences0.getShowDriversToolBar());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(false, squirrelPreferences0.isJdbcDebugToStream());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
  }

  @Test
  public void test31()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowDriversToolBar(false);
      assertEquals(false, squirrelPreferences0.getShowDriversToolBar());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
  }

  @Test
  public void test32()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowColoriconsInToolbar(true);
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(true, squirrelPreferences0.getShowColoriconsInToolbar());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(0, squirrelPreferences0.getJdbcDebugType());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
  }

  @Test
  public void test33()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowColoriconsInToolbar(false);
      assertEquals(false, squirrelPreferences0.getShowColoriconsInToolbar());
  }

  @Test
  public void test34()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowPluginFilesInSplashScreen(false);
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(true, squirrelPreferences0.isJdbcDebugDontDebug());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(false, squirrelPreferences0.getShowPluginFilesInSplashScreen());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
  }

  @Test
  public void test35()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowPluginFilesInSplashScreen(true);
      assertEquals(true, squirrelPreferences0.getShowPluginFilesInSplashScreen());
  }

  @Test
  public void test36()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      
      squirrelPreferences0.setLoginTimeout(1);
      assertEquals(1, squirrelPreferences0.getLoginTimeout());
  }

  @Test
  public void test37()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      
      squirrelPreferences0.setLargeScriptStmtCount(1);
      assertEquals(1, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
  }

  @Test
  public void test38()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      // Undeclared exception!
      try {
        squirrelPreferences0.setJdbcDebugType((-1294));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Invalid setDebugJdbcToStream of :-1294
         */
      }
  }

  @Test
  public void test39()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowToolTips(true);
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(false, squirrelPreferences0.isJdbcDebugToStream());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
  }

  @Test
  public void test40()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      
      squirrelPreferences0.setShowToolTips(false);
      assertEquals(false, squirrelPreferences0.getShowToolTips());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
  }

  @Test
  public void test41()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setUseScrollableTabbedPanes(true);
      squirrelPreferences0.setUseScrollableTabbedPanes(true);
      assertEquals(true, squirrelPreferences0.getUseScrollableTabbedPanes());
  }

  @Test
  public void test42()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setMaximizeSessionSheetOnOpen(false);
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(false, squirrelPreferences0.getMaximizeSessionSheetOnOpen());
      assertEquals(true, squirrelPreferences0.isJdbcDebugDontDebug());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
  }

  @Test
  public void test43()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setMaximizeSessionSheetOnOpen(true);
      assertEquals(true, squirrelPreferences0.getMaximizeSessionSheetOnOpen());
  }

  @Test
  public void test44()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      ActionKeys[] actionKeysArray0 = new ActionKeys[1];
      squirrelPreferences0.setActionKeys(actionKeysArray0);
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(false, squirrelPreferences0.isJdbcDebugToStream());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
  }

  @Test
  public void test45()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      PluginStatus[] pluginStatusArray0 = squirrelPreferences0.getPluginStatuses();
      assertNotNull(pluginStatusArray0);
      
      squirrelPreferences0.setPluginStatuses(pluginStatusArray0);
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(false, squirrelPreferences0.isJdbcDebugToStream());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
  }

  @Test
  public void test46()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      UpdateSettings updateSettings0 = new UpdateSettings();
      squirrelPreferences0.setUpdateSettings((IUpdateSettings) updateSettings0);
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(false, squirrelPreferences0.isJdbcDebugToStream());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
  }

  @Test
  public void test47()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      ProxySettings proxySettings0 = squirrelPreferences0.getProxySettings();
      assertNotNull(proxySettings0);
      
      squirrelPreferences0.setProxySettings(proxySettings0);
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(false, squirrelPreferences0.isJdbcDebugToStream());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
  }

  @Test
  public void test48()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setProxySettings((ProxySettings) null);
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(0, squirrelPreferences0.getJdbcDebugType());
  }

  @Test
  public void test49()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowLoadedDriversOnly(false);
      assertEquals(false, squirrelPreferences0.getShowLoadedDriversOnly());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(0, squirrelPreferences0.getJdbcDebugType());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
  }

  @Test
  public void test50()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowLoadedDriversOnly(true);
      assertEquals(true, squirrelPreferences0.getShowLoadedDriversOnly());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
  }

  @Test
  public void test51()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setFirstRun(true);
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(0, squirrelPreferences0.getJdbcDebugType());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(true, squirrelPreferences0.isFirstRun());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
  }

  @Test
  public void test52()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setFirstRun(false);
      assertEquals(false, squirrelPreferences0.isFirstRun());
  }

  @Test
  public void test53()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setConfirmSessionClose(true);
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(0, squirrelPreferences0.getJdbcDebugType());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(true, squirrelPreferences0.getConfirmSessionClose());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
  }

  @Test
  public void test54()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setConfirmSessionClose(false);
      assertEquals(false, squirrelPreferences0.getConfirmSessionClose());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
  }

  @Test
  public void test55()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setFileOpenInPreviousDir(true);
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(0, squirrelPreferences0.getJdbcDebugType());
  }

  @Test
  public void test56()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      
      squirrelPreferences0.setFileOpenInPreviousDir(false);
      assertEquals(false, squirrelPreferences0.isFileOpenInPreviousDir());
  }

  @Test
  public void test57()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setFileOpenInSpecifiedDir(false);
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(false, squirrelPreferences0.isJdbcDebugToStream());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
  }

  @Test
  public void test58()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertNotNull(squirrelPreferences0);
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      
      squirrelPreferences0.setFileOpenInSpecifiedDir(true);
      assertEquals(true, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(0, squirrelPreferences0.getJdbcDebugType());
  }

  @Test
  public void test59()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setFileSpecifiedDir((String) null);
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(0, squirrelPreferences0.getJdbcDebugType());
  }

  @Test
  public void test60()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setFilePreviousDir((String) null);
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(true, squirrelPreferences0.isJdbcDebugDontDebug());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
  }

  @Test
  public void test61()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      boolean boolean0 = squirrelPreferences0.isJdbcDebugDontDebug();
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(true, boolean0);
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
  }

  @Test
  public void test62()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setWarnJreJdbcMismatch(true);
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(true, squirrelPreferences0.getWarnJreJdbcMismatch());
      assertEquals(false, squirrelPreferences0.isJdbcDebugToStream());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
  }

  @Test
  public void test63()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setWarnJreJdbcMismatch(false);
      assertEquals(false, squirrelPreferences0.getWarnJreJdbcMismatch());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
  }

  @Test
  public void test64()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setWarnForUnsavedFileEdits(true);
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(0, squirrelPreferences0.getJdbcDebugType());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(true, squirrelPreferences0.getWarnForUnsavedFileEdits());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
  }

  @Test
  public void test65()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setWarnForUnsavedFileEdits(false);
      assertEquals(false, squirrelPreferences0.getWarnForUnsavedFileEdits());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
  }

  @Test
  public void test66()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setWarnForUnsavedBufferEdits(true);
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(false, squirrelPreferences0.isJdbcDebugToStream());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(true, squirrelPreferences0.getWarnForUnsavedBufferEdits());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
  }

  @Test
  public void test67()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setWarnForUnsavedBufferEdits(false);
      assertEquals(false, squirrelPreferences0.getWarnForUnsavedBufferEdits());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
  }

  @Test
  public void test68()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowSessionStartupTimeHint(true);
      assertEquals(0, squirrelPreferences0.getJdbcDebugType());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(true, squirrelPreferences0.getShowSessionStartupTimeHint());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
  }

  @Test
  public void test69()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowSessionStartupTimeHint(false);
      assertEquals(false, squirrelPreferences0.getShowSessionStartupTimeHint());
  }

  @Test
  public void test70()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowDebugLogMessages(true);
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(true, squirrelPreferences0.getShowDebugLogMessage());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(false, squirrelPreferences0.isJdbcDebugToStream());
  }

  @Test
  public void test71()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowDebugLogMessages(false);
      assertEquals(false, squirrelPreferences0.getShowDebugLogMessage());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
  }

  @Test
  public void test72()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowInfoLogMessages(true);
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(false, squirrelPreferences0.isJdbcDebugToStream());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(true, squirrelPreferences0.getShowInfoLogMessages());
  }

  @Test
  public void test73()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowInfoLogMessages(false);
      assertEquals(false, squirrelPreferences0.getShowInfoLogMessages());
  }

  @Test
  public void test74()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowErrorLogMessages(true);
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(true, squirrelPreferences0.getShowErrorLogMessages());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(0, squirrelPreferences0.getJdbcDebugType());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
  }

  @Test
  public void test75()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = new SquirrelPreferences();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setShowErrorLogMessages(false);
      assertEquals(false, squirrelPreferences0.getShowErrorLogMessages());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
  }

  @Test
  public void test76()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setSavePreferencesImmediately(false);
      assertEquals(true, squirrelPreferences0.getShowMainStatusBar());
      assertEquals(false, squirrelPreferences0.getSavePreferencesImmediately());
      assertEquals(false, squirrelPreferences0.getShowContentsWhenDragging());
      assertEquals(true, squirrelPreferences0.isFileOpenInPreviousDir());
      assertEquals(true, squirrelPreferences0.getShowMainToolBar());
      assertEquals(true, squirrelPreferences0.getShowTabbedStyleHint());
      assertEquals(false, squirrelPreferences0.isFileOpenInSpecifiedDir());
      assertEquals(true, squirrelPreferences0.getTabbedStyle());
      assertEquals(false, squirrelPreferences0.getUseScrollableTabbedPanes());
      assertEquals(30, squirrelPreferences0.getLoginTimeout());
      assertEquals(200, squirrelPreferences0.getLargeScriptStmtCount());
      assertEquals(true, squirrelPreferences0.getShowToolTips());
      assertEquals(true, squirrelPreferences0.isJdbcDebugDontDebug());
  }

  @Test
  public void test77()  throws Throwable  {
      SquirrelPreferences squirrelPreferences0 = SquirrelPreferences.load();
      assertNotNull(squirrelPreferences0);
      
      squirrelPreferences0.setSavePreferencesImmediately(true);
      assertEquals(true, squirrelPreferences0.getSavePreferencesImmediately());
  }
}
