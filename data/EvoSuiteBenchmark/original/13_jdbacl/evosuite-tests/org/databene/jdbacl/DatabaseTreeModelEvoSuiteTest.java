/*
 * This file was automatically generated by EvoSuite
 */

package org.databene.jdbacl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.DatabaseTreeModel;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.Database;
import org.databene.jdbacl.model.DefaultDatabase;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DatabaseTreeModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DatabaseTreeModel databaseTreeModel0 = new DatabaseTreeModel((Database) null);
      // Undeclared exception!
      try {
        databaseTreeModel0.getParent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      DatabaseTreeModel databaseTreeModel0 = new DatabaseTreeModel((Database) null);
      // Undeclared exception!
      try {
        databaseTreeModel0.getChildCount((DBObject) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      DatabaseTreeModel databaseTreeModel0 = new DatabaseTreeModel((Database) null);
      // Undeclared exception!
      try {
        databaseTreeModel0.getIndexOfChild((DBObject) null, (DBObject) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      DatabaseTreeModel databaseTreeModel0 = new DatabaseTreeModel((Database) null);
      DBObject dBObject0 = (DBObject)databaseTreeModel0.getRoot();
      assertNull(dBObject0);
  }

  @Test
  public void test4()  throws Throwable  {
      DatabaseTreeModel databaseTreeModel0 = new DatabaseTreeModel((Database) null);
      // Undeclared exception!
      try {
        databaseTreeModel0.getChild((DBObject) null, 536);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      VersionNumber versionNumber0 = VersionNumber.valueOf("hsqldb.files_readonly");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("hsqldb.files_readonly", "hsqldb.files_readonly", versionNumber0);
      DatabaseTreeModel databaseTreeModel0 = new DatabaseTreeModel((Database) defaultDatabase0);
      boolean boolean0 = databaseTreeModel0.isLeaf((DBObject) defaultDatabase0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      DatabaseTreeModel databaseTreeModel0 = new DatabaseTreeModel((Database) null);
      boolean boolean0 = databaseTreeModel0.isLeaf((DBObject) null);
      assertEquals(true, boolean0);
  }
}
