/*
 * This file was automatically generated by EvoSuite
 */

package org.databene.jdbacl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Collection;
import org.databene.jdbacl.JDBCDriverInfo;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JDBCDriverInfoEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = new JDBCDriverInfo();
      // Undeclared exception!
      try {
        jDBCDriverInfo0.hashCode();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = new JDBCDriverInfo();
      jDBCDriverInfo0.setDownloadUrl((String) null);
      assertNull(jDBCDriverInfo0.getName());
  }

  @Test
  public void test2()  throws Throwable  {
      Collection<JDBCDriverInfo> collection0 = JDBCDriverInfo.getInstances();
      assertEquals(false, collection0.isEmpty());
  }

  @Test
  public void test3()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = JDBCDriverInfo.HSQL;
      String string0 = jDBCDriverInfo0.getDownloadUrl();
      assertEquals("http://hsqldb.sourceforge.net/", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = new JDBCDriverInfo();
      jDBCDriverInfo0.setDefaultSchema((String) null);
      assertNull(jDBCDriverInfo0.getDownloadUrl());
  }

  @Test
  public void test5()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = new JDBCDriverInfo();
      String string0 = jDBCDriverInfo0.getDefaultUser();
      assertNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = JDBCDriverInfo.ORACLE;
      String string0 = jDBCDriverInfo0.getId();
      assertEquals("ORACLE", string0);
  }

  @Test
  public void test7()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = JDBCDriverInfo.HSQL;
      String string0 = jDBCDriverInfo0.getDefaultDatabase();
      assertNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = new JDBCDriverInfo();
      String string0 = jDBCDriverInfo0.getDefaultSchema();
      assertNull(string0);
  }

  @Test
  public void test9()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = JDBCDriverInfo.ORACLE;
      jDBCDriverInfo0.setDefaultPort("T");
      assertEquals("XE", jDBCDriverInfo0.getDefaultDatabase());
  }

  @Test
  public void test10()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = JDBCDriverInfo.HSQL;
      String string0 = jDBCDriverInfo0.getUrlPattern();
      assertEquals("jdbc:hsqldb:hsql://{0}:{1}/{2}", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = JDBCDriverInfo.ORACLE;
      String string0 = jDBCDriverInfo0.jdbcURL("T", "T", "T");
      assertEquals("jdbc:oracle:thin:@T:T:XE", string0);
      assertNotNull(string0);
  }

  @Test
  public void test12()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = new JDBCDriverInfo();
      String string0 = jDBCDriverInfo0.getDbSystem();
      assertNull(string0);
  }

  @Test
  public void test13()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = JDBCDriverInfo.HSQL;
      jDBCDriverInfo0.setId("T");
      assertNull(jDBCDriverInfo0.getDefaultDatabase());
  }

  @Test
  public void test14()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = JDBCDriverInfo.getInstance("T");
      assertNull(jDBCDriverInfo0);
  }

  @Test
  public void test15()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = JDBCDriverInfo.ORACLE;
      String[] stringArray0 = jDBCDriverInfo0.getJars();
      jDBCDriverInfo0.setJars(stringArray0);
      assertNull(jDBCDriverInfo0.getDefaultPort());
  }

  @Test
  public void test16()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = JDBCDriverInfo.HSQL;
      jDBCDriverInfo0.setDbSystem("ssl");
      assertEquals("PUBLIC", jDBCDriverInfo0.getDefaultSchema());
  }

  @Test
  public void test17()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = new JDBCDriverInfo();
      String string0 = jDBCDriverInfo0.getDriverClass();
      assertNull(string0);
  }

  @Test
  public void test18()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = JDBCDriverInfo.ORACLE;
      jDBCDriverInfo0.setDriverClass("T");
      assertEquals("system", jDBCDriverInfo0.getDefaultUser());
  }

  @Test
  public void test19()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = JDBCDriverInfo.ORACLE;
      jDBCDriverInfo0.setDefaultDatabase("T");
      assertEquals("ORACLE", jDBCDriverInfo0.getId());
  }

  @Test
  public void test20()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = JDBCDriverInfo.ORACLE;
      String string0 = jDBCDriverInfo0.getName();
      assertEquals("Oracle Thin Driver", string0);
  }

  @Test
  public void test21()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = JDBCDriverInfo.HSQL;
      jDBCDriverInfo0.setDefaultUser("T");
      assertEquals("jdbc:hsqldb:hsql://{0}:{1}/{2}", jDBCDriverInfo0.getUrlPattern());
  }

  @Test
  public void test22()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = JDBCDriverInfo.ORACLE;
      String string0 = jDBCDriverInfo0.getDefaultPort();
      assertNull(string0);
  }

  @Test
  public void test23()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = new JDBCDriverInfo();
      String string0 = jDBCDriverInfo0.toString();
      assertNull(string0);
  }

  @Test
  public void test24()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = JDBCDriverInfo.ORACLE;
      jDBCDriverInfo0.setName("T");
      assertEquals("Oracle", jDBCDriverInfo0.toString());
  }

  @Test
  public void test25()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = JDBCDriverInfo.HSQL;
      assertEquals("jdbc:hsqldb:hsql://", jDBCDriverInfo0.getUrlPrefix());
      
      jDBCDriverInfo0.setUrlPattern("T");
      assertEquals("T", jDBCDriverInfo0.getUrlPrefix());
  }

  @Test
  public void test26()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = JDBCDriverInfo.HSQL;
      String string0 = jDBCDriverInfo0.getUrlPrefix();
      assertEquals("", string0);
  }

  @Test
  public void test27()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = new JDBCDriverInfo();
      jDBCDriverInfo0.setUrlPattern((String) null);
      assertNull(jDBCDriverInfo0.getId());
  }

  @Test
  public void test28()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = JDBCDriverInfo.ORACLE;
      JDBCDriverInfo jDBCDriverInfo1 = JDBCDriverInfo.FIREBIRD;
      boolean boolean0 = jDBCDriverInfo0.equals((Object) jDBCDriverInfo1);
      assertEquals(false, boolean0);
      assertFalse(jDBCDriverInfo1.equals(jDBCDriverInfo0));
  }

  @Test
  public void test29()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = new JDBCDriverInfo();
      boolean boolean0 = jDBCDriverInfo0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test30()  throws Throwable  {
      JDBCDriverInfo jDBCDriverInfo0 = JDBCDriverInfo.ORACLE;
      boolean boolean0 = jDBCDriverInfo0.equals((Object) "T");
      assertEquals(false, boolean0);
  }
}
