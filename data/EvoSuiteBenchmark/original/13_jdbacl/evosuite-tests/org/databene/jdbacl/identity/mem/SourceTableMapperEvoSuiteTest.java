/*
 * This file was automatically generated by EvoSuite
 */

package org.databene.jdbacl.identity.mem;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.Connection;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.identity.IdentityModel;
import org.databene.jdbacl.identity.IdentityProvider;
import org.databene.jdbacl.identity.KeyMapper;
import org.databene.jdbacl.identity.NaturalPkIdentity;
import org.databene.jdbacl.identity.mem.MemKeyMapper;
import org.databene.jdbacl.identity.mem.SourceTableMapper;
import org.databene.jdbacl.model.Database;
import org.databene.jdbacl.model.DefaultDatabase;
import org.h2.tools.Recover;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SourceTableMapperEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      IdentityProvider identityProvider0 = new IdentityProvider();
      VersionNumber versionNumber0 = VersionNumber.valueOf("k");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("k", "k", versionNumber0);
      MemKeyMapper memKeyMapper0 = new MemKeyMapper((Connection) null, "k", (Connection) null, "k", identityProvider0, (Database) defaultDatabase0);
      SourceTableMapper sourceTableMapper0 = new SourceTableMapper((KeyMapper) memKeyMapper0, (Connection) null, "k", (IdentityModel) null, (Database) defaultDatabase0);
      // Undeclared exception!
      try {
        sourceTableMapper0.getTargetPK((Object) "localEncoding");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      IdentityProvider identityProvider0 = new IdentityProvider();
      MemKeyMapper memKeyMapper0 = new MemKeyMapper((Connection) null, "oY~}lif_O1R", (Connection) null, "jUnVr|v?", identityProvider0, (Database) null);
      NaturalPkIdentity naturalPkIdentity0 = new NaturalPkIdentity("oY~}lif_O1R");
      SourceTableMapper sourceTableMapper0 = new SourceTableMapper((KeyMapper) memKeyMapper0, (Connection) null, "oY~}lif_O1R", (IdentityModel) naturalPkIdentity0, (Database) null);
      sourceTableMapper0.store((Object) "isolation", "oY~}lif_O1R", (Object) null);
  }

  @Test
  public void test2()  throws Throwable  {
      Recover recover0 = new Recover();
      IdentityProvider identityProvider0 = new IdentityProvider();
      MemKeyMapper memKeyMapper0 = new MemKeyMapper((Connection) null, "oY~}lif_O1R", (Connection) null, "UY\"b=V8!", identityProvider0, (Database) null);
      NaturalPkIdentity naturalPkIdentity0 = new NaturalPkIdentity("oY~}lif_O1R");
      SourceTableMapper sourceTableMapper0 = new SourceTableMapper((KeyMapper) memKeyMapper0, (Connection) null, "oY~}lif_O1R", (IdentityModel) naturalPkIdentity0, (Database) null);
      sourceTableMapper0.store((Object) "isolation", "oY~}lif_O1R", (Object) recover0);
      assertNull(recover0.getDatabasePath());
  }
}
