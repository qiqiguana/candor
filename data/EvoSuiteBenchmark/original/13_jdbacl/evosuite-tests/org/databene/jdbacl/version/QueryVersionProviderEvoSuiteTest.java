/*
 * This file was automatically generated by EvoSuite
 */

package org.databene.jdbacl.version;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.Connection;
import org.databene.commons.ConfigurationError;
import org.databene.jdbacl.version.QueryVersionProvider;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class QueryVersionProviderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      QueryVersionProvider queryVersionProvider0 = new QueryVersionProvider("bf{[j$+efOU$=O");
      queryVersionProvider0.setQuery("bf{[j$+efOU$=O");
      assertEquals("bf{[j$+efOU$=O", queryVersionProvider0.getQuery());
  }

  @Test
  public void test1()  throws Throwable  {
      QueryVersionProvider queryVersionProvider0 = new QueryVersionProvider("bf{[j$+efOU$=O");
      String string0 = queryVersionProvider0.getQuery();
      assertEquals("bf{[j$+efOU$=O", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      QueryVersionProvider queryVersionProvider0 = new QueryVersionProvider();
      // Undeclared exception!
      try {
        queryVersionProvider0.getVersion((Connection) null);
        fail("Expecting exception: ConfigurationError");
      } catch(ConfigurationError e) {
        /*
         * Query text undefined
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      QueryVersionProvider queryVersionProvider0 = new QueryVersionProvider("bf{[j$+efOU$=O");
      // Undeclared exception!
      try {
        queryVersionProvider0.getVersion((Connection) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
