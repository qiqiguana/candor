/*
 * This file was automatically generated by EvoSuite
 */

package org.databene.jdbacl.model.xml;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.File;
import java.io.IOException;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLTableSectionElementImpl;
import org.databene.commons.ImportFailedException;
import org.databene.jdbacl.model.xml.XMLModelImporter;
import org.hsqldb.lib.FileUtil;
import org.junit.BeforeClass;
import org.w3c.dom.Element;

@RunWith(EvoSuiteRunner.class)
public class XMLModelImporterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      File file0 = new File("c 5l2_O|[i", "c 5l2_O|[i");
      XMLModelImporter xMLModelImporter0 = new XMLModelImporter(file0);
      try {
        xMLModelImporter0.importDatabase();
        fail("Expecting exception: ImportFailedException");
      } catch(ImportFailedException e) {
        /*
         * java.io.FileNotFoundException: c 5l2_O|[i/c 5l2_O|[i (No such file or directory)
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      File file0 = new File("c 5l2_O|[i", "c 5l2_O|[i");
      XMLModelImporter xMLModelImporter0 = new XMLModelImporter(file0);
      xMLModelImporter0.close();
  }

  @Test
  public void test2()  throws Throwable  {
      File file0 = FileUtil.canonicalFile("Fetch sie must be a value greater to or equal to 0.");
      XMLModelImporter xMLModelImporter0 = new XMLModelImporter(file0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableSectionElementImpl hTMLTableSectionElementImpl0 = new HTMLTableSectionElementImpl(hTMLDocumentImpl0, "Fetch sie must be a value greater to or equal to 0.");
      // Undeclared exception!
      try {
        xMLModelImporter0.parseColumnNames((Element) hTMLTableSectionElementImpl0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No element found with name: columns
         */
      }
  }
}
