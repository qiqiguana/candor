/*
 * This file was automatically generated by EvoSuite
 */

package org.databene.jdbacl.identity.mem;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.Connection;
import org.databene.jdbacl.identity.IdentityModel;
import org.databene.jdbacl.identity.IdentityProvider;
import org.databene.jdbacl.identity.NoIdentity;
import org.databene.jdbacl.identity.UniqueKeyIdentity;
import org.databene.jdbacl.identity.mem.MemKeyMapper;
import org.databene.jdbacl.identity.mem.TargetDatabaseMapper;
import org.databene.jdbacl.model.Database;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TargetDatabaseMapperEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      IdentityProvider identityProvider0 = new IdentityProvider();
      MemKeyMapper memKeyMapper0 = new MemKeyMapper((Connection) null, "", (Connection) null, "", identityProvider0, (Database) null);
      // Undeclared exception!
      try {
        memKeyMapper0.getNaturalKey("", (IdentityModel) null, (Object) "SYSTEM TABLE");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      IdentityProvider identityProvider0 = new IdentityProvider();
      MemKeyMapper memKeyMapper0 = new MemKeyMapper((Connection) null, "", (Connection) null, "", identityProvider0, (Database) null);
      TargetDatabaseMapper targetDatabaseMapper0 = memKeyMapper0.targetDBMapper;
      String[] stringArray0 = new String[4];
      NoIdentity noIdentity0 = new NoIdentity("");
      targetDatabaseMapper0.store((IdentityModel) noIdentity0, "", (Object) "it_IT");
      UniqueKeyIdentity uniqueKeyIdentity0 = new UniqueKeyIdentity("", stringArray0);
      String string0 = (String)memKeyMapper0.getTargetPK((IdentityModel) uniqueKeyIdentity0, "");
      assertEquals("it_IT", string0);
  }
}
