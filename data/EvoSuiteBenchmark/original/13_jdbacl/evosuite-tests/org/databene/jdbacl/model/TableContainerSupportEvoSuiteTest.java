/*
 * This file was automatically generated by EvoSuite
 */

package org.databene.jdbacl.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.List;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.ContainerComponent;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBSequence;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.databene.jdbacl.model.TableContainerSupport;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TableContainerSupportEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      TableContainer tableContainer0 = new TableContainer("", (CompositeDBObject<? extends DBObject>) dBCatalog0);
      TableContainerSupport tableContainerSupport0 = tableContainer0.support;
      DBTable dBTable0 = tableContainerSupport0.getTable("");
      assertNull(dBTable0);
  }

  @Test
  public void test1()  throws Throwable  {
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      // Undeclared exception!
      try {
        tableContainerSupport0.addSequence((DBSequence) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      TableContainer tableContainer0 = new TableContainer("");
      tableContainerSupport0.addSubContainer(tableContainer0);
      List<DBTable> list0 = tableContainerSupport0.getTables(true);
      assertEquals(0, list0.size());
  }

  @Test
  public void test3()  throws Throwable  {
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      List<DBSequence> list0 = tableContainerSupport0.getSequences(true);
      assertEquals(0, list0.size());
  }

  @Test
  public void test4()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      TableContainer tableContainer0 = new TableContainer("", (CompositeDBObject<? extends DBObject>) dBCatalog0);
      TableContainerSupport tableContainerSupport0 = tableContainer0.support;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      tableContainerSupport0.removeTable((DBTable) defaultDBTable0);
      assertEquals(0, defaultDBTable0.countProviders());
  }

  @Test
  public void test5()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      TableContainer tableContainer0 = new TableContainer("", (CompositeDBObject<? extends DBObject>) dBCatalog0);
      TableContainerSupport tableContainerSupport0 = tableContainer0.support;
      // Undeclared exception!
      try {
        tableContainerSupport0.addTable((DBTable) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer((String) null);
      List<ContainerComponent> list0 = tableContainer0.getComponents();
      assertEquals(0, list0.size());
  }

  @Test
  public void test7()  throws Throwable  {
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      List<ContainerComponent> list0 = tableContainerSupport0.getComponents();
      assertEquals(0, list0.size());
  }

  @Test
  public void test8()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      TableContainer tableContainer0 = new TableContainer("4b", (CompositeDBObject<? extends DBObject>) dBCatalog0);
      TableContainerSupport tableContainerSupport0 = tableContainer0.support;
      tableContainerSupport0.addSubContainer(tableContainer0);
      // Undeclared exception!
      try {
        tableContainerSupport0.getSequences(true);
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
      }
  }
}
