/*
 * This file was automatically generated by EvoSuite
 */

package org.databene.jdbacl.dialect;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.Connection;
import java.sql.SQLException;
import org.databene.jdbacl.dialect.DB2Dialect;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DB2DialectEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DB2Dialect dB2Dialect0 = new DB2Dialect();
      dB2Dialect0.isDefaultSchema("\".", " parent=");
  }

  @Test
  public void test1()  throws Throwable  {
      DB2Dialect dB2Dialect0 = new DB2Dialect();
      boolean boolean0 = dB2Dialect0.isDefaultCatalog((String) null, "databaseName");
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      DB2Dialect dB2Dialect0 = new DB2Dialect();
      String string0 = dB2Dialect0.renderFetchSequenceValue(")");
      assertNotNull(string0);
      assertEquals("select nextval for ) from sysibm.sysdummy1", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      DB2Dialect dB2Dialect0 = new DB2Dialect();
      // Undeclared exception!
      try {
        dB2Dialect0.setNextSequenceValue("PP.RDB$PROCEDURE_NAME", (-183L), (Connection) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      DB2Dialect dB2Dialect0 = new DB2Dialect();
      boolean boolean0 = dB2Dialect0.isDeterministicPKName("SQL000000000000000");
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      DB2Dialect dB2Dialect0 = new DB2Dialect();
      boolean boolean0 = dB2Dialect0.isDeterministicPKName("/Vm=A9");
      assertEquals(true, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      DB2Dialect dB2Dialect0 = new DB2Dialect();
      boolean boolean0 = dB2Dialect0.isDeterministicUKName("SQL000000000000000");
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      DB2Dialect dB2Dialect0 = new DB2Dialect();
      boolean boolean0 = dB2Dialect0.isDeterministicUKName(")");
      assertEquals(true, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      DB2Dialect dB2Dialect0 = new DB2Dialect();
      boolean boolean0 = dB2Dialect0.isDeterministicFKName("SQL000000000000000");
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      DB2Dialect dB2Dialect0 = new DB2Dialect();
      boolean boolean0 = dB2Dialect0.isDeterministicFKName("L|xszM1`qb)c<");
      assertEquals(true, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      DB2Dialect dB2Dialect0 = new DB2Dialect();
      boolean boolean0 = dB2Dialect0.isDeterministicIndexName("SQL000000000000000");
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      DB2Dialect dB2Dialect0 = new DB2Dialect();
      boolean boolean0 = dB2Dialect0.isDeterministicIndexName("3fz|.6bl");
      assertEquals(true, boolean0);
  }
}
