/*
 * This file was automatically generated by EvoSuite
 */

package org.databene.jdbacl.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DBConstraintEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("Error converting to double.", (DBCatalog) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Error converting to double.", dBSchema0);
      String[] stringArray0 = new String[9];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint((DBTable) defaultDBTable0, "Error converting to double.", true, stringArray0);
      assertNotNull(dBUniqueConstraint0);
      
      dBUniqueConstraint0.setOwner((CompositeDBObject<?>) dBSchema0);
      DBUniqueConstraint dBUniqueConstraint1 = new DBUniqueConstraint((DBTable) defaultDBTable0, (String) null, true, stringArray0);
      assertFalse(dBUniqueConstraint1.equals(dBUniqueConstraint0));
      assertNotNull(dBUniqueConstraint1);
      assertEquals(true, dBUniqueConstraint1.isNameDeterministic());
  }

  @Test
  public void test1()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("Error converting to double.", (DBCatalog) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Error converting to double.", dBSchema0);
      String[] stringArray0 = new String[9];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint((DBTable) defaultDBTable0, "Error converting to double.", true, stringArray0);
      boolean boolean0 = dBPrimaryKeyConstraint0.isNameDeterministic();
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("Error converting to double.", (DBCatalog) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Error converting to double.", dBSchema0);
      String[] stringArray0 = new String[9];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint((DBTable) defaultDBTable0, "Error converting to double.", true, stringArray0);
      DefaultDBTable defaultDBTable1 = (DefaultDBTable)dBPrimaryKeyConstraint0.getTable();
      assertNotNull(defaultDBTable1);
      assertEquals(true, dBPrimaryKeyConstraint0.isNameDeterministic());
  }

  @Test
  public void test3()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("Error converting to double.", (DBCatalog) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Error converting to double.", dBSchema0);
      DBDataType dBDataType0 = DBDataType.getInstance(1716, "Error converting to double.");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Error converting to double.", (DBTable) defaultDBTable0, dBDataType0, (Integer) 1716);
      DBNotNullConstraint dBNotNullConstraint0 = new DBNotNullConstraint((DBTable) defaultDBTable0, "Error converting to double.", true, "Error converting to double.");
      String string0 = dBNotNullConstraint0.toString();
      assertEquals(true, dBNotNullConstraint0.isNameDeterministic());
      assertNotNull(string0);
      assertEquals("DBNotNullConstraint[Error converting to double.[Error converting to double.]]", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("Error converting to double.", (DBCatalog) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Error converting to double.", dBSchema0);
      String[] stringArray0 = new String[9];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint((DBTable) defaultDBTable0, "Error converting to double.", true, stringArray0);
      assertNotNull(dBUniqueConstraint0);
      
      DBUniqueConstraint dBUniqueConstraint1 = new DBUniqueConstraint((DBTable) defaultDBTable0, (String) null, true, stringArray0);
      assertNotNull(dBUniqueConstraint1);
      assertTrue(dBUniqueConstraint1.equals(dBUniqueConstraint0));
      assertEquals(true, dBUniqueConstraint1.isNameDeterministic());
  }

  @Test
  public void test5()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("Error converting to double.", (DBCatalog) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Error converting to double.", dBSchema0);
      String[] stringArray0 = new String[9];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint((DBTable) defaultDBTable0, "Error converting to double.", true, stringArray0);
      assertNotNull(dBUniqueConstraint0);
      
      boolean boolean0 = dBUniqueConstraint0.equals((Object) null);
      assertEquals(true, dBUniqueConstraint0.isNameDeterministic());
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("Error converting to double.", (DBCatalog) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Error converting to double.", dBSchema0);
      String[] stringArray0 = new String[9];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint((DBTable) defaultDBTable0, "Error converting to double.", true, stringArray0);
      assertNotNull(dBUniqueConstraint0);
      
      boolean boolean0 = dBUniqueConstraint0.equals((Object) "Error converting to double.");
      assertEquals(false, boolean0);
      assertEquals(true, dBUniqueConstraint0.isNameDeterministic());
  }

  @Test
  public void test7()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("Error converting to double.", (DBCatalog) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Error converting to double.", dBSchema0);
      String[] stringArray0 = new String[9];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint((DBTable) defaultDBTable0, (String) null, true, stringArray0);
      assertNotNull(dBUniqueConstraint0);
      
      dBUniqueConstraint0.addColumnName("Error converting to double.");
      DBUniqueConstraint dBUniqueConstraint1 = new DBUniqueConstraint((DBTable) defaultDBTable0, (String) null, true, stringArray0);
      assertFalse(dBUniqueConstraint1.equals(dBUniqueConstraint0));
      assertNotNull(dBUniqueConstraint1);
      assertEquals(true, dBUniqueConstraint1.isNameDeterministic());
  }
}
