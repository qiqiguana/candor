/*
 * This file was automatically generated by EvoSuite
 */

package org.databene.jdbacl.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.List;
import org.databene.commons.collection.OrderedNameMap;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPackage;
import org.databene.jdbacl.model.DBProcedure;
import org.databene.jdbacl.model.DBSchema;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DBPackageEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage("register", (DBSchema) null);
      String string0 = dBPackage0.getObjectType();
      assertNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage("!#]]=r", (DBSchema) null);
      String string0 = dBPackage0.getObjectId();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("A' ffEWZqV&");
      DBPackage dBPackage0 = new DBPackage("A' ffEWZqV&", dBSchema0);
      String string0 = dBPackage0.getStatus();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("A' ffEWZqV&");
      DBPackage dBPackage0 = new DBPackage("A' ffEWZqV&", dBSchema0);
      List<DBProcedure> list0 = dBPackage0.getComponents();
      assertEquals(0, list0.size());
  }

  @Test
  public void test4()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage("VL;[ir", (DBSchema) null);
      String string0 = dBPackage0.getDataObjectId();
      assertNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage("register", (DBSchema) null);
      OrderedNameMap<DBProcedure> orderedNameMap0 = new OrderedNameMap<DBProcedure>((-10));
      dBPackage0.setProcedures(orderedNameMap0);
      assertNull(dBPackage0.getSubObjectName());
  }

  @Test
  public void test6()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage("VL;[ir", (DBSchema) null);
      String string0 = dBPackage0.getSubObjectName();
      assertNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage(" }g2bH\"P7[<?V].33", (DBSchema) null);
      List<DBProcedure> list0 = dBPackage0.getProcedures();
      assertEquals(0, list0.size());
  }

  @Test
  public void test8()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage("VL;[ir", (DBSchema) null);
      assertNotNull(dBPackage0);
      
      DBProcedure dBProcedure0 = new DBProcedure("VL;[ir", dBPackage0);
      assertNotNull(dBProcedure0);
      
      boolean boolean0 = dBPackage0.isIdentical((DBObject) dBProcedure0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage(" }g2bH\"P7[<?V].33", (DBSchema) null);
      assertNotNull(dBPackage0);
      
      boolean boolean0 = dBPackage0.isIdentical((DBObject) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage("", (DBSchema) null);
      assertNotNull(dBPackage0);
      
      boolean boolean0 = dBPackage0.isIdentical((DBObject) dBPackage0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage(" }g2bH\"P7[<?V].33", (DBSchema) null);
      assertNotNull(dBPackage0);
      
      DBPackage dBPackage1 = new DBPackage(" }g2bH\"P7[<?V].33", (DBSchema) null);
      dBPackage1.setSubObjectName(" }g2bH\"P7[<?V].33");
      boolean boolean0 = dBPackage0.isIdentical((DBObject) dBPackage1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage("J/MAzfg]j+s}[.", (DBSchema) null);
      assertNotNull(dBPackage0);
      
      dBPackage0.setObjectId("J/MAzfg]j+s}[.");
      DBPackage dBPackage1 = new DBPackage("J/MAzfg]j+s}[.", (DBSchema) null);
      boolean boolean0 = dBPackage0.isIdentical((DBObject) dBPackage1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage("", (DBSchema) null);
      assertNotNull(dBPackage0);
      
      dBPackage0.setObjectId("");
      DBPackage dBPackage1 = new DBPackage("", (DBSchema) null);
      dBPackage0.setDataObjectId("");
      dBPackage1.setObjectId("");
      boolean boolean0 = dBPackage0.isIdentical((DBObject) dBPackage1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage("J/MAzfg]j+s}[.", (DBSchema) null);
      assertNotNull(dBPackage0);
      
      dBPackage0.setObjectId("J/MAzfg]j+s}[.");
      dBPackage0.setObjectType("J/MAzfg]j+s}[.");
      DBPackage dBPackage1 = new DBPackage("J/MAzfg]j+s}[.", (DBSchema) null);
      dBPackage1.setObjectId("J/MAzfg]j+s}[.");
      boolean boolean0 = dBPackage0.isIdentical((DBObject) dBPackage1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage("!#]]=r", (DBSchema) null);
      assertNotNull(dBPackage0);
      
      dBPackage0.setObjectId("!#]]=r");
      dBPackage0.setObjectType("!#]]=r");
      DBPackage dBPackage1 = new DBPackage("!#]]=r", (DBSchema) null);
      dBPackage1.setObjectId("!#]]=r");
      dBPackage1.setObjectType("!#]]=r");
      dBPackage0.setStatus("!#]]=r");
      boolean boolean0 = dBPackage0.isIdentical((DBObject) dBPackage1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage("register", (DBSchema) null);
      assertNotNull(dBPackage0);
      
      dBPackage0.setObjectId("register");
      dBPackage0.setObjectType("register");
      DBPackage dBPackage1 = new DBPackage("register", (DBSchema) null);
      dBPackage1.setStatus("register");
      dBPackage1.setObjectId("register");
      dBPackage1.setObjectType("register");
      dBPackage0.setStatus("register");
      boolean boolean0 = dBPackage0.isIdentical((DBObject) dBPackage1);
      assertEquals(true, boolean0);
  }
}
