/*
 * This file was automatically generated by EvoSuite
 */

package org.databene.jdbacl.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPackage;
import org.databene.jdbacl.model.DBProcedure;
import org.databene.jdbacl.model.DBSchema;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DBProcedureEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage("Mz1&*5", (DBSchema) null);
      DBProcedure dBProcedure0 = new DBProcedure("Mz1&*5", dBPackage0);
      String string0 = dBProcedure0.getOverload();
      assertNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage("Mz1&*5", (DBSchema) null);
      DBProcedure dBProcedure0 = new DBProcedure("Mz1&*5", dBPackage0);
      String string0 = dBProcedure0.getObjectId();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage("Mz1&*5", (DBSchema) null);
      DBProcedure dBProcedure0 = new DBProcedure("Mz1&*5", dBPackage0);
      String string0 = dBProcedure0.getSubProgramId();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage("'PATITIONS'", (DBSchema) null);
      DBProcedure dBProcedure0 = new DBProcedure("'PATITIONS'", dBPackage0);
      boolean boolean0 = dBProcedure0.isIdentical((DBObject) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage("wC4m", (DBSchema) null);
      DBProcedure dBProcedure0 = new DBProcedure("wC4m", dBPackage0);
      boolean boolean0 = dBProcedure0.isIdentical((DBObject) dBPackage0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage("wC4m", (DBSchema) null);
      DBProcedure dBProcedure0 = new DBProcedure("wC4m", dBPackage0);
      DBProcedure dBProcedure1 = new DBProcedure("wC4m", dBPackage0);
      dBProcedure0.setObjectId("wC4m");
      boolean boolean0 = dBProcedure0.isIdentical((DBObject) dBProcedure1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage("M2H:y'|3T", (DBSchema) null);
      DBProcedure dBProcedure0 = new DBProcedure("M2H:y'|3T", dBPackage0);
      DBProcedure dBProcedure1 = new DBProcedure("M2H:y'|3T", dBPackage0);
      dBProcedure0.setObjectId("M2H:y'|3T");
      dBProcedure0.setSubProgramId("M2H:y'|3T");
      dBProcedure1.setObjectId("M2H:y'|3T");
      boolean boolean0 = dBProcedure0.isIdentical((DBObject) dBProcedure1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage("'PATITIONS'", (DBSchema) null);
      DBProcedure dBProcedure0 = new DBProcedure("'PATITIONS'", dBPackage0);
      DBProcedure dBProcedure1 = new DBProcedure("'PATITIONS'", dBPackage0);
      dBProcedure0.setOverload("'PATITIONS'");
      dBProcedure1.setSubProgramId("'PATITIONS'");
      dBProcedure1.setObjectId("'PATITIONS'");
      dBProcedure0.setObjectId("'PATITIONS'");
      dBProcedure0.setSubProgramId("'PATITIONS'");
      boolean boolean0 = dBProcedure0.isIdentical((DBObject) dBProcedure1);
      assertEquals(false, boolean0);
  }
}
