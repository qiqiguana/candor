/*
 * This file was automatically generated by EvoSuite
 */

package org.databene.jdbacl.model.cache;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.File;
import java.io.IOException;
import org.databene.commons.ConnectFailedException;
import org.databene.commons.ImportFailedException;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.DBMetaDataImporter;
import org.databene.jdbacl.model.cache.CachingDBImporter;
import org.databene.jdbacl.model.jdbc.JDBCDBImporter;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CachingDBImporterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("ALTER TABLpE ", "ALTER TABLpE ", "ALTER TABLpE ", "ALTER TABLpE ");
      JDBCDBImporter jDBCDBImporter0 = new JDBCDBImporter(jDBCConnectData0);
      CachingDBImporter cachingDBImporter0 = new CachingDBImporter((DBMetaDataImporter) jDBCDBImporter0, "ALTER TABLpE ");
      File file0 = CachingDBImporter.getCacheFile("ALTER TABLpE ");
      assertNotNull(file0);
      
      try {
        cachingDBImporter0.readCachedData(file0);
        fail("Expecting exception: ConnectFailedException");
      } catch(ConnectFailedException e) {
        /*
         * Connecting ALTER TABLpE  failed: 
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      CachingDBImporter cachingDBImporter0 = new CachingDBImporter((DBMetaDataImporter) null, (String) null);
      // Undeclared exception!
      try {
        cachingDBImporter0.importDatabase();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      CachingDBImporter cachingDBImporter0 = new CachingDBImporter((DBMetaDataImporter) null, (String) null);
      cachingDBImporter0.close();
  }

  @Test
  public void test3()  throws Throwable  {
      JDBCDBImporter jDBCDBImporter0 = new JDBCDBImporter("NAME", "NAME", "NAME", "NAME", "NAME", "NAME", "NAME", true);
      CachingDBImporter cachingDBImporter0 = new CachingDBImporter((DBMetaDataImporter) jDBCDBImporter0, "NAME");
      cachingDBImporter0.close();
  }
}
