/*
 * This file was automatically generated by EvoSuite
 */

package org.databene.jdbacl.dialect;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.regex.Pattern;
import org.databene.jdbacl.dialect.HSQLDialect;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class HSQLDialectEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HSQLDialect hSQLDialect0 = new HSQLDialect();
      boolean boolean0 = hSQLDialect0.isDefaultSchema("SYS_FK_0", "SYS_FK_0");
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      HSQLDialect hSQLDialect0 = new HSQLDialect();
      String string0 = hSQLDialect0.renderFetchSequenceValue("");
      assertEquals("call next value for ", string0);
      assertNotNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      HSQLDialect hSQLDialect0 = new HSQLDialect();
      // Undeclared exception!
      try {
        hSQLDialect0.setNextSequenceValue("6SL\"xlaji&3*:_YPu<", 24L, (Connection) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      HSQLDialect hSQLDialect0 = new HSQLDialect();
      boolean boolean0 = hSQLDialect0.supportsRegex();
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      HSQLDialect hSQLDialect0 = new HSQLDialect();
      String string0 = hSQLDialect0.renderDropSequence(".zb");
      assertEquals("drop sequence .zb", string0);
      assertNotNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      HSQLDialect hSQLDialect0 = new HSQLDialect();
      boolean boolean0 = hSQLDialect0.isDefaultCatalog("call next value for ", "call next value for ");
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      HSQLDialect hSQLDialect0 = new HSQLDialect();
      boolean boolean0 = hSQLDialect0.isDefaultCatalog((String) null, (String) null);
      assertEquals(true, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      HSQLDialect hSQLDialect0 = new HSQLDialect();
      boolean boolean0 = hSQLDialect0.isDeterministicPKName("SYS_IDX_au0");
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      HSQLDialect hSQLDialect0 = new HSQLDialect();
      boolean boolean0 = hSQLDialect0.isDeterministicPKName("call next value for ");
      assertEquals(true, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      HSQLDialect hSQLDialect0 = new HSQLDialect();
      hSQLDialect0.randomUKNamePattern = hSQLDialect0.randomIndexNamePattern;
      assertNotNull(hSQLDialect0.randomUKNamePattern);
      
      boolean boolean0 = hSQLDialect0.isDeterministicUKName("SYS_IDX_au0");
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      HSQLDialect hSQLDialect0 = new HSQLDialect();
      boolean boolean0 = hSQLDialect0.isDeterministicUKName("SYS_IDX_au0");
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      HSQLDialect hSQLDialect0 = new HSQLDialect();
      boolean boolean0 = hSQLDialect0.isDeterministicFKName("SYS_FK_0");
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      HSQLDialect hSQLDialect0 = new HSQLDialect();
      boolean boolean0 = hSQLDialect0.isDeterministicFKName("SYS_IDX_au0");
      assertEquals(true, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      HSQLDialect hSQLDialect0 = new HSQLDialect();
      Pattern pattern0 = Pattern.compile("");
      hSQLDialect0.randomIndexNamePattern = pattern0;
      boolean boolean0 = hSQLDialect0.isDeterministicIndexName("");
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      HSQLDialect hSQLDialect0 = new HSQLDialect();
      boolean boolean0 = hSQLDialect0.isDeterministicIndexName(".zb");
      assertEquals(true, boolean0);
  }
}
