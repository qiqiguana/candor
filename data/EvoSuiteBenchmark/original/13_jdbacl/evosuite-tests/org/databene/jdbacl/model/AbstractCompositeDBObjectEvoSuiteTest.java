/*
 * This file was automatically generated by EvoSuite
 */

package org.databene.jdbacl.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AbstractCompositeDBObjectEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("5C=UCchDP{>\"Rfq0G2");
      boolean boolean0 = dBSchema0.isIdentical((DBObject) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("5C=UCchDP{>\"Rfq0G2");
      TableContainer tableContainer1 = new TableContainer("5C=UCchDP{>\"Rfq0G2");
      boolean boolean0 = tableContainer1.isIdentical((DBObject) tableContainer0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("5C=UCchDP{>\"Rfq0G2");
      TableContainer tableContainer0 = new TableContainer("5C=UCchDP{>\"Rfq0G2");
      TableContainer tableContainer1 = new TableContainer("5C=UCchDP{>\"Rfq0G2");
      TableContainer tableContainer2 = new TableContainer("5C=UCchDP{>\"Rfq0G2", (CompositeDBObject<? extends DBObject>) tableContainer0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("5C=UCchDP{>\"Rfq0G2", dBSchema0);
      tableContainer1.addTable((DBTable) defaultDBTable0);
      boolean boolean0 = tableContainer0.isIdentical((DBObject) tableContainer1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("5C=UCchDP{>\"Rfq0G2");
      TableContainer tableContainer1 = new TableContainer("5C=UCchDP{>\"Rfq0G2");
      TableContainer tableContainer2 = new TableContainer("5C=UCchDP{>\"Rfq0G2", (CompositeDBObject<? extends DBObject>) tableContainer0);
      boolean boolean0 = tableContainer1.isIdentical((DBObject) tableContainer0);
      assertEquals(false, boolean0);
  }
}
