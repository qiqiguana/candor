/*
 * This file was automatically generated by EvoSuite
 */

package jigl.signal.ops;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import jigl.signal.DiscreteSignal;
import jigl.signal.Signal;
import jigl.signal.SignalKernel;
import jigl.signal.SignalNotSupportedException;
import jigl.signal.ops.UniformNoise;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UniformNoiseEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UniformNoise uniformNoise0 = new UniformNoise(174);
      short[] shortArray0 = new short[4];
      DiscreteSignal discreteSignal0 = new DiscreteSignal(shortArray0);
      uniformNoise0.apply(discreteSignal0);
      assertEquals("4\n-1 3 5 7 \n", discreteSignal0.toString());
      assertEquals(-1, discreteSignal0.min());
  }

  @Test
  public void test1()  throws Throwable  {
      UniformNoise uniformNoise0 = new UniformNoise((-859));
      float[] floatArray0 = new float[3];
      SignalKernel signalKernel0 = new SignalKernel(floatArray0);
      uniformNoise0.apply((Signal) signalKernel0);
      assertEquals((-1.0F), signalKernel0.min(), 0.01F);
      assertEquals("3\n-1.0 3.0 5.0 \n", signalKernel0.toString());
  }
}
