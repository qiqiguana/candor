/*
 * This file was automatically generated by EvoSuite
 */

package jigl.signal.ops.levelOps;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import jigl.signal.DiscreteSignal;
import jigl.signal.InvalidKernelException;
import jigl.signal.RealSignal;
import jigl.signal.SignalKernel;
import jigl.signal.ops.levelOps.ByteSize;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ByteSizeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ByteSize byteSize0 = new ByteSize();
      short[] shortArray0 = new short[8];
      DiscreteSignal discreteSignal0 = new DiscreteSignal(shortArray0);
      DiscreteSignal discreteSignal1 = (DiscreteSignal)byteSize0.apply(discreteSignal0);
      assertNotNull(discreteSignal1);
      assertEquals("8\n0 0 0 0 0 0 0 0 \n", discreteSignal1.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      ByteSize byteSize0 = new ByteSize();
      SignalKernel signalKernel0 = new SignalKernel(0);
      byteSize0.apply((RealSignal) signalKernel0);
      assertEquals(32767.0F, signalKernel0.min(), 0.01F);
      assertEquals((-32768.0F), signalKernel0.max(), 0.01F);
  }
}
