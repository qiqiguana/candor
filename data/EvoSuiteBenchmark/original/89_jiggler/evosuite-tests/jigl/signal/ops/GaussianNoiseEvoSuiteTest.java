/*
 * This file was automatically generated by EvoSuite
 */

package jigl.signal.ops;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import jigl.signal.DiscreteSignal;
import jigl.signal.RealSignal;
import jigl.signal.Signal;
import jigl.signal.SignalNotSupportedException;
import jigl.signal.ops.GaussianNoise;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class GaussianNoiseEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      GaussianNoise gaussianNoise0 = new GaussianNoise(186.50183F);
      float[] floatArray0 = new float[10];
      RealSignal realSignal0 = new RealSignal(floatArray0);
      RealSignal realSignal1 = (RealSignal)gaussianNoise0.apply((Signal) realSignal0);
      assertEquals((-352.68115F), realSignal0.min(), 0.01F);
      assertEquals("10\n63.921253 -188.52855 -150.7358 -314.5284 -16.904438 -81.32563 -352.68115 -95.76026 -157.65866 79.164024 \n", realSignal1.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      GaussianNoise gaussianNoise0 = new GaussianNoise((-832.14264F));
      short[] shortArray0 = new short[10];
      DiscreteSignal discreteSignal0 = new DiscreteSignal(shortArray0);
      gaussianNoise0.apply(discreteSignal0);
      assertEquals(620, discreteSignal0.max());
      assertEquals(-1483, discreteSignal0.min());
  }
}
