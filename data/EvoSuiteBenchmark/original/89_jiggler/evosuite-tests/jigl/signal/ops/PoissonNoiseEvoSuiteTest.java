/*
 * This file was automatically generated by EvoSuite
 */

package jigl.signal.ops;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import jigl.signal.DiscreteSignal;
import jigl.signal.InvalidKernelException;
import jigl.signal.RealSignal;
import jigl.signal.SignalKernel;
import jigl.signal.ops.PoissonNoise;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PoissonNoiseEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PoissonNoise poissonNoise0 = new PoissonNoise();
      short[] shortArray0 = new short[4];
      DiscreteSignal discreteSignal0 = new DiscreteSignal(shortArray0);
      DiscreteSignal discreteSignal1 = (DiscreteSignal)poissonNoise0.apply(discreteSignal0);
      assertNotNull(discreteSignal1);
      assertEquals("4\n0 0 0 0 \n", discreteSignal0.toString());
      assertEquals("4\n0 0 0 0 \n", discreteSignal1.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      PoissonNoise poissonNoise0 = new PoissonNoise();
      SignalKernel signalKernel0 = new SignalKernel(0);
      poissonNoise0.apply((RealSignal) signalKernel0);
      assertEquals(0.3733629F, signalKernel0.min(), 0.01F);
      assertEquals(1.7821227F, signalKernel0.max(), 0.01F);
  }
}
