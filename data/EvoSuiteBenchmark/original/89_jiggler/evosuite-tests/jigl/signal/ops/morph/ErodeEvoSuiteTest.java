/*
 * This file was automatically generated by EvoSuite
 */

package jigl.signal.ops.morph;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import jigl.signal.BinarySignal;
import jigl.signal.InvalidKernelException;
import jigl.signal.ROI;
import jigl.signal.RealSignal;
import jigl.signal.SignalKernel;
import jigl.signal.ops.morph.Erode;
import org.evosuite.testcase.CodeUnderTestException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ErodeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SignalKernel signalKernel0 = new SignalKernel((-1925.0647F), 1);
      Erode erode0 = new Erode(signalKernel0, 1322);
  }

  @Test
  public void test1()  throws Throwable  {
      SignalKernel signalKernel0 = new SignalKernel(0);
      Erode erode0 = new Erode(signalKernel0, 0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)46;
      BinarySignal binarySignal0 = new BinarySignal(1, byteArray0);
      ROI rOI0 = new ROI();
      BinarySignal binarySignal1 = (BinarySignal)erode0.apply(binarySignal0, rOI0);
      assertEquals(0, binarySignal1.count());
      assertNotNull(binarySignal1);
      assertEquals(0, erode0.center_x);
  }

  @Test
  public void test2()  throws Throwable  {
      SignalKernel signalKernel0 = new SignalKernel((-1925.0647F), 1);
      Erode erode0 = new Erode(signalKernel0, 1322);
  }
}
