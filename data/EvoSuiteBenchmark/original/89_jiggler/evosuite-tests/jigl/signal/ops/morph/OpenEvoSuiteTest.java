/*
 * This file was automatically generated by EvoSuite
 */

package jigl.signal.ops.morph;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import jigl.signal.BinarySignal;
import jigl.signal.ROI;
import jigl.signal.RealSignal;
import jigl.signal.SignalKernel;
import jigl.signal.ops.morph.Open;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class OpenEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SignalKernel signalKernel0 = new SignalKernel((-1526.2432F), 0);
      Open open0 = new Open(signalKernel0, 129);
      BinarySignal binarySignal0 = new BinarySignal(1);
      ROI rOI0 = new ROI();
      BinarySignal binarySignal1 = (BinarySignal)open0.apply(binarySignal0, rOI0);
      assertNotSame(binarySignal0, binarySignal1);
      assertNotNull(binarySignal1);
  }

  @Test
  public void test1()  throws Throwable  {
      SignalKernel signalKernel0 = new SignalKernel((-1947.972F), 0);
      Open open0 = new Open(signalKernel0, 0);
      BinarySignal binarySignal0 = new BinarySignal((RealSignal) signalKernel0);
      // Undeclared exception!
      try {
        open0.apply(binarySignal0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -1
         */
      }
  }
}
