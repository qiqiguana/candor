/*
 * This file was automatically generated by EvoSuite
 */

package jigl.signal.ops.levelOps;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import jigl.signal.DiscreteSignal;
import jigl.signal.RealSignal;
import jigl.signal.Signal;
import jigl.signal.SignalKernel;
import jigl.signal.SignalNotSupportedException;
import jigl.signal.ops.levelOps.Exp;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ExpEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Exp exp0 = new Exp();
      float[] floatArray0 = new float[8];
      SignalKernel signalKernel0 = new SignalKernel(floatArray0);
      exp0.apply((Signal) signalKernel0);
      assertEquals(1.0F, signalKernel0.min(), 0.01F);
      assertEquals(1.0F, signalKernel0.max(), 0.01F);
  }

  @Test
  public void test1()  throws Throwable  {
      Exp exp0 = new Exp();
      DiscreteSignal discreteSignal0 = new DiscreteSignal(380);
      RealSignal realSignal0 = (RealSignal)exp0.apply((Signal) discreteSignal0);
      assertNotNull(realSignal0);
      assertEquals(1.0F, realSignal0.min(), 0.01F);
  }
}
