/*
 * This file was automatically generated by EvoSuite
 */

package jigl.image.warp;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import jigl.image.warp.AffineTransform;
import jigl.math.Matrix;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AffineTransformEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Matrix matrix0 = new Matrix(0, 778);
      AffineTransform affineTransform0 = new AffineTransform(matrix0);
      float[] floatArray0 = new float[8];
      // Undeclared exception!
      try {
        affineTransform0.transform(floatArray0, floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 0
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      double[][] doubleArray0 = new double[5][8];
      Matrix matrix0 = new Matrix(doubleArray0);
      AffineTransform affineTransform0 = new AffineTransform(matrix0);
      float[] floatArray0 = new float[2];
      float[] floatArray1 = new float[6];
      try {
        affineTransform0.transform(floatArray0, floatArray1);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Matrix matrix0 = new Matrix();
      AffineTransform affineTransform0 = new AffineTransform(matrix0);
      float[] floatArray0 = new float[2];
      affineTransform0.transform(floatArray0, floatArray0, (-401), 0);
  }

  @Test
  public void test3()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((Matrix) null);
      float[] floatArray0 = new float[8];
      float[] floatArray1 = new float[4];
      // Undeclared exception!
      try {
        affineTransform0.inverseTransform(floatArray0, floatArray1);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      double[][] doubleArray0 = new double[1][1];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = 1642.6317487596361;
      doubleArray0[0] = doubleArray1;
      AffineTransform affineTransform0 = new AffineTransform(doubleArray0);
      float[] floatArray0 = new float[6];
      affineTransform0.inverseTransform(floatArray0, floatArray0, (-1459), (-1165));
      // Undeclared exception!
      try {
        affineTransform0.inverseTransform(floatArray0, floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 1
         */
      }
  }
}
