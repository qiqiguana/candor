/*
 * This file was automatically generated by EvoSuite
 */

package jigl.image.ops.levelOps;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import jigl.image.Image;
import jigl.image.ROI;
import jigl.image.exceptions.ImageNotSupportedException;
import jigl.image.exceptions.InvalidKernelException;
import jigl.image.ops.levelOps.LookupTable;
import jigl.image.types.GrayImage;
import jigl.image.types.ImageKernel;
import jigl.image.types.InterpolatedGrayImage;
import jigl.image.types.KernelType;
import jigl.image.types.RealGrayImage;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LookupTableEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      float[] floatArray0 = new float[10];
      LookupTable lookupTable0 = new LookupTable(floatArray0, 9, 9, (-1473));
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(71, 9);
      interpolatedGrayImage0.clear((Integer) 71);
      lookupTable0.apply((Image) interpolatedGrayImage0);
      assertEquals(0, interpolatedGrayImage0.addSum());
      assertEquals(0L, interpolatedGrayImage0.sqrSum());
  }

  @Test
  public void test1()  throws Throwable  {
      float[] floatArray0 = new float[10];
      LookupTable lookupTable0 = new LookupTable(floatArray0, 9, 9, (-1473));
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(71, 9);
      InterpolatedGrayImage interpolatedGrayImage1 = (InterpolatedGrayImage)interpolatedGrayImage0.clear((Integer) 71);
      InterpolatedGrayImage interpolatedGrayImage2 = (InterpolatedGrayImage)interpolatedGrayImage1.add((-753));
      lookupTable0.apply((Image) interpolatedGrayImage2);
      assertEquals(51759L, interpolatedGrayImage2.sqrSum());
      assertEquals(5751, interpolatedGrayImage1.addSum());
  }

  @Test
  public void test2()  throws Throwable  {
      float[] floatArray0 = new float[2];
      LookupTable lookupTable0 = new LookupTable(floatArray0, 0, 0, (-1903));
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(8, 1932);
      InterpolatedGrayImage interpolatedGrayImage1 = (InterpolatedGrayImage)interpolatedGrayImage0.clear((Integer) 0);
      ROI rOI0 = new ROI();
      lookupTable0.apply((GrayImage) interpolatedGrayImage1, rOI0);
  }

  @Test
  public void test3()  throws Throwable  {
      float[] floatArray0 = new float[1];
      LookupTable lookupTable0 = new LookupTable(floatArray0, 1745, 1944, 1745);
      KernelType kernelType0 = KernelType.UNSHARP;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      ROI rOI0 = new ROI();
      lookupTable0.apply((RealGrayImage) imageKernel0, rOI0);
      lookupTable0.apply((Image) imageKernel0);
      Image<Object> image0 = lookupTable0.apply((Image) imageKernel0, rOI0);
      assertEquals(15552.0F, imageKernel0.addSum(), 0.01F);
      assertEquals("3:3\n0.0 1944.0 1944.0 \n1944.0 1944.0 1944.0 \n1944.0 1944.0 1944.0 \n", image0.toString());
  }
}
