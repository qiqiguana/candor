/*
 * This file was automatically generated by EvoSuite
 */

package jigl.image.ops.morph;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import jigl.image.Image;
import jigl.image.ROI;
import jigl.image.exceptions.InvalidKernelException;
import jigl.image.ops.morph.Open;
import jigl.image.types.BinaryImage;
import jigl.image.types.ImageKernel;
import jigl.image.types.KernelType;
import jigl.image.types.RealGrayImage;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class OpenEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      KernelType kernelType0 = KernelType.D_YY;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      Open open0 = new Open(imageKernel0, (-1), (-1));
      BinaryImage binaryImage0 = new BinaryImage((RealGrayImage) imageKernel0);
      Image<Object> image0 = open0.apply(binaryImage0);
      assertNotSame(binaryImage0, image0);
      assertNotNull(image0);
  }

  @Test
  public void test1()  throws Throwable  {
      ImageKernel imageKernel0 = new ImageKernel((-1772.0946F), 7);
      Open open0 = new Open(imageKernel0, 7, 0);
      BinaryImage binaryImage0 = new BinaryImage();
      // Undeclared exception!
      try {
        open0.apply(binaryImage0, (ROI) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
