/*
 * This file was automatically generated by EvoSuite
 */

package jigl.image.ops.levelOps;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import jigl.image.exceptions.InvalidKernelException;
import jigl.image.ops.levelOps.Threshold;
import jigl.image.types.GrayImage;
import jigl.image.types.ImageKernel;
import jigl.image.types.InterpolatedGrayImage;
import jigl.image.types.InterpolatedRealGrayImage;
import jigl.image.types.KernelType;
import jigl.image.types.RealGrayImage;
import org.evosuite.testcase.TestCaseExecutor;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ThresholdEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Threshold threshold0 = new Threshold((-1.0F));
      KernelType kernelType0 = KernelType.D_XY;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      threshold0.apply((RealGrayImage) imageKernel0);
      assertEquals(2295.0F, imageKernel0.addSum(), 0.01F);
      assertEquals(585225.0, imageKernel0.sqrSum(), 0.01D);
  }

  @Test
  public void test1()  throws Throwable  {
      Threshold threshold0 = new Threshold(1644);
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(340, 340);
      InterpolatedGrayImage interpolatedGrayImage1 = (InterpolatedGrayImage)interpolatedGrayImage0.clear();
      threshold0.apply((GrayImage) interpolatedGrayImage1);
  }

  @Test
  public void test2()  throws Throwable  {
      Threshold threshold0 = new Threshold(0);
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(340, 340);
      InterpolatedGrayImage interpolatedGrayImage1 = (InterpolatedGrayImage)interpolatedGrayImage0.clear();
      threshold0.apply((GrayImage) interpolatedGrayImage1);
  }

  @Test
  public void test3()  throws Throwable  {
      Threshold threshold0 = new Threshold(1);
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(1, 1);
      // Undeclared exception!
      try {
        threshold0.apply((RealGrayImage) interpolatedRealGrayImage0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Threshold threshold0 = new Threshold((-1.0F));
      KernelType kernelType0 = KernelType.D_XY;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      ImageKernel imageKernel1 = (ImageKernel)imageKernel0.add((-1385.3325F));
      threshold0.apply((RealGrayImage) imageKernel1);
      assertEquals(0.0, imageKernel1.sqrSum(), 0.01D);
      assertEquals(0.0, imageKernel0.sqrSum(), 0.01D);
  }
}
