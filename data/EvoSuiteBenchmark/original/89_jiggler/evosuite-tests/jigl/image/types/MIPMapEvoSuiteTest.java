/*
 * This file was automatically generated by EvoSuite
 */

package jigl.image.types;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import jigl.image.ROI;
import jigl.image.types.MIPMap;
import jigl.image.types.RealColorImage;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MIPMapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(1800, 0);
      MIPMap mIPMap0 = new MIPMap(realColorImage0);
      assertNotNull(mIPMap0);
      
      int int0 = mIPMap0.Y();
      assertEquals(1800, mIPMap0.X());
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(0, 0);
      MIPMap mIPMap0 = new MIPMap(realColorImage0);
      // Undeclared exception!
      try {
        mIPMap0.getImage((-437.60416F));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 0
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(0, 0);
      MIPMap mIPMap0 = new MIPMap(realColorImage0);
      assertNotNull(mIPMap0);
      
      int int0 = mIPMap0.X();
      assertEquals(0, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(255, 817);
      MIPMap mIPMap0 = null;
      try {
        mIPMap0 = new MIPMap(realColorImage0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(255, 255);
      Float[] floatArray0 = new Float[14];
      Float float0 = new Float((double) 255);
      floatArray0[0] = float0;
      floatArray0[1] = floatArray0[0];
      floatArray0[2] = floatArray0[0];
      Float float1 = new Float((-6.803657093875812));
      floatArray0[0] = float1;
      realColorImage0.clear(floatArray0);
      MIPMap mIPMap0 = new MIPMap(realColorImage0);
      mIPMap0.get((float) floatArray0[0], (float) float0, (-1725.593F));
  }

  @Test
  public void test5()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(240, 240);
      Float[] floatArray0 = new Float[5];
      Float float0 = new Float((double) 240);
      floatArray0[0] = float0;
      floatArray0[1] = float0;
      floatArray0[2] = floatArray0[1];
      Float float1 = new Float(2.3418682449900734);
      floatArray0[4] = float1;
      realColorImage0.clear(floatArray0);
      MIPMap mIPMap0 = new MIPMap(realColorImage0);
      mIPMap0.get((float) floatArray0[0], (-1.0F), (float) floatArray0[4]);
  }

  @Test
  public void test6()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(240, 240);
      Float[] floatArray0 = new Float[5];
      Float float0 = new Float((double) 240);
      floatArray0[0] = float0;
      floatArray0[1] = floatArray0[0];
      floatArray0[2] = floatArray0[0];
      Float float1 = new Float(2.3418682449900734);
      floatArray0[4] = float1;
      realColorImage0.clear(floatArray0);
      MIPMap mIPMap0 = new MIPMap(realColorImage0);
      ROI rOI0 = new ROI();
      mIPMap0.getImage((float) floatArray0[4], rOI0);
  }
}
