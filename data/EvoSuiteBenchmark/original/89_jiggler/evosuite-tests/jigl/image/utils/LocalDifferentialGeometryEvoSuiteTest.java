/*
 * This file was automatically generated by EvoSuite
 */

package jigl.image.utils;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import jigl.image.types.RealGrayImage;
import jigl.image.utils.LocalDifferentialGeometry;
import org.evosuite.testcase.CodeUnderTestException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LocalDifferentialGeometryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(23, 23);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
      localDifferentialGeometry0.calcIsophoteFlowStore(10, 10, 23, 23);
      // Undeclared exception!
      try {
        localDifferentialGeometry0.calcApproximateGradientMagnitude(23, 23, 10, 10);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
      RealGrayImage realGrayImage1 = localDifferentialGeometry0.calcIsophoteStore(0, 0, (-1254), 1);
      assertNotNull(realGrayImage1);
      
      RealGrayImage realGrayImage2 = localDifferentialGeometry0.calcIsophoteStore(0, 2039, 0, 1);
      assertEquals(0.0, localDifferentialGeometry0.avgAbsKappa, 0.01D);
      assertSame(realGrayImage2, realGrayImage1);
  }

  @Test
  public void test2()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
      RealGrayImage realGrayImage1 = localDifferentialGeometry0.calcIsophoteStore((-1314), 2019, (-164), (-441));
      assertEquals(0.0, localDifferentialGeometry0.avgAbsKappa, 0.01D);
      assertEquals("0:0\n", realGrayImage1.toString());
      assertNotNull(realGrayImage1);
  }

  @Test
  public void test3()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
      localDifferentialGeometry0.calcIsophote((-1569), (-1), 0, 0);
  }

  @Test
  public void test4()  throws Throwable  {
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry();
      localDifferentialGeometry0.calcIsophote((-580), (-580), (-580), (-580));
      assertEquals(0.0, localDifferentialGeometry0.avgKappaSquare, 0.01D);
      assertEquals(0.0, localDifferentialGeometry0.stdDevKappaSquare, 0.01D);
      assertEquals(0.0, localDifferentialGeometry0.stdDevAbsKappa, 0.01D);
      assertEquals(0.0, localDifferentialGeometry0.avgAbsKappa, 0.01D);
  }

  @Test
  public void test5()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
      RealGrayImage realGrayImage1 = localDifferentialGeometry0.calcIsophoteStore(0, 0, (-1254), 1);
      assertNotNull(realGrayImage1);
      
      RealGrayImage realGrayImage2 = localDifferentialGeometry0.calcIsophote((-1569), (-1), 0, 0);
      assertSame(realGrayImage2, realGrayImage1);
      assertNotNull(realGrayImage2);
  }

  @Test
  public void test6()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
      RealGrayImage realGrayImage1 = localDifferentialGeometry0.calcIsophoteFlowStore(0, 1, 1, 0);
      assertNotNull(realGrayImage1);
      
      localDifferentialGeometry0.calcIsophoteFlowStore(0, 0, 0, 0);
      assertEquals(0.0, localDifferentialGeometry0.stdDevKappaSquare, 0.01D);
  }

  @Test
  public void test7()  throws Throwable  {
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry();
      localDifferentialGeometry0.calcIsophoteFlow((-16), (-11), 625, (-11));
      assertEquals(0.0, localDifferentialGeometry0.avgAbsKappa, 0.01D);
      assertEquals(0.0, localDifferentialGeometry0.stdDevAbsKappa, 0.01D);
      assertEquals(0.0, localDifferentialGeometry0.stdDevKappaSquare, 0.01D);
      assertEquals(0.0, localDifferentialGeometry0.avgKappaSquare, 0.01D);
  }

  @Test
  public void test8()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
      RealGrayImage realGrayImage1 = localDifferentialGeometry0.calcIsophoteFlowStore(0, 1, 1, 0);
      assertNotNull(realGrayImage1);
      
      RealGrayImage realGrayImage2 = localDifferentialGeometry0.calcIsophoteFlow(0, 0, (-1), (-1726));
      assertNotNull(realGrayImage2);
      assertEquals(0.0, localDifferentialGeometry0.avgKappaSquare, 0.01D);
  }

  @Test
  public void test9()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
      RealGrayImage realGrayImage1 = localDifferentialGeometry0.calcIsophoteFlow(0, 1, 1, 0);
      assertEquals(0.0, localDifferentialGeometry0.stdDevKappaSquare, 0.01D);
      assertEquals(0.0, localDifferentialGeometry0.avgKappaSquare, 0.01D);
      assertEquals("0:0\n", realGrayImage1.toString());
      assertNotNull(realGrayImage1);
      assertEquals(0.0, localDifferentialGeometry0.stdDevAbsKappa, 0.01D);
      assertEquals(0.0, localDifferentialGeometry0.avgAbsKappa, 0.01D);
  }

  @Test
  public void test10()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
      localDifferentialGeometry0.GradientMagnitude = (jigl.image.types.RealGrayImage) realGrayImage0;
      RealGrayImage realGrayImage1 = localDifferentialGeometry0.calcGradientMagnitude(0, 0, 0, 4);
      assertEquals(0.0, localDifferentialGeometry0.stdDevAbsKappa, 0.01D);
      assertSame(realGrayImage0, realGrayImage1);
      assertNotNull(realGrayImage1);
      assertEquals(0.0, localDifferentialGeometry0.avgAbsKappa, 0.01D);
  }

  @Test
  public void test11()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
      RealGrayImage realGrayImage1 = localDifferentialGeometry0.calcGradientMagnitude((-1667), 0, (-20), 0);
      assertNotNull(realGrayImage1);
      assertEquals(0.0, localDifferentialGeometry0.avgKappaSquare, 0.01D);
      assertEquals(0.0, localDifferentialGeometry0.avgAbsKappa, 0.01D);
  }

  @Test
  public void test12()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
      // Undeclared exception!
      try {
        localDifferentialGeometry0.calcGradientMagnitude((-1677), 0, 255, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
      localDifferentialGeometry0.GradientMagnitude = (jigl.image.types.RealGrayImage) realGrayImage0;
      RealGrayImage realGrayImage1 = localDifferentialGeometry0.calcApproximateGradientMagnitude(0, 0, 0, 0);
      assertEquals(0.0, localDifferentialGeometry0.stdDevAbsKappa, 0.01D);
      assertEquals(0.0, localDifferentialGeometry0.stdDevKappaSquare, 0.01D);
      assertSame(realGrayImage0, realGrayImage1);
      assertEquals(0.0, localDifferentialGeometry0.avgAbsKappa, 0.01D);
      assertEquals(0.0, localDifferentialGeometry0.avgKappaSquare, 0.01D);
      assertNotNull(realGrayImage1);
  }

  @Test
  public void test14()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(1, 1);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
      RealGrayImage realGrayImage1 = localDifferentialGeometry0.calcApproximateGradientMagnitude(1, 1, (-1970), (-1970));
      assertEquals(0.0, localDifferentialGeometry0.avgKappaSquare, 0.01D);
      assertNotNull(realGrayImage1);
      assertEquals(0.0, localDifferentialGeometry0.stdDevKappaSquare, 0.01D);
      assertEquals("1:1\n0.0 \n", realGrayImage1.toString());
      assertEquals(0.0, localDifferentialGeometry0.avgAbsKappa, 0.01D);
  }

  @Test
  public void test15()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
      RealGrayImage realGrayImage1 = localDifferentialGeometry0.calcOrientationMap(1985, 136, 0, (-32768));
      assertNotNull(realGrayImage1);
      
      RealGrayImage realGrayImage2 = localDifferentialGeometry0.calcOrientationMap((-965), 0, 0, (-1350));
      assertEquals(0, realGrayImage2.Y());
      assertNotNull(realGrayImage2);
      assertSame(realGrayImage2, realGrayImage1);
      assertEquals(0.0, localDifferentialGeometry0.avgAbsKappa, 0.01D);
  }

  @Test
  public void test16()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
  }

  @Test
  public void test17()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
      localDifferentialGeometry0.calcIsophoteStore(0, 0, (-1254), 1);
  }

  @Test
  public void test18()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
      localDifferentialGeometry0.calcIsophoteStore(0, 0, (-1254), 1);
  }

  @Test
  public void test19()  throws Throwable  {
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry();
      localDifferentialGeometry0.setImage((RealGrayImage) null, (-16), (-16), 625, (-133));
      assertEquals(0.0, localDifferentialGeometry0.stdDevKappaSquare, 0.01D);
      assertEquals(0.0, localDifferentialGeometry0.avgKappaSquare, 0.01D);
      assertEquals(0.0, localDifferentialGeometry0.avgAbsKappa, 0.01D);
      assertEquals(0.0, localDifferentialGeometry0.stdDevAbsKappa, 0.01D);
  }

  @Test
  public void test20()  throws Throwable  {
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry();
      // Undeclared exception!
      try {
        localDifferentialGeometry0.setImage((RealGrayImage) null, (-1135), (-1135), 0, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test21()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
      localDifferentialGeometry0.calcIy(realGrayImage0, realGrayImage0, 0, 1, 1, 1);
      assertEquals(0.0, localDifferentialGeometry0.stdDevAbsKappa, 0.01D);
      assertEquals(0.0, localDifferentialGeometry0.stdDevKappaSquare, 0.01D);
      assertEquals(0.0, localDifferentialGeometry0.avgKappaSquare, 0.01D);
      assertEquals(0.0, localDifferentialGeometry0.avgAbsKappa, 0.01D);
  }

  @Test
  public void test22()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
      // Undeclared exception!
      try {
        localDifferentialGeometry0.calcIy(realGrayImage0, realGrayImage0, (-20), (-1763), 1, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test23()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
      // Undeclared exception!
      try {
        localDifferentialGeometry0.calcIy(realGrayImage0, realGrayImage0, 0, (-535), 1, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test24()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
      localDifferentialGeometry0.calcIx(realGrayImage0, realGrayImage0, 0, 1, 1712, 1);
      assertEquals(0.0, localDifferentialGeometry0.stdDevAbsKappa, 0.01D);
      assertEquals(0.0, localDifferentialGeometry0.avgKappaSquare, 0.01D);
      assertEquals(0.0, localDifferentialGeometry0.stdDevKappaSquare, 0.01D);
      assertEquals(0.0, localDifferentialGeometry0.avgAbsKappa, 0.01D);
  }

  @Test
  public void test25()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
      localDifferentialGeometry0.calcIsophoteStore(0, 0, (-1254), 1);
  }

  @Test
  public void test26()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
      localDifferentialGeometry0.calcIsophoteStore(0, 0, (-1254), 1);
  }

  @Test
  public void test27()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      LocalDifferentialGeometry localDifferentialGeometry0 = new LocalDifferentialGeometry(realGrayImage0);
  }
}
