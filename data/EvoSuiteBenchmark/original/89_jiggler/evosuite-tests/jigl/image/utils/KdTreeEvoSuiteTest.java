/*
 * This file was automatically generated by EvoSuite
 */

package jigl.image.utils;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Vector;
import jigl.image.ColorModel;
import jigl.image.types.RealColorImage;
import jigl.image.utils.KdTree;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class KdTreeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      KdTree kdTree0 = new KdTree(1092);
      KdTree kdTree1 = kdTree0.getLeft();
      assertNull(kdTree1);
  }

  @Test
  public void test1()  throws Throwable  {
      KdTree kdTree0 = new KdTree(1812);
      Vector<Object> vector0 = kdTree0.getValues();
      assertEquals(10, vector0.capacity());
  }

  @Test
  public void test2()  throws Throwable  {
      KdTree kdTree0 = new KdTree(1812);
      KdTree kdTree1 = kdTree0.getRoot();
      assertNull(kdTree1);
  }

  @Test
  public void test3()  throws Throwable  {
      KdTree kdTree0 = new KdTree(1802);
      KdTree kdTree1 = kdTree0.getRight();
      assertNull(kdTree1);
  }

  @Test
  public void test4()  throws Throwable  {
      KdTree kdTree0 = new KdTree(1802);
      Float[] floatArray0 = kdTree0.getValue();
      assertNull(floatArray0);
  }

  @Test
  public void test5()  throws Throwable  {
      KdTree kdTree0 = new KdTree(1092);
      RealColorImage realColorImage0 = new RealColorImage();
      kdTree0.buildTreePalette(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
  }

  @Test
  public void test6()  throws Throwable  {
      KdTree kdTree0 = new KdTree(1812);
      Float[] floatArray0 = new Float[3];
      Float float0 = new Float(0.114);
      floatArray0[0] = float0;
      kdTree0.addNode(floatArray0, kdTree0);
      RealColorImage realColorImage0 = new RealColorImage(882, 882);
      float[] floatArray1 = new float[6];
      RealColorImage realColorImage1 = realColorImage0.addbuffer(1901, 1812, 0, 1901, floatArray1);
      // Undeclared exception!
      try {
        kdTree0.buildTreePalette(realColorImage1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 3
         */
      }
  }
}
