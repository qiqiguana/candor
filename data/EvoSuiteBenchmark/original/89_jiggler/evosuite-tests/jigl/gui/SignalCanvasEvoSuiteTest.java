/*
 * This file was automatically generated by EvoSuite
 */

package jigl.gui;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Graphics;
import java.awt.Image;
import jigl.gui.SignalCanvas;
import jigl.signal.BadSignalException;
import jigl.signal.ComplexSignal;
import jigl.signal.DiscreteSignal;
import jigl.signal.PhaseSignal;
import jigl.signal.RealSignal;
import jigl.signal.Signal;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SignalCanvasEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      float[] floatArray0 = new float[5];
      RealSignal realSignal0 = new RealSignal(floatArray0);
      SignalCanvas signalCanvas0 = new SignalCanvas(realSignal0);
      assertNotNull(signalCanvas0);
      
      signalCanvas0.setSignal((Signal) realSignal0);
      assertEquals("canvas102", signalCanvas0.getName());
      assertEquals("jigl.gui.SignalCanvas[canvas102,0,0,0x0,invalid]", signalCanvas0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      PhaseSignal phaseSignal0 = new PhaseSignal(0);
      SignalCanvas signalCanvas0 = new SignalCanvas((RealSignal) phaseSignal0);
      assertNotNull(signalCanvas0);
      
      signalCanvas0.setVisible(false);
      assertEquals(false, signalCanvas0.isVisible());
      assertEquals("canvas105", signalCanvas0.getName());
  }

  @Test
  public void test2()  throws Throwable  {
      ComplexSignal complexSignal0 = new ComplexSignal(171);
      SignalCanvas signalCanvas0 = new SignalCanvas(complexSignal0);
      assertNotNull(signalCanvas0);
      assertEquals("canvas117", signalCanvas0.getName());
  }

  @Test
  public void test3()  throws Throwable  {
      SignalCanvas signalCanvas0 = new SignalCanvas();
      // Undeclared exception!
      try {
        signalCanvas0.print((Graphics) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      SignalCanvas signalCanvas0 = new SignalCanvas();
      signalCanvas0.getSignal();
      assertEquals("canvas125", signalCanvas0.getName());
      assertEquals("jigl.gui.SignalCanvas[canvas125,0,0,0x0,invalid]", signalCanvas0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      short[] shortArray0 = new short[6];
      shortArray0[0] = (short)1363;
      DiscreteSignal discreteSignal0 = new DiscreteSignal(shortArray0);
      SignalCanvas signalCanvas0 = new SignalCanvas(discreteSignal0);
      assertNotNull(signalCanvas0);
      
      // Undeclared exception!
      try {
        signalCanvas0.setOffScreen((double) (short) (-1326), (-1.0));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      SignalCanvas signalCanvas0 = new SignalCanvas();
      // Undeclared exception!
      try {
        signalCanvas0.setOffScreen();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      short[] shortArray0 = new short[9];
      DiscreteSignal discreteSignal0 = new DiscreteSignal(shortArray0);
      SignalCanvas signalCanvas0 = null;
      try {
        signalCanvas0 = new SignalCanvas((Signal) discreteSignal0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      SignalCanvas signalCanvas0 = new SignalCanvas();
      signalCanvas0.setSignal((Image) null);
      assertEquals(false, signalCanvas0.isDisplayable());
  }

  @Test
  public void test9()  throws Throwable  {
      SignalCanvas signalCanvas0 = new SignalCanvas();
      signalCanvas0.getJavaSignal();
      assertEquals("canvas179", signalCanvas0.getName());
      assertEquals("jigl.gui.SignalCanvas[canvas179,0,0,0x0,invalid]", signalCanvas0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      float[] floatArray0 = new float[5];
      floatArray0[0] = 32767.0F;
      RealSignal realSignal0 = new RealSignal(floatArray0);
      SignalCanvas signalCanvas0 = new SignalCanvas(realSignal0);
      assertEquals("canvas181", signalCanvas0.getName());
  }
}
