/*
 * This file was automatically generated by EvoSuite
 */

package jigl.gui;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Rectangle;
import javax.swing.CellRendererPane;
import javax.swing.JPasswordField;
import javax.swing.plaf.ColorUIResource;
import jigl.gui.JImageCanvas;
import jigl.image.Image;
import jigl.image.exceptions.ImageNotSupportedException;
import jigl.image.exceptions.InvalidKernelException;
import jigl.image.types.BinaryImage;
import jigl.image.types.ColorImage;
import jigl.image.types.ComplexImage;
import jigl.image.types.GrayImage;
import jigl.image.types.ImageKernel;
import jigl.image.types.InterpolatedColorImage;
import jigl.image.types.InterpolatedGrayImage;
import jigl.image.types.InterpolatedRealColorImage;
import jigl.image.types.KernelType;
import jigl.image.types.RealColorImage;
import jigl.image.types.RealGrayImage;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JImageCanvasEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JImageCanvas jImageCanvas0 = new JImageCanvas();
      int int0 = jImageCanvas0.getSelectionBoxExtentY();
      assertEquals(0, int0);
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentX());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorY());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorX());
  }

  @Test
  public void test1()  throws Throwable  {
      JImageCanvas jImageCanvas0 = new JImageCanvas();
      int int0 = jImageCanvas0.getSelectionBoxAnchorX();
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentX());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentY());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorY());
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      JImageCanvas jImageCanvas0 = new JImageCanvas();
      int int0 = jImageCanvas0.getSelectionBoxAnchorY();
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentX());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentY());
      assertEquals(0, int0);
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorX());
  }

  @Test
  public void test3()  throws Throwable  {
      JImageCanvas jImageCanvas0 = new JImageCanvas();
      jImageCanvas0.getJavaImage();
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorX());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorY());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentY());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentX());
  }

  @Test
  public void test4()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(8, 8);
      interpolatedGrayImage0.clear((Integer) 8);
      JImageCanvas jImageCanvas0 = new JImageCanvas((GrayImage) interpolatedGrayImage0);
      assertNotNull(jImageCanvas0);
      
      JPasswordField jPasswordField0 = new JPasswordField("&HM)Q/.a_bWFCz*", 0);
      ColorUIResource colorUIResource0 = (ColorUIResource)jPasswordField0.getSelectionColor();
      jImageCanvas0.setActiveColor((Color) colorUIResource0);
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorY());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorX());
      assertEquals("jigl.gui.JImageCanvas[,0,0,8x8,invalid,layout=java.awt.FlowLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", jImageCanvas0.toString());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentX());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentY());
  }

  @Test
  public void test5()  throws Throwable  {
      ComplexImage complexImage0 = new ComplexImage();
      JImageCanvas jImageCanvas0 = null;
      try {
        jImageCanvas0 = new JImageCanvas(complexImage0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      JImageCanvas jImageCanvas0 = null;
      try {
        jImageCanvas0 = new JImageCanvas((Image) interpolatedColorImage0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(8, 8);
      InterpolatedGrayImage interpolatedGrayImage1 = (InterpolatedGrayImage)interpolatedGrayImage0.clear((Integer) 8);
      JImageCanvas jImageCanvas0 = new JImageCanvas((GrayImage) interpolatedGrayImage1);
      assertNotNull(jImageCanvas0);
      
      int int0 = jImageCanvas0.getSelectionBoxExtentX();
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorY());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorX());
      assertEquals("jigl.gui.JImageCanvas[,0,0,8x8,invalid,layout=java.awt.FlowLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", jImageCanvas0.toString());
      assertEquals(0, int0);
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentY());
  }

  @Test
  public void test8()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      JImageCanvas jImageCanvas0 = new JImageCanvas(binaryImage0);
      assertNotNull(jImageCanvas0);
      
      // Undeclared exception!
      try {
        jImageCanvas0.update((Graphics) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      KernelType kernelType0 = KernelType.PREWITT_X;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      JImageCanvas jImageCanvas0 = new JImageCanvas((RealGrayImage) imageKernel0);
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorY());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorX());
      assertNotNull(jImageCanvas0);
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentX());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentY());
      assertEquals("jigl.gui.JImageCanvas[,0,0,3x3,invalid,layout=java.awt.FlowLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", jImageCanvas0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      JImageCanvas jImageCanvas0 = null;
      try {
        jImageCanvas0 = new JImageCanvas((ColorImage) null);
        fail("Expecting exception: ImageNotSupportedException");
      } catch(ImageNotSupportedException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      JImageCanvas jImageCanvas0 = new JImageCanvas();
      // Undeclared exception!
      try {
        jImageCanvas0.setVisible(true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(8, 8);
      InterpolatedGrayImage interpolatedGrayImage1 = (InterpolatedGrayImage)interpolatedGrayImage0.clear((Integer) 8);
      JImageCanvas jImageCanvas0 = new JImageCanvas((GrayImage) interpolatedGrayImage1);
      assertEquals(8, jImageCanvas0.imWidth());
      assertNotNull(jImageCanvas0);
      
      // Undeclared exception!
      try {
        jImageCanvas0.setImage((java.awt.Image) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      BinaryImage binaryImage0 = new BinaryImage(0, 0, byteArray0);
      JImageCanvas jImageCanvas0 = new JImageCanvas(binaryImage0);
      assertNotNull(jImageCanvas0);
      
      // Undeclared exception!
      try {
        jImageCanvas0.setOffScreen();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      JImageCanvas jImageCanvas0 = new JImageCanvas();
      BinaryImage binaryImage0 = new BinaryImage(320, 0);
      jImageCanvas0.setImage((Image) binaryImage0);
      // Undeclared exception!
      try {
        jImageCanvas0.setOffScreen((double) 0, (-75.6006370824595));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      JImageCanvas jImageCanvas0 = new JImageCanvas();
      Dimension dimension0 = jImageCanvas0.getPreferredSize();
      assertEquals("java.awt.Dimension[width=0,height=0]", dimension0.toString());
      assertNotNull(dimension0);
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentX());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentY());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorY());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorX());
  }

  @Test
  public void test16()  throws Throwable  {
      JImageCanvas jImageCanvas0 = new JImageCanvas();
      jImageCanvas0.getImage();
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentX());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentY());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorY());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorX());
  }

  @Test
  public void test17()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(8, 8);
      interpolatedGrayImage0.clear((Integer) 8);
      JImageCanvas jImageCanvas0 = new JImageCanvas((GrayImage) interpolatedGrayImage0);
      assertNotNull(jImageCanvas0);
      
      jImageCanvas0.setSelectionBoxAnchor(7, 0);
      assertEquals(7, jImageCanvas0.getSelectionBoxAnchorX());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorY());
  }

  @Test
  public void test18()  throws Throwable  {
      InterpolatedRealColorImage interpolatedRealColorImage0 = new InterpolatedRealColorImage(1, 0);
      JImageCanvas jImageCanvas0 = new JImageCanvas((RealColorImage) interpolatedRealColorImage0);
      assertNotNull(jImageCanvas0);
      
      Dimension dimension0 = jImageCanvas0.getSize();
      assertEquals(1, dimension0.width);
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorX());
      assertNotNull(dimension0);
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorY());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentX());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentY());
  }

  @Test
  public void test19()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(8, 8);
      interpolatedGrayImage0.clear((Integer) 8);
      JImageCanvas jImageCanvas0 = new JImageCanvas((GrayImage) interpolatedGrayImage0);
      assertNotNull(jImageCanvas0);
      
      CellRendererPane cellRendererPane0 = new CellRendererPane();
      Dimension dimension0 = cellRendererPane0.getSize();
      jImageCanvas0.getSize(dimension0);
      assertEquals(8, dimension0.height);
      assertEquals(8.0, dimension0.getHeight(), 0.01D);
  }

  @Test
  public void test20()  throws Throwable  {
      JImageCanvas jImageCanvas0 = new JImageCanvas();
      // Undeclared exception!
      try {
        jImageCanvas0.getSize((Dimension) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test21()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(8, 8);
      interpolatedGrayImage0.clear((Integer) 8);
      JImageCanvas jImageCanvas0 = new JImageCanvas((GrayImage) interpolatedGrayImage0);
      assertNotNull(jImageCanvas0);
      
      jImageCanvas0.repaint((-1888L));
      assertEquals(8, jImageCanvas0.getHeight());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentX());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorY());
      assertEquals("jigl.gui.JImageCanvas[,0,0,8x8,invalid,layout=java.awt.FlowLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", jImageCanvas0.toString());
      assertEquals(8, jImageCanvas0.getWidth());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorX());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentY());
  }

  @Test
  public void test22()  throws Throwable  {
      JImageCanvas jImageCanvas0 = new JImageCanvas();
      jImageCanvas0.repaint(0, 0, 320, 465);
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentX());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentY());
      assertEquals(0, jImageCanvas0.getWidth());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorY());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorX());
  }

  @Test
  public void test23()  throws Throwable  {
      JImageCanvas jImageCanvas0 = new JImageCanvas();
      int int0 = jImageCanvas0.getHeight();
      assertEquals(0, int0);
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentY());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentX());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorY());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorX());
  }

  @Test
  public void test24()  throws Throwable  {
      JImageCanvas jImageCanvas0 = new JImageCanvas();
      jImageCanvas0.setSelectionBoxAnchor((-1335), 0);
      assertEquals(-1, jImageCanvas0.getSelectionBoxAnchorY());
      assertEquals(-1, jImageCanvas0.getSelectionBoxExtentY());
  }

  @Test
  public void test25()  throws Throwable  {
      JImageCanvas jImageCanvas0 = new JImageCanvas();
      jImageCanvas0.setSelectionBoxAnchor(0, (-1686));
      assertEquals(-1, jImageCanvas0.getSelectionBoxExtentX());
      assertEquals(-1, jImageCanvas0.getSelectionBoxAnchorX());
  }

  @Test
  public void test26()  throws Throwable  {
      JImageCanvas jImageCanvas0 = new JImageCanvas();
      jImageCanvas0.showSelectionBox(true);
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentX());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentY());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorX());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorY());
  }

  @Test
  public void test27()  throws Throwable  {
      JImageCanvas jImageCanvas0 = new JImageCanvas();
      jImageCanvas0.showSelectionBox(false);
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentX());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentY());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorY());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorX());
  }

  @Test
  public void test28()  throws Throwable  {
      JImageCanvas jImageCanvas0 = new JImageCanvas();
      jImageCanvas0.clearSelectionBox();
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentX());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorX());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorY());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentY());
  }

  @Test
  public void test29()  throws Throwable  {
      JImageCanvas jImageCanvas0 = new JImageCanvas();
      Rectangle rectangle0 = jImageCanvas0.getSelectionBox();
      assertNull(rectangle0);
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorX());
  }

  @Test
  public void test30()  throws Throwable  {
      JImageCanvas jImageCanvas0 = new JImageCanvas();
      jImageCanvas0.setActive(true);
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorY());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorX());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentX());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentY());
  }

  @Test
  public void test31()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(8, 8);
      interpolatedGrayImage0.clear((Integer) 8);
      JImageCanvas jImageCanvas0 = new JImageCanvas((GrayImage) interpolatedGrayImage0);
      assertNotNull(jImageCanvas0);
      
      jImageCanvas0.setActive(false);
      assertEquals("jigl.gui.JImageCanvas[,0,0,8x8,invalid,layout=java.awt.FlowLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", jImageCanvas0.toString());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorX());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorY());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentX());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentY());
  }

  @Test
  public void test32()  throws Throwable  {
      JImageCanvas jImageCanvas0 = new JImageCanvas();
      jImageCanvas0.showActiveBox(true);
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentY());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorX());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorY());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentX());
  }

  @Test
  public void test33()  throws Throwable  {
      JImageCanvas jImageCanvas0 = new JImageCanvas();
      jImageCanvas0.showActiveBox(false);
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorY());
      assertEquals(0, jImageCanvas0.getSelectionBoxAnchorX());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentY());
      assertEquals(0, jImageCanvas0.getSelectionBoxExtentX());
  }
}
