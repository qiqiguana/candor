/*
 * This file was automatically generated by EvoSuite
 */

package de.huxhorn.lilith.consumers;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.huxhorn.lilith.consumers.FileSplitterEventConsumer;
import de.huxhorn.lilith.data.eventsource.EventWrapper;
import de.huxhorn.lilith.data.eventsource.SourceIdentifier;
import de.huxhorn.lilith.engine.FileBufferFactory;
import de.huxhorn.lilith.engine.SourceManager;
import de.huxhorn.lilith.engine.impl.sourcemanager.SourceManagerImpl;
import de.huxhorn.sulky.buffers.BlockingCircularBuffer;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FileSplitterEventConsumerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SourceManagerImpl<Integer> sourceManagerImpl0 = new SourceManagerImpl<Integer>((BlockingCircularBuffer<EventWrapper<Integer>>) null);
      FileSplitterEventConsumer<Integer> fileSplitterEventConsumer0 = new FileSplitterEventConsumer<Integer>((FileBufferFactory<Integer>) null, (SourceManager<Integer>) sourceManagerImpl0);
      fileSplitterEventConsumer0.consume((List<EventWrapper<Integer>>) null);
  }

  @Test
  public void test1()  throws Throwable  {
      SourceManagerImpl<Integer> sourceManagerImpl0 = new SourceManagerImpl<Integer>((BlockingCircularBuffer<EventWrapper<Integer>>) null);
      FileSplitterEventConsumer<Integer> fileSplitterEventConsumer0 = new FileSplitterEventConsumer<Integer>((FileBufferFactory<Integer>) null, (SourceManager<Integer>) sourceManagerImpl0);
      LinkedList<EventWrapper<Integer>> linkedList0 = new LinkedList<EventWrapper<Integer>>();
      fileSplitterEventConsumer0.consume((List<EventWrapper<Integer>>) linkedList0);
      assertEquals(true, linkedList0.isEmpty());
  }

  @Test
  public void test2()  throws Throwable  {
      SourceManagerImpl<Integer> sourceManagerImpl0 = new SourceManagerImpl<Integer>((BlockingCircularBuffer<EventWrapper<Integer>>) null);
      FileSplitterEventConsumer<Integer> fileSplitterEventConsumer0 = new FileSplitterEventConsumer<Integer>((FileBufferFactory<Integer>) null, (SourceManager<Integer>) sourceManagerImpl0);
      LinkedList<EventWrapper<Integer>> linkedList0 = new LinkedList<EventWrapper<Integer>>();
      EventWrapper<Integer> eventWrapper0 = new EventWrapper<Integer>();
      linkedList0.add(eventWrapper0);
      linkedList0.add(eventWrapper0);
      // Undeclared exception!
      try {
        fileSplitterEventConsumer0.consume((List<EventWrapper<Integer>>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      SourceManagerImpl<Integer> sourceManagerImpl0 = new SourceManagerImpl<Integer>((BlockingCircularBuffer<EventWrapper<Integer>>) null);
      FileSplitterEventConsumer<Integer> fileSplitterEventConsumer0 = new FileSplitterEventConsumer<Integer>((FileBufferFactory<Integer>) null, (SourceManager<Integer>) sourceManagerImpl0);
      LinkedList<EventWrapper<Integer>> linkedList0 = new LinkedList<EventWrapper<Integer>>();
      EventWrapper<Integer> eventWrapper0 = new EventWrapper<Integer>();
      SourceIdentifier sourceIdentifier0 = new SourceIdentifier("");
      eventWrapper0.setSourceIdentifier(sourceIdentifier0);
      linkedList0.add(eventWrapper0);
      // Undeclared exception!
      try {
        fileSplitterEventConsumer0.consume((List<EventWrapper<Integer>>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
