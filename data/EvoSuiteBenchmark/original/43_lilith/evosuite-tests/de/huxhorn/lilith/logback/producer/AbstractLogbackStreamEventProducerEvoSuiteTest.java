/*
 * This file was automatically generated by EvoSuite
 */

package de.huxhorn.lilith.logback.producer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.huxhorn.lilith.data.access.AccessEvent;
import de.huxhorn.lilith.data.eventsource.EventWrapper;
import de.huxhorn.lilith.data.eventsource.SourceIdentifier;
import de.huxhorn.lilith.logback.producer.LogbackAccessStreamEventProducer;
import de.huxhorn.sulky.buffers.AppendOperation;
import java.io.IOException;
import java.io.InputStream;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AbstractLogbackStreamEventProducerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SourceIdentifier sourceIdentifier0 = new SourceIdentifier();
      LogbackAccessStreamEventProducer logbackAccessStreamEventProducer0 = null;
      try {
        logbackAccessStreamEventProducer0 = new LogbackAccessStreamEventProducer(sourceIdentifier0, (AppendOperation<EventWrapper<AccessEvent>>) null, (InputStream) null);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * Stream closed
         */
      }
  }
}
