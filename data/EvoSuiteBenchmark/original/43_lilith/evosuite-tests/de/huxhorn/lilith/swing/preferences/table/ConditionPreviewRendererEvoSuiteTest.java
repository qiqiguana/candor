/*
 * This file was automatically generated by EvoSuite
 */

package de.huxhorn.lilith.swing.preferences.table;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.huxhorn.lilith.swing.preferences.SavedCondition;
import de.huxhorn.lilith.swing.preferences.table.ConditionPreviewRenderer;
import de.huxhorn.lilith.swing.table.ColorScheme;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ConditionPreviewRendererEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ConditionPreviewRenderer conditionPreviewRenderer0 = new ConditionPreviewRenderer();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Vector) null, (Vector) null);
      Vector<Object> vector0 = defaultTableModel0.getDataVector();
      JTable jTable0 = new JTable(vector0, (Vector) null);
      SavedCondition savedCondition0 = new SavedCondition();
      JLabel jLabel0 = (JLabel)conditionPreviewRenderer0.getTableCellRendererComponent(jTable0, (Object) savedCondition0, false, true, 0, 0);
      assertEquals(27, jTable0.getRowHeight());
      assertEquals("Message", jLabel0.getText());
  }

  @Test
  public void test1()  throws Throwable  {
      ConditionPreviewRenderer conditionPreviewRenderer0 = new ConditionPreviewRenderer();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Vector) null, (Vector) null);
      Vector<Object> vector0 = defaultTableModel0.getDataVector();
      JTable jTable0 = new JTable(vector0, (Vector) null);
      ColorScheme colorScheme0 = conditionPreviewRenderer0.resolveColorScheme(jTable0, (Object) vector0, false, false, 701, 701);
      assertNull(colorScheme0);
  }
}
