/*
 * This file was automatically generated by EvoSuite
 */

package de.huxhorn.lilith.buffers;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.huxhorn.lilith.buffers.SoftReferenceCachingBuffer;
import de.huxhorn.sulky.buffers.BlockingCircularBuffer;
import de.huxhorn.sulky.buffers.Buffer;
import de.huxhorn.sulky.buffers.DisposeOperation;
import de.huxhorn.sulky.buffers.ResetOperation;
import de.huxhorn.sulky.buffers.SerializingFileBuffer;
import java.io.File;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SoftReferenceCachingBufferEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SoftReferenceCachingBuffer<SoftReferenceCachingBuffer<DisposeOperation>> softReferenceCachingBuffer0 = null;
      try {
        softReferenceCachingBuffer0 = new SoftReferenceCachingBuffer<SoftReferenceCachingBuffer<DisposeOperation>>((Buffer<SoftReferenceCachingBuffer<DisposeOperation>>) null);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class de.huxhorn.lilith.buffers.SoftReferenceCachingBuffer
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      BlockingCircularBuffer<ResetOperation> blockingCircularBuffer0 = null;
      try {
        blockingCircularBuffer0 = new BlockingCircularBuffer<ResetOperation>(2048);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * ch/qos/logback/classic/util/LoggerNameUtil
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      BlockingCircularBuffer<ResetOperation> blockingCircularBuffer0 = null;
      try {
        blockingCircularBuffer0 = new BlockingCircularBuffer<ResetOperation>(2048);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * ch/qos/logback/classic/util/LoggerNameUtil
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      File file0 = new File("", "");
      SerializingFileBuffer<SoftReferenceCachingBuffer<ResetOperation>> serializingFileBuffer0 = null;
      try {
        serializingFileBuffer0 = new SerializingFileBuffer<SoftReferenceCachingBuffer<ResetOperation>>(file0, file0);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * ch/qos/logback/classic/util/LoggerNameUtil
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      SoftReferenceCachingBuffer<SoftReferenceCachingBuffer<DisposeOperation>> softReferenceCachingBuffer0 = null;
      try {
        softReferenceCachingBuffer0 = new SoftReferenceCachingBuffer<SoftReferenceCachingBuffer<DisposeOperation>>((Buffer<SoftReferenceCachingBuffer<DisposeOperation>>) null);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class de.huxhorn.lilith.buffers.SoftReferenceCachingBuffer
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      File file0 = new File("", "");
      SerializingFileBuffer<SoftReferenceCachingBuffer<ResetOperation>> serializingFileBuffer0 = null;
      try {
        serializingFileBuffer0 = new SerializingFileBuffer<SoftReferenceCachingBuffer<ResetOperation>>(file0, file0);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * ch/qos/logback/classic/util/LoggerNameUtil
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      BlockingCircularBuffer<ResetOperation> blockingCircularBuffer0 = null;
      try {
        blockingCircularBuffer0 = new BlockingCircularBuffer<ResetOperation>(2048);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * ch/qos/logback/classic/util/LoggerNameUtil
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      File file0 = new File("", "");
      SerializingFileBuffer<SoftReferenceCachingBuffer<ResetOperation>> serializingFileBuffer0 = null;
      try {
        serializingFileBuffer0 = new SerializingFileBuffer<SoftReferenceCachingBuffer<ResetOperation>>(file0, file0);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * ch/qos/logback/classic/util/LoggerNameUtil
         */
      }
  }
}
