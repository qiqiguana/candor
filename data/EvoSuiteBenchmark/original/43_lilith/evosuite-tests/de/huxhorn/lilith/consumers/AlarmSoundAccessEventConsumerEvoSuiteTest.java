/*
 * This file was automatically generated by EvoSuite
 */

package de.huxhorn.lilith.consumers;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.huxhorn.lilith.consumers.AlarmSoundAccessEventConsumer;
import de.huxhorn.lilith.data.access.AccessEvent;
import de.huxhorn.lilith.data.eventsource.EventWrapper;
import de.huxhorn.sulky.sounds.Sounds;
import de.huxhorn.sulky.sounds.jlayer.JLayerSounds;
import groovy.lang.Sequence;
import java.util.List;
import java.util.Vector;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AlarmSoundAccessEventConsumerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AlarmSoundAccessEventConsumer alarmSoundAccessEventConsumer0 = new AlarmSoundAccessEventConsumer();
      Sounds sounds0 = alarmSoundAccessEventConsumer0.getSounds();
      assertNull(sounds0);
  }

  @Test
  public void test1()  throws Throwable  {
      AlarmSoundAccessEventConsumer alarmSoundAccessEventConsumer0 = new AlarmSoundAccessEventConsumer();
      Class<?> class0 = AlarmSoundAccessEventConsumer.class;
      Sequence sequence0 = new Sequence(class0);
      alarmSoundAccessEventConsumer0.consume((List<EventWrapper<AccessEvent>>) sequence0);
      assertEquals(true, sequence0.isEmpty());
  }

  @Test
  public void test2()  throws Throwable  {
      AlarmSoundAccessEventConsumer alarmSoundAccessEventConsumer0 = new AlarmSoundAccessEventConsumer();
      JLayerSounds jLayerSounds0 = null;
      try {
        jLayerSounds0 = new JLayerSounds();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * ch/qos/logback/classic/util/LoggerNameUtil
         */
      }
  }
}
