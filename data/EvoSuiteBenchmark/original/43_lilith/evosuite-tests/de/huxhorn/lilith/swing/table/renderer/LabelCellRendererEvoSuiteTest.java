/*
 * This file was automatically generated by EvoSuite
 */

package de.huxhorn.lilith.swing.table.renderer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.huxhorn.lilith.swing.table.ColorScheme;
import de.huxhorn.lilith.swing.table.Colors;
import de.huxhorn.lilith.swing.table.renderer.LabelCellRenderer;
import java.awt.Color;
import javax.swing.Icon;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JFormattedTextField;
import javax.swing.JTable;
import javax.swing.plaf.ColorUIResource;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LabelCellRendererEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LabelCellRenderer labelCellRenderer0 = new LabelCellRenderer();
      assertNotNull(labelCellRenderer0);
      
      labelCellRenderer0.setSelected(true);
      assertEquals(true, labelCellRenderer0.isOpaque());
  }

  @Test
  public void test1()  throws Throwable  {
      JTable jTable0 = new JTable();
      int int0 = LabelCellRenderer.getSelectedRow(jTable0);
      assertEquals((-1), int0);
  }

  @Test
  public void test2()  throws Throwable  {
      LabelCellRenderer labelCellRenderer0 = new LabelCellRenderer();
      assertNotNull(labelCellRenderer0);
      
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("", (Icon) null);
      ColorUIResource colorUIResource0 = (ColorUIResource)jCheckBoxMenuItem0.getBackground();
      labelCellRenderer0.setBorderColor((Color) colorUIResource0);
      assertEquals(true, labelCellRenderer0.isFontSet());
  }

  @Test
  public void test3()  throws Throwable  {
      LabelCellRenderer labelCellRenderer0 = new LabelCellRenderer();
      assertNotNull(labelCellRenderer0);
      
      labelCellRenderer0.validate();
      assertEquals(true, labelCellRenderer0.isFontSet());
  }

  @Test
  public void test4()  throws Throwable  {
      LabelCellRenderer labelCellRenderer0 = new LabelCellRenderer();
      assertNotNull(labelCellRenderer0);
      
      labelCellRenderer0.setFocused(true);
      assertEquals(true, labelCellRenderer0.isOpaque());
      assertEquals(true, labelCellRenderer0.isBackgroundSet());
  }

  @Test
  public void test5()  throws Throwable  {
      LabelCellRenderer labelCellRenderer0 = new LabelCellRenderer();
      assertNotNull(labelCellRenderer0);
      
      ColorScheme colorScheme0 = new ColorScheme((Color) null, (Color) null);
      Colors colors0 = new Colors(colorScheme0);
      boolean boolean0 = labelCellRenderer0.updateColors(colors0);
      assertEquals(false, boolean0);
      assertEquals(true, labelCellRenderer0.isFontSet());
  }

  @Test
  public void test6()  throws Throwable  {
      LabelCellRenderer labelCellRenderer0 = new LabelCellRenderer();
      assertNotNull(labelCellRenderer0);
      
      Colors colors0 = new Colors();
      boolean boolean0 = labelCellRenderer0.updateColors(colors0);
      assertEquals(false, boolean0);
      assertEquals(true, labelCellRenderer0.isFontSet());
  }

  @Test
  public void test7()  throws Throwable  {
      LabelCellRenderer labelCellRenderer0 = new LabelCellRenderer();
      assertNotNull(labelCellRenderer0);
      
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField();
      Color color0 = jFormattedTextField0.getCaretColor();
      ColorScheme colorScheme0 = new ColorScheme(color0, color0);
      Colors colors0 = new Colors(colorScheme0);
      boolean boolean0 = labelCellRenderer0.updateColors(colors0);
      assertEquals(true, boolean0);
      assertEquals(true, labelCellRenderer0.isFontSet());
  }

  @Test
  public void test8()  throws Throwable  {
      LabelCellRenderer labelCellRenderer0 = new LabelCellRenderer();
      assertNotNull(labelCellRenderer0);
      
      labelCellRenderer0.correctRowHeight((JTable) null);
      assertEquals(true, labelCellRenderer0.isFontSet());
  }

  @Test
  public void test9()  throws Throwable  {
      LabelCellRenderer labelCellRenderer0 = new LabelCellRenderer();
      assertNotNull(labelCellRenderer0);
      
      JTable jTable0 = new JTable();
      labelCellRenderer0.correctRowHeight(jTable0);
      assertEquals(true, labelCellRenderer0.isFontSet());
      assertEquals(16, jTable0.getRowHeight());
      assertEquals("javax.swing.JTable[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=251658568,maximumSize=,minimumSize=,preferredSize=,autoCreateColumnsFromModel=true,autoResizeMode=AUTO_RESIZE_SUBSEQUENT_COLUMNS,cellSelectionEnabled=false,editingColumn=-1,editingRow=-1,gridColor=javax.swing.plaf.ColorUIResource[r=122,g=138,b=153],preferredViewportSize=java.awt.Dimension[width=450,height=400],rowHeight=16,rowMargin=1,rowSelectionAllowed=true,selectionBackground=javax.swing.plaf.ColorUIResource[r=184,g=207,b=229],selectionForeground=sun.swing.PrintColorUIResource[r=51,g=51,b=51],showHorizontalLines=true,showVerticalLines=true]", jTable0.toString());
  }
}
