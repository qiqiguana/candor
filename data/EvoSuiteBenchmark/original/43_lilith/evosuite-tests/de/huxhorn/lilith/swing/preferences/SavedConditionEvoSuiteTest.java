/*
 * This file was automatically generated by EvoSuite
 */

package de.huxhorn.lilith.swing.preferences;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.huxhorn.lilith.swing.preferences.SavedCondition;
import de.huxhorn.lilith.swing.table.ColorScheme;
import de.huxhorn.sulky.conditions.BooleanValues;
import de.huxhorn.sulky.conditions.Condition;
import de.huxhorn.sulky.conditions.Not;
import de.huxhorn.sulky.conditions.Or;
import java.awt.Color;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SavedConditionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SavedCondition savedCondition0 = new SavedCondition();
      savedCondition0.getCondition();
      assertEquals("SavedCondition[name=, condition=null, colorScheme=ColorScheme[textColor=java.awt.Color[r=0,g=0,b=0], backgroundColor=java.awt.Color[r=255,g=255,b=255], borderColor=java.awt.Color[r=255,g=255,b=255]], active=false]", savedCondition0.toString());
      assertEquals(false, savedCondition0.isActive());
  }

  @Test
  public void test1()  throws Throwable  {
      SavedCondition savedCondition0 = new SavedCondition();
      savedCondition0.setColorScheme((ColorScheme) null);
      savedCondition0.getTextColor();
      assertEquals("SavedCondition[name=, condition=null, colorScheme=null, active=false]", savedCondition0.toString());
      assertEquals(false, savedCondition0.isActive());
  }

  @Test
  public void test2()  throws Throwable  {
      SavedCondition savedCondition0 = new SavedCondition();
      Or or0 = new Or();
      savedCondition0.setCondition((Condition) or0);
      SavedCondition savedCondition1 = new SavedCondition((Condition) or0);
      boolean boolean0 = savedCondition0.equals((Object) savedCondition1);
      assertEquals("SavedCondition[name=, condition=false, colorScheme=ColorScheme[textColor=java.awt.Color[r=0,g=0,b=0], backgroundColor=java.awt.Color[r=255,g=255,b=255], borderColor=java.awt.Color[r=255,g=255,b=255]], active=false]", savedCondition0.toString());
      assertEquals(true, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      SavedCondition savedCondition0 = new SavedCondition();
      boolean boolean0 = savedCondition0.isActive();
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      SavedCondition savedCondition0 = new SavedCondition();
      savedCondition0.setActive(false);
      assertEquals("SavedCondition[name=, condition=null, colorScheme=ColorScheme[textColor=java.awt.Color[r=0,g=0,b=0], backgroundColor=java.awt.Color[r=255,g=255,b=255], borderColor=java.awt.Color[r=255,g=255,b=255]], active=false]", savedCondition0.toString());
      assertEquals(false, savedCondition0.isActive());
  }

  @Test
  public void test5()  throws Throwable  {
      SavedCondition savedCondition0 = new SavedCondition();
      ColorScheme colorScheme0 = savedCondition0.getColorScheme();
      assertNotNull(colorScheme0);
      assertEquals(false, savedCondition0.isActive());
      assertEquals("SavedCondition[name=, condition=null, colorScheme=ColorScheme[textColor=java.awt.Color[r=0,g=0,b=0], backgroundColor=java.awt.Color[r=255,g=255,b=255], borderColor=java.awt.Color[r=255,g=255,b=255]], active=false]", savedCondition0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      SavedCondition savedCondition0 = new SavedCondition();
      savedCondition0.setName((String) null);
      int int0 = savedCondition0.hashCode();
      assertEquals("SavedCondition[name=null, condition=null, colorScheme=ColorScheme[textColor=java.awt.Color[r=0,g=0,b=0], backgroundColor=java.awt.Color[r=255,g=255,b=255], borderColor=java.awt.Color[r=255,g=255,b=255]], active=false]", savedCondition0.toString());
      assertEquals(1056964576, int0);
  }

  @Test
  public void test7()  throws Throwable  {
      SavedCondition savedCondition0 = new SavedCondition();
      String string0 = savedCondition0.toString();
      assertNotNull(string0);
      assertEquals("SavedCondition[name=, condition=null, colorScheme=ColorScheme[textColor=java.awt.Color[r=0,g=0,b=0], backgroundColor=java.awt.Color[r=255,g=255,b=255], borderColor=java.awt.Color[r=255,g=255,b=255]], active=false]", string0);
  }

  @Test
  public void test8()  throws Throwable  {
      SavedCondition savedCondition0 = new SavedCondition();
      String string0 = savedCondition0.getName();
      assertNotNull(string0);
      assertEquals(false, savedCondition0.isActive());
      assertEquals("SavedCondition[name=, condition=null, colorScheme=ColorScheme[textColor=java.awt.Color[r=0,g=0,b=0], backgroundColor=java.awt.Color[r=255,g=255,b=255], borderColor=java.awt.Color[r=255,g=255,b=255]], active=false]", savedCondition0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      SavedCondition savedCondition0 = new SavedCondition();
      Color color0 = savedCondition0.getTextColor();
      assertNotNull(color0);
      assertEquals("SavedCondition[name=, condition=null, colorScheme=ColorScheme[textColor=java.awt.Color[r=0,g=0,b=0], backgroundColor=java.awt.Color[r=255,g=255,b=255], borderColor=java.awt.Color[r=255,g=255,b=255]], active=false]", savedCondition0.toString());
      assertEquals(false, savedCondition0.isActive());
  }

  @Test
  public void test10()  throws Throwable  {
      Or or0 = new Or();
      Not not0 = new Not((Condition) or0);
      SavedCondition savedCondition0 = new SavedCondition("VCwf.Qu n^9Eyi", (Condition) not0, (ColorScheme) null, true);
      savedCondition0.getBackgroundColor();
      assertEquals(true, savedCondition0.isActive());
  }

  @Test
  public void test11()  throws Throwable  {
      SavedCondition savedCondition0 = new SavedCondition();
      Color color0 = savedCondition0.getBackgroundColor();
      assertEquals("SavedCondition[name=, condition=null, colorScheme=ColorScheme[textColor=java.awt.Color[r=0,g=0,b=0], backgroundColor=java.awt.Color[r=255,g=255,b=255], borderColor=java.awt.Color[r=255,g=255,b=255]], active=false]", savedCondition0.toString());
      assertNotNull(color0);
      assertEquals(false, savedCondition0.isActive());
  }

  @Test
  public void test12()  throws Throwable  {
      SavedCondition savedCondition0 = new SavedCondition();
      savedCondition0.setColorScheme((ColorScheme) null);
      savedCondition0.getBorderColor();
      assertEquals("SavedCondition[name=, condition=null, colorScheme=null, active=false]", savedCondition0.toString());
  }

  @Test
  public void test13()  throws Throwable  {
      SavedCondition savedCondition0 = new SavedCondition();
      Color color0 = savedCondition0.getBorderColor();
      assertEquals("SavedCondition[name=, condition=null, colorScheme=ColorScheme[textColor=java.awt.Color[r=0,g=0,b=0], backgroundColor=java.awt.Color[r=255,g=255,b=255], borderColor=java.awt.Color[r=255,g=255,b=255]], active=false]", savedCondition0.toString());
      assertNotNull(color0);
      assertEquals(false, savedCondition0.isActive());
  }

  @Test
  public void test14()  throws Throwable  {
      SavedCondition savedCondition0 = new SavedCondition();
      BooleanValues booleanValues0 = BooleanValues.FALSE;
      SavedCondition savedCondition1 = new SavedCondition((Condition) booleanValues0);
      boolean boolean0 = savedCondition0.equals((Object) savedCondition1);
      assertFalse(savedCondition1.equals(savedCondition0));
      assertEquals(false, boolean0);
      assertEquals(false, savedCondition1.isActive());
  }

  @Test
  public void test15()  throws Throwable  {
      SavedCondition savedCondition0 = new SavedCondition();
      boolean boolean0 = savedCondition0.equals((Object) null);
      assertEquals(false, boolean0);
      assertEquals(false, savedCondition0.isActive());
  }

  @Test
  public void test16()  throws Throwable  {
      SavedCondition savedCondition0 = new SavedCondition();
      boolean boolean0 = savedCondition0.equals((Object) "SavedCondition[name=, condition=null, colorScheme=ColorScheme[textColor=java.awt.Color[r=0,g=0,b=0], backgroundColor=java.awt.Color[r=255,g=255,b=255], borderColor=java.awt.Color[r=255,g=255,b=255]], active=false]");
      assertEquals(false, boolean0);
      assertEquals("SavedCondition[name=, condition=null, colorScheme=ColorScheme[textColor=java.awt.Color[r=0,g=0,b=0], backgroundColor=java.awt.Color[r=255,g=255,b=255], borderColor=java.awt.Color[r=255,g=255,b=255]], active=false]", savedCondition0.toString());
  }

  @Test
  public void test17()  throws Throwable  {
      SavedCondition savedCondition0 = new SavedCondition();
      SavedCondition savedCondition1 = new SavedCondition("XUM.G_g;", (Condition) null, (ColorScheme) null, true);
      boolean boolean0 = savedCondition0.equals((Object) savedCondition1);
      assertEquals(true, savedCondition1.isActive());
      assertEquals(false, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      SavedCondition savedCondition0 = new SavedCondition();
      savedCondition0.setColorScheme((ColorScheme) null);
      SavedCondition savedCondition1 = new SavedCondition((String) null, (Condition) null, (ColorScheme) null, false);
      boolean boolean0 = savedCondition0.equals((Object) savedCondition1);
      assertEquals("SavedCondition[name=, condition=null, colorScheme=null, active=false]", savedCondition0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test19()  throws Throwable  {
      SavedCondition savedCondition0 = new SavedCondition();
      Or or0 = new Or();
      Color color0 = Color.GREEN;
      ColorScheme colorScheme0 = new ColorScheme(color0, color0, color0);
      SavedCondition savedCondition1 = new SavedCondition("6_BSnC0Dhh~xyG`:Z", (Condition) or0, colorScheme0, false);
      boolean boolean0 = savedCondition0.equals((Object) savedCondition1);
      assertEquals(false, boolean0);
      assertEquals("SavedCondition[name=, condition=null, colorScheme=ColorScheme[textColor=java.awt.Color[r=0,g=0,b=0], backgroundColor=java.awt.Color[r=255,g=255,b=255], borderColor=java.awt.Color[r=255,g=255,b=255]], active=false]", savedCondition0.toString());
  }

  @Test
  public void test20()  throws Throwable  {
      SavedCondition savedCondition0 = new SavedCondition();
      SavedCondition savedCondition1 = savedCondition0.clone();
      assertNotNull(savedCondition1);
      
      Or or0 = new Or();
      savedCondition1.setCondition((Condition) or0);
      boolean boolean0 = savedCondition1.equals((Object) savedCondition0);
      assertEquals("SavedCondition[name=, condition=false, colorScheme=ColorScheme[textColor=java.awt.Color[r=0,g=0,b=0], backgroundColor=java.awt.Color[r=255,g=255,b=255], borderColor=java.awt.Color[r=255,g=255,b=255]], active=false]", savedCondition1.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test21()  throws Throwable  {
      SavedCondition savedCondition0 = new SavedCondition();
      savedCondition0.setColorScheme((ColorScheme) null);
      savedCondition0.setName((String) null);
      SavedCondition savedCondition1 = new SavedCondition((String) null, (Condition) null, (ColorScheme) null, false);
      boolean boolean0 = savedCondition0.equals((Object) savedCondition1);
      assertEquals("SavedCondition[name=null, condition=null, colorScheme=null, active=false]", savedCondition0.toString());
      assertEquals(true, boolean0);
  }

  @Test
  public void test22()  throws Throwable  {
      SavedCondition savedCondition0 = new SavedCondition();
      savedCondition0.setColorScheme((ColorScheme) null);
      savedCondition0.setName((String) null);
      SavedCondition savedCondition1 = new SavedCondition("#CJ}Ajw", (Condition) null, (ColorScheme) null, false);
      boolean boolean0 = savedCondition0.equals((Object) savedCondition1);
      assertEquals("SavedCondition[name=null, condition=null, colorScheme=null, active=false]", savedCondition0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test23()  throws Throwable  {
      BooleanValues booleanValues0 = BooleanValues.getInstance(false);
      SavedCondition savedCondition0 = new SavedCondition((Condition) booleanValues0);
      int int0 = savedCondition0.hashCode();
      assertEquals((-1030305903), int0);
  }

  @Test
  public void test24()  throws Throwable  {
      SavedCondition savedCondition0 = new SavedCondition("XUM.G_g;", (Condition) null, (ColorScheme) null, true);
      int int0 = savedCondition0.hashCode();
      assertEquals((-506950155), int0);
      assertEquals(true, savedCondition0.isActive());
  }

  @Test
  public void test25()  throws Throwable  {
      Or or0 = new Or();
      Not not0 = new Not((Condition) or0);
      SavedCondition savedCondition0 = new SavedCondition("VCwf.Qu n^9Eyi", (Condition) not0, (ColorScheme) null, true);
      SavedCondition savedCondition1 = savedCondition0.clone();
      assertEquals("SavedCondition[name=VCwf.Qu n^9Eyi, condition=!(false), colorScheme=null, active=true]", savedCondition1.toString());
      assertNotNull(savedCondition1);
      assertEquals(true, savedCondition1.isActive());
      assertNotSame(savedCondition1, savedCondition0);
  }
}
