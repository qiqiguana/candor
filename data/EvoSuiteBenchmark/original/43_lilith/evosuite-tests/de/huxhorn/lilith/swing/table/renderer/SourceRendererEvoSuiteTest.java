/*
 * This file was automatically generated by EvoSuite
 */

package de.huxhorn.lilith.swing.table.renderer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.huxhorn.lilith.data.eventsource.EventIdentifier;
import de.huxhorn.lilith.data.eventsource.EventWrapper;
import de.huxhorn.lilith.data.eventsource.SourceIdentifier;
import de.huxhorn.lilith.swing.table.renderer.LabelCellRenderer;
import de.huxhorn.lilith.swing.table.renderer.SourceRenderer;
import javax.swing.JLayeredPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SourceRendererEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SourceRenderer sourceRenderer0 = new SourceRenderer();
      assertNotNull(sourceRenderer0);
      
      JTable jTable0 = new JTable();
      EventIdentifier eventIdentifier0 = new EventIdentifier((SourceIdentifier) null, (long) 1101);
      EventWrapper<Integer> eventWrapper0 = new EventWrapper<Integer>((SourceIdentifier) null, (long) 1101, (Integer) 1101);
      EventWrapper<EventWrapper<Integer>> eventWrapper1 = new EventWrapper<EventWrapper<Integer>>(eventIdentifier0, eventWrapper0);
      sourceRenderer0.getTableCellRendererComponent(jTable0, (Object) eventWrapper1, true, true, 1101, 1101);
      assertEquals("javax.swing.JTable[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=251658568,maximumSize=,minimumSize=,preferredSize=,autoCreateColumnsFromModel=true,autoResizeMode=AUTO_RESIZE_SUBSEQUENT_COLUMNS,cellSelectionEnabled=false,editingColumn=-1,editingRow=-1,gridColor=javax.swing.plaf.ColorUIResource[r=122,g=138,b=153],preferredViewportSize=java.awt.Dimension[width=450,height=400],rowHeight=27,rowMargin=1,rowSelectionAllowed=true,selectionBackground=javax.swing.plaf.ColorUIResource[r=184,g=207,b=229],selectionForeground=sun.swing.PrintColorUIResource[r=51,g=51,b=51],showHorizontalLines=true,showVerticalLines=true]", jTable0.toString());
      assertEquals(27, jTable0.getRowHeight());
  }

  @Test
  public void test1()  throws Throwable  {
      SourceRenderer sourceRenderer0 = new SourceRenderer();
      assertNotNull(sourceRenderer0);
      
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(19, 19);
      JTable jTable0 = new JTable((TableModel) defaultTableModel0);
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      LabelCellRenderer labelCellRenderer0 = (LabelCellRenderer)sourceRenderer0.getTableCellRendererComponent(jTable0, (Object) "HORIZONTAL_SCROLLBAR", false, false, (int) integer0, 19);
      assertEquals(true, labelCellRenderer0.isForegroundSet());
      assertNotNull(labelCellRenderer0);
      assertEquals(0, labelCellRenderer0.getHorizontalAlignment());
  }

  @Test
  public void test2()  throws Throwable  {
      SourceRenderer sourceRenderer0 = new SourceRenderer();
      assertNotNull(sourceRenderer0);
      
      JTable jTable0 = new JTable();
      LabelCellRenderer labelCellRenderer0 = (LabelCellRenderer)sourceRenderer0.getTableCellRendererComponent(jTable0, (Object) sourceRenderer0, false, false, (-1), (-1));
      assertEquals(0, labelCellRenderer0.getHorizontalAlignment());
      assertEquals(true, labelCellRenderer0.isForegroundSet());
      assertNotNull(labelCellRenderer0);
  }
}
