/*
 * This file was automatically generated by EvoSuite
 */

package de.huxhorn.lilith.swing;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.huxhorn.lilith.swing.HtmlTransferable;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.util.Locale;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class HtmlTransferableEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HtmlTransferable htmlTransferable0 = new HtmlTransferable("");
      DataFlavor[] dataFlavorArray0 = htmlTransferable0.getTransferDataFlavors();
      assertNotNull(dataFlavorArray0);
  }

  @Test
  public void test1()  throws Throwable  {
      HtmlTransferable htmlTransferable0 = new HtmlTransferable("");
      String string0 = htmlTransferable0.getHtml();
      assertEquals("", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      HtmlTransferable htmlTransferable0 = new HtmlTransferable("");
      Class<?> class0 = Locale.class;
      DataFlavor dataFlavor0 = new DataFlavor(class0, "");
      boolean boolean0 = htmlTransferable0.isDataFlavorSupported(dataFlavor0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      HtmlTransferable htmlTransferable0 = new HtmlTransferable("");
      DataFlavor dataFlavor0 = HtmlTransferable.XHTML_FLAVOR;
      boolean boolean0 = htmlTransferable0.isDataFlavorSupported(dataFlavor0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      HtmlTransferable htmlTransferable0 = new HtmlTransferable("");
      DataFlavor dataFlavor0 = HtmlTransferable.XHTML_FLAVOR;
      ByteArrayInputStream byteArrayInputStream0 = (ByteArrayInputStream)htmlTransferable0.getTransferData(dataFlavor0);
      assertEquals(true, byteArrayInputStream0.markSupported());
  }

  @Test
  public void test5()  throws Throwable  {
      HtmlTransferable htmlTransferable0 = new HtmlTransferable("");
      DataFlavor dataFlavor0 = HtmlTransferable.PLAIN_TEXT_FLAVOR;
      ByteArrayInputStream byteArrayInputStream0 = (ByteArrayInputStream)htmlTransferable0.getTransferData(dataFlavor0);
      assertEquals(true, byteArrayInputStream0.markSupported());
  }

  @Test
  public void test6()  throws Throwable  {
      HtmlTransferable htmlTransferable0 = new HtmlTransferable((String) null);
      DataFlavor dataFlavor0 = DataFlavor.javaFileListFlavor;
      try {
        htmlTransferable0.getTransferData(dataFlavor0);
        fail("Expecting exception: UnsupportedFlavorException");
      } catch(UnsupportedFlavorException e) {
        /*
         * application/x-java-file-list
         */
      }
  }
}
