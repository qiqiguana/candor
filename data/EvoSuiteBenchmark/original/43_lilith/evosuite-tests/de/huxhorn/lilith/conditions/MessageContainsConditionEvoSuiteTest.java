/*
 * This file was automatically generated by EvoSuite
 */

package de.huxhorn.lilith.conditions;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.huxhorn.lilith.conditions.MessageContainsCondition;
import de.huxhorn.lilith.data.eventsource.EventIdentifier;
import de.huxhorn.lilith.data.eventsource.EventWrapper;
import de.huxhorn.lilith.data.logging.LoggingEvent;
import de.huxhorn.lilith.data.logging.Message;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MessageContainsConditionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MessageContainsCondition messageContainsCondition0 = new MessageContainsCondition("Fa");
      EventIdentifier eventIdentifier0 = new EventIdentifier();
      LoggingEvent loggingEvent0 = new LoggingEvent();
      EventWrapper<LoggingEvent> eventWrapper0 = new EventWrapper<LoggingEvent>(eventIdentifier0, loggingEvent0);
      boolean boolean0 = messageContainsCondition0.isTrue((Object) eventWrapper0);
      assertEquals("message.contains(\"Fa\")", messageContainsCondition0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      MessageContainsCondition messageContainsCondition0 = new MessageContainsCondition();
      MessageContainsCondition messageContainsCondition1 = messageContainsCondition0.clone();
      boolean boolean0 = messageContainsCondition1.equals((Object) messageContainsCondition0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      MessageContainsCondition messageContainsCondition0 = new MessageContainsCondition();
      String string0 = messageContainsCondition0.getSearchString();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      MessageContainsCondition messageContainsCondition0 = new MessageContainsCondition();
      Object object0 = new Object();
      boolean boolean0 = messageContainsCondition0.isTrue(object0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      MessageContainsCondition messageContainsCondition0 = new MessageContainsCondition();
      messageContainsCondition0.setSearchString("W5;");
      boolean boolean0 = messageContainsCondition0.isTrue((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      MessageContainsCondition messageContainsCondition0 = new MessageContainsCondition();
      messageContainsCondition0.setSearchString("");
      EventWrapper<String> eventWrapper0 = new EventWrapper<String>((EventIdentifier) null, "");
      boolean boolean0 = messageContainsCondition0.isTrue((Object) eventWrapper0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      MessageContainsCondition messageContainsCondition0 = new MessageContainsCondition();
      messageContainsCondition0.setSearchString("message.contains");
      EventWrapper<String> eventWrapper0 = new EventWrapper<String>((EventIdentifier) null, "message.contains");
      boolean boolean0 = messageContainsCondition0.isTrue((Object) eventWrapper0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      MessageContainsCondition messageContainsCondition0 = new MessageContainsCondition("y");
      EventIdentifier eventIdentifier0 = new EventIdentifier();
      LoggingEvent loggingEvent0 = new LoggingEvent();
      EventWrapper<LoggingEvent> eventWrapper0 = new EventWrapper<LoggingEvent>(eventIdentifier0, loggingEvent0);
      Message message0 = new Message("y");
      loggingEvent0.setMessage(message0);
      boolean boolean0 = messageContainsCondition0.isTrue((Object) eventWrapper0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      MessageContainsCondition messageContainsCondition0 = new MessageContainsCondition("y");
      assertEquals("message.contains(\"y\")", messageContainsCondition0.toString());
      
      EventIdentifier eventIdentifier0 = new EventIdentifier();
      LoggingEvent loggingEvent0 = new LoggingEvent();
      EventWrapper<LoggingEvent> eventWrapper0 = new EventWrapper<LoggingEvent>(eventIdentifier0, loggingEvent0);
      Message message0 = new Message("y");
      loggingEvent0.setMessage(message0);
      messageContainsCondition0.setSearchString("q;(G4S0c9=3");
      boolean boolean0 = messageContainsCondition0.isTrue((Object) eventWrapper0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      MessageContainsCondition messageContainsCondition0 = new MessageContainsCondition();
      LoggingEvent loggingEvent0 = new LoggingEvent();
      boolean boolean0 = messageContainsCondition0.equals((Object) loggingEvent0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      MessageContainsCondition messageContainsCondition0 = new MessageContainsCondition();
      boolean boolean0 = messageContainsCondition0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      MessageContainsCondition messageContainsCondition0 = new MessageContainsCondition();
      MessageContainsCondition messageContainsCondition1 = messageContainsCondition0.clone();
      assertTrue(messageContainsCondition0.equals(messageContainsCondition1));
      
      messageContainsCondition1.setSearchString("message.contains");
      boolean boolean0 = messageContainsCondition1.equals((Object) messageContainsCondition0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      MessageContainsCondition messageContainsCondition0 = new MessageContainsCondition();
      messageContainsCondition0.setSearchString("message.contains");
      MessageContainsCondition messageContainsCondition1 = new MessageContainsCondition("message.contains");
      boolean boolean0 = messageContainsCondition0.equals((Object) messageContainsCondition1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      MessageContainsCondition messageContainsCondition0 = new MessageContainsCondition();
      MessageContainsCondition messageContainsCondition1 = new MessageContainsCondition("&s$wgQP");
      boolean boolean0 = messageContainsCondition0.equals((Object) messageContainsCondition1);
      assertFalse(messageContainsCondition1.equals(messageContainsCondition0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      MessageContainsCondition messageContainsCondition0 = new MessageContainsCondition();
      int int0 = messageContainsCondition0.hashCode();
      assertEquals(0, int0);
  }

  @Test
  public void test15()  throws Throwable  {
      MessageContainsCondition messageContainsCondition0 = new MessageContainsCondition();
      messageContainsCondition0.setSearchString("W5;");
      int int0 = messageContainsCondition0.hashCode();
      assertEquals(85309, int0);
  }

  @Test
  public void test16()  throws Throwable  {
      MessageContainsCondition messageContainsCondition0 = new MessageContainsCondition();
      String string0 = messageContainsCondition0.toString();
      assertNotNull(string0);
      assertEquals("message.contains(null)", string0);
  }

  @Test
  public void test17()  throws Throwable  {
      MessageContainsCondition messageContainsCondition0 = new MessageContainsCondition();
      messageContainsCondition0.setSearchString("message.contains");
      String string0 = messageContainsCondition0.toString();
      assertEquals("message.contains(\"message.contains\")", messageContainsCondition0.toString());
      assertNotNull(string0);
      assertEquals("message.contains(\"message.contains\")", string0);
  }
}
