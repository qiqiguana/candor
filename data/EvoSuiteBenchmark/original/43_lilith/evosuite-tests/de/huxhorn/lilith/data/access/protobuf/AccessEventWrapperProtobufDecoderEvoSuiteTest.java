/*
 * This file was automatically generated by EvoSuite
 */

package de.huxhorn.lilith.data.access.protobuf;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.google.protobuf.ByteString;
import com.google.protobuf.ExtensionRegistry;
import com.google.protobuf.InvalidProtocolBufferException;
import de.huxhorn.lilith.data.access.AccessEvent;
import de.huxhorn.lilith.data.access.protobuf.AccessEventWrapperProtobufDecoder;
import de.huxhorn.lilith.data.access.protobuf.generated.AccessProto;
import de.huxhorn.lilith.data.eventsource.EventIdentifier;
import de.huxhorn.lilith.data.eventsource.EventWrapper;
import de.huxhorn.lilith.data.eventsource.SourceIdentifier;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AccessEventWrapperProtobufDecoderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AccessEventWrapperProtobufDecoder accessEventWrapperProtobufDecoder0 = new AccessEventWrapperProtobufDecoder(false);
      boolean boolean0 = accessEventWrapperProtobufDecoder0.isCompressing();
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      AccessEventWrapperProtobufDecoder accessEventWrapperProtobufDecoder0 = new AccessEventWrapperProtobufDecoder(false);
      accessEventWrapperProtobufDecoder0.setCompressing(false);
      assertEquals(false, accessEventWrapperProtobufDecoder0.isCompressing());
  }

  @Test
  public void test2()  throws Throwable  {
      AccessEventWrapperProtobufDecoder accessEventWrapperProtobufDecoder0 = new AccessEventWrapperProtobufDecoder(true);
      byte[] byteArray0 = new byte[8];
      accessEventWrapperProtobufDecoder0.decode(byteArray0);
      assertEquals(true, accessEventWrapperProtobufDecoder0.isCompressing());
  }

  @Test
  public void test3()  throws Throwable  {
      AccessEventWrapperProtobufDecoder accessEventWrapperProtobufDecoder0 = new AccessEventWrapperProtobufDecoder(false);
      byte[] byteArray0 = new byte[3];
      accessEventWrapperProtobufDecoder0.decode(byteArray0);
      assertEquals(false, accessEventWrapperProtobufDecoder0.isCompressing());
  }

  @Test
  public void test4()  throws Throwable  {
      AccessProto.EventWrapper accessProto_EventWrapper0 = AccessProto.EventWrapper.getDefaultInstance();
      EventWrapper<AccessEvent> eventWrapper0 = AccessEventWrapperProtobufDecoder.convert(accessProto_EventWrapper0);
      assertNotNull(eventWrapper0);
      assertEquals("eventWrapper[eventIdentifier=EventIdentifier[sourceIdentifier=null, localId=-1], event=null]", eventWrapper0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      ByteString byteString0 = ByteString.copyFromUtf8("");
      ExtensionRegistry extensionRegistry0 = ExtensionRegistry.getEmptyRegistry();
      AccessProto.EventIdentifier accessProto_EventIdentifier0 = AccessProto.EventIdentifier.parseFrom(byteString0, extensionRegistry0);
      EventIdentifier eventIdentifier0 = AccessEventWrapperProtobufDecoder.convert(accessProto_EventIdentifier0);
      assertNotNull(eventIdentifier0);
      assertEquals("EventIdentifier[sourceIdentifier=null, localId=-1]", eventIdentifier0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      EventIdentifier eventIdentifier0 = AccessEventWrapperProtobufDecoder.convert((AccessProto.EventIdentifier) null);
      assertNull(eventIdentifier0);
  }

  @Test
  public void test7()  throws Throwable  {
      ByteString byteString0 = ByteString.EMPTY;
      ExtensionRegistry extensionRegistry0 = ExtensionRegistry.newInstance();
      AccessProto.SourceIdentifier accessProto_SourceIdentifier0 = AccessProto.SourceIdentifier.parseFrom(byteString0, extensionRegistry0);
      SourceIdentifier sourceIdentifier0 = AccessEventWrapperProtobufDecoder.convert(accessProto_SourceIdentifier0);
      assertEquals("null", sourceIdentifier0.toString());
      assertNotNull(sourceIdentifier0);
  }

  @Test
  public void test8()  throws Throwable  {
      SourceIdentifier sourceIdentifier0 = AccessEventWrapperProtobufDecoder.convert((AccessProto.SourceIdentifier) null);
      assertNull(sourceIdentifier0);
  }
}
