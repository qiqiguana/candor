/*
 * This file was automatically generated by EvoSuite
 */

package de.huxhorn.lilith.data.access;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.huxhorn.lilith.data.access.AccessEvent;
import de.huxhorn.lilith.data.access.AccessEvents;
import de.huxhorn.lilith.data.eventsource.SourceIdentifier;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AccessEventsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AccessEvents accessEvents0 = new AccessEvents();
      SourceIdentifier sourceIdentifier0 = accessEvents0.getSource();
      assertNull(sourceIdentifier0);
  }

  @Test
  public void test1()  throws Throwable  {
      AccessEvents accessEvents0 = new AccessEvents();
      LinkedList<AccessEvent> linkedList0 = new LinkedList<AccessEvent>();
      accessEvents0.setEvents((List<AccessEvent>) linkedList0);
      AccessEvents accessEvents1 = new AccessEvents();
      boolean boolean0 = accessEvents0.equals((Object) accessEvents1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      AccessEvents accessEvents0 = new AccessEvents();
      accessEvents0.setStartIndex((-824L));
      AccessEvents accessEvents1 = new AccessEvents();
      boolean boolean0 = accessEvents0.equals((Object) accessEvents1);
      assertEquals((-824L), accessEvents0.getStartIndex());
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      AccessEvents accessEvents0 = new AccessEvents();
      List<AccessEvent> list0 = accessEvents0.getEvents();
      assertNull(list0);
  }

  @Test
  public void test4()  throws Throwable  {
      AccessEvents accessEvents0 = new AccessEvents();
      long long0 = accessEvents0.getStartIndex();
      assertEquals(0L, long0);
  }

  @Test
  public void test5()  throws Throwable  {
      AccessEvents accessEvents0 = new AccessEvents();
      AccessEvents accessEvents1 = new AccessEvents();
      assertTrue(accessEvents1.equals(accessEvents0));
      
      SourceIdentifier sourceIdentifier0 = new SourceIdentifier("");
      accessEvents1.setSource(sourceIdentifier0);
      boolean boolean0 = accessEvents0.equals((Object) accessEvents1);
      assertFalse(accessEvents1.equals(accessEvents0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      AccessEvents accessEvents0 = new AccessEvents();
      boolean boolean0 = accessEvents0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      AccessEvents accessEvents0 = new AccessEvents();
      boolean boolean0 = accessEvents0.equals((Object) "C");
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      AccessEvents accessEvents0 = new AccessEvents();
      LinkedList<AccessEvent> linkedList0 = new LinkedList<AccessEvent>();
      accessEvents0.setEvents((List<AccessEvent>) linkedList0);
      AccessEvents accessEvents1 = new AccessEvents();
      assertFalse(accessEvents1.equals(accessEvents0));
      
      accessEvents1.setEvents((List<AccessEvent>) linkedList0);
      boolean boolean0 = accessEvents0.equals((Object) accessEvents1);
      assertTrue(accessEvents1.equals(accessEvents0));
      assertEquals(true, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      AccessEvents accessEvents0 = new AccessEvents();
      SourceIdentifier sourceIdentifier0 = new SourceIdentifier("=", "=");
      accessEvents0.setSource(sourceIdentifier0);
      AccessEvents accessEvents1 = new AccessEvents();
      boolean boolean0 = accessEvents0.equals((Object) accessEvents1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      AccessEvents accessEvents0 = new AccessEvents();
      SourceIdentifier sourceIdentifier0 = new SourceIdentifier("=", "=");
      accessEvents0.setSource(sourceIdentifier0);
      AccessEvents accessEvents1 = new AccessEvents();
      assertFalse(accessEvents1.equals(accessEvents0));
      
      accessEvents1.setSource(sourceIdentifier0);
      boolean boolean0 = accessEvents0.equals((Object) accessEvents1);
      assertTrue(accessEvents1.equals(accessEvents0));
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      AccessEvents accessEvents0 = new AccessEvents();
      SourceIdentifier sourceIdentifier0 = new SourceIdentifier("=", "=");
      accessEvents0.setSource(sourceIdentifier0);
      int int0 = accessEvents0.hashCode();
      assertEquals(56730, int0);
  }

  @Test
  public void test12()  throws Throwable  {
      AccessEvents accessEvents0 = new AccessEvents();
      LinkedList<AccessEvent> linkedList0 = new LinkedList<AccessEvent>();
      accessEvents0.setEvents((List<AccessEvent>) linkedList0);
      int int0 = accessEvents0.hashCode();
      assertEquals(1, int0);
  }
}
