/*
 * This file was automatically generated by EvoSuite
 */

package de.huxhorn.lilith.swing.table.renderer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.huxhorn.lilith.swing.table.renderer.LabelCellRenderer;
import de.huxhorn.lilith.swing.table.renderer.ThreadRenderer;
import java.util.Vector;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ThreadRendererEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ThreadRenderer threadRenderer0 = new ThreadRenderer();
      assertNotNull(threadRenderer0);
      
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      Vector<Object> vector0 = defaultTableModel0.getDataVector();
      JTable jTable0 = new JTable(vector0, vector0);
      LabelCellRenderer labelCellRenderer0 = (LabelCellRenderer)threadRenderer0.getTableCellRendererComponent(jTable0, (Object) "closed", true, true, (-1), (-1));
      assertNotNull(labelCellRenderer0);
      assertEquals(0, labelCellRenderer0.getHorizontalAlignment());
      assertEquals(true, labelCellRenderer0.isForegroundSet());
  }

  @Test
  public void test1()  throws Throwable  {
      ThreadRenderer threadRenderer0 = new ThreadRenderer();
      assertNotNull(threadRenderer0);
      
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      Vector<Object> vector0 = defaultTableModel0.getDataVector();
      JTable jTable0 = new JTable(vector0, vector0);
      LabelCellRenderer labelCellRenderer0 = (LabelCellRenderer)threadRenderer0.getTableCellRendererComponent(jTable0, (Object) threadRenderer0, false, false, (-1), (-1));
      assertNotNull(labelCellRenderer0);
      assertEquals(true, labelCellRenderer0.isForegroundSet());
      assertEquals(0, labelCellRenderer0.getHorizontalAlignment());
  }

  @Test
  public void test2()  throws Throwable  {
      ThreadRenderer threadRenderer0 = new ThreadRenderer();
      assertNotNull(threadRenderer0);
      
      JTable jTable0 = new JTable();
      LabelCellRenderer labelCellRenderer0 = (LabelCellRenderer)threadRenderer0.getTableCellRendererComponent(jTable0, (Object) jTable0, false, false, 14, 14);
      assertNotNull(labelCellRenderer0);
      assertEquals(true, labelCellRenderer0.isForegroundSet());
      assertEquals(0, labelCellRenderer0.getHorizontalAlignment());
  }
}
