/*
 * This file was automatically generated by EvoSuite
 */

package de.huxhorn.lilith.swing.preferences;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.huxhorn.lilith.swing.preferences.ColorSchemeEditorPanel;
import de.huxhorn.lilith.swing.table.ColorScheme;
import java.awt.Color;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ColorSchemeEditorPanelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ColorSchemeEditorPanel colorSchemeEditorPanel0 = new ColorSchemeEditorPanel();
      colorSchemeEditorPanel0.getColorScheme();
  }

  @Test
  public void test1()  throws Throwable  {
      ColorSchemeEditorPanel colorSchemeEditorPanel0 = new ColorSchemeEditorPanel();
      colorSchemeEditorPanel0.saveColors();
      assertEquals(0, colorSchemeEditorPanel0.getDebugGraphicsOptions());
  }

  @Test
  public void test2()  throws Throwable  {
      ColorSchemeEditorPanel colorSchemeEditorPanel0 = new ColorSchemeEditorPanel();
      Color color0 = Color.RED;
      ColorScheme colorScheme0 = new ColorScheme(color0, color0);
      colorSchemeEditorPanel0.setColorScheme(colorScheme0);
      assertEquals("PanelUI", colorSchemeEditorPanel0.getUIClassID());
  }

  @Test
  public void test3()  throws Throwable  {
      ColorSchemeEditorPanel colorSchemeEditorPanel0 = new ColorSchemeEditorPanel();
      colorSchemeEditorPanel0.resetColors();
      assertEquals(true, colorSchemeEditorPanel0.isOptimizedDrawingEnabled());
  }

  @Test
  public void test4()  throws Throwable  {
      ColorSchemeEditorPanel colorSchemeEditorPanel0 = new ColorSchemeEditorPanel();
      // Undeclared exception!
      try {
        colorSchemeEditorPanel0.setColorScheme((ColorScheme) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * colorScheme must not be null!
         */
      }
  }
}
