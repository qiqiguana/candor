/*
 * This file was automatically generated by EvoSuite
 */

package de.huxhorn.lilith.jul.xml;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.huxhorn.lilith.data.eventsource.EventWrapper;
import de.huxhorn.lilith.data.logging.LoggingEvent;
import de.huxhorn.lilith.jul.xml.JulImportCallable;
import de.huxhorn.sulky.buffers.AppendOperation;
import de.huxhorn.sulky.buffers.SerializingFileBuffer;
import java.io.File;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JulImportCallableEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      File file0 = new File("SLF4J:L");
      JulImportCallable julImportCallable0 = new JulImportCallable(file0, (AppendOperation<EventWrapper<LoggingEvent>>) null);
      julImportCallable0.getBuffer();
  }

  @Test
  public void test1()  throws Throwable  {
      File file0 = new File("SLF4J:L");
      JulImportCallable julImportCallable0 = new JulImportCallable(file0, (AppendOperation<EventWrapper<LoggingEvent>>) null);
      File file1 = julImportCallable0.getInputFile();
      assertEquals("SLF4J:L", file1.getName());
  }

  @Test
  public void test2()  throws Throwable  {
      File file0 = new File("", "");
      SerializingFileBuffer<EventWrapper<LoggingEvent>> serializingFileBuffer0 = new SerializingFileBuffer<EventWrapper<LoggingEvent>>(file0);
      JulImportCallable julImportCallable0 = new JulImportCallable(file0, (AppendOperation<EventWrapper<LoggingEvent>>) serializingFileBuffer0);
      try {
        julImportCallable0.call();
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * '/' is not a file!
         */
      }
  }
}
