/*
 * This file was automatically generated by EvoSuite
 */

package de.huxhorn.lilith.data.access;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.huxhorn.lilith.data.access.LoggerContext;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LoggerContextEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LoggerContext loggerContext0 = new LoggerContext();
      loggerContext0.setName("LoggerContext[name=null, birthTime=null, properties={}]");
      LoggerContext loggerContext1 = loggerContext0.clone();
      assertNotNull(loggerContext1);
      
      boolean boolean0 = loggerContext0.equals((Object) loggerContext1);
      assertEquals(true, boolean0);
      assertNotSame(loggerContext0, loggerContext1);
  }

  @Test
  public void test1()  throws Throwable  {
      LoggerContext loggerContext0 = new LoggerContext();
      Map<String, String> map0 = loggerContext0.getProperties();
      assertNull(map0);
  }

  @Test
  public void test2()  throws Throwable  {
      LoggerContext loggerContext0 = new LoggerContext();
      Date date0 = loggerContext0.getBirthTime();
      assertNull(date0);
  }

  @Test
  public void test3()  throws Throwable  {
      LoggerContext loggerContext0 = new LoggerContext();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      loggerContext0.setProperties((Map<String, String>) hashMap0);
      LoggerContext loggerContext1 = loggerContext0.clone();
      assertNotNull(loggerContext1);
      
      boolean boolean0 = loggerContext0.equals((Object) loggerContext1);
      assertEquals(true, boolean0);
      assertNotSame(loggerContext0, loggerContext1);
  }

  @Test
  public void test4()  throws Throwable  {
      LoggerContext loggerContext0 = new LoggerContext();
      String string0 = loggerContext0.toString();
      assertEquals("LoggerContext[name=null, birthTime=null, properties=null]", string0);
      assertNotNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      LoggerContext loggerContext0 = new LoggerContext();
      String string0 = loggerContext0.getName();
      assertNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      LoggerContext loggerContext0 = new LoggerContext();
      Date date0 = new Date();
      loggerContext0.setBirthTime(date0);
      assertEquals(1372795752569L, date0.getTime());
      
      LoggerContext loggerContext1 = new LoggerContext();
      boolean boolean0 = loggerContext0.equals((Object) loggerContext1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      LoggerContext loggerContext0 = new LoggerContext();
      boolean boolean0 = loggerContext0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      LoggerContext loggerContext0 = new LoggerContext();
      boolean boolean0 = loggerContext0.equals((Object) "LoggerContext[name=null, birthTime=null, properties=null]");
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      LoggerContext loggerContext0 = new LoggerContext();
      Date date0 = new Date();
      loggerContext0.setBirthTime(date0);
      assertEquals(1372795752703L, date0.getTime());
      
      LoggerContext loggerContext1 = loggerContext0.clone();
      boolean boolean0 = loggerContext0.equals((Object) loggerContext1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      LoggerContext loggerContext0 = new LoggerContext();
      Date date0 = new Date();
      loggerContext0.setBirthTime(date0);
      assertEquals(1372795752893L, date0.getTime());
      
      LoggerContext loggerContext1 = new LoggerContext();
      boolean boolean0 = loggerContext1.equals((Object) loggerContext0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      LoggerContext loggerContext0 = new LoggerContext();
      LoggerContext loggerContext1 = loggerContext0.clone();
      assertNotNull(loggerContext1);
      assertTrue(loggerContext1.equals(loggerContext0));
      
      loggerContext0.setName("");
      boolean boolean0 = loggerContext0.equals((Object) loggerContext1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      LoggerContext loggerContext0 = new LoggerContext();
      LoggerContext loggerContext1 = new LoggerContext();
      assertTrue(loggerContext1.equals(loggerContext0));
      
      loggerContext1.setName(", birth?ime=");
      boolean boolean0 = loggerContext0.equals((Object) loggerContext1);
      assertFalse(loggerContext1.equals(loggerContext0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      LoggerContext loggerContext0 = new LoggerContext();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      loggerContext0.setProperties((Map<String, String>) hashMap0);
      LoggerContext loggerContext1 = loggerContext0.clone();
      hashMap0.put((String) null, (String) null);
      boolean boolean0 = loggerContext0.equals((Object) loggerContext1);
      assertEquals("LoggerContext[name=null, birthTime=null, properties={null=null}]", loggerContext0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      LoggerContext loggerContext0 = new LoggerContext();
      LoggerContext loggerContext1 = new LoggerContext();
      assertTrue(loggerContext1.equals(loggerContext0));
      
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      loggerContext1.setProperties((Map<String, String>) hashMap0);
      boolean boolean0 = loggerContext0.equals((Object) loggerContext1);
      assertFalse(loggerContext1.equals(loggerContext0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      LoggerContext loggerContext0 = new LoggerContext();
      loggerContext0.setName("LoggerContext[name=null, birthTime=null, properties={}]");
      int int0 = loggerContext0.hashCode();
      assertEquals(1706953806, int0);
  }

  @Test
  public void test16()  throws Throwable  {
      LoggerContext loggerContext0 = new LoggerContext();
      Date date0 = new Date();
      loggerContext0.setBirthTime(date0);
      assertEquals(1372795753616L, date0.getTime());
      
      int int0 = loggerContext0.hashCode();
      assertEquals(2132402225, int0);
  }

  @Test
  public void test17()  throws Throwable  {
      LoggerContext loggerContext0 = new LoggerContext();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      loggerContext0.setProperties((Map<String, String>) hashMap0);
      int int0 = loggerContext0.hashCode();
      assertEquals(0, int0);
  }
}
