/*
 * This file was automatically generated by EvoSuite
 */

package de.huxhorn.lilith.data.eventsource;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.huxhorn.lilith.data.eventsource.EventIdentifier;
import de.huxhorn.lilith.data.eventsource.SourceIdentifier;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class EventIdentifierEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      EventIdentifier eventIdentifier0 = new EventIdentifier();
      long long0 = eventIdentifier0.getLocalId();
      assertEquals((-1L), long0);
  }

  @Test
  public void test1()  throws Throwable  {
      EventIdentifier eventIdentifier0 = new EventIdentifier();
      eventIdentifier0.getSourceIdentifier();
      assertEquals("EventIdentifier[sourceIdentifier=null, localId=-1]", eventIdentifier0.toString());
      assertEquals((-1L), eventIdentifier0.getLocalId());
  }

  @Test
  public void test2()  throws Throwable  {
      EventIdentifier eventIdentifier0 = new EventIdentifier();
      String string0 = eventIdentifier0.toString();
      assertEquals("EventIdentifier[sourceIdentifier=null, localId=-1]", string0);
      assertNotNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      EventIdentifier eventIdentifier0 = new EventIdentifier();
      Object object0 = new Object();
      boolean boolean0 = eventIdentifier0.equals(object0);
      assertEquals("EventIdentifier[sourceIdentifier=null, localId=-1]", eventIdentifier0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      EventIdentifier eventIdentifier0 = new EventIdentifier();
      boolean boolean0 = eventIdentifier0.equals((Object) null);
      assertEquals(false, boolean0);
      assertEquals("EventIdentifier[sourceIdentifier=null, localId=-1]", eventIdentifier0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      EventIdentifier eventIdentifier0 = new EventIdentifier();
      SourceIdentifier sourceIdentifier0 = new SourceIdentifier((String) null, (String) null);
      EventIdentifier eventIdentifier1 = new EventIdentifier(sourceIdentifier0, 1L);
      boolean boolean0 = eventIdentifier0.equals((Object) eventIdentifier1);
      assertEquals(false, boolean0);
      assertEquals("EventIdentifier[sourceIdentifier=null, localId=1]", eventIdentifier1.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      EventIdentifier eventIdentifier0 = new EventIdentifier();
      SourceIdentifier sourceIdentifier0 = new SourceIdentifier((String) null, (String) null);
      eventIdentifier0.setLocalId(1L);
      EventIdentifier eventIdentifier1 = new EventIdentifier(sourceIdentifier0, 1L);
      boolean boolean0 = eventIdentifier0.equals((Object) eventIdentifier1);
      assertEquals("EventIdentifier[sourceIdentifier=null, localId=1]", eventIdentifier1.toString());
      assertEquals(1L, eventIdentifier0.getLocalId());
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      SourceIdentifier sourceIdentifier0 = new SourceIdentifier("", "");
      EventIdentifier eventIdentifier0 = new EventIdentifier(sourceIdentifier0, 1396L);
      EventIdentifier eventIdentifier1 = eventIdentifier0.clone();
      assertNotNull(eventIdentifier1);
      
      boolean boolean0 = eventIdentifier0.equals((Object) eventIdentifier1);
      assertNotSame(eventIdentifier1, eventIdentifier0);
      assertEquals(true, boolean0);
      assertEquals(1396L, eventIdentifier1.getLocalId());
  }

  @Test
  public void test8()  throws Throwable  {
      SourceIdentifier sourceIdentifier0 = new SourceIdentifier();
      EventIdentifier eventIdentifier0 = new EventIdentifier();
      eventIdentifier0.setSourceIdentifier(sourceIdentifier0);
      EventIdentifier eventIdentifier1 = new EventIdentifier();
      boolean boolean0 = eventIdentifier0.equals((Object) eventIdentifier1);
      assertEquals("EventIdentifier[sourceIdentifier=null, localId=-1]", eventIdentifier0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      EventIdentifier eventIdentifier0 = new EventIdentifier();
      EventIdentifier eventIdentifier1 = eventIdentifier0.clone();
      assertNotNull(eventIdentifier1);
      
      boolean boolean0 = eventIdentifier1.equals((Object) eventIdentifier0);
      assertNotSame(eventIdentifier1, eventIdentifier0);
      assertEquals(true, boolean0);
      assertEquals((-1L), eventIdentifier1.getLocalId());
  }

  @Test
  public void test10()  throws Throwable  {
      EventIdentifier eventIdentifier0 = new EventIdentifier();
      int int0 = eventIdentifier0.hashCode();
      assertEquals(0, int0);
  }

  @Test
  public void test11()  throws Throwable  {
      SourceIdentifier sourceIdentifier0 = new SourceIdentifier("KGtPRHga", "KGtPRHga");
      EventIdentifier eventIdentifier0 = new EventIdentifier(sourceIdentifier0, (-330L));
      int int0 = eventIdentifier0.hashCode();
      assertEquals(361870041, int0);
  }
}
