/*
 * This file was automatically generated by EvoSuite
 */

package de.huxhorn.lilith.data.eventsource;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.huxhorn.lilith.data.eventsource.EventIdentifier;
import de.huxhorn.lilith.data.eventsource.EventWrapper;
import de.huxhorn.lilith.data.eventsource.SourceIdentifier;
import de.huxhorn.lilith.data.eventsource.TransferSizeInfo;
import java.io.Serializable;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class EventWrapperEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SourceIdentifier sourceIdentifier0 = new SourceIdentifier();
      EventWrapper<Serializable> eventWrapper0 = new EventWrapper<Serializable>(sourceIdentifier0, 963L, (Serializable) 963L);
      Long long0 = (Long)eventWrapper0.getEvent();
      assertEquals(963.0, long0.doubleValue(), 0.01D);
  }

  @Test
  public void test1()  throws Throwable  {
      EventWrapper<Serializable> eventWrapper0 = new EventWrapper<Serializable>();
      eventWrapper0.setEventIdentifier((EventIdentifier) null);
      SourceIdentifier sourceIdentifier0 = eventWrapper0.getSourceIdentifier();
      assertNull(sourceIdentifier0);
  }

  @Test
  public void test2()  throws Throwable  {
      EventWrapper<Serializable> eventWrapper0 = new EventWrapper<Serializable>();
      EventIdentifier eventIdentifier0 = eventWrapper0.getEventIdentifier();
      assertEquals((-1L), eventIdentifier0.getLocalId());
  }

  @Test
  public void test3()  throws Throwable  {
      SourceIdentifier sourceIdentifier0 = new SourceIdentifier();
      EventWrapper<String> eventWrapper0 = new EventWrapper<String>(sourceIdentifier0, (-1L), "");
      String string0 = eventWrapper0.toString();
      assertNotNull(string0);
      assertEquals("eventWrapper[eventIdentifier=EventIdentifier[sourceIdentifier=null, localId=-1], event=]", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      EventWrapper<Serializable> eventWrapper0 = new EventWrapper<Serializable>((SourceIdentifier) null, (-1L), (Serializable) (-1L));
      TransferSizeInfo transferSizeInfo0 = eventWrapper0.getTransferSizeInfo();
      assertNull(transferSizeInfo0);
  }

  @Test
  public void test5()  throws Throwable  {
      EventWrapper<Serializable> eventWrapper0 = new EventWrapper<Serializable>();
      TransferSizeInfo transferSizeInfo0 = new TransferSizeInfo();
      eventWrapper0.setTransferSizeInfo(transferSizeInfo0);
      assertEquals("eventWrapper[eventIdentifier=EventIdentifier[sourceIdentifier=null, localId=-1], event=null]", eventWrapper0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      SourceIdentifier sourceIdentifier0 = new SourceIdentifier();
      EventWrapper<String> eventWrapper0 = new EventWrapper<String>(sourceIdentifier0, (-1L), "");
      eventWrapper0.setEvent((String) null);
      EventWrapper<String> eventWrapper1 = new EventWrapper<String>(sourceIdentifier0, (-1L), "");
      boolean boolean0 = eventWrapper0.equals((Object) eventWrapper1);
      assertFalse(eventWrapper1.equals(eventWrapper0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      EventWrapper<Serializable> eventWrapper0 = new EventWrapper<Serializable>();
      EventWrapper<EventWrapper<Serializable>> eventWrapper1 = new EventWrapper<EventWrapper<Serializable>>((EventIdentifier) null, eventWrapper0);
      eventWrapper1.setLocalId((-1090L));
      eventWrapper1.getSourceIdentifier();
      assertEquals("eventWrapper[eventIdentifier=EventIdentifier[sourceIdentifier=null, localId=-1090], event=eventWrapper[eventIdentifier=EventIdentifier[sourceIdentifier=null, localId=-1], event=null]]", eventWrapper1.toString());
      assertEquals((-1090L), eventWrapper1.getLocalId());
  }

  @Test
  public void test8()  throws Throwable  {
      EventWrapper<Serializable> eventWrapper0 = new EventWrapper<Serializable>((SourceIdentifier) null, (-1L), (Serializable) (-1L));
      eventWrapper0.setSourceIdentifier((SourceIdentifier) null);
      assertEquals((-1L), eventWrapper0.getLocalId());
  }

  @Test
  public void test9()  throws Throwable  {
      EventWrapper<Serializable> eventWrapper0 = new EventWrapper<Serializable>();
      eventWrapper0.setEventIdentifier((EventIdentifier) null);
      eventWrapper0.setSourceIdentifier((SourceIdentifier) null);
      assertEquals("eventWrapper[eventIdentifier=EventIdentifier[sourceIdentifier=null, localId=-1], event=null]", eventWrapper0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      EventWrapper<Serializable> eventWrapper0 = new EventWrapper<Serializable>((SourceIdentifier) null, (-1L), (Serializable) (-1L));
      EventWrapper<EventWrapper<Serializable>> eventWrapper1 = new EventWrapper<EventWrapper<Serializable>>((EventIdentifier) null, eventWrapper0);
      long long0 = eventWrapper1.getLocalId();
      assertEquals((-1L), long0);
  }

  @Test
  public void test11()  throws Throwable  {
      EventWrapper<Serializable> eventWrapper0 = new EventWrapper<Serializable>();
      long long0 = eventWrapper0.getLocalId();
      assertEquals((-1L), long0);
  }

  @Test
  public void test12()  throws Throwable  {
      EventWrapper<Serializable> eventWrapper0 = new EventWrapper<Serializable>((SourceIdentifier) null, (-1L), (Serializable) (-1L));
      eventWrapper0.setLocalId((-1L));
      assertEquals("eventWrapper[eventIdentifier=EventIdentifier[sourceIdentifier=null, localId=-1], event=-1]", eventWrapper0.toString());
      assertEquals((-1L), eventWrapper0.getLocalId());
  }

  @Test
  public void test13()  throws Throwable  {
      EventWrapper<Serializable> eventWrapper0 = new EventWrapper<Serializable>((EventIdentifier) null, (Serializable) null);
      EventWrapper<Serializable> eventWrapper1 = new EventWrapper<Serializable>((SourceIdentifier) null, (-1L), (Serializable) null);
      boolean boolean0 = eventWrapper0.equals((Object) eventWrapper1);
      assertFalse(eventWrapper1.equals(eventWrapper0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      EventWrapper<EventWrapper<Integer>> eventWrapper0 = new EventWrapper<EventWrapper<Integer>>();
      EventWrapper<Serializable> eventWrapper1 = new EventWrapper<Serializable>((SourceIdentifier) null, (-1L), (Serializable) null);
      boolean boolean0 = eventWrapper0.equals((Object) eventWrapper1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      EventWrapper<Integer> eventWrapper0 = new EventWrapper<Integer>();
      Class<Long> class0 = Long.TYPE;
      boolean boolean0 = eventWrapper0.equals((Object) class0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      SourceIdentifier sourceIdentifier0 = new SourceIdentifier();
      EventWrapper<Serializable> eventWrapper0 = new EventWrapper<Serializable>(sourceIdentifier0, 963L, (Serializable) 963L);
      EventWrapper<EventWrapper<Serializable>> eventWrapper1 = new EventWrapper<EventWrapper<Serializable>>();
      boolean boolean0 = eventWrapper0.equals((Object) eventWrapper1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      EventWrapper<Serializable> eventWrapper0 = new EventWrapper<Serializable>();
      eventWrapper0.setEventIdentifier((EventIdentifier) null);
      EventWrapper<Integer> eventWrapper1 = new EventWrapper<Integer>((SourceIdentifier) null, (-1090L), (Integer) 0);
      EventWrapper<EventWrapper<Integer>> eventWrapper2 = new EventWrapper<EventWrapper<Integer>>((EventIdentifier) null, eventWrapper1);
      boolean boolean0 = eventWrapper2.equals((Object) eventWrapper0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      SourceIdentifier sourceIdentifier0 = new SourceIdentifier();
      EventWrapper<String> eventWrapper0 = new EventWrapper<String>(sourceIdentifier0, 12L, ":=]OB;,UvN");
      EventWrapper<String> eventWrapper1 = new EventWrapper<String>(sourceIdentifier0, 12L, ":=]OB;,UvN");
      boolean boolean0 = eventWrapper0.equals((Object) eventWrapper1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test19()  throws Throwable  {
      EventWrapper<Serializable> eventWrapper0 = new EventWrapper<Serializable>();
      EventWrapper<EventWrapper<Serializable>> eventWrapper1 = new EventWrapper<EventWrapper<Serializable>>((EventIdentifier) null, eventWrapper0);
      int int0 = eventWrapper1.hashCode();
      assertEquals(0, int0);
  }

  @Test
  public void test20()  throws Throwable  {
      EventWrapper<Serializable> eventWrapper0 = new EventWrapper<Serializable>();
      eventWrapper0.setEventIdentifier((EventIdentifier) null);
      int int0 = eventWrapper0.hashCode();
      assertEquals(0, int0);
  }
}
