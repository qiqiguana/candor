/*
 * This file was automatically generated by EvoSuite
 */

package de.huxhorn.lilith.consumers;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.huxhorn.lilith.consumers.SocketEventConsumer;
import de.huxhorn.lilith.data.eventsource.EventWrapper;
import java.io.Serializable;
import javax.swing.table.DefaultTableModel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SocketEventConsumerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SocketEventConsumer<EventWrapper<Serializable>> socketEventConsumer0 = new SocketEventConsumer<EventWrapper<Serializable>>();
      socketEventConsumer0.getReconnectionDelay();
  }

  @Test
  public void test1()  throws Throwable  {
      SocketEventConsumer<EventWrapper<Serializable>> socketEventConsumer0 = new SocketEventConsumer<EventWrapper<Serializable>>();
      socketEventConsumer0.getHost();
      assertEquals(10000, socketEventConsumer0.getConnectionTimeout());
      assertEquals(60000L, socketEventConsumer0.getReconnectionDelay());
      assertEquals(1500, socketEventConsumer0.getWriteTimeout());
      assertEquals(0, socketEventConsumer0.getPort());
  }

  @Test
  public void test2()  throws Throwable  {
      SocketEventConsumer<Integer> socketEventConsumer0 = new SocketEventConsumer<Integer>((String) null, 0);
      int int0 = socketEventConsumer0.getPort();
      assertEquals(0, int0);
      assertEquals(1500, socketEventConsumer0.getWriteTimeout());
      assertEquals(10000, socketEventConsumer0.getConnectionTimeout());
      assertEquals(60000L, socketEventConsumer0.getReconnectionDelay());
  }

  @Test
  public void test3()  throws Throwable  {
      SocketEventConsumer<EventWrapper<Serializable>> socketEventConsumer0 = new SocketEventConsumer<EventWrapper<Serializable>>();
      int int0 = socketEventConsumer0.getWriteTimeout();
      assertEquals(1500, int0);
      assertEquals(60000L, socketEventConsumer0.getReconnectionDelay());
      assertEquals(10000, socketEventConsumer0.getConnectionTimeout());
  }

  @Test
  public void test4()  throws Throwable  {
      SocketEventConsumer<EventWrapper<DefaultTableModel>> socketEventConsumer0 = new SocketEventConsumer<EventWrapper<DefaultTableModel>>();
      int int0 = socketEventConsumer0.getConnectionTimeout();
      assertEquals(1500, socketEventConsumer0.getWriteTimeout());
      assertEquals(60000L, socketEventConsumer0.getReconnectionDelay());
      assertEquals(10000, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      SocketEventConsumer<EventWrapper<Serializable>> socketEventConsumer0 = new SocketEventConsumer<EventWrapper<Serializable>>();
      assertEquals(10000, socketEventConsumer0.getConnectionTimeout());
      
      socketEventConsumer0.setConnectionTimeout(0);
      assertEquals(1500, socketEventConsumer0.getWriteTimeout());
  }

  @Test
  public void test6()  throws Throwable  {
      SocketEventConsumer<Serializable> socketEventConsumer0 = new SocketEventConsumer<Serializable>(")", 0);
      socketEventConsumer0.setPort(0);
      assertEquals(1500, socketEventConsumer0.getWriteTimeout());
      assertEquals(0, socketEventConsumer0.getPort());
      assertEquals(60000L, socketEventConsumer0.getReconnectionDelay());
      assertEquals(10000, socketEventConsumer0.getConnectionTimeout());
  }

  @Test
  public void test7()  throws Throwable  {
      SocketEventConsumer<Serializable> socketEventConsumer0 = new SocketEventConsumer<Serializable>(")", 0);
      socketEventConsumer0.setWriteTimeout(635);
      assertEquals(635, socketEventConsumer0.getWriteTimeout());
      assertEquals(10000, socketEventConsumer0.getConnectionTimeout());
  }

  @Test
  public void test8()  throws Throwable  {
      SocketEventConsumer<Serializable> socketEventConsumer0 = new SocketEventConsumer<Serializable>("", 1415);
      socketEventConsumer0.setHost("");
      assertEquals(60000L, socketEventConsumer0.getReconnectionDelay());
      assertEquals(1500, socketEventConsumer0.getWriteTimeout());
      assertEquals(1415, socketEventConsumer0.getPort());
      assertEquals(10000, socketEventConsumer0.getConnectionTimeout());
  }

  @Test
  public void test9()  throws Throwable  {
      SocketEventConsumer<Serializable> socketEventConsumer0 = new SocketEventConsumer<Serializable>(")", 0);
      socketEventConsumer0.setReconnectionDelay((long) 1868);
      assertEquals(1868L, socketEventConsumer0.getReconnectionDelay());
      assertEquals(1500, socketEventConsumer0.getWriteTimeout());
  }
}
