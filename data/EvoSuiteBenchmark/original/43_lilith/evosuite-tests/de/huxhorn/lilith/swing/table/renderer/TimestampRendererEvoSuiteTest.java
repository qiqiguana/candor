/*
 * This file was automatically generated by EvoSuite
 */

package de.huxhorn.lilith.swing.table.renderer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.huxhorn.lilith.data.access.AccessEvent;
import de.huxhorn.lilith.data.eventsource.EventIdentifier;
import de.huxhorn.lilith.data.eventsource.EventWrapper;
import de.huxhorn.lilith.data.eventsource.SourceIdentifier;
import de.huxhorn.lilith.data.logging.LoggingEvent;
import de.huxhorn.lilith.swing.table.renderer.LabelCellRenderer;
import de.huxhorn.lilith.swing.table.renderer.TimestampRenderer;
import javax.swing.JTable;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TimestampRendererEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TimestampRenderer timestampRenderer0 = new TimestampRenderer();
      assertNotNull(timestampRenderer0);
      
      JTable jTable0 = new JTable();
      EventWrapper<Integer> eventWrapper0 = new EventWrapper<Integer>();
      EventIdentifier eventIdentifier0 = eventWrapper0.getEventIdentifier();
      LoggingEvent loggingEvent0 = new LoggingEvent();
      EventWrapper<LoggingEvent> eventWrapper1 = new EventWrapper<LoggingEvent>(eventIdentifier0, loggingEvent0);
      LabelCellRenderer labelCellRenderer0 = (LabelCellRenderer)timestampRenderer0.getTableCellRendererComponent(jTable0, (Object) eventWrapper1, false, false, 1547, 1547);
      assertEquals(0, labelCellRenderer0.getHorizontalAlignment());
      assertEquals(true, labelCellRenderer0.isForegroundSet());
      assertNotNull(labelCellRenderer0);
  }

  @Test
  public void test1()  throws Throwable  {
      TimestampRenderer timestampRenderer0 = new TimestampRenderer();
      assertNotNull(timestampRenderer0);
      
      JTable jTable0 = new JTable();
      LoggingEvent loggingEvent0 = new LoggingEvent();
      LabelCellRenderer labelCellRenderer0 = (LabelCellRenderer)timestampRenderer0.getTableCellRendererComponent(jTable0, (Object) loggingEvent0, false, false, (-1), 1547);
      assertEquals(true, labelCellRenderer0.isForegroundSet());
      assertNotNull(labelCellRenderer0);
      assertEquals(0, labelCellRenderer0.getHorizontalAlignment());
  }

  @Test
  public void test2()  throws Throwable  {
      TimestampRenderer timestampRenderer0 = new TimestampRenderer();
      assertNotNull(timestampRenderer0);
      
      JTable jTable0 = new JTable();
      EventWrapper<Integer> eventWrapper0 = new EventWrapper<Integer>();
      LabelCellRenderer labelCellRenderer0 = (LabelCellRenderer)timestampRenderer0.getTableCellRendererComponent(jTable0, (Object) eventWrapper0, false, false, (-1), 1547);
      assertEquals(true, labelCellRenderer0.isForegroundSet());
      assertEquals(0, labelCellRenderer0.getHorizontalAlignment());
      assertNotNull(labelCellRenderer0);
  }

  @Test
  public void test3()  throws Throwable  {
      TimestampRenderer timestampRenderer0 = new TimestampRenderer();
      assertNotNull(timestampRenderer0);
      
      JTable jTable0 = new JTable();
      SourceIdentifier sourceIdentifier0 = new SourceIdentifier("Dialog", "Dialog");
      AccessEvent accessEvent0 = new AccessEvent();
      EventWrapper<AccessEvent> eventWrapper0 = new EventWrapper<AccessEvent>(sourceIdentifier0, 1518L, accessEvent0);
      LabelCellRenderer labelCellRenderer0 = (LabelCellRenderer)timestampRenderer0.getTableCellRendererComponent(jTable0, (Object) eventWrapper0, true, true, 1750, 1750);
      assertEquals(true, labelCellRenderer0.isForegroundSet());
      assertNotNull(labelCellRenderer0);
      assertEquals(0, labelCellRenderer0.getHorizontalAlignment());
  }
}
