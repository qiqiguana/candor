/*
 * This file was automatically generated by EvoSuite
 */

package bible.obj;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import bible.obj.Book;
import bible.obj.Reference;
import bible.obj.Translation;
import bible.obj.TranslationReference;
import bible.obj.Verse;
import java.util.ArrayList;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class VerseEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Verse verse0 = Verse.New(1141);
      assertNotNull(verse0);
      
      int int0 = verse0.getId();
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      Verse verse0 = Verse.New(17);
      TranslationReference translationReference0 = verse0.getTranslationReference();
      assertNull(translationReference0);
  }

  @Test
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try {
        Verse.GetId((Translation) null, (Book) null, (-16), (-16));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Verse verse0 = Verse.New((-16));
      String string0 = verse0.getValue();
      assertNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      Verse verse0 = Verse.New((-1918));
      // Undeclared exception!
      try {
        verse0.getReference();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      Verse verse0 = Verse.New((-16));
      assertNotNull(verse0);
      
      String string0 = verse0.toString();
      assertEquals("bible.obj.Verse:[0 null null]", string0);
      assertNotNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      Translation[] translationArray0 = new Translation[10];
      // Undeclared exception!
      try {
        Verse.Get(translationArray0, 132, 132, 132);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Reference reference0 = new Reference((-1404), (-1404), (-1404));
      ArrayList<Object> arrayList0 = Verse.Get((Translation[]) null, reference0, reference0);
      assertEquals(true, arrayList0.isEmpty());
  }

  @Test
  public void test8()  throws Throwable  {
      Translation[] translationArray0 = new Translation[1];
      Reference reference0 = new Reference((-1031), (-1031), (-1031));
      // Undeclared exception!
      try {
        Verse.Get(translationArray0, reference0, reference0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = Verse.GetId((-1641), 17, (-1641), 66);
      assertEquals((-1), int0);
  }
}
