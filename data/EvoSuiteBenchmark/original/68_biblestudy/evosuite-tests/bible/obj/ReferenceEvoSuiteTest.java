/*
 * This file was automatically generated by EvoSuite
 */

package bible.obj;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import bible.obj.Reference;
import bible.obj.Translation;
import javax.servlet.http.HttpServletRequest;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ReferenceEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Reference reference0 = null;
      try {
        reference0 = new Reference((HttpServletRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Reference reference0 = new Reference(0, 0, 0);
      Translation[] translationArray0 = new Translation[1];
      // Undeclared exception!
      try {
        reference0.getVerses(translationArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Reference reference0 = new Reference(1832, 1832, (-1009));
      int int0 = reference0.getBookId();
      assertEquals(1832, int0);
      assertEquals("bible.obj.Reference:[1832 1832:-1009]", reference0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      Reference reference0 = new Reference(1832, 1832, (-1009));
      int int0 = reference0.getChapterNo();
      assertEquals("bible.obj.Reference:[1832 1832:-1009]", reference0.toString());
      assertEquals(1832, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      Reference reference0 = new Reference((-26), (-26), (-26));
      // Undeclared exception!
      try {
        reference0.toHtml();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -26
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      Reference reference0 = new Reference((-1577), (-1577), (-1577));
      // Undeclared exception!
      try {
        reference0.getBook();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -1577
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Reference reference0 = new Reference(1832, 1832, (-1009));
      int int0 = reference0.getVerseNo();
      assertEquals("bible.obj.Reference:[1832 1832:-1009]", reference0.toString());
      assertEquals((-1009), int0);
  }

  @Test
  public void test7()  throws Throwable  {
      Reference reference0 = new Reference(1832, 1832, (-1009));
      String string0 = reference0.toString();
      assertEquals("bible.obj.Reference:[1832 1832:-1009]", string0);
      assertNotNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      Reference reference0 = new Reference(1832, 1832, (-1009));
      Reference reference1 = new Reference(reference0, reference0);
      assertEquals("bible.obj.Reference:[1832 1832:-1009]", reference1.toString());
  }
}
