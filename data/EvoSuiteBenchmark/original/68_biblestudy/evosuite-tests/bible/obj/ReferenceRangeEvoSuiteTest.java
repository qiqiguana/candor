/*
 * This file was automatically generated by EvoSuite
 */

package bible.obj;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import bible.obj.Reference;
import bible.obj.ReferenceRange;
import bible.obj.Translation;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ReferenceRangeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Reference reference0 = new Reference(0, 0, 0);
      ReferenceRange referenceRange0 = new ReferenceRange(reference0);
      String string0 = referenceRange0.toString();
      assertNotNull(string0);
      assertEquals("bible.obj.ReferenceRange:[bible.obj.Reference:[0 0:0] - null]", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      Reference reference0 = new Reference(1671, 1715, 1715);
      Translation[] translationArray0 = new Translation[5];
      ReferenceRange referenceRange0 = new ReferenceRange(reference0);
      // Undeclared exception!
      try {
        referenceRange0.getVerses(translationArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Reference reference0 = new Reference(66, 66, 0);
      ReferenceRange referenceRange0 = new ReferenceRange(reference0, reference0);
      referenceRange0.setEnd(reference0);
      assertEquals("bible.obj.ReferenceRange:[bible.obj.Reference:[66 66:0] - bible.obj.Reference:[66 66:0]]", referenceRange0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      Reference reference0 = new Reference(0, 0, 0);
      ReferenceRange referenceRange0 = new ReferenceRange(reference0);
      referenceRange0.getEnd();
      assertEquals("bible.obj.ReferenceRange:[bible.obj.Reference:[0 0:0] - null]", referenceRange0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      Reference reference0 = new Reference(0, 0, 0);
      ReferenceRange referenceRange0 = new ReferenceRange(reference0);
      Reference reference1 = referenceRange0.getBegin();
      assertEquals("bible.obj.ReferenceRange:[bible.obj.Reference:[0 0:0] - null]", referenceRange0.toString());
      assertNotNull(reference1);
  }
}
