/*
 * This file was automatically generated by EvoSuite
 */

package src.feudalismGUI;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Container;
import java.awt.Dimension;
import javax.swing.JInternalFrame;
import javax.swing.JSpinner;
import javax.swing.JToolBar;
import org.junit.BeforeClass;
import src.feudalismGUI.GridLayout2;

@RunWith(EvoSuiteRunner.class)
public class GridLayout2EvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      GridLayout2 gridLayout2_0 = new GridLayout2();
      JInternalFrame jInternalFrame0 = new JInternalFrame("V*nZ|'", false, false);
      gridLayout2_0.layoutContainer((Container) jInternalFrame0);
      assertEquals(0.5F, jInternalFrame0.getAlignmentY(), 0.01F);
  }

  @Test
  public void test1()  throws Throwable  {
      GridLayout2 gridLayout2_0 = new GridLayout2((-292), (-292));
      JToolBar jToolBar0 = new JToolBar(0);
      gridLayout2_0.layoutContainer((Container) jToolBar0);
      assertEquals(false, jToolBar0.isValid());
  }

  @Test
  public void test2()  throws Throwable  {
      GridLayout2 gridLayout2_0 = new GridLayout2((-1904), 12, 200, 12);
      JSpinner jSpinner0 = new JSpinner();
      gridLayout2_0.layoutContainer((Container) jSpinner0);
      assertEquals(0, jSpinner0.getWidth());
  }

  @Test
  public void test3()  throws Throwable  {
      GridLayout2 gridLayout2_0 = new GridLayout2((-57), (-57));
      JInternalFrame jInternalFrame0 = new JInternalFrame("V*nZ|'", false, false);
      // Undeclared exception!
      try {
        gridLayout2_0.minimumLayoutSize((Container) jInternalFrame0);
        fail("Expecting exception: NegativeArraySizeException");
      } catch(NegativeArraySizeException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      GridLayout2 gridLayout2_0 = new GridLayout2();
      JInternalFrame jInternalFrame0 = new JInternalFrame("V*nZ|'", false, false);
      Dimension dimension0 = gridLayout2_0.minimumLayoutSize((Container) jInternalFrame0);
      assertEquals(63, dimension0.width);
      assertNotNull(dimension0);
  }

  @Test
  public void test5()  throws Throwable  {
      GridLayout2 gridLayout2_0 = new GridLayout2();
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      JInternalFrame.JDesktopIcon jInternalFrame_JDesktopIcon0 = new JInternalFrame.JDesktopIcon(jInternalFrame0);
      gridLayout2_0.layoutContainer((Container) jInternalFrame_JDesktopIcon0);
      assertNull(jInternalFrame_JDesktopIcon0.getToolTipText());
  }
}
