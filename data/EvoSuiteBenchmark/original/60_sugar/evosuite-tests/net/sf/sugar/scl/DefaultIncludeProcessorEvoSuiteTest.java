/*
 * This file was automatically generated by EvoSuite
 */

package net.sf.sugar.scl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.net.URI;
import java.net.URISyntaxException;
import javax.imageio.metadata.IIOMetadataNode;
import net.sf.sugar.scl.DefaultIncludeProcessor;
import net.sf.sugar.scl.IncludeException;
import org.junit.BeforeClass;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

@RunWith(EvoSuiteRunner.class)
public class DefaultIncludeProcessorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      URI uRI0 = new URI("AIy", "AIy", "AIy");
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("AIy");
      DefaultIncludeProcessor defaultIncludeProcessor0 = new DefaultIncludeProcessor(uRI0, (Document) null);
      defaultIncludeProcessor0.prepareIncludeValue((Element) iIOMetadataNode0, "AIy", "AIy", uRI0, "file");
      assertEquals("AIy", uRI0.getRawFragment());
  }

  @Test
  public void test1()  throws Throwable  {
      URI uRI0 = new URI("AIy", "AIy", "AIy");
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("AIy");
      DefaultIncludeProcessor defaultIncludeProcessor0 = new DefaultIncludeProcessor(uRI0, (Document) null);
      defaultIncludeProcessor0.prepareInclude((Element) iIOMetadataNode0, "file", uRI0, "AIy");
      defaultIncludeProcessor0.prepareIncludeValue((Element) iIOMetadataNode0, "file", "file", uRI0, "file");
      assertEquals("AIy", iIOMetadataNode0.getNodeName());
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultIncludeProcessor defaultIncludeProcessor0 = new DefaultIncludeProcessor((URI) null, (Document) null);
      URI uRI0 = new URI("jar", "jar", "jar");
      try {
        defaultIncludeProcessor0.loadInclude(uRI0);
        fail("Expecting exception: IncludeException");
      } catch(IncludeException e) {
        /*
         * unable to load the include [jar:jar#jar] it is an invalid URI : 
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      URI uRI0 = new URI("classpath", "classpath", "classpath");
      DefaultIncludeProcessor defaultIncludeProcessor0 = new DefaultIncludeProcessor(uRI0, (Document) null);
      // Undeclared exception!
      try {
        defaultIncludeProcessor0.loadInclude(uRI0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      URI uRI0 = new URI("AIy", "AIy", "AIy");
      DefaultIncludeProcessor defaultIncludeProcessor0 = new DefaultIncludeProcessor(uRI0, (Document) null);
      try {
        defaultIncludeProcessor0.processInclude(uRI0);
        fail("Expecting exception: IncludeException");
      } catch(IncludeException e) {
        /*
         * include statements must use the following schemes [http, jar, classpath, file]
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      URI uRI0 = new URI("http", "http", "http");
      DefaultIncludeProcessor defaultIncludeProcessor0 = new DefaultIncludeProcessor(uRI0, (Document) null);
      // Undeclared exception!
      try {
        defaultIncludeProcessor0.loadInclude(uRI0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      URI uRI0 = new URI("classpath", "classpath", "classpath");
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("classpath");
      DefaultIncludeProcessor defaultIncludeProcessor0 = new DefaultIncludeProcessor(uRI0, (Document) null);
      defaultIncludeProcessor0.prepareInclude((Element) iIOMetadataNode0, "file", uRI0, "classpath");
      defaultIncludeProcessor0.prepareInclude((Element) iIOMetadataNode0, "file", uRI0);
      assertEquals(true, uRI0.isAbsolute());
  }

  @Test
  public void test7()  throws Throwable  {
      URI uRI0 = new URI("");
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      DefaultIncludeProcessor defaultIncludeProcessor0 = new DefaultIncludeProcessor(uRI0, (Document) null);
      defaultIncludeProcessor0.prepareInclude((Element) iIOMetadataNode0, "", uRI0);
      defaultIncludeProcessor0.prepareInclude((Element) iIOMetadataNode0, "", uRI0, "");
      assertEquals("", iIOMetadataNode0.getNodeName());
  }

  @Test
  public void test8()  throws Throwable  {
      URI uRI0 = new URI("jar", "jar", "jar");
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DefaultIncludeProcessor defaultIncludeProcessor0 = new DefaultIncludeProcessor(uRI0, (Document) null);
      // Undeclared exception!
      try {
        defaultIncludeProcessor0.prepareInclude((Element) iIOMetadataNode0, "jar", uRI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 1
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      DefaultIncludeProcessor defaultIncludeProcessor0 = new DefaultIncludeProcessor((URI) null, (Document) null);
      defaultIncludeProcessor0.resolveIncludes((Document) null);
  }

  @Test
  public void test10()  throws Throwable  {
      URI uRI0 = new URI("");
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      DefaultIncludeProcessor defaultIncludeProcessor0 = new DefaultIncludeProcessor(uRI0, (Document) null);
      defaultIncludeProcessor0.prepareInclude((Element) iIOMetadataNode0, "", uRI0);
      // Undeclared exception!
      try {
        defaultIncludeProcessor0.resolveIncludes((Document) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
