/*
 * This file was automatically generated by EvoSuite
 */

package net.sf.sugar.fspath;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sf.sugar.fspath.Callback;
import net.sf.sugar.fspath.FSPathResult;
import net.sf.sugar.fspath.FSPathResultListImpl;
import net.sf.sugar.fspath.FSPathResultModificationListImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FSPathResultModificationListImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FSPathResultModificationListImpl fSPathResultModificationListImpl0 = new FSPathResultModificationListImpl();
      FSPathResultModificationListImpl fSPathResultModificationListImpl1 = (FSPathResultModificationListImpl)fSPathResultModificationListImpl0.onFailure((Callback) null);
      assertSame(fSPathResultModificationListImpl1, fSPathResultModificationListImpl0);
  }

  @Test
  public void test1()  throws Throwable  {
      FSPathResultModificationListImpl fSPathResultModificationListImpl0 = new FSPathResultModificationListImpl();
      FSPathResult fSPathResult0 = new FSPathResult("antlr");
      fSPathResultModificationListImpl0.addFailure(fSPathResult0);
      // Undeclared exception!
      try {
        fSPathResultModificationListImpl0.onFailure((Callback) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      FSPathResultModificationListImpl fSPathResultModificationListImpl0 = new FSPathResultModificationListImpl();
      boolean boolean0 = fSPathResultModificationListImpl0.hasFailures();
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      FSPathResultModificationListImpl fSPathResultModificationListImpl0 = new FSPathResultModificationListImpl();
      Boolean boolean0 = Boolean.TRUE;
      FSPathResult fSPathResult0 = new FSPathResult(boolean0);
      fSPathResultModificationListImpl0.addFailure(fSPathResult0);
      boolean boolean1 = fSPathResultModificationListImpl0.hasFailures();
      assertEquals(1, fSPathResultModificationListImpl0.size());
      assertEquals(true, boolean1);
  }

  @Test
  public void test4()  throws Throwable  {
      FSPathResultModificationListImpl fSPathResultModificationListImpl0 = new FSPathResultModificationListImpl();
      FSPathResultListImpl fSPathResultListImpl0 = (FSPathResultListImpl)fSPathResultModificationListImpl0.getSuccesses();
      assertEquals("[]", fSPathResultListImpl0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      FSPathResultModificationListImpl fSPathResultModificationListImpl0 = new FSPathResultModificationListImpl();
      Boolean boolean0 = Boolean.TRUE;
      FSPathResult fSPathResult0 = new FSPathResult(boolean0);
      fSPathResultModificationListImpl0.addSuccess(fSPathResult0);
      FSPathResultListImpl fSPathResultListImpl0 = (FSPathResultListImpl)fSPathResultModificationListImpl0.getSuccesses();
      assertEquals("[true]", fSPathResultModificationListImpl0.toString());
      assertEquals(1, fSPathResultListImpl0.size());
  }

  @Test
  public void test6()  throws Throwable  {
      FSPathResultModificationListImpl fSPathResultModificationListImpl0 = new FSPathResultModificationListImpl();
      FSPathResult fSPathResult0 = new FSPathResult((Boolean) false);
      fSPathResultModificationListImpl0.addSuccess(fSPathResult0);
      fSPathResultModificationListImpl0.addSuccess(fSPathResult0);
      assertEquals(2, fSPathResultModificationListImpl0.size());
      assertEquals(false, fSPathResultModificationListImpl0.isEmpty());
  }

  @Test
  public void test7()  throws Throwable  {
      FSPathResultModificationListImpl fSPathResultModificationListImpl0 = new FSPathResultModificationListImpl();
      Boolean boolean0 = Boolean.TRUE;
      FSPathResult fSPathResult0 = new FSPathResult(boolean0);
      fSPathResultModificationListImpl0.addFailure(fSPathResult0);
      fSPathResultModificationListImpl0.addFailure(fSPathResult0);
      assertEquals(true, fSPathResultModificationListImpl0.hasFailures());
      assertEquals(false, fSPathResultModificationListImpl0.isEmpty());
  }
}
