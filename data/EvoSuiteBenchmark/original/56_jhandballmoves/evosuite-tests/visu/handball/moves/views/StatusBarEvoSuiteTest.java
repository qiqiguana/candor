/*
 * This file was automatically generated by EvoSuite
 */

package visu.handball.moves.views;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Component;
import java.awt.event.MouseEvent;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuDragMouseEvent;
import org.junit.BeforeClass;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.MoveEvent;
import visu.handball.moves.model.PassEvent;
import visu.handball.moves.model.player.Ball;
import visu.handball.moves.model.player.Defender;
import visu.handball.moves.model.player.HighlightableItem;
import visu.handball.moves.model.player.Offender;
import visu.handball.moves.model.player.Player;
import visu.handball.moves.views.StatusBar;

@RunWith(EvoSuiteRunner.class)
public class StatusBarEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      StatusBar statusBar0 = new StatusBar(handballModel0);
      assertNotNull(statusBar0);
      
      MouseEvent mouseEvent0 = new MouseEvent((Component) statusBar0, 9560, (long) 9560, 9560, 9560, 9560, 9560, true);
      statusBar0.mouseMoved(mouseEvent0);
      assertEquals("java.awt.event.MouseEvent[unknown type,(9560,9560),absolute(0,0),button=0,modifiers=Alt+Button1+Button2,extModifiers=Meta+Shift+Alt Graph+Button1,clickCount=9560] on visu.handball.moves.views.StatusBar[,0,0,0x0,invalid,layout=java.awt.GridBagLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", mouseEvent0.toString());
      assertEquals("visu.handball.moves.views.StatusBar[,0,0,0x0,invalid,layout=java.awt.GridBagLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", statusBar0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      HandballModel.State handballModel_State0 = HandballModel.State.PLACE_BALL;
      StatusBar statusBar0 = new StatusBar(handballModel0);
      handballModel0.setState(handballModel_State0);
      assertEquals(0, handballModel0.getAcutalSequenceNr());
  }

  @Test
  public void test2()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      StatusBar statusBar0 = new StatusBar(handballModel0);
      assertNotNull(statusBar0);
      
      MenuElement[] menuElementArray0 = new MenuElement[2];
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent((Component) statusBar0, (-16), (long) (-16), (-16), (-16), (-16), (-16), (-16), (-16), false, menuElementArray0, menuSelectionManager0);
      statusBar0.mouseDragged((MouseEvent) menuDragMouseEvent0);
      assertEquals("javax.swing.event.MenuDragMouseEvent[unknown type,(-16,-16),absolute(-16,-16),button=0,modifiers=Alt Graph+Button1,extModifiers=Meta+Ctrl+Alt+Shift+Alt Graph+Button1+Button2+Button3,clickCount=-16] on visu.handball.moves.views.StatusBar[,0,0,0x0,invalid,layout=java.awt.GridBagLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", menuDragMouseEvent0.toString());
      assertEquals("visu.handball.moves.views.StatusBar[,0,0,0x0,invalid,layout=java.awt.GridBagLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", statusBar0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      StatusBar statusBar0 = new StatusBar(handballModel0);
      HandballModel.State handballModel_State0 = HandballModel.State.INITIAL;
      handballModel0.setState(handballModel_State0);
      assertEquals(false, handballModel0.isGoalPassSet());
  }

  @Test
  public void test4()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      StatusBar statusBar0 = new StatusBar(handballModel0);
      HandballModel.State handballModel_State0 = HandballModel.State.PLACE_DEFENDERS;
      handballModel0.setState(handballModel_State0);
      assertEquals(HandballModel.State.PLACE_DEFENDERS, handballModel0.getState());
  }

  @Test
  public void test5()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      HandballModel.State handballModel_State0 = HandballModel.State.EDIT;
      handballModel0.setState(handballModel_State0);
      StatusBar statusBar0 = new StatusBar(handballModel0);
      Defender defender0 = new Defender(112, 112);
      PassEvent passEvent0 = new PassEvent((Player) defender0, 112, 1);
      handballModel0.setActualMoveEvent((MoveEvent) passEvent0);
      assertEquals(HandballModel.State.EDIT_EVENT, handballModel0.getState());
  }

  @Test
  public void test6()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      handballModel0.stopAnimation();
      StatusBar statusBar0 = new StatusBar(handballModel0);
      Defender defender0 = new Defender(0, 0);
      PassEvent passEvent0 = new PassEvent((Player) defender0, 0, 0);
      handballModel0.setActualMoveEvent((MoveEvent) passEvent0);
      assertEquals(HandballModel.State.EDIT_EVENT, handballModel0.getState());
      assertEquals(true, passEvent0.isMarked());
  }

  @Test
  public void test7()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      StatusBar statusBar0 = new StatusBar(handballModel0);
      // Undeclared exception!
      try {
        handballModel0.startAnimation(true);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      StatusBar statusBar0 = new StatusBar(handballModel0);
      Offender offender0 = new Offender((-1), (-1));
      handballModel0.setHighLightedItem((HighlightableItem) offender0);
      assertEquals("", handballModel0.getMoveName());
  }

  @Test
  public void test9()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      StatusBar statusBar0 = new StatusBar(handballModel0);
      Ball ball0 = handballModel0.getBall();
      handballModel0.setHighLightedItem((HighlightableItem) ball0);
      HandballModel.State handballModel_State0 = HandballModel.State.EDIT;
      handballModel0.setState(handballModel_State0);
      assertEquals(false, handballModel0.isBallSet());
  }

  @Test
  public void test10()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      StatusBar statusBar0 = new StatusBar(handballModel0);
      HandballModel.State handballModel_State0 = HandballModel.State.EDIT_EVENT;
      handballModel0.setState(handballModel_State0);
      assertEquals("", handballModel0.getMoveName());
  }

  @Test
  public void test11()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      StatusBar statusBar0 = new StatusBar(handballModel0);
      Defender defender0 = new Defender(0, 0);
      MoveEvent moveEvent0 = new MoveEvent((Player) defender0, 0);
      handballModel0.setActualMoveEvent(moveEvent0);
      assertEquals(HandballModel.State.EDIT_EVENT, handballModel0.getState());
  }
}
