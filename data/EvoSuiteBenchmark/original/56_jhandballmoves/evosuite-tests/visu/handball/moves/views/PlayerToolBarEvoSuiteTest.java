/*
 * This file was automatically generated by EvoSuite
 */

package visu.handball.moves.views;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.HandballModelListener;
import visu.handball.moves.model.player.Defender;
import visu.handball.moves.model.player.Player;
import visu.handball.moves.views.PlayerToolBar;

@RunWith(EvoSuiteRunner.class)
public class PlayerToolBarEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      PlayerToolBar playerToolBar0 = new PlayerToolBar(handballModel0);
      HandballModel.State handballModel_State0 = HandballModel.State.EDIT;
      handballModel0.setState(handballModel_State0);
      Defender defender0 = new Defender((-12), (-12));
      handballModel0.setMarkedPlayer((Player) defender0);
      assertEquals(0, handballModel0.getHighestSequenceNumber());
  }

  @Test
  public void test1()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      PlayerToolBar playerToolBar0 = new PlayerToolBar(handballModel0);
      HandballModel.State handballModel_State0 = HandballModel.State.PLACE_DEFENDERS;
      handballModel0.setState(handballModel_State0);
      handballModel0.removePlayer((Player) null);
      assertEquals(0, handballModel0.getHighestSequenceNumber());
  }

  @Test
  public void test2()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      PlayerToolBar playerToolBar0 = new PlayerToolBar(handballModel0);
      handballModel0.stopAnimation();
      assertEquals(false, handballModel0.passEventDefined());
  }

  @Test
  public void test3()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      PlayerToolBar playerToolBar0 = new PlayerToolBar(handballModel0);
      // Undeclared exception!
      try {
        handballModel0.startAnimation(true);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      PlayerToolBar playerToolBar0 = new PlayerToolBar(handballModel0);
      handballModel0.addListener((HandballModelListener) playerToolBar0);
      HandballModel.State handballModel_State0 = HandballModel.State.PLACE_BALL;
      handballModel0.setState(handballModel_State0);
      assertEquals(false, handballModel0.passEventDefined());
  }
}
