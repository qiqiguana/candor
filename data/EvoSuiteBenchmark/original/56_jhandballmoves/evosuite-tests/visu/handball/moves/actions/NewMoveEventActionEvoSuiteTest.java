/*
 * This file was automatically generated by EvoSuite
 */

package visu.handball.moves.actions;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.event.ActionEvent;
import javax.swing.JLayeredPane;
import org.junit.BeforeClass;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.MoveEvent;
import visu.handball.moves.model.player.Offender;
import visu.handball.moves.model.player.Player;

@RunWith(EvoSuiteRunner.class)
public class NewMoveEventActionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      NewMoveEventAction newMoveEventAction0 = new NewMoveEventAction(handballModel0);
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      ActionEvent actionEvent0 = new ActionEvent((Object) integer0, (int) integer0, "O15tf`zR}\"%<5;k`");
      newMoveEventAction0.actionPerformed(actionEvent0);
      assertEquals("java.awt.event.ActionEvent[unknown type,cmd=O15tf`zR}\"%<5;k`,when=0,modifiers=] on 100", actionEvent0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      NewMoveEventAction newMoveEventAction0 = new NewMoveEventAction(handballModel0);
      Offender offender0 = new Offender(0, 0);
      MoveEvent moveEvent0 = new MoveEvent((Player) offender0, 1, 1);
      handballModel0.setActualMoveEvent(moveEvent0);
      ActionEvent actionEvent0 = new ActionEvent((Object) "Unknown keyCode: 0x0", 1, "Unknown keyCode: 0x0");
      moveEvent0.setSequenceNr(0);
      newMoveEventAction0.actionPerformed(actionEvent0);
      assertEquals(false, newMoveEventAction0.isEnabled());
      assertEquals(true, handballModel0.isMarkedPlayerAddable());
  }

  @Test
  public void test2()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      NewMoveEventAction newMoveEventAction0 = new NewMoveEventAction(handballModel0);
      HandballModel.State handballModel_State0 = HandballModel.State.EDIT;
      handballModel0.setState(handballModel_State0);
      assertEquals(HandballModel.State.EDIT, handballModel0.getState());
  }

  @Test
  public void test3()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      NewMoveEventAction newMoveEventAction0 = new NewMoveEventAction(handballModel0);
      Offender offender0 = new Offender(0, 0);
      MoveEvent moveEvent0 = new MoveEvent((Player) offender0, 1, 1);
      handballModel0.setActualMoveEvent(moveEvent0);
      HandballModel.State handballModel_State0 = HandballModel.State.EDIT;
      handballModel0.setState(handballModel_State0);
      ActionEvent actionEvent0 = new ActionEvent((Object) "Unknown keyCode: 0x0", 1, "Unknown keyCode: 0x0");
      newMoveEventAction0.actionPerformed(actionEvent0);
      assertEquals(1, handballModel0.getAcutalSequenceNr());
      assertEquals(false, handballModel0.isMarkedPlayerAddable());
  }
}
