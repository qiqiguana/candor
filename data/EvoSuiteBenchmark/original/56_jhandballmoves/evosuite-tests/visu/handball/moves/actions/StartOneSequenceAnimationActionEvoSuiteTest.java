/*
 * This file was automatically generated by EvoSuite
 */

package visu.handball.moves.actions;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.event.ActionEvent;
import org.junit.BeforeClass;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.model.HandballModel;

@RunWith(EvoSuiteRunner.class)
public class StartOneSequenceAnimationActionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      StartOneSequenceAnimationAction startOneSequenceAnimationAction0 = new StartOneSequenceAnimationAction(handballModel0);
      // Undeclared exception!
      try {
        startOneSequenceAnimationAction0.actionPerformed((ActionEvent) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      StartOneSequenceAnimationAction startOneSequenceAnimationAction0 = new StartOneSequenceAnimationAction(handballModel0);
      HandballModel.State handballModel_State0 = HandballModel.State.ANIMATION_RUNNING;
      handballModel0.setState(handballModel_State0);
      ActionEvent actionEvent0 = new ActionEvent((Object) "", 43, "");
      // Undeclared exception!
      try {
        startOneSequenceAnimationAction0.actionPerformed(actionEvent0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      StartOneSequenceAnimationAction startOneSequenceAnimationAction0 = new StartOneSequenceAnimationAction(handballModel0);
      handballModel0.stopAnimation();
      assertEquals("", handballModel0.getMoveName());
  }

  @Test
  public void test3()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      HandballModel.State handballModel_State0 = HandballModel.State.FULL_ANIMATION_ENDED;
      handballModel0.setState(handballModel_State0);
      StartOneSequenceAnimationAction startOneSequenceAnimationAction0 = new StartOneSequenceAnimationAction(handballModel0);
      startOneSequenceAnimationAction0.modelChanged();
      assertEquals(true, startOneSequenceAnimationAction0.isEnabled());
  }

  @Test
  public void test4()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      StartOneSequenceAnimationAction startOneSequenceAnimationAction0 = new StartOneSequenceAnimationAction(handballModel0);
      startOneSequenceAnimationAction0.modelChanged();
      assertEquals(false, startOneSequenceAnimationAction0.isEnabled());
  }
}
