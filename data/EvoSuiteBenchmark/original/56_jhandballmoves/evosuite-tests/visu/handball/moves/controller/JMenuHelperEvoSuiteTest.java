/*
 * This file was automatically generated by EvoSuite
 */

package visu.handball.moves.controller;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.event.ActionListener;
import javax.swing.Action;
import javax.swing.JComboBox;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.text.DefaultEditorKit;
import org.junit.BeforeClass;
import visu.handball.moves.controller.JMenuHelper;

@RunWith(EvoSuiteRunner.class)
public class JMenuHelperEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JMenu jMenu0 = new JMenu((Action) null);
      JMenuHelper.addMenuItem(jMenu0, "P", (Action) null);
      assertEquals(1, jMenu0.getItemCount());
      assertEquals(1, jMenu0.getMenuComponentCount());
  }

  @Test
  public void test1()  throws Throwable  {
      JComboBox jComboBox0 = new JComboBox();
      JMenu jMenu0 = new JMenu((Action) null);
      JMenuHelper.addMenuItem(jMenu0, "ZNqL[A8my<vN=e", (ActionListener) jComboBox0);
      assertEquals(1, jMenu0.getMenuComponentCount());
      assertEquals(1, jMenu0.getItemCount());
  }

  @Test
  public void test2()  throws Throwable  {
      JMenuHelper jMenuHelper0 = new JMenuHelper();
      assertNotNull(jMenuHelper0);
  }

  @Test
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try {
        JMenuHelper.addMenuItem((JMenu) null, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      JMenuBar jMenuBar0 = new JMenuBar();
      JMenu jMenu0 = JMenuHelper.addMenuBarItem(jMenuBar0, "");
      JMenuHelper.addMenuItem(jMenu0, "", '+');
      assertEquals(1, jMenuBar0.getMenuCount());
      assertEquals(1, jMenu0.getMenuComponentCount());
  }

  @Test
  public void test5()  throws Throwable  {
      JMenu jMenu0 = new JMenu((Action) null);
      JMenuHelper.addMenuItem(jMenu0, "-/7|3_Y|s;Z(", ':', (Action) null);
      assertEquals(1, jMenu0.getMenuComponentCount());
      assertEquals(1, jMenu0.getItemCount());
  }

  @Test
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try {
        JMenuHelper.addMenuBarItem((JMenuBar) null, "-/7|3_Y|s;Z(");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      JMenuBar jMenuBar0 = new JMenuBar();
      JMenu jMenu0 = JMenuHelper.addMenuBarItem(jMenuBar0, "");
      DefaultEditorKit.InsertBreakAction defaultEditorKit_InsertBreakAction0 = new DefaultEditorKit.InsertBreakAction();
      JMenuItem jMenuItem0 = JMenuHelper.addMenuItem(jMenu0, "", '0', (Action) defaultEditorKit_InsertBreakAction0);
      assertEquals(1, jMenuBar0.getComponentCount());
      assertEquals("insert-break", jMenuItem0.getLabel());
  }

  @Test
  public void test8()  throws Throwable  {
      JMenu jMenu0 = new JMenu();
      // Undeclared exception!
      try {
        JMenuHelper.addMenuItem(jMenu0, "_");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: 1
         */
      }
  }
}
