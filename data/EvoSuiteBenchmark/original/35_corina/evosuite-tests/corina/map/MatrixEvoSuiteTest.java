/*
 * This file was automatically generated by EvoSuite
 */

package corina.map;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import corina.map.Matrix;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MatrixEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      double[][] doubleArray0 = Matrix.makeRotateZ(1.0F);
      assertNotNull(doubleArray0);
  }

  @Test
  public void test1()  throws Throwable  {
      double[][] doubleArray0 = Matrix.makeRotateY((-326.15094F));
      assertNotNull(doubleArray0);
  }

  @Test
  public void test2()  throws Throwable  {
      double[][] doubleArray0 = Matrix.makeRotateX(1365.9625F);
      double[][] doubleArray1 = Matrix.multiply(doubleArray0, doubleArray0);
      assertFalse(doubleArray0.equals(doubleArray1));
  }

  @Test
  public void test3()  throws Throwable  {
      double[][] doubleArray0 = new double[1][6];
      // Undeclared exception!
      try {
        Matrix.multiply(doubleArray0, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      double[][] doubleArray0 = new double[7][1];
      Matrix.scale(doubleArray0, 0.0F);
  }
}
