/*
 * This file was automatically generated by EvoSuite
 */

package corina.map.tools;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lowagie.text.Chapter;
import com.lowagie.text.ListItem;
import com.lowagie.text.Paragraph;
import corina.map.LabelSet;
import corina.map.MapFrame;
import corina.map.MapPanel;
import corina.map.View;
import corina.map.tools.RulerTool;
import corina.map.tools.ToolBox;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.awt.event.MouseEvent;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RulerToolEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LabelSet labelSet0 = new LabelSet();
      MapPanel mapPanel0 = new MapPanel((MapFrame) null, labelSet0);
      View view0 = new View();
      RulerTool rulerTool0 = new RulerTool(mapPanel0, view0, (ToolBox) null);
      rulerTool0.getTooltip();
  }

  @Test
  public void test1()  throws Throwable  {
      View view0 = new View();
      RulerTool rulerTool0 = new RulerTool((MapPanel) null, view0, (ToolBox) null);
      assertNotNull(rulerTool0);
      
      Character character0 = rulerTool0.getKey();
      assertEquals("Distance", rulerTool0.getName());
      assertEquals(false, rulerTool0.mouseIsDown);
      assertEquals('m', (char)character0);
  }

  @Test
  public void test2()  throws Throwable  {
      View view0 = new View();
      RulerTool rulerTool0 = new RulerTool((MapPanel) null, view0, (ToolBox) null);
      assertNotNull(rulerTool0);
      
      // Undeclared exception!
      try {
        rulerTool0.getCursor();
        fail("Expecting exception: HeadlessException");
      } catch(HeadlessException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ListItem listItem0 = new ListItem();
      Chapter chapter0 = new Chapter((Paragraph) listItem0, 284);
      LabelSet labelSet0 = new LabelSet((List) chapter0);
      MapPanel mapPanel0 = new MapPanel((MapFrame) null, labelSet0);
      View view0 = new View();
      RulerTool rulerTool0 = new RulerTool(mapPanel0, view0, (ToolBox) null);
      assertNotNull(rulerTool0);
      
      // Undeclared exception!
      try {
        rulerTool0.mousePressed((MouseEvent) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      ListItem listItem0 = new ListItem();
      Chapter chapter0 = new Chapter((Paragraph) listItem0, 284);
      LabelSet labelSet0 = new LabelSet((List) chapter0);
      MapPanel mapPanel0 = new MapPanel((MapFrame) null, labelSet0);
      View view0 = new View();
      RulerTool rulerTool0 = new RulerTool(mapPanel0, view0, (ToolBox) null);
      assertNotNull(rulerTool0);
      
      rulerTool0.getFastKey();
      assertEquals(false, rulerTool0.mouseIsDown);
      assertEquals("Distance", rulerTool0.getName());
  }

  @Test
  public void test5()  throws Throwable  {
      LabelSet labelSet0 = new LabelSet();
      MapPanel mapPanel0 = new MapPanel((MapFrame) null, labelSet0);
      View view0 = new View();
      RulerTool rulerTool0 = new RulerTool(mapPanel0, view0, (ToolBox) null);
      assertNotNull(rulerTool0);
      
      rulerTool0.decorate((Graphics) null);
      assertEquals("Distance", rulerTool0.getName());
      assertEquals(false, rulerTool0.mouseIsDown);
  }
}
