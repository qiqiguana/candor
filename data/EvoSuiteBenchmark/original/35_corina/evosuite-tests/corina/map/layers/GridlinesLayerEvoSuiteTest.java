/*
 * This file was automatically generated by EvoSuite
 */

package corina.map.layers;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lowagie.text.Graphic;
import com.lowagie.text.pdf.AsianFontMapper;
import com.lowagie.text.pdf.FontMapper;
import com.lowagie.text.pdf.PdfGraphics2D;
import corina.map.Projection;
import corina.map.View;
import corina.map.layers.GridlinesLayer;
import corina.map.projections.SphericalProjection;
import java.awt.Graphics2D;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class GridlinesLayerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      GridlinesLayer gridlinesLayer0 = new GridlinesLayer();
      Graphic graphic0 = new Graphic();
      AsianFontMapper asianFontMapper0 = new AsianFontMapper("uNGZ/o_", "uNGZ/o_");
      PdfGraphics2D pdfGraphics2D0 = (PdfGraphics2D)graphic0.createGraphics((-27.494904F), (-27.494904F), (FontMapper) asianFontMapper0, true, (-27.494904F));
      View view0 = new View();
      SphericalProjection sphericalProjection0 = new SphericalProjection(view0);
      gridlinesLayer0.draw((Graphics2D) pdfGraphics2D0, (Projection) sphericalProjection0);
      assertEquals("com.lowagie.text.pdf.PdfGraphics2D[font=java.awt.Font[family=SansSerif,name=sansserif,style=plain,size=10],color=java.awt.Color[r=128,g=128,b=128]]", pdfGraphics2D0.toString());
      assertEquals("q\n0 0 0 0 re\nW\nn\n1 w\n2 J\n0 j\n10 M\n[]0 d\nq\n0.50196 0.50196 0.50196 RG\n-55 -674.49 m\n131 -689.49 l\nS\n131 -689.49 m\n320 -694.49 l\nS\n320 -694.49 m\n508 -689.49 l\nS\n-35 -458.49 m\n141 -473.49 l\nS\n141 -473.49 m\n320 -477.49 l\nS\n320 -477.49 m\n498 -473.49 l\nS\n-12 -241.49 m\n153 -255.49 l\nS\n153 -255.49 m\n320 -259.49 l\nS\n320 -259.49 m\n486 -255.49 l\nS\n13 -26.49 m\n165 -38.49 l\nS\n165 -38.49 m\n320 -42.49 l\nS\n320 -42.49 m\n474 -38.49 l\nS\n-55 -674.49 m\n-35 -458.49 l\nS\n-35 -458.49 m\n-12 -241.49 l\nS\n-12 -241.49 m\n13 -26.49 l\nS\n131 -689.49 m\n141 -473.49 l\nS\n141 -473.49 m\n153 -255.49 l\nS\n153 -255.49 m\n165 -38.49 l\nS\n320 -694.49 m\n320 -477.49 l\nS\n320 -477.49 m\n320 -259.49 l\nS\n320 -259.49 m\n320 -42.49 l\nS\n508 -689.49 m\n498 -473.49 l\nS\n498 -473.49 m\n486 -255.49 l\nS\n486 -255.49 m\n474 -38.49 l\nS\n", graphic0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      GridlinesLayer gridlinesLayer0 = new GridlinesLayer();
      gridlinesLayer0.stop();
      Graphic graphic0 = new Graphic();
      AsianFontMapper asianFontMapper0 = new AsianFontMapper("uNGZ/o_", "uNGZ/o_");
      PdfGraphics2D pdfGraphics2D0 = (PdfGraphics2D)graphic0.createGraphics((-27.494904F), (-27.494904F), (FontMapper) asianFontMapper0, true, (-27.494904F));
      View view0 = new View();
      SphericalProjection sphericalProjection0 = new SphericalProjection(view0);
      gridlinesLayer0.draw((Graphics2D) pdfGraphics2D0, (Projection) sphericalProjection0);
      assertEquals("com.lowagie.text.pdf.PdfGraphics2D[font=java.awt.Font[family=SansSerif,name=sansserif,style=plain,size=10],color=java.awt.Color[r=128,g=128,b=128]]", pdfGraphics2D0.toString());
      assertEquals("q\n0 0 0 0 re\nW\nn\n1 w\n2 J\n0 j\n10 M\n[]0 d\nq\n", graphic0.toString());
  }
}
