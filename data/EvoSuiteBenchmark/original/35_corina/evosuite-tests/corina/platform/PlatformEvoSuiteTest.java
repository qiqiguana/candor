/*
 * This file was automatically generated by EvoSuite
 */

package corina.platform;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import corina.platform.Platform;
import java.awt.HeadlessException;
import javax.swing.JFrame;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PlatformEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Platform platform0 = new Platform();
      boolean boolean0 = platform0.isWindows();
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      Platform platform0 = new Platform();
      // Undeclared exception!
      try {
        platform0.destroy();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Platform subsystem is already destroyed
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Platform platform0 = new Platform();
      boolean boolean0 = platform0.isUnix();
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      Platform platform0 = new Platform();
      boolean boolean0 = platform0.isMac();
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      Platform platform0 = new Platform();
      // Undeclared exception!
      try {
        platform0.init();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      Platform platform0 = new Platform();
      // Undeclared exception!
      try {
        platform0.open("control");
        fail("Expecting exception: HeadlessException");
      } catch(HeadlessException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Platform platform0 = new Platform();
      String string0 = platform0.getTrash();
      assertNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      Platform platform0 = new Platform();
      platform0.setModified((JFrame) null, false);
      assertEquals(false, platform0.isInitialized());
  }

  @Test
  public void test8()  throws Throwable  {
      Platform platform0 = new Platform();
      String string0 = platform0.getCopyModifier();
      assertEquals("control", string0);
  }
}
