/*
 * This file was automatically generated by EvoSuite
 */

package corina.core;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import corina.logging.Logging;
import corina.platform.Platform;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AbstractSubsystemEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Logging logging0 = new Logging();
      boolean boolean0 = logging0.isInitialized();
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      Logging logging0 = new Logging();
      logging0.init();
      // Undeclared exception!
      try {
        logging0.init();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Logging subsystem is already initialized
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Logging logging0 = new Logging();
      logging0.init();
      assertEquals(true, logging0.isInitialized());
      
      logging0.destroy();
      assertEquals(false, logging0.isInitialized());
  }

  @Test
  public void test3()  throws Throwable  {
      Platform platform0 = new Platform();
      // Undeclared exception!
      try {
        platform0.destroy();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Platform subsystem is already destroyed
         */
      }
  }
}
