/*
 * This file was automatically generated by EvoSuite
 */

package corina.browser;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import corina.browser.ItrdbURLConnection;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ItrdbURLConnectionEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      ItrdbURLConnection itrdbURLConnection0 = null;
      try {
        itrdbURLConnection0 = new ItrdbURLConnection((URL) null);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class corina.browser.ItrdbURLConnection
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          URL uRL0 = new URL("itrdb://chronoogis/guope/tyk001.r");
          // Undeclared exception!
          try {
            uRL0.getContent();
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.net.SocketPermission ftp.ngdc.noaa.gov resolve)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkConnect(SecurityManager.java:1031)
             * java.net.InetAddress.getAllByName0(InetAddress.java:1145)
             * java.net.InetAddress.getAllByName(InetAddress.java:1083)
             * java.net.InetAddress.getAllByName(InetAddress.java:1019)
             * java.net.InetAddress.getByName(InetAddress.java:969)
             * java.net.InetSocketAddress.<init>(InetSocketAddress.java:124)
             * sun.net.NetworkClient.doConnect(NetworkClient.java:163)
             * sun.net.NetworkClient.openServer(NetworkClient.java:118)
             * sun.net.ftp.FtpClient.openServer(FtpClient.java:488)
             * sun.net.ftp.FtpClient.openServer(FtpClient.java:475)
             * sun.net.www.protocol.ftp.FtpURLConnection.connect(FtpURLConnection.java:270)
             * sun.net.www.protocol.ftp.FtpURLConnection.getInputStream(FtpURLConnection.java:352)
             * java.net.URL.openStream(URL.java:1010)
             * corina.browser.ItrdbURLConnection.getInputStream(ItrdbURLConnection.java:26)
             * java.net.URLConnection.getContent(URLConnection.java:688)
             * java.net.URL.getContent(URL.java:1024)
             * sun.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test2()  throws Throwable  {
      URL uRL0 = null;
      try {
        uRL0 = new URL("nR?|kG%@P/d?6", "nR?|kG%@P/d?6", "nR?|kG%@P/d?6");
        fail("Expecting exception: MalformedURLException");
      } catch(MalformedURLException e) {
        /*
         * unknown protocol: nr?|kg%@p/d?6
         */
      }
  }
}
