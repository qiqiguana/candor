/*
 * This file was automatically generated by EvoSuite
 */

package corina.prefs;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import corina.prefs.Prefs;
import corina.prefs.PrefsListener;
import java.util.Hashtable;
import java.util.Properties;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PrefsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Prefs prefs0 = new Prefs();
      // Undeclared exception!
      try {
        prefs0.removePref("f");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Prefs prefs0 = new Prefs();
      prefs0.removePrefsListener((PrefsListener) null);
      assertNull(prefs0.getCorinaDir());
  }

  @Test
  public void test2()  throws Throwable  {
      Prefs prefs0 = new Prefs();
      String string0 = prefs0.getCorinaDir();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      Prefs prefs0 = new Prefs();
      try {
        prefs0.finalize();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * name can't be null
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Prefs prefs0 = new Prefs();
      // Undeclared exception!
      try {
        prefs0.getPref("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      Prefs prefs0 = new Prefs();
      Hashtable<Object, Object> hashtable0 = prefs0.getUIDefaults();
      assertEquals(0, hashtable0.size());
  }

  @Test
  public void test6()  throws Throwable  {
      Prefs prefs0 = new Prefs();
      Properties properties0 = prefs0.getPrefs();
      assertNull(properties0);
  }

  @Test
  public void test7()  throws Throwable  {
      Prefs prefs0 = new Prefs();
      // Undeclared exception!
      try {
        prefs0.setPref("@&s not lowed toreaM system property \"", "@&s not lowed toreaM system property \"");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      Prefs prefs0 = new Prefs();
      String string0 = prefs0.getName();
      assertEquals("Preferences", string0);
  }

  @Test
  public void test9()  throws Throwable  {
      Prefs prefs0 = new Prefs();
      // Undeclared exception!
      try {
        prefs0.init();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      Prefs prefs0 = new Prefs();
      // Undeclared exception!
      try {
        prefs0.destroy();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * name can't be null
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      Prefs prefs0 = new Prefs();
      prefs0.addPrefsListener((PrefsListener) null);
      // Undeclared exception!
      try {
        prefs0.firePrefChanged((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      Prefs prefs0 = new Prefs();
      prefs0.firePrefChanged("Preferences");
      assertEquals(false, prefs0.isInitialized());
  }
}
