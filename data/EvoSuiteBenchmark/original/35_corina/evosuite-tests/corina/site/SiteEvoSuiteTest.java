/*
 * This file was automatically generated by EvoSuite
 */

package corina.site;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import corina.site.Location;
import corina.site.Site;
import java.awt.Color;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SiteEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Site site0 = new Site();
      site0.setName("");
      assertEquals("", site0.getTypeString());
  }

  @Test
  public void test1()  throws Throwable  {
      Site site0 = new Site();
      site0.setComments("");
      Site site1 = (Site)site0.clone();
      assertTrue(site0.equals(site1));
  }

  @Test
  public void test2()  throws Throwable  {
      Site site0 = new Site();
      String string0 = site0.getCode();
      assertEquals("", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      Site site0 = new Site();
      site0.setTypeString("hS@lS'0_");
      String string0 = site0.getTypesAsString();
      assertEquals("Unknown", site0.getTypesAsString());
      assertNotNull(string0);
      assertEquals("Unknown", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      Site site0 = new Site();
      String string0 = site0.getTypeString();
      assertEquals("", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      Site site0 = new Site();
      site0.setFolder(".");
      Site site1 = new Site();
      boolean boolean0 = site0.equals((Object) site1);
      assertEquals(false, boolean0);
      assertFalse(site1.equals(site0));
  }

  @Test
  public void test6()  throws Throwable  {
      Site site0 = new Site();
      // Undeclared exception!
      try {
        site0.distanceTo(site0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Site site0 = new Site();
      String string0 = site0.toXML();
      assertNotNull(string0);
      assertEquals("   <site>\n   </site>\n", string0);
  }

  @Test
  public void test8()  throws Throwable  {
      Site site0 = new Site();
      site0.getAltitude();
  }

  @Test
  public void test9()  throws Throwable  {
      Site site0 = new Site();
      int int0 = site0.hashCode();
      assertEquals(0, int0);
  }

  @Test
  public void test10()  throws Throwable  {
      Site site0 = new Site();
      String string0 = site0.getSpecies();
      assertEquals("", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      Site site0 = new Site();
      site0.setCountry("hS@lS'0_");
      Site site1 = new Site();
      Site site2 = (Site)site0.clone();
      assertNotNull(site2);
      
      boolean boolean0 = site1.equals((Object) site2);
      assertTrue(site2.equals(site0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      Site site0 = new Site();
      Integer integer0 = new Integer(147);
      site0.setAltitude(integer0);
      Site site1 = (Site)site0.clone();
      assertNotNull(site1);
      assertTrue(site0.equals(site1));
  }

  @Test
  public void test13()  throws Throwable  {
      Site site0 = new Site();
      Location location0 = new Location();
      site0.setLocation(location0);
      String string0 = site0.toXML();
      assertNotNull(string0);
      assertEquals("   <site>\n      <location>+000000+0000000/</location>\n   </site>\n", site0.toXML());
      assertEquals("   <site>\n      <location>+000000+0000000/</location>\n   </site>\n", string0);
  }

  @Test
  public void test14()  throws Throwable  {
      Site site0 = new Site();
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[3] = true;
      site0.setTypes(booleanArray0);
      String string0 = site0.getTypesAsString();
      assertEquals("   <site>\n      <type>4</type>\n   </site>\n", site0.toXML());
      assertEquals("Unknown", string0);
  }

  @Test
  public void test15()  throws Throwable  {
      Site site0 = new Site();
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[1] = true;
      site0.setTypes(booleanArray0);
      String string0 = site0.getTypesAsString();
      assertEquals("2", site0.getTypeString());
      assertEquals("Medieval", string0);
  }

  @Test
  public void test16()  throws Throwable  {
      Site site0 = new Site();
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      site0.setTypes(booleanArray0);
      String string0 = site0.getTypesAsString();
      assertEquals("32", site0.getTypeString());
      assertEquals("Ancient, Medieval", string0);
  }

  @Test
  public void test17()  throws Throwable  {
      Site site0 = new Site();
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = true;
      booleanArray0[2] = true;
      site0.setTypes(booleanArray0);
      String string0 = site0.getTypesAsString();
      assertEquals("31", site0.getTypeString());
      assertEquals("Ancient, Forests", string0);
  }

  @Test
  public void test18()  throws Throwable  {
      Site site0 = new Site();
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[3] = true;
      booleanArray0[2] = true;
      site0.setTypes(booleanArray0);
      String string0 = site0.getTypesAsString();
      assertEquals(true, site0.isForest());
      assertEquals("Forests, Unknown", string0);
  }

  @Test
  public void test19()  throws Throwable  {
      Site site0 = new Site();
      // Undeclared exception!
      try {
        site0.setFilename("   <site>\n      <location>+000000+0000000/</location>\n   </site>\n");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test20()  throws Throwable  {
      Site site0 = new Site();
      String string0 = site0.toString();
      assertNotNull(string0);
      assertEquals("[Site: name='' code='' id='' ]", string0);
  }

  @Test
  public void test21()  throws Throwable  {
      Site site0 = new Site();
      Location location0 = new Location();
      site0.setLocation(location0);
      String string0 = site0.toString();
      assertNotNull(string0);
      assertEquals("[Site: name='' code='' id='' location=0\u00B00'S 0\u00B00'W ]", site0.toString());
      assertEquals("[Site: name='' code='' id='' location=0\u00B00'S 0\u00B00'W ]", string0);
  }

  @Test
  public void test22()  throws Throwable  {
      Site site0 = new Site();
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[2] = true;
      site0.setTypes(booleanArray0);
      Color color0 = site0.getSiteColor();
      assertEquals("   <site>\n      <type>1</type>\n   </site>\n", site0.toXML());
      assertEquals(144, color0.getGreen());
  }

  @Test
  public void test23()  throws Throwable  {
      Site site0 = new Site();
      Color color0 = site0.getSiteColor();
      assertNotNull(color0);
      assertEquals("java.awt.Color[r=128,g=128,b=128]", color0.toString());
  }

  @Test
  public void test24()  throws Throwable  {
      Site site0 = new Site();
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[1] = true;
      site0.setTypes(booleanArray0);
      Color color0 = site0.getSiteColor();
      assertEquals("2", site0.getTypeString());
      assertEquals(28, color0.getBlue());
  }

  @Test
  public void test25()  throws Throwable  {
      Site site0 = new Site();
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = true;
      site0.setTypes(booleanArray0);
      Color color0 = site0.getSiteColor();
      assertEquals("3", site0.getTypeString());
      assertEquals(25, color0.getRed());
  }

  @Test
  public void test26()  throws Throwable  {
      Site site0 = new Site();
      boolean boolean0 = site0.isForest();
      assertEquals(false, boolean0);
  }

  @Test
  public void test27()  throws Throwable  {
      Site site0 = new Site();
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[2] = true;
      site0.setTypes(booleanArray0);
      boolean boolean0 = site0.isForest();
      assertEquals("   <site>\n      <type>1</type>\n   </site>\n", site0.toXML());
      assertEquals(true, boolean0);
  }

  @Test
  public void test28()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = (Site)site0.clone();
      assertNotNull(site1);
      
      boolean boolean0 = site0.equals((Object) site1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test29()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = (Site)site0.clone();
      assertTrue(site0.equals(site1));
      assertNotNull(site1);
      
      site0.setCode("   <site>\n      <location>+000000+0000000/</location>\n   </site>\n");
      boolean boolean0 = site0.equals((Object) site1);
      assertFalse(site0.equals(site1));
      assertEquals(false, boolean0);
  }

  @Test
  public void test30()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = (Site)site0.clone();
      assertNotNull(site1);
      assertTrue(site1.equals(site0));
      
      site0.setId(".");
      boolean boolean0 = site0.equals((Object) site1);
      assertFalse(site0.equals(site1));
      assertEquals(false, boolean0);
  }

  @Test
  public void test31()  throws Throwable  {
      Site site0 = new Site();
      Location location0 = new Location();
      site0.setLocation(location0);
      Site site1 = new Site();
      Site site2 = (Site)site1.clone();
      assertNotNull(site2);
      
      boolean boolean0 = site0.equals((Object) site2);
      assertTrue(site2.equals(site1));
      assertEquals(false, boolean0);
      assertFalse(site2.equals(site0));
  }

  @Test
  public void test32()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = (Site)site0.clone();
      assertNotNull(site1);
      assertTrue(site0.equals(site1));
      
      site0.setSpecies("G:DATAIn this case, consider using the commons-logging-adapters.jar file or ");
      boolean boolean0 = site0.equals((Object) site1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test33()  throws Throwable  {
      Site site0 = new Site();
      site0.setTypeString("V\u0003AM-K'N1 yXy");
      Site site1 = new Site();
      Site site2 = (Site)site1.clone();
      assertNotNull(site2);
      
      boolean boolean0 = site0.equals((Object) site2);
      assertEquals(false, boolean0);
      assertFalse(site2.equals(site0));
      assertTrue(site2.equals(site1));
  }

  @Test
  public void test34()  throws Throwable  {
      Site site0 = new Site();
      Location location0 = new Location();
      site0.setLocation(location0);
      Site site1 = (Site)site0.clone();
      assertEquals("   <site>\n      <location>+000000+0000000/</location>\n   </site>\n", site1.toXML());
      assertNotNull(site1);
  }

  @Test
  public void test35()  throws Throwable  {
      Site site0 = new Site();
      site0.setFolder(".");
      Site site1 = (Site)site0.clone();
      assertEquals("", site1.getCode());
  }
}
