/*
 * This file was automatically generated by EvoSuite
 */

package corina.site;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import corina.site.Country;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CountryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      String string0 = Country.badCountry("Jordan");
      assertNotNull(string0);
      assertEquals("<unknown Jordan>", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try {
        Country.getName("<unknown Jordan>");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      String string0 = Country.getName("JO");
      assertNotNull(string0);
      assertEquals("Jordan", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try {
        Country.getCode((String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      String string0 = Country.getCode("Jordan");
      assertEquals("JO", string0);
      assertNotNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      String[] stringArray0 = Country.getAllNames();
      assertNotNull(stringArray0);
  }

  @Test
  public void test6()  throws Throwable  {
      String string0 = Country.badCode("<unknown Jordan>");
      assertEquals("Jorda", string0);
      assertNotNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      String string0 = Country.badCode("JO");
      assertEquals("<unknown 'JO'>", string0);
      assertNotNull(string0);
  }
}
