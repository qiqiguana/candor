/*
 * This file was automatically generated by EvoSuite
 */

package corina.search;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import corina.search.Criterion;
import corina.search.Search;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SearchEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Search search0 = new Search();
      assertNotNull(search0);
      
      // Undeclared exception!
      try {
        search0.run();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Search search0 = new Search();
      search0.setFolder("DgzNoS._lX&");
      assertEquals("SELECT * FROM meta m ;", search0.toSQL());
  }

  @Test
  public void test2()  throws Throwable  {
      Search search0 = new Search();
      search0.setType(0);
      assertEquals("", search0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      Search search0 = new Search();
      // Undeclared exception!
      try {
        search0.setType(27);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * type must be ANY or ALL (got: 27)
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Search search0 = new Search();
      assertNotNull(search0);
      
      search0.setType(1);
      String string0 = search0.toSQL();
      assertEquals("SELECT * FROM meta m ;", string0);
      assertNotNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      Search search0 = new Search();
      search0.addCriterion((Criterion) null, false);
      // Undeclared exception!
      try {
        search0.toString();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Search search0 = new Search();
      search0.addCriterion((Criterion) null, true);
      // Undeclared exception!
      try {
        search0.run();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
