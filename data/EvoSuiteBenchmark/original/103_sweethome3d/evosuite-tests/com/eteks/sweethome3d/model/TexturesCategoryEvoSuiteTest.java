/*
 * This file was automatically generated by EvoSuite
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.URLContent;
import java.net.URL;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TexturesCategoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("e^O_92~g,>MCP1`,");
      // Undeclared exception!
      try {
        texturesCategory0.getTexture(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      List<CatalogTexture> list0 = texturesCategory0.getTextures();
      assertNotNull(list0);
      
      URLContent uRLContent0 = new URLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) uRLContent0, (float) 0, (float) 0, "", true);
      int int0 = texturesCategory0.getIndexOfTexture(catalogTexture0);
      assertEquals((-1), int0);
  }

  @Test
  public void test2()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("e^O_92~g,>MCP1`,");
      int int0 = texturesCategory0.getTexturesCount();
      assertEquals(0, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("system protocol handler");
      int int0 = texturesCategory0.hashCode();
      assertEquals((-1312195693), int0);
  }

  @Test
  public void test4()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      URLContent uRLContent0 = new URLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) uRLContent0, (float) 0, (float) 0, "", true);
      texturesCategory0.add(catalogTexture0);
      assertEquals(1, texturesCategory0.getTexturesCount());
      
      texturesCategory0.delete(catalogTexture0);
      assertEquals(0, texturesCategory0.getTexturesCount());
  }

  @Test
  public void test5()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("zH");
      String string0 = texturesCategory0.getName();
      assertEquals("zH", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      int int0 = texturesCategory0.compareTo(texturesCategory0);
      assertEquals(0, int0);
  }

  @Test
  public void test7()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory(".'@ pzEnB\"<OIu([H");
      // Undeclared exception!
      try {
        texturesCategory0.delete((CatalogTexture) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("system protocol handler");
      boolean boolean0 = texturesCategory0.equals((Object) (-1555));
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("e^O_92~g,>MCP1`,");
      boolean boolean0 = texturesCategory0.equals((Object) texturesCategory0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("e^O_92~g,>MCP1`,");
      TexturesCategory texturesCategory1 = new TexturesCategory("1hqz@3#ul]zA");
      boolean boolean0 = texturesCategory0.equals((Object) texturesCategory1);
      assertEquals(false, boolean0);
  }
}
