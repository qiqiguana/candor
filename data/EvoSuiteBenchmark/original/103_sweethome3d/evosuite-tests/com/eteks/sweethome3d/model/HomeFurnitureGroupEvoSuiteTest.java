/*
 * This file was automatically generated by EvoSuite
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.CatalogDoorOrWindow;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.DoorOrWindow;
import com.eteks.sweethome3d.model.HomeDoorOrWindow;
import com.eteks.sweethome3d.model.HomeFurnitureGroup;
import com.eteks.sweethome3d.model.HomePieceOfFurniture;
import com.eteks.sweethome3d.model.Level;
import com.eteks.sweethome3d.model.Sash;
import java.math.BigDecimal;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class HomeFurnitureGroupEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[6];
      float[][] floatArray0 = new float[26][10];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", (Content) null, (Content) null, (Content) null, (-1.0F), (float) 35, 965.70087F, 0.0F, true, (-1.0F), (-1.0F), sashArray0, floatArray0, "OojQ-sZ%S]3?HGFq", true, true, true, bigDecimal0, bigDecimal0, "OojQ-sZ%S]3?HGFq");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup((List<HomePieceOfFurniture>) linkedList0, "OojQ-sZ%S]3?HGFq");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      linkedList0.push((HomePieceOfFurniture) homeFurnitureGroup1);
      Level level0 = new Level("OojQ-sZ%S]3?HGFq", (float) 35, 0.0F, (float) 35);
      homeFurnitureGroup0.setLevel(level0);
      HomeFurnitureGroup homeFurnitureGroup2 = new HomeFurnitureGroup((List<HomePieceOfFurniture>) linkedList0, "OojQ-sZ%S]3?HGFq");
      assertEquals(2, linkedList0.size());
      assertEquals(true, homeFurnitureGroup2.isVisible());
  }

  @Test
  public void test1()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[6];
      float[][] floatArray0 = new float[26][10];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("OojQ-sZ%S]3?HGFq", (Content) null, (Content) null, 965.70087F, (float) 35, 0.0F, 965.70087F, true, (float) 35, 0.0F, sashArray0, (Integer) 35, floatArray0, true, (float) 35, true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      linkedList0.offer((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup((List<HomePieceOfFurniture>) linkedList0, "OojQ-sZ%S]3?HGFq");
      assertEquals(1, linkedList0.size());
  }

  @Test
  public void test2()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[6];
      float[][] floatArray0 = new float[26][10];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", (Content) null, (Content) null, (Content) null, (-1.0F), (float) 35, 965.70087F, 0.0F, true, (-1.0F), (-1.0F), sashArray0, floatArray0, "OojQ-sZ%S]3?HGFq", true, true, true, bigDecimal0, bigDecimal0, "OojQ-sZ%S]3?HGFq");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup((List<HomePieceOfFurniture>) linkedList0, "OojQ-sZ%S]3?HGFq");
      assertEquals(1, linkedList0.size());
      
      linkedList0.push((HomePieceOfFurniture) homeFurnitureGroup0);
      // Undeclared exception!
      try {
        homeFurnitureGroup0.setColor((Integer) 35);
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[6];
      float[][] floatArray0 = new float[26][10];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", (Content) null, (Content) null, (Content) null, (-1.0F), (float) 35, 965.70087F, 0.0F, true, (-1.0F), (-1.0F), sashArray0, floatArray0, "OojQ-sZ%S]3?HGFq", true, true, true, bigDecimal0, bigDecimal0, "OojQ-sZ%S]3?HGFq");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup((List<HomePieceOfFurniture>) linkedList0, "OojQ-sZ%S]3?HGFq");
      assertEquals(1, linkedList0.size());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      linkedList0.push((HomePieceOfFurniture) homeFurnitureGroup1);
      homeFurnitureGroup0.setColor((Integer) 35);
      homeFurnitureGroup1.clone();
      assertEquals(true, homeFurnitureGroup0.isMovable());
  }

  @Test
  public void test4()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[6];
      float[][] floatArray0 = new float[26][10];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", (Content) null, (Content) null, (Content) null, (-1.0F), (float) 35, 965.70087F, 0.0F, true, (-1.0F), (-1.0F), sashArray0, floatArray0, "OojQ-sZ%S]3?HGFq", true, true, true, bigDecimal0, bigDecimal0, "OojQ-sZ%S]3?HGFq");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup((List<HomePieceOfFurniture>) linkedList0, "OojQ-sZ%S]3?HGFq");
      assertEquals(1, linkedList0.size());
      
      homeFurnitureGroup0.setAngle(0.0F);
      assertEquals(true, homeFurnitureGroup0.isVisible());
  }

  @Test
  public void test5()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[6];
      float[][] floatArray0 = new float[26][10];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", (Content) null, (Content) null, (Content) null, (-1.0F), (float) 35, 965.70087F, 0.0F, true, (-1.0F), (-1.0F), sashArray0, floatArray0, "OojQ-sZ%S]3?HGFq", true, true, true, bigDecimal0, bigDecimal0, "OojQ-sZ%S]3?HGFq");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup((List<HomePieceOfFurniture>) linkedList0, "OojQ-sZ%S]3?HGFq");
      assertEquals(1, linkedList0.size());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      linkedList0.push((HomePieceOfFurniture) homeFurnitureGroup1);
      homeFurnitureGroup0.setModelMirrored(true);
      assertEquals(true, homeFurnitureGroup0.isModelMirrored());
  }

  @Test
  public void test6()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[6];
      float[][] floatArray0 = new float[26][10];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", (Content) null, (Content) null, (Content) null, (-1.0F), (float) 35, 965.70087F, 0.0F, true, (-1.0F), (-1.0F), sashArray0, floatArray0, "OojQ-sZ%S]3?HGFq", true, true, true, bigDecimal0, bigDecimal0, "OojQ-sZ%S]3?HGFq");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup((List<HomePieceOfFurniture>) linkedList0, "OojQ-sZ%S]3?HGFq");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      linkedList0.push((HomePieceOfFurniture) homeFurnitureGroup1);
      Sash[] sashArray1 = new Sash[5];
      CatalogDoorOrWindow catalogDoorOrWindow1 = new CatalogDoorOrWindow("OojQ-sZ%S]3?HGFq", (Content) null, (Content) null, 965.70087F, (float) 35, 0.0F, 965.70087F, true, (float) 35, 0.0F, sashArray1, (Integer) 35, floatArray0, true, (float) 35, true);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow1);
      linkedList0.offer((HomePieceOfFurniture) homeDoorOrWindow1);
      HomeFurnitureGroup homeFurnitureGroup2 = new HomeFurnitureGroup((List<HomePieceOfFurniture>) linkedList0, "OojQ-sZ%S]3?HGFq");
      assertEquals(3, linkedList0.size());
      
      homeFurnitureGroup2.setWidth((float) 35);
      assertEquals(true, homeFurnitureGroup2.isDoorOrWindow());
  }

  @Test
  public void test7()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[6];
      float[][] floatArray0 = new float[26][10];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", (Content) null, (Content) null, (Content) null, (-1.0F), (float) 35, 965.70087F, 0.0F, true, (-1.0F), (-1.0F), sashArray0, floatArray0, "OojQ-sZ%S]3?HGFq", true, true, true, bigDecimal0, bigDecimal0, "OojQ-sZ%S]3?HGFq");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup((List<HomePieceOfFurniture>) linkedList0, "OojQ-sZ%S]3?HGFq");
      assertNotNull(homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertNotNull(homeFurnitureGroup1);
      
      homeFurnitureGroup1.setAngle(965.70087F);
      linkedList0.push((HomePieceOfFurniture) homeFurnitureGroup1);
      assertEquals(4.3735147F, homeFurnitureGroup1.getAngle(), 0.01F);
      
      Sash[] sashArray1 = new Sash[5];
      CatalogDoorOrWindow catalogDoorOrWindow1 = new CatalogDoorOrWindow("OojQ-sZ%S]3?HGFq", (Content) null, (Content) null, 965.70087F, (float) 35, 0.0F, 965.70087F, true, (float) 35, 0.0F, sashArray1, (Integer) 35, floatArray0, true, (float) 35, true);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow1);
      linkedList0.offer((HomePieceOfFurniture) homeDoorOrWindow1);
      HomeFurnitureGroup homeFurnitureGroup2 = new HomeFurnitureGroup((List<HomePieceOfFurniture>) linkedList0, "OojQ-sZ%S]3?HGFq");
      homeFurnitureGroup2.setWidth((float) 35);
      assertEquals(false, homeFurnitureGroup2.isBackFaceShown());
  }

  @Test
  public void test8()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[6];
      float[][] floatArray0 = new float[26][10];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", (Content) null, (Content) null, (Content) null, (-1.0F), (float) 35, 965.70087F, 0.0F, true, (-1.0F), (-1.0F), sashArray0, floatArray0, "OojQ-sZ%S]3?HGFq", true, true, true, bigDecimal0, bigDecimal0, "OojQ-sZ%S]3?HGFq");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup((List<HomePieceOfFurniture>) linkedList0, "OojQ-sZ%S]3?HGFq");
      assertEquals(1, linkedList0.size());
      
      homeFurnitureGroup0.setDepth((-931.58527F));
      assertEquals((-931.58527F), homeFurnitureGroup0.getDepth(), 0.01F);
  }

  @Test
  public void test9()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[6];
      float[][] floatArray0 = new float[26][10];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", (Content) null, (Content) null, (Content) null, (-1.0F), (float) 35, 965.70087F, 0.0F, true, (-1.0F), (-1.0F), sashArray0, floatArray0, "OojQ-sZ%S]3?HGFq", true, true, true, bigDecimal0, bigDecimal0, "OojQ-sZ%S]3?HGFq");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup((List<HomePieceOfFurniture>) linkedList0, "OojQ-sZ%S]3?HGFq");
      assertEquals(1, linkedList0.size());
      
      homeFurnitureGroup0.setHeight((float) 35);
      assertEquals(35.0F, homeFurnitureGroup0.getHeight(), 0.01F);
  }

  @Test
  public void test10()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[6];
      float[][] floatArray0 = new float[26][10];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", (Content) null, (Content) null, (Content) null, (-1.0F), (float) 35, 965.70087F, 0.0F, true, (-1.0F), (-1.0F), sashArray0, floatArray0, "OojQ-sZ%S]3?HGFq", true, true, true, bigDecimal0, bigDecimal0, "OojQ-sZ%S]3?HGFq");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup((List<HomePieceOfFurniture>) linkedList0, "OojQ-sZ%S]3?HGFq");
      assertEquals(1, linkedList0.size());
      
      homeFurnitureGroup0.setElevation((-931.58527F));
      assertEquals((-931.58527F), homeFurnitureGroup0.getElevation(), 0.01F);
  }

  @Test
  public void test11()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[6];
      float[][] floatArray0 = new float[26][10];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", (Content) null, (Content) null, (Content) null, (-1.0F), (float) 35, 965.70087F, 0.0F, true, (-1.0F), (-1.0F), sashArray0, floatArray0, "OojQ-sZ%S]3?HGFq", true, true, true, bigDecimal0, bigDecimal0, "OojQ-sZ%S]3?HGFq");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup((List<HomePieceOfFurniture>) linkedList0, "OojQ-sZ%S]3?HGFq");
      assertEquals(1, linkedList0.size());
      
      homeFurnitureGroup0.setModelMirrored(false);
      assertEquals(true, homeFurnitureGroup0.isVisible());
  }

  @Test
  public void test12()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[6];
      float[][] floatArray0 = new float[26][10];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", (Content) null, (Content) null, (Content) null, (-1.0F), (float) 35, 965.70087F, 0.0F, true, (-1.0F), (-1.0F), sashArray0, floatArray0, "OojQ-sZ%S]3?HGFq", true, true, true, bigDecimal0, bigDecimal0, "OojQ-sZ%S]3?HGFq");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup((List<HomePieceOfFurniture>) linkedList0, "OojQ-sZ%S]3?HGFq");
      assertEquals(1, linkedList0.size());
      
      linkedList0.push((HomePieceOfFurniture) homeFurnitureGroup0);
      // Undeclared exception!
      try {
        homeFurnitureGroup0.setModelMirrored(true);
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[6];
      float[][] floatArray0 = new float[26][10];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", (Content) null, (Content) null, (Content) null, (-1.0F), (float) 35, 965.70087F, 0.0F, true, (-1.0F), (-1.0F), sashArray0, floatArray0, "OojQ-sZ%S]3?HGFq", true, true, true, bigDecimal0, bigDecimal0, "OojQ-sZ%S]3?HGFq");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup((List<HomePieceOfFurniture>) linkedList0, "OojQ-sZ%S]3?HGFq");
      assertEquals(1, linkedList0.size());
      
      boolean boolean0 = homeFurnitureGroup0.intersectsRectangle(965.70087F, (float) 35, (-931.58527F), (-931.58527F));
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[6];
      float[][] floatArray0 = new float[26][10];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", (Content) null, (Content) null, (Content) null, (-1.0F), (float) 35, 965.70087F, 0.0F, true, (-1.0F), (-1.0F), sashArray0, floatArray0, "OojQ-sZ%S]3?HGFq", true, true, true, bigDecimal0, bigDecimal0, "OojQ-sZ%S]3?HGFq");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup((List<HomePieceOfFurniture>) linkedList0, "OojQ-sZ%S]3?HGFq");
      assertEquals(1, linkedList0.size());
      
      Sash[] sashArray1 = new Sash[5];
      CatalogDoorOrWindow catalogDoorOrWindow1 = new CatalogDoorOrWindow("OojQ-sZ%S]3?HGFq", (Content) null, (Content) null, 965.70087F, (float) 35, 0.0F, 965.70087F, true, (float) 35, 0.0F, sashArray1, (Integer) 35, floatArray0, true, (float) 35, true);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow1);
      linkedList0.offer((HomePieceOfFurniture) homeDoorOrWindow1);
      boolean boolean0 = homeFurnitureGroup0.intersectsRectangle(965.70087F, (float) 35, (-931.58527F), (-931.58527F));
      assertEquals(true, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[6];
      float[][] floatArray0 = new float[26][10];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", (Content) null, (Content) null, (Content) null, (-1.0F), (float) 35, 965.70087F, 0.0F, true, (-1.0F), (-1.0F), sashArray0, floatArray0, "OojQ-sZ%S]3?HGFq", true, true, true, bigDecimal0, bigDecimal0, "OojQ-sZ%S]3?HGFq");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup((List<HomePieceOfFurniture>) linkedList0, "OojQ-sZ%S]3?HGFq");
      assertEquals(1, linkedList0.size());
      
      boolean boolean0 = homeFurnitureGroup0.containsPoint(965.70087F, 965.70087F, 965.70087F);
      assertEquals(false, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[6];
      float[][] floatArray0 = new float[26][10];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", "OojQ-sZ%S]3?HGFq", (Content) null, (Content) null, (Content) null, (-1.0F), (float) 35, 965.70087F, 0.0F, true, (-1.0F), (-1.0F), sashArray0, floatArray0, "OojQ-sZ%S]3?HGFq", true, true, true, bigDecimal0, bigDecimal0, "OojQ-sZ%S]3?HGFq");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup((List<HomePieceOfFurniture>) linkedList0, "OojQ-sZ%S]3?HGFq");
      assertEquals(1, linkedList0.size());
      
      Sash[] sashArray1 = new Sash[5];
      CatalogDoorOrWindow catalogDoorOrWindow1 = new CatalogDoorOrWindow("OojQ-sZ%S]3?HGFq", (Content) null, (Content) null, 965.70087F, (float) 35, 0.0F, 965.70087F, true, (float) 35, 0.0F, sashArray1, (Integer) 35, floatArray0, true, (float) 35, true);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow1);
      linkedList0.offer((HomePieceOfFurniture) homeDoorOrWindow1);
      boolean boolean0 = homeFurnitureGroup0.containsPoint(965.70087F, 965.70087F, 965.70087F);
      assertEquals(true, boolean0);
  }
}
