/*
 * This file was automatically generated by EvoSuite
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.CatalogPieceOfFurniture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.FurnitureCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FurnitureCategoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("");
      furnitureCategory0.getIndexOfPieceOfFurniture((CatalogPieceOfFurniture) null);
      int int0 = furnitureCategory0.getIndexOfPieceOfFurniture((CatalogPieceOfFurniture) null);
      assertEquals((-1), int0);
  }

  @Test
  public void test1()  throws Throwable  {
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("Z");
      int int0 = furnitureCategory0.hashCode();
      assertEquals(90, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("Z");
      // Undeclared exception!
      try {
        furnitureCategory0.getPieceOfFurniture((-455));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("RL.A A))");
      String string0 = furnitureCategory0.getName();
      assertEquals("RL.A A))", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("t]6uG>~NW+J");
      Class<?> class0 = FurnitureCategory.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      float[][] floatArray0 = new float[3][3];
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("t]6uG>~NW+J", "", "t]6uG>~NW+J", (Content) resourceURLContent0, (Content) resourceURLContent0, (float) 0, (float) 0, (float) 0, (float) 0, true, floatArray0, "t]6uG>~NW+J", true, (BigDecimal) null, (BigDecimal) null);
      furnitureCategory0.add(catalogPieceOfFurniture0);
      assertEquals(1, furnitureCategory0.getFurnitureCount());
      
      furnitureCategory0.delete(catalogPieceOfFurniture0);
      assertEquals(0, furnitureCategory0.getFurnitureCount());
  }

  @Test
  public void test5()  throws Throwable  {
      FurnitureCategory furnitureCategory0 = new FurnitureCategory(":r.");
      int int0 = furnitureCategory0.getFurnitureCount();
      assertEquals(0, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("RL.A A))");
      List<CatalogPieceOfFurniture> list0 = furnitureCategory0.getFurniture();
      assertEquals(0, list0.size());
  }

  @Test
  public void test7()  throws Throwable  {
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("RL.A A))");
      int int0 = furnitureCategory0.compareTo(furnitureCategory0);
      assertEquals(0, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      FurnitureCategory furnitureCategory0 = new FurnitureCategory(":r.");
      Class<?> class0 = FurnitureCategory.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      float[][] floatArray0 = new float[3][3];
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture(":r.", "", ":r.", (Content) resourceURLContent0, (Content) resourceURLContent0, (float) 0, (float) 0, (float) 0, (float) 0, false, floatArray0, ":r.", false, (BigDecimal) null, (BigDecimal) null);
      // Undeclared exception!
      try {
        furnitureCategory0.delete(catalogPieceOfFurniture0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * :r. doesn't contain piece 
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      FurnitureCategory furnitureCategory0 = new FurnitureCategory((String) null);
      BigInteger bigInteger0 = BigInteger.TEN;
      boolean boolean0 = furnitureCategory0.equals((Object) bigInteger0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("");
      boolean boolean0 = furnitureCategory0.equals((Object) furnitureCategory0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("");
      FurnitureCategory furnitureCategory1 = new FurnitureCategory("4ngT");
      boolean boolean0 = furnitureCategory0.equals((Object) furnitureCategory1);
      assertEquals(false, boolean0);
  }
}
