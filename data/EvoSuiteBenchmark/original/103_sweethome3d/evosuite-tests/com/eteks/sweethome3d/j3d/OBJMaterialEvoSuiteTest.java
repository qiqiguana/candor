/*
 * This file was automatically generated by EvoSuite
 */

package com.eteks.sweethome3d.j3d;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.j3d.OBJMaterial;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class OBJMaterialEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      OBJMaterial oBJMaterial0 = new OBJMaterial();
      oBJMaterial0.setSharpness(0.0F);
      boolean boolean0 = oBJMaterial0.isSharpnessSet();
      assertEquals(true, oBJMaterial0.isSharpnessSet());
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      OBJMaterial oBJMaterial0 = new OBJMaterial();
      OBJMaterial oBJMaterial1 = (OBJMaterial)oBJMaterial0.cloneNodeComponent(false);
      assertNotSame(oBJMaterial0, oBJMaterial1);
  }

  @Test
  public void test2()  throws Throwable  {
      OBJMaterial oBJMaterial0 = new OBJMaterial();
      // Undeclared exception!
      try {
        oBJMaterial0.getOpticalDensity();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Optical density not set
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      OBJMaterial oBJMaterial0 = new OBJMaterial();
      oBJMaterial0.setOpticalDensity(1011.2973F);
      float float0 = oBJMaterial0.getOpticalDensity();
      assertEquals(true, oBJMaterial0.isOpticalDensitySet());
      assertEquals(1011.2973F, float0, 0.01F);
  }

  @Test
  public void test4()  throws Throwable  {
      OBJMaterial oBJMaterial0 = new OBJMaterial();
      boolean boolean0 = oBJMaterial0.isOpticalDensitySet();
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      OBJMaterial oBJMaterial0 = new OBJMaterial();
      oBJMaterial0.setOpticalDensity(0.0F);
      boolean boolean0 = oBJMaterial0.isOpticalDensitySet();
      assertEquals(true, oBJMaterial0.isOpticalDensitySet());
      assertEquals(true, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      OBJMaterial oBJMaterial0 = new OBJMaterial();
      // Undeclared exception!
      try {
        oBJMaterial0.getIlluminationModel();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Optical density not set
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      OBJMaterial oBJMaterial0 = new OBJMaterial();
      oBJMaterial0.setIlluminationModel(94025);
      int int0 = oBJMaterial0.getIlluminationModel();
      assertEquals(true, oBJMaterial0.isIlluminationModelSet());
      assertEquals(94025, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      OBJMaterial oBJMaterial0 = new OBJMaterial();
      boolean boolean0 = oBJMaterial0.isIlluminationModelSet();
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      OBJMaterial oBJMaterial0 = new OBJMaterial();
      oBJMaterial0.setIlluminationModel(94025);
      boolean boolean0 = oBJMaterial0.isIlluminationModelSet();
      assertEquals(true, oBJMaterial0.isIlluminationModelSet());
      assertEquals(true, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      OBJMaterial oBJMaterial0 = new OBJMaterial();
      // Undeclared exception!
      try {
        oBJMaterial0.getSharpness();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Sharpness not set
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      OBJMaterial oBJMaterial0 = new OBJMaterial();
      oBJMaterial0.setSharpness((float) (-1364));
      float float0 = oBJMaterial0.getSharpness();
      assertEquals(true, oBJMaterial0.isSharpnessSet());
      assertEquals((-1364.0F), float0, 0.01F);
  }

  @Test
  public void test12()  throws Throwable  {
      OBJMaterial oBJMaterial0 = new OBJMaterial();
      boolean boolean0 = oBJMaterial0.isSharpnessSet();
      assertEquals(false, boolean0);
  }
}
