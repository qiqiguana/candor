/*
 * This file was automatically generated by EvoSuite
 */

package com.eteks.sweethome3d.swing;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.Home;
import com.eteks.sweethome3d.swing.FurnitureTransferHandler;
import com.eteks.sweethome3d.viewcontroller.ContentManager;
import com.eteks.sweethome3d.viewcontroller.HomeController;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.io.File;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JToolTip;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LocatedTransferHandlerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Home home0 = new Home();
      FurnitureTransferHandler furnitureTransferHandler0 = new FurnitureTransferHandler(home0, (ContentManager) null, (HomeController) null);
      furnitureTransferHandler0.dragEntered((JComponent) null, (Transferable) null, 566);
      assertEquals(false, furnitureTransferHandler0.isDrop());
  }

  @Test
  public void test1()  throws Throwable  {
      Home home0 = new Home();
      FurnitureTransferHandler furnitureTransferHandler0 = new FurnitureTransferHandler(home0, (ContentManager) null, (HomeController) null);
      Object[] objectArray0 = new Object[6];
      JComboBox jComboBox0 = new JComboBox(objectArray0);
      JToolTip jToolTip0 = jComboBox0.createToolTip();
      furnitureTransferHandler0.dragExited((JComponent) jToolTip0);
      assertEquals(false, jToolTip0.isMaximumSizeSet());
  }

  @Test
  public void test2()  throws Throwable  {
      FurnitureTransferHandler furnitureTransferHandler0 = new FurnitureTransferHandler((Home) null, (ContentManager) null, (HomeController) null);
      DataFlavor[] dataFlavorArray0 = new DataFlavor[3];
      DataFlavor dataFlavor0 = DataFlavor.javaFileListFlavor;
      dataFlavorArray0[0] = dataFlavor0;
      boolean boolean0 = furnitureTransferHandler0.canImport((JComponent) null, dataFlavorArray0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      FurnitureTransferHandler furnitureTransferHandler0 = new FurnitureTransferHandler((Home) null, (ContentManager) null, (HomeController) null);
      // Undeclared exception!
      try {
        furnitureTransferHandler0.getDropLocation();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Operation isn't a drag and drop
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Home home0 = new Home();
      FurnitureTransferHandler furnitureTransferHandler0 = new FurnitureTransferHandler(home0, (ContentManager) null, (HomeController) null);
      boolean boolean0 = furnitureTransferHandler0.isDrop();
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      Home home0 = new Home();
      FurnitureTransferHandler furnitureTransferHandler0 = new FurnitureTransferHandler(home0, (ContentManager) null, (HomeController) null);
      LinkedList<File> linkedList0 = new LinkedList<File>();
      List<String> list0 = furnitureTransferHandler0.getModelContents((List<File>) linkedList0, (ContentManager) null);
      assertEquals(0, list0.size());
  }
}
