/*
 * This file was automatically generated by EvoSuite
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.Label;
import com.eteks.sweethome3d.model.Level;
import com.eteks.sweethome3d.model.TextStyle;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LabelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Label label0 = new Label("+~|", 32.711945F, 32.711945F);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("+~|", (PropertyChangeListener) null);
      label0.removePropertyChangeListener((PropertyChangeListener) propertyChangeListenerProxy0);
      assertEquals(32.711945F, label0.getX(), 0.01F);
      assertEquals(32.711945F, label0.getY(), 0.01F);
  }

  @Test
  public void test1()  throws Throwable  {
      Label label0 = new Label((String) null, 18.413935F, 18.413935F);
      label0.intersectsRectangle(18.413935F, 18.413935F, 18.413935F, 18.413935F);
      assertEquals(18.413935F, label0.getX(), 0.01F);
      assertEquals(18.413935F, label0.getY(), 0.01F);
  }

  @Test
  public void test2()  throws Throwable  {
      Label label0 = new Label((String) null, 18.413935F, 18.413935F);
      label0.addPropertyChangeListener((PropertyChangeListener) null);
      assertEquals(18.413935F, label0.getY(), 0.01F);
      assertEquals(18.413935F, label0.getX(), 0.01F);
  }

  @Test
  public void test3()  throws Throwable  {
      Label label0 = new Label("", (-91.579124F), (-91.579124F));
      float float0 = label0.getAngle();
      assertEquals((-91.579124F), label0.getX(), 0.01F);
      assertEquals((-91.579124F), label0.getY(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test
  public void test4()  throws Throwable  {
      Label label0 = new Label("+~|", 32.711945F, 32.711945F);
      label0.move(32.711945F, 32.711945F);
      assertEquals(65.42389F, label0.getX(), 0.01F);
      assertEquals(65.42389F, label0.getY(), 0.01F);
  }

  @Test
  public void test5()  throws Throwable  {
      Label label0 = new Label((String) null, 18.413935F, 18.413935F);
      label0.getLevel();
      assertEquals(18.413935F, label0.getX(), 0.01F);
      assertEquals(18.413935F, label0.getY(), 0.01F);
  }

  @Test
  public void test6()  throws Throwable  {
      Label label0 = new Label("p", (-19.267645F), (-19.267645F));
      float[][] floatArray0 = label0.getPoints();
      assertEquals((-19.267645F), label0.getY(), 0.01F);
      assertEquals((-19.267645F), label0.getX(), 0.01F);
      assertNotNull(floatArray0);
  }

  @Test
  public void test7()  throws Throwable  {
      Label label0 = new Label((String) null, 18.413935F, 18.413935F);
      label0.getText();
      assertEquals(18.413935F, label0.getY(), 0.01F);
      assertEquals(18.413935F, label0.getX(), 0.01F);
  }

  @Test
  public void test8()  throws Throwable  {
      Label label0 = new Label("p", (-19.267645F), (-19.267645F));
      label0.getStyle();
      assertEquals((-19.267645F), label0.getX(), 0.01F);
      assertEquals((-19.267645F), label0.getY(), 0.01F);
  }

  @Test
  public void test9()  throws Throwable  {
      Label label0 = new Label("", (-91.579124F), (-91.579124F));
      Label label1 = label0.clone();
      assertEquals((-91.579124F), label0.getX(), 0.01F);
      assertNotSame(label0, label1);
      assertEquals((-91.579124F), label0.getY(), 0.01F);
  }

  @Test
  public void test10()  throws Throwable  {
      Label label0 = new Label("", (-91.579124F), (-91.579124F));
      label0.setText("~f_!zjjqzr");
      assertEquals("~f_!zjjqzr", label0.getText());
      assertEquals((-91.579124F), label0.getX(), 0.01F);
  }

  @Test
  public void test11()  throws Throwable  {
      Label label0 = new Label((String) null, 18.413935F, 18.413935F);
      label0.setText((String) null);
      assertEquals(18.413935F, label0.getY(), 0.01F);
      assertEquals(18.413935F, label0.getX(), 0.01F);
  }

  @Test
  public void test12()  throws Throwable  {
      Label label0 = new Label("", (-373.43896F), (-373.43896F));
      assertEquals((-373.43896F), label0.getX(), 0.01F);
      
      label0.setX((-373.43896F));
      assertEquals((-373.43896F), label0.getY(), 0.01F);
  }

  @Test
  public void test13()  throws Throwable  {
      Label label0 = new Label((String) null, 18.413935F, 18.413935F);
      assertEquals(18.413935F, label0.getY(), 0.01F);
      
      label0.setY(18.413935F);
      assertEquals(18.413935F, label0.getX(), 0.01F);
  }

  @Test
  public void test14()  throws Throwable  {
      Label label0 = new Label("NN|#D%:Y$_", (-621.9493F), (-621.9493F));
      TextStyle textStyle0 = new TextStyle((-621.9493F));
      label0.setStyle(textStyle0);
      label0.setStyle(textStyle0);
      assertEquals((-621.9493F), label0.getX(), 0.01F);
      assertEquals((-621.9493F), label0.getY(), 0.01F);
  }

  @Test
  public void test15()  throws Throwable  {
      Label label0 = new Label("kCY", 0.0F, 0.0F);
      label0.setAngle(0.0F);
      assertEquals(0.0F, label0.getAngle(), 0.01F);
      assertEquals(0.0F, label0.getY(), 0.01F);
      assertEquals(0.0F, label0.getX(), 0.01F);
  }

  @Test
  public void test16()  throws Throwable  {
      Label label0 = new Label("", (-91.579124F), (-91.579124F));
      label0.setAngle((-91.579124F));
      assertEquals(2.6686552F, label0.getAngle(), 0.01F);
  }

  @Test
  public void test17()  throws Throwable  {
      Label label0 = new Label((String) null, 18.413935F, 18.413935F);
      label0.setLevel((Level) null);
      assertEquals(18.413935F, label0.getX(), 0.01F);
      assertEquals(18.413935F, label0.getY(), 0.01F);
  }

  @Test
  public void test18()  throws Throwable  {
      Label label0 = new Label("kCY", 0.0F, 0.0F);
      Level level0 = new Level("kCY", 1148.2119F, 0.0F, 1148.2119F);
      label0.setLevel(level0);
      assertEquals(0.0F, label0.getY(), 0.01F);
      assertEquals(0.0F, label0.getX(), 0.01F);
  }

  @Test
  public void test19()  throws Throwable  {
      Label label0 = new Label("NN|#D%:Y$_", (-621.9493F), (-621.9493F));
      Level level0 = new Level("NN|#D%:Y$_", (-621.9493F), (-621.9493F), (-621.9493F));
      boolean boolean0 = label0.isAtLevel(level0);
      assertEquals(false, boolean0);
      assertEquals((-621.9493F), label0.getX(), 0.01F);
      assertEquals((-621.9493F), label0.getY(), 0.01F);
  }

  @Test
  public void test20()  throws Throwable  {
      Label label0 = new Label((String) null, 18.413935F, 18.413935F);
      boolean boolean0 = label0.isAtLevel((Level) null);
      assertEquals(18.413935F, label0.getY(), 0.01F);
      assertEquals(18.413935F, label0.getX(), 0.01F);
      assertEquals(true, boolean0);
  }

  @Test
  public void test21()  throws Throwable  {
      Label label0 = new Label("", (-91.579124F), (-91.579124F));
      boolean boolean0 = label0.containsPoint((-91.579124F), (-91.579124F), (-91.579124F));
      assertEquals((-91.579124F), label0.getY(), 0.01F);
      assertEquals((-91.579124F), label0.getX(), 0.01F);
      assertEquals(false, boolean0);
  }

  @Test
  public void test22()  throws Throwable  {
      Label label0 = new Label("kCY", 0.0F, 0.0F);
      boolean boolean0 = label0.containsPoint(0.0F, 1148.2119F, 0.0F);
      assertEquals(0.0F, label0.getY(), 0.01F);
      assertEquals(0.0F, label0.getX(), 0.01F);
      assertEquals(false, boolean0);
  }

  @Test
  public void test23()  throws Throwable  {
      Label label0 = new Label((String) null, 18.413935F, 18.413935F);
      boolean boolean0 = label0.containsPoint(18.413935F, 18.413935F, 18.413935F);
      assertEquals(true, boolean0);
  }
}
