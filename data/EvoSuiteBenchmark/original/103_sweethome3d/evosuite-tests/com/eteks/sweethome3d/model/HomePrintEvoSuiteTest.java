/*
 * This file was automatically generated by EvoSuite
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.HomePrint;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class HomePrintEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.LANDSCAPE;
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, (-1.0F), 0.0F, 0.0F, 0.0F, (-1.0F), (-1.0F), false, false, false, (Float) 0.0F, "", "");
      float float0 = homePrint0.getPaperTopMargin();
      assertEquals(0.0F, homePrint0.getPaperLeftMargin(), 0.01F);
      assertEquals(false, homePrint0.isFurniturePrinted());
      assertEquals((-1.0F), homePrint0.getPaperBottomMargin(), 0.01F);
      assertEquals(false, homePrint0.isView3DPrinted());
      assertEquals((-1.0F), homePrint0.getPaperRightMargin(), 0.01F);
      assertEquals((-1.0F), homePrint0.getPaperWidth(), 0.01F);
      assertEquals(false, homePrint0.isPlanPrinted());
      assertEquals(0.0F, homePrint0.getPaperHeight(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test
  public void test1()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.LANDSCAPE;
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, 0.0F, (-1.0F), 0.0F, 0.0F, 0.0F, 0.0F, true, true, true, (Float) 0.0F, "REVERSE_LANDSCAPE", "REVERSE_LANDSCAPE");
      homePrint0.getPlanScale();
      assertEquals(0.0F, homePrint0.getPaperTopMargin(), 0.01F);
      assertEquals(true, homePrint0.isFurniturePrinted());
      assertEquals(0.0F, homePrint0.getPaperLeftMargin(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperBottomMargin(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperWidth(), 0.01F);
      assertEquals(true, homePrint0.isView3DPrinted());
      assertEquals(0.0F, homePrint0.getPaperRightMargin(), 0.01F);
      assertEquals(true, homePrint0.isPlanPrinted());
      assertEquals((-1.0F), homePrint0.getPaperHeight(), 0.01F);
  }

  @Test
  public void test2()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.REVERSE_LANDSCAPE;
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, 0.0F, 1583.1896F, 1583.1896F, 1583.1896F, (-1621.2007F), (-1.0F), false, true, true, (Float) (-1621.2007F), "l'?TMe$8l?JVgOY,2|", "l'?TMe$8l?JVgOY,2|");
      String string0 = homePrint0.getHeaderFormat();
      assertEquals(1583.1896F, homePrint0.getPaperHeight(), 0.01F);
      assertNotNull(string0);
      assertEquals(true, homePrint0.isPlanPrinted());
      assertEquals(1583.1896F, homePrint0.getPaperTopMargin(), 0.01F);
      assertEquals(1583.1896F, homePrint0.getPaperLeftMargin(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperWidth(), 0.01F);
      assertEquals((-1.0F), homePrint0.getPaperRightMargin(), 0.01F);
      assertEquals((-1621.2007F), homePrint0.getPaperBottomMargin(), 0.01F);
      assertEquals(false, homePrint0.isFurniturePrinted());
      assertEquals(true, homePrint0.isView3DPrinted());
  }

  @Test
  public void test3()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.PORTRAIT;
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, 1061.4519F, 0.0F, 0.0F, 0.0F, (-1.0F), (-1.0F), false, false, false, (Float) (-1.0F), "PORTRAIT", "PORTRAIT");
      float float0 = homePrint0.getPaperBottomMargin();
      assertEquals(0.0F, homePrint0.getPaperHeight(), 0.01F);
      assertEquals((-1.0F), float0, 0.01F);
      assertEquals(0.0F, homePrint0.getPaperTopMargin(), 0.01F);
      assertEquals(false, homePrint0.isFurniturePrinted());
      assertEquals((-1.0F), homePrint0.getPaperRightMargin(), 0.01F);
      assertEquals(false, homePrint0.isPlanPrinted());
      assertEquals(false, homePrint0.isView3DPrinted());
      assertEquals(0.0F, homePrint0.getPaperLeftMargin(), 0.01F);
      assertEquals(1061.4519F, homePrint0.getPaperWidth(), 0.01F);
  }

  @Test
  public void test4()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.LANDSCAPE;
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, 0.0F, 0.0F, 0.0F, (-1930.7114F), 0.0F, 0.0F, true, true, true, (Float) 0.0F, (String) null, "");
      boolean boolean0 = homePrint0.isFurniturePrinted();
      assertEquals(true, homePrint0.isView3DPrinted());
      assertEquals(true, homePrint0.isPlanPrinted());
      assertEquals(0.0F, homePrint0.getPaperWidth(), 0.01F);
      assertEquals(true, boolean0);
      assertEquals(0.0F, homePrint0.getPaperHeight(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperBottomMargin(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperTopMargin(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperRightMargin(), 0.01F);
      assertEquals((-1930.7114F), homePrint0.getPaperLeftMargin(), 0.01F);
  }

  @Test
  public void test5()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.LANDSCAPE;
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, (-1960.1216F), (-1.0F), 0.0F, (-1.0F), 0.0F, (-1.0F), true, true, false, (Float) 0.0F, "REVERSE_LANDSCAPE", "REVERSE_LANDSCAPE");
      float float0 = homePrint0.getPaperLeftMargin();
      assertEquals((-1.0F), homePrint0.getPaperHeight(), 0.01F);
      assertEquals((-1960.1216F), homePrint0.getPaperWidth(), 0.01F);
      assertEquals(false, homePrint0.isView3DPrinted());
      assertEquals(0.0F, homePrint0.getPaperTopMargin(), 0.01F);
      assertEquals(true, homePrint0.isPlanPrinted());
      assertEquals((-1.0F), homePrint0.getPaperRightMargin(), 0.01F);
      assertEquals(true, homePrint0.isFurniturePrinted());
      assertEquals(0.0F, homePrint0.getPaperBottomMargin(), 0.01F);
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test
  public void test6()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.LANDSCAPE;
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, (-971.35223F), 763.37115F, 0.0F, (-971.35223F), (-1244.6481F), (-1126.3828F), false, true, true, (Float) (-1126.3828F), "PORTRAIT", "PORTRAIT");
      float float0 = homePrint0.getPaperHeight();
      assertEquals(0.0F, homePrint0.getPaperTopMargin(), 0.01F);
      assertEquals(true, homePrint0.isView3DPrinted());
      assertEquals(763.37115F, float0, 0.01F);
      assertEquals(true, homePrint0.isPlanPrinted());
      assertEquals((-1244.6481F), homePrint0.getPaperBottomMargin(), 0.01F);
      assertEquals(false, homePrint0.isFurniturePrinted());
      assertEquals((-1126.3828F), homePrint0.getPaperRightMargin(), 0.01F);
      assertEquals((-971.35223F), homePrint0.getPaperWidth(), 0.01F);
      assertEquals((-971.35223F), homePrint0.getPaperLeftMargin(), 0.01F);
  }

  @Test
  public void test7()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.LANDSCAPE;
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, 0.0F, (-1.0F), 0.0F, 0.0F, 0.0F, 0.0F, true, true, true, (Float) 0.0F, "REVERSE_LANDSCAPE", "REVERSE_LANDSCAPE");
      boolean boolean0 = homePrint0.isPlanPrinted();
      assertEquals(0.0F, homePrint0.getPaperRightMargin(), 0.01F);
      assertEquals(true, homePrint0.isFurniturePrinted());
      assertEquals(0.0F, homePrint0.getPaperLeftMargin(), 0.01F);
      assertEquals((-1.0F), homePrint0.getPaperHeight(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperTopMargin(), 0.01F);
      assertEquals(true, homePrint0.isView3DPrinted());
      assertEquals(true, boolean0);
      assertEquals(0.0F, homePrint0.getPaperBottomMargin(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperWidth(), 0.01F);
  }

  @Test
  public void test8()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.LANDSCAPE;
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, (-1.0F), 0.0F, 0.0F, 0.0F, (-1.0F), (-1.0F), false, false, false, (Float) 0.0F, "", "");
      boolean boolean0 = homePrint0.isView3DPrinted();
      assertEquals(false, homePrint0.isFurniturePrinted());
      assertEquals(false, boolean0);
      assertEquals((-1.0F), homePrint0.getPaperWidth(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperHeight(), 0.01F);
      assertEquals((-1.0F), homePrint0.getPaperRightMargin(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperTopMargin(), 0.01F);
      assertEquals(false, homePrint0.isPlanPrinted());
      assertEquals(0.0F, homePrint0.getPaperLeftMargin(), 0.01F);
      assertEquals((-1.0F), homePrint0.getPaperBottomMargin(), 0.01F);
  }

  @Test
  public void test9()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.LANDSCAPE;
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, (-1960.1216F), (-1.0F), 0.0F, (-1.0F), 0.0F, (-1.0F), true, true, false, (Float) 0.0F, "REVERSE_LANDSCAPE", "REVERSE_LANDSCAPE");
      homePrint0.getPaperOrientation();
      assertEquals((-1.0F), homePrint0.getPaperRightMargin(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperTopMargin(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperBottomMargin(), 0.01F);
      assertEquals(true, homePrint0.isPlanPrinted());
      assertEquals(true, homePrint0.isFurniturePrinted());
      assertEquals(false, homePrint0.isView3DPrinted());
      assertEquals((-1.0F), homePrint0.getPaperHeight(), 0.01F);
      assertEquals((-1960.1216F), homePrint0.getPaperWidth(), 0.01F);
      assertEquals((-1.0F), homePrint0.getPaperLeftMargin(), 0.01F);
  }

  @Test
  public void test10()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.REVERSE_LANDSCAPE;
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, 0.0F, 1583.1896F, 1583.1896F, 1583.1896F, (-1621.2007F), (-1.0F), false, true, true, (Float) (-1621.2007F), "l'?TMe$8l?JVgOY,2|", "l'?TMe$8l?JVgOY,2|");
      float float0 = homePrint0.getPaperRightMargin();
      assertEquals(false, homePrint0.isFurniturePrinted());
      assertEquals(1583.1896F, homePrint0.getPaperTopMargin(), 0.01F);
      assertEquals((-1621.2007F), homePrint0.getPaperBottomMargin(), 0.01F);
      assertEquals(true, homePrint0.isView3DPrinted());
      assertEquals(true, homePrint0.isPlanPrinted());
      assertEquals(0.0F, homePrint0.getPaperWidth(), 0.01F);
      assertEquals((-1.0F), float0, 0.01F);
      assertEquals(1583.1896F, homePrint0.getPaperHeight(), 0.01F);
      assertEquals(1583.1896F, homePrint0.getPaperLeftMargin(), 0.01F);
  }

  @Test
  public void test11()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.LANDSCAPE;
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, (-971.35223F), 763.37115F, 0.0F, (-971.35223F), (-1244.6481F), (-1126.3828F), false, true, true, (Float) (-1126.3828F), "PORTRAIT", "PORTRAIT");
      String string0 = homePrint0.getFooterFormat();
      assertNotNull(string0);
      assertEquals(false, homePrint0.isFurniturePrinted());
      assertEquals(true, homePrint0.isView3DPrinted());
      assertEquals(763.37115F, homePrint0.getPaperHeight(), 0.01F);
      assertEquals(true, homePrint0.isPlanPrinted());
      assertEquals(0.0F, homePrint0.getPaperTopMargin(), 0.01F);
      assertEquals((-971.35223F), homePrint0.getPaperLeftMargin(), 0.01F);
      assertEquals((-1244.6481F), homePrint0.getPaperBottomMargin(), 0.01F);
      assertEquals((-971.35223F), homePrint0.getPaperWidth(), 0.01F);
      assertEquals((-1126.3828F), homePrint0.getPaperRightMargin(), 0.01F);
  }

  @Test
  public void test12()  throws Throwable  {
      HomePrint.PaperOrientation homePrint_PaperOrientation0 = HomePrint.PaperOrientation.LANDSCAPE;
      HomePrint homePrint0 = new HomePrint(homePrint_PaperOrientation0, 0.0F, 0.0F, 0.0F, (-1930.7114F), 0.0F, 0.0F, true, true, true, (Float) 0.0F, (String) null, "");
      float float0 = homePrint0.getPaperWidth();
      assertEquals(0.0F, homePrint0.getPaperBottomMargin(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperRightMargin(), 0.01F);
      assertEquals(true, homePrint0.isView3DPrinted());
      assertEquals(0.0F, homePrint0.getPaperHeight(), 0.01F);
      assertEquals(0.0F, homePrint0.getPaperTopMargin(), 0.01F);
      assertEquals(true, homePrint0.isFurniturePrinted());
      assertEquals(true, homePrint0.isPlanPrinted());
      assertEquals((-1930.7114F), homePrint0.getPaperLeftMargin(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }
}
