/*
 * This file was automatically generated by EvoSuite
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.LightSource;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LightSourceEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LightSource lightSource0 = new LightSource(1.0F, (-1030.8164F), (-1030.8164F), (-1));
      float float0 = lightSource0.getZ();
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals((-1030.8164F), float0, 0.01F);
      assertEquals((-1030.8164F), lightSource0.getY(), 0.01F);
      assertEquals(-1, lightSource0.getColor());
  }

  @Test
  public void test1()  throws Throwable  {
      LightSource lightSource0 = new LightSource((-644.83105F), 0.0F, 0.0F, 0, (Float) 0.0F);
      lightSource0.getDiameter();
      assertEquals(0.0F, lightSource0.getY(), 0.01F);
      assertEquals(0, lightSource0.getColor());
      assertEquals((-644.83105F), lightSource0.getX(), 0.01F);
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
  }

  @Test
  public void test2()  throws Throwable  {
      LightSource lightSource0 = new LightSource((-644.83105F), 0.0F, 0.0F, 0, (Float) 0.0F);
      float float0 = lightSource0.getY();
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals(0, lightSource0.getColor());
      assertEquals((-644.83105F), lightSource0.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test
  public void test3()  throws Throwable  {
      LightSource lightSource0 = new LightSource(1.0F, (-1030.8164F), (-1030.8164F), (-1));
      int int0 = lightSource0.getColor();
      assertEquals((-1), int0);
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals((-1030.8164F), lightSource0.getY(), 0.01F);
      assertEquals((-1030.8164F), lightSource0.getZ(), 0.01F);
  }

  @Test
  public void test4()  throws Throwable  {
      LightSource lightSource0 = new LightSource((-644.83105F), 0.0F, 0.0F, 0, (Float) 0.0F);
      float float0 = lightSource0.getX();
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals(0.0F, lightSource0.getY(), 0.01F);
      assertEquals(0, lightSource0.getColor());
      assertEquals((-644.83105F), float0, 0.01F);
  }
}
