/*
 * This file was automatically generated by EvoSuite
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.PatternsCatalog;
import com.eteks.sweethome3d.model.TextureImage;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PatternsCatalogEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LinkedList<TextureImage> linkedList0 = new LinkedList<TextureImage>();
      PatternsCatalog patternsCatalog0 = new PatternsCatalog((List<TextureImage>) linkedList0);
      List<TextureImage> list0 = patternsCatalog0.getPatterns();
      assertEquals(0, list0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      LinkedList<TextureImage> linkedList0 = new LinkedList<TextureImage>();
      PatternsCatalog patternsCatalog0 = new PatternsCatalog((List<TextureImage>) linkedList0);
      // Undeclared exception!
      try {
        patternsCatalog0.getPattern(1101);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 1101, Size: 0
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      LinkedList<TextureImage> linkedList0 = new LinkedList<TextureImage>();
      PatternsCatalog patternsCatalog0 = new PatternsCatalog((List<TextureImage>) linkedList0);
      int int0 = patternsCatalog0.getPatternsCount();
      assertEquals(0, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      LinkedList<TextureImage> linkedList0 = new LinkedList<TextureImage>();
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) null, 0.0F, 1.0F, "", false);
      linkedList0.addLast((TextureImage) catalogTexture0);
      PatternsCatalog patternsCatalog0 = new PatternsCatalog((List<TextureImage>) linkedList0);
      CatalogTexture catalogTexture1 = (CatalogTexture)patternsCatalog0.getPattern("");
      assertEquals("", catalogTexture1.getCreator());
  }

  @Test
  public void test4()  throws Throwable  {
      LinkedList<TextureImage> linkedList0 = new LinkedList<TextureImage>();
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) null, 0.0F, 1.0F, "", false);
      linkedList0.addLast((TextureImage) catalogTexture0);
      PatternsCatalog patternsCatalog0 = new PatternsCatalog((List<TextureImage>) linkedList0);
      // Undeclared exception!
      try {
        patternsCatalog0.getPattern("saNS");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * No pattern with name saNS
         */
      }
  }
}
