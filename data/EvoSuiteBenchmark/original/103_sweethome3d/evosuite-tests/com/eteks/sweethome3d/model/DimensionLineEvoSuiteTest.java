/*
 * This file was automatically generated by EvoSuite
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.DimensionLine;
import com.eteks.sweethome3d.model.Level;
import com.eteks.sweethome3d.model.TextStyle;
import java.beans.PropertyChangeListener;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DimensionLineEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine((-90.131836F), (-90.131836F), (-90.131836F), (-90.131836F), (-90.131836F));
      dimensionLine0.containsPoint((-90.131836F), (-90.131836F), (-90.131836F));
      dimensionLine0.intersectsRectangle((-90.131836F), (-90.131836F), (-90.131836F), (-90.131836F));
      assertEquals((-90.131836F), dimensionLine0.getOffset(), 0.01F);
  }

  @Test
  public void test1()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(434.0667F, 434.0667F, 434.0667F, 434.0667F, 434.0667F);
      float[][] floatArray0 = dimensionLine0.getPoints();
      assertNotNull(floatArray0);
      assertEquals(0.0F, dimensionLine0.getLength(), 0.01F);
  }

  @Test
  public void test2()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(434.0667F, 434.0667F, 434.0667F, 434.0667F, 434.0667F);
      float float0 = dimensionLine0.getLength();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(434.0667F, dimensionLine0.getOffset(), 0.01F);
  }

  @Test
  public void test3()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(2037.7526F, 2037.7526F, 2037.7526F, 2037.7526F, 2037.7526F);
      DimensionLine dimensionLine1 = dimensionLine0.clone();
      assertNotSame(dimensionLine1, dimensionLine0);
      assertEquals(2037.7526F, dimensionLine1.getOffset(), 0.01F);
      assertEquals(0.0F, dimensionLine1.getLength(), 0.01F);
  }

  @Test
  public void test4()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(1696.5039F, 1696.5039F, 1696.5039F, 1696.5039F, 1696.5039F);
      dimensionLine0.getLengthStyle();
      assertEquals(1696.5039F, dimensionLine0.getOffset(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getLength(), 0.01F);
      assertEquals(1696.5039F, dimensionLine0.getYStart(), 0.01F);
  }

  @Test
  public void test5()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      dimensionLine0.addPropertyChangeListener((PropertyChangeListener) null);
      assertEquals(0.0F, dimensionLine0.getXEnd(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getYStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getXStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getOffset(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getYEnd(), 0.01F);
  }

  @Test
  public void test6()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      dimensionLine0.getLevel();
      assertEquals(0.0F, dimensionLine0.getXStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getYStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getXEnd(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getOffset(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getYEnd(), 0.01F);
  }

  @Test
  public void test7()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      dimensionLine0.containsStartExtensionLinetAt(0.0F, 0.0F, 0.0F);
      assertEquals(0.0F, dimensionLine0.getYStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getOffset(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getXStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getYEnd(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getXEnd(), 0.01F);
  }

  @Test
  public void test8()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine((-90.131836F), (-90.131836F), (-90.131836F), (-90.131836F), (-90.131836F));
      dimensionLine0.intersectsRectangle((-90.131836F), (-90.131836F), (-90.131836F), (-90.131836F));
      assertEquals(0.0F, dimensionLine0.getLength(), 0.01F);
      assertEquals((-90.131836F), dimensionLine0.getOffset(), 0.01F);
  }

  @Test
  public void test9()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      float float0 = dimensionLine0.getOffset();
      assertEquals(0.0F, dimensionLine0.getYStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getXEnd(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getYEnd(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0.0F, dimensionLine0.getXStart(), 0.01F);
  }

  @Test
  public void test10()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      dimensionLine0.move(0.0F, 0.0F);
      assertEquals(0.0F, dimensionLine0.getOffset(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getYStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getXStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getXEnd(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getYEnd(), 0.01F);
  }

  @Test
  public void test11()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(1696.5039F, 1696.5039F, 1696.5039F, 1696.5039F, 1696.5039F);
      boolean boolean0 = dimensionLine0.containsEndExtensionLineAt(1696.5039F, 13.643339F, 1696.5039F);
      assertEquals(true, boolean0);
      assertEquals(1696.5039F, dimensionLine0.getXStart(), 0.01F);
  }

  @Test
  public void test12()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      dimensionLine0.removePropertyChangeListener((PropertyChangeListener) null);
      assertEquals(0.0F, dimensionLine0.getXEnd(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getXStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getYStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getOffset(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getYEnd(), 0.01F);
  }

  @Test
  public void test13()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(1696.5039F, 1696.5039F, 1696.5039F, 1696.5039F, 1696.5039F);
      dimensionLine0.move(13.643339F, 13.643339F);
      assertEquals(1710.1472F, dimensionLine0.getYEnd(), 0.01F);
      assertEquals(1710.1472F, dimensionLine0.getXStart(), 0.01F);
  }

  @Test
  public void test14()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(434.0667F, 434.0667F, 434.0667F, 434.0667F, 434.0667F);
      assertEquals(434.0667F, dimensionLine0.getOffset(), 0.01F);
      
      dimensionLine0.setOffset(434.0667F);
      assertEquals(0.0F, dimensionLine0.getLength(), 0.01F);
      assertEquals(434.0667F, dimensionLine0.getXEnd(), 0.01F);
  }

  @Test
  public void test15()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(1696.5039F, 1696.5039F, 1696.5039F, 1696.5039F, 1696.5039F);
      dimensionLine0.setOffset(13.643339F);
      assertEquals(13.643339F, dimensionLine0.getOffset(), 0.01F);
  }

  @Test
  public void test16()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(1696.5039F, 1696.5039F, 1696.5039F, 1696.5039F, 1696.5039F);
      dimensionLine0.setLengthStyle((TextStyle) null);
      assertEquals(1696.5039F, dimensionLine0.getOffset(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getLength(), 0.01F);
      assertEquals(1696.5039F, dimensionLine0.getYStart(), 0.01F);
  }

  @Test
  public void test17()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(434.0667F, 434.0667F, 434.0667F, 434.0667F, 434.0667F);
      TextStyle textStyle0 = new TextStyle(434.0667F, true, true);
      dimensionLine0.setLengthStyle(textStyle0);
      assertEquals(0.0F, dimensionLine0.getLength(), 0.01F);
      assertEquals(434.0667F, dimensionLine0.getOffset(), 0.01F);
      assertEquals(434.0667F, dimensionLine0.getXEnd(), 0.01F);
  }

  @Test
  public void test18()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      dimensionLine0.setLevel((Level) null);
      assertEquals(0.0F, dimensionLine0.getYEnd(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getXStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getOffset(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getYStart(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getXEnd(), 0.01F);
  }

  @Test
  public void test19()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(1586.9181F, 1586.9181F, 1586.9181F, 1586.9181F, 1586.9181F);
      Level level0 = new Level("", 1586.9181F, 1586.9181F, 1586.9181F);
      dimensionLine0.setLevel(level0);
      assertEquals(1586.9181F, dimensionLine0.getOffset(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getLength(), 0.01F);
  }

  @Test
  public void test20()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(1.7531826F, 1.7531826F, 1.7531826F, 1.7531826F, 1.7531826F);
      Level level0 = new Level("", 1.7531826F, 1.7531826F, 1.7531826F);
      boolean boolean0 = dimensionLine0.isAtLevel(level0);
      assertEquals(1.7531826F, dimensionLine0.getOffset(), 0.01F);
      assertEquals(false, boolean0);
      assertEquals(0.0F, dimensionLine0.getLength(), 0.01F);
  }

  @Test
  public void test21()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine((-765.2073F), (-765.2073F), (-765.2073F), (-765.2073F), (-765.2073F));
      boolean boolean0 = dimensionLine0.isAtLevel((Level) null);
      assertEquals(true, boolean0);
      assertEquals(0.0F, dimensionLine0.getLength(), 0.01F);
      assertEquals((-765.2073F), dimensionLine0.getOffset(), 0.01F);
  }

  @Test
  public void test22()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine((-765.2073F), (-765.2073F), (-765.2073F), (-765.2073F), (-765.2073F));
      boolean boolean0 = dimensionLine0.isMiddlePointAt((-765.2073F), (-765.2073F), (-765.2073F));
      assertEquals((-765.2073F), dimensionLine0.getOffset(), 0.01F);
      assertEquals(0.0F, dimensionLine0.getLength(), 0.01F);
      assertEquals(false, boolean0);
  }

  @Test
  public void test23()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(1.7531826F, 1.7531826F, 1.7531826F, 1.7531826F, 1.7531826F);
      boolean boolean0 = dimensionLine0.isMiddlePointAt(1.7531826F, 1.7531826F, 1.7531826F);
      assertEquals(true, boolean0);
      assertEquals(0.0F, dimensionLine0.getLength(), 0.01F);
  }

  @Test
  public void test24()  throws Throwable  {
      DimensionLine dimensionLine0 = new DimensionLine(2037.7526F, 2037.7526F, 2037.7526F, 2037.7526F, 2037.7526F);
      boolean boolean0 = dimensionLine0.isMiddlePointAt(2037.7526F, 1050.7822F, 2037.7526F);
      assertEquals(false, boolean0);
  }
}
