/*
 * This file was automatically generated by EvoSuite
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TextureImage;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import java.net.Proxy;
import java.net.URL;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CatalogTextureEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) null, 1370.6719F, (-1838.5946F), "");
      boolean boolean0 = catalogTexture0.isModifiable();
      assertEquals(1370.6719F, catalogTexture0.getWidth(), 0.01F);
      assertEquals((-1838.5946F), catalogTexture0.getHeight(), 0.01F);
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, (-1.0F), (-1.0F), false);
      String string0 = catalogTexture0.getId();
      assertNull(string0);
      assertEquals((-1.0F), catalogTexture0.getWidth(), 0.01F);
      assertEquals((-1.0F), catalogTexture0.getHeight(), 0.01F);
      assertEquals(false, catalogTexture0.isModifiable());
  }

  @Test
  public void test2()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, (-1.0F), (-1.0F), false);
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      catalogTexture0.equals((Object) proxy_Type0);
      assertEquals(false, catalogTexture0.isModifiable());
      assertEquals((-1.0F), catalogTexture0.getHeight(), 0.01F);
      assertEquals((-1.0F), catalogTexture0.getWidth(), 0.01F);
  }

  @Test
  public void test3()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("*)b+1])C$~fb`d", "", (Content) null, 833.5864F, 833.5864F, "", true);
      HomeTexture homeTexture0 = new HomeTexture((TextureImage) catalogTexture0);
      assertEquals("", catalogTexture0.getName());
      assertEquals(833.5864F, catalogTexture0.getHeight(), 0.01F);
      assertEquals("", catalogTexture0.getCreator());
      assertEquals(833.5864F, catalogTexture0.getWidth(), 0.01F);
      assertEquals("*)b+1])C$~fb`d", catalogTexture0.getId());
      assertEquals(true, catalogTexture0.isModifiable());
      assertEquals(833.5864F, homeTexture0.getWidth(), 0.01F);
  }

  @Test
  public void test4()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, (-1.0F), (-1.0F), false);
      TexturesCategory texturesCategory0 = new TexturesCategory("Unknown resource ");
      catalogTexture0.setCategory(texturesCategory0);
      assertEquals((-1.0F), catalogTexture0.getWidth(), 0.01F);
      assertEquals((-1.0F), catalogTexture0.getHeight(), 0.01F);
      assertEquals(false, catalogTexture0.isModifiable());
  }

  @Test
  public void test5()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (String) null, (Content) null, 1.0F, 1045.1556F, (String) null);
      catalogTexture0.getCategory();
      assertEquals(1045.1556F, catalogTexture0.getHeight(), 0.01F);
      assertEquals(false, catalogTexture0.isModifiable());
      assertEquals(1.0F, catalogTexture0.getWidth(), 0.01F);
  }

  @Test
  public void test6()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) null, 1370.6719F, (-1838.5946F), "");
      int int0 = catalogTexture0.hashCode();
      assertEquals(1005592502, int0);
  }

  @Test
  public void test7()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, (-1.0F), (-1.0F), false);
      String string0 = catalogTexture0.getCreator();
      assertEquals((-1.0F), catalogTexture0.getWidth(), 0.01F);
      assertEquals(false, catalogTexture0.isModifiable());
      assertEquals((-1.0F), catalogTexture0.getHeight(), 0.01F);
      assertNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) temporaryURLContent0, 689.2092F, 1.0F, false);
      int int0 = catalogTexture0.compareTo(catalogTexture0);
      assertEquals(1.0F, catalogTexture0.getHeight(), 0.01F);
      assertEquals(689.2092F, catalogTexture0.getWidth(), 0.01F);
      assertEquals(0, int0);
      assertEquals(false, catalogTexture0.isModifiable());
  }

  @Test
  public void test9()  throws Throwable  {
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("Rh:cvs5M[", (Content) resourceURLContent0, 668.97894F, 1883.3732F);
      CatalogTexture catalogTexture1 = new CatalogTexture("", "", (Content) resourceURLContent0, 0.0F, 1883.3732F, "Rh:cvs5M[");
      int int0 = catalogTexture0.compareTo(catalogTexture1);
      assertEquals(1, int0);
      assertEquals(1883.3732F, catalogTexture1.getHeight(), 0.01F);
      assertEquals("", catalogTexture1.getName());
      assertEquals("", catalogTexture1.getId());
      assertEquals("Rh:cvs5M[", catalogTexture1.getCreator());
      assertEquals(0.0F, catalogTexture1.getWidth(), 0.01F);
      assertEquals(false, catalogTexture1.isModifiable());
  }

  @Test
  public void test10()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("_K\"m,Fnnk", (Content) null, (-1.0F), (-1371.8452F), true);
      CatalogTexture catalogTexture1 = new CatalogTexture("_K\"m,Fnnk", "_K\"m,Fnnk", (Content) null, (-1371.8452F), (-1371.8452F), "_K\"m,Fnnk", false);
      int int0 = catalogTexture0.compareTo(catalogTexture1);
      assertEquals((-1.0F), catalogTexture0.getWidth(), 0.01F);
      assertEquals(1, int0);
      assertEquals(true, catalogTexture0.isModifiable());
      assertEquals((-1371.8452F), catalogTexture0.getHeight(), 0.01F);
  }

  @Test
  public void test11()  throws Throwable  {
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("R:\"S", "R:\"S", (Content) temporaryURLContent0, (-1347.7897F), (-1347.7897F), "R:\"S", false);
      CatalogTexture catalogTexture1 = new CatalogTexture("R:\"S", "R:\"S", (Content) temporaryURLContent0, (-1347.7897F), (-1347.7897F), "R:\"S", true);
      int int0 = catalogTexture0.compareTo(catalogTexture1);
      assertEquals((-1347.7897F), catalogTexture1.getWidth(), 0.01F);
      assertEquals((-1347.7897F), catalogTexture1.getHeight(), 0.01F);
      assertEquals((-1), int0);
      assertEquals(true, catalogTexture1.isModifiable());
  }
}
