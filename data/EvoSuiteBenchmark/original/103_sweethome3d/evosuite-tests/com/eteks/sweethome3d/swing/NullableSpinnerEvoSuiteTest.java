/*
 * This file was automatically generated by EvoSuite
 */

package com.eteks.sweethome3d.swing;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.swing.NullableSpinner;
import java.text.ParseException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class NullableSpinnerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      NullableSpinner.NullableSpinnerNumberModel nullableSpinner_NullableSpinnerNumberModel0 = new NullableSpinner.NullableSpinnerNumberModel((-620.85333F), (-620.85333F), 0.0F, 0.0F);
      // Undeclared exception!
      try {
        nullableSpinner_NullableSpinnerNumberModel0.setValue((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * illegal value
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      NullableSpinner.NullableSpinnerNumberModel nullableSpinner_NullableSpinnerNumberModel0 = new NullableSpinner.NullableSpinnerNumberModel((-1917.5826F), (-1917.5826F), (-1917.5826F), (-1917.5826F));
      Float float0 = (Float)nullableSpinner_NullableSpinnerNumberModel0.getNumber();
      assertEquals(-125, float0.byteValue());
  }

  @Test
  public void test2()  throws Throwable  {
      NullableSpinner.NullableSpinnerNumberModel nullableSpinner_NullableSpinnerNumberModel0 = new NullableSpinner.NullableSpinnerNumberModel((-620.85333F), (-620.85333F), 0.0F, 0.0F);
      Float float0 = (Float)nullableSpinner_NullableSpinnerNumberModel0.getNextValue();
      assertEquals((-620.85333F), (float)float0, 0.01F);
  }

  @Test
  public void test3()  throws Throwable  {
      NullableSpinner.NullableSpinnerNumberModel nullableSpinner_NullableSpinnerNumberModel0 = new NullableSpinner.NullableSpinnerNumberModel(1636.487F, 1636.487F, 1636.487F, 1636.487F);
      Float float0 = (Float)nullableSpinner_NullableSpinnerNumberModel0.getNextValue();
      assertEquals(false, float0.isNaN());
  }

  @Test
  public void test4()  throws Throwable  {
      NullableSpinner nullableSpinner0 = new NullableSpinner();
      Integer integer0 = (Integer)nullableSpinner0.getPreviousValue();
      assertEquals(0, integer0.byteValue());
  }

  @Test
  public void test5()  throws Throwable  {
      NullableSpinner.NullableSpinnerNumberModel nullableSpinner_NullableSpinnerNumberModel0 = new NullableSpinner.NullableSpinnerNumberModel((-620.85333F), (-620.85333F), 0.0F, 0.0F);
      nullableSpinner_NullableSpinnerNumberModel0.setNullable(true);
      nullableSpinner_NullableSpinnerNumberModel0.setValue((Object) null);
      nullableSpinner_NullableSpinnerNumberModel0.getPreviousValue();
      assertEquals(true, nullableSpinner_NullableSpinnerNumberModel0.isNullable());
  }

  @Test
  public void test6()  throws Throwable  {
      NullableSpinner.NullableSpinnerNumberModel nullableSpinner_NullableSpinnerNumberModel0 = new NullableSpinner.NullableSpinnerNumberModel((-620.85333F), (-620.85333F), 0.0F, 0.0F);
      Float float0 = (Float)nullableSpinner_NullableSpinnerNumberModel0.getPreviousValue();
      assertEquals(-108, float0.byteValue());
  }

  @Test
  public void test7()  throws Throwable  {
      NullableSpinner.NullableSpinnerNumberModel nullableSpinner_NullableSpinnerNumberModel0 = new NullableSpinner.NullableSpinnerNumberModel((-620.85333F), (-620.85333F), 0.0F, 0.0F);
      NullableSpinner nullableSpinner0 = new NullableSpinner(nullableSpinner_NullableSpinnerNumberModel0);
      nullableSpinner0.commitEdit();
      nullableSpinner_NullableSpinnerNumberModel0.setNullable(true);
      nullableSpinner_NullableSpinnerNumberModel0.setValue((Object) null);
      assertEquals(true, nullableSpinner_NullableSpinnerNumberModel0.isNullable());
      
      nullableSpinner_NullableSpinnerNumberModel0.setNullable(false);
      assertEquals(false, nullableSpinner_NullableSpinnerNumberModel0.isNullable());
  }

  @Test
  public void test8()  throws Throwable  {
      NullableSpinner.NullableSpinnerNumberModel nullableSpinner_NullableSpinnerNumberModel0 = new NullableSpinner.NullableSpinnerNumberModel((-620.85333F), (-620.85333F), 0.0F, 0.0F);
      nullableSpinner_NullableSpinnerNumberModel0.setNullable(true);
      nullableSpinner_NullableSpinnerNumberModel0.setValue((Object) null);
      assertEquals(true, nullableSpinner_NullableSpinnerNumberModel0.isNullable());
      
      nullableSpinner_NullableSpinnerNumberModel0.setNullable(false);
      assertEquals(false, nullableSpinner_NullableSpinnerNumberModel0.isNullable());
  }

  @Test
  public void test9()  throws Throwable  {
      NullableSpinner.NullableSpinnerNumberModel nullableSpinner_NullableSpinnerNumberModel0 = new NullableSpinner.NullableSpinnerNumberModel((-1917.5826F), (-1917.5826F), (-1917.5826F), (-1917.5826F));
      nullableSpinner_NullableSpinnerNumberModel0.setNullable(false);
      assertEquals(false, nullableSpinner_NullableSpinnerNumberModel0.isNullable());
  }
}
