/*
 * This file was automatically generated by EvoSuite
 */

package com.eteks.sweethome3d.viewcontroller;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.Home;
import com.eteks.sweethome3d.model.UserPreferences;
import com.eteks.sweethome3d.swing.SwingViewFactory;
import com.eteks.sweethome3d.viewcontroller.CompassController;
import com.eteks.sweethome3d.viewcontroller.View;
import com.eteks.sweethome3d.viewcontroller.ViewFactory;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import javax.swing.undo.UndoableEditSupport;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CompassControllerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Home home0 = new Home(1441.187F);
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      UndoableEditSupport undoableEditSupport0 = new UndoableEditSupport();
      CompassController compassController0 = new CompassController(home0, (UserPreferences) null, (ViewFactory) swingViewFactory0, undoableEditSupport0);
      assertNotNull(compassController0);
      
      // Undeclared exception!
      try {
        compassController0.displayView((View) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Home home0 = new Home(1450.7893F);
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      UndoableEditSupport undoableEditSupport0 = new UndoableEditSupport();
      CompassController compassController0 = new CompassController(home0, (UserPreferences) null, (ViewFactory) swingViewFactory0, undoableEditSupport0);
      assertNotNull(compassController0);
      
      compassController0.modifyCompass();
      assertEquals(100.0F, compassController0.getDiameter(), 0.01F);
      assertEquals(54.14521F, compassController0.getLatitudeInDegrees(), 0.01F);
      assertEquals((-100.0F), compassController0.getX(), 0.01F);
      assertEquals((-4.48172F), compassController0.getLongitudeInDegrees(), 0.01F);
      assertEquals(50.0F, compassController0.getY(), 0.01F);
      assertEquals(true, compassController0.isVisible());
  }

  @Test
  public void test2()  throws Throwable  {
      Home home0 = new Home(1441.187F);
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      UndoableEditSupport undoableEditSupport0 = new UndoableEditSupport();
      CompassController compassController0 = new CompassController(home0, (UserPreferences) null, (ViewFactory) swingViewFactory0, undoableEditSupport0);
      assertNotNull(compassController0);
      
      CompassController.Property compassController_Property0 = CompassController.Property.Y;
      compassController0.addPropertyChangeListener(compassController_Property0, (PropertyChangeListener) null);
      assertEquals((-100.0F), compassController0.getX(), 0.01F);
      assertEquals(54.14521F, compassController0.getLatitudeInDegrees(), 0.01F);
      assertEquals(50.0F, compassController0.getY(), 0.01F);
      assertEquals(100.0F, compassController0.getDiameter(), 0.01F);
      assertEquals((-4.48172F), compassController0.getLongitudeInDegrees(), 0.01F);
      assertEquals(true, compassController0.isVisible());
  }

  @Test
  public void test3()  throws Throwable  {
      Home home0 = new Home(1450.7893F);
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      UndoableEditSupport undoableEditSupport0 = new UndoableEditSupport();
      CompassController compassController0 = new CompassController(home0, (UserPreferences) null, (ViewFactory) swingViewFactory0, undoableEditSupport0);
      assertNotNull(compassController0);
      
      CompassController.Property compassController_Property0 = CompassController.Property.TIME_ZONE;
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("HyperLinkKey", (PropertyChangeListener) null);
      compassController0.removePropertyChangeListener(compassController_Property0, (PropertyChangeListener) propertyChangeListenerProxy0);
      assertEquals(true, compassController0.isVisible());
      assertEquals((-4.48172F), compassController0.getLongitudeInDegrees(), 0.01F);
      assertEquals((-100.0F), compassController0.getX(), 0.01F);
      assertEquals(54.14521F, compassController0.getLatitudeInDegrees(), 0.01F);
      assertEquals(50.0F, compassController0.getY(), 0.01F);
      assertEquals(100.0F, compassController0.getDiameter(), 0.01F);
  }

  @Test
  public void test4()  throws Throwable  {
      Home home0 = new Home(43.85F);
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      UndoableEditSupport undoableEditSupport0 = new UndoableEditSupport((Object) "text/plain");
      CompassController compassController0 = new CompassController(home0, (UserPreferences) null, (ViewFactory) swingViewFactory0, undoableEditSupport0);
      assertNotNull(compassController0);
      
      compassController0.updateProperties();
      assertEquals((-100.0F), compassController0.getX(), 0.01F);
      assertEquals((-4.48172F), compassController0.getLongitudeInDegrees(), 0.01F);
      assertEquals(100.0F, compassController0.getDiameter(), 0.01F);
      assertEquals(50.0F, compassController0.getY(), 0.01F);
      assertEquals(true, compassController0.isVisible());
      assertEquals(54.14521F, compassController0.getLatitudeInDegrees(), 0.01F);
  }

  @Test
  public void test5()  throws Throwable  {
      Home home0 = new Home(43.85F);
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      UndoableEditSupport undoableEditSupport0 = new UndoableEditSupport((Object) "text/plain");
      CompassController compassController0 = new CompassController(home0, (UserPreferences) null, (ViewFactory) swingViewFactory0, undoableEditSupport0);
      assertNotNull(compassController0);
      assertEquals(true, compassController0.isVisible());
      
      compassController0.setVisible(false);
      assertEquals(false, compassController0.isVisible());
      assertEquals(50.0F, compassController0.getY(), 0.01F);
  }

  @Test
  public void test6()  throws Throwable  {
      Home home0 = new Home(1450.7893F);
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      UndoableEditSupport undoableEditSupport0 = new UndoableEditSupport();
      CompassController compassController0 = new CompassController(home0, (UserPreferences) null, (ViewFactory) swingViewFactory0, undoableEditSupport0);
      assertNotNull(compassController0);
      
      compassController0.setNorthDirectionInDegrees(1450.7893F);
      assertEquals(1450.7893F, compassController0.getNorthDirectionInDegrees(), 0.01F);
      assertEquals(true, compassController0.isVisible());
  }
}
