/*
 * This file was automatically generated by EvoSuite
 */

package com.eteks.sweethome3d.viewcontroller;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.CatalogPieceOfFurniture;
import com.eteks.sweethome3d.model.FurnitureCatalog;
import com.eteks.sweethome3d.model.SelectionListener;
import com.eteks.sweethome3d.swing.FurnitureCatalogTree;
import com.eteks.sweethome3d.swing.SwingViewFactory;
import com.eteks.sweethome3d.viewcontroller.FurnitureCatalogController;
import com.eteks.sweethome3d.viewcontroller.ViewFactory;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FurnitureCatalogControllerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FurnitureCatalog furnitureCatalog0 = new FurnitureCatalog();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      FurnitureCatalogController furnitureCatalogController0 = new FurnitureCatalogController(furnitureCatalog0, (ViewFactory) swingViewFactory0);
      assertNotNull(furnitureCatalogController0);
      
      FurnitureCatalogTree furnitureCatalogTree0 = (FurnitureCatalogTree)furnitureCatalogController0.getView();
      assertNotNull(furnitureCatalogTree0);
      
      FurnitureCatalogTree furnitureCatalogTree1 = (FurnitureCatalogTree)furnitureCatalogController0.getView();
      assertSame(furnitureCatalogTree1, furnitureCatalogTree0);
  }

  @Test
  public void test1()  throws Throwable  {
      FurnitureCatalog furnitureCatalog0 = new FurnitureCatalog();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      FurnitureCatalogController furnitureCatalogController0 = new FurnitureCatalogController(furnitureCatalog0, (ViewFactory) swingViewFactory0);
      furnitureCatalogController0.removeSelectionListener((SelectionListener) null);
  }

  @Test
  public void test2()  throws Throwable  {
      FurnitureCatalog furnitureCatalog0 = new FurnitureCatalog();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      FurnitureCatalogController furnitureCatalogController0 = new FurnitureCatalogController(furnitureCatalog0, (ViewFactory) swingViewFactory0);
      furnitureCatalogController0.getView();
      List<CatalogPieceOfFurniture> list0 = furnitureCatalogController0.getSelectedFurniture();
      furnitureCatalogController0.setSelectedFurniture(list0);
      assertEquals(0, list0.size());
  }

  @Test
  public void test3()  throws Throwable  {
      FurnitureCatalog furnitureCatalog0 = new FurnitureCatalog();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      FurnitureCatalogController furnitureCatalogController0 = new FurnitureCatalogController(furnitureCatalog0, (ViewFactory) swingViewFactory0);
      furnitureCatalogController0.modifySelectedFurniture();
  }

  @Test
  public void test4()  throws Throwable  {
      FurnitureCatalog furnitureCatalog0 = new FurnitureCatalog();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      FurnitureCatalogController furnitureCatalogController0 = new FurnitureCatalogController(furnitureCatalog0, (ViewFactory) swingViewFactory0);
      furnitureCatalogController0.importFurniture();
  }

  @Test
  public void test5()  throws Throwable  {
      FurnitureCatalog furnitureCatalog0 = new FurnitureCatalog();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      FurnitureCatalogController furnitureCatalogController0 = new FurnitureCatalogController(furnitureCatalog0, (ViewFactory) swingViewFactory0);
      furnitureCatalogController0.deleteSelection();
  }
}
