/*
 * This file was automatically generated by EvoSuite
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.CatalogDoorOrWindow;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.DoorOrWindow;
import com.eteks.sweethome3d.model.HomeDoorOrWindow;
import com.eteks.sweethome3d.model.Sash;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.math.BigDecimal;
import java.net.URL;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class HomeDoorOrWindowEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Class<?> class0 = HomeDoorOrWindow.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      Sash[] sashArray0 = new Sash[1];
      float[][] floatArray0 = new float[8][8];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", (Content) resourceURLContent0, (Content) resourceURLContent0, (Content) resourceURLContent0, 0.0F, 1787.7848F, 0.0F, 0.0F, true, 0.0F, 0.0F, sashArray0, floatArray0, "", true, true, true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertEquals(false, homeDoorOrWindow1.isBoundToWall());
  }

  @Test
  public void test1()  throws Throwable  {
      Class<?> class0 = HomeDoorOrWindow.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      Sash[] sashArray0 = new Sash[1];
      float[][] floatArray0 = new float[8][8];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", (Content) resourceURLContent0, (Content) resourceURLContent0, (Content) resourceURLContent0, 0.0F, 1787.7848F, 0.0F, 0.0F, true, 0.0F, 0.0F, sashArray0, floatArray0, "", true, true, true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      homeDoorOrWindow0.setBoundToWall(true);
      assertEquals(true, homeDoorOrWindow0.isBoundToWall());
  }

  @Test
  public void test2()  throws Throwable  {
      URLContent uRLContent0 = new URLContent((URL) null);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[10];
      float[][] floatArray0 = new float[3][7];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("om9+8^_Buza3", "om9+8^_Buza3", "om9+8^_Buza3", (Content) uRLContent0, (Content) uRLContent0, (Content) temporaryURLContent0, 0.3926991F, 0.3926991F, 0.3926991F, 0.3926991F, false, 0.3926991F, 0.3926991F, sashArray0, floatArray0, "om9+8^_Buza3", false, false, false, bigDecimal0, bigDecimal0, "om9+8^_Buza3");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow((DoorOrWindow) homeDoorOrWindow0);
      assertNotNull(homeDoorOrWindow1);
      assertEquals(true, homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow1.getWallThickness(), 0.01F);
  }

  @Test
  public void test3()  throws Throwable  {
      URLContent uRLContent0 = new URLContent((URL) null);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[10];
      float[][] floatArray0 = new float[3][7];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("om9+8^_Buza3", "om9+8^_Buza3", "om9+8^_Buza3", (Content) uRLContent0, (Content) uRLContent0, (Content) temporaryURLContent0, 0.3926991F, 0.3926991F, 0.3926991F, 0.3926991F, false, 0.3926991F, 0.3926991F, sashArray0, floatArray0, "om9+8^_Buza3", false, false, false, bigDecimal0, bigDecimal0, "om9+8^_Buza3");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      homeDoorOrWindow0.isBoundToWall();
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallDistance(), 0.01F);
  }

  @Test
  public void test4()  throws Throwable  {
      Class<?> class0 = HomeDoorOrWindow.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      Sash[] sashArray0 = new Sash[1];
      float[][] floatArray0 = new float[8][8];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", (Content) resourceURLContent0, (Content) resourceURLContent0, (Content) resourceURLContent0, 0.0F, 1787.7848F, 0.0F, 0.0F, true, 0.0F, 0.0F, sashArray0, floatArray0, "", true, true, true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      homeDoorOrWindow0.move(0.0F, 0.0F);
      assertEquals(893.8924F, homeDoorOrWindow0.getY(), 0.01F);
  }

  @Test
  public void test5()  throws Throwable  {
      URLContent uRLContent0 = new URLContent((URL) null);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[10];
      float[][] floatArray0 = new float[3][7];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("om9+8^_Buza3", "om9+8^_Buza3", "om9+8^_Buza3", (Content) uRLContent0, (Content) uRLContent0, (Content) temporaryURLContent0, 0.3926991F, 0.3926991F, 0.3926991F, 0.3926991F, false, 0.3926991F, 0.3926991F, sashArray0, floatArray0, "om9+8^_Buza3", false, false, false, bigDecimal0, bigDecimal0, "om9+8^_Buza3");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      homeDoorOrWindow0.setX(0.3926991F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(false, homeDoorOrWindow0.isBoundToWall());
  }

  @Test
  public void test6()  throws Throwable  {
      URLContent uRLContent0 = new URLContent((URL) null);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Sash[] sashArray0 = new Sash[10];
      float[][] floatArray0 = new float[3][7];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("om9+8^_Buza3", "om9+8^_Buza3", "om9+8^_Buza3", (Content) uRLContent0, (Content) uRLContent0, (Content) temporaryURLContent0, 0.3926991F, 0.3926991F, 0.3926991F, 0.3926991F, false, 0.3926991F, 0.3926991F, sashArray0, floatArray0, "om9+8^_Buza3", false, false, false, bigDecimal0, bigDecimal0, "om9+8^_Buza3");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      homeDoorOrWindow0.setY(0.3926991F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(false, homeDoorOrWindow0.isBoundToWall());
  }

  @Test
  public void test7()  throws Throwable  {
      Class<?> class0 = HomeDoorOrWindow.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      Sash[] sashArray0 = new Sash[1];
      Integer integer0 = new Integer(0);
      float[][] floatArray0 = new float[14][10];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) resourceURLContent0, (Content) resourceURLContent0, 1535.7098F, 1535.7098F, 1535.7098F, 1535.7098F, true, 1535.7098F, 1535.7098F, sashArray0, integer0, floatArray0, true, (float) integer0, true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      homeDoorOrWindow0.setAngle((float) integer0);
      assertEquals(1535.7098F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(1535.7098F, homeDoorOrWindow0.getWallDistance(), 0.01F);
  }

  @Test
  public void test8()  throws Throwable  {
      Class<?> class0 = HomeDoorOrWindow.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      Sash[] sashArray0 = new Sash[7];
      Integer integer0 = new Integer((-1399));
      float[][] floatArray0 = new float[3][10];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) resourceURLContent0, (Content) resourceURLContent0, 12.415777F, 12.415777F, 12.415777F, 12.415777F, true, 12.415777F, 12.415777F, sashArray0, integer0, floatArray0, true, (float) (-1399), true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      homeDoorOrWindow0.setAngle((float) integer0);
      assertEquals(2.1503234F, homeDoorOrWindow0.getAngle(), 0.01F);
  }

  @Test
  public void test9()  throws Throwable  {
      Class<?> class0 = HomeDoorOrWindow.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      Sash[] sashArray0 = new Sash[1];
      Integer integer0 = new Integer(0);
      float[][] floatArray0 = new float[14][10];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) resourceURLContent0, (Content) resourceURLContent0, 1535.7098F, 1535.7098F, 1535.7098F, 1535.7098F, true, 1535.7098F, 1535.7098F, sashArray0, integer0, floatArray0, true, (float) integer0, true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      homeDoorOrWindow0.setDepth(1535.7098F);
      assertEquals(1535.7098F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(1535.7098F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(1535.7098F, homeDoorOrWindow0.getWallThickness(), 0.01F);
  }

  @Test
  public void test10()  throws Throwable  {
      Class<?> class0 = HomeDoorOrWindow.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      Sash[] sashArray0 = new Sash[1];
      float[][] floatArray0 = new float[8][8];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", (Content) resourceURLContent0, (Content) resourceURLContent0, (Content) resourceURLContent0, 0.0F, 1787.7848F, 0.0F, 0.0F, true, 0.0F, 0.0F, sashArray0, floatArray0, "", true, true, true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) catalogDoorOrWindow0);
      homeDoorOrWindow0.setDepth(0.0F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
  }
}
