/*
 * This file was automatically generated by EvoSuite
 */

package com.eteks.sweethome3d.viewcontroller;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.Home;
import com.eteks.sweethome3d.model.UserPreferences;
import com.eteks.sweethome3d.viewcontroller.ContentManager;
import com.eteks.sweethome3d.viewcontroller.PhotoController;
import com.eteks.sweethome3d.viewcontroller.View;
import com.eteks.sweethome3d.viewcontroller.ViewFactory;
import java.beans.PropertyChangeListener;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PhotoControllerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      float float0 = photoController0.get3DViewAspectRatio();
      assertEquals(1372766400053L, photoController0.getTime());
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test
  public void test1()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      photoController0.setHeight(1800);
      assertEquals(1800, photoController0.getHeight());
      assertEquals(1372766400869L, photoController0.getTime());
  }

  @Test
  public void test2()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      photoController0.getContentManager();
      assertEquals(1372766400713L, photoController0.getTime());
  }

  @Test
  public void test3()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      long long0 = photoController0.getTime();
      assertEquals(1372766400496L, long0);
  }

  @Test
  public void test4()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      int int0 = photoController0.getCeilingLightColor();
      assertEquals(1372766400255L, photoController0.getTime());
      assertEquals(13684944, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      PhotoController.Property photoController_Property0 = PhotoController.Property.QUALITY;
      photoController0.addPropertyChangeListener(photoController_Property0, (PropertyChangeListener) null);
      assertEquals(1372766400694L, photoController0.getTime());
  }

  @Test
  public void test6()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      int int0 = photoController0.getWidth();
      assertEquals(1372766400480L, photoController0.getTime());
      assertEquals(400, int0);
  }

  @Test
  public void test7()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      photoController0.getLens();
      assertEquals(1372766400292L, photoController0.getTime());
  }

  @Test
  public void test8()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      photoController0.get3DView();
      assertEquals(1372766400905L, photoController0.getTime());
  }

  @Test
  public void test9()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      // Undeclared exception!
      try {
        photoController0.displayView((View) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      int int0 = photoController0.getHeight();
      assertEquals(1372766400198L, photoController0.getTime());
      assertEquals(300, int0);
  }

  @Test
  public void test11()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      photoController0.setVisualProperty("CEILING_LIGHT_COLOR", "insert-content");
      assertEquals(1372766400543L, photoController0.getTime());
  }

  @Test
  public void test12()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      photoController0.setWidth(1704);
      assertEquals(1372766400993L, photoController0.getTime());
  }

  @Test
  public void test13()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      photoController0.getAspectRatio();
      assertEquals(1372766400541L, photoController0.getTime());
  }

  @Test
  public void test14()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      photoController0.setQuality(1704);
      assertEquals(3, photoController0.getQuality());
      assertEquals(1372766400149L, photoController0.getTime());
  }

  @Test
  public void test15()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      PhotoController.Property photoController_Property0 = PhotoController.Property.LENS;
      photoController0.removePropertyChangeListener(photoController_Property0, (PropertyChangeListener) null);
      assertEquals(1372766400903L, photoController0.getTime());
  }

  @Test
  public void test16()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      int int0 = photoController0.getQuality();
      assertEquals(1372766400213L, photoController0.getTime());
      assertEquals(0, int0);
  }

  @Test
  public void test17()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      Camera camera0 = new Camera(958.4228F, (float) 1372766400445L, 0.0F, 294.9623F, (float) 0, 0.0F);
      home0.setCamera(camera0);
      assertEquals(1372766400919L, camera0.getTime());
  }

  @Test
  public void test18()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      photoController0.setCeilingLightColor((-430));
      assertEquals(-430, photoController0.getCeilingLightColor());
      assertEquals(1372766400465L, photoController0.getTime());
  }

  @Test
  public void test19()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      photoController0.setAspectRatio(aspectRatio0);
      photoController0.setWidth(333);
      assertEquals(333, photoController0.getWidth());
      assertEquals(1372766400777L, photoController0.getTime());
  }

  @Test
  public void test20()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      photoController0.setAspectRatio(aspectRatio0);
      photoController0.setWidth(333);
      assertEquals(333, photoController0.getWidth());
      assertEquals(1372766400149L, photoController0.getTime());
  }

  @Test
  public void test21()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      photoController0.setAspectRatio(aspectRatio0);
      photoController0.setHeight(1800);
      assertEquals(1800, photoController0.getHeight());
      assertEquals(1372766400553L, photoController0.getTime());
  }

  @Test
  public void test22()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      photoController0.setAspectRatio(aspectRatio0);
      photoController0.setHeight(1800);
      assertEquals(1800, photoController0.getHeight());
      assertEquals(1372766400081L, photoController0.getTime());
  }

  @Test
  public void test23()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      photoController0.setLens(camera_Lens0);
      assertEquals(200, photoController0.getHeight());
      assertEquals(1372766400811L, photoController0.getTime());
  }

  @Test
  public void test24()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      photoController0.set3DViewAspectRatio((-44.49994F));
      assertEquals((-44.49994F), photoController0.get3DViewAspectRatio(), 0.01F);
      assertEquals(1372766400468L, photoController0.getTime());
  }

  @Test
  public void test25()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      assertNotNull(photoController0);
      
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      photoController0.setAspectRatio(aspectRatio0);
      photoController0.set3DViewAspectRatio((float) (-430));
      assertEquals((-430.0F), photoController0.get3DViewAspectRatio(), 0.01F);
      assertEquals(1372766400092L, photoController0.getTime());
  }
}
