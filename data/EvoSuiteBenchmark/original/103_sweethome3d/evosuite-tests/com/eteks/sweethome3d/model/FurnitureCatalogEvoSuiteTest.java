/*
 * This file was automatically generated by EvoSuite
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.CatalogPieceOfFurniture;
import com.eteks.sweethome3d.model.CollectionListener;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.FurnitureCatalog;
import com.eteks.sweethome3d.model.FurnitureCategory;
import com.eteks.sweethome3d.swing.FurnitureCatalogTree;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import java.net.URL;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FurnitureCatalogEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FurnitureCatalog furnitureCatalog0 = new FurnitureCatalog();
      List<FurnitureCategory> list0 = furnitureCatalog0.getCategories();
      List<FurnitureCategory> list1 = furnitureCatalog0.getCategories();
      assertTrue(list1.equals(list0));
  }

  @Test
  public void test1()  throws Throwable  {
      FurnitureCatalog furnitureCatalog0 = new FurnitureCatalog();
      furnitureCatalog0.addFurnitureListener((CollectionListener<CatalogPieceOfFurniture>) null);
      assertEquals(0, furnitureCatalog0.getCategoriesCount());
  }

  @Test
  public void test2()  throws Throwable  {
      FurnitureCatalog furnitureCatalog0 = new FurnitureCatalog();
      int int0 = furnitureCatalog0.getCategoriesCount();
      assertEquals(0, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      FurnitureCatalog furnitureCatalog0 = new FurnitureCatalog();
      furnitureCatalog0.removeFurnitureListener((CollectionListener<CatalogPieceOfFurniture>) null);
      assertEquals(0, furnitureCatalog0.getCategoriesCount());
  }

  @Test
  public void test4()  throws Throwable  {
      FurnitureCatalog furnitureCatalog0 = new FurnitureCatalog();
      // Undeclared exception!
      try {
        furnitureCatalog0.getCategory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      FurnitureCatalog furnitureCatalog0 = new FurnitureCatalog();
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("");
      Class<?> class0 = FurnitureCatalogTree.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      float[][] floatArray0 = new float[3][10];
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) resourceURLContent0, (Content) resourceURLContent0, (float) (-1118), (float) (-1118), (float) (-1118), (float) (-1118), false, "", (Integer) (-1118), floatArray0, false, (float) (-1118), false);
      furnitureCatalog0.add(furnitureCategory0, catalogPieceOfFurniture0);
      furnitureCatalog0.add(furnitureCategory0, catalogPieceOfFurniture0);
      furnitureCatalog0.delete(catalogPieceOfFurniture0);
      assertEquals(1, furnitureCatalog0.getCategoriesCount());
  }

  @Test
  public void test6()  throws Throwable  {
      FurnitureCatalog furnitureCatalog0 = new FurnitureCatalog();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, false);
      float[][] floatArray0 = new float[11][7];
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("\"m", (Content) resourceURLContent0, (Content) resourceURLContent0, (float) 0, (float) 0, (float) 0, (float) 0, false, false, (Integer) 0, floatArray0, false, (float) 0, false);
      // Undeclared exception!
      try {
        furnitureCatalog0.delete(catalogPieceOfFurniture0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * catalog doesn't contain piece \"m
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      FurnitureCatalog furnitureCatalog0 = new FurnitureCatalog();
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("");
      Class<?> class0 = FurnitureCatalogTree.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      float[][] floatArray0 = new float[3][10];
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) resourceURLContent0, (Content) resourceURLContent0, (float) (-1118), (float) (-1118), (float) (-1118), (float) (-1118), false, "", (Integer) (-1118), floatArray0, false, (float) (-1118), false);
      furnitureCatalog0.add(furnitureCategory0, catalogPieceOfFurniture0);
      assertEquals(1, furnitureCatalog0.getCategoriesCount());
      
      furnitureCatalog0.delete(catalogPieceOfFurniture0);
      assertEquals(0, furnitureCatalog0.getCategoriesCount());
  }
}
