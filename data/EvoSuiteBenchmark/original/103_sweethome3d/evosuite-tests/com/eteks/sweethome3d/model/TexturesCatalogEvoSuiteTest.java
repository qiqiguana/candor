/*
 * This file was automatically generated by EvoSuite
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.CollectionListener;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.TexturesCatalog;
import com.eteks.sweethome3d.model.TexturesCategory;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TexturesCatalogEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TexturesCatalog texturesCatalog0 = new TexturesCatalog();
      int int0 = texturesCatalog0.getCategoriesCount();
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      TexturesCatalog texturesCatalog0 = new TexturesCatalog();
      texturesCatalog0.removeTexturesListener((CollectionListener<CatalogTexture>) null);
      assertEquals(0, texturesCatalog0.getCategoriesCount());
  }

  @Test
  public void test2()  throws Throwable  {
      TexturesCatalog texturesCatalog0 = new TexturesCatalog();
      texturesCatalog0.addTexturesListener((CollectionListener<CatalogTexture>) null);
      assertEquals(0, texturesCatalog0.getCategoriesCount());
  }

  @Test
  public void test3()  throws Throwable  {
      TexturesCatalog texturesCatalog0 = new TexturesCatalog();
      // Undeclared exception!
      try {
        texturesCatalog0.getCategory(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 1, Size: 0
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TexturesCatalog texturesCatalog0 = new TexturesCatalog();
      List<TexturesCategory> list0 = texturesCatalog0.getCategories();
      List<TexturesCategory> list1 = texturesCatalog0.getCategories();
      assertTrue(list1.equals(list0));
  }

  @Test
  public void test5()  throws Throwable  {
      TexturesCatalog texturesCatalog0 = new TexturesCatalog();
      CatalogTexture catalogTexture0 = new CatalogTexture(";os.versin", (Content) null, 39.008606F, 39.008606F, false);
      TexturesCategory texturesCategory0 = new TexturesCategory(";os.versin");
      texturesCatalog0.add(texturesCategory0, catalogTexture0);
      texturesCatalog0.add(texturesCategory0, catalogTexture0);
      texturesCatalog0.delete(catalogTexture0);
      assertEquals(1, texturesCatalog0.getCategoriesCount());
  }

  @Test
  public void test6()  throws Throwable  {
      TexturesCatalog texturesCatalog0 = new TexturesCatalog();
      CatalogTexture catalogTexture0 = new CatalogTexture("Z,pdjujNw1", "Z,pdjujNw1", (Content) null, (-1796.2382F), (-1796.2382F), "Z,pdjujNw1");
      // Undeclared exception!
      try {
        texturesCatalog0.delete(catalogTexture0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * catalog doesn't contain texture Z,pdjujNw1
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TexturesCatalog texturesCatalog0 = new TexturesCatalog();
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 1799.2382F, 1799.2382F, false);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      texturesCatalog0.add(texturesCategory0, catalogTexture0);
      assertEquals(1, texturesCatalog0.getCategoriesCount());
      
      texturesCatalog0.delete(catalogTexture0);
      // Undeclared exception!
      try {
        texturesCatalog0.delete(catalogTexture0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * catalog doesn't contain texture 
         */
      }
  }
}
