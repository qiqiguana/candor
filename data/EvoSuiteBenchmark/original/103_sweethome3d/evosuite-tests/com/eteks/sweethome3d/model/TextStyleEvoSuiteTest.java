/*
 * This file was automatically generated by EvoSuite
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.TextStyle;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TextStyleEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TextStyle textStyle0 = new TextStyle((-21.318222F));
      assertNotNull(textStyle0);
      
      TextStyle textStyle1 = textStyle0.deriveBoldStyle(false);
      assertEquals(false, textStyle0.isItalic());
      assertSame(textStyle0, textStyle1);
      assertEquals((-21.318222F), textStyle0.getFontSize(), 0.01F);
  }

  @Test
  public void test1()  throws Throwable  {
      TextStyle textStyle0 = new TextStyle(1.2925558F);
      assertNotNull(textStyle0);
      
      TextStyle textStyle1 = textStyle0.deriveStyle(8.876834F);
      assertNotNull(textStyle1);
      
      boolean boolean0 = textStyle0.equals((Object) textStyle1);
      assertEquals(false, boolean0);
      assertEquals(false, textStyle0.isBold());
      assertFalse(textStyle1.equals(textStyle0));
      assertEquals(8.876834F, textStyle1.getFontSize(), 0.01F);
      assertEquals(false, textStyle0.isItalic());
  }

  @Test
  public void test2()  throws Throwable  {
      TextStyle textStyle0 = new TextStyle((-21.318222F));
      assertNotNull(textStyle0);
      
      TextStyle textStyle1 = textStyle0.deriveStyle((-21.318222F));
      assertEquals(false, textStyle1.isBold());
      assertEquals(false, textStyle1.isItalic());
      assertSame(textStyle1, textStyle0);
  }

  @Test
  public void test3()  throws Throwable  {
      TextStyle textStyle0 = new TextStyle(540.5897F);
      assertNotNull(textStyle0);
      
      TextStyle textStyle1 = textStyle0.deriveBoldStyle(true);
      assertEquals(540.5897F, textStyle1.getFontSize(), 0.01F);
      assertEquals(false, textStyle0.isBold());
      assertEquals(false, textStyle1.isItalic());
      assertEquals(540.5897F, textStyle0.getFontSize(), 0.01F);
      assertEquals(true, textStyle1.isBold());
      assertNotNull(textStyle1);
  }

  @Test
  public void test4()  throws Throwable  {
      TextStyle textStyle0 = new TextStyle(540.5897F);
      assertNotNull(textStyle0);
      
      TextStyle textStyle1 = textStyle0.deriveItalicStyle(true);
      assertNotNull(textStyle1);
      
      boolean boolean0 = textStyle0.equals((Object) textStyle1);
      assertEquals(true, textStyle1.isItalic());
      assertEquals(false, boolean0);
      assertEquals(540.5897F, textStyle0.getFontSize(), 0.01F);
      assertEquals(false, textStyle1.isBold());
      assertFalse(textStyle1.equals(textStyle0));
      assertEquals(540.5897F, textStyle1.getFontSize(), 0.01F);
  }

  @Test
  public void test5()  throws Throwable  {
      TextStyle textStyle0 = new TextStyle(1.2925558F);
      assertNotNull(textStyle0);
      
      TextStyle textStyle1 = textStyle0.deriveItalicStyle(false);
      assertEquals(1.2925558F, textStyle0.getFontSize(), 0.01F);
      assertEquals(false, textStyle0.isBold());
      assertSame(textStyle0, textStyle1);
  }

  @Test
  public void test6()  throws Throwable  {
      TextStyle textStyle0 = new TextStyle((-21.318222F));
      assertNotNull(textStyle0);
      
      boolean boolean0 = textStyle0.equals((Object) (-21.318222F));
      assertEquals(false, textStyle0.isItalic());
      assertEquals(false, textStyle0.isBold());
      assertEquals((-21.318222F), textStyle0.getFontSize(), 0.01F);
      assertEquals(false, boolean0);
  }
}
