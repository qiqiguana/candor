/*
 * This file was automatically generated by EvoSuite
 */

package org.fixsuite.message.info;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.List;
import org.fixsuite.message.info.ComponentInfo;
import org.fixsuite.message.info.FieldInfo;
import org.fixsuite.message.info.FixInfo;
import org.fixsuite.message.info.GroupInfo;
import org.fixsuite.message.info.MessageInfo;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class GroupInfoEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FieldInfo fieldInfo0 = new FieldInfo();
      GroupInfo groupInfo0 = new GroupInfo(fieldInfo0);
      // Undeclared exception!
      try {
        groupInfo0.replaceAsGroup((FieldInfo) groupInfo0, groupInfo0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      FieldInfo fieldInfo0 = new FieldInfo();
      GroupInfo groupInfo0 = new GroupInfo(fieldInfo0);
      List<FieldInfo> list0 = groupInfo0.getFields();
      assertNull(list0);
  }

  @Test
  public void test2()  throws Throwable  {
      FieldInfo fieldInfo0 = new FieldInfo();
      GroupInfo groupInfo0 = new GroupInfo(fieldInfo0);
      groupInfo0.addField(fieldInfo0, (double) (-1746));
      List<FieldInfo> list0 = groupInfo0.getFields();
      assertNotNull(list0);
      assertEquals(1, list0.size());
  }

  @Test
  public void test3()  throws Throwable  {
      FieldInfo fieldInfo0 = new FieldInfo();
      GroupInfo groupInfo0 = new GroupInfo(fieldInfo0);
      FieldInfo fieldInfo1 = groupInfo0.getField((-306));
      assertNull(fieldInfo1);
  }

  @Test
  public void test4()  throws Throwable  {
      FieldInfo fieldInfo0 = new FieldInfo();
      GroupInfo groupInfo0 = new GroupInfo(fieldInfo0);
      groupInfo0.addField(fieldInfo0, (double) 0);
      FieldInfo fieldInfo1 = groupInfo0.getField(0);
      assertSame(fieldInfo0, fieldInfo1);
  }

  @Test
  public void test5()  throws Throwable  {
      FieldInfo fieldInfo0 = new FieldInfo();
      GroupInfo groupInfo0 = new GroupInfo(fieldInfo0);
      FieldInfo fieldInfo1 = groupInfo0.getField("V");
      assertNull(fieldInfo1);
  }

  @Test
  public void test6()  throws Throwable  {
      FieldInfo fieldInfo0 = new FieldInfo();
      GroupInfo groupInfo0 = new GroupInfo(fieldInfo0);
      groupInfo0.addField(fieldInfo0, (double) 0);
      // Undeclared exception!
      try {
        groupInfo0.getField((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      FieldInfo fieldInfo0 = new FieldInfo();
      GroupInfo groupInfo0 = new GroupInfo(fieldInfo0);
      groupInfo0.addField((FieldInfo) groupInfo0, (-41.725465606414254));
      // Undeclared exception!
      try {
        groupInfo0.addField(fieldInfo0, (-41.725465606414254));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      FieldInfo fieldInfo0 = new FieldInfo();
      GroupInfo groupInfo0 = new GroupInfo(fieldInfo0);
      List<ComponentInfo> list0 = groupInfo0.getComponents();
      assertNull(list0);
  }

  @Test
  public void test9()  throws Throwable  {
      FieldInfo fieldInfo0 = new FieldInfo();
      GroupInfo groupInfo0 = new GroupInfo(fieldInfo0);
      ComponentInfo componentInfo0 = new ComponentInfo();
      groupInfo0.addComponent(componentInfo0, (-229.57956926709514));
      List<ComponentInfo> list0 = groupInfo0.getComponents();
      assertNotNull(list0);
      assertEquals(1, list0.size());
  }

  @Test
  public void test10()  throws Throwable  {
      FieldInfo fieldInfo0 = new FieldInfo();
      GroupInfo groupInfo0 = new GroupInfo(fieldInfo0);
      ComponentInfo componentInfo0 = groupInfo0.getComponent((-306));
      assertNull(componentInfo0);
  }

  @Test
  public void test11()  throws Throwable  {
      FieldInfo fieldInfo0 = new FieldInfo();
      GroupInfo groupInfo0 = new GroupInfo(fieldInfo0);
      ComponentInfo componentInfo0 = new ComponentInfo();
      groupInfo0.addComponent(componentInfo0, (-229.57956926709514));
      ComponentInfo componentInfo1 = groupInfo0.getComponent(0);
      assertNull(componentInfo1.getCategory());
  }

  @Test
  public void test12()  throws Throwable  {
      FieldInfo fieldInfo0 = new FieldInfo();
      GroupInfo groupInfo0 = new GroupInfo(fieldInfo0);
      ComponentInfo componentInfo0 = groupInfo0.getComponent("");
      assertNull(componentInfo0);
  }

  @Test
  public void test13()  throws Throwable  {
      FieldInfo fieldInfo0 = new FieldInfo();
      GroupInfo groupInfo0 = new GroupInfo(fieldInfo0);
      MessageInfo messageInfo0 = new MessageInfo();
      groupInfo0.addComponent((ComponentInfo) messageInfo0, 6.139331766013765);
      // Undeclared exception!
      try {
        groupInfo0.addComponent((ComponentInfo) messageInfo0, (double) 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      FieldInfo fieldInfo0 = new FieldInfo();
      GroupInfo groupInfo0 = new GroupInfo(fieldInfo0);
      List<FixInfo> list0 = groupInfo0.getItems();
      assertNull(list0);
  }

  @Test
  public void test15()  throws Throwable  {
      FieldInfo fieldInfo0 = new FieldInfo();
      GroupInfo groupInfo0 = new GroupInfo(fieldInfo0);
      ComponentInfo componentInfo0 = new ComponentInfo();
      groupInfo0.addComponent(componentInfo0, (-229.57956926709514));
      List<FixInfo> list0 = groupInfo0.getItems();
      assertNotNull(list0);
      assertEquals(false, list0.isEmpty());
  }

  @Test
  public void test16()  throws Throwable  {
      FieldInfo fieldInfo0 = new FieldInfo();
      GroupInfo groupInfo0 = new GroupInfo(fieldInfo0);
      ComponentInfo componentInfo0 = new ComponentInfo();
      groupInfo0.addComponent(componentInfo0, (-229.57956926709514));
      groupInfo0.addField(fieldInfo0, (double) 0);
      assertNull(groupInfo0.getUnionDataType());
  }
}
