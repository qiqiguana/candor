/*
 * This file was automatically generated by EvoSuite
 */

package macaw.businessLayer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.MacawException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ValueLabelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      boolean boolean0 = valueLabel0.isDeletedNewRecord();
      assertEquals(true, valueLabel0.isDeletedNewRecord());
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      String string0 = valueLabel0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      assertNotNull(string0);
      assertEquals(true, valueLabel0.isNewRecord());
      assertEquals(false, valueLabel0.isMissingValue());
  }

  @Test
  public void test2()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      User user0 = new User("-", "-");
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = ValueLabel.differencesExist(user0, (Variable) rawVariable0, valueLabel0, valueLabel1);
      assertEquals(true, boolean0);
      assertEquals(true, valueLabel0.isMissingValue());
  }

  @Test
  public void test3()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = (ValueLabel)valueLabel0.clone();
      assertNotSame(valueLabel0, valueLabel1);
      assertEquals("-", valueLabel1.getDisplayName());
      assertEquals(false, valueLabel1.isMissingValue());
      assertEquals(true, valueLabel1.isNewRecord());
      assertEquals("0", valueLabel1.getDisplayItemIdentifier());
  }

  @Test
  public void test4()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getEditingOperationType();
      assertEquals(false, valueLabel0.isMissingValue());
      assertEquals(true, valueLabel0.isNewRecord());
      assertEquals(0, valueLabel0.getIdentifier());
  }

  @Test
  public void test5()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      assertEquals(true, valueLabel0.isNewRecord());
      
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      boolean boolean0 = valueLabel0.isNewRecord();
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      boolean boolean0 = valueLabel0.isNewRecord();
      assertEquals(false, valueLabel0.isMissingValue());
      assertEquals(true, boolean0);
      assertEquals("0", valueLabel0.getDisplayItemIdentifier());
  }

  @Test
  public void test7()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      boolean boolean0 = valueLabel0.isEditingExistingRecord();
      assertEquals(true, valueLabel0.isNewRecord());
      assertEquals(false, valueLabel0.isMissingValue());
      assertEquals("0", valueLabel0.getDisplayItemIdentifier());
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      boolean boolean0 = valueLabel0.isEditingExistingRecord();
      assertEquals(true, valueLabel0.isEditingExistingRecord());
      assertEquals(true, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      boolean boolean0 = valueLabel0.isDeletedNewRecord();
      assertEquals(true, valueLabel0.isNewRecord());
      assertEquals(false, valueLabel0.isMissingValue());
      assertEquals("0", valueLabel0.getDisplayItemIdentifier());
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      boolean boolean0 = valueLabel0.isDeletedRecord();
      assertEquals(true, valueLabel0.isNewRecord());
      assertEquals(false, boolean0);
      assertEquals(false, valueLabel0.isMissingValue());
      assertEquals("0", valueLabel0.getDisplayItemIdentifier());
  }

  @Test
  public void test11()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      boolean boolean0 = valueLabel0.isDeletedRecord();
      assertEquals(true, valueLabel0.isDeletedRecord());
      assertEquals(true, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      assertEquals("-", valueLabel0.getDisplayName());
      
      valueLabel0.setValue((String) null);
      ValueLabel valueLabel1 = new ValueLabel();
      boolean boolean0 = valueLabel0.hasSameDisplayName(valueLabel1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      boolean boolean0 = valueLabel0.hasSameDisplayName(valueLabel0);
      assertEquals(true, boolean0);
      assertEquals(false, valueLabel0.isMissingValue());
      assertEquals("-", valueLabel0.getDisplayName());
      assertEquals("0", valueLabel0.getDisplayItemIdentifier());
      assertEquals(true, valueLabel0.isNewRecord());
  }

  @Test
  public void test14()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      assertEquals(true, valueLabel0.isNewRecord());
      assertEquals(false, valueLabel0.isMissingValue());
      assertEquals(0, valueLabel0.getIdentifier());
      assertEquals("0", valueLabel0.getDisplayItemIdentifier());
  }

  @Test
  public void test15()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = ValueLabel.differencesExist(user0, (Variable) derivedVariable0, valueLabel0, valueLabel0);
      assertEquals("-", valueLabel0.getDisplayName());
      assertEquals(false, boolean0);
      assertEquals(false, valueLabel0.isMissingValue());
      assertEquals(true, valueLabel0.isNewRecord());
      assertEquals("0", valueLabel0.getDisplayItemIdentifier());
  }

  @Test
  public void test16()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue("p .c_;=VsHg*:Z^");
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = ValueLabel.differencesExist(user0, (Variable) derivedVariable0, valueLabel0, valueLabel1);
      assertEquals("p .c_;=VsHg*:Z^-", valueLabel0.getDisplayName());
      assertEquals(true, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setLabel("-");
      User user0 = new User("-", "-");
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = ValueLabel.differencesExist(user0, (Variable) rawVariable0, valueLabel0, valueLabel1);
      assertEquals("--", valueLabel1.getDisplayName());
      assertEquals(true, boolean0);
  }
}
