/*
 * This file was automatically generated by EvoSuite
 */

package macaw.businessLayer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.ArrayList;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.User;
import macaw.businessLayer.Variable;
import macaw.system.MacawChangeEvent;
import macaw.system.MacawException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RawVariableEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertNotSame(rawVariable0, rawVariable1);
  }

  @Test
  public void test1()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals(0, arrayList0.size());
  }

  @Test
  public void test2()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("*xeL~Ymf86FE");
      RawVariable rawVariable1 = new RawVariable();
      boolean boolean0 = rawVariable0.hasSameDisplayName((Variable) rawVariable1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = rawVariable0.hasSameDisplayName((Variable) derivedVariable0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.hasSameDisplayName((Variable) rawVariable0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("*xeL~Ymf86FE");
      RawVariable.validateFields(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  @Test
  public void test6()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      try {
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }
}
