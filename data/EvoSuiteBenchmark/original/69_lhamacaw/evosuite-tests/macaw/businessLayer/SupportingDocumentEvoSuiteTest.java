/*
 * This file was automatically generated by EvoSuite
 */

package macaw.businessLayer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.ArrayList;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.system.MacawChangeEvent;
import macaw.system.MacawException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SupportingDocumentEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      assertEquals(false, supportingDocument0.isNewRecord());
      assertEquals("-", supportingDocument1.getDisplayName());
      assertEquals(0, supportingDocument1.getIdentifier());
      assertNotSame(supportingDocument0, supportingDocument1);
  }

  @Test
  public void test1()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = supportingDocument0.isNewRecord();
      assertEquals(false, boolean0);
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
  }

  @Test
  public void test2()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      String string0 = supportingDocument0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      assertNotNull(string0);
      assertEquals(false, supportingDocument0.isNewRecord());
  }

  @Test
  public void test3()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals(false, supportingDocument0.isNewRecord());
      
      supportingDocument0.setIsNewRecord(true);
      assertEquals(true, supportingDocument0.isNewRecord());
  }

  @Test
  public void test4()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User((String) null, (String) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setFilePath("%^&FCBeO!1}>");
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument0);
      assertNotNull(arrayList0);
      assertEquals(false, supportingDocument1.isNewRecord());
      assertEquals(0, supportingDocument1.getIdentifier());
      assertEquals(1, arrayList0.size());
  }

  @Test
  public void test5()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      String string0 = supportingDocument0.getDisplayName();
      assertNotNull(string0);
      assertEquals("-", string0);
      assertEquals(false, supportingDocument0.isNewRecord());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
  }

  @Test
  public void test6()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("%^&FCBeO!1}>");
      try {
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("%^&FCBeO!1}>");
      try {
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("%^&FCBeO!1}>");
      supportingDocument0.setFileName("%^&FCBeO!1}>");
      supportingDocument0.setTitle("%^&FCBeO!1}>");
      SupportingDocument.validateFields(supportingDocument0);
      assertEquals(false, supportingDocument0.isNewRecord());
      assertEquals(0, supportingDocument0.getIdentifier());
  }

  @Test
  public void test9()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setTitle(".D [xz5jZL</U");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      assertNotNull(arrayList0);
      assertEquals(false, supportingDocument0.isNewRecord());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals(1, arrayList0.size());
  }

  @Test
  public void test10()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user0 = new User();
      supportingDocument1.setDocumentCode("Tdn");
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      assertNotNull(arrayList0);
      assertEquals(0, supportingDocument1.getIdentifier());
      assertEquals(1, arrayList0.size());
      assertEquals(false, supportingDocument1.isNewRecord());
  }

  @Test
  public void test11()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setDescription(".D [xz5jZL</U");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      assertEquals(1, arrayList0.size());
      assertNotNull(arrayList0);
      assertEquals(false, supportingDocument0.isNewRecord());
      assertEquals(0, supportingDocument0.getIdentifier());
  }

  @Test
  public void test12()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("Tdn");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      assertEquals(1, arrayList0.size());
      assertNotNull(arrayList0);
      assertEquals(false, supportingDocument0.isNewRecord());
      assertEquals(0, supportingDocument0.getIdentifier());
  }
}
