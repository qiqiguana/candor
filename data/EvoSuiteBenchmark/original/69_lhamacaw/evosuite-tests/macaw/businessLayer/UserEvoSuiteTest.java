/*
 * This file was automatically generated by EvoSuite
 */

package macaw.businessLayer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.ArrayList;
import macaw.businessLayer.User;
import macaw.system.MacawChangeEvent;
import macaw.system.MacawException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UserEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      User user0 = new User();
      assertNotNull(user0);
      
      User user1 = (User)user0.clone();
      assertEquals("0", user1.getDisplayItemIdentifier());
  }

  @Test
  public void test1()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_VARIABLE_IDENIFIER", "UNABLE_TO_GET_VARIABLE_IDENIFIER");
      assertNotNull(user0);
      
      user0.setAffiliation("UNABLE_TO_GET_VARIABLE_IDENIFIER");
      try {
        User.validateFields(user0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      User user0 = new User(">@w", ">@w");
      assertNotNull(user0);
      
      user0.setLastName(">@w");
      User user1 = new User(">@w", ">@w");
      ArrayList<MacawChangeEvent> arrayList0 = User.detectFieldChanges(user0, user1, user0);
      assertEquals(1, arrayList0.size());
      assertNotNull(arrayList0);
      assertEquals(0, user0.getIdentifier());
  }

  @Test
  public void test3()  throws Throwable  {
      User user0 = new User();
      assertNotNull(user0);
      
      String string0 = user0.getDisplayItemIdentifier();
      assertNotNull(string0);
      assertEquals("0", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_VARIABLE_IDENTIFIER", "UNABLE_TO_GET_VARIABLE_IDENTIFIER");
      assertNotNull(user0);
      
      User user1 = new User("MVt=nv40c?^W5MAM+!", "MVt=nv40c?^W5MAM+!");
      user1.setFirstName("MVt=nv40c?^W5MAM+!");
      ArrayList<MacawChangeEvent> arrayList0 = User.detectFieldChanges(user0, user0, user1);
      assertNotNull(arrayList0);
      assertEquals(0, user0.getIdentifier());
      assertEquals(3, arrayList0.size());
  }

  @Test
  public void test5()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_VARIABLE_IDENTIFIER", "UNABLE_TO_GET_VARIABLE_IDENTIFIER");
      assertNotNull(user0);
      
      User user1 = new User("MVt=nv40c?^W5MAM+!", "MVt=nv40c?^W5MAM+!");
      user1.setAffiliation("MVt=nv40c?^W5MAM+!");
      ArrayList<MacawChangeEvent> arrayList0 = User.detectFieldChanges(user0, user0, user1);
      assertEquals(0, user0.getIdentifier());
      assertNotNull(arrayList0);
      assertEquals(3, arrayList0.size());
  }

  @Test
  public void test6()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_VARIABLE_IDENTIFIER", "UNABLE_TO_GET_VARIABLE_IDENTIFIER");
      assertNotNull(user0);
      
      User user1 = new User("MVt=nv40c?^W5MAM+!", "MVt=nv40c?^W5MAM+!");
      user1.setAddressLine1("UNABLE_TO_GET_VARIABLE_IDENTIFIER");
      ArrayList<MacawChangeEvent> arrayList0 = User.detectFieldChanges(user0, user0, user1);
      assertNotNull(arrayList0);
      assertEquals(3, arrayList0.size());
      assertEquals(0, user1.getIdentifier());
  }

  @Test
  public void test7()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_S9c>CE_VARIABLES", "UNABLE_TO_GET_S9c>CE_VARIABLES");
      assertNotNull(user0);
      
      user0.setAddressLine2("UNABLE_TO_GET_S9c>CE_VARIABLES");
      User user1 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = User.detectFieldChanges(user1, user1, user0);
      assertNotNull(arrayList0);
      assertEquals(0, user0.getIdentifier());
      assertEquals(3, arrayList0.size());
      assertEquals("0", user1.getDisplayItemIdentifier());
  }

  @Test
  public void test8()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_S9c>CE_VARIABLES", "UNABLE_TO_GET_S9c>CE_VARIABLES");
      assertNotNull(user0);
      
      user0.setCity("UNABLE_TO_GET_S9c>CE_VARIABLES");
      User user1 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = User.detectFieldChanges(user1, user1, user0);
      assertEquals(3, arrayList0.size());
      assertNotNull(arrayList0);
      assertEquals(0, user1.getIdentifier());
      assertEquals("0", user0.getDisplayItemIdentifier());
  }

  @Test
  public void test9()  throws Throwable  {
      User user0 = new User(">@w", ">@w");
      assertNotNull(user0);
      
      User user1 = new User(">@w", ">@w");
      user0.setCounty(">@w");
      ArrayList<MacawChangeEvent> arrayList0 = User.detectFieldChanges(user0, user1, user0);
      assertEquals(1, arrayList0.size());
      assertEquals(0, user1.getIdentifier());
      assertNotNull(arrayList0);
  }

  @Test
  public void test10()  throws Throwable  {
      User user0 = new User(">@w", ">@w");
      assertNotNull(user0);
      
      User user1 = new User(">@w", ">@w");
      user1.setPostCode(">@w");
      ArrayList<MacawChangeEvent> arrayList0 = User.detectFieldChanges(user0, user1, user0);
      assertEquals(0, user0.getIdentifier());
      assertEquals(1, arrayList0.size());
      assertNotNull(arrayList0);
  }

  @Test
  public void test11()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_VARIABLE_IDENTIFIER", "UNABLE_TO_GET_VARIABLE_IDENTIFIER");
      assertNotNull(user0);
      
      User user1 = new User("MVt=nv40c?^W5MAM+!", "MVt=nv40c?^W5MAM+!");
      user1.setPhone("MVt=nv40c?^W5MAM+!");
      ArrayList<MacawChangeEvent> arrayList0 = User.detectFieldChanges(user0, user0, user1);
      assertEquals(0, user0.getIdentifier());
      assertNotNull(arrayList0);
      assertEquals(3, arrayList0.size());
  }

  @Test
  public void test12()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_VARIABLE_IDENTIFIER", "UNABLE_TO_GET_VARIABLE_IDENTIFIER");
      assertNotNull(user0);
      
      User user1 = new User("MVt=nv40c?^W5MAM+!", "MVt=nv40c?^W5MAM+!");
      user1.setEmail("MVt=nv40c?^W5MAM+!");
      ArrayList<MacawChangeEvent> arrayList0 = User.detectFieldChanges(user0, user0, user1);
      assertNotNull(arrayList0);
      assertEquals(3, arrayList0.size());
      assertEquals(0, user1.getIdentifier());
  }

  @Test
  public void test13()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_VARIABLE_IDENTIFIER", "UNABLE_TO_GET_VARIABLE_IDENTIFIER");
      assertNotNull(user0);
      
      User user1 = new User("MVt=nv40c?^W5MAM+!", "MVt=nv40c?^W5MAM+!");
      user1.setStatus("");
      ArrayList<MacawChangeEvent> arrayList0 = User.detectFieldChanges(user0, user0, user1);
      assertNotNull(arrayList0);
      assertEquals(3, arrayList0.size());
      assertEquals(0, user1.getIdentifier());
  }

  @Test
  public void test14()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_VARIABLE_IDENIFIER", "UNABLE_TO_GET_VARIABLE_IDENIFIER");
      assertNotNull(user0);
      
      User user1 = new User();
      boolean boolean0 = user0.hasSameDisplayName(user1);
      assertEquals(false, boolean0);
      assertEquals("0", user1.getDisplayItemIdentifier());
      assertEquals(0, user0.getIdentifier());
  }

  @Test
  public void test15()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_VARIABLE_IDENTIFIER", "UNABLE_TO_GET_VARIABLE_IDENTIFIER");
      assertNotNull(user0);
      
      boolean boolean0 = user0.hasSameDisplayName(user0);
      assertEquals(true, boolean0);
      assertEquals(0, user0.getIdentifier());
  }

  @Test
  public void test16()  throws Throwable  {
      User.checkValidEmail("Lz@yr.lZaYBJ");
  }

  @Test
  public void test17()  throws Throwable  {
      try {
        User.checkValidEmail("DUPLICATE_CLEANING_STATE");
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
        /*
         * The email value \"DUPLICATE_CLEANING_STATE\" is not valid.
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      User.checkValidUserIDField("user.ube4ID.lab--esl");
  }

  @Test
  public void test19()  throws Throwable  {
      try {
        User.checkValidUserIDField("($gn@]R?SSC[/o(");
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
        /*
         * The field \"User ID\" value \"($gn@]R?SSC[/o(\" may present a security risk.
         */
      }
  }

  @Test
  public void test20()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_VARIABLE_IDENIFIER", "UNABLE_TO_GET_VARIABLE_IDENIFIER");
      assertNotNull(user0);
      
      user0.setFirstName("UNABLE_TO_GET_VARIABLE_IDENIFIER");
      try {
        User.validateFields(user0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test21()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_VARIABLE_IDENTIFIER", "UNABLE_TO_GET_VARIABLE_IDENTIFIER");
      assertNotNull(user0);
      
      user0.setFirstName("MVt=nv40c?^W5MAM+!");
      try {
        User.validateFields(user0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test22()  throws Throwable  {
      User user0 = new User("=1xiuyl", "=1xiuyl");
      assertNotNull(user0);
      
      user0.setLastName("=1xiuyl");
      try {
        User.validateFields(user0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test23()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_VARIABLE_IDENIFIER", "UNABLE_TO_GET_VARIABLE_IDENIFIER");
      assertNotNull(user0);
      
      user0.setLastName("UNABLE_TO_GET_VARIABLE_IDENIFIER");
      try {
        User.validateFields(user0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test24()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_VARIABLE_IDENTIFIER", "UNABLE_TO_GET_VARIABLE_IDENTIFIER");
      assertNotNull(user0);
      
      user0.setAffiliation("MVt=nv40c?^W5MAM+!");
      try {
        User.validateFields(user0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test25()  throws Throwable  {
      User user0 = new User(">@w", ">@w");
      assertNotNull(user0);
      
      user0.setAddressLine1(">@w");
      try {
        User.validateFields(user0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test26()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_VARIABLE_IDENIFIER", "UNABLE_TO_GET_VARIABLE_IDENIFIER");
      assertNotNull(user0);
      
      user0.setAddressLine1("UNABLE_TO_GET_VARIABLE_IDENIFIER");
      try {
        User.validateFields(user0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test27()  throws Throwable  {
      User user0 = new User();
      assertNotNull(user0);
      
      user0.setAddressLine2("8T-A*WeX&$cuFz");
      try {
        User.validateFields(user0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test28()  throws Throwable  {
      User user0 = new User();
      assertNotNull(user0);
      
      user0.setAddressLine2("UNABLE_TO_CHECU_7OCUMENT_DUPLICATES");
      try {
        User.validateFields(user0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test29()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_VARIABLE_IDENIFIER", "UNABLE_TO_GET_VARIABLE_IDENIFIER");
      assertNotNull(user0);
      
      user0.setCity("UNABLE_TO_GET_VARIABLE_IDENIFIER");
      try {
        User.validateFields(user0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test30()  throws Throwable  {
      User user0 = new User();
      assertNotNull(user0);
      
      user0.setCity("8T-A*WeX&$cuFz");
      try {
        User.validateFields(user0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test31()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_VARIABLE_IDENIFIER", "UNABLE_TO_GET_VARIABLE_IDENIFIER");
      assertNotNull(user0);
      
      user0.setCounty("UNABLE_TO_GET_VARIABLE_IDENIFIER");
      try {
        User.validateFields(user0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test32()  throws Throwable  {
      User user0 = new User();
      assertNotNull(user0);
      
      user0.setCounty("8T-A*WeX&$cuFz");
      try {
        User.validateFields(user0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test33()  throws Throwable  {
      User user0 = new User(">@w", ">@w");
      assertNotNull(user0);
      
      user0.setPostCode(">@w");
      try {
        User.validateFields(user0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test34()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_VARIABLE_IDENIFIER", "UNABLE_TO_GET_VARIABLE_IDENIFIER");
      assertNotNull(user0);
      
      user0.setPostCode("UNABLE_TO_GET_VARIABLE_IDENIFIER");
      try {
        User.validateFields(user0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test35()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_VARIABLE_IDENIFIER", "UNABLE_TO_GET_VARIABLE_IDENIFIER");
      assertNotNull(user0);
      
      user0.setPhone("UNABLE_TO_GET_VARIABLE_IDENIFIER");
      try {
        User.validateFields(user0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test36()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_VARIABLE_IDENTIFIER", "UNABLE_TO_GET_VARIABLE_IDENTIFIER");
      assertNotNull(user0);
      
      user0.setPhone("MVt=nv40c?^W5MAM+!");
      try {
        User.validateFields(user0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test37()  throws Throwable  {
      User user0 = new User("=1xiuyl", "=1xiuyl");
      assertNotNull(user0);
      
      user0.setEmail("=1xiuyl");
      try {
        User.validateFields(user0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test38()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_VARIABLE_IDENTIFIER", "UNABLE_TO_GET_VARIABLE_IDENTIFIER");
      assertNotNull(user0);
      
      user0.setStatus("");
      try {
        User.validateFields(user0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test39()  throws Throwable  {
      User user0 = new User(",xhe,/hN9QMd", ",xhe,/hN9QMd");
      assertNotNull(user0);
      
      user0.setStatus(",xhe,/hN9QMd");
      try {
        User.validateFields(user0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }
}
