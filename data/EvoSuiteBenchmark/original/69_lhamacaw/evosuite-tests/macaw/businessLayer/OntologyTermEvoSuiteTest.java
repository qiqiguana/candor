/*
 * This file was automatically generated by EvoSuite
 */

package macaw.businessLayer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.ArrayList;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.User;
import macaw.system.MacawChangeEvent;
import macaw.system.MacawException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class OntologyTermEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      String string0 = ontologyTerm0.getDisplayName();
      assertEquals(true, ontologyTerm0.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("-LHA", string0);
      assertNotNull(string0);
      assertEquals(0, ontologyTerm0.getIdentifier());
  }

  @Test
  public void test1()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = (OntologyTerm)ontologyTerm0.clone();
      assertEquals("-LHA", ontologyTerm1.getDisplayName());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm1.getNameSpace());
      assertEquals(0, ontologyTerm1.getIdentifier());
      assertNotSame(ontologyTerm1, ontologyTerm0);
      assertEquals(true, ontologyTerm1.isNewRecord());
  }

  @Test
  public void test2()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      String string0 = ontologyTerm0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      assertEquals("-LHA", ontologyTerm0.getDisplayName());
      assertEquals(true, ontologyTerm0.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertNotNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = ontologyTerm0.isNewRecord();
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals(true, boolean0);
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("-LHA", ontologyTerm0.getDisplayName());
  }

  @Test
  public void test4()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setTerm("0");
      boolean boolean0 = ontologyTerm0.hasSameDisplayName(ontologyTerm1);
      assertEquals("0-LHA", ontologyTerm0.getDisplayName());
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = ontologyTerm0.hasSameDisplayName(ontologyTerm0);
      assertEquals(true, ontologyTerm0.isNewRecord());
      assertEquals(true, boolean0);
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("-LHA", ontologyTerm0.getDisplayName());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
  }

  @Test
  public void test6()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("0");
      OntologyTerm.validateFields(ontologyTerm0);
      assertEquals("0-LHA", ontologyTerm0.getDisplayName());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
  }

  @Test
  public void test7()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("4a8vqAO@G<kGQ'J:Q4(");
      try {
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("-LHA", ontologyTerm0.getDisplayName());
      
      ontologyTerm0.setOntologyName("");
      try {
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("-LHA", ontologyTerm0.getDisplayName());
      
      ontologyTerm0.setOntologyName("I?h|uP5");
      try {
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      
      ontologyTerm0.setNameSpace("");
      try {
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setTerm("0");
      User user0 = new User("0", "LHA");
      ArrayList<MacawChangeEvent> arrayList0 = OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      assertEquals("0-LHA", ontologyTerm0.getDisplayName());
      assertEquals(1, arrayList0.size());
  }

  @Test
  public void test12()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("-LHA", ontologyTerm0.getDisplayName());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setOntologyName("0");
      User user0 = new User("0", "LHA");
      ArrayList<MacawChangeEvent> arrayList0 = OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      assertEquals(1, arrayList0.size());
  }

  @Test
  public void test13()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setNameSpace("0");
      User user0 = new User("0", "LHA");
      ArrayList<MacawChangeEvent> arrayList0 = OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      assertNotNull(arrayList0);
      assertEquals(0, ontologyTerm1.getIdentifier());
  }

  @Test
  public void test14()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("YQQ2m@ %Z3YbaAk[)I");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User("lha.mrc.ac.uk:LHA", "lha.mrc.ac.uk:LHA");
      ArrayList<MacawChangeEvent> arrayList0 = OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm1);
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm1.getNameSpace());
      assertEquals(true, ontologyTerm1.isNewRecord());
      assertEquals(1, arrayList0.size());
      assertEquals("LHA", ontologyTerm1.getOntologyName());
      assertNotNull(arrayList0);
      assertEquals(0, ontologyTerm1.getIdentifier());
  }
}
