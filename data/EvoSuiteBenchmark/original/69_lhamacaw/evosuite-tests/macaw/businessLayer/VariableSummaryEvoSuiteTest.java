/*
 * This file was automatically generated by EvoSuite
 */

package macaw.businessLayer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import macaw.businessLayer.VariableSummary;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class VariableSummaryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      VariableSummary variableSummary0 = new VariableSummary();
      VariableSummary variableSummary1 = (VariableSummary)variableSummary0.clone();
      assertEquals(false, variableSummary1.isDerived());
      assertEquals("0", variableSummary1.getDisplayItemIdentifier());
      assertNotSame(variableSummary1, variableSummary0);
  }

  @Test
  public void test1()  throws Throwable  {
      VariableSummary variableSummary0 = new VariableSummary();
      boolean boolean0 = variableSummary0.isDerived();
      assertEquals(false, boolean0);
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
  }

  @Test
  public void test2()  throws Throwable  {
      VariableSummary variableSummary0 = new VariableSummary();
      int int0 = variableSummary0.getIdentifier();
      assertEquals(false, variableSummary0.isDerived());
      assertEquals(0, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      VariableSummary variableSummary0 = new VariableSummary();
      String string0 = variableSummary0.getYear();
      assertEquals(false, variableSummary0.isDerived());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertNotNull(string0);
      assertEquals(0, variableSummary0.getIdentifier());
  }

  @Test
  public void test4()  throws Throwable  {
      VariableSummary variableSummary0 = new VariableSummary();
      String string0 = variableSummary0.getLabel();
      assertEquals(false, variableSummary0.isDerived());
      assertEquals(0, variableSummary0.getIdentifier());
      assertNotNull(string0);
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
  }

  @Test
  public void test5()  throws Throwable  {
      VariableSummary variableSummary0 = new VariableSummary();
      String string0 = variableSummary0.getName();
      assertNotNull(string0);
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals(false, variableSummary0.isDerived());
      assertEquals(0, variableSummary0.getIdentifier());
  }

  @Test
  public void test6()  throws Throwable  {
      VariableSummary variableSummary0 = new VariableSummary();
      variableSummary0.setDerived(false);
      assertEquals(false, variableSummary0.isDerived());
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
  }

  @Test
  public void test7()  throws Throwable  {
      VariableSummary variableSummary0 = new VariableSummary();
      boolean boolean0 = variableSummary0.hasSameDisplayName(variableSummary0);
      assertEquals(false, variableSummary0.isDerived());
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals(true, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      VariableSummary variableSummary0 = new VariableSummary();
      String string0 = variableSummary0.getDisplayItemIdentifier();
      assertNotNull(string0);
      assertEquals("0", string0);
      assertEquals(false, variableSummary0.isDerived());
  }

  @Test
  public void test9()  throws Throwable  {
      VariableSummary variableSummary0 = new VariableSummary();
      VariableSummary variableSummary1 = new VariableSummary();
      variableSummary0.setName("Z}1O@");
      boolean boolean0 = variableSummary0.hasSameDisplayName(variableSummary1);
      assertEquals(false, boolean0);
      assertEquals(false, variableSummary1.isDerived());
      assertEquals("0", variableSummary1.getDisplayItemIdentifier());
  }
}
