/*
 * This file was automatically generated by EvoSuite
 */

package macaw.persistenceLayer.demo;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.ArrayList;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.User;
import macaw.persistenceLayer.demo.InMemoryChangeEventManager;
import macaw.persistenceLayer.demo.InMemoryOntologyTermManager;
import macaw.system.MacawException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class InMemoryOntologyTermManagerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("HF");
      inMemoryOntologyTermManager0.addOntologyTerm((User) null, ontologyTerm0);
      User user0 = new User();
      inMemoryOntologyTermManager0.updateOntologyTerm(user0, ontologyTerm0);
      assertEquals(false, ontologyTerm0.isNewRecord());
      assertEquals("1", ontologyTerm0.getDisplayItemIdentifier());
  }

  @Test
  public void test1()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      inMemoryOntologyTermManager0.clear();
  }

  @Test
  public void test2()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("UyABLE_TO_VALIDATE_USER");
      inMemoryOntologyTermManager0.addOntologyTerm((User) null, ontologyTerm0);
      assertEquals(false, ontologyTerm0.isNewRecord());
      
      ArrayList<OntologyTerm> arrayList0 = inMemoryOntologyTermManager0.getAllOntologyTerms((User) null);
      inMemoryOntologyTermManager0.deleteOntologyTerms((User) null, arrayList0);
      try {
        inMemoryOntologyTermManager0.deleteOntologyTerms((User) null, arrayList0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
        /*
         * \"UyABLE_TO_VALIDATE_USER-LHA\" does not exist.
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("UyABLE_TO_VALIDATE_USER");
      inMemoryOntologyTermManager0.addOntologyTerm((User) null, ontologyTerm0);
      int int0 = inMemoryOntologyTermManager0.getOntologyTermIdentifier(ontologyTerm0);
      assertEquals(false, ontologyTerm0.isNewRecord());
      assertEquals(1, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("HF");
      inMemoryOntologyTermManager0.addOntologyTerm((User) null, ontologyTerm0);
      assertEquals(false, ontologyTerm0.isNewRecord());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      int int0 = inMemoryOntologyTermManager0.getOntologyTermIdentifier(ontologyTerm1);
      assertEquals((-1), int0);
  }
}
