/*
 * This file was automatically generated by EvoSuite
 */

package macaw.persistenceLayer.demo;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.ArrayList;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.User;
import macaw.persistenceLayer.demo.InMemoryOntologyTermFilter;
import macaw.system.MacawException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class InMemoryOntologyTermFilterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      InMemoryOntologyTermFilter inMemoryOntologyTermFilter0 = new InMemoryOntologyTermFilter();
      User user0 = new User();
      try {
        inMemoryOntologyTermFilter0.filterOntologyTerms(user0, "", "");
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
        /*
         * Please specify a search phrase for the term, the description or both.
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      InMemoryOntologyTermFilter inMemoryOntologyTermFilter0 = new InMemoryOntologyTermFilter();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      inMemoryOntologyTermFilter0.setOntologyTerms(arrayList0);
      User user0 = new User("V*", "V*");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = inMemoryOntologyTermFilter0.filterOntologyTerms(user0, "", "V*");
      assertNotNull(arrayList1);
      assertEquals(false, arrayList1.isEmpty());
  }

  @Test
  public void test2()  throws Throwable  {
      InMemoryOntologyTermFilter inMemoryOntologyTermFilter0 = new InMemoryOntologyTermFilter();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      inMemoryOntologyTermFilter0.setOntologyTerms(arrayList0);
      User user0 = new User("V*", "V*");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      ontologyTerm1.setOntologyName("V*");
      ArrayList<OntologyTerm> arrayList1 = inMemoryOntologyTermFilter0.filterOntologyTerms(user0, "", "V*");
      assertNotNull(arrayList1);
      assertEquals(2, arrayList1.size());
  }

  @Test
  public void test3()  throws Throwable  {
      InMemoryOntologyTermFilter inMemoryOntologyTermFilter0 = new InMemoryOntologyTermFilter();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      inMemoryOntologyTermFilter0.setOntologyTerms(arrayList0);
      User user0 = new User("V*", "V*");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = inMemoryOntologyTermFilter0.filterOntologyTerms(user0, "V*", "rS}=T36U.<nB?v");
      assertEquals(true, arrayList1.isEmpty());
      assertNotNull(arrayList1);
  }

  @Test
  public void test4()  throws Throwable  {
      InMemoryOntologyTermFilter inMemoryOntologyTermFilter0 = new InMemoryOntologyTermFilter();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      inMemoryOntologyTermFilter0.setOntologyTerms(arrayList0);
      User user0 = new User("V*", "V*");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = inMemoryOntologyTermFilter0.filterOntologyTerms(user0, "rS}=T36U.<nB?v", "V*");
      assertNotNull(arrayList1);
      assertEquals(0, arrayList1.size());
  }

  @Test
  public void test5()  throws Throwable  {
      InMemoryOntologyTermFilter inMemoryOntologyTermFilter0 = new InMemoryOntologyTermFilter();
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = inMemoryOntologyTermFilter0.filterOntologyTerms(user0, "X;", "");
      assertEquals(true, arrayList0.isEmpty());
  }
}
