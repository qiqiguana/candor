/*
 * This file was automatically generated by EvoSuite
 */

package macaw.persistenceLayer.demo;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.ArrayList;
import java.util.MissingResourceException;
import macaw.businessLayer.Category;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.persistenceLayer.demo.InMemoryChangeEventManager;
import macaw.persistenceLayer.demo.InMemoryListChoiceManager;
import macaw.persistenceLayer.demo.InMemoryOntologyTermManager;
import macaw.persistenceLayer.demo.InMemorySupportingDocumentsManager;
import macaw.persistenceLayer.demo.InMemoryVariableManager;
import macaw.system.MacawException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class InMemoryVariableManagerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryListChoiceManager inMemoryListChoiceManager0 = new InMemoryListChoiceManager(inMemoryChangeEventManager0);
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      User user0 = new User();
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      InMemoryVariableManager inMemoryVariableManager0 = new InMemoryVariableManager(inMemoryChangeEventManager0, inMemoryListChoiceManager0, inMemoryOntologyTermManager0, inMemorySupportingDocumentsManager0);
      ArrayList<Variable> arrayList0 = inMemoryVariableManager0.getOriginalVariables(user0);
      assertNotNull(arrayList0);
      
      RawVariable rawVariable0 = new RawVariable();
      arrayList0.add((Variable) rawVariable0);
      ArrayList<Variable> arrayList1 = inMemoryVariableManager0.getVariables(user0);
      assertFalse(arrayList1.equals(arrayList0));
      assertNotNull(arrayList1);
      assertEquals(1, arrayList1.size());
  }

  @Test
  public void test1()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryListChoiceManager inMemoryListChoiceManager0 = new InMemoryListChoiceManager(inMemoryChangeEventManager0);
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      InMemoryVariableManager inMemoryVariableManager0 = new InMemoryVariableManager(inMemoryChangeEventManager0, inMemoryListChoiceManager0, inMemoryOntologyTermManager0, inMemorySupportingDocumentsManager0);
      inMemoryVariableManager0.clear();
  }

  @Test
  public void test2()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryListChoiceManager inMemoryListChoiceManager0 = new InMemoryListChoiceManager(inMemoryChangeEventManager0);
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      InMemoryVariableManager inMemoryVariableManager0 = new InMemoryVariableManager(inMemoryChangeEventManager0, inMemoryListChoiceManager0, inMemoryOntologyTermManager0, inMemorySupportingDocumentsManager0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      try {
        inMemoryVariableManager0.associateSupportingDocuments((User) null, (Variable) derivedVariable0, arrayList0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
        /*
         * \"\" does not exist.
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryListChoiceManager inMemoryListChoiceManager0 = new InMemoryListChoiceManager(inMemoryChangeEventManager0);
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      InMemoryVariableManager inMemoryVariableManager0 = new InMemoryVariableManager(inMemoryChangeEventManager0, inMemoryListChoiceManager0, inMemoryOntologyTermManager0, inMemorySupportingDocumentsManager0);
      RawVariable rawVariable0 = new RawVariable();
      try {
        inMemoryVariableManager0.addRawVariable((User) null, rawVariable0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryListChoiceManager inMemoryListChoiceManager0 = new InMemoryListChoiceManager(inMemoryChangeEventManager0);
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      User user0 = new User();
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      InMemoryVariableManager inMemoryVariableManager0 = new InMemoryVariableManager(inMemoryChangeEventManager0, inMemoryListChoiceManager0, inMemoryOntologyTermManager0, inMemorySupportingDocumentsManager0);
      ArrayList<Variable> arrayList0 = inMemoryVariableManager0.getVariables(user0);
      assertEquals(0, arrayList0.size());
  }

  @Test
  public void test5()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryListChoiceManager inMemoryListChoiceManager0 = new InMemoryListChoiceManager(inMemoryChangeEventManager0);
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      User user0 = new User();
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      InMemoryVariableManager inMemoryVariableManager0 = new InMemoryVariableManager(inMemoryChangeEventManager0, inMemoryListChoiceManager0, inMemoryOntologyTermManager0, inMemorySupportingDocumentsManager0);
      ArrayList<RawVariable> arrayList0 = new ArrayList<RawVariable>();
      inMemoryVariableManager0.deleteRawVariables(user0, arrayList0);
      assertEquals("0", user0.getDisplayItemIdentifier());
  }

  @Test
  public void test6()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryListChoiceManager inMemoryListChoiceManager0 = new InMemoryListChoiceManager(inMemoryChangeEventManager0);
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      User user0 = new User();
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      InMemoryVariableManager inMemoryVariableManager0 = new InMemoryVariableManager(inMemoryChangeEventManager0, inMemoryListChoiceManager0, inMemoryOntologyTermManager0, inMemorySupportingDocumentsManager0);
      ArrayList<Variable> arrayList0 = inMemoryVariableManager0.getOriginalVariables(user0);
      assertNotNull(arrayList0);
      
      RawVariable rawVariable0 = new RawVariable();
      arrayList0.add((Variable) rawVariable0);
      ArrayList<VariableSummary> arrayList1 = inMemoryVariableManager0.getSummaryDataForAllVariables(user0);
      assertEquals(1, arrayList1.size());
      assertNotNull(arrayList1);
  }

  @Test
  public void test7()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryListChoiceManager inMemoryListChoiceManager0 = new InMemoryListChoiceManager(inMemoryChangeEventManager0);
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      InMemoryVariableManager inMemoryVariableManager0 = new InMemoryVariableManager(inMemoryChangeEventManager0, inMemoryListChoiceManager0, inMemoryOntologyTermManager0, inMemorySupportingDocumentsManager0);
      User user0 = new User("'", "'");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      // Undeclared exception!
      try {
        inMemoryVariableManager0.getCompleteVariableData(user0, variableSummary0);
        fail("Expecting exception: MissingResourceException");
      } catch(MissingResourceException e) {
        /*
         * Can't find resource for bundle java.util.PropertyResourceBundle, key variable.error.nonExistent
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryListChoiceManager inMemoryListChoiceManager0 = new InMemoryListChoiceManager(inMemoryChangeEventManager0);
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      InMemoryVariableManager inMemoryVariableManager0 = new InMemoryVariableManager(inMemoryChangeEventManager0, inMemoryListChoiceManager0, inMemoryOntologyTermManager0, inMemorySupportingDocumentsManager0);
      User user0 = new User((String) null, (String) null);
      ArrayList<Category> arrayList0 = inMemoryVariableManager0.getCategoriesForVariable(user0, (String) null);
      assertEquals("[]", arrayList0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryListChoiceManager inMemoryListChoiceManager0 = new InMemoryListChoiceManager(inMemoryChangeEventManager0);
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      User user0 = new User();
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      InMemoryVariableManager inMemoryVariableManager0 = new InMemoryVariableManager(inMemoryChangeEventManager0, inMemoryListChoiceManager0, inMemoryOntologyTermManager0, inMemorySupportingDocumentsManager0);
      ArrayList<Variable> arrayList0 = inMemoryVariableManager0.getOriginalVariables(user0);
      RawVariable rawVariable0 = new RawVariable();
      arrayList0.add((Variable) rawVariable0);
      RawVariable rawVariable1 = (RawVariable)inMemoryVariableManager0.getVariable(user0, "L4~<nZ@IT-DL<");
      assertNull(rawVariable1);
  }

  @Test
  public void test10()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryListChoiceManager inMemoryListChoiceManager0 = new InMemoryListChoiceManager(inMemoryChangeEventManager0);
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      User user0 = new User();
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      InMemoryVariableManager inMemoryVariableManager0 = new InMemoryVariableManager(inMemoryChangeEventManager0, inMemoryListChoiceManager0, inMemoryOntologyTermManager0, inMemorySupportingDocumentsManager0);
      ArrayList<Variable> arrayList0 = inMemoryVariableManager0.getOriginalVariables(user0);
      assertNotNull(arrayList0);
      
      RawVariable rawVariable0 = new RawVariable();
      arrayList0.add((Variable) rawVariable0);
      ArrayList<VariableSummary> arrayList1 = inMemoryVariableManager0.getVariableSummariesForCategory(user0, "L4~<nZ@IT-DL<");
      assertNotNull(arrayList1);
      assertEquals(true, arrayList1.isEmpty());
  }

  @Test
  public void test11()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryListChoiceManager inMemoryListChoiceManager0 = new InMemoryListChoiceManager(inMemoryChangeEventManager0);
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      User user0 = new User();
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      InMemoryVariableManager inMemoryVariableManager0 = new InMemoryVariableManager(inMemoryChangeEventManager0, inMemoryListChoiceManager0, inMemoryOntologyTermManager0, inMemorySupportingDocumentsManager0);
      ArrayList<Variable> arrayList0 = inMemoryVariableManager0.getOriginalVariables(user0);
      RawVariable rawVariable0 = new RawVariable();
      arrayList0.add((Variable) rawVariable0);
      String[] stringArray0 = inMemoryVariableManager0.getStudyYears(user0);
      assertNotNull(stringArray0);
  }

  @Test
  public void test12()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryListChoiceManager inMemoryListChoiceManager0 = new InMemoryListChoiceManager(inMemoryChangeEventManager0);
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      User user0 = new User();
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      InMemoryVariableManager inMemoryVariableManager0 = new InMemoryVariableManager(inMemoryChangeEventManager0, inMemoryListChoiceManager0, inMemoryOntologyTermManager0, inMemorySupportingDocumentsManager0);
      ArrayList<Variable> arrayList0 = inMemoryVariableManager0.getOriginalVariables(user0);
      RawVariable rawVariable0 = new RawVariable();
      arrayList0.add((Variable) rawVariable0);
      String[] stringArray0 = inMemoryVariableManager0.getVariableNames(user0);
      assertNotNull(stringArray0);
  }

  @Test
  public void test13()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryListChoiceManager inMemoryListChoiceManager0 = new InMemoryListChoiceManager(inMemoryChangeEventManager0);
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      User user0 = new User();
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      InMemoryVariableManager inMemoryVariableManager0 = new InMemoryVariableManager(inMemoryChangeEventManager0, inMemoryListChoiceManager0, inMemoryOntologyTermManager0, inMemorySupportingDocumentsManager0);
      ArrayList<Variable> arrayList0 = inMemoryVariableManager0.getOriginalVariables(user0);
      RawVariable rawVariable0 = new RawVariable();
      arrayList0.add((Variable) rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      inMemoryVariableManager0.updateOntologyTermReferences(ontologyTerm0);
      assertEquals("", ontologyTerm0.getTerm());
  }

  @Test
  public void test14()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryListChoiceManager inMemoryListChoiceManager0 = new InMemoryListChoiceManager(inMemoryChangeEventManager0);
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      User user0 = new User();
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      InMemoryVariableManager inMemoryVariableManager0 = new InMemoryVariableManager(inMemoryChangeEventManager0, inMemoryListChoiceManager0, inMemoryOntologyTermManager0, inMemorySupportingDocumentsManager0);
      ArrayList<Variable> arrayList0 = inMemoryVariableManager0.getOriginalVariables(user0);
      RawVariable rawVariable0 = new RawVariable();
      arrayList0.add((Variable) rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      inMemoryVariableManager0.updateOntologyTermReferences(ontologyTerm0);
      assertEquals("-LHA", ontologyTerm0.getDisplayName());
  }

  @Test
  public void test15()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryListChoiceManager inMemoryListChoiceManager0 = new InMemoryListChoiceManager(inMemoryChangeEventManager0);
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      InMemoryVariableManager inMemoryVariableManager0 = new InMemoryVariableManager(inMemoryChangeEventManager0, inMemoryListChoiceManager0, inMemoryOntologyTermManager0, inMemorySupportingDocumentsManager0);
      User user0 = new User("variable.notes.label", "variable.notes.label");
      RawVariable rawVariable0 = new RawVariable();
      int int0 = inMemoryVariableManager0.getRawVariableIdentifier(user0, rawVariable0);
      assertEquals((-1), int0);
  }

  @Test
  public void test16()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryListChoiceManager inMemoryListChoiceManager0 = new InMemoryListChoiceManager(inMemoryChangeEventManager0);
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      User user0 = new User();
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      InMemoryVariableManager inMemoryVariableManager0 = new InMemoryVariableManager(inMemoryChangeEventManager0, inMemoryListChoiceManager0, inMemoryOntologyTermManager0, inMemorySupportingDocumentsManager0);
      ArrayList<Variable> arrayList0 = inMemoryVariableManager0.getOriginalVariables(user0);
      assertNotNull(arrayList0);
      
      RawVariable rawVariable0 = new RawVariable();
      arrayList0.add((Variable) rawVariable0);
      int int0 = inMemoryVariableManager0.getRawVariableIdentifier(user0, rawVariable0);
      assertEquals(0, int0);
  }

  @Test
  public void test17()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryListChoiceManager inMemoryListChoiceManager0 = new InMemoryListChoiceManager(inMemoryChangeEventManager0);
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      User user0 = new User();
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      InMemoryVariableManager inMemoryVariableManager0 = new InMemoryVariableManager(inMemoryChangeEventManager0, inMemoryListChoiceManager0, inMemoryOntologyTermManager0, inMemorySupportingDocumentsManager0);
      ArrayList<Variable> arrayList0 = inMemoryVariableManager0.getOriginalVariables(user0);
      assertNotNull(arrayList0);
      
      RawVariable rawVariable0 = new RawVariable();
      arrayList0.add((Variable) rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      int int0 = inMemoryVariableManager0.getDerivedVariableIdentifier(user0, derivedVariable0);
      assertEquals((-1), int0);
  }

  @Test
  public void test18()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryListChoiceManager inMemoryListChoiceManager0 = new InMemoryListChoiceManager(inMemoryChangeEventManager0);
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      User user0 = new User();
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      InMemoryVariableManager inMemoryVariableManager0 = new InMemoryVariableManager(inMemoryChangeEventManager0, inMemoryListChoiceManager0, inMemoryOntologyTermManager0, inMemorySupportingDocumentsManager0);
      ArrayList<Variable> arrayList0 = inMemoryVariableManager0.getOriginalVariables(user0);
      assertNotNull(arrayList0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      arrayList0.add((Variable) derivedVariable0);
      int int0 = inMemoryVariableManager0.getDerivedVariableIdentifier(user0, derivedVariable0);
      assertEquals(0, int0);
  }

  @Test
  public void test19()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemoryListChoiceManager inMemoryListChoiceManager0 = new InMemoryListChoiceManager(inMemoryChangeEventManager0);
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      User user0 = new User();
      InMemoryOntologyTermManager inMemoryOntologyTermManager0 = new InMemoryOntologyTermManager(inMemoryChangeEventManager0);
      InMemoryVariableManager inMemoryVariableManager0 = new InMemoryVariableManager(inMemoryChangeEventManager0, inMemoryListChoiceManager0, inMemoryOntologyTermManager0, inMemorySupportingDocumentsManager0);
      ArrayList<Variable> arrayList0 = inMemoryVariableManager0.getOriginalVariables(user0);
      RawVariable rawVariable0 = new RawVariable();
      arrayList0.add((Variable) rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try {
        inMemoryVariableManager0.addDerivedVariable(user0, derivedVariable0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
        /*
         * Non-existent availability state \"\" used for variable \"{1}\".
         */
      }
  }
}
