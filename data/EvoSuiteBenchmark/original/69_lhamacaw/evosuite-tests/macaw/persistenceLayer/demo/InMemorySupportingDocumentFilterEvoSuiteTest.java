/*
 * This file was automatically generated by EvoSuite
 */

package macaw.persistenceLayer.demo;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.ArrayList;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.persistenceLayer.demo.InMemorySupportingDocumentFilter;
import macaw.system.MacawException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class InMemorySupportingDocumentFilterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      InMemorySupportingDocumentFilter inMemorySupportingDocumentFilter0 = new InMemorySupportingDocumentFilter();
      User user0 = new User("HU8p^V}W", "HU8p^V}W");
      try {
        inMemorySupportingDocumentFilter0.filterSupportingDocuments(user0, (String) null, (String) null);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
        /*
         * Please specify a search phrase for the document title, the document code or both.
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      InMemorySupportingDocumentFilter inMemorySupportingDocumentFilter0 = new InMemorySupportingDocumentFilter();
      User user0 = new User("HU8p^V}W", "HU8p^V}W");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      inMemorySupportingDocumentFilter0.setSupportingDocuments(arrayList0);
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = inMemorySupportingDocumentFilter0.filterSupportingDocuments(user0, "-vCAysP1&|", "-vCAysP1&|");
      assertNotNull(arrayList1);
      assertEquals(2, arrayList1.size());
  }

  @Test
  public void test2()  throws Throwable  {
      InMemorySupportingDocumentFilter inMemorySupportingDocumentFilter0 = new InMemorySupportingDocumentFilter();
      User user0 = new User("HU8p^V}W", "HU8p^V}W");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      inMemorySupportingDocumentFilter0.setSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = inMemorySupportingDocumentFilter0.filterSupportingDocuments(user0, "HU8p^V}W", "HU8p^V}W");
      assertEquals("[]", arrayList1.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      InMemorySupportingDocumentFilter inMemorySupportingDocumentFilter0 = new InMemorySupportingDocumentFilter();
      User user0 = new User("HU8p^V}W", "HU8p^V}W");
      ArrayList<SupportingDocument> arrayList0 = inMemorySupportingDocumentFilter0.filterSupportingDocuments(user0, "-vCAysP1&|", (String) null);
      assertEquals("[]", arrayList0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      InMemorySupportingDocumentFilter inMemorySupportingDocumentFilter0 = new InMemorySupportingDocumentFilter();
      User user0 = new User("HU8p^V}W", "HU8p^V}W");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      inMemorySupportingDocumentFilter0.setSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = inMemorySupportingDocumentFilter0.filterSupportingDocuments(user0, (String) null, "HU8p^V}W");
      assertEquals(true, arrayList1.isEmpty());
      assertNotNull(arrayList1);
  }
}
