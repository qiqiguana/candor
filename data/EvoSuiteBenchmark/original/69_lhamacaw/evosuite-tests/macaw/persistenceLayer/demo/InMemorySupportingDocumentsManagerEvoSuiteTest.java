/*
 * This file was automatically generated by EvoSuite
 */

package macaw.persistenceLayer.demo;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.ArrayList;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.persistenceLayer.demo.InMemoryChangeEventManager;
import macaw.persistenceLayer.demo.InMemorySupportingDocumentsManager;
import macaw.system.MacawException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class InMemorySupportingDocumentsManagerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      inMemorySupportingDocumentsManager0.clear();
  }

  @Test
  public void test1()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      User user0 = new User();
      ArrayList<SupportingDocument> arrayList0 = inMemorySupportingDocumentsManager0.getAllSupportingDocuments(user0);
      inMemorySupportingDocumentsManager0.deleteSupportingDocuments(user0, arrayList0);
      assertEquals("", user0.getPassword());
  }

  @Test
  public void test2()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      int int0 = inMemorySupportingDocumentsManager0.getSupportingDocumentIdentifier(supportingDocument0);
      assertEquals((-1), int0);
  }

  @Test
  public void test3()  throws Throwable  {
      InMemoryChangeEventManager inMemoryChangeEventManager0 = new InMemoryChangeEventManager();
      InMemorySupportingDocumentsManager inMemorySupportingDocumentsManager0 = new InMemorySupportingDocumentsManager(inMemoryChangeEventManager0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try {
        inMemorySupportingDocumentsManager0.checkSupportingDocumentExists(supportingDocument0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
        /*
         * \"-\" does not exist.
         */
      }
  }
}
