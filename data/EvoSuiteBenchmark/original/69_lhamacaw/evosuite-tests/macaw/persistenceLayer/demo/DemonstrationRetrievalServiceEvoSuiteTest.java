/*
 * This file was automatically generated by EvoSuite
 */

package macaw.persistenceLayer.demo;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.ArrayList;
import java.util.regex.PatternSyntaxException;
import macaw.businessLayer.AliasFilePath;
import macaw.businessLayer.AvailabilityState;
import macaw.businessLayer.Category;
import macaw.businessLayer.CleaningState;
import macaw.businessLayer.User;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.persistenceLayer.demo.DemonstrationRetrievalService;
import macaw.system.MacawException;
import macaw.system.SessionProperties;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DemonstrationRetrievalServiceEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      DemonstrationRetrievalService demonstrationRetrievalService0 = new DemonstrationRetrievalService(sessionProperties0);
      User user0 = new User("(hTAOt4[Q", "(hTAOt4[Q");
      ArrayList<AvailabilityState> arrayList0 = demonstrationRetrievalService0.getAvailabilityStates(user0);
      assertEquals(false, arrayList0.isEmpty());
  }

  @Test
  public void test1()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      DemonstrationRetrievalService demonstrationRetrievalService0 = new DemonstrationRetrievalService(sessionProperties0, true);
      // Undeclared exception!
      try {
        demonstrationRetrievalService0.getUnverifiedUsers((User) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      DemonstrationRetrievalService demonstrationRetrievalService0 = new DemonstrationRetrievalService(sessionProperties0);
      User user0 = new User();
      // Undeclared exception!
      try {
        demonstrationRetrievalService0.getSupportingDocuments(user0, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      DemonstrationRetrievalService demonstrationRetrievalService0 = new DemonstrationRetrievalService(sessionProperties0);
      ArrayList<User> arrayList0 = demonstrationRetrievalService0.getUsers((User) null);
      assertEquals("[]", arrayList0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      DemonstrationRetrievalService demonstrationRetrievalService0 = new DemonstrationRetrievalService(sessionProperties0);
      User user0 = new User();
      User user1 = demonstrationRetrievalService0.getUserFromID(user0, "_");
      assertNull(user1);
  }

  @Test
  public void test5()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      DemonstrationRetrievalService demonstrationRetrievalService0 = new DemonstrationRetrievalService(sessionProperties0);
      User user0 = new User("/NUo/p4", "/NUo/p4");
      // Undeclared exception!
      try {
        demonstrationRetrievalService0.getAliasFilePath(user0, "{=+V|gwp");
        fail("Expecting exception: PatternSyntaxException");
      } catch(PatternSyntaxException e) {
        /*
         * Illegal repetition near index 1
         * .*{=+V|GWP.*
         *  ^
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      DemonstrationRetrievalService demonstrationRetrievalService0 = new DemonstrationRetrievalService(sessionProperties0, false);
      // Undeclared exception!
      try {
        demonstrationRetrievalService0.getOntologyTerms((User) null, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      DemonstrationRetrievalService demonstrationRetrievalService0 = new DemonstrationRetrievalService(sessionProperties0);
      User user0 = new User("/NUo/p4", "/NUo/p4");
      ArrayList<Category> arrayList0 = demonstrationRetrievalService0.getCategories(user0);
      assertEquals(28, arrayList0.size());
  }

  @Test
  public void test8()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      DemonstrationRetrievalService demonstrationRetrievalService0 = new DemonstrationRetrievalService(sessionProperties0);
      ArrayList<AliasFilePath> arrayList0 = demonstrationRetrievalService0.getAliasFilePaths((User) null);
      assertEquals(4, arrayList0.size());
  }

  @Test
  public void test9()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      DemonstrationRetrievalService demonstrationRetrievalService0 = new DemonstrationRetrievalService(sessionProperties0);
      User user0 = new User();
      User user1 = demonstrationRetrievalService0.getUserFromEmail(user0, "_");
      assertNull(user1);
  }

  @Test
  public void test10()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      DemonstrationRetrievalService demonstrationRetrievalService0 = new DemonstrationRetrievalService(sessionProperties0);
      String[] stringArray0 = demonstrationRetrievalService0.getVariableNames((User) null);
      assertNotNull(stringArray0);
  }

  @Test
  public void test11()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      DemonstrationRetrievalService demonstrationRetrievalService0 = new DemonstrationRetrievalService(sessionProperties0);
      User user0 = new User();
      ArrayList<AliasFilePath> arrayList0 = demonstrationRetrievalService0.getAliasFilePathsMatchingName(user0, ".");
      assertEquals(false, arrayList0.isEmpty());
  }

  @Test
  public void test12()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      DemonstrationRetrievalService demonstrationRetrievalService0 = new DemonstrationRetrievalService(sessionProperties0);
      Variable variable0 = demonstrationRetrievalService0.getVariable((User) null, "");
      assertNull(variable0);
  }

  @Test
  public void test13()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      DemonstrationRetrievalService demonstrationRetrievalService0 = new DemonstrationRetrievalService(sessionProperties0);
      User user0 = new User("/NUo/p4", "/NUo/p4");
      ArrayList<VariableSummary> arrayList0 = demonstrationRetrievalService0.getVariableSummariesForCategory(user0, "/NUo/p4");
      assertEquals(0, arrayList0.size());
  }

  @Test
  public void test14()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      DemonstrationRetrievalService demonstrationRetrievalService0 = new DemonstrationRetrievalService(sessionProperties0);
      User user0 = new User();
      ArrayList<Category> arrayList0 = demonstrationRetrievalService0.getCategoriesForVariable(user0, "");
      assertEquals(0, arrayList0.size());
  }

  @Test
  public void test15()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      DemonstrationRetrievalService demonstrationRetrievalService0 = new DemonstrationRetrievalService(sessionProperties0);
      User user0 = new User("(hTAOt4[Q", "(hTAOt4[Q");
      // Undeclared exception!
      try {
        demonstrationRetrievalService0.getValueLabels(user0, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      DemonstrationRetrievalService demonstrationRetrievalService0 = new DemonstrationRetrievalService(sessionProperties0);
      User user0 = new User();
      ArrayList<CleaningState> arrayList0 = demonstrationRetrievalService0.getCleaningStates(user0);
      assertEquals(false, arrayList0.isEmpty());
  }
}
