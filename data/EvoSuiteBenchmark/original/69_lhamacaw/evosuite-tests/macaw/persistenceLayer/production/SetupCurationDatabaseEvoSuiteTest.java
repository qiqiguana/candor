/*
 * This file was automatically generated by EvoSuite
 */

package macaw.persistenceLayer.production;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.MissingResourceException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import macaw.persistenceLayer.production.SetupCurationDatabase;
import macaw.system.MacawException;
import macaw.system.SessionProperties;
import macaw.system.StartupOptions;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SetupCurationDatabaseEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          SessionProperties sessionProperties0 = new SessionProperties();
          SetupCurationDatabase setupCurationDatabase0 = new SetupCurationDatabase(sessionProperties0);
          // Undeclared exception!
          try {
            setupCurationDatabase0.setup();
            fail("Expecting exception: MissingResourceException");
          } catch(MissingResourceException e) {
            /*
             * Can't find resource for bundle java.util.PropertyResourceBundle, key sqlDB.error.unableToCreateDatabase
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test1()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      SetupCurationDatabase setupCurationDatabase0 = new SetupCurationDatabase(sessionProperties0);
      // Undeclared exception!
      try {
        setupCurationDatabase0.dropDatabase();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          SessionProperties sessionProperties0 = new SessionProperties();
          SetupCurationDatabase setupCurationDatabase0 = new SetupCurationDatabase(sessionProperties0);
          setupCurationDatabase0.setStartUpPropertiesFileName("Mq!ja;zhk");
          setupCurationDatabase0.run();
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test3()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          SessionProperties sessionProperties0 = new SessionProperties();
          StartupOptions startupOptions0 = sessionProperties0.getStartupOptions();
          SetupCurationDatabase setupCurationDatabase0 = new SetupCurationDatabase(sessionProperties0);
          startupOptions0.setDbUser("+5c");
          // Undeclared exception!
          try {
            setupCurationDatabase0.setup();
            fail("Expecting exception: MissingResourceException");
          } catch(MissingResourceException e) {
            /*
             * Can't find resource for bundle java.util.PropertyResourceBundle, key sqlDB.error.unableToCreateDatabase
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test4()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          SessionProperties sessionProperties0 = new SessionProperties();
          SetupCurationDatabase setupCurationDatabase0 = new SetupCurationDatabase(sessionProperties0);
          setupCurationDatabase0.run();
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test5()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          SessionProperties sessionProperties0 = new SessionProperties();
          StartupOptions startupOptions0 = sessionProperties0.getStartupOptions();
          SetupCurationDatabase setupCurationDatabase0 = new SetupCurationDatabase(sessionProperties0);
          startupOptions0.setDbUser("+5c");
          setupCurationDatabase0.run();
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }
}
