/*
 * This file was automatically generated by EvoSuite
 */

package macaw.persistenceLayer.production;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.User;
import macaw.businessLayer.VariableSummary;
import macaw.persistenceLayer.production.SQLChangeEventManager;
import macaw.persistenceLayer.production.SQLListChoiceManager;
import macaw.persistenceLayer.production.SQLOntologyTermManager;
import macaw.persistenceLayer.production.SQLSupportingDocumentsManager;
import macaw.persistenceLayer.production.SQLVariableManager;
import macaw.system.Log;
import macaw.system.MacawException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SQLVariableManagerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      SQLOntologyTermManager sQLOntologyTermManager0 = new SQLOntologyTermManager(sQLChangeEventManager0);
      SQLSupportingDocumentsManager sQLSupportingDocumentsManager0 = new SQLSupportingDocumentsManager(sQLChangeEventManager0);
      SQLVariableManager sQLVariableManager0 = new SQLVariableManager(sQLChangeEventManager0, sQLListChoiceManager0, sQLOntologyTermManager0, sQLSupportingDocumentsManager0);
      // Undeclared exception!
      try {
        sQLVariableManager0.createTables((Connection) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      SQLOntologyTermManager sQLOntologyTermManager0 = new SQLOntologyTermManager(sQLChangeEventManager0);
      SQLVariableManager sQLVariableManager0 = new SQLVariableManager(sQLChangeEventManager0, sQLListChoiceManager0, sQLOntologyTermManager0, (SQLSupportingDocumentsManager) null);
      User user0 = new User("", "");
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try {
        sQLVariableManager0.getRawVariableIdentifier((Connection) null, user0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      SQLOntologyTermManager sQLOntologyTermManager0 = new SQLOntologyTermManager(sQLChangeEventManager0);
      SQLSupportingDocumentsManager sQLSupportingDocumentsManager0 = new SQLSupportingDocumentsManager(sQLChangeEventManager0);
      SQLVariableManager sQLVariableManager0 = new SQLVariableManager(sQLChangeEventManager0, sQLListChoiceManager0, sQLOntologyTermManager0, sQLSupportingDocumentsManager0);
      // Undeclared exception!
      try {
        sQLVariableManager0.clear((Connection) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      SQLOntologyTermManager sQLOntologyTermManager0 = new SQLOntologyTermManager(sQLChangeEventManager0);
      SQLVariableManager sQLVariableManager0 = new SQLVariableManager(sQLChangeEventManager0, sQLListChoiceManager0, sQLOntologyTermManager0, (SQLSupportingDocumentsManager) null);
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try {
        sQLVariableManager0.addDerivedVariable((Connection) null, user0, derivedVariable0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      SQLOntologyTermManager sQLOntologyTermManager0 = new SQLOntologyTermManager(sQLChangeEventManager0);
      SQLVariableManager sQLVariableManager0 = new SQLVariableManager(sQLChangeEventManager0, sQLListChoiceManager0, sQLOntologyTermManager0, (SQLSupportingDocumentsManager) null);
      User user0 = new User("", "");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try {
        sQLVariableManager0.getDerivedVariableIdentifier((Connection) null, user0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      SQLOntologyTermManager sQLOntologyTermManager0 = new SQLOntologyTermManager((SQLChangeEventManager) null);
      SQLSupportingDocumentsManager sQLSupportingDocumentsManager0 = new SQLSupportingDocumentsManager((SQLChangeEventManager) null);
      SQLVariableManager sQLVariableManager0 = new SQLVariableManager((SQLChangeEventManager) null, (SQLListChoiceManager) null, sQLOntologyTermManager0, sQLSupportingDocumentsManager0);
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      try {
        sQLVariableManager0.addRawVariable((Connection) null, user0, rawVariable0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      SQLOntologyTermManager sQLOntologyTermManager0 = new SQLOntologyTermManager(sQLChangeEventManager0);
      SQLVariableManager sQLVariableManager0 = new SQLVariableManager(sQLChangeEventManager0, sQLListChoiceManager0, sQLOntologyTermManager0, (SQLSupportingDocumentsManager) null);
      // Undeclared exception!
      try {
        sQLVariableManager0.createSupportingDocumentsForVariables((Connection) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      SQLOntologyTermManager sQLOntologyTermManager0 = new SQLOntologyTermManager(sQLChangeEventManager0);
      SQLVariableManager sQLVariableManager0 = new SQLVariableManager(sQLChangeEventManager0, sQLListChoiceManager0, sQLOntologyTermManager0, (SQLSupportingDocumentsManager) null);
      // Undeclared exception!
      try {
        sQLVariableManager0.createOntologyTermsForVariablesTable((Connection) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLOntologyTermManager sQLOntologyTermManager0 = new SQLOntologyTermManager(sQLChangeEventManager0);
      SQLSupportingDocumentsManager sQLSupportingDocumentsManager0 = new SQLSupportingDocumentsManager(sQLChangeEventManager0);
      SQLVariableManager sQLVariableManager0 = new SQLVariableManager(sQLChangeEventManager0, (SQLListChoiceManager) null, sQLOntologyTermManager0, sQLSupportingDocumentsManager0);
      // Undeclared exception!
      try {
        sQLVariableManager0.createSourceVariablesTable((Connection) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      SQLOntologyTermManager sQLOntologyTermManager0 = new SQLOntologyTermManager(sQLChangeEventManager0);
      SQLVariableManager sQLVariableManager0 = new SQLVariableManager(sQLChangeEventManager0, sQLListChoiceManager0, sQLOntologyTermManager0, (SQLSupportingDocumentsManager) null);
      User user0 = new User();
      ArrayList<DerivedVariable> arrayList0 = new ArrayList<DerivedVariable>();
      sQLVariableManager0.deleteDerivedVariables((Connection) null, user0, arrayList0);
      assertEquals("", user0.getDisplayName());
  }

  @Test
  public void test10()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLOntologyTermManager sQLOntologyTermManager0 = new SQLOntologyTermManager(sQLChangeEventManager0);
      SQLSupportingDocumentsManager sQLSupportingDocumentsManager0 = new SQLSupportingDocumentsManager(sQLChangeEventManager0);
      SQLVariableManager sQLVariableManager0 = new SQLVariableManager(sQLChangeEventManager0, (SQLListChoiceManager) null, sQLOntologyTermManager0, sQLSupportingDocumentsManager0);
      User user0 = new User();
      VariableSummary variableSummary0 = new VariableSummary();
      // Undeclared exception!
      try {
        sQLVariableManager0.getCompleteVariableData((Connection) null, user0, variableSummary0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
