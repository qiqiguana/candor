/*
 * This file was automatically generated by EvoSuite
 */

package macaw.persistenceLayer.production;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.Connection;
import macaw.businessLayer.AliasFilePath;
import macaw.businessLayer.AvailabilityState;
import macaw.businessLayer.Category;
import macaw.businessLayer.CleaningState;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.User;
import macaw.businessLayer.Variable;
import macaw.persistenceLayer.production.SQLChangeEventManager;
import macaw.persistenceLayer.production.SQLListChoiceManager;
import macaw.system.Log;
import macaw.system.MacawException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SQLListChoiceManagerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      // Undeclared exception!
      try {
        sQLListChoiceManager0.createTables((Connection) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      AliasFilePath aliasFilePath0 = new AliasFilePath("Q$'-7@&@Ba>&hXZllP2:", "Q$'-7@&@Ba>&hXZllP2:");
      // Undeclared exception!
      try {
        sQLListChoiceManager0.addAliasFilePath((Connection) null, aliasFilePath0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager((Log) null);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      // Undeclared exception!
      try {
        sQLListChoiceManager0.clear((Connection) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try {
        sQLListChoiceManager0.getCategoryIdentifier((Connection) null, (Variable) rawVariable0, (Category) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      AvailabilityState availabilityState0 = new AvailabilityState();
      // Undeclared exception!
      try {
        sQLListChoiceManager0.getOriginalAvailabilityState((Connection) null, availabilityState0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      CleaningState cleaningState0 = new CleaningState("MysqlIO.8");
      // Undeclared exception!
      try {
        sQLListChoiceManager0.getOriginalCleaningState((Connection) null, cleaningState0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      User user0 = new User((String) null, (String) null);
      CleaningState cleaningState0 = new CleaningState();
      try {
        sQLListChoiceManager0.updateCleaningState((Connection) null, user0, cleaningState0);
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      User user0 = new User();
      AvailabilityState availabilityState0 = new AvailabilityState(451, "INT1");
      // Undeclared exception!
      try {
        sQLListChoiceManager0.addAvailabilityState((Connection) null, user0, availabilityState0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager((SQLChangeEventManager) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = sQLListChoiceManager0.getAliasFilePathName((Connection) null, (Variable) derivedVariable0, 0);
      assertEquals("Unknown", string0);
  }

  @Test
  public void test9()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      CleaningState cleaningState0 = new CleaningState("");
      // Undeclared exception!
      try {
        sQLListChoiceManager0.getCleaningStateIdentifier((Connection) null, (Variable) derivedVariable0, cleaningState0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      User user0 = new User();
      Category category0 = new Category("to a character encoding your JVM understands. You ");
      // Undeclared exception!
      try {
        sQLListChoiceManager0.addCategory((Connection) null, user0, category0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      RawVariable rawVariable0 = new RawVariable();
      AvailabilityState availabilityState0 = new AvailabilityState(28, "5O-DW7GA<Upii|e< g");
      // Undeclared exception!
      try {
        sQLListChoiceManager0.getAvailabilityStateIdentifier((Connection) null, (Variable) rawVariable0, availabilityState0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      AvailabilityState availabilityState0 = new AvailabilityState(1611, "B?'[36g_R];PZh");
      // Undeclared exception!
      try {
        sQLListChoiceManager0.updateAvailabilityState((Connection) null, availabilityState0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager((SQLChangeEventManager) null);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try {
        sQLListChoiceManager0.getCategoryName((Connection) null, (Variable) rawVariable0, 1456);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
