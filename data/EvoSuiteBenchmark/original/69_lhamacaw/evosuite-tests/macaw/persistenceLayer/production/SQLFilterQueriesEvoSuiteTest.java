/*
 * This file was automatically generated by EvoSuite
 */

package macaw.persistenceLayer.production;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.Connection;
import macaw.businessLayer.VariableTypeFilter;
import macaw.persistenceLayer.production.SQLChangeEventManager;
import macaw.persistenceLayer.production.SQLFilterQueries;
import macaw.persistenceLayer.production.SQLListChoiceManager;
import macaw.system.Log;
import macaw.system.MacawException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SQLFilterQueriesEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      SQLFilterQueries sQLFilterQueries0 = new SQLFilterQueries(log0, sQLListChoiceManager0);
      VariableTypeFilter variableTypeFilter0 = VariableTypeFilter.RAW_AND_DERIVED;
      // Undeclared exception!
      try {
        sQLFilterQueries0.filterVariableSummaries((Connection) null, "", "", "", variableTypeFilter0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      SQLFilterQueries sQLFilterQueries0 = new SQLFilterQueries(log0, sQLListChoiceManager0);
      VariableTypeFilter variableTypeFilter0 = VariableTypeFilter.RAW;
      // Undeclared exception!
      try {
        sQLFilterQueries0.filterVariableSummaries((Connection) null, "All", "All", "All", variableTypeFilter0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Log log0 = new Log();
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager((SQLChangeEventManager) null);
      SQLFilterQueries sQLFilterQueries0 = new SQLFilterQueries(log0, sQLListChoiceManager0);
      VariableTypeFilter variableTypeFilter0 = VariableTypeFilter.RAW_AND_DERIVED;
      // Undeclared exception!
      try {
        sQLFilterQueries0.filterVariableSummaries((Connection) null, ".GJO", ".GJO", ".GJO", variableTypeFilter0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      SQLFilterQueries sQLFilterQueries0 = new SQLFilterQueries(log0, sQLListChoiceManager0);
      // Undeclared exception!
      try {
        sQLFilterQueries0.filterSupportingDocuments((Connection) null, "0", "0");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      SQLFilterQueries sQLFilterQueries0 = new SQLFilterQueries(log0, sQLListChoiceManager0);
      try {
        sQLFilterQueries0.filterSupportingDocuments((Connection) null, "", "");
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
        /*
         * Please specify a search phrase for the document title, the document code or both.
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      SQLFilterQueries sQLFilterQueries0 = new SQLFilterQueries(log0, sQLListChoiceManager0);
      // Undeclared exception!
      try {
        sQLFilterQueries0.filterSupportingDocuments((Connection) null, "", "UNABLE_TO_GET_STUDY_YEARS");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      SQLFilterQueries sQLFilterQueries0 = new SQLFilterQueries(log0, sQLListChoiceManager0);
      // Undeclared exception!
      try {
        sQLFilterQueries0.filterOntologyTerms((Connection) null, "gN0\"2C", "gN0\"2C");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      SQLFilterQueries sQLFilterQueries0 = new SQLFilterQueries(log0, sQLListChoiceManager0);
      try {
        sQLFilterQueries0.filterOntologyTerms((Connection) null, "", "");
        fail("Expecting exception: MacawException");
      } catch(MacawException e) {
        /*
         * Please specify a search phrase for the term, the description or both.
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      Log log0 = new Log();
      SQLChangeEventManager sQLChangeEventManager0 = new SQLChangeEventManager(log0);
      SQLListChoiceManager sQLListChoiceManager0 = new SQLListChoiceManager(sQLChangeEventManager0);
      SQLFilterQueries sQLFilterQueries0 = new SQLFilterQueries(log0, sQLListChoiceManager0);
      // Undeclared exception!
      try {
        sQLFilterQueries0.filterOntologyTerms((Connection) null, "", "o/nz@");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
