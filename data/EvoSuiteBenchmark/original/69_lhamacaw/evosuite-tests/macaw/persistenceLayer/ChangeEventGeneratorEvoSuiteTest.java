/*
 * This file was automatically generated by EvoSuite
 */

package macaw.persistenceLayer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.ArrayList;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.Variable;
import macaw.persistenceLayer.ChangeEventGenerator;
import macaw.system.MacawChangeEvent;
import macaw.system.MacawException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ChangeEventGeneratorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      User user0 = new User("", "");
      ArrayList<MacawChangeEvent> arrayList0 = ChangeEventGenerator.addUserChange(user0, user0);
      assertEquals(false, arrayList0.isEmpty());
      assertNotNull(arrayList0);
  }

  @Test
  public void test1()  throws Throwable  {
      ChangeEventGenerator changeEventGenerator0 = new ChangeEventGenerator();
      assertNotNull(changeEventGenerator0);
  }

  @Test
  public void test2()  throws Throwable  {
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<MacawChangeEvent> arrayList0 = ChangeEventGenerator.addSupportingDocumentChange(user0, supportingDocument0);
      assertNotNull(arrayList0);
      assertEquals(1, arrayList0.size());
  }

  @Test
  public void test3()  throws Throwable  {
      User user0 = new User("", "");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      ArrayList<MacawChangeEvent> arrayList1 = ChangeEventGenerator.deleteSupportingDocumentsChange(user0, arrayList0);
      assertEquals("[]", arrayList1.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<MacawChangeEvent> arrayList1 = ChangeEventGenerator.deleteOntologyTermsChange(user0, arrayList0);
      assertEquals("[]", arrayList1.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      User user0 = new User("", "");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = ChangeEventGenerator.deleteVariableChanges(user0, (Variable) derivedVariable0);
      assertEquals("The derived variable \"\" was deleted.", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals("", macawChangeEvent0.getUserID());
  }

  @Test
  public void test6()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = ChangeEventGenerator.deleteVariableChanges(user0, (Variable) rawVariable0);
      assertEquals("", macawChangeEvent0.getUserID());
      assertEquals("The raw variable \"\" was deleted.", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
  }

  @Test
  public void test7()  throws Throwable  {
      User user0 = new User("", "");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = ChangeEventGenerator.addVariableChange(user0, (Variable) derivedVariable0);
      assertNotNull(arrayList0);
      assertEquals(1, arrayList0.size());
  }

  @Test
  public void test8()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = ChangeEventGenerator.addVariableChange(user0, (Variable) rawVariable0);
      assertEquals(false, arrayList0.isEmpty());
      assertNotNull(arrayList0);
  }
}
