/*
 * This file was automatically generated by EvoSuite
 */

package de.progra.charting.swing;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.progra.charting.CoordSystem;
import de.progra.charting.Legend;
import de.progra.charting.Title;
import de.progra.charting.model.ChartDataModel;
import de.progra.charting.model.DefaultChartDataModel;
import de.progra.charting.model.EditableChartDataModel;
import de.progra.charting.model.ObjectChartDataModel;
import de.progra.charting.render.AbstractChartRenderer;
import de.progra.charting.render.PieChartRenderer;
import de.progra.charting.swing.ChartPanel;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.util.Hashtable;
import java.util.Map;
import javax.swing.Icon;
import javax.swing.JRadioButton;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ChartPanelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      ChartPanel chartPanel0 = new ChartPanel((ChartDataModel) editableChartDataModel0, "");
      Title title0 = chartPanel0.getTitle();
      assertNotNull(title0);
      
      chartPanel0.setTitle(title0);
      assertEquals("", title0.getText());
  }

  @Test
  public void test1()  throws Throwable  {
      ChartPanel chartPanel0 = new ChartPanel((ChartDataModel) null, "iKeY(2_Ar4", 2004);
      CoordSystem coordSystem0 = chartPanel0.getCoordSystem();
      assertNull(coordSystem0);
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      ChartPanel chartPanel0 = new ChartPanel((ChartDataModel) defaultChartDataModel0, "n&$H)kuz[");
      Legend legend0 = chartPanel0.getLegend();
      assertNotNull(legend0);
  }

  @Test
  public void test3()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      ChartPanel chartPanel0 = new ChartPanel((ChartDataModel) defaultChartDataModel0, "After");
      Legend legend0 = chartPanel0.chart.getLegend();
      chartPanel0.setLegend(legend0);
      assertEquals(0.5F, chartPanel0.getAlignmentY(), 0.01F);
  }

  @Test
  public void test4()  throws Throwable  {
      ChartPanel chartPanel0 = new ChartPanel((ChartDataModel) null, "?-U~$2");
      // Undeclared exception!
      try {
        chartPanel0.getVisibleRect();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      ChartPanel chartPanel0 = new ChartPanel((ChartDataModel) null, "?-U~$2");
      Map<Object, Object> map0 = chartPanel0.getChartRenderer();
      assertEquals(true, map0.isEmpty());
  }

  @Test
  public void test6()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      ChartPanel chartPanel0 = new ChartPanel((ChartDataModel) defaultChartDataModel0, "n&$H)kuz[");
      chartPanel0.setChartDataModel((ChartDataModel) defaultChartDataModel0);
      assertEquals(true, chartPanel0.isFontSet());
  }

  @Test
  public void test7()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      ChartPanel chartPanel0 = new ChartPanel((ChartDataModel) objectChartDataModel0, "", 1);
      // Undeclared exception!
      try {
        chartPanel0.printAll((Graphics) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      ChartPanel chartPanel0 = new ChartPanel((ChartDataModel) null, "?-U~$2");
      ChartDataModel chartDataModel0 = chartPanel0.getChartDataModel();
      assertNull(chartDataModel0);
  }

  @Test
  public void test9()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      ChartPanel chartPanel0 = new ChartPanel((ChartDataModel) defaultChartDataModel0, "After");
      chartPanel0.setCoordSystem((CoordSystem) null);
      assertEquals(0.5F, chartPanel0.getAlignmentY(), 0.01F);
  }

  @Test
  public void test10()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      ChartPanel chartPanel0 = new ChartPanel((ChartDataModel) objectChartDataModel0, "6qeqv(&Iozp)Q>", 6);
      JRadioButton jRadioButton0 = new JRadioButton("6qeqv(&Iozp)Q>", (Icon) null, true);
      Rectangle rectangle0 = jRadioButton0.getBounds();
      chartPanel0.setBounds(rectangle0);
      assertEquals(false, chartPanel0.requestDefaultFocus());
  }

  @Test
  public void test11()  throws Throwable  {
      ChartPanel chartPanel0 = new ChartPanel((ChartDataModel) null, "?-U~$2");
      Hashtable<String, Integer> hashtable0 = new Hashtable<String, Integer>();
      chartPanel0.setChartRenderer((Map) hashtable0);
      assertEquals(false, chartPanel0.getIgnoreRepaint());
  }

  @Test
  public void test12()  throws Throwable  {
      double[][] doubleArray0 = new double[1][9];
      double[] doubleArray1 = new double[8];
      String[] stringArray0 = new String[8];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(doubleArray0, doubleArray1, stringArray0);
      ChartPanel chartPanel0 = new ChartPanel((ChartDataModel) defaultChartDataModel0, "Chart Title", (-1824));
      Dimension dimension0 = chartPanel0.getPreferredSize();
      assertEquals("java.awt.Dimension[width=2147483647,height=2147483647]", dimension0.toString());
  }

  @Test
  public void test13()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      ChartPanel chartPanel0 = new ChartPanel((ChartDataModel) defaultChartDataModel0, "n&$H)kuz[");
      AbstractChartRenderer abstractChartRenderer0 = chartPanel0.getChartRenderer((-1606));
      assertNull(abstractChartRenderer0);
  }

  @Test
  public void test14()  throws Throwable  {
      ChartPanel chartPanel0 = new ChartPanel((ChartDataModel) null, "iKeY(2_Ar4", 2004);
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer((CoordSystem) null, (ChartDataModel) null);
      chartPanel0.addChartRenderer((AbstractChartRenderer) pieChartRenderer0, 2004);
      assertEquals(true, chartPanel0.isRequestFocusEnabled());
  }
}
