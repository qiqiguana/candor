/*
 * This file was automatically generated by EvoSuite
 */

package de.progra.charting.test;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.progra.charting.test.ImageFilter;
import java.io.File;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ImageFilterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[1];
      ImageFilter imageFilter0 = new ImageFilter(stringArray0);
      assertNotNull(imageFilter0);
      
      String string0 = imageFilter0.getDescription();
      assertNotNull(string0);
      assertEquals("Image Files (*.null )", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[10];
      ImageFilter imageFilter0 = new ImageFilter(stringArray0);
      assertNotNull(imageFilter0);
      
      File file0 = new File("*.", "");
      boolean boolean0 = imageFilter0.accept(file0);
      assertEquals(false, boolean0);
      assertEquals("Image Files (*.null, *.null, *.null, *.null, *.null, *.null, *.null, *.null, *.null, *.null )", imageFilter0.getDescription());
  }

  @Test
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[11];
      ImageFilter imageFilter0 = new ImageFilter(stringArray0);
      assertNotNull(imageFilter0);
      
      File file0 = new File("", "");
      boolean boolean0 = imageFilter0.accept(file0);
      assertEquals(true, boolean0);
      assertEquals("Image Files (*.null, *.null, *.null, *.null, *.null, *.null, *.null, *.null, *.null, *.null, *.null )", imageFilter0.getDescription());
  }

  @Test
  public void test3()  throws Throwable  {
      String[] stringArray0 = new String[9];
      ImageFilter imageFilter0 = new ImageFilter(stringArray0);
      assertNotNull(imageFilter0);
      
      File file0 = new File("", "_T,1");
      boolean boolean0 = imageFilter0.accept(file0);
      assertEquals(false, boolean0);
      assertEquals("Image Files (*.null, *.null, *.null, *.null, *.null, *.null, *.null, *.null, *.null )", imageFilter0.getDescription());
  }

  @Test
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Vr.QuA.dqCG[K(3";
      stringArray0[1] = "Vr.QuA.dqCG[K(3";
      stringArray0[2] = "Vr.QuA.dqCG[K(3";
      stringArray0[3] = "dqg[k(3";
      stringArray0[4] = ";|3";
      stringArray0[5] = "lb%/l~ZWpm,M!_~Gu`@";
      stringArray0[6] = "dqg[k(3";
      ImageFilter imageFilter0 = new ImageFilter(stringArray0);
      assertNotNull(imageFilter0);
      
      File file0 = new File("Vr.QuA.dqCG[K(3");
      boolean boolean0 = imageFilter0.accept(file0);
      assertEquals("Image Files (*.Vr.QuA.dqCG[K(3, *.Vr.QuA.dqCG[K(3, *.Vr.QuA.dqCG[K(3, *.dqg[k(3, *.;|3, *.lb%/l~ZWpm,M!_~Gu`@, *.dqg[k(3 )", imageFilter0.getDescription());
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Vr.QuA.dqCG[Kl3";
      stringArray0[1] = "Vr.QuA.dqCG[Kl3";
      stringArray0[2] = "dqcg[kl3";
      stringArray0[3] = "";
      stringArray0[4] = "dqcg[kl3";
      stringArray0[5] = "";
      stringArray0[6] = "";
      ImageFilter imageFilter0 = new ImageFilter(stringArray0);
      assertNotNull(imageFilter0);
      
      File file0 = new File("Vr.QuA.dqCG[Kl3");
      boolean boolean0 = imageFilter0.accept(file0);
      assertEquals(true, boolean0);
      assertEquals("Image Files (*.Vr.QuA.dqCG[Kl3, *.Vr.QuA.dqCG[Kl3, *.dqcg[kl3, *., *.dqcg[kl3, *., *. )", imageFilter0.getDescription());
  }
}
