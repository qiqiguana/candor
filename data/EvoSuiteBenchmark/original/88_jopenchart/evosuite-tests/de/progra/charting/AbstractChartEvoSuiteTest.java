/*
 * This file was automatically generated by EvoSuite
 */

package de.progra.charting;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.progra.charting.DefaultChart;
import de.progra.charting.Legend;
import de.progra.charting.Title;
import de.progra.charting.model.ChartDataModel;
import de.progra.charting.model.DefaultChartDataModel;
import de.progra.charting.model.ObjectChartDataModel;
import de.progra.charting.render.AbstractChartRenderer;
import de.progra.charting.render.RadarChartRenderer;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.util.Map;
import javax.print.attribute.standard.PrinterStateReasons;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AbstractChartEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart((ChartDataModel) null, "", 1225);
      Rectangle rectangle0 = defaultChart0.getBounds();
      assertNull(rectangle0);
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultChart defaultChart0 = null;
      try {
        defaultChart0 = new DefaultChart((ChartDataModel) null, "LT", (-75), "LT", "LT");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart((ChartDataModel) objectChartDataModel0, "A(^@pU\"S.");
      Title title0 = defaultChart0.getTitle();
      assertEquals("A(^@pU\"S.", title0.getText());
  }

  @Test
  public void test3()  throws Throwable  {
      Number[][] numberArray0 = new Number[1][9];
      Number[] numberArray1 = new Number[8];
      numberArray1[0] = (Number) (-75);
      numberArray1[1] = (Number) (-75);
      numberArray1[2] = (Number) (-75);
      numberArray1[3] = (Number) (-75);
      numberArray1[4] = (Number) (-75);
      numberArray1[5] = (Number) (-75);
      numberArray1[6] = (Number) (-75);
      numberArray1[7] = (Number) (-75);
      numberArray0[0] = numberArray1;
      String[] stringArray0 = new String[10];
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel(numberArray0, (Object[]) numberArray0[0], stringArray0);
      DefaultChart defaultChart0 = new DefaultChart((ChartDataModel) objectChartDataModel0, (String) null, (-75));
      RadarChartRenderer radarChartRenderer0 = new RadarChartRenderer((ChartDataModel) objectChartDataModel0);
      defaultChart0.addChartRenderer((AbstractChartRenderer) radarChartRenderer0, (-75));
      assertEquals(1, defaultChart0.NO_COORDINATE_SYSTEM);
  }

  @Test
  public void test4()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart((ChartDataModel) objectChartDataModel0, (String) null, 0);
      Legend legend0 = defaultChart0.getLegend();
      assertNotNull(legend0);
  }

  @Test
  public void test5()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart((ChartDataModel) defaultChartDataModel0, "/");
      defaultChart0.setBounds((Rectangle) null);
      assertEquals(0, defaultChart0.LINEAR_X_LINEAR_Y);
  }

  @Test
  public void test6()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart((ChartDataModel) objectChartDataModel0, (String) null, 0);
      Map<Object, Object> map0 = defaultChart0.getChartRenderer();
      assertEquals(true, map0.isEmpty());
  }

  @Test
  public void test7()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart((ChartDataModel) null, "", 1225);
      defaultChart0.paintDefault((Graphics2D) null);
      assertEquals(1, defaultChart0.NO_COORDINATE_SYSTEM);
  }

  @Test
  public void test8()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart((ChartDataModel) objectChartDataModel0, (String) null, 0);
      ObjectChartDataModel objectChartDataModel1 = (ObjectChartDataModel)defaultChart0.getChartDataModel();
      assertEquals(false, objectChartDataModel1.isManualScale());
  }

  @Test
  public void test9()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart((ChartDataModel) objectChartDataModel0, "A(^@pU\"S.");
      AbstractChartRenderer abstractChartRenderer0 = defaultChart0.getChartRenderer(1974);
      assertNull(abstractChartRenderer0);
  }

  @Test
  public void test10()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart((ChartDataModel) defaultChartDataModel0, "/");
      PrinterStateReasons printerStateReasons0 = new PrinterStateReasons();
      defaultChart0.setChartRenderer((Map) printerStateReasons0);
      assertEquals(true, printerStateReasons0.isEmpty());
  }
}
