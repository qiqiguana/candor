/*
 * This file was automatically generated by EvoSuite
 */

package de.progra.charting.render.shape;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.progra.charting.render.shape.Triangle2D;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class Triangle2DEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Triangle2D triangle2D0 = new Triangle2D((-98.33790847423865), (-98.33790847423865), (-98.33790847423865), (-98.33790847423865), true);
      Rectangle rectangle0 = new Rectangle((-354), (-354));
      boolean boolean0 = triangle2D0.intersects((Rectangle2D) rectangle0);
      assertEquals((-196.6758169484773), triangle2D0.getMaxY(), 0.01D);
      assertEquals(false, boolean0);
      assertEquals((-147.50686271135797), triangle2D0.getCenterX(), 0.01D);
  }

  @Test
  public void test1()  throws Throwable  {
      Triangle2D triangle2D0 = new Triangle2D(2.0, (-2.8707286899852953), 2.0, (-2.8707286899852953), true);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)triangle2D0.getBounds2D();
      boolean boolean0 = triangle2D0.contains((Rectangle2D) rectangle2D_Double0);
      assertEquals(false, boolean0);
      assertEquals("java.awt.geom.Rectangle2D$Double[x=2.0,y=-2.8707286899852953,w=2.0,h=-2.8707286899852953]", rectangle2D_Double0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      Triangle2D triangle2D0 = new Triangle2D(769.5213847487848, 769.5213847487848, 769.5213847487848, 769.5213847487848, false);
      Rectangle rectangle0 = triangle2D0.getBounds();
      assertEquals("java.awt.Rectangle[x=769,y=769,width=771,height=771]", rectangle0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      Triangle2D triangle2D0 = new Triangle2D((-98.33790847423865), (-98.33790847423865), (-98.33790847423865), (-98.33790847423865), true);
      AffineTransform affineTransform0 = new AffineTransform((double) (-354), (double) 0, (double) 0, (double) 0, (double) (-354), (double) 0);
      triangle2D0.getPathIterator(affineTransform0, (double) 0);
      assertEquals((-147.50686271135797), triangle2D0.getCenterX(), 0.01D);
      assertEquals((-196.6758169484773), triangle2D0.getMaxY(), 0.01D);
      assertEquals((-98.33790847423865), triangle2D0.getMinX(), 0.01D);
  }

  @Test
  public void test4()  throws Throwable  {
      Triangle2D triangle2D0 = new Triangle2D((-98.33790847423865), (-98.33790847423865), (-98.33790847423865), (-98.33790847423865), true);
      boolean boolean0 = triangle2D0.contains((double) (-354), (double) (-354));
      assertEquals((-196.6758169484773), triangle2D0.getMaxX(), 0.01D);
      assertEquals((-196.6758169484773), triangle2D0.getMaxY(), 0.01D);
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      Triangle2D triangle2D0 = new Triangle2D(769.5213847487848, 769.5213847487848, 769.5213847487848, 769.5213847487848, false);
      AffineTransform affineTransform0 = new AffineTransform(1847.9882F, 1847.9882F, 1847.9882F, 1847.9882F, 1847.9882F, 1847.9882F);
      affineTransform0.createTransformedShape((Shape) triangle2D0);
      assertEquals(1539.0427694975697, triangle2D0.getMaxX(), 0.01D);
      assertEquals(1154.2820771231773, triangle2D0.getCenterY(), 0.01D);
      assertEquals(769.5213847487848, triangle2D0.getMinY(), 0.01D);
  }

  @Test
  public void test6()  throws Throwable  {
      Triangle2D triangle2D0 = new Triangle2D((-98.33790847423865), (-98.33790847423865), (-98.33790847423865), (-98.33790847423865), true);
      boolean boolean0 = triangle2D0.isEmpty();
      assertEquals((-147.50686271135797), triangle2D0.getCenterX(), 0.01D);
      assertEquals((-147.50686271135797), triangle2D0.getCenterY(), 0.01D);
      assertEquals(true, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      Triangle2D triangle2D0 = new Triangle2D(2.0, (-2.8707286899852953), 2.0, (-2.8707286899852953), true);
      boolean boolean0 = triangle2D0.isEmpty();
      assertEquals(true, boolean0);
      assertEquals(3.0, triangle2D0.getCenterX(), 0.01D);
      assertEquals((-4.306093034977943), triangle2D0.getCenterY(), 0.01D);
  }

  @Test
  public void test8()  throws Throwable  {
      Triangle2D triangle2D0 = new Triangle2D(769.5213847487848, 769.5213847487848, 769.5213847487848, 769.5213847487848, false);
      boolean boolean0 = triangle2D0.isEmpty();
      assertEquals(false, boolean0);
      assertEquals(769.5213847487848, triangle2D0.getX(), 0.01D);
      assertEquals(1539.0427694975697, triangle2D0.getMaxY(), 0.01D);
  }
}
