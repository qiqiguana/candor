/*
 * This file was automatically generated by EvoSuite
 */

package de.progra.charting.render.shape;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.progra.charting.render.shape.Diamond2D;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.geom.AffineTransform;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class Diamond2DEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Diamond2D diamond2D0 = new Diamond2D(602.5822831462882, 602.5822831462882, 602.5822831462882, 602.5822831462882);
      AffineTransform affineTransform0 = AffineTransform.getTranslateInstance(602.5822831462882, 602.5822831462882);
      affineTransform0.createTransformedShape((Shape) diamond2D0);
      assertEquals(1205.1645662925764, diamond2D0.getMaxY(), 0.01D);
      assertEquals(1205.1645662925764, diamond2D0.getMaxX(), 0.01D);
      assertEquals(903.8734247194323, diamond2D0.getCenterX(), 0.01D);
  }

  @Test
  public void test1()  throws Throwable  {
      Diamond2D diamond2D0 = new Diamond2D(6.9090264406866595, 6.9090264406866595, 6.9090264406866595, 6.9090264406866595);
      boolean boolean0 = diamond2D0.contains(6.9090264406866595, 6.9090264406866595, 6.9090264406866595, 6.9090264406866595);
      assertEquals(13.818052881373319, diamond2D0.getMaxY(), 0.01D);
      assertEquals(13.818052881373319, diamond2D0.getMaxX(), 0.01D);
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      Diamond2D diamond2D0 = new Diamond2D(1247.3651315256952, (-27.38732036931507), 1247.3651315256952, (-27.38732036931507));
      Rectangle rectangle0 = diamond2D0.getBounds();
      boolean boolean0 = diamond2D0.intersects((Rectangle2D) rectangle0);
      assertEquals(false, boolean0);
      assertEquals(1871.0476972885428, diamond2D0.getCenterX(), 0.01D);
      assertEquals((-54.77464073863014), diamond2D0.getMaxY(), 0.01D);
  }

  @Test
  public void test3()  throws Throwable  {
      Diamond2D diamond2D0 = new Diamond2D(602.5822831462882, 602.5822831462882, 602.5822831462882, 602.5822831462882);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)diamond2D0.getBounds2D();
      assertEquals("java.awt.geom.Rectangle2D$Double[x=602.5822831462882,y=602.5822831462882,w=602.5822831462882,h=602.5822831462882]", rectangle2D_Double0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      Diamond2D diamond2D0 = new Diamond2D(6.9090264406866595, 6.9090264406866595, 6.9090264406866595, 6.9090264406866595);
      double double0 = diamond2D0.getMinY();
      assertEquals(13.818052881373319, diamond2D0.getMaxY(), 0.01D);
      assertEquals(13.818052881373319, diamond2D0.getMaxX(), 0.01D);
      assertEquals(6.9090264406866595, double0, 0.01D);
  }

  @Test
  public void test5()  throws Throwable  {
      Diamond2D diamond2D0 = new Diamond2D(6.9090264406866595, 6.9090264406866595, 6.9090264406866595, 6.9090264406866595);
      Point point0 = new Point();
      boolean boolean0 = diamond2D0.contains((Point2D) point0);
      assertEquals(false, boolean0);
      assertEquals(13.818052881373319, diamond2D0.getMaxX(), 0.01D);
      assertEquals(10.36353966102999, diamond2D0.getCenterY(), 0.01D);
  }

  @Test
  public void test6()  throws Throwable  {
      Diamond2D diamond2D0 = new Diamond2D(6.9090264406866595, 6.9090264406866595, 6.9090264406866595, 6.9090264406866595);
      double double0 = diamond2D0.getMinX();
      assertEquals(13.818052881373319, diamond2D0.getMaxY(), 0.01D);
      assertEquals(10.36353966102999, diamond2D0.getCenterX(), 0.01D);
      assertEquals(6.9090264406866595, double0, 0.01D);
  }

  @Test
  public void test7()  throws Throwable  {
      Diamond2D diamond2D0 = new Diamond2D(1247.3651315256952, (-27.38732036931507), 1247.3651315256952, (-27.38732036931507));
      diamond2D0.setFrameFromCenter(0.0, 0.0, 1247.3651315256952, 0.0);
      assertEquals(0.0, diamond2D0.getY(), 0.01D);
      assertEquals(2494.7302630513905, diamond2D0.getWidth(), 0.01D);
  }

  @Test
  public void test8()  throws Throwable  {
      Diamond2D diamond2D0 = new Diamond2D((-27.38732036931507), 0.0, 0.0, (-27.38732036931507));
      boolean boolean0 = diamond2D0.isEmpty();
      assertEquals(true, boolean0);
      assertEquals((-27.38732036931507), diamond2D0.getCenterX(), 0.01D);
      assertEquals((-27.38732036931507), diamond2D0.getMaxY(), 0.01D);
      assertEquals(0.0, diamond2D0.getMinY(), 0.01D);
      assertEquals(0.0, diamond2D0.getWidth(), 0.01D);
  }

  @Test
  public void test9()  throws Throwable  {
      Diamond2D diamond2D0 = new Diamond2D(1247.3651315256952, (-27.38732036931507), 1247.3651315256952, (-27.38732036931507));
      boolean boolean0 = diamond2D0.isEmpty();
      assertEquals(2494.7302630513905, diamond2D0.getMaxX(), 0.01D);
      assertEquals((-27.38732036931507), diamond2D0.getMinY(), 0.01D);
      assertEquals(true, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      Diamond2D diamond2D0 = new Diamond2D(602.5822831462882, 602.5822831462882, 602.5822831462882, 602.5822831462882);
      boolean boolean0 = diamond2D0.isEmpty();
      assertEquals(false, boolean0);
      assertEquals(602.5822831462882, diamond2D0.getMinX(), 0.01D);
      assertEquals(602.5822831462882, diamond2D0.getMinY(), 0.01D);
  }
}
