/*
 * This file was automatically generated by EvoSuite
 */

package fr.unice.gfarce.identity;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fr.unice.gfarce.identity.Identite;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class IdentiteEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Identite identite0 = new Identite();
      String string0 = identite0.getSex();
      assertNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      Identite identite0 = new Identite(0);
      identite0.getPrenom();
      assertEquals(0, identite0.getId());
  }

  @Test
  public void test2()  throws Throwable  {
      Identite.TypeIdentite identite_TypeIdentite0 = Identite.TypeIdentite.FORMATEUR;
      Identite identite0 = new Identite("CANDIDAT", "CANDIDAT", "CANDIDAT", "MAZ!V^G0B!Ve~k&", identite_TypeIdentite0);
      String string0 = identite0.getNom();
      assertEquals("MAZ!V^G0B!Ve~k&", identite0.getEmail());
      assertEquals("CANDIDAT", identite0.getPrenom());
      assertEquals("CANDIDAT", string0);
      assertNotNull(string0);
      assertEquals("CANDIDAT", identite0.getSex());
  }

  @Test
  public void test3()  throws Throwable  {
      Identite identite0 = new Identite(0);
      identite0.setId((-1918));
      assertEquals(-1918, identite0.getId());
  }

  @Test
  public void test4()  throws Throwable  {
      Identite identite0 = new Identite((-496));
      identite0.getEmail();
      assertEquals(-496, identite0.getId());
  }

  @Test
  public void test5()  throws Throwable  {
      Identite identite0 = new Identite((-496));
      identite0.getType();
      assertEquals(-496, identite0.getId());
  }

  @Test
  public void test6()  throws Throwable  {
      Identite identite0 = new Identite((-496));
      Identite.TypeIdentite identite_TypeIdentite0 = Identite.TypeIdentite.FORMATEUR;
      identite0.setType(identite_TypeIdentite0);
      assertEquals(-496, identite0.getId());
  }

  @Test
  public void test7()  throws Throwable  {
      Identite identite0 = new Identite((-1));
      identite0.setSex(" C5:XO=H-^Q");
      assertEquals(-1, identite0.getId());
  }

  @Test
  public void test8()  throws Throwable  {
      Identite identite0 = new Identite();
      identite0.setEmail((String) null);
      assertEquals(0, identite0.getId());
  }

  @Test
  public void test9()  throws Throwable  {
      Identite identite0 = new Identite((-496));
      int int0 = identite0.getId();
      assertEquals((-496), int0);
  }

  @Test
  public void test10()  throws Throwable  {
      Identite identite0 = new Identite((-496));
      identite0.setPrenom("CANDIDAT");
      assertEquals(-496, identite0.getId());
  }

  @Test
  public void test11()  throws Throwable  {
      Identite identite0 = new Identite(0);
      identite0.setNom("QL0bT");
      assertEquals(0, identite0.getId());
  }
}
