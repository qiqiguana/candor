/*
 * This file was automatically generated by EvoSuite
 */

package fr.unice.gfarce.dao;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fr.unice.gfarce.dao.OracleIdentiteDao;
import fr.unice.gfarce.identity.Candidat;
import fr.unice.gfarce.identity.Identite;
import fr.unice.gfarce.identity.RespFormation;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class OracleIdentiteDaoEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      OracleIdentiteDao oracleIdentiteDao0 = new OracleIdentiteDao();
      Identite.TypeIdentite identite_TypeIdentite0 = Identite.TypeIdentite.FORMATEUR;
      RespFormation respFormation0 = new RespFormation("Identite", "Identite", "Identite", "Identite", identite_TypeIdentite0, "Identite");
      GregorianCalendar gregorianCalendar0 = (GregorianCalendar)Calendar.getInstance();
      oracleIdentiteDao0.insert((Identite) respFormation0, "Identite", (Calendar) gregorianCalendar0);
      assertEquals(1372730897810L, gregorianCalendar0.getTimeInMillis());
      assertEquals("java.util.GregorianCalendar[time=1372730897810,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"Europe/Belfast\",offset=0,dstSavings=3600000,useDaylight=true,transitions=242,lastRule=java.util.SimpleTimeZone[id=Europe/Belfast,offset=0,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=2013,MONTH=6,WEEK_OF_YEAR=27,WEEK_OF_MONTH=1,DAY_OF_MONTH=2,DAY_OF_YEAR=183,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=3,HOUR_OF_DAY=3,MINUTE=8,SECOND=17,MILLISECOND=810,ZONE_OFFSET=0,DST_OFFSET=3600000]", gregorianCalendar0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      OracleIdentiteDao oracleIdentiteDao0 = OracleIdentiteDao.getDAO();
      assertNotNull(oracleIdentiteDao0);
  }

  @Test
  public void test2()  throws Throwable  {
      OracleIdentiteDao oracleIdentiteDao0 = new OracleIdentiteDao();
      RespFormation respFormation0 = new RespFormation();
      oracleIdentiteDao0.update((Identite) respFormation0);
      assertNull(respFormation0.getType());
  }

  @Test
  public void test3()  throws Throwable  {
      OracleIdentiteDao oracleIdentiteDao0 = new OracleIdentiteDao();
      RespFormation respFormation0 = new RespFormation();
      oracleIdentiteDao0.delete((Identite) respFormation0);
      assertNull(respFormation0.getNom());
  }

  @Test
  public void test4()  throws Throwable  {
      OracleIdentiteDao oracleIdentiteDao0 = new OracleIdentiteDao();
      List<Identite> list0 = oracleIdentiteDao0.find("Identite", "Identite", "Identite", "Identite", (Identite.TypeIdentite) null);
      assertNull(list0);
  }

  @Test
  public void test5()  throws Throwable  {
      OracleIdentiteDao oracleIdentiteDao0 = new OracleIdentiteDao();
      Candidat[] candidatArray0 = oracleIdentiteDao0.findCandidat((String) null, (String) null, (String) null, (String) null);
      assertNull(candidatArray0);
  }

  @Test
  public void test6()  throws Throwable  {
      OracleIdentiteDao oracleIdentiteDao0 = new OracleIdentiteDao();
      RespFormation[] respFormationArray0 = oracleIdentiteDao0.findRespForm("Identite", "Identite", "Identite", "Identite");
      assertNull(respFormationArray0);
  }
}
