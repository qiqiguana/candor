/*
 * This file was automatically generated by EvoSuite
 */

package fr.unice.gfarce.identity;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fr.unice.gfarce.identity.Formation;
import fr.unice.gfarce.identity.Identite;
import fr.unice.gfarce.identity.RespFormation;
import java.util.Calendar;
import java.util.Collection;
import java.util.GregorianCalendar;
import java.util.Locale;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RespFormationEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Identite.TypeIdentite identite_TypeIdentite0 = Identite.TypeIdentite.CANDIDAT;
      RespFormation respFormation0 = new RespFormation("vkY&i", "vkY&i", "vkY&i", "vkY&i", identite_TypeIdentite0, "vkY&i");
      String string0 = respFormation0.getTelephone();
      assertEquals("vkY&i", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      RespFormation respFormation0 = new RespFormation();
      respFormation0.setTelephone("2 q!CNm");
      assertEquals(0, respFormation0.getId());
  }

  @Test
  public void test2()  throws Throwable  {
      Identite.TypeIdentite identite_TypeIdentite0 = Identite.TypeIdentite.CANDIDAT;
      RespFormation respFormation0 = new RespFormation("vkY&i", "vkY&i", "vkY&i", "vkY&i", identite_TypeIdentite0, "vkY&i");
      Formation formation0 = new Formation((-1893));
      respFormation0.ajouterFormation(formation0);
      respFormation0.supprimerFormation(formation0);
      assertEquals("vkY&i", respFormation0.getPrenom());
  }

  @Test
  public void test3()  throws Throwable  {
      RespFormation respFormation0 = new RespFormation();
      Collection<Formation> collection0 = respFormation0.getFormation();
      assertEquals(0, collection0.size());
  }

  @Test
  public void test4()  throws Throwable  {
      Identite.TypeIdentite identite_TypeIdentite0 = Identite.TypeIdentite.CANDIDAT;
      RespFormation respFormation0 = new RespFormation("vkY&i", "vkY&i", "vkY&i", "vkY&i", identite_TypeIdentite0, "vkY&i");
      respFormation0.supprimerFormation((Formation) null);
      assertEquals("vkY&i", respFormation0.getPrenom());
  }

  @Test
  public void test5()  throws Throwable  {
      RespFormation respFormation0 = new RespFormation();
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar(0, 0, 0);
      Formation formation0 = new Formation("2 q!CNm", (Calendar) gregorianCalendar0, 0, respFormation0);
      respFormation0.ajouterFormation(formation0);
      respFormation0.modifierFormation(formation0);
      assertNull(respFormation0.getSex());
  }

  @Test
  public void test6()  throws Throwable  {
      RespFormation respFormation0 = new RespFormation();
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar(0, 0, 0);
      Formation formation0 = new Formation("2 q!CNm", (Calendar) gregorianCalendar0, 0, respFormation0);
      respFormation0.ajouterFormation(formation0);
      Formation formation1 = new Formation(" q!CNm", (Calendar) gregorianCalendar0, 0, respFormation0);
      respFormation0.modifierFormation(formation1);
      assertFalse(formation1.equals(formation0));
  }

  @Test
  public void test7()  throws Throwable  {
      RespFormation respFormation0 = new RespFormation();
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar(0, 0, 0);
      Formation formation0 = new Formation("2 q!CNm", (Calendar) gregorianCalendar0, 0, respFormation0);
      respFormation0.ajouterFormation(formation0);
      Locale locale0 = new Locale("2 q!CNm");
      GregorianCalendar gregorianCalendar1 = (GregorianCalendar)Calendar.getInstance(locale0);
      Formation formation1 = new Formation("2 q!CNm", (Calendar) gregorianCalendar1, 0, respFormation0);
      respFormation0.modifierFormation(formation1);
      assertEquals("java.util.GregorianCalendar[time=1372728437794,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"Europe/Jersey\",offset=0,dstSavings=3600000,useDaylight=true,transitions=242,lastRule=java.util.SimpleTimeZone[id=Europe/Jersey,offset=0,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=6,WEEK_OF_YEAR=27,WEEK_OF_MONTH=1,DAY_OF_MONTH=2,DAY_OF_YEAR=183,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=2,HOUR_OF_DAY=2,MINUTE=27,SECOND=17,MILLISECOND=794,ZONE_OFFSET=0,DST_OFFSET=3600000]", gregorianCalendar1.toString());
      assertEquals(1372728437794L, gregorianCalendar1.getTimeInMillis());
  }
}
