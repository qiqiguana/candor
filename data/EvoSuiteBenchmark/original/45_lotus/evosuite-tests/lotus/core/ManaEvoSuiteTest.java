/*
 * This file was automatically generated by EvoSuite
 */

package lotus.core;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import lotus.core.Mana;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ManaEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Mana mana0 = new Mana("{(4;DcmQG+lf}jl");
      Mana.Color mana_Color0 = Mana.Color.COLORLESS;
      boolean boolean0 = mana0.containsColor(mana_Color0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      Mana mana0 = new Mana((-1485), (-1485), (-1485), (-1485), (-1485), (-1485));
      boolean boolean0 = mana0.canPay(mana0);
      assertEquals((-1485), mana0.white);
      assertEquals(false, boolean0);
      assertEquals((-1485), mana0.red);
      assertEquals((-1485), mana0.green);
      assertEquals((-1485), mana0.colorless);
      assertEquals((-1485), mana0.black);
      assertEquals((-1485), mana0.blue);
  }

  @Test
  public void test2()  throws Throwable  {
      Mana mana0 = new Mana((-1485), (-1485), (-1485), (-1485), (-1485), (-1485));
      Mana.Color mana_Color0 = Mana.Color.COLORLESS;
      boolean boolean0 = mana0.containsColor(mana_Color0);
      assertEquals((-1485), mana0.black);
      assertEquals((-1485), mana0.blue);
      assertEquals((-1485), mana0.colorless);
      assertEquals(true, boolean0);
      assertEquals((-1485), mana0.red);
      assertEquals((-1485), mana0.green);
      assertEquals((-1485), mana0.white);
  }

  @Test
  public void test3()  throws Throwable  {
      Mana mana0 = new Mana((-1485), (-1485), (-1485), (-1485), (-1485), (-1485));
      Mana mana1 = new Mana("{(4;DcmQG+lf}jl");
      boolean boolean0 = mana0.canPay(mana1);
      assertEquals((-1485), mana0.blue);
      assertEquals((-1485), mana0.green);
      assertEquals((-1485), mana0.black);
      assertEquals((-1485), mana0.white);
      assertEquals(false, boolean0);
      assertEquals((-1485), mana0.colorless);
      assertEquals((-1485), mana0.red);
  }

  @Test
  public void test4()  throws Throwable  {
      Mana mana0 = new Mana((-23), (-23), (-23), (-23), (-23), 919);
      Mana mana1 = new Mana("3T");
      boolean boolean0 = mana0.canPay(mana1);
      assertEquals((-23), mana0.red);
      assertEquals((-23), mana0.white);
      assertEquals((-23), mana0.blue);
      assertEquals((-23), mana0.green);
      assertEquals(true, boolean0);
  }
}
