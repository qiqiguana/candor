/*
 * This file was automatically generated by EvoSuite
 */

package ch.bluepenguin.email.client.tapestry.helpers;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import ch.bluepenguin.email.client.Folder;
import ch.bluepenguin.email.client.tapestry.helpers.TreeModelHelper;
import ch.bluepenguin.tapestry.components.menu.model.impl.DefaultMenuModel;
import java.util.ArrayList;
import org.apache.tapestry.IComponent;
import org.apache.tapestry.IRequestCycle;
import org.apache.tapestry.contrib.tree.model.IMutableTreeNode;
import org.apache.tapestry.contrib.tree.model.ITreeDataModel;
import org.apache.tapestry.contrib.tree.model.ITreeNode;
import org.apache.tapestry.contrib.tree.simple.SimpleTreeDataModel;
import org.apache.tapestry.contrib.tree.simple.TreeNode;
import org.apache.tapestry.wml.Deck;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TreeModelHelperEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TreeModelHelper treeModelHelper0 = new TreeModelHelper();
      TreeNode treeNode0 = new TreeNode();
      SimpleTreeDataModel simpleTreeDataModel0 = new SimpleTreeDataModel((ITreeNode) treeNode0);
      ArrayList<Object> arrayList0 = treeModelHelper0.getMenuListDepthFirst((ITreeDataModel) simpleTreeDataModel0);
      assertEquals(false, arrayList0.isEmpty());
      assertNotNull(arrayList0);
  }

  @Test
  public void test1()  throws Throwable  {
      TreeModelHelper treeModelHelper0 = new TreeModelHelper();
      Folder[] folderArray0 = new Folder[1];
      Folder folder0 = new Folder();
      folderArray0[0] = folder0;
      Deck deck0 = new Deck();
      DefaultMenuModel defaultMenuModel0 = (DefaultMenuModel)treeModelHelper0.buildFolderModel(folderArray0, (IComponent) deck0, (IRequestCycle) null);
      assertNotNull(defaultMenuModel0);
      assertEquals("(0) null\n   (0) null", defaultMenuModel0.displayMenuStructure());
  }

  @Test
  public void test2()  throws Throwable  {
      TreeModelHelper treeModelHelper0 = new TreeModelHelper();
      TreeNode treeNode0 = new TreeNode();
      SimpleTreeDataModel simpleTreeDataModel0 = new SimpleTreeDataModel((ITreeNode) treeNode0);
      treeNode0.insert((IMutableTreeNode) treeNode0);
      // Undeclared exception!
      try {
        treeModelHelper0.getMenuListDepthFirst((ITreeDataModel) simpleTreeDataModel0);
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
      }
  }
}
