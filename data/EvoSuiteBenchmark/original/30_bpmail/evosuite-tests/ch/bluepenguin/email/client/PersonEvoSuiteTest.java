/*
 * This file was automatically generated by EvoSuite
 */

package ch.bluepenguin.email.client;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import ch.bluepenguin.email.client.AbstractUniqueID;
import ch.bluepenguin.email.client.Person;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PersonEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Person person0 = new Person();
      String string0 = person0.getNickname();
      assertNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      Person person0 = new Person();
      String string0 = person0.getReserve();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      Person person0 = new Person();
      person0.setLastname("Zw~EiRF|A2AQ#");
      assertNull(person0.getFirstname());
  }

  @Test
  public void test3()  throws Throwable  {
      Person person0 = new Person();
      person0.setNickname("Zw~EiRF|A2AQ#");
      assertEquals("Zw~EiRF|A2AQ#", person0.getNickname());
  }

  @Test
  public void test4()  throws Throwable  {
      Person person0 = new Person();
      person0.setReserve("Zw~EiRF|A2AQ#");
      assertEquals("Zw~EiRF|A2AQ#", person0.getReserve());
  }

  @Test
  public void test5()  throws Throwable  {
      Person person0 = new Person();
      person0.setFirstname((String) null);
      assertNull(person0.getNickname());
  }

  @Test
  public void test6()  throws Throwable  {
      Person person0 = new Person();
      String string0 = person0.getLastname();
      assertNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      Person person0 = new Person();
      String string0 = person0.getFirstname();
      assertNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      Person person0 = new Person();
      AbstractUniqueID abstractUniqueID0 = person0.getUniqueID();
      assertNotNull(abstractUniqueID0);
  }
}
