/*
 * This file was automatically generated by EvoSuite
 */

package ch.bluepenguin.tapestry.components.menu.model.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import ch.bluepenguin.tapestry.components.menu.model.impl.DefaultMenuItem;
import ch.bluepenguin.tapestry.components.menu.renderer.IMenuItemRenderer;
import ch.bluepenguin.tapestry.components.menu.renderer.impl.GenericMarkupMenuItemRenderer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DefaultMenuItemEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultMenuItem defaultMenuItem0 = new DefaultMenuItem((Object) null);
      defaultMenuItem0.getName();
      assertEquals(true, defaultMenuItem0.isLeaf());
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultMenuItem defaultMenuItem0 = new DefaultMenuItem((Object) null);
      int int0 = defaultMenuItem0.getIndex();
      assertEquals(true, defaultMenuItem0.isLeaf());
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultMenuItem defaultMenuItem0 = new DefaultMenuItem((Object) null);
      defaultMenuItem0.setParent((Object) null);
      assertEquals(true, defaultMenuItem0.isLeaf());
  }

  @Test
  public void test3()  throws Throwable  {
      DefaultMenuItem defaultMenuItem0 = new DefaultMenuItem((Object) null);
      boolean boolean0 = defaultMenuItem0.isLeaf();
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      DefaultMenuItem defaultMenuItem0 = new DefaultMenuItem((Object) null);
      defaultMenuItem0.setName((String) null);
      assertEquals(true, defaultMenuItem0.isLeaf());
  }

  @Test
  public void test5()  throws Throwable  {
      DefaultMenuItem defaultMenuItem0 = new DefaultMenuItem((Object) null);
      defaultMenuItem0.getContained();
      assertEquals(true, defaultMenuItem0.isLeaf());
  }

  @Test
  public void test6()  throws Throwable  {
      DefaultMenuItem defaultMenuItem0 = new DefaultMenuItem((Object) null);
      defaultMenuItem0.getRenderer();
      assertEquals(true, defaultMenuItem0.isLeaf());
  }

  @Test
  public void test7()  throws Throwable  {
      DefaultMenuItem defaultMenuItem0 = new DefaultMenuItem((Object) null);
      defaultMenuItem0.getParent();
      assertEquals(true, defaultMenuItem0.isLeaf());
  }

  @Test
  public void test8()  throws Throwable  {
      DefaultMenuItem defaultMenuItem0 = new DefaultMenuItem((Object) null);
      defaultMenuItem0.toString();
      assertEquals(true, defaultMenuItem0.isLeaf());
  }

  @Test
  public void test9()  throws Throwable  {
      DefaultMenuItem defaultMenuItem0 = new DefaultMenuItem((Object) null);
      defaultMenuItem0.setIndex(0);
      assertEquals(0, defaultMenuItem0.getIndex());
      assertEquals(true, defaultMenuItem0.isLeaf());
  }

  @Test
  public void test10()  throws Throwable  {
      DefaultMenuItem defaultMenuItem0 = new DefaultMenuItem((Object) null);
      GenericMarkupMenuItemRenderer genericMarkupMenuItemRenderer0 = new GenericMarkupMenuItemRenderer();
      defaultMenuItem0.setRenderer((IMenuItemRenderer) genericMarkupMenuItemRenderer0);
      assertEquals(true, defaultMenuItem0.isLeaf());
  }

  @Test
  public void test11()  throws Throwable  {
      DefaultMenuItem defaultMenuItem0 = new DefaultMenuItem((Object) "{}");
      int int0 = defaultMenuItem0.getDepth();
      assertEquals(true, defaultMenuItem0.isLeaf());
      assertEquals(0, int0);
  }

  @Test
  public void test12()  throws Throwable  {
      DefaultMenuItem defaultMenuItem0 = new DefaultMenuItem((Object) null);
      defaultMenuItem0.setLeaf(true);
      assertEquals(true, defaultMenuItem0.isLeaf());
  }

  @Test
  public void test13()  throws Throwable  {
      DefaultMenuItem defaultMenuItem0 = new DefaultMenuItem((Object) null);
      defaultMenuItem0.setDepth(0);
      assertEquals(0, defaultMenuItem0.getDepth());
      assertEquals(true, defaultMenuItem0.isLeaf());
  }
}
