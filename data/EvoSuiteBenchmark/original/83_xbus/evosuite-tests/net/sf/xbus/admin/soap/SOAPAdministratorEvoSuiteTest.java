/*
 * This file was automatically generated by EvoSuite
 */

package net.sf.xbus.admin.soap;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import net.sf.xbus.admin.soap.SOAPAdministrator;
import net.sf.xbus.base.core.XException;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SOAPAdministratorEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          SOAPAdministrator sOAPAdministrator0 = new SOAPAdministrator();
          Integer integer0 = new Integer(1116);
          try {
            sOAPAdministrator0.restart("", integer0);
            fail("Expecting exception: XException");
          } catch(XException e) {
            /*
             * I_05_003_0 ; nested exception is: 
             * \tjava.lang.SecurityException: Security manager blocks (java.net.SocketPermission 127.0.0.1:1116 connect,resolve)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkConnect(SecurityManager.java:1034)
             * java.net.Socket.connect(Socket.java:524)
             * sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.apache.axis.components.net.DefaultSocketFactory.create(DefaultSocketFactory.java:153)
             * org.apache.axis.components.net.DefaultSocketFactory.create(DefaultSocketFactory.java:120)
             * org.apache.axis.transport.http.HTTPSender.getSocket(HTTPSender.java:191)
             * org.apache.axis.transport.http.HTTPSender.writeToSocket(HTTPSender.java:404)
             * org.apache.axis.transport.http.HTTPSender.invoke(HTTPSender.java:138)
             * org.apache.axis.strategies.InvocationStrategy.visit(InvocationStrategy.java:32)
             * org.apache.axis.SimpleChain.doVisiting(SimpleChain.java:118)
             * org.apache.axis.SimpleChain.invoke(SimpleChain.java:83)
             * org.apache.axis.client.AxisClient.invoke(AxisClient.java:165)
             * org.apache.axis.client.Call.invokeEngine(Call.java:2784)
             * org.apache.axis.client.Call.invoke(Call.java:2767)
             * org.apache.axis.client.Call.invoke(Call.java:2443)
             * org.apache.axis.client.Call.invoke(Call.java:2366)
             * org.apache.axis.client.Call.invoke(Call.java:1812)
             * net.sf.xbus.admin.soap.SOAPAdministrator.restart(SOAPAdministrator.java:42)
             * sun.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }
}
