/*
 * This file was automatically generated by EvoSuite
 */

package net.sf.xbus.technical.mq;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sf.xbus.base.core.TAManager;
import net.sf.xbus.base.core.XException;
import net.sf.xbus.base.xbussystem.XBUSSystem;
import net.sf.xbus.technical.mq.MQReceiverThread;
import org.evosuite.runtime.System;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MQReceiverThreadEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MQReceiverThread mQReceiverThread0 = new MQReceiverThread((XBUSSystem) null);
      // Undeclared exception!
      try {
        mQReceiverThread0.initializeThread();
        fail("Expecting exception: System.SystemExitException");
      } catch(System.SystemExitException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      MQReceiverThread mQReceiverThread0 = new MQReceiverThread((XBUSSystem) null);
      String string0 = mQReceiverThread0.getAddress();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      MQReceiverThread mQReceiverThread0 = new MQReceiverThread((XBUSSystem) null);
      String string0 = mQReceiverThread0.getReceiverClassName();
      assertEquals("MQReceiverThread", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      MQReceiverThread mQReceiverThread0 = new MQReceiverThread((XBUSSystem) null);
      TAManager tAManager0 = TAManager.getInstance();
      // Undeclared exception!
      try {
        mQReceiverThread0.registerResources(tAManager0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      MQReceiverThread mQReceiverThread0 = new MQReceiverThread((XBUSSystem) null);
      String string0 = mQReceiverThread0.getType();
      assertEquals("Text", string0);
  }
}
