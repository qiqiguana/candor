/*
 * This file was automatically generated by EvoSuite
 */

package net.sf.xbus.base.core.strings;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sf.xbus.base.core.XException;
import net.sf.xbus.base.core.strings.CardinalityStrings;
import org.evosuite.runtime.System;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CardinalityStringsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CardinalityStrings cardinalityStrings0 = new CardinalityStrings();
      assertNotNull(cardinalityStrings0);
  }

  @Test
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try {
        CardinalityStrings.getCardinalityHigh("2", false);
        fail("Expecting exception: System.SystemExitException");
      } catch(System.SystemExitException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      boolean boolean0 = CardinalityStrings.isCardinalityValid("0");
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      boolean boolean0 = CardinalityStrings.isCardinalityInterval("f;", true);
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try {
        CardinalityStrings.getCardinalityLow("zT:", false);
        fail("Expecting exception: System.SystemExitException");
      } catch(System.SystemExitException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try {
        CardinalityStrings.getCardinalityLow("AlwaysQuote", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: -1
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try {
        CardinalityStrings.getCardinalityHigh("/aM=4DM3", true);
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
        /*
         * For input string: \"aM=4DM3\"
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = CardinalityStrings.getCardinalityHigh("<*", true);
      assertEquals(Integer.MAX_VALUE, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      // Undeclared exception!
      try {
        CardinalityStrings.getCardinalityHigh("f;", true);
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
        /*
         * For input string: \";\"
         */
      }
  }
}
