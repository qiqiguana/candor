/*
 * This file was automatically generated by EvoSuite
 */

package net.sf.xbus.admin.jmx;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import net.sf.xbus.admin.jmx.AdministratorJMXConnector;
import net.sf.xbus.base.core.XException;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AdministratorJMXConnectorEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          try {
            AdministratorJMXConnector.resendDeletedMessage("");
            fail("Expecting exception: XException");
          } catch(XException e) {
            /*
             * I_05_001_0 Security manager blocks (java.net.SocketPermission localhost resolve)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkConnect(SecurityManager.java:1031)
             * java.net.InetAddress.getAllByName0(InetAddress.java:1145)
             * java.net.InetAddress.getAllByName(InetAddress.java:1083)
             * java.net.InetAddress.getAllByName(InetAddress.java:1019)
             * java.net.InetAddress.getByName(InetAddress.java:969)
             * java.net.InetSocketAddress.<init>(InetSocketAddress.java:124)
             * java.net.Socket.<init>(Socket.java:189)
             * sun.rmi.transport.proxy.RMIDirectSocketFactory.createSocket(RMIDirectSocketFactory.java:22)
             * sun.rmi.transport.proxy.RMIMasterSocketFactory.createSocket(RMIMasterSocketFactory.java:128)
             * sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:595)
             * sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:198)
             * sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:184)
             * sun.rmi.server.UnicastRef.newCall(UnicastRef.java:322)
             * sun.rmi.registry.RegistryImpl_Stub.lookup(Unknown Source)
             * com.sun.jndi.rmi.registry.RegistryContext.lookup(RegistryContext.java:97)
             * com.sun.jndi.toolkit.url.GenericURLContext.lookup(GenericURLContext.java:185)
             * javax.naming.InitialContext.lookup(InitialContext.java:392)
             * javax.management.remote.rmi.RMIConnector.findRMIServerJNDI(RMIConnector.java:1886)
             * javax.management.remote.rmi.RMIConnector.findRMIServer(RMIConnector.java:1856)
             * javax.management.remote.rmi.RMIConnector.connect(RMIConnector.java:255)
             * javax.management.remote.JMXConnectorFactory.connect(JMXConnectorFactory.java:248)
             * net.sf.xbus.admin.jmx.AdministratorJMXConnector.getMBean(AdministratorJMXConnector.java:100)
             * net.sf.xbus.admin.jmx.AdministratorJMXConnector.resendDeletedMessage(AdministratorJMXConnector.java:93)
             * sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             * sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test1()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          try {
            AdministratorJMXConnector.getJVMStatus();
            fail("Expecting exception: XException");
          } catch(XException e) {
            /*
             * I_05_001_0 Security manager blocks (java.net.SocketPermission localhost resolve)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkConnect(SecurityManager.java:1031)
             * java.net.InetAddress.getAllByName0(InetAddress.java:1145)
             * java.net.InetAddress.getAllByName(InetAddress.java:1083)
             * java.net.InetAddress.getAllByName(InetAddress.java:1019)
             * java.net.InetAddress.getByName(InetAddress.java:969)
             * java.net.InetSocketAddress.<init>(InetSocketAddress.java:124)
             * java.net.Socket.<init>(Socket.java:189)
             * sun.rmi.transport.proxy.RMIDirectSocketFactory.createSocket(RMIDirectSocketFactory.java:22)
             * sun.rmi.transport.proxy.RMIMasterSocketFactory.createSocket(RMIMasterSocketFactory.java:128)
             * sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:595)
             * sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:198)
             * sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:184)
             * sun.rmi.server.UnicastRef.newCall(UnicastRef.java:322)
             * sun.rmi.registry.RegistryImpl_Stub.lookup(Unknown Source)
             * com.sun.jndi.rmi.registry.RegistryContext.lookup(RegistryContext.java:97)
             * com.sun.jndi.toolkit.url.GenericURLContext.lookup(GenericURLContext.java:185)
             * javax.naming.InitialContext.lookup(InitialContext.java:392)
             * javax.management.remote.rmi.RMIConnector.findRMIServerJNDI(RMIConnector.java:1886)
             * javax.management.remote.rmi.RMIConnector.findRMIServer(RMIConnector.java:1856)
             * javax.management.remote.rmi.RMIConnector.connect(RMIConnector.java:255)
             * javax.management.remote.JMXConnectorFactory.connect(JMXConnectorFactory.java:248)
             * net.sf.xbus.admin.jmx.AdministratorJMXConnector.getMBean(AdministratorJMXConnector.java:100)
             * net.sf.xbus.admin.jmx.AdministratorJMXConnector.getJVMStatus(AdministratorJMXConnector.java:63)
             * sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             * sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test2()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          try {
            AdministratorJMXConnector.getDeletedMessageFilenames();
            fail("Expecting exception: XException");
          } catch(XException e) {
            /*
             * I_05_001_0 Security manager blocks (java.net.SocketPermission localhost resolve)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkConnect(SecurityManager.java:1031)
             * java.net.InetAddress.getAllByName0(InetAddress.java:1145)
             * java.net.InetAddress.getAllByName(InetAddress.java:1083)
             * java.net.InetAddress.getAllByName(InetAddress.java:1019)
             * java.net.InetAddress.getByName(InetAddress.java:969)
             * java.net.InetSocketAddress.<init>(InetSocketAddress.java:124)
             * java.net.Socket.<init>(Socket.java:189)
             * sun.rmi.transport.proxy.RMIDirectSocketFactory.createSocket(RMIDirectSocketFactory.java:22)
             * sun.rmi.transport.proxy.RMIMasterSocketFactory.createSocket(RMIMasterSocketFactory.java:128)
             * sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:595)
             * sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:198)
             * sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:184)
             * sun.rmi.server.UnicastRef.newCall(UnicastRef.java:322)
             * sun.rmi.registry.RegistryImpl_Stub.lookup(Unknown Source)
             * com.sun.jndi.rmi.registry.RegistryContext.lookup(RegistryContext.java:97)
             * com.sun.jndi.toolkit.url.GenericURLContext.lookup(GenericURLContext.java:185)
             * javax.naming.InitialContext.lookup(InitialContext.java:392)
             * javax.management.remote.rmi.RMIConnector.findRMIServerJNDI(RMIConnector.java:1886)
             * javax.management.remote.rmi.RMIConnector.findRMIServer(RMIConnector.java:1856)
             * javax.management.remote.rmi.RMIConnector.connect(RMIConnector.java:255)
             * javax.management.remote.JMXConnectorFactory.connect(JMXConnectorFactory.java:248)
             * net.sf.xbus.admin.jmx.AdministratorJMXConnector.getMBean(AdministratorJMXConnector.java:100)
             * net.sf.xbus.admin.jmx.AdministratorJMXConnector.getDeletedMessageFilenames(AdministratorJMXConnector.java:86)
             * sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             * sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test3()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          try {
            AdministratorJMXConnector.readEtc("8hhG;l'?TMe$8l?");
            fail("Expecting exception: XException");
          } catch(XException e) {
            /*
             * I_05_001_0 Security manager blocks (java.net.SocketPermission localhost resolve)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkConnect(SecurityManager.java:1031)
             * java.net.InetAddress.getAllByName0(InetAddress.java:1145)
             * java.net.InetAddress.getAllByName(InetAddress.java:1083)
             * java.net.InetAddress.getAllByName(InetAddress.java:1019)
             * java.net.InetAddress.getByName(InetAddress.java:969)
             * java.net.InetSocketAddress.<init>(InetSocketAddress.java:124)
             * java.net.Socket.<init>(Socket.java:189)
             * sun.rmi.transport.proxy.RMIDirectSocketFactory.createSocket(RMIDirectSocketFactory.java:22)
             * sun.rmi.transport.proxy.RMIMasterSocketFactory.createSocket(RMIMasterSocketFactory.java:128)
             * sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:595)
             * sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:198)
             * sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:184)
             * sun.rmi.server.UnicastRef.newCall(UnicastRef.java:322)
             * sun.rmi.registry.RegistryImpl_Stub.lookup(Unknown Source)
             * com.sun.jndi.rmi.registry.RegistryContext.lookup(RegistryContext.java:97)
             * com.sun.jndi.toolkit.url.GenericURLContext.lookup(GenericURLContext.java:185)
             * javax.naming.InitialContext.lookup(InitialContext.java:392)
             * javax.management.remote.rmi.RMIConnector.findRMIServerJNDI(RMIConnector.java:1886)
             * javax.management.remote.rmi.RMIConnector.findRMIServer(RMIConnector.java:1856)
             * javax.management.remote.rmi.RMIConnector.connect(RMIConnector.java:255)
             * javax.management.remote.JMXConnectorFactory.connect(JMXConnectorFactory.java:248)
             * net.sf.xbus.admin.jmx.AdministratorJMXConnector.getMBean(AdministratorJMXConnector.java:100)
             * net.sf.xbus.admin.jmx.AdministratorJMXConnector.readEtc(AdministratorJMXConnector.java:21)
             * sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             * sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test4()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          try {
            AdministratorJMXConnector.getReceiverServiceStatus();
            fail("Expecting exception: XException");
          } catch(XException e) {
            /*
             * I_05_001_0 Security manager blocks (java.net.SocketPermission localhost resolve)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkConnect(SecurityManager.java:1031)
             * java.net.InetAddress.getAllByName0(InetAddress.java:1145)
             * java.net.InetAddress.getAllByName(InetAddress.java:1083)
             * java.net.InetAddress.getAllByName(InetAddress.java:1019)
             * java.net.InetAddress.getByName(InetAddress.java:969)
             * java.net.InetSocketAddress.<init>(InetSocketAddress.java:124)
             * java.net.Socket.<init>(Socket.java:189)
             * sun.rmi.transport.proxy.RMIDirectSocketFactory.createSocket(RMIDirectSocketFactory.java:22)
             * sun.rmi.transport.proxy.RMIMasterSocketFactory.createSocket(RMIMasterSocketFactory.java:128)
             * sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:595)
             * sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:198)
             * sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:184)
             * sun.rmi.server.UnicastRef.newCall(UnicastRef.java:322)
             * sun.rmi.registry.RegistryImpl_Stub.lookup(Unknown Source)
             * com.sun.jndi.rmi.registry.RegistryContext.lookup(RegistryContext.java:97)
             * com.sun.jndi.toolkit.url.GenericURLContext.lookup(GenericURLContext.java:185)
             * javax.naming.InitialContext.lookup(InitialContext.java:392)
             * javax.management.remote.rmi.RMIConnector.findRMIServerJNDI(RMIConnector.java:1886)
             * javax.management.remote.rmi.RMIConnector.findRMIServer(RMIConnector.java:1856)
             * javax.management.remote.rmi.RMIConnector.connect(RMIConnector.java:255)
             * javax.management.remote.JMXConnectorFactory.connect(JMXConnectorFactory.java:248)
             * net.sf.xbus.admin.jmx.AdministratorJMXConnector.getMBean(AdministratorJMXConnector.java:100)
             * net.sf.xbus.admin.jmx.AdministratorJMXConnector.getReceiverServiceStatus(AdministratorJMXConnector.java:56)
             * sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             * sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test5()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          try {
            AdministratorJMXConnector.demandStopBackgroundReceiver("");
            fail("Expecting exception: XException");
          } catch(XException e) {
            /*
             * I_05_001_0 Security manager blocks (java.net.SocketPermission localhost resolve)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkConnect(SecurityManager.java:1031)
             * java.net.InetAddress.getAllByName0(InetAddress.java:1145)
             * java.net.InetAddress.getAllByName(InetAddress.java:1083)
             * java.net.InetAddress.getAllByName(InetAddress.java:1019)
             * java.net.InetAddress.getByName(InetAddress.java:969)
             * java.net.InetSocketAddress.<init>(InetSocketAddress.java:124)
             * java.net.Socket.<init>(Socket.java:189)
             * sun.rmi.transport.proxy.RMIDirectSocketFactory.createSocket(RMIDirectSocketFactory.java:22)
             * sun.rmi.transport.proxy.RMIMasterSocketFactory.createSocket(RMIMasterSocketFactory.java:128)
             * sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:595)
             * sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:198)
             * sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:184)
             * sun.rmi.server.UnicastRef.newCall(UnicastRef.java:322)
             * sun.rmi.registry.RegistryImpl_Stub.lookup(Unknown Source)
             * com.sun.jndi.rmi.registry.RegistryContext.lookup(RegistryContext.java:97)
             * com.sun.jndi.toolkit.url.GenericURLContext.lookup(GenericURLContext.java:185)
             * javax.naming.InitialContext.lookup(InitialContext.java:392)
             * javax.management.remote.rmi.RMIConnector.findRMIServerJNDI(RMIConnector.java:1886)
             * javax.management.remote.rmi.RMIConnector.findRMIServer(RMIConnector.java:1856)
             * javax.management.remote.rmi.RMIConnector.connect(RMIConnector.java:255)
             * javax.management.remote.JMXConnectorFactory.connect(JMXConnectorFactory.java:248)
             * net.sf.xbus.admin.jmx.AdministratorJMXConnector.getMBean(AdministratorJMXConnector.java:100)
             * net.sf.xbus.admin.jmx.AdministratorJMXConnector.demandStopBackgroundReceiver(AdministratorJMXConnector.java:71)
             * sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             * sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test6()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          try {
            AdministratorJMXConnector.explainErrorcode("");
            fail("Expecting exception: XException");
          } catch(XException e) {
            /*
             * I_05_001_0 Security manager blocks (java.net.SocketPermission localhost resolve)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkConnect(SecurityManager.java:1031)
             * java.net.InetAddress.getAllByName0(InetAddress.java:1145)
             * java.net.InetAddress.getAllByName(InetAddress.java:1083)
             * java.net.InetAddress.getAllByName(InetAddress.java:1019)
             * java.net.InetAddress.getByName(InetAddress.java:969)
             * java.net.InetSocketAddress.<init>(InetSocketAddress.java:124)
             * java.net.Socket.<init>(Socket.java:189)
             * sun.rmi.transport.proxy.RMIDirectSocketFactory.createSocket(RMIDirectSocketFactory.java:22)
             * sun.rmi.transport.proxy.RMIMasterSocketFactory.createSocket(RMIMasterSocketFactory.java:128)
             * sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:595)
             * sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:198)
             * sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:184)
             * sun.rmi.server.UnicastRef.newCall(UnicastRef.java:322)
             * sun.rmi.registry.RegistryImpl_Stub.lookup(Unknown Source)
             * com.sun.jndi.rmi.registry.RegistryContext.lookup(RegistryContext.java:97)
             * com.sun.jndi.toolkit.url.GenericURLContext.lookup(GenericURLContext.java:185)
             * javax.naming.InitialContext.lookup(InitialContext.java:392)
             * javax.management.remote.rmi.RMIConnector.findRMIServerJNDI(RMIConnector.java:1886)
             * javax.management.remote.rmi.RMIConnector.findRMIServer(RMIConnector.java:1856)
             * javax.management.remote.rmi.RMIConnector.connect(RMIConnector.java:255)
             * javax.management.remote.JMXConnectorFactory.connect(JMXConnectorFactory.java:248)
             * net.sf.xbus.admin.jmx.AdministratorJMXConnector.getMBean(AdministratorJMXConnector.java:100)
             * net.sf.xbus.admin.jmx.AdministratorJMXConnector.explainErrorcode(AdministratorJMXConnector.java:35)
             * sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             * sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test7()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          try {
            AdministratorJMXConnector.startBackgroundReceiver("");
            fail("Expecting exception: XException");
          } catch(XException e) {
            /*
             * I_05_001_0 Security manager blocks (java.net.SocketPermission localhost resolve)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkConnect(SecurityManager.java:1031)
             * java.net.InetAddress.getAllByName0(InetAddress.java:1145)
             * java.net.InetAddress.getAllByName(InetAddress.java:1083)
             * java.net.InetAddress.getAllByName(InetAddress.java:1019)
             * java.net.InetAddress.getByName(InetAddress.java:969)
             * java.net.InetSocketAddress.<init>(InetSocketAddress.java:124)
             * java.net.Socket.<init>(Socket.java:189)
             * sun.rmi.transport.proxy.RMIDirectSocketFactory.createSocket(RMIDirectSocketFactory.java:22)
             * sun.rmi.transport.proxy.RMIMasterSocketFactory.createSocket(RMIMasterSocketFactory.java:128)
             * sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:595)
             * sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:198)
             * sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:184)
             * sun.rmi.server.UnicastRef.newCall(UnicastRef.java:322)
             * sun.rmi.registry.RegistryImpl_Stub.lookup(Unknown Source)
             * com.sun.jndi.rmi.registry.RegistryContext.lookup(RegistryContext.java:97)
             * com.sun.jndi.toolkit.url.GenericURLContext.lookup(GenericURLContext.java:185)
             * javax.naming.InitialContext.lookup(InitialContext.java:392)
             * javax.management.remote.rmi.RMIConnector.findRMIServerJNDI(RMIConnector.java:1886)
             * javax.management.remote.rmi.RMIConnector.findRMIServer(RMIConnector.java:1856)
             * javax.management.remote.rmi.RMIConnector.connect(RMIConnector.java:255)
             * javax.management.remote.JMXConnectorFactory.connect(JMXConnectorFactory.java:248)
             * net.sf.xbus.admin.jmx.AdministratorJMXConnector.getMBean(AdministratorJMXConnector.java:100)
             * net.sf.xbus.admin.jmx.AdministratorJMXConnector.startBackgroundReceiver(AdministratorJMXConnector.java:79)
             * sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             * sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test8()  throws Throwable  {
      AdministratorJMXConnector administratorJMXConnector0 = new AdministratorJMXConnector();
      assertNotNull(administratorJMXConnector0);
  }

  @Test
  public void test9()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          try {
            AdministratorJMXConnector.restartReceiverService();
            fail("Expecting exception: XException");
          } catch(XException e) {
            /*
             * I_05_001_0 Security manager blocks (java.net.SocketPermission localhost resolve)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkConnect(SecurityManager.java:1031)
             * java.net.InetAddress.getAllByName0(InetAddress.java:1145)
             * java.net.InetAddress.getAllByName(InetAddress.java:1083)
             * java.net.InetAddress.getAllByName(InetAddress.java:1019)
             * java.net.InetAddress.getByName(InetAddress.java:969)
             * java.net.InetSocketAddress.<init>(InetSocketAddress.java:124)
             * java.net.Socket.<init>(Socket.java:189)
             * sun.rmi.transport.proxy.RMIDirectSocketFactory.createSocket(RMIDirectSocketFactory.java:22)
             * sun.rmi.transport.proxy.RMIMasterSocketFactory.createSocket(RMIMasterSocketFactory.java:128)
             * sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:595)
             * sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:198)
             * sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:184)
             * sun.rmi.server.UnicastRef.newCall(UnicastRef.java:322)
             * sun.rmi.registry.RegistryImpl_Stub.lookup(Unknown Source)
             * com.sun.jndi.rmi.registry.RegistryContext.lookup(RegistryContext.java:97)
             * com.sun.jndi.toolkit.url.GenericURLContext.lookup(GenericURLContext.java:185)
             * javax.naming.InitialContext.lookup(InitialContext.java:392)
             * javax.management.remote.rmi.RMIConnector.findRMIServerJNDI(RMIConnector.java:1886)
             * javax.management.remote.rmi.RMIConnector.findRMIServer(RMIConnector.java:1856)
             * javax.management.remote.rmi.RMIConnector.connect(RMIConnector.java:255)
             * javax.management.remote.JMXConnectorFactory.connect(JMXConnectorFactory.java:248)
             * net.sf.xbus.admin.jmx.AdministratorJMXConnector.getMBean(AdministratorJMXConnector.java:100)
             * net.sf.xbus.admin.jmx.AdministratorJMXConnector.restartReceiverService(AdministratorJMXConnector.java:42)
             * sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             * sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test10()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          try {
            AdministratorJMXConnector.readLog("Background receiver ");
            fail("Expecting exception: XException");
          } catch(XException e) {
            /*
             * I_05_001_0 Security manager blocks (java.net.SocketPermission localhost resolve)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkConnect(SecurityManager.java:1031)
             * java.net.InetAddress.getAllByName0(InetAddress.java:1145)
             * java.net.InetAddress.getAllByName(InetAddress.java:1083)
             * java.net.InetAddress.getAllByName(InetAddress.java:1019)
             * java.net.InetAddress.getByName(InetAddress.java:969)
             * java.net.InetSocketAddress.<init>(InetSocketAddress.java:124)
             * java.net.Socket.<init>(Socket.java:189)
             * sun.rmi.transport.proxy.RMIDirectSocketFactory.createSocket(RMIDirectSocketFactory.java:22)
             * sun.rmi.transport.proxy.RMIMasterSocketFactory.createSocket(RMIMasterSocketFactory.java:128)
             * sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:595)
             * sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:198)
             * sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:184)
             * sun.rmi.server.UnicastRef.newCall(UnicastRef.java:322)
             * sun.rmi.registry.RegistryImpl_Stub.lookup(Unknown Source)
             * com.sun.jndi.rmi.registry.RegistryContext.lookup(RegistryContext.java:97)
             * com.sun.jndi.toolkit.url.GenericURLContext.lookup(GenericURLContext.java:185)
             * javax.naming.InitialContext.lookup(InitialContext.java:392)
             * javax.management.remote.rmi.RMIConnector.findRMIServerJNDI(RMIConnector.java:1886)
             * javax.management.remote.rmi.RMIConnector.findRMIServer(RMIConnector.java:1856)
             * javax.management.remote.rmi.RMIConnector.connect(RMIConnector.java:255)
             * javax.management.remote.JMXConnectorFactory.connect(JMXConnectorFactory.java:248)
             * net.sf.xbus.admin.jmx.AdministratorJMXConnector.getMBean(AdministratorJMXConnector.java:100)
             * net.sf.xbus.admin.jmx.AdministratorJMXConnector.readLog(AdministratorJMXConnector.java:28)
             * sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             * sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test11()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          try {
            AdministratorJMXConnector.stopReceiverService();
            fail("Expecting exception: XException");
          } catch(XException e) {
            /*
             * I_05_001_0 Security manager blocks (java.net.SocketPermission localhost resolve)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkConnect(SecurityManager.java:1031)
             * java.net.InetAddress.getAllByName0(InetAddress.java:1145)
             * java.net.InetAddress.getAllByName(InetAddress.java:1083)
             * java.net.InetAddress.getAllByName(InetAddress.java:1019)
             * java.net.InetAddress.getByName(InetAddress.java:969)
             * java.net.InetSocketAddress.<init>(InetSocketAddress.java:124)
             * java.net.Socket.<init>(Socket.java:189)
             * sun.rmi.transport.proxy.RMIDirectSocketFactory.createSocket(RMIDirectSocketFactory.java:22)
             * sun.rmi.transport.proxy.RMIMasterSocketFactory.createSocket(RMIMasterSocketFactory.java:128)
             * sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:595)
             * sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:198)
             * sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:184)
             * sun.rmi.server.UnicastRef.newCall(UnicastRef.java:322)
             * sun.rmi.registry.RegistryImpl_Stub.lookup(Unknown Source)
             * com.sun.jndi.rmi.registry.RegistryContext.lookup(RegistryContext.java:97)
             * com.sun.jndi.toolkit.url.GenericURLContext.lookup(GenericURLContext.java:185)
             * javax.naming.InitialContext.lookup(InitialContext.java:392)
             * javax.management.remote.rmi.RMIConnector.findRMIServerJNDI(RMIConnector.java:1886)
             * javax.management.remote.rmi.RMIConnector.findRMIServer(RMIConnector.java:1856)
             * javax.management.remote.rmi.RMIConnector.connect(RMIConnector.java:255)
             * javax.management.remote.JMXConnectorFactory.connect(JMXConnectorFactory.java:248)
             * net.sf.xbus.admin.jmx.AdministratorJMXConnector.getMBean(AdministratorJMXConnector.java:100)
             * net.sf.xbus.admin.jmx.AdministratorJMXConnector.stopReceiverService(AdministratorJMXConnector.java:49)
             * sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             * sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }
}
