/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.atom;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.atom.AtomPager;
import com.liferay.portal.atom.AtomRequestContextImpl;
import com.liferay.portal.atom.AtomUtil;
import com.liferay.portal.kernel.atom.AtomRequestContext;
import com.liferay.portal.model.User;
import javax.servlet.http.HttpServletRequest;
import org.apache.abdera.protocol.server.RequestContext;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AtomUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      String string0 = AtomUtil.createFeedTitleFromPortletName((AtomRequestContext) null, "j**xm D");
      assertNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try {
        AtomUtil.saveUserInRequest((HttpServletRequest) null, (User) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      AtomUtil atomUtil0 = new AtomUtil();
      assertNotNull(atomUtil0);
  }

  @Test
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try {
        AtomUtil.saveAtomPagerInRequest((AtomRequestContext) null, (AtomPager) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try {
        AtomUtil.getUser((AtomRequestContext) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      String string0 = AtomUtil.createIdTagPrefix("D");
      assertEquals("", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try {
        AtomUtil.getPager((RequestContext) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      AtomRequestContextImpl atomRequestContextImpl0 = new AtomRequestContextImpl((RequestContext) null);
      // Undeclared exception!
      try {
        AtomUtil.createCollectionLink((AtomRequestContext) atomRequestContextImpl0, "?mcp|Rz*I");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      String string0 = AtomUtil.resolveCollectionUrl("", "");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test
  public void test9()  throws Throwable  {
      String string0 = AtomUtil.setPageInUrl("D?page=-1685", (-1685));
      assertNotNull(string0);
      assertEquals("D?page=-1685", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      String string0 = AtomUtil.setPageInUrl("D", (-1685));
      assertEquals("D?page=-1685", string0);
      assertNotNull(string0);
  }

  @Test
  public void test11()  throws Throwable  {
      String string0 = AtomUtil.setPageInUrl("?mcp|Rz*I", 5);
      assertEquals("?mcp|Rz*I&page=5", string0);
      assertNotNull(string0);
  }
}
