/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.messaging;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.messaging.DestinationStatistics;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DestinationStatisticsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DestinationStatistics destinationStatistics0 = new DestinationStatistics();
      int int0 = destinationStatistics0.getActiveThreadCount();
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      DestinationStatistics destinationStatistics0 = new DestinationStatistics();
      int int0 = destinationStatistics0.getLargestThreadCount();
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      DestinationStatistics destinationStatistics0 = new DestinationStatistics();
      destinationStatistics0.setMaxThreadPoolSize(0);
      assertEquals(0, destinationStatistics0.getMaxThreadPoolSize());
  }

  @Test
  public void test3()  throws Throwable  {
      DestinationStatistics destinationStatistics0 = new DestinationStatistics();
      int int0 = destinationStatistics0.getMaxThreadPoolSize();
      assertEquals(0, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      DestinationStatistics destinationStatistics0 = new DestinationStatistics();
      destinationStatistics0.setSentMessageCount(0L);
      assertEquals(0, destinationStatistics0.getActiveThreadCount());
  }

  @Test
  public void test5()  throws Throwable  {
      DestinationStatistics destinationStatistics0 = new DestinationStatistics();
      int int0 = destinationStatistics0.getCurrentThreadCount();
      assertEquals(0, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      DestinationStatistics destinationStatistics0 = new DestinationStatistics();
      long long0 = destinationStatistics0.getSentMessageCount();
      assertEquals(0L, long0);
  }

  @Test
  public void test7()  throws Throwable  {
      DestinationStatistics destinationStatistics0 = new DestinationStatistics();
      destinationStatistics0.setLargestThreadCount(0);
      assertEquals(0, destinationStatistics0.getLargestThreadCount());
  }

  @Test
  public void test8()  throws Throwable  {
      DestinationStatistics destinationStatistics0 = new DestinationStatistics();
      destinationStatistics0.setPendingMessageCount((-1L));
      assertEquals((-1L), destinationStatistics0.getPendingMessageCount());
  }

  @Test
  public void test9()  throws Throwable  {
      DestinationStatistics destinationStatistics0 = new DestinationStatistics();
      destinationStatistics0.setMinThreadPoolSize(0);
      assertEquals(0, destinationStatistics0.getMinThreadPoolSize());
  }

  @Test
  public void test10()  throws Throwable  {
      DestinationStatistics destinationStatistics0 = new DestinationStatistics();
      destinationStatistics0.setActiveThreadCount(0);
      assertEquals(0, destinationStatistics0.getActiveThreadCount());
  }

  @Test
  public void test11()  throws Throwable  {
      DestinationStatistics destinationStatistics0 = new DestinationStatistics();
      destinationStatistics0.setCurrentThreadCount(0);
      assertEquals(0, destinationStatistics0.getCurrentThreadCount());
  }

  @Test
  public void test12()  throws Throwable  {
      DestinationStatistics destinationStatistics0 = new DestinationStatistics();
      long long0 = destinationStatistics0.getPendingMessageCount();
      assertEquals(0L, long0);
  }

  @Test
  public void test13()  throws Throwable  {
      DestinationStatistics destinationStatistics0 = new DestinationStatistics();
      int int0 = destinationStatistics0.getMinThreadPoolSize();
      assertEquals(0, int0);
  }
}
