/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.search;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.search.Document;
import com.liferay.portal.kernel.search.HitsImpl;
import com.liferay.portal.kernel.search.Query;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class HitsImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HitsImpl hitsImpl0 = new HitsImpl();
      Document[] documentArray0 = hitsImpl0.getDocs();
      assertNull(documentArray0);
  }

  @Test
  public void test1()  throws Throwable  {
      HitsImpl hitsImpl0 = new HitsImpl();
      String[] stringArray0 = hitsImpl0.getSnippets();
      assertNotNull(stringArray0);
  }

  @Test
  public void test2()  throws Throwable  {
      HitsImpl hitsImpl0 = new HitsImpl();
      hitsImpl0.setSearchTime((float) (-925));
      assertEquals((-925.0F), hitsImpl0.getSearchTime(), 0.01F);
  }

  @Test
  public void test3()  throws Throwable  {
      HitsImpl hitsImpl0 = new HitsImpl();
      float[] floatArray0 = hitsImpl0.getScores();
      assertNotNull(floatArray0);
  }

  @Test
  public void test4()  throws Throwable  {
      HitsImpl hitsImpl0 = new HitsImpl();
      hitsImpl0.setQuery((Query) null);
      assertEquals(0, hitsImpl0.getLength());
  }

  @Test
  public void test5()  throws Throwable  {
      HitsImpl hitsImpl0 = new HitsImpl();
      Query query0 = hitsImpl0.getQuery();
      assertNull(query0);
  }

  @Test
  public void test6()  throws Throwable  {
      HitsImpl hitsImpl0 = new HitsImpl();
      Float[] floatArray0 = new Float[5];
      Float float0 = new Float((-1.0E20));
      floatArray0[0] = float0;
      floatArray0[1] = floatArray0[0];
      floatArray0[2] = float0;
      floatArray0[3] = floatArray0[1];
      floatArray0[4] = floatArray0[2];
      hitsImpl0.setScores(floatArray0);
      assertEquals(0, hitsImpl0.getLength());
  }

  @Test
  public void test7()  throws Throwable  {
      HitsImpl hitsImpl0 = new HitsImpl();
      int int0 = hitsImpl0.getLength();
      assertEquals(0, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      HitsImpl hitsImpl0 = new HitsImpl();
      hitsImpl0.setDocs((Document[]) null);
      assertEquals(0, hitsImpl0.getLength());
  }

  @Test
  public void test9()  throws Throwable  {
      HitsImpl hitsImpl0 = new HitsImpl();
      String[] stringArray0 = new String[1];
      hitsImpl0.setQueryTerms(stringArray0);
      assertEquals(0L, hitsImpl0.getStart());
  }

  @Test
  public void test10()  throws Throwable  {
      HitsImpl hitsImpl0 = new HitsImpl();
      // Undeclared exception!
      try {
        hitsImpl0.doc(403);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      HitsImpl hitsImpl0 = new HitsImpl();
      long long0 = hitsImpl0.getStart();
      assertEquals(0L, long0);
  }

  @Test
  public void test12()  throws Throwable  {
      HitsImpl hitsImpl0 = new HitsImpl();
      hitsImpl0.setLength((-925));
      assertEquals(-925, hitsImpl0.getLength());
  }

  @Test
  public void test13()  throws Throwable  {
      HitsImpl hitsImpl0 = new HitsImpl();
      // Undeclared exception!
      try {
        hitsImpl0.snippet(195);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 195
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      HitsImpl hitsImpl0 = new HitsImpl();
      hitsImpl0.setStart(1053L);
      assertEquals(1053L, hitsImpl0.getStart());
  }

  @Test
  public void test15()  throws Throwable  {
      HitsImpl hitsImpl0 = new HitsImpl();
      String[] stringArray0 = new String[1];
      hitsImpl0.setSnippets(stringArray0);
      assertEquals(0L, hitsImpl0.getStart());
  }

  @Test
  public void test16()  throws Throwable  {
      HitsImpl hitsImpl0 = new HitsImpl();
      String[] stringArray0 = hitsImpl0.getQueryTerms();
      assertNull(stringArray0);
  }

  @Test
  public void test17()  throws Throwable  {
      HitsImpl hitsImpl0 = new HitsImpl();
      float float0 = hitsImpl0.getSearchTime();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test
  public void test18()  throws Throwable  {
      HitsImpl hitsImpl0 = new HitsImpl();
      // Undeclared exception!
      try {
        hitsImpl0.score(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 0
         */
      }
  }
}
