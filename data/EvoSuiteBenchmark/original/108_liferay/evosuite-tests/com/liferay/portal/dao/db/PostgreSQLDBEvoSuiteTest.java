/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.dao.db;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.dao.db.PostgreSQLDB;
import java.io.IOException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PostgreSQLDBEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PostgreSQLDB postgreSQLDB0 = new PostgreSQLDB();
      // Undeclared exception!
      try {
        postgreSQLDB0.buildCreateFile("alter table alteretable_nam alter Executon type comlete.eult using Executon::comlete.eult;\n", "alter table alteretable_nam alter Executon type comlete.eult using Executon::comlete.eult;\n");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      PostgreSQLDB postgreSQLDB0 = new PostgreSQLDB();
      assertNotNull(postgreSQLDB0);
      
      String string0 = postgreSQLDB0.buildSQL("-x.4_OsV=:((QvP|\"7c");
      assertNotNull(string0);
      assertEquals("-x.4_OsV=:((QvP|\"7c\n", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      PostgreSQLDB postgreSQLDB0 = (PostgreSQLDB)PostgreSQLDB.getInstance();
      assertEquals("false", postgreSQLDB0.getTemplateFalse());
  }

  @Test
  public void test3()  throws Throwable  {
      PostgreSQLDB postgreSQLDB0 = new PostgreSQLDB();
      // Undeclared exception!
      try {
        postgreSQLDB0.reword("alter_column_name alter_column_name -x.4{OsV=:((QvP|\"7c");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 3
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      PostgreSQLDB postgreSQLDB0 = new PostgreSQLDB();
      assertNotNull(postgreSQLDB0);
      
      String string0 = postgreSQLDB0.buildSQL("alter_column_type alteretable_nam Executon comlete.eult was null.");
      assertNotNull(string0);
      assertEquals("alter table alteretable_nam alter Executon type comlete.eult using Executon::comlete.eult;\n", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      PostgreSQLDB postgreSQLDB0 = new PostgreSQLDB();
      assertNotNull(postgreSQLDB0);
      
      String string0 = postgreSQLDB0.buildSQL("alter_table_name E wcution complete. Result was null.");
      assertEquals("alter table E rename to wcution;\n", string0);
      assertNotNull(string0);
  }
}
