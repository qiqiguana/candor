/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.dao.shard;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.dao.shard.ShardDataSource;
import java.io.PrintWriter;
import java.nio.CharBuffer;
import java.sql.SQLException;
import javax.sql.DataSource;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ShardDataSourceEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ShardDataSource shardDataSource0 = new ShardDataSource();
      // Undeclared exception!
      try {
        shardDataSource0.getLogWriter();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ShardDataSource shardDataSource0 = new ShardDataSource();
      // Undeclared exception!
      try {
        shardDataSource0.setLogWriter((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ShardDataSource shardDataSource0 = new ShardDataSource();
      // Undeclared exception!
      try {
        shardDataSource0.getLoginTimeout();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ShardDataSource shardDataSource0 = new ShardDataSource();
      // Undeclared exception!
      try {
        shardDataSource0.setLoginTimeout(1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      ShardDataSource shardDataSource0 = new ShardDataSource();
      // Undeclared exception!
      try {
        shardDataSource0.getParentLogger();
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      ShardDataSource shardDataSource0 = (ShardDataSource)ShardDataSource.getInstance();
      assertNotNull(shardDataSource0);
  }

  @Test
  public void test6()  throws Throwable  {
      ShardDataSource shardDataSource0 = new ShardDataSource();
      Class<?> class0 = ShardDataSource.class;
      boolean boolean0 = shardDataSource0.isWrapperFor(class0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      ShardDataSource shardDataSource0 = new ShardDataSource();
      // Undeclared exception!
      try {
        shardDataSource0.getConnection("w@o$Aek* CW^\"uq>WK/", "w@o$Aek* CW^\"uq>WK/");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      ShardDataSource shardDataSource0 = new ShardDataSource();
      // Undeclared exception!
      try {
        shardDataSource0.getConnection();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      ShardDataSource shardDataSource0 = new ShardDataSource();
      Class<?> class0 = DataSource.class;
      ShardDataSource shardDataSource1 = (ShardDataSource)shardDataSource0.unwrap((Class<String>) class0);
      assertSame(shardDataSource0, shardDataSource1);
  }

  @Test
  public void test10()  throws Throwable  {
      ShardDataSource shardDataSource0 = new ShardDataSource();
      Class<?> class0 = CharBuffer.class;
      try {
        shardDataSource0.unwrap((Class<Integer>) class0);
        fail("Expecting exception: SQLException");
      } catch(SQLException e) {
        /*
         * Invalid class class java.nio.CharBuffer
         */
      }
  }
}
