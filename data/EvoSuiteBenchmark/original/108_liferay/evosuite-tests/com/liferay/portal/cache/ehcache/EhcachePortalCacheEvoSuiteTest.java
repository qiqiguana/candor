/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.cache.ehcache;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.cache.ehcache.EhcachePortalCache;
import com.liferay.portal.kernel.cache.CacheListener;
import com.liferay.portal.kernel.cache.CacheListenerScope;
import com.liferay.portal.kernel.cache.PortalCache;
import java.io.Serializable;
import net.sf.ehcache.Cache;
import net.sf.ehcache.Ehcache;
import net.sf.ehcache.event.NotificationScope;
import org.jfree.data.xy.XYDatasetTableModel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class EhcachePortalCacheEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      EhcachePortalCache<XYDatasetTableModel, Serializable> ehcachePortalCache0 = new EhcachePortalCache<XYDatasetTableModel, Serializable>((Ehcache) null);
      ehcachePortalCache0.setEhcache((Ehcache) null);
  }

  @Test
  public void test1()  throws Throwable  {
      EhcachePortalCache<String, Serializable> ehcachePortalCache0 = new EhcachePortalCache<String, Serializable>((Ehcache) null);
      // Undeclared exception!
      try {
        ehcachePortalCache0.registerCacheListener((CacheListener<String, Serializable>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      EhcachePortalCache<XYDatasetTableModel, Serializable> ehcachePortalCache0 = new EhcachePortalCache<XYDatasetTableModel, Serializable>((Ehcache) null);
      // Undeclared exception!
      try {
        ehcachePortalCache0.removeAll();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Cache cache0 = new Cache("nf^c", (-393), false, false, (-1747L), (-1747L));
      EhcachePortalCache<String, String> ehcachePortalCache0 = new EhcachePortalCache<String, String>((Ehcache) cache0);
      // Undeclared exception!
      try {
        ehcachePortalCache0.put("nf^c", "nf^c", (-393));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * timeToLive can't be negative
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      EhcachePortalCache<Integer, PortalCache<Integer, Object>> ehcachePortalCache0 = new EhcachePortalCache<Integer, PortalCache<Integer, Object>>((Ehcache) null);
      ehcachePortalCache0.destroy();
  }

  @Test
  public void test5()  throws Throwable  {
      EhcachePortalCache<Integer, Serializable> ehcachePortalCache0 = new EhcachePortalCache<Integer, Serializable>((Ehcache) null);
      CacheListenerScope cacheListenerScope0 = CacheListenerScope.LOCAL;
      NotificationScope notificationScope0 = ehcachePortalCache0.getNotificationScope(cacheListenerScope0);
      assertEquals(NotificationScope.LOCAL, notificationScope0);
  }

  @Test
  public void test6()  throws Throwable  {
      Cache cache0 = new Cache("naK", 0, true, false, (long) 0, 0L);
      EhcachePortalCache<Serializable, Integer> ehcachePortalCache0 = new EhcachePortalCache<Serializable, Integer>((Ehcache) cache0);
      CacheListenerScope cacheListenerScope0 = CacheListenerScope.ALL;
      NotificationScope notificationScope0 = ehcachePortalCache0.getNotificationScope(cacheListenerScope0);
      assertEquals("localhost/127.0.0.1-878a5928-f6c3-45fd-a4e8-e78835363aae", cache0.getGuid());
      assertEquals(NotificationScope.ALL, notificationScope0);
  }

  @Test
  public void test7()  throws Throwable  {
      EhcachePortalCache<Serializable, String> ehcachePortalCache0 = new EhcachePortalCache<Serializable, String>((Ehcache) null);
      CacheListenerScope cacheListenerScope0 = CacheListenerScope.REMOTE;
      NotificationScope notificationScope0 = ehcachePortalCache0.getNotificationScope(cacheListenerScope0);
      assertEquals(NotificationScope.REMOTE, notificationScope0);
  }
}
