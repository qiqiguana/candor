/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.cache.memcached;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.cache.memcached.DefaultMemcachedClientFactory;
import com.liferay.portal.cache.memcached.MemcachePortalCache;
import com.liferay.portal.cache.memcached.MemcachedClientFactory;
import com.liferay.portal.cache.memcached.PooledMemcachePortalCache;
import com.liferay.portal.cache.memcached.PooledMemcachedClientFactory;
import com.liferay.portal.kernel.cache.CacheListener;
import com.liferay.portal.kernel.cache.PortalCache;
import java.util.concurrent.TimeUnit;
import net.spy.memcached.MemcachedClientIF;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PooledMemcachePortalCacheEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PooledMemcachedClientFactory pooledMemcachedClientFactory0 = new PooledMemcachedClientFactory();
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      PooledMemcachePortalCache<Object> pooledMemcachePortalCache0 = new PooledMemcachePortalCache<Object>("u>;", (MemcachedClientFactory) pooledMemcachedClientFactory0, (-1513), timeUnit0);
      // Undeclared exception!
      try {
        pooledMemcachePortalCache0.registerCacheListener((CacheListener<String, Object>) null);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      PooledMemcachedClientFactory pooledMemcachedClientFactory0 = new PooledMemcachedClientFactory();
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      PooledMemcachePortalCache<Integer> pooledMemcachePortalCache0 = new PooledMemcachePortalCache<Integer>("|n/A?]J", (MemcachedClientFactory) pooledMemcachedClientFactory0, 127, timeUnit0);
      pooledMemcachePortalCache0.destroy();
      assertEquals("|n/A?]J", pooledMemcachePortalCache0.getName());
  }

  @Test
  public void test2()  throws Throwable  {
      PooledMemcachedClientFactory pooledMemcachedClientFactory0 = new PooledMemcachedClientFactory();
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      PooledMemcachePortalCache<Object> pooledMemcachePortalCache0 = new PooledMemcachePortalCache<Object>("|n/A?]J", (MemcachedClientFactory) pooledMemcachedClientFactory0, 127, timeUnit0);
      pooledMemcachePortalCache0.put("|n/A?]J", "caret-begin");
      assertEquals("|n/A?]J", pooledMemcachePortalCache0.getName());
  }

  @Test
  public void test3()  throws Throwable  {
      DefaultMemcachedClientFactory defaultMemcachedClientFactory0 = new DefaultMemcachedClientFactory();
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      PooledMemcachePortalCache<PortalCache<String, Integer>> pooledMemcachePortalCache0 = new PooledMemcachePortalCache<PortalCache<String, Integer>>("X/W9@0FwEZr]l", (MemcachedClientFactory) defaultMemcachedClientFactory0, (-1), timeUnit0);
      pooledMemcachePortalCache0.unregisterCacheListener((CacheListener<String, PortalCache<String, Integer>>) null);
  }

  @Test
  public void test4()  throws Throwable  {
      DefaultMemcachedClientFactory defaultMemcachedClientFactory0 = new DefaultMemcachedClientFactory();
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      PooledMemcachePortalCache<String> pooledMemcachePortalCache0 = new PooledMemcachePortalCache<String>("#e", (MemcachedClientFactory) defaultMemcachedClientFactory0, 2, timeUnit0);
      String string0 = pooledMemcachePortalCache0.getName();
      assertEquals("#e", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      PooledMemcachedClientFactory pooledMemcachedClientFactory0 = new PooledMemcachedClientFactory();
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      PooledMemcachePortalCache<Integer> pooledMemcachePortalCache0 = new PooledMemcachePortalCache<Integer>("|n/A?]J", (MemcachedClientFactory) pooledMemcachedClientFactory0, 127, timeUnit0);
      pooledMemcachePortalCache0.removeAll();
      assertEquals("|n/A?]J", pooledMemcachePortalCache0.getName());
  }

  @Test
  public void test6()  throws Throwable  {
      DefaultMemcachedClientFactory defaultMemcachedClientFactory0 = new DefaultMemcachedClientFactory();
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      PooledMemcachePortalCache<MemcachePortalCache<String>> pooledMemcachePortalCache0 = new PooledMemcachePortalCache<MemcachePortalCache<String>>("X/W9@0FwEZr]l", (MemcachedClientFactory) defaultMemcachedClientFactory0, (-1), timeUnit0);
      pooledMemcachePortalCache0.setTimeToLive((-1));
  }

  @Test
  public void test7()  throws Throwable  {
      PooledMemcachedClientFactory pooledMemcachedClientFactory0 = new PooledMemcachedClientFactory();
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      PooledMemcachePortalCache<PortalCache<String, String>> pooledMemcachePortalCache0 = new PooledMemcachePortalCache<PortalCache<String, String>>("|n/A?]J", (MemcachedClientFactory) pooledMemcachedClientFactory0, 127, timeUnit0);
      pooledMemcachePortalCache0.unregisterCacheListeners();
      assertEquals("|n/A?]J", pooledMemcachePortalCache0.getName());
  }

  @Test
  public void test8()  throws Throwable  {
      PooledMemcachedClientFactory pooledMemcachedClientFactory0 = new PooledMemcachedClientFactory();
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      PooledMemcachePortalCache<PortalCache<String, String>> pooledMemcachePortalCache0 = new PooledMemcachePortalCache<PortalCache<String, String>>("|n/A?]J", (MemcachedClientFactory) pooledMemcachedClientFactory0, 127, timeUnit0);
      pooledMemcachePortalCache0.cleanupClient((MemcachedClientIF) null);
      assertEquals("|n/A?]J", pooledMemcachePortalCache0.getName());
  }
}
