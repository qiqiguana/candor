/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.JavaDetector;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JavaDetectorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      String string0 = JavaDetector.getJavaVmVersion();
      assertEquals("20.4-b02", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      String string0 = JavaDetector.getJavaRuntimeVersion();
      assertEquals("1.6.0_29-b11", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      boolean boolean0 = JavaDetector.isIBM();
      assertEquals(true, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      String string0 = JavaDetector.getJavaVersion();
      assertEquals("1.6.0_29", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      boolean boolean0 = JavaDetector.isOpenJDK();
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      boolean boolean0 = JavaDetector.isJDK6();
      assertEquals(true, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      boolean boolean0 = JavaDetector.is64bit();
      assertEquals(true, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      double double0 = JavaDetector.getJavaSpecificationVersion();
      assertEquals(1.6, double0, 0.01D);
  }

  @Test
  public void test8()  throws Throwable  {
      String string0 = JavaDetector.getJavaClassPath();
      assertEquals("/fastdata/ac1gf/SF110/evosuite-0.1-SNAPSHOT-jar-minimal.jar:lib/abdera.jar:lib/activation.jar:lib/alloy-taglib.jar:lib/annotations.jar:lib/ant-apache-bsf.jar:lib/ant-contrib.jar:lib/antelope.jar:lib/ant-ext.jar:lib/ant-installer.jar:lib/ant.jar:lib/antlr2.jar:lib/antlr3.jar:lib/antlr3-runtime.jar:lib/aopalliance.jar:lib/asm-analysis.jar:lib/asm-commons.jar:lib/asm.jar:lib/asm-tree.jar:lib/asm-util.jar:lib/asm-xml.jar:lib/aspectj-rt.jar:lib/aspectj-weaver.jar:lib/axiom-api.jar:lib/axiom-impl.jar:lib/axis-ant.jar:lib/axis.jar:lib/backport-concurrent.jar:lib/bcmail.jar:lib/bcprov.jar:lib/bnd.jar:lib/bobo-browse.jar:lib/bsf.jar:lib/bsh.jar:lib/c3p0.jar:lib/cas-client-core.jar:lib/catalina.jar:lib/ccpp.jar:lib/ccpp-ri.jar:lib/cglib.jar:lib/chardet.jar:lib/chemistry-opencmis-client-api.jar:lib/chemistry-opencmis-client-bindings.jar:lib/chemistry-opencmis-client-impl.jar:lib/chemistry-opencmis-commons-api.jar:lib/chemistry-opencmis-commons-impl.jar:lib/ckpackager.jar:lib/cobertura.jar:lib/commons-beanutils.jar:lib/commons-codec.jar:lib/commons-collections.jar:lib/commons-compress.jar:lib/commons-configuration.jar:lib/commons-dbcp.jar:lib/commons-digester.jar:lib/commons-discovery.jar:lib/commons-email.jar:lib/commons-fileupload.jar:lib/commons-httpclient.jar:lib/commons-io.jar:lib/commons-lang.jar:lib/commons-logging.jar:lib/commons-math.jar:lib/commons-pool.jar:lib/commons-validator.jar:lib/concurrent.jar:lib/crypt.jar:lib/daim.jar:lib/daisydiff.jar:lib/deployment.jar:lib/derby.jar:lib/derbytools.jar:lib/displaytag.jar:lib/dom4j.jar:lib/dtddoc.jar:lib/dtdparser.jar:lib/easyconf.jar:lib/ecj.jar:lib/eclipse-core-runtime.jar:lib/eclipselink.jar:lib/ecs.jar:lib/ehcache-core.jar:lib/ehcache-jgroupsreplication.jar:lib/equinox.jar:lib/fastutil.jar:lib/firebird.jar:lib/flexjson.jar:lib/fontbox.jar:lib/freemarker.jar:lib/freshcookies-security.jar:lib/geronimo-commonj_1.1_spec-1.0.jar:lib/geronimo-jcdi_1.0_spec-1.0.jar:lib/geronimo-spec-ejb-2.1-rc4.jar:lib/gif89.jar:lib/groovy.jar:lib/gt-coverage.jar:lib/gt-metadata.jar:lib/hamcrest-core.jar:lib/hamcrest-library.jar:lib/hessian.jar:lib/hibernate3.jar:lib/hsql.jar:lib/htmlparser.jar:lib/httpclient.jar:lib/httpcore.jar:lib/ical4j.jar:lib/icefaces-comps.jar:lib/icefaces-facelets.jar:lib/icefaces.jar:lib/icq.jar:lib/im4java.jar:lib/interbase.jar:lib/j2h.jar:lib/jaas.jar:lib/jabsorb.jar:lib/jackrabbit-api.jar:lib/jackrabbit-core.jar:lib/jackrabbit-jcr-commons.jar:lib/jackrabbit-spi-commons.jar:lib/jackrabbit-spi.jar:lib/jai_codec.jar:lib/jai_core.jar:lib/jakarta-regexp.jar:lib/jalopy.jar:lib/jamwiki-core.jar:lib/jargs.jar:lib/jarjar.jar:lib/jasper.jar:lib/java-diff.jar:lib/javassist.jar:lib/javax.inject-1.jar:lib/javax.inject-tck-1.jar:lib/jaxb-api.jar:lib/jaxb-impl.jar:lib/jaxen.jar:lib/jaxrpc.jar:lib/jaxws-rt.jar:lib/jazzy.jar:lib/jbi_rt.jar:lib/jcifs.jar:lib/jcommon.jar:lib/jcr.jar:lib/jdom.jar:lib/jempbox.jar:lib/jena.jar:lib/jericho-html.jar:lib/jets3t.jar:lib/jetty-server.jar:lib/jetty-util.jar:lib/jfreechart.jar:lib/jgroups.jar:lib/jhighlight.jar:lib/jhlabs-filters.jar:lib/jms.jar:lib/jndi.jar:lib/jnet.jar:lib/jodconverter.jar:lib/jodd.jar:lib/jodd-wot.jar:lib/jrcs-diff.jar:lib/jruby.jar:lib/jsf-api.jar:lib/jsf-facelets.jar:lib/jsf-impl.jar:lib/jsf-portlet.jar:lib/json-java.jar:lib/jsonrpc.jar:lib/jsp-api.jar:lib/jspwiki.jar:lib/jsqlparser.jar:lib/jsr107cache.jar:lib/jsse.jar:lib/jstl-api.jar:lib/jstl-impl.jar:lib/jta.jar:lib/jtds.jar:lib/juh.jar:lib/junit.jar:lib/jurt.jar:lib/just-ice.jar:lib/jutf7.jar:lib/jymsg.jar:lib/jython.jar:lib/kxml2.jar:lib/liferay-doclet.jar:lib/liferay-icu4j.jar:lib/liferay-yui-compressor.jar:lib/log4j-extras.jar:lib/log4j.jar:lib/lucene-analyzers.jar:lib/lucene-core.jar:lib/lucene-highlighter.jar:lib/lucene-memory.jar:lib/mail.jar:lib/memcached.jar:lib/metadata-extractor.jar:lib/mimepull.jar:lib/mockito.jar:lib/msnm.jar:lib/myfaces-api.jar:lib/myfaces-impl.jar:lib/mysql.jar:lib/nekohtml.jar:lib/oauth.jar:lib/oauth-provider.jar:lib/objenesis.jar:lib/odmg.jar:lib/openid4java.jar:lib/orangevolt-ant-tasks.jar:lib/oro.jar:lib/oscache.jar:lib/p6spy.jar:lib/pdfbox.jar:lib/persistence.jar:lib/poi.jar:lib/poi-ooxml.jar:lib/poi-ooxml-schemas.jar:lib/poi-scratchpad.jar:lib/portal-client.jar:lib/portals-bridges.jar:lib/portletbridge-core.jar:lib/portletbridge-portlet.jar:lib/portlet.jar:lib/postgresql.jar:lib/powermock-mockito.jar:lib/qdox.jar:lib/quartz.jar:lib/rdffilter.jar:lib/relaxngDatatype-20020414.jar:lib/resin.jar:lib/rhino.jar:lib/ridl.jar:lib/rome.jar:lib/ruby-gems.jar:lib/saaj-api.jar:lib/saaj-impl.jar:lib/sap.jar:lib/saxpath.jar:lib/scribe.jar:lib/script-10.jar:lib/sdk-addon-api-0.2.jar:lib/selenium-java.jar:lib/selenium-server.jar:lib/serializer.jar:lib/servlet-api.jar:lib/simplecaptcha.jar:lib/slf4j-api.jar:lib/smtp.jar:lib/soap.jar:lib/sonar-ant-task.jar:lib/spring-aop.jar:lib/spring-asm.jar:lib/spring-aspects.jar:lib/spring-beans.jar:lib/spring-context.jar:lib/spring-context-support.jar:lib/spring-core.jar:lib/spring-expression.jar:lib/spring-instrument.jar:lib/spring-instrument-tomcat.jar:lib/spring-jdbc.jar:lib/spring-jms.jar:lib/spring-orm.jar:lib/spring-oxm.jar:lib/spring-test.jar:lib/spring-transaction.jar:lib/spring-web.jar:lib/spring-web-portlet.jar:lib/spring-web-servlet.jar:lib/spring-web-struts.jar:lib/stax-ex.jar:lib/stax.jar:lib/streambuffer.jar:lib/stringtemplate.jar:lib/struts-el.jar:lib/struts.jar:lib/tagsoup.jar:lib/tika-core.jar:lib/tika-parsers.jar:lib/tlddoc.jar:lib/tomcat-coyote.jar:lib/tomcat-jdbc.jar:lib/tomcat-juli.jar:lib/truezip.jar:lib/unoil.jar:lib/urlrewrite.jar:lib/vaadin.jar:lib/velocity.jar:lib/velocity-tools.jar:lib/wsdl4j.jar:lib/wstx.jar:lib/xalan.jar:lib/xbean.jar:lib/xbean-spring.jar:lib/xercesImpl.jar:lib/xml-apis.jar:lib/xmlsec.jar:lib/xmltask.jar:lib/xpp3.jar:lib/xsdlib-20030807.jar:lib/xstream.jar:lib/xuggle-xuggler-noarch.jar:lib/z_j2ee-1.4.jar:liferay.jar", string0);
  }

  @Test
  public void test9()  throws Throwable  {
      String string0 = JavaDetector.getJavaRuntimeName();
      assertEquals("Java(TM) SE Runtime Environment", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      String string0 = JavaDetector.getJavaVendor();
      assertEquals("Sun Microsystems Inc.", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      boolean boolean0 = JavaDetector.isJDK4();
      assertEquals(true, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      boolean boolean0 = JavaDetector.isJDK5();
      assertEquals(true, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      boolean boolean0 = JavaDetector.isJDK7();
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      JavaDetector javaDetector0 = new JavaDetector();
      assertEquals(true, javaDetector0.isIBM());
  }
}
