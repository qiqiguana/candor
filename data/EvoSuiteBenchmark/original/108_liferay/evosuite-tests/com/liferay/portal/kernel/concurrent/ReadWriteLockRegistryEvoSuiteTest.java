/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.concurrent;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.concurrent.ReadWriteLockKey;
import com.liferay.portal.kernel.concurrent.ReadWriteLockRegistry;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ReadWriteLockRegistryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ReadWriteLockRegistry readWriteLockRegistry0 = new ReadWriteLockRegistry();
      ReentrantReadWriteLock reentrantReadWriteLock0 = new ReentrantReadWriteLock();
      ReadWriteLockKey<ReadWriteLock> readWriteLockKey0 = new ReadWriteLockKey<ReadWriteLock>((ReadWriteLock) reentrantReadWriteLock0, true);
      ReentrantReadWriteLock.WriteLock reentrantReadWriteLock_WriteLock0 = (ReentrantReadWriteLock.WriteLock)readWriteLockRegistry0.acquireLock(readWriteLockKey0);
      assertNotNull(reentrantReadWriteLock_WriteLock0);
      
      ReentrantReadWriteLock.WriteLock reentrantReadWriteLock_WriteLock1 = (ReentrantReadWriteLock.WriteLock)readWriteLockRegistry0.acquireLock(readWriteLockKey0);
      assertEquals(1, reentrantReadWriteLock_WriteLock1.getHoldCount());
  }

  @Test
  public void test1()  throws Throwable  {
      ReadWriteLockRegistry readWriteLockRegistry0 = new ReadWriteLockRegistry();
      ReadWriteLockKey<String> readWriteLockKey0 = new ReadWriteLockKey<String>("A!5Td", false);
      ReentrantReadWriteLock.ReadLock reentrantReadWriteLock_ReadLock0 = (ReentrantReadWriteLock.ReadLock)readWriteLockRegistry0.acquireLock(readWriteLockKey0);
      assertEquals(true, reentrantReadWriteLock_ReadLock0.tryLock());
  }

  @Test
  public void test2()  throws Throwable  {
      ReadWriteLockRegistry readWriteLockRegistry0 = new ReadWriteLockRegistry();
      ReadWriteLockKey<String> readWriteLockKey0 = new ReadWriteLockKey<String>("A!5Td", false);
      readWriteLockRegistry0.releaseLock(readWriteLockKey0);
      assertEquals(false, readWriteLockKey0.isWriteLock());
  }

  @Test
  public void test3()  throws Throwable  {
      ReadWriteLockRegistry readWriteLockRegistry0 = new ReadWriteLockRegistry();
      ReentrantReadWriteLock reentrantReadWriteLock0 = new ReentrantReadWriteLock();
      ReadWriteLockKey<ReadWriteLock> readWriteLockKey0 = new ReadWriteLockKey<ReadWriteLock>((ReadWriteLock) reentrantReadWriteLock0, true);
      readWriteLockRegistry0.releaseLock(readWriteLockKey0);
      assertEquals(true, readWriteLockKey0.isWriteLock());
  }
}
