/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.service.persistence;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.dao.orm.ORMException;
import com.liferay.portal.kernel.dao.orm.Session;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.service.persistence.BatchSession;
import com.liferay.portal.service.persistence.BatchSessionImpl;
import com.liferay.portal.service.persistence.BatchSessionUtil;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BatchSessionUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try {
        BatchSessionUtil.delete((Session) null, (BaseModel<?>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try {
        BatchSessionUtil.isEnabled();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try {
        BatchSessionUtil.setEnabled(false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      BatchSessionUtil batchSessionUtil0 = new BatchSessionUtil();
      BatchSessionImpl batchSessionImpl0 = (BatchSessionImpl)BatchSessionUtil.getBatchSession();
      batchSessionUtil0.setBatchSession((BatchSession) batchSessionImpl0);
  }

  @Test
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try {
        BatchSessionUtil.update((Session) null, (BaseModel<?>) null, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
