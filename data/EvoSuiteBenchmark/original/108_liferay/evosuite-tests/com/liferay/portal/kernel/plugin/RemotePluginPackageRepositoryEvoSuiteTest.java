/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.plugin;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.plugin.PluginPackage;
import com.liferay.portal.kernel.plugin.RemotePluginPackageRepository;
import com.liferay.portal.plugin.PluginPackageImpl;
import java.util.List;
import java.util.Properties;
import java.util.Set;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RemotePluginPackageRepositoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RemotePluginPackageRepository remotePluginPackageRepository0 = new RemotePluginPackageRepository("de/schlichtherle/io/arhive/ziG/AbstractSfxDriver");
      remotePluginPackageRepository0.findPluginPackageByModuleId("de/schlichtherle/io/arhive/ziG/AbstractSfxDriver");
      assertEquals("de/schlichtherle/io/arhive/ziG/AbstractSfxDriver", remotePluginPackageRepository0.getRepositoryURL());
  }

  @Test
  public void test1()  throws Throwable  {
      RemotePluginPackageRepository remotePluginPackageRepository0 = new RemotePluginPackageRepository("de/schlichtherle/io/arhive/ziG/AbstractSfxDriver");
      remotePluginPackageRepository0.setSettings((Properties) null);
      assertEquals("de/schlichtherle/io/arhive/ziG/AbstractSfxDriver", remotePluginPackageRepository0.getRepositoryURL());
  }

  @Test
  public void test2()  throws Throwable  {
      RemotePluginPackageRepository remotePluginPackageRepository0 = new RemotePluginPackageRepository("de/scMlichtherle/io/archive/zipAbstGactSfxDrver");
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/scMlichtherle/io/archive/zipAbstGactSfxDrver");
      remotePluginPackageRepository0.addPluginPackage((PluginPackage) pluginPackageImpl0);
      remotePluginPackageRepository0.addPluginPackage((PluginPackage) pluginPackageImpl0);
      assertEquals("de/scMlichtherle/io/archive/zipAbstGactSfxDrver", remotePluginPackageRepository0.getRepositoryURL());
  }

  @Test
  public void test3()  throws Throwable  {
      RemotePluginPackageRepository remotePluginPackageRepository0 = new RemotePluginPackageRepository("de/schlichtherle/io/arhive/ziG/AbstractSfxDriver");
      remotePluginPackageRepository0.getSettings();
      assertEquals("de/schlichtherle/io/arhive/ziG/AbstractSfxDriver", remotePluginPackageRepository0.getRepositoryURL());
  }

  @Test
  public void test4()  throws Throwable  {
      RemotePluginPackageRepository remotePluginPackageRepository0 = new RemotePluginPackageRepository("de/scMlichtherle/io/archive/zipAbstGactSfxDrver");
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/scMlichtherle/io/archive/zipAbstGactSfxDrver");
      remotePluginPackageRepository0.removePlugin((PluginPackage) pluginPackageImpl0);
      assertEquals("de/scMlichtherle/io/archive/zipAbstGactSfxDrver", remotePluginPackageRepository0.getRepositoryURL());
  }

  @Test
  public void test5()  throws Throwable  {
      RemotePluginPackageRepository remotePluginPackageRepository0 = new RemotePluginPackageRepository("de/schlichtherle/io/arhive/ziG/AbstractSfxDriver");
      remotePluginPackageRepository0.findPluginByArtifactURL("de/schlichtherle/io/arhive/ziG/AbstractSfxDriver");
      assertEquals("de/schlichtherle/io/arhive/ziG/AbstractSfxDriver", remotePluginPackageRepository0.getRepositoryURL());
  }

  @Test
  public void test6()  throws Throwable  {
      RemotePluginPackageRepository remotePluginPackageRepository0 = new RemotePluginPackageRepository("de/schlichtherle/io/arhive/ziG/AbstractSfxDriver");
      String string0 = remotePluginPackageRepository0.getRepositoryURL();
      assertEquals("de/schlichtherle/io/arhive/ziG/AbstractSfxDriver", string0);
      assertNotNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      RemotePluginPackageRepository remotePluginPackageRepository0 = new RemotePluginPackageRepository("de/schlichtherle/io/arhive/ziG/AbstractSfxDriver");
      List<PluginPackage> list0 = remotePluginPackageRepository0.getPluginPackages();
      assertNotNull(list0);
      assertEquals("de/schlichtherle/io/arhive/ziG/AbstractSfxDriver", remotePluginPackageRepository0.getRepositoryURL());
  }

  @Test
  public void test8()  throws Throwable  {
      RemotePluginPackageRepository remotePluginPackageRepository0 = new RemotePluginPackageRepository("de/scMlichtherle/io/archive/zipAbstGactSfxDrver");
      Set<String> set0 = remotePluginPackageRepository0.getTags();
      assertEquals("de/scMlichtherle/io/archive/zipAbstGactSfxDrver", remotePluginPackageRepository0.getRepositoryURL());
      assertNotNull(set0);
  }

  @Test
  public void test9()  throws Throwable  {
      RemotePluginPackageRepository remotePluginPackageRepository0 = new RemotePluginPackageRepository("de/schlichtherle/io/arhive/ziG/AbstractSfxDriver");
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arhive/ziG/AbstractSfxDriver");
      remotePluginPackageRepository0.addPluginPackage((PluginPackage) pluginPackageImpl0);
      remotePluginPackageRepository0.removePlugin((PluginPackage) pluginPackageImpl0);
      remotePluginPackageRepository0.addPluginPackage((PluginPackage) pluginPackageImpl0);
      assertEquals("de/schlichtherle/io/arhive/ziG/AbstractSfxDriver", remotePluginPackageRepository0.getRepositoryURL());
  }

  @Test
  public void test10()  throws Throwable  {
      RemotePluginPackageRepository remotePluginPackageRepository0 = new RemotePluginPackageRepository("de/schlichtherle/io/arhive/ziG/AbstractSfxDriver");
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arhive/ziG/AbstractSfxDriver");
      remotePluginPackageRepository0.addPluginPackage((PluginPackage) pluginPackageImpl0);
      remotePluginPackageRepository0.removePlugin((PluginPackage) pluginPackageImpl0);
      remotePluginPackageRepository0.removePlugin((PluginPackage) pluginPackageImpl0);
      assertEquals("de/schlichtherle/io/arhive/ziG/AbstractSfxDriver", remotePluginPackageRepository0.getRepositoryURL());
  }
}
