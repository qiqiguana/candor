/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.xml;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.xml.Visitor;
import com.liferay.portal.xml.DocumentImpl;
import com.liferay.portal.xml.DocumentTypeImpl;
import com.liferay.portal.xml.ElementImpl;
import org.dom4j.Document;
import org.dom4j.DocumentFactory;
import org.dom4j.DocumentType;
import org.dom4j.Element;
import org.dom4j.dom.DOMDocument;
import org.dom4j.dom.DOMDocumentType;
import org.dom4j.dom.DOMElement;
import org.dom4j.tree.DefaultDocument;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DocumentImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DOMDocumentType dOMDocumentType0 = new DOMDocumentType("=5a`h08qtBs9i<i0", "=5a`h08qtBs9i<i0");
      DefaultDocument defaultDocument0 = new DefaultDocument("=5a`h08qtBs9i<i0", (Element) null, (DocumentType) dOMDocumentType0);
      DocumentImpl documentImpl0 = new DocumentImpl((Document) defaultDocument0);
      documentImpl0.setXMLEncoding("=5a`h08qtBs9i<i0");
      assertEquals("<?xml version=\"1.0\" encoding=\"=5a`h08qtBs9i<i0\"?>\n<!DOCTYPE =5a`h08qtBs9i<i0 SYSTEM \"=5a`h08qtBs9i<i0\">", defaultDocument0.asXML());
      assertEquals("<?xml version=\"1.0\" encoding=\"=5a`h08qtBs9i<i0\"?>\n<!DOCTYPE =5a`h08qtBs9i<i0 SYSTEM \"=5a`h08qtBs9i<i0\">", documentImpl0.asXML());
  }

  @Test
  public void test1()  throws Throwable  {
      DOMDocumentType dOMDocumentType0 = new DOMDocumentType();
      DOMDocument dOMDocument0 = new DOMDocument(dOMDocumentType0);
      DocumentImpl documentImpl0 = new DocumentImpl((Document) dOMDocument0);
      ElementImpl elementImpl0 = (ElementImpl)documentImpl0.getRootElement();
      assertNotNull(elementImpl0);
  }

  @Test
  public void test2()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl((Document) null);
      // Undeclared exception!
      try {
        documentImpl0.accept((Visitor<String>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl((Document) null);
      // Undeclared exception!
      try {
        documentImpl0.toString();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      DOMDocumentType dOMDocumentType0 = new DOMDocumentType();
      DOMDocument dOMDocument0 = new DOMDocument(dOMDocumentType0);
      DocumentImpl documentImpl0 = new DocumentImpl((Document) dOMDocument0);
      documentImpl0.addDocumentType("", "", "");
      assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE >", dOMDocument0.asXML());
      assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE >", documentImpl0.asXML());
  }

  @Test
  public void test5()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl((Document) null);
      // Undeclared exception!
      try {
        documentImpl0.equals((Object) "default");
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * java.lang.String cannot be cast to com.liferay.portal.xml.DocumentImpl
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      DocumentFactory documentFactory0 = DocumentFactory.getInstance();
      DefaultDocument defaultDocument0 = (DefaultDocument)documentFactory0.createDocument("?KT\"k%aV$]/gu");
      DocumentImpl documentImpl0 = new DocumentImpl((Document) defaultDocument0);
      DocumentTypeImpl documentTypeImpl0 = (DocumentTypeImpl)documentImpl0.getDocumentType();
      assertNull(documentTypeImpl0.getSystemId());
  }

  @Test
  public void test7()  throws Throwable  {
      DOMElement dOMElement0 = new DOMElement("");
      DocumentFactory documentFactory0 = DocumentFactory.getInstance();
      DefaultDocument defaultDocument0 = (DefaultDocument)documentFactory0.createDocument();
      DocumentImpl documentImpl0 = new DocumentImpl((Document) defaultDocument0);
      ElementImpl elementImpl0 = new ElementImpl((Element) dOMElement0);
      documentImpl0.setRootElement((com.liferay.portal.kernel.xml.Element) elementImpl0);
      assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n</>", documentImpl0.asXML());
      assertEquals(true, dOMElement0.isRootElement());
  }

  @Test
  public void test8()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl((Document) null);
      // Undeclared exception!
      try {
        documentImpl0.getXMLEncoding();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      DocumentFactory documentFactory0 = DocumentFactory.getInstance();
      DefaultDocument defaultDocument0 = (DefaultDocument)documentFactory0.createDocument("?KT\"k%aV$]/gu");
      DocumentImpl documentImpl0 = new DocumentImpl((Document) defaultDocument0);
      documentImpl0.addComment("");
      assertEquals("<?xml version=\"1.0\" encoding=\"?KT\"k%aV$]/gu\"?>\n<!---->", defaultDocument0.asXML());
      assertEquals(true, documentImpl0.hasContent());
  }

  @Test
  public void test10()  throws Throwable  {
      DocumentFactory documentFactory0 = DocumentFactory.getInstance();
      DefaultDocument defaultDocument0 = (DefaultDocument)documentFactory0.createDocument();
      DocumentImpl documentImpl0 = new DocumentImpl((Document) defaultDocument0);
      DefaultDocument defaultDocument1 = (DefaultDocument)documentImpl0.getWrappedDocument();
      assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n", defaultDocument1.asXML());
  }

  @Test
  public void test11()  throws Throwable  {
      DocumentFactory documentFactory0 = DocumentFactory.getInstance();
      DefaultDocument defaultDocument0 = (DefaultDocument)documentFactory0.createDocument("?KT\"k%aV$]/gu");
      DocumentImpl documentImpl0 = new DocumentImpl((Document) defaultDocument0);
      int int0 = documentImpl0.hashCode();
      assertEquals(112501796, int0);
  }
}
