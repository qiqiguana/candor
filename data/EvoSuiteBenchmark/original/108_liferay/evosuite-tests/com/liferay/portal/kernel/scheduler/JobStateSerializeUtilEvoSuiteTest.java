/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.scheduler;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.scheduler.JobState;
import com.liferay.portal.kernel.scheduler.JobStateSerializeUtil;
import com.liferay.portal.kernel.scheduler.TriggerState;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JobStateSerializeUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JobStateSerializeUtil jobStateSerializeUtil0 = new JobStateSerializeUtil();
      assertNotNull(jobStateSerializeUtil0);
  }

  @Test
  public void test1()  throws Throwable  {
      TriggerState triggerState0 = TriggerState.COMPLETE;
      JobState jobState0 = new JobState(triggerState0);
      Map<String, Object> map0 = JobStateSerializeUtil.serialize(jobState0);
      assertNotNull(map0);
      
      JobState jobState1 = JobStateSerializeUtil.deserialize(map0);
      assertEquals(10, jobState1.getExceptionsMaxSize());
      assertNotNull(jobState1);
  }

  @Test
  public void test2()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try {
        JobStateSerializeUtil.deserialize((Map<String, Object>) hashMap0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Unable to find JobState version number
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TriggerState triggerState0 = TriggerState.COMPLETE;
      JobState jobState0 = new JobState(triggerState0);
      jobState0.addException((Exception) null, (Date) null);
      Map<String, Object> map0 = JobStateSerializeUtil.serialize(jobState0);
      assertNotNull(map0);
      
      JobState jobState1 = JobStateSerializeUtil.deserialize(map0);
      assertEquals(10, jobState1.getExceptionsMaxSize());
      assertNotNull(jobState1);
      assertEquals(5, map0.size());
  }
}
