/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.ResourcePermission;
import com.liferay.portal.model.ResourcePermissionSoap;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ResourcePermissionSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ResourcePermissionSoap resourcePermissionSoap0 = new ResourcePermissionSoap();
      resourcePermissionSoap0.setActionIds(0L);
      assertNull(resourcePermissionSoap0.getPrimKey());
  }

  @Test
  public void test1()  throws Throwable  {
      ResourcePermissionSoap resourcePermissionSoap0 = new ResourcePermissionSoap();
      resourcePermissionSoap0.setPrimaryKey(0L);
      assertNull(resourcePermissionSoap0.getName());
  }

  @Test
  public void test2()  throws Throwable  {
      ResourcePermissionSoap resourcePermissionSoap0 = new ResourcePermissionSoap();
      String string0 = resourcePermissionSoap0.getName();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      ResourcePermissionSoap resourcePermissionSoap0 = new ResourcePermissionSoap();
      resourcePermissionSoap0.setCompanyId(0L);
      assertEquals(0L, resourcePermissionSoap0.getResourcePermissionId());
  }

  @Test
  public void test4()  throws Throwable  {
      ResourcePermissionSoap resourcePermissionSoap0 = new ResourcePermissionSoap();
      int int0 = resourcePermissionSoap0.getScope();
      assertEquals(0, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      ResourcePermissionSoap resourcePermissionSoap0 = new ResourcePermissionSoap();
      long long0 = resourcePermissionSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test6()  throws Throwable  {
      ResourcePermissionSoap resourcePermissionSoap0 = new ResourcePermissionSoap();
      String string0 = resourcePermissionSoap0.getPrimKey();
      assertNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      ResourcePermissionSoap resourcePermissionSoap0 = new ResourcePermissionSoap();
      resourcePermissionSoap0.setName("]S$p+lcI\"9Nfpyr");
      assertEquals(0L, resourcePermissionSoap0.getResourcePermissionId());
  }

  @Test
  public void test8()  throws Throwable  {
      ResourcePermissionSoap resourcePermissionSoap0 = new ResourcePermissionSoap();
      resourcePermissionSoap0.setPrimKey((String) null);
      assertNull(resourcePermissionSoap0.getName());
  }

  @Test
  public void test9()  throws Throwable  {
      ResourcePermissionSoap resourcePermissionSoap0 = new ResourcePermissionSoap();
      resourcePermissionSoap0.setOwnerId(0L);
      assertEquals(0, resourcePermissionSoap0.getScope());
  }

  @Test
  public void test10()  throws Throwable  {
      ResourcePermissionSoap resourcePermissionSoap0 = new ResourcePermissionSoap();
      resourcePermissionSoap0.setRoleId((-1752L));
      assertEquals((-1752L), resourcePermissionSoap0.getRoleId());
  }

  @Test
  public void test11()  throws Throwable  {
      ResourcePermissionSoap resourcePermissionSoap0 = new ResourcePermissionSoap();
      long long0 = resourcePermissionSoap0.getOwnerId();
      assertEquals(0L, long0);
  }

  @Test
  public void test12()  throws Throwable  {
      ResourcePermissionSoap resourcePermissionSoap0 = new ResourcePermissionSoap();
      long long0 = resourcePermissionSoap0.getRoleId();
      assertEquals(0L, long0);
  }

  @Test
  public void test13()  throws Throwable  {
      ResourcePermissionSoap resourcePermissionSoap0 = new ResourcePermissionSoap();
      resourcePermissionSoap0.setScope((-1916));
      assertEquals(-1916, resourcePermissionSoap0.getScope());
  }

  @Test
  public void test14()  throws Throwable  {
      ResourcePermissionSoap resourcePermissionSoap0 = new ResourcePermissionSoap();
      long long0 = resourcePermissionSoap0.getResourcePermissionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test15()  throws Throwable  {
      LinkedList<ResourcePermission> linkedList0 = new LinkedList<ResourcePermission>();
      linkedList0.add((ResourcePermission) null);
      // Undeclared exception!
      try {
        ResourcePermissionSoap.toSoapModels((List<ResourcePermission>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      ResourcePermissionSoap resourcePermissionSoap0 = new ResourcePermissionSoap();
      long long0 = resourcePermissionSoap0.getActionIds();
      assertEquals(0L, long0);
  }

  @Test
  public void test17()  throws Throwable  {
      ResourcePermissionSoap resourcePermissionSoap0 = new ResourcePermissionSoap();
      long long0 = resourcePermissionSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test18()  throws Throwable  {
      ResourcePermission[][] resourcePermissionArray0 = new ResourcePermission[1][3];
      // Undeclared exception!
      try {
        ResourcePermissionSoap.toSoapModels(resourcePermissionArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test19()  throws Throwable  {
      LinkedList<ResourcePermission> linkedList0 = new LinkedList<ResourcePermission>();
      ResourcePermissionSoap[] resourcePermissionSoapArray0 = ResourcePermissionSoap.toSoapModels((List<ResourcePermission>) linkedList0);
      assertNotNull(resourcePermissionSoapArray0);
  }
}
