/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.MethodWrapper;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MethodWrapperEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MethodWrapper methodWrapper0 = new MethodWrapper("~&Y[='h+>fV4{", "~&Y[='h+>fV4{");
      String[] stringArray0 = methodWrapper0.getArgumentClassNames();
      assertNull(stringArray0);
  }

  @Test
  public void test1()  throws Throwable  {
      MethodWrapper methodWrapper0 = new MethodWrapper("~&Y[='h+>fV4{", "~&Y[='h+>fV4{");
      String string0 = methodWrapper0.getMethodName();
      assertEquals("~&Y[='h+>fV4{", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      MethodWrapper methodWrapper0 = new MethodWrapper("~&Y[='h+>fV4{", "~&Y[='h+>fV4{");
      String string0 = methodWrapper0.getClassName();
      assertEquals("~&Y[='h+>fV4{", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      MethodWrapper methodWrapper0 = new MethodWrapper("~&Y[='h+>fV4{", "~&Y[='h+>fV4{");
      Object[] objectArray0 = methodWrapper0.getArguments();
      assertNotNull(objectArray0);
  }

  @Test
  public void test4()  throws Throwable  {
      MethodWrapper methodWrapper0 = new MethodWrapper("{className=~&Y[='h+>fV4{, methodName=~&Y[='h+>fV4{, arguments=[]}", "{className=~&Y[='h+>fV4{, methodName=~&Y[='h+>fV4{, arguments=[]}", "~&Y[='h+>fV4{");
      assertEquals("{className=~&Y[='h+>fV4{, methodName=~&Y[='h+>fV4{, arguments=[]}", methodWrapper0.getClassName());
  }

  @Test
  public void test5()  throws Throwable  {
      MethodWrapper methodWrapper0 = new MethodWrapper("~&Y[='h+>fV4{", "~&Y[='h+>fV4{");
      String string0 = methodWrapper0.toString();
      assertNotNull(string0);
      assertEquals("{className=~&Y[='h+>fV4{, methodName=~&Y[='h+>fV4{, arguments=[]}", string0);
  }
}
