/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.tools.servicebuilder;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.tools.servicebuilder.EntityColumn;
import com.liferay.portal.tools.servicebuilder.EntityFinder;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class EntityFinderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LinkedList<EntityColumn> linkedList0 = new LinkedList<EntityColumn>();
      EntityFinder entityFinder0 = new EntityFinder("=", "=", false, "=", false, (List<EntityColumn>) linkedList0);
      entityFinder0.hasColumn("=");
      assertEquals(false, entityFinder0.isUnique());
      assertEquals(false, entityFinder0.isDBIndex());
  }

  @Test
  public void test1()  throws Throwable  {
      LinkedList<EntityColumn> linkedList0 = new LinkedList<EntityColumn>();
      EntityFinder entityFinder0 = new EntityFinder("=", "=", false, "=", false, (List<EntityColumn>) linkedList0);
      String string0 = entityFinder0.getWhere();
      assertNotNull(string0);
      assertEquals(false, entityFinder0.isDBIndex());
      assertEquals(false, entityFinder0.isUnique());
  }

  @Test
  public void test2()  throws Throwable  {
      LinkedList<EntityColumn> linkedList0 = new LinkedList<EntityColumn>();
      EntityFinder entityFinder0 = new EntityFinder("Ha=x", "Ha=x", false, "Ha=x", false, (List<EntityColumn>) linkedList0);
      List<EntityColumn> list0 = entityFinder0.getColumns();
      assertEquals(false, entityFinder0.isDBIndex());
      assertNotNull(list0);
      assertEquals(false, entityFinder0.isUnique());
  }

  @Test
  public void test3()  throws Throwable  {
      LinkedList<EntityColumn> linkedList0 = new LinkedList<EntityColumn>();
      EntityFinder entityFinder0 = new EntityFinder("Ha=x", "Ha=x", false, "Ha=x", false, (List<EntityColumn>) linkedList0);
      boolean boolean0 = entityFinder0.isDBIndex();
      assertEquals(false, boolean0);
      assertEquals(false, entityFinder0.isUnique());
  }

  @Test
  public void test4()  throws Throwable  {
      LinkedList<EntityColumn> linkedList0 = new LinkedList<EntityColumn>();
      EntityFinder entityFinder0 = new EntityFinder("=", "=", false, "=", false, (List<EntityColumn>) linkedList0);
      String string0 = entityFinder0.getNames();
      assertEquals(false, entityFinder0.isDBIndex());
      assertNotNull(string0);
      assertEquals(false, entityFinder0.isUnique());
  }

  @Test
  public void test5()  throws Throwable  {
      LinkedList<EntityColumn> linkedList0 = new LinkedList<EntityColumn>();
      EntityFinder entityFinder0 = new EntityFinder("=", "=", false, "=", false, (List<EntityColumn>) linkedList0);
      boolean boolean0 = entityFinder0.isUnique();
      assertEquals(false, boolean0);
      assertEquals(false, entityFinder0.isDBIndex());
  }

  @Test
  public void test6()  throws Throwable  {
      LinkedList<EntityColumn> linkedList0 = new LinkedList<EntityColumn>();
      EntityFinder entityFinder0 = new EntityFinder("Ha=x", "Ha=x", false, "Ha=x", false, (List<EntityColumn>) linkedList0);
      String string0 = entityFinder0.getReturnType();
      assertEquals(false, entityFinder0.isUnique());
      assertEquals(false, entityFinder0.isDBIndex());
      assertNotNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      LinkedList<EntityColumn> linkedList0 = new LinkedList<EntityColumn>();
      EntityFinder entityFinder0 = new EntityFinder("Ha=x", "Ha=x", false, "Ha=x", false, (List<EntityColumn>) linkedList0);
      String string0 = entityFinder0.getName();
      assertEquals(false, entityFinder0.isDBIndex());
      assertEquals(false, entityFinder0.isUnique());
      assertNotNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      LinkedList<EntityColumn> linkedList0 = new LinkedList<EntityColumn>();
      EntityFinder entityFinder0 = new EntityFinder("=", "=", false, "=", false, (List<EntityColumn>) linkedList0);
      EntityColumn entityColumn0 = new EntityColumn("=", "=", "=", false, false, false, "=", "=", "=", false, false, false, "=", "=", "=", "=", false, false, false, false, false, false);
      linkedList0.add(entityColumn0);
      EntityColumn entityColumn1 = entityFinder0.getColumn("=");
      assertNotNull(entityColumn1);
      assertEquals(false, entityFinder0.isUnique());
      assertEquals(false, entityFinder0.isDBIndex());
  }

  @Test
  public void test9()  throws Throwable  {
      LinkedList<EntityColumn> linkedList0 = new LinkedList<EntityColumn>();
      EntityFinder entityFinder0 = new EntityFinder("=", "=", false, "=", false, (List<EntityColumn>) linkedList0);
      EntityColumn entityColumn0 = new EntityColumn("=", "=", "=", false, false, false, "=", "=", "=", false, false, false, "=", "=", "=", "=", false, false, false, false, false, false);
      linkedList0.add(entityColumn0);
      EntityColumn entityColumn1 = entityFinder0.getColumn("=s");
      assertEquals(false, entityFinder0.isUnique());
      assertEquals(false, entityFinder0.isDBIndex());
      assertNull(entityColumn1);
  }

  @Test
  public void test10()  throws Throwable  {
      LinkedList<EntityColumn> linkedList0 = new LinkedList<EntityColumn>();
      EntityFinder entityFinder0 = new EntityFinder("Ha=x", "Ha=x", false, "Ha=x", false, (List<EntityColumn>) linkedList0);
      String string0 = entityFinder0.getHumanConditions(true);
      assertEquals(false, entityFinder0.isUnique());
      assertEquals(false, entityFinder0.isDBIndex());
      assertNotNull(string0);
  }

  @Test
  public void test11()  throws Throwable  {
      LinkedList<EntityColumn> linkedList0 = new LinkedList<EntityColumn>();
      EntityColumn entityColumn0 = new EntityColumn(",YPMd.5h4=@K?Hur", ",YPMd.5h4=@K?Hur", ",YPMd.5h4=@K?Hur", true, true, true, ",YPMd.5h4=@K?Hur", ",YPMd.5h4=@K?Hur", ",YPMd.5h4=@K?Hur", true, true, true, ",YPMd.5h4=@K?Hur", ",YPMd.5h4=@K?Hur", ",YPMd.5h4=@K?Hur", ",YPMd.5h4=@K?Hur", true, true, true, true, true, true);
      linkedList0.add(entityColumn0);
      EntityFinder entityFinder0 = new EntityFinder(",YPMd.5h4=@K?Hur", ",YPMd.5h4=@K?Hur", true, ",YPMd.5h4=@K?Hur", true, (List<EntityColumn>) linkedList0);
      String string0 = entityFinder0.getHumanConditions(true);
      assertNotNull(string0);
      assertEquals(",YPMd.5h4=@K?Hur ,YPMd.5h4=@K?Hur any &#63;", string0);
      assertEquals(true, entityFinder0.isDBIndex());
      assertEquals(true, entityFinder0.isUnique());
  }

  @Test
  public void test12()  throws Throwable  {
      LinkedList<EntityColumn> linkedList0 = new LinkedList<EntityColumn>();
      EntityColumn entityColumn0 = new EntityColumn("Ha=x", "Ha=x", "Ha=x", false, false, false, "Ha=x", "Ha=x", "Ha=x", false, false, false, "Ha=x", "", "Ha=x", "", false, false, false, false, false, false);
      linkedList0.add(entityColumn0);
      linkedList0.addFirst(entityColumn0);
      EntityFinder entityFinder0 = new EntityFinder("Ha=x", "Ha=x", false, "Ha=x", false, (List<EntityColumn>) linkedList0);
      String string0 = entityFinder0.getHumanConditions(true);
      assertEquals(false, entityFinder0.isUnique());
      assertEquals(false, entityFinder0.isDBIndex());
      assertNotNull(string0);
      assertEquals("Ha=x Ha=x &#63; and Ha=x Ha=x &#63;", string0);
  }

  @Test
  public void test13()  throws Throwable  {
      LinkedList<EntityColumn> linkedList0 = new LinkedList<EntityColumn>();
      EntityColumn entityColumn0 = new EntityColumn("Ha=x", "Ha=x", "Ha=x", false, false, false, "Ha=x", "Ha=x", "Ha=x", false, false, false, "Ha=x", "", "Ha=x", "", false, false, false, false, false, false);
      linkedList0.add(entityColumn0);
      EntityFinder entityFinder0 = new EntityFinder("Ha=x", "Ha=x", false, "Ha=x", false, (List<EntityColumn>) linkedList0);
      boolean boolean0 = entityFinder0.hasArrayableOperator();
      assertEquals(false, boolean0);
      assertEquals(false, entityFinder0.isUnique());
      assertEquals(false, entityFinder0.isDBIndex());
  }

  @Test
  public void test14()  throws Throwable  {
      LinkedList<EntityColumn> linkedList0 = new LinkedList<EntityColumn>();
      EntityFinder entityFinder0 = new EntityFinder("=", "=", false, "=", false, (List<EntityColumn>) linkedList0);
      EntityColumn entityColumn0 = new EntityColumn("=", "=", "=", false, false, false, "=", "=", "=", false, false, false, "=", "=", "=", "=", false, false, false, false, false, false);
      linkedList0.add(entityColumn0);
      boolean boolean0 = entityFinder0.hasArrayableOperator();
      assertEquals(true, entityFinder0.hasArrayableOperator());
      assertEquals(true, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      LinkedList<EntityColumn> linkedList0 = new LinkedList<EntityColumn>();
      EntityColumn entityColumn0 = new EntityColumn(",YPMd.5h4=@K?Hur", ",YPMd.5h4=@K?Hur", ",YPMd.5h4=@K?Hur", true, true, true, ",YPMd.5h4=@K?Hur", ",YPMd.5h4=@K?Hur", ",YPMd.5h4=@K?Hur", true, true, true, ",YPMd.5h4=@K?Hur", ",YPMd.5h4=@K?Hur", ",YPMd.5h4=@K?Hur", ",YPMd.5h4=@K?Hur", true, true, true, true, true, true);
      linkedList0.add(entityColumn0);
      EntityFinder entityFinder0 = new EntityFinder(",YPMd.5h4=@K?Hur", ",YPMd.5h4=@K?Hur", true, ",YPMd.5h4=@K?Hur", true, (List<EntityColumn>) linkedList0);
      boolean boolean0 = entityFinder0.hasCustomComparator();
      assertEquals(true, boolean0);
      assertEquals(true, entityFinder0.isDBIndex());
      assertEquals(true, entityFinder0.isUnique());
  }

  @Test
  public void test16()  throws Throwable  {
      LinkedList<EntityColumn> linkedList0 = new LinkedList<EntityColumn>();
      EntityFinder entityFinder0 = new EntityFinder("=", "=", false, "=", false, (List<EntityColumn>) linkedList0);
      EntityColumn entityColumn0 = new EntityColumn("=", "=", "=", false, false, false, "=", "=", "=", false, false, false, "=", "=", "=", "=", false, false, false, false, false, false);
      linkedList0.add(entityColumn0);
      boolean boolean0 = entityFinder0.hasCustomComparator();
      assertEquals(false, boolean0);
      assertEquals(false, entityFinder0.isDBIndex());
      assertEquals(false, entityFinder0.isUnique());
  }

  @Test
  public void test17()  throws Throwable  {
      EntityFinder entityFinder0 = new EntityFinder((String) null, (String) null, true, (String) null, true, (List<EntityColumn>) null);
      boolean boolean0 = entityFinder0.isCollection();
      assertEquals(true, entityFinder0.isDBIndex());
      assertEquals(false, boolean0);
      assertEquals(true, entityFinder0.isUnique());
  }

  @Test
  public void test18()  throws Throwable  {
      LinkedList<EntityColumn> linkedList0 = new LinkedList<EntityColumn>();
      EntityFinder entityFinder0 = new EntityFinder("Ha=x", "Ha=x", false, "Ha=x", false, (List<EntityColumn>) linkedList0);
      boolean boolean0 = entityFinder0.isCollection();
      assertEquals(false, entityFinder0.isUnique());
      assertEquals(false, boolean0);
      assertEquals(false, entityFinder0.isDBIndex());
  }

  @Test
  public void test19()  throws Throwable  {
      LinkedList<EntityColumn> linkedList0 = new LinkedList<EntityColumn>();
      EntityFinder entityFinder0 = new EntityFinder("Collection", "Collection", false, "Collection", false, (List<EntityColumn>) linkedList0);
      boolean boolean0 = entityFinder0.isCollection();
      assertEquals(true, boolean0);
      assertEquals(false, entityFinder0.isUnique());
      assertEquals(false, entityFinder0.isDBIndex());
  }
}
