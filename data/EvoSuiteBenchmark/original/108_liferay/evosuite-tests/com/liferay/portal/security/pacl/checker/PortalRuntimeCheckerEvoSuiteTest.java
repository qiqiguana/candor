/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.security.pacl.checker;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.security.pacl.permission.PortalRuntimePermission;
import com.liferay.portal.security.pacl.ActivePACLPolicy;
import com.liferay.portal.security.pacl.PACLPolicy;
import com.liferay.portal.security.pacl.checker.PortalRuntimeChecker;
import java.security.Permission;
import java.util.Properties;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PortalRuntimeCheckerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PortalRuntimeChecker portalRuntimeChecker0 = new PortalRuntimeChecker();
      PortalRuntimePermission portalRuntimePermission0 = new PortalRuntimePermission("searhEng^lne", "mnemonic", "searhEng^lne");
      portalRuntimeChecker0.checkPermission((Permission) portalRuntimePermission0);
      assertEquals("searhEng^lne", portalRuntimePermission0.getProperty());
  }

  @Test
  public void test1()  throws Throwable  {
      PortalRuntimeChecker portalRuntimeChecker0 = new PortalRuntimeChecker();
      PortalRuntimePermission portalRuntimePermission0 = new PortalRuntimePermission("searchEngine", "SwingDisplayedMnemonicIndexKey");
      // Undeclared exception!
      try {
        portalRuntimeChecker0.checkPermission((Permission) portalRuntimePermission0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      PortalRuntimeChecker portalRuntimeChecker0 = new PortalRuntimeChecker();
      ClassLoader classLoader0 = portalRuntimeChecker0.getSystemClassLoader();
      Properties properties0 = new Properties();
      ActivePACLPolicy activePACLPolicy0 = new ActivePACLPolicy("searhEng^lne", classLoader0, properties0);
      portalRuntimeChecker0.setPACLPolicy((PACLPolicy) activePACLPolicy0);
      assertEquals("{active=true, hashCode=281803964, servletContextName=searhEng^lne}", activePACLPolicy0.toString());
      
      portalRuntimeChecker0.afterPropertiesSet();
      Class<?> class0 = PortalRuntimeChecker.class;
      boolean boolean0 = portalRuntimeChecker0.hasGetBeanProperty(class0, "mnemonic");
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      PortalRuntimeChecker portalRuntimeChecker0 = new PortalRuntimeChecker();
      ClassLoader classLoader0 = portalRuntimeChecker0.getSystemClassLoader();
      Properties properties0 = new Properties();
      ActivePACLPolicy activePACLPolicy0 = new ActivePACLPolicy("s", classLoader0, properties0);
      portalRuntimeChecker0.setPACLPolicy((PACLPolicy) activePACLPolicy0);
      assertEquals("{active=true, hashCode=1123212946, servletContextName=s}", activePACLPolicy0.toString());
      
      portalRuntimeChecker0.afterPropertiesSet();
      Class<?> class0 = PortalRuntimeChecker.class;
      boolean boolean0 = portalRuntimeChecker0.hasGetBeanProperty(class0, "");
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      PortalRuntimeChecker portalRuntimeChecker0 = new PortalRuntimeChecker();
      ClassLoader classLoader0 = portalRuntimeChecker0.getSystemClassLoader();
      Properties properties0 = new Properties();
      ActivePACLPolicy activePACLPolicy0 = new ActivePACLPolicy("searhEng^lne", classLoader0, properties0);
      portalRuntimeChecker0.setPACLPolicy((PACLPolicy) activePACLPolicy0);
      assertEquals("{active=true, hashCode=760738782, servletContextName=searhEng^lne}", activePACLPolicy0.toString());
      
      portalRuntimeChecker0.afterPropertiesSet();
      Class<?> class0 = PortalRuntimeChecker.class;
      boolean boolean0 = portalRuntimeChecker0.hasSetBeanProperty(class0, "searhEng^lne");
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      PortalRuntimeChecker portalRuntimeChecker0 = new PortalRuntimeChecker();
      ClassLoader classLoader0 = portalRuntimeChecker0.getSystemClassLoader();
      Properties properties0 = new Properties();
      ActivePACLPolicy activePACLPolicy0 = new ActivePACLPolicy("s", classLoader0, properties0);
      portalRuntimeChecker0.setPACLPolicy((PACLPolicy) activePACLPolicy0);
      assertEquals("{active=true, hashCode=720727243, servletContextName=s}", activePACLPolicy0.toString());
      
      portalRuntimeChecker0.afterPropertiesSet();
      Class<?> class0 = PortalRuntimeChecker.class;
      boolean boolean0 = portalRuntimeChecker0.hasSetBeanProperty(class0, "");
      assertEquals(false, boolean0);
  }
}
