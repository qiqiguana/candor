/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.messaging.config;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.messaging.BaseDestinationEventListener;
import com.liferay.portal.kernel.messaging.BridgingMessageListener;
import com.liferay.portal.kernel.messaging.Destination;
import com.liferay.portal.kernel.messaging.DestinationEventListener;
import com.liferay.portal.kernel.messaging.MessageListener;
import com.liferay.portal.kernel.messaging.SynchronousDestination;
import com.liferay.portal.kernel.messaging.config.DefaultMessagingConfigurator;
import com.liferay.portal.kernel.messaging.config.PluginMessagingConfigurator;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AbstractMessagingConfiguratorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultMessagingConfigurator defaultMessagingConfigurator0 = new DefaultMessagingConfigurator();
      LinkedList<Destination> linkedList0 = new LinkedList<Destination>();
      defaultMessagingConfigurator0.setReplacementDestinations((List<Destination>) linkedList0);
      assertEquals(true, linkedList0.isEmpty());
  }

  @Test
  public void test1()  throws Throwable  {
      PluginMessagingConfigurator pluginMessagingConfigurator0 = new PluginMessagingConfigurator();
      LinkedList<DestinationEventListener> linkedList0 = new LinkedList<DestinationEventListener>();
      BaseDestinationEventListener baseDestinationEventListener0 = new BaseDestinationEventListener();
      linkedList0.add((DestinationEventListener) baseDestinationEventListener0);
      pluginMessagingConfigurator0.setGlobalDestinationEventListeners((List<DestinationEventListener>) linkedList0);
      // Undeclared exception!
      try {
        pluginMessagingConfigurator0.afterPropertiesSet();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      PluginMessagingConfigurator pluginMessagingConfigurator0 = new PluginMessagingConfigurator();
      LinkedList<Destination> linkedList0 = new LinkedList<Destination>();
      SynchronousDestination synchronousDestination0 = new SynchronousDestination();
      linkedList0.add((Destination) synchronousDestination0);
      pluginMessagingConfigurator0.setDestinations((List<Destination>) linkedList0);
      // Undeclared exception!
      try {
        pluginMessagingConfigurator0.init();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      PluginMessagingConfigurator pluginMessagingConfigurator0 = new PluginMessagingConfigurator();
      HashMap<String, List<DestinationEventListener>> hashMap0 = new HashMap<String, List<DestinationEventListener>>();
      LinkedList<DestinationEventListener> linkedList0 = new LinkedList<DestinationEventListener>();
      hashMap0.put("", (List<DestinationEventListener>) linkedList0);
      pluginMessagingConfigurator0.setSpecificDestinationEventListener((Map<String, List<DestinationEventListener>>) hashMap0);
      pluginMessagingConfigurator0.afterPropertiesSet();
  }

  @Test
  public void test4()  throws Throwable  {
      DefaultMessagingConfigurator defaultMessagingConfigurator0 = new DefaultMessagingConfigurator();
      HashMap<String, List<MessageListener>> hashMap0 = new HashMap<String, List<MessageListener>>();
      defaultMessagingConfigurator0.setMessageListeners((Map<String, List<MessageListener>>) hashMap0);
      LinkedList<MessageListener> linkedList0 = new LinkedList<MessageListener>();
      hashMap0.put("", (List<MessageListener>) linkedList0);
      defaultMessagingConfigurator0.afterPropertiesSet();
  }

  @Test
  public void test5()  throws Throwable  {
      HashMap<String, List<MessageListener>> hashMap0 = new HashMap<String, List<MessageListener>>();
      LinkedList<MessageListener> linkedList0 = new LinkedList<MessageListener>();
      PluginMessagingConfigurator pluginMessagingConfigurator0 = new PluginMessagingConfigurator();
      hashMap0.put("", (List<MessageListener>) linkedList0);
      pluginMessagingConfigurator0.setMessageListeners((Map<String, List<MessageListener>>) hashMap0);
      pluginMessagingConfigurator0.destroy();
  }

  @Test
  public void test6()  throws Throwable  {
      HashMap<String, List<MessageListener>> hashMap0 = new HashMap<String, List<MessageListener>>();
      LinkedList<MessageListener> linkedList0 = new LinkedList<MessageListener>();
      PluginMessagingConfigurator pluginMessagingConfigurator0 = new PluginMessagingConfigurator();
      hashMap0.put("", (List<MessageListener>) linkedList0);
      BridgingMessageListener bridgingMessageListener0 = new BridgingMessageListener();
      linkedList0.add((MessageListener) bridgingMessageListener0);
      pluginMessagingConfigurator0.setMessageListeners((Map<String, List<MessageListener>>) hashMap0);
      // Undeclared exception!
      try {
        pluginMessagingConfigurator0.destroy();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      PluginMessagingConfigurator pluginMessagingConfigurator0 = new PluginMessagingConfigurator();
      LinkedList<Destination> linkedList0 = new LinkedList<Destination>();
      SynchronousDestination synchronousDestination0 = new SynchronousDestination();
      linkedList0.add((Destination) synchronousDestination0);
      pluginMessagingConfigurator0.setDestinations((List<Destination>) linkedList0);
      // Undeclared exception!
      try {
        pluginMessagingConfigurator0.destroy();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      PluginMessagingConfigurator pluginMessagingConfigurator0 = new PluginMessagingConfigurator();
      HashMap<String, List<DestinationEventListener>> hashMap0 = new HashMap<String, List<DestinationEventListener>>();
      LinkedList<DestinationEventListener> linkedList0 = new LinkedList<DestinationEventListener>();
      hashMap0.put("", (List<DestinationEventListener>) linkedList0);
      pluginMessagingConfigurator0.setSpecificDestinationEventListener((Map<String, List<DestinationEventListener>>) hashMap0);
      pluginMessagingConfigurator0.destroy();
  }
}
