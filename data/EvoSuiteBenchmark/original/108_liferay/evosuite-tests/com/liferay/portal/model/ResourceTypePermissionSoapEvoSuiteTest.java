/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.ResourceTypePermission;
import com.liferay.portal.model.ResourceTypePermissionSoap;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ResourceTypePermissionSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ResourceTypePermissionSoap resourceTypePermissionSoap0 = new ResourceTypePermissionSoap();
      long long0 = resourceTypePermissionSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test1()  throws Throwable  {
      ResourceTypePermissionSoap resourceTypePermissionSoap0 = new ResourceTypePermissionSoap();
      String string0 = resourceTypePermissionSoap0.getName();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      ResourceTypePermissionSoap resourceTypePermissionSoap0 = new ResourceTypePermissionSoap();
      resourceTypePermissionSoap0.setPrimaryKey(0L);
      assertEquals(0L, resourceTypePermissionSoap0.getCompanyId());
  }

  @Test
  public void test3()  throws Throwable  {
      ResourceTypePermissionSoap resourceTypePermissionSoap0 = new ResourceTypePermissionSoap();
      resourceTypePermissionSoap0.setGroupId((-45L));
      assertEquals((-45L), resourceTypePermissionSoap0.getGroupId());
  }

  @Test
  public void test4()  throws Throwable  {
      ResourceTypePermissionSoap resourceTypePermissionSoap0 = new ResourceTypePermissionSoap();
      long long0 = resourceTypePermissionSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test5()  throws Throwable  {
      ResourceTypePermissionSoap resourceTypePermissionSoap0 = new ResourceTypePermissionSoap();
      long long0 = resourceTypePermissionSoap0.getGroupId();
      assertEquals(0L, long0);
  }

  @Test
  public void test6()  throws Throwable  {
      ResourceTypePermissionSoap resourceTypePermissionSoap0 = new ResourceTypePermissionSoap();
      long long0 = resourceTypePermissionSoap0.getResourceTypePermissionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test7()  throws Throwable  {
      ResourceTypePermissionSoap resourceTypePermissionSoap0 = new ResourceTypePermissionSoap();
      resourceTypePermissionSoap0.setName("^Msa@(QjW~1C-:E");
      assertEquals(0L, resourceTypePermissionSoap0.getPrimaryKey());
  }

  @Test
  public void test8()  throws Throwable  {
      ResourceTypePermissionSoap resourceTypePermissionSoap0 = new ResourceTypePermissionSoap();
      resourceTypePermissionSoap0.setActionIds((-45L));
      assertEquals((-45L), resourceTypePermissionSoap0.getActionIds());
  }

  @Test
  public void test9()  throws Throwable  {
      ResourceTypePermissionSoap resourceTypePermissionSoap0 = new ResourceTypePermissionSoap();
      resourceTypePermissionSoap0.setRoleId((-45L));
      assertEquals((-45L), resourceTypePermissionSoap0.getRoleId());
  }

  @Test
  public void test10()  throws Throwable  {
      LinkedList<ResourceTypePermission> linkedList0 = new LinkedList<ResourceTypePermission>();
      linkedList0.add((ResourceTypePermission) null);
      // Undeclared exception!
      try {
        ResourceTypePermissionSoap.toSoapModels((List<ResourceTypePermission>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      ResourceTypePermissionSoap resourceTypePermissionSoap0 = new ResourceTypePermissionSoap();
      resourceTypePermissionSoap0.setCompanyId(0L);
      assertEquals(0L, resourceTypePermissionSoap0.getActionIds());
  }

  @Test
  public void test12()  throws Throwable  {
      ResourceTypePermissionSoap resourceTypePermissionSoap0 = new ResourceTypePermissionSoap();
      long long0 = resourceTypePermissionSoap0.getRoleId();
      assertEquals(0L, long0);
  }

  @Test
  public void test13()  throws Throwable  {
      ResourceTypePermissionSoap resourceTypePermissionSoap0 = new ResourceTypePermissionSoap();
      long long0 = resourceTypePermissionSoap0.getActionIds();
      assertEquals(0L, long0);
  }

  @Test
  public void test14()  throws Throwable  {
      ResourceTypePermission[][] resourceTypePermissionArray0 = new ResourceTypePermission[1][5];
      // Undeclared exception!
      try {
        ResourceTypePermissionSoap.toSoapModels(resourceTypePermissionArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      LinkedList<ResourceTypePermission> linkedList0 = new LinkedList<ResourceTypePermission>();
      ResourceTypePermissionSoap[] resourceTypePermissionSoapArray0 = ResourceTypePermissionSoap.toSoapModels((List<ResourceTypePermission>) linkedList0);
      assertNotNull(resourceTypePermissionSoapArray0);
  }
}
