/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.scheduler;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.messaging.Message;
import com.liferay.portal.kernel.scheduler.CronTrigger;
import com.liferay.portal.kernel.scheduler.IntervalTrigger;
import com.liferay.portal.kernel.scheduler.SchedulerEngineHelper;
import com.liferay.portal.kernel.scheduler.SchedulerEngineHelperUtil;
import com.liferay.portal.kernel.scheduler.SchedulerEntry;
import com.liferay.portal.kernel.scheduler.SchedulerEntryImpl;
import com.liferay.portal.kernel.scheduler.SchedulerException;
import com.liferay.portal.kernel.scheduler.StorageType;
import com.liferay.portal.kernel.scheduler.Trigger;
import com.liferay.portal.kernel.scheduler.TriggerState;
import com.liferay.portal.kernel.scheduler.messaging.SchedulerResponse;
import com.liferay.portal.scheduler.SchedulerEngineHelperImpl;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import javax.portlet.PortletRequest;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SchedulerEngineHelperUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SchedulerEngineHelperUtil schedulerEngineHelperUtil0 = new SchedulerEngineHelperUtil();
      SchedulerEngineHelperImpl schedulerEngineHelperImpl0 = (SchedulerEngineHelperImpl)SchedulerEngineHelperUtil.getSchedulerEngineHelper();
      schedulerEngineHelperUtil0.setSchedulerEngineHelper((SchedulerEngineHelper) schedulerEngineHelperImpl0);
  }

  @Test
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.start();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-470), "hibernate.generate_statistics");
      Locale locale0 = Locale.UK;
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar((TimeZone) simpleTimeZone0, locale0);
      Date date0 = gregorianCalendar0.getGregorianChange();
      CronTrigger cronTrigger0 = new CronTrigger("hibernate.generate_statistics", "hibernate.generate_statistics", date0, date0, "hibernate.generate_statistics");
      StorageType storageType0 = StorageType.PERSISTED;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.addJob((Trigger) cronTrigger0, storageType0, "hibernate.generate_statistics", "hibernate.generate_statistics", (Message) null, "hibernate.generate_statistics", "hibernate.generate_statistics", (-470));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      StorageType storageType0 = StorageType.MEMORY_CLUSTERED;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.getJobExceptions("", "", storageType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      StorageType storageType0 = StorageType.MEMORY_CLUSTERED;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.unschedule("yui.copressor.js.munge", storageType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      StorageType storageType0 = StorageType.PERSISTED;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.pause("9J i_%vkTK", storageType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      GregorianCalendar gregorianCalendar0 = (GregorianCalendar)Calendar.getInstance();
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.getCronText((PortletRequest) null, (Calendar) gregorianCalendar0, false, 5106);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      StorageType storageType0 = StorageType.MEMORY;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.resume("", " and reuse previous one", storageType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar(1506, (-1098), 1506, 1506, (-1098));
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.getCronText((Calendar) gregorianCalendar0, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      StorageType storageType0 = StorageType.MEMORY;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.delete("y.Q", storageType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      StorageType storageType0 = StorageType.PERSISTED;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.getPreviousFireTime("y$FQ_|!Nqp9J!qeB</", "", storageType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      StorageType storageType0 = StorageType.PERSISTED;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.getNextFireTime("", "", storageType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      StorageType storageType0 = StorageType.MEMORY;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.pause("'}5V", "'}5V", storageType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      StorageType storageType0 = StorageType.MEMORY;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.resume((String) null, storageType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      StorageType storageType0 = StorageType.MEMORY_CLUSTERED;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.getJobState((String) null, (String) null, storageType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      IntervalTrigger intervalTrigger0 = new IntervalTrigger("j/KLyG`\"[Ms", "j/KLyG`\"[Ms", (-1L));
      StorageType storageType0 = StorageType.MEMORY;
      Message message0 = new Message();
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.schedule((Trigger) intervalTrigger0, storageType0, "j/KLyG`\"[Ms", "j/KLyG`\"[Ms", message0, (-1083));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      StorageType storageType0 = StorageType.MEMORY_CLUSTERED;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.addJob((Trigger) null, storageType0, (String) null, (String) null, (Object) "javax.portlet.ccpp", (String) null, "javax.portlet.ccpp", 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test17()  throws Throwable  {
      Message message0 = new Message();
      TriggerState triggerState0 = TriggerState.NORMAL;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.auditSchedulerJobs(message0, triggerState0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test18()  throws Throwable  {
      SchedulerResponse schedulerResponse0 = new SchedulerResponse();
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.getNextFireTime(schedulerResponse0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test19()  throws Throwable  {
      SchedulerResponse schedulerResponse0 = new SchedulerResponse();
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.getFinalFireTime(schedulerResponse0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test20()  throws Throwable  {
      SchedulerEntryImpl schedulerEntryImpl0 = new SchedulerEntryImpl();
      StorageType storageType0 = StorageType.MEMORY;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.schedule((SchedulerEntry) schedulerEntryImpl0, storageType0, "bLUV%6Fb[PrRnsEu", (-1355));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test21()  throws Throwable  {
      StorageType storageType0 = StorageType.MEMORY;
      SchedulerEntryImpl schedulerEntryImpl0 = new SchedulerEntryImpl();
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.unschedule((SchedulerEntry) schedulerEntryImpl0, storageType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test22()  throws Throwable  {
      StorageType storageType0 = StorageType.MEMORY_CLUSTERED;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.delete((SchedulerEntry) null, storageType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test23()  throws Throwable  {
      SchedulerResponse schedulerResponse0 = new SchedulerResponse();
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.getJobExceptions(schedulerResponse0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test24()  throws Throwable  {
      SchedulerResponse schedulerResponse0 = new SchedulerResponse();
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.getPreviousFireTime(schedulerResponse0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test25()  throws Throwable  {
      StorageType storageType0 = StorageType.MEMORY;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.delete("gR^JP04/f~0aQ;'j&.<", "gR^JP04/f~0aQ;'j&.<", storageType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test26()  throws Throwable  {
      StorageType storageType0 = StorageType.PERSISTED;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.getScheduledJobs((String) null, storageType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test27()  throws Throwable  {
      SchedulerResponse schedulerResponse0 = new SchedulerResponse();
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.getEndTime(schedulerResponse0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test28()  throws Throwable  {
      IntervalTrigger intervalTrigger0 = new IntervalTrigger("... InvocationTargetException: ", "... InvocationTargetException: ", (-1L));
      StorageType storageType0 = StorageType.MEMORY;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.schedule((Trigger) intervalTrigger0, storageType0, "... InvocationTargetException: ", "... InvocationTargetException: ", (Object) null, (-1337));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test29()  throws Throwable  {
      StorageType storageType0 = StorageType.MEMORY;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.suppressError("", "", storageType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.shutdown();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test31()  throws Throwable  {
      StorageType storageType0 = StorageType.PERSISTED;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.getScheduledJobs(storageType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test32()  throws Throwable  {
      IntervalTrigger intervalTrigger0 = new IntervalTrigger("Jdk13Lumberjack", "Jdk13Lumberjack", 1945L);
      StorageType storageType0 = StorageType.PERSISTED;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.addScriptingJob((Trigger) intervalTrigger0, storageType0, "Jdk13Lumberjack", "Jdk13Lumberjack", "Jdk13Lumberjack", (-1));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test33()  throws Throwable  {
      StorageType storageType0 = StorageType.PERSISTED;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.getStartTime("GOIT/|*b", "GOIT/|*b", storageType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.initialize();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test35()  throws Throwable  {
      StorageType storageType0 = StorageType.MEMORY;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.update("g", "g", storageType0, "g", "g", "g", 1175);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test36()  throws Throwable  {
      StorageType storageType0 = StorageType.PERSISTED;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.getScheduledJob((String) null, (String) null, storageType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.getScheduledJobs();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test38()  throws Throwable  {
      StorageType storageType0 = StorageType.MEMORY;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.update((Trigger) null, storageType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test39()  throws Throwable  {
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.getStartTime((SchedulerResponse) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test40()  throws Throwable  {
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.updateMemorySchedulerClusterMaster();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test41()  throws Throwable  {
      StorageType storageType0 = StorageType.MEMORY_CLUSTERED;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.unschedule("", "", storageType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test42()  throws Throwable  {
      StorageType storageType0 = StorageType.MEMORY;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.namespaceGroupName("END_TIME", storageType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test43()  throws Throwable  {
      StorageType storageType0 = StorageType.PERSISTED;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.getEndTime("Path ", "Path ", storageType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test44()  throws Throwable  {
      StorageType storageType0 = StorageType.PERSISTED;
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.getFinalFireTime("cWTbCM/)Au`ktC|", "cWTbCM/)Au`ktC|", storageType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test45()  throws Throwable  {
      // Undeclared exception!
      try {
        SchedulerEngineHelperUtil.getJobState((SchedulerResponse) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
