/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.impl.CountryCacheModel;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CountryCacheModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CountryCacheModel countryCacheModel0 = new CountryCacheModel();
      // Undeclared exception!
      try {
        countryCacheModel0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      CountryCacheModel countryCacheModel0 = new CountryCacheModel();
      String string0 = countryCacheModel0.toString();
      assertEquals("{countryId=0, name=null, a2=null, a3=null, number=null, idd=null, zipRequired=false, active=false}", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      CountryCacheModel countryCacheModel0 = new CountryCacheModel();
      countryCacheModel0.name = "D#sS-rqXMO&<";
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1127);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      countryCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(false, countryCacheModel0.zipRequired);
  }

  @Test
  public void test3()  throws Throwable  {
      CountryCacheModel countryCacheModel0 = new CountryCacheModel();
      countryCacheModel0.a2 = "{countryId=0, name=D#sS-rqXMO&<, a2=null, a3=null, number=null, idd=null, zipRequired=false, active=false}";
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1127);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      countryCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(false, countryCacheModel0.active);
  }

  @Test
  public void test4()  throws Throwable  {
      CountryCacheModel countryCacheModel0 = new CountryCacheModel();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1127);
      countryCacheModel0.a3 = "{countryId=0, name=D#sS-rqXMO&<, a2=null, a3=null, number=null, idd=null, zipRequired=false, active=false}";
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      countryCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals("{countryId=0, name=null, a2=null, a3={countryId=0, name=D#sS-rqXMO&<, a2=null, a3=null, number=null, idd=null, zipRequired=false, active=false}, number=null, idd=null, zipRequired=false, active=false}", countryCacheModel0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      CountryCacheModel countryCacheModel0 = new CountryCacheModel();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      countryCacheModel0.idd = "TZpKUnHlrr<9A6}f";
      countryCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0L, countryCacheModel0.countryId);
  }
}
