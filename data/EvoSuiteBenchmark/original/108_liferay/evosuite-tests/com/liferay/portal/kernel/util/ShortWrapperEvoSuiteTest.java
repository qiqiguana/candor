/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.ShortWrapper;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ShortWrapperEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ShortWrapper shortWrapper0 = new ShortWrapper((short) (-1));
      assertEquals(-2, shortWrapper0.decrement());
      
      shortWrapper0.setValue((short)0);
      assertEquals(0, shortWrapper0.getValue());
      assertEquals(0, shortWrapper0.increment());
  }

  @Test
  public void test1()  throws Throwable  {
      ShortWrapper shortWrapper0 = new ShortWrapper();
      ShortWrapper shortWrapper1 = new ShortWrapper((short)0);
      shortWrapper0.increment();
      int int0 = shortWrapper1.compareTo(shortWrapper0);
      assertEquals(0, shortWrapper0.decrement());
      assertEquals((-1), int0);
  }

  @Test
  public void test2()  throws Throwable  {
      ShortWrapper shortWrapper0 = new ShortWrapper((short) (-1));
      short short0 = shortWrapper0.decrement();
      assertEquals(-2, shortWrapper0.getValue());
      assertEquals((short) (-2), short0);
  }

  @Test
  public void test3()  throws Throwable  {
      ShortWrapper shortWrapper0 = new ShortWrapper((short) (-1));
      short short0 = shortWrapper0.increment();
      assertEquals(-1, shortWrapper0.decrement());
      assertEquals((short)0, short0);
  }

  @Test
  public void test4()  throws Throwable  {
      ShortWrapper shortWrapper0 = new ShortWrapper((short) (-1));
      int int0 = shortWrapper0.compareTo(shortWrapper0);
      assertEquals(0, int0);
      assertEquals(-1, shortWrapper0.getValue());
  }

  @Test
  public void test5()  throws Throwable  {
      ShortWrapper shortWrapper0 = new ShortWrapper((short) (-1));
      int int0 = shortWrapper0.compareTo((ShortWrapper) null);
      assertEquals(1, int0);
      assertEquals(-2, shortWrapper0.decrement());
  }

  @Test
  public void test6()  throws Throwable  {
      ShortWrapper shortWrapper0 = new ShortWrapper((short)1577);
      ShortWrapper shortWrapper1 = new ShortWrapper((short)214);
      int int0 = shortWrapper0.compareTo(shortWrapper1);
      assertEquals(1, int0);
      assertEquals(1576, shortWrapper0.decrement());
  }
}
