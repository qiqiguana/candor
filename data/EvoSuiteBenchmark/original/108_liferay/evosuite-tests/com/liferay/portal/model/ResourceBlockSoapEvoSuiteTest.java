/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.ResourceBlock;
import com.liferay.portal.model.ResourceBlockSoap;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ResourceBlockSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ResourceBlockSoap resourceBlockSoap0 = new ResourceBlockSoap();
      resourceBlockSoap0.setName("");
      assertEquals("", resourceBlockSoap0.getName());
  }

  @Test
  public void test1()  throws Throwable  {
      ResourceBlockSoap resourceBlockSoap0 = new ResourceBlockSoap();
      long long0 = resourceBlockSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test2()  throws Throwable  {
      ResourceBlockSoap resourceBlockSoap0 = new ResourceBlockSoap();
      resourceBlockSoap0.setGroupId(1L);
      assertEquals(1L, resourceBlockSoap0.getGroupId());
  }

  @Test
  public void test3()  throws Throwable  {
      ResourceBlockSoap resourceBlockSoap0 = new ResourceBlockSoap();
      long long0 = resourceBlockSoap0.getGroupId();
      assertEquals(0L, long0);
  }

  @Test
  public void test4()  throws Throwable  {
      ResourceBlockSoap resourceBlockSoap0 = new ResourceBlockSoap();
      long long0 = resourceBlockSoap0.getResourceBlockId();
      assertEquals(0L, long0);
  }

  @Test
  public void test5()  throws Throwable  {
      ResourceBlockSoap resourceBlockSoap0 = new ResourceBlockSoap();
      long long0 = resourceBlockSoap0.getReferenceCount();
      assertEquals(0L, long0);
  }

  @Test
  public void test6()  throws Throwable  {
      ResourceBlockSoap resourceBlockSoap0 = new ResourceBlockSoap();
      resourceBlockSoap0.setCompanyId(1L);
      assertEquals(1L, resourceBlockSoap0.getCompanyId());
  }

  @Test
  public void test7()  throws Throwable  {
      ResourceBlockSoap resourceBlockSoap0 = new ResourceBlockSoap();
      String string0 = resourceBlockSoap0.getName();
      assertNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      ResourceBlockSoap resourceBlockSoap0 = new ResourceBlockSoap();
      long long0 = resourceBlockSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test9()  throws Throwable  {
      ResourceBlockSoap resourceBlockSoap0 = new ResourceBlockSoap();
      resourceBlockSoap0.setPrimaryKey(1L);
      assertEquals(1L, resourceBlockSoap0.getPrimaryKey());
      assertEquals(1L, resourceBlockSoap0.getResourceBlockId());
  }

  @Test
  public void test10()  throws Throwable  {
      ResourceBlockSoap resourceBlockSoap0 = new ResourceBlockSoap();
      resourceBlockSoap0.setPermissionsHash("");
      assertEquals(0L, resourceBlockSoap0.getCompanyId());
  }

  @Test
  public void test11()  throws Throwable  {
      ResourceBlockSoap resourceBlockSoap0 = new ResourceBlockSoap();
      String string0 = resourceBlockSoap0.getPermissionsHash();
      assertNull(string0);
  }

  @Test
  public void test12()  throws Throwable  {
      LinkedList<ResourceBlock> linkedList0 = new LinkedList<ResourceBlock>();
      linkedList0.add((ResourceBlock) null);
      // Undeclared exception!
      try {
        ResourceBlockSoap.toSoapModels((List<ResourceBlock>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      ResourceBlockSoap resourceBlockSoap0 = new ResourceBlockSoap();
      resourceBlockSoap0.setReferenceCount(0L);
      assertNull(resourceBlockSoap0.getName());
  }

  @Test
  public void test14()  throws Throwable  {
      ResourceBlock[][] resourceBlockArray0 = new ResourceBlock[1][4];
      // Undeclared exception!
      try {
        ResourceBlockSoap.toSoapModels(resourceBlockArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      LinkedList<ResourceBlock> linkedList0 = new LinkedList<ResourceBlock>();
      ResourceBlockSoap[] resourceBlockSoapArray0 = ResourceBlockSoap.toSoapModels((List<ResourceBlock>) linkedList0);
      assertNotNull(resourceBlockSoapArray0);
  }
}
