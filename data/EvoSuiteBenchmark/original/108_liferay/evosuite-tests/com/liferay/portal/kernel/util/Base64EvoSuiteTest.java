/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.Base64;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class Base64EvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Object object0 = Base64.stringToObject((String) null);
      assertNull(object0);
  }

  @Test
  public void test1()  throws Throwable  {
      String string0 = Base64.fromURLSafe((String) null);
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      Object object0 = Base64.stringToObjectSilent("n4[B");
      assertNull(object0);
  }

  @Test
  public void test3()  throws Throwable  {
      Object object0 = Base64.stringToObject("", (ClassLoader) null);
      assertNull(object0);
  }

  @Test
  public void test4()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Object object0 = Base64.stringToObjectSilent("", classLoader0);
      assertNull(object0);
  }

  @Test
  public void test5()  throws Throwable  {
      String string0 = Base64.toURLSafe("");
      assertEquals("", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      Base64 base64_0 = new Base64();
      assertNotNull(base64_0);
  }

  @Test
  public void test7()  throws Throwable  {
      byte[] byteArray0 = Base64.decode((String) null);
      assertNotNull(byteArray0);
      
      String string0 = Base64.encode(byteArray0);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test
  public void test8()  throws Throwable  {
      Object object0 = Base64.stringToObject(",offset=");
      assertNull(object0);
  }

  @Test
  public void test9()  throws Throwable  {
      String string0 = Base64.objectToString((Object) null);
      assertNull(string0);
  }

  @Test
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-118);
      String string0 = Base64.encode(byteArray0);
      assertNotNull(string0);
      assertEquals("igAAAAA=", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      char char0 = Base64.getChar((-1253));
      assertEquals('?', char0);
  }

  @Test
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte) (-1);
      String string0 = Base64.encode(byteArray0);
      assertNotNull(string0);
      assertEquals("AAD/AAA=", string0);
  }

  @Test
  public void test13()  throws Throwable  {
      char char0 = Base64.getChar((int) '5');
      assertEquals('1', char0);
  }

  @Test
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte) (-120);
      String string0 = Base64.encode(byteArray0);
      assertEquals("AAAAAAAAAP+IAA==", string0);
      assertNotNull(string0);
  }

  @Test
  public void test15()  throws Throwable  {
      byte[] byteArray0 = Base64.decode("=3<[->|d");
      assertNotNull(byteArray0);
  }

  @Test
  public void test16()  throws Throwable  {
      byte[] byteArray0 = Base64.decode("Sfe>GWS(FMY/+0oc");
      assertNotNull(byteArray0);
  }
}
