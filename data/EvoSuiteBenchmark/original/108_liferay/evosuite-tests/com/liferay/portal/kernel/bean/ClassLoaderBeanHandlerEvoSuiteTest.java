/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.bean;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.bean.ClassLoaderBeanHandler;
import java.lang.reflect.Method;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ClassLoaderBeanHandlerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoaderBeanHandler classLoaderBeanHandler0 = new ClassLoaderBeanHandler((Object) null, classLoader0);
      Object[] objectArray0 = new Object[12];
      try {
        classLoaderBeanHandler0.invoke((Object) null, (Method) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoaderBeanHandler classLoaderBeanHandler0 = new ClassLoaderBeanHandler((Object) null, classLoader0);
      Object object0 = classLoaderBeanHandler0.getBean();
      assertNull(object0);
  }

  @Test
  public void test2()  throws Throwable  {
      ClassLoaderBeanHandler classLoaderBeanHandler0 = new ClassLoaderBeanHandler((Object) "HTTP", (ClassLoader) null);
      ClassLoader classLoader0 = classLoaderBeanHandler0.getClassLoader();
      assertNull(classLoader0);
  }

  @Test
  public void test3()  throws Throwable  {
      ClassLoaderBeanHandler classLoaderBeanHandler0 = new ClassLoaderBeanHandler((Object) "HTTP", (ClassLoader) null);
      Object[] objectArray0 = new Object[19];
      try {
        classLoaderBeanHandler0.invoke((Object) null, (Method) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
