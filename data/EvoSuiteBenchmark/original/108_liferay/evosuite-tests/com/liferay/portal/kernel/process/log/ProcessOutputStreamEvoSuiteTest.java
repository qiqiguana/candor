/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.process.log;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.process.ProcessCallable;
import com.liferay.portal.kernel.process.ReturnProcessCallable;
import com.liferay.portal.kernel.process.log.ProcessOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ProcessOutputStreamEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ProcessOutputStream processOutputStream0 = new ProcessOutputStream((ObjectOutputStream) null);
      // Undeclared exception!
      try {
        processOutputStream0.close();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      ProcessOutputStream processOutputStream0 = new ProcessOutputStream(objectOutputStream0, true);
      byte[] byteArray0 = processOutputStream0.toByteArray();
      processOutputStream0.setLogPrefix(byteArray0);
      assertEquals("", processOutputStream0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      ProcessOutputStream processOutputStream0 = new ProcessOutputStream((ObjectOutputStream) null, true);
      ReturnProcessCallable<String> returnProcessCallable0 = new ReturnProcessCallable<String>((String) null);
      // Undeclared exception!
      try {
        processOutputStream0.writeProcessCallable((ProcessCallable<?>) returnProcessCallable0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      ProcessOutputStream processOutputStream0 = new ProcessOutputStream(objectOutputStream0, true);
      processOutputStream0.flush();
      assertEquals("", processOutputStream0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      ProcessOutputStream processOutputStream0 = new ProcessOutputStream(objectOutputStream0, true);
      byte[] byteArray0 = new byte[5];
      processOutputStream0.write(byteArray0);
      // Undeclared exception!
      try {
        processOutputStream0.flush();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
