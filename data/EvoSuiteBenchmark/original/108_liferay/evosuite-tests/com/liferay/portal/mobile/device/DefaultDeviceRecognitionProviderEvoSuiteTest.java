/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.mobile.device;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.mobile.device.DefaultDeviceCapabilityFilter;
import com.liferay.portal.kernel.mobile.device.DeviceCapabilityFilter;
import com.liferay.portal.kernel.mobile.device.NoKnownDevices;
import com.liferay.portal.kernel.mobile.device.UnknownDevice;
import com.liferay.portal.mobile.device.DefaultDeviceRecognitionProvider;
import javax.servlet.http.HttpServletRequest;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DefaultDeviceRecognitionProviderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultDeviceRecognitionProvider defaultDeviceRecognitionProvider0 = new DefaultDeviceRecognitionProvider();
      DefaultDeviceCapabilityFilter defaultDeviceCapabilityFilter0 = new DefaultDeviceCapabilityFilter();
      defaultDeviceRecognitionProvider0.setDeviceCapabilityFilter((DeviceCapabilityFilter) defaultDeviceCapabilityFilter0);
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultDeviceRecognitionProvider defaultDeviceRecognitionProvider0 = new DefaultDeviceRecognitionProvider();
      defaultDeviceRecognitionProvider0.reload();
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultDeviceRecognitionProvider defaultDeviceRecognitionProvider0 = new DefaultDeviceRecognitionProvider();
      UnknownDevice unknownDevice0 = (UnknownDevice)defaultDeviceRecognitionProvider0.detectDevice((HttpServletRequest) null);
      assertEquals("{brand=unknown, browser=unknown, browserVersion=unknown, capabilities={}, model=unknown, os=unknown, osVersion=unknown, pointingMethod=unknown, qwertyKeyboard=true, screenSize={height=-1.0, width=-1.0}, tablet=false}", unknownDevice0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      DefaultDeviceRecognitionProvider defaultDeviceRecognitionProvider0 = new DefaultDeviceRecognitionProvider();
      NoKnownDevices noKnownDevices0 = (NoKnownDevices)defaultDeviceRecognitionProvider0.getKnownDevices();
      assertNotNull(noKnownDevices0);
  }
}
