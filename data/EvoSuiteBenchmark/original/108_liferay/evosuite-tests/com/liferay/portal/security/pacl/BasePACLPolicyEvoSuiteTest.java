/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.security.pacl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.security.pacl.ActivePACLPolicy;
import com.liferay.portal.security.pacl.checker.Checker;
import com.liferay.portal.security.pacl.checker.NetChecker;
import java.io.ObjectStreamConstants;
import java.io.SerializablePermission;
import java.security.Permission;
import java.util.Properties;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BasePACLPolicyEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      NetChecker netChecker0 = new NetChecker();
      ClassLoader classLoader0 = netChecker0.getCommonClassLoader();
      Properties properties0 = new Properties();
      ActivePACLPolicy activePACLPolicy0 = new ActivePACLPolicy("(:c/j!Jj|", classLoader0, properties0);
      assertNotNull(activePACLPolicy0);
      
      activePACLPolicy0.getPropertyBoolean("(:c/j!Jj|");
      assertEquals("{active=true, hashCode=1389366755, servletContextName=(:c/j!Jj|}", activePACLPolicy0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      NetChecker netChecker0 = new NetChecker();
      ClassLoader classLoader0 = netChecker0.getCommonClassLoader();
      Properties properties0 = new Properties();
      ActivePACLPolicy activePACLPolicy0 = new ActivePACLPolicy("(:c/j!Jj|", classLoader0, properties0);
      assertNotNull(activePACLPolicy0);
      
      String string0 = activePACLPolicy0.toString();
      assertNotNull(string0);
      assertEquals("{active=true, hashCode=1046488812, servletContextName=(:c/j!Jj|}", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      NetChecker netChecker0 = new NetChecker();
      ClassLoader classLoader0 = netChecker0.getCommonClassLoader();
      Properties properties0 = new Properties();
      ActivePACLPolicy activePACLPolicy0 = new ActivePACLPolicy("(:c/j!Jj|", classLoader0, properties0);
      assertNotNull(activePACLPolicy0);
      
      activePACLPolicy0.getClassLoader();
      assertEquals("{active=true, hashCode=1480064990, servletContextName=(:c/j!Jj|}", activePACLPolicy0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      NetChecker netChecker0 = new NetChecker();
      ClassLoader classLoader0 = netChecker0.getCommonClassLoader();
      Properties properties0 = new Properties();
      ActivePACLPolicy activePACLPolicy0 = new ActivePACLPolicy("(:c/j!Jj|", classLoader0, properties0);
      activePACLPolicy0.initChecker((Checker) netChecker0);
      String string0 = netChecker0.getServletContextName();
      assertEquals("(:c/j!Jj|", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      NetChecker netChecker0 = new NetChecker();
      ClassLoader classLoader0 = netChecker0.getCommonClassLoader();
      Properties properties0 = new Properties();
      ActivePACLPolicy activePACLPolicy0 = new ActivePACLPolicy("(:c/j!Jj|", classLoader0, properties0);
      assertNotNull(activePACLPolicy0);
      
      SerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;
      boolean boolean0 = activePACLPolicy0.isCheckablePermission((Permission) serializablePermission0);
      assertEquals("{active=true, hashCode=222316553, servletContextName=(:c/j!Jj|}", activePACLPolicy0.toString());
      assertEquals(true, boolean0);
  }
}
