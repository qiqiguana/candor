/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.Phone;
import com.liferay.portal.model.PhoneSoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PhoneSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      phoneSoap0.setCreateDate((Date) null);
      assertEquals(0L, phoneSoap0.getPrimaryKey());
  }

  @Test
  public void test1()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      String string0 = phoneSoap0.getExtension();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      phoneSoap0.setClassPK(0L);
      assertEquals(false, phoneSoap0.getPrimary());
  }

  @Test
  public void test3()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      long long0 = phoneSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test4()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      long long0 = phoneSoap0.getPhoneId();
      assertEquals(0L, long0);
  }

  @Test
  public void test5()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      long long0 = phoneSoap0.getClassNameId();
      assertEquals(0L, long0);
  }

  @Test
  public void test6()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      long long0 = phoneSoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test7()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      boolean boolean0 = phoneSoap0.getPrimary();
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      Date date0 = phoneSoap0.getModifiedDate();
      assertNull(date0);
  }

  @Test
  public void test9()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      String string0 = phoneSoap0.getUserName();
      assertNull(string0);
  }

  @Test
  public void test10()  throws Throwable  {
      LinkedList<Phone> linkedList0 = new LinkedList<Phone>();
      linkedList0.add((Phone) null);
      // Undeclared exception!
      try {
        PhoneSoap.toSoapModels((List<Phone>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      phoneSoap0.setClassNameId(0L);
      assertEquals(false, phoneSoap0.isPrimary());
  }

  @Test
  public void test12()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      String string0 = phoneSoap0.getNumber();
      assertNull(string0);
  }

  @Test
  public void test13()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      long long0 = phoneSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test14()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      phoneSoap0.setCompanyId(0L);
      assertEquals(0L, phoneSoap0.getUserId());
  }

  @Test
  public void test15()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      int int0 = phoneSoap0.getTypeId();
      assertEquals(0, int0);
  }

  @Test
  public void test16()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      phoneSoap0.setTypeId(924);
      assertEquals(924, phoneSoap0.getTypeId());
  }

  @Test
  public void test17()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      phoneSoap0.setNumber((String) null);
      assertEquals(0L, phoneSoap0.getPrimaryKey());
  }

  @Test
  public void test18()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      phoneSoap0.setExtension((String) null);
      assertNull(phoneSoap0.getUserName());
  }

  @Test
  public void test19()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      phoneSoap0.setModifiedDate((Date) null);
      assertEquals(false, phoneSoap0.getPrimary());
  }

  @Test
  public void test20()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      long long0 = phoneSoap0.getClassPK();
      assertEquals(0L, long0);
  }

  @Test
  public void test21()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      phoneSoap0.setPrimaryKey(0L);
      assertEquals(false, phoneSoap0.isPrimary());
  }

  @Test
  public void test22()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      phoneSoap0.setUserName((String) null);
      assertNull(phoneSoap0.getUserName());
  }

  @Test
  public void test23()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      phoneSoap0.setPrimary(false);
      assertEquals(false, phoneSoap0.isPrimary());
      assertEquals(false, phoneSoap0.getPrimary());
  }

  @Test
  public void test24()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      phoneSoap0.setUserId(0L);
      assertEquals(false, phoneSoap0.isPrimary());
  }

  @Test
  public void test25()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      Date date0 = phoneSoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test26()  throws Throwable  {
      PhoneSoap phoneSoap0 = new PhoneSoap();
      boolean boolean0 = phoneSoap0.isPrimary();
      assertEquals(false, boolean0);
  }

  @Test
  public void test27()  throws Throwable  {
      Phone[][] phoneArray0 = new Phone[10][10];
      // Undeclared exception!
      try {
        PhoneSoap.toSoapModels(phoneArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test28()  throws Throwable  {
      LinkedList<Phone> linkedList0 = new LinkedList<Phone>();
      PhoneSoap[] phoneSoapArray0 = PhoneSoap.toSoapModels((List<Phone>) linkedList0);
      assertNotNull(phoneSoapArray0);
  }
}
