/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.UnicodeFormatter_IW;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UnicodeFormatter_IWEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UnicodeFormatter_IW unicodeFormatter_IW0 = UnicodeFormatter_IW.getInstance();
      char[] charArray0 = new char[2];
      String string0 = unicodeFormatter_IW0.toString(charArray0);
      assertEquals("\\u0000\\u0000", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      UnicodeFormatter_IW unicodeFormatter_IW0 = UnicodeFormatter_IW.getInstance();
      byte[] byteArray0 = unicodeFormatter_IW0.hexToBytes("{-R|j3u%.xN^}L9H ");
      assertNotNull(byteArray0);
  }

  @Test
  public void test2()  throws Throwable  {
      UnicodeFormatter_IW unicodeFormatter_IW0 = UnicodeFormatter_IW.getInstance();
      char[] charArray0 = new char[2];
      char[] charArray1 = unicodeFormatter_IW0.byteToHex((byte)0, charArray0);
      assertSame(charArray1, charArray0);
  }

  @Test
  public void test3()  throws Throwable  {
      UnicodeFormatter_IW unicodeFormatter_IW0 = UnicodeFormatter_IW.getInstance();
      String string0 = unicodeFormatter_IW0.byteToHex((byte)0);
      assertNotNull(string0);
      assertEquals("00", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      UnicodeFormatter_IW unicodeFormatter_IW0 = UnicodeFormatter_IW.getInstance();
      char[] charArray0 = new char[5];
      char[] charArray1 = unicodeFormatter_IW0.byteToHex((byte)1, charArray0, false);
      assertSame(charArray1, charArray0);
  }

  @Test
  public void test5()  throws Throwable  {
      UnicodeFormatter_IW unicodeFormatter_IW0 = UnicodeFormatter_IW.getInstance();
      byte[] byteArray0 = new byte[4];
      String string0 = unicodeFormatter_IW0.bytesToHex(byteArray0);
      assertEquals("00000000", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      UnicodeFormatter_IW unicodeFormatter_IW0 = UnicodeFormatter_IW.getInstance();
      String string0 = unicodeFormatter_IW0.charToHex('e');
      assertEquals("0065", string0);
      assertNotNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      UnicodeFormatter_IW unicodeFormatter_IW0 = UnicodeFormatter_IW.getInstance();
      String string0 = unicodeFormatter_IW0.parseString("01");
      assertEquals("01", string0);
  }

  @Test
  public void test8()  throws Throwable  {
      UnicodeFormatter_IW unicodeFormatter_IW0 = UnicodeFormatter_IW.getInstance();
      String string0 = unicodeFormatter_IW0.toString("sDna#HQ\"~MRc0([[Z");
      assertEquals("\\u0073\\u0044\\u006e\\u0061\\u0023\\u0048\\u0051\\u0022\\u007e\\u004d\\u0052\\u0063\\u0030\\u0028\\u005b\\u005b\\u005a", string0);
  }
}
