/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.security.lang;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.security.lang.PortalSecurityManagerThreadLocal;
import com.liferay.portal.security.pacl.ActivePACLPolicy;
import com.liferay.portal.security.pacl.PACLPolicy;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PortalSecurityManagerThreadLocalEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      boolean boolean0 = PortalSecurityManagerThreadLocal.isEnabled();
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      PortalSecurityManagerThreadLocal.setCheckReadFileDescriptor(true);
  }

  @Test
  public void test2()  throws Throwable  {
      PortalSecurityManagerThreadLocal.setCheckReadFile(false);
  }

  @Test
  public void test3()  throws Throwable  {
      PortalSecurityManagerThreadLocal.setCheckCreateClassLoader(true);
  }

  @Test
  public void test4()  throws Throwable  {
      boolean boolean0 = PortalSecurityManagerThreadLocal.isCheckReadFile();
      assertEquals(true, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      boolean boolean0 = PortalSecurityManagerThreadLocal.isCheckReadFileDescriptor();
      assertEquals(true, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      ActivePACLPolicy activePACLPolicy0 = (ActivePACLPolicy)PortalSecurityManagerThreadLocal.getPACLPolicy();
      PortalSecurityManagerThreadLocal.setPACLPolicy((PACLPolicy) activePACLPolicy0);
  }

  @Test
  public void test7()  throws Throwable  {
      PortalSecurityManagerThreadLocal.setEnabled(false);
  }

  @Test
  public void test8()  throws Throwable  {
      PortalSecurityManagerThreadLocal.setCheckSQL(false);
  }

  @Test
  public void test9()  throws Throwable  {
      PortalSecurityManagerThreadLocal.isCheckCreateClassLoader();
  }

  @Test
  public void test10()  throws Throwable  {
      PortalSecurityManagerThreadLocal.setCheckGetClassLoader(true);
  }

  @Test
  public void test11()  throws Throwable  {
      PortalSecurityManagerThreadLocal portalSecurityManagerThreadLocal0 = new PortalSecurityManagerThreadLocal();
      assertEquals(true, portalSecurityManagerThreadLocal0.isEnabled());
  }

  @Test
  public void test12()  throws Throwable  {
      boolean boolean0 = PortalSecurityManagerThreadLocal.isCheckGetClassLoader();
      assertEquals(true, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      boolean boolean0 = PortalSecurityManagerThreadLocal.isCheckWriteFileDescriptor();
      assertEquals(true, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      boolean boolean0 = PortalSecurityManagerThreadLocal.isCheckSQL();
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      PortalSecurityManagerThreadLocal.setCheckWriteFileDescriptor(false);
  }
}
