/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.dao.orm.hibernate;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.dao.orm.hibernate.LockModeTranslator;
import com.liferay.portal.kernel.dao.orm.LockMode;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LockModeTranslatorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LockModeTranslator lockModeTranslator0 = new LockModeTranslator();
      assertNotNull(lockModeTranslator0);
  }

  @Test
  public void test1()  throws Throwable  {
      LockMode lockMode0 = LockMode.NONE;
      org.hibernate.LockMode lockMode1 = LockModeTranslator.translate(lockMode0);
      assertNotNull(lockMode1);
      assertEquals("NONE", lockMode1.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      LockMode lockMode0 = LockMode.FORCE;
      org.hibernate.LockMode lockMode1 = LockModeTranslator.translate(lockMode0);
      assertEquals("PESSIMISTIC_FORCE_INCREMENT", lockMode1.toString());
      assertNotNull(lockMode1);
  }

  @Test
  public void test3()  throws Throwable  {
      LockMode lockMode0 = LockMode.PESSIMISTIC_READ;
      org.hibernate.LockMode lockMode1 = LockModeTranslator.translate(lockMode0);
      assertEquals("PESSIMISTIC_READ", lockMode1.toString());
      assertNotNull(lockMode1);
  }

  @Test
  public void test4()  throws Throwable  {
      LockMode lockMode0 = LockMode.OPTIMISTIC;
      org.hibernate.LockMode lockMode1 = LockModeTranslator.translate(lockMode0);
      assertEquals("OPTIMISTIC", lockMode1.toString());
      assertNotNull(lockMode1);
  }

  @Test
  public void test5()  throws Throwable  {
      LockMode lockMode0 = LockMode.OPTIMISTIC_FORCE_INCREMENT;
      org.hibernate.LockMode lockMode1 = LockModeTranslator.translate(lockMode0);
      assertEquals("OPTIMISTIC_FORCE_INCREMENT", lockMode1.toString());
      assertNotNull(lockMode1);
  }

  @Test
  public void test6()  throws Throwable  {
      LockMode lockMode0 = LockMode.PESSIMISTIC_FORCE_INCREMENT;
      org.hibernate.LockMode lockMode1 = LockModeTranslator.translate(lockMode0);
      assertEquals("PESSIMISTIC_FORCE_INCREMENT", lockMode1.toString());
      assertNotNull(lockMode1);
  }

  @Test
  public void test7()  throws Throwable  {
      LockMode lockMode0 = LockMode.UPGRADE;
      org.hibernate.LockMode lockMode1 = LockModeTranslator.translate(lockMode0);
      assertNotNull(lockMode1);
      assertEquals("PESSIMISTIC_WRITE", lockMode1.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      LockMode lockMode0 = LockMode.PESSIMISTIC_WRITE;
      org.hibernate.LockMode lockMode1 = LockModeTranslator.translate(lockMode0);
      assertEquals("PESSIMISTIC_WRITE", lockMode1.toString());
      assertNotNull(lockMode1);
  }

  @Test
  public void test9()  throws Throwable  {
      LockMode lockMode0 = LockMode.READ;
      org.hibernate.LockMode lockMode1 = LockModeTranslator.translate(lockMode0);
      assertNotNull(lockMode1);
      assertEquals("READ", lockMode1.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      LockMode lockMode0 = LockMode.UPGRADE_NOWAIT;
      org.hibernate.LockMode lockMode1 = LockModeTranslator.translate(lockMode0);
      assertEquals("UPGRADE_NOWAIT", lockMode1.toString());
  }

  @Test
  public void test11()  throws Throwable  {
      LockMode lockMode0 = LockMode.WRITE;
      org.hibernate.LockMode lockMode1 = LockModeTranslator.translate(lockMode0);
      assertEquals("WRITE", lockMode1.toString());
  }

  @Test
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try {
        LockModeTranslator.translate((LockMode) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
