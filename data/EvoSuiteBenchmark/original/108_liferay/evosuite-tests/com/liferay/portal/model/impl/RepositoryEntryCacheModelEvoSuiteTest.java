/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.impl.RepositoryEntryCacheModel;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RepositoryEntryCacheModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RepositoryEntryCacheModel repositoryEntryCacheModel0 = new RepositoryEntryCacheModel();
      // Undeclared exception!
      try {
        repositoryEntryCacheModel0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      RepositoryEntryCacheModel repositoryEntryCacheModel0 = new RepositoryEntryCacheModel();
      String string0 = repositoryEntryCacheModel0.toString();
      assertEquals("{uuid=null, repositoryEntryId=0, groupId=0, repositoryId=0, mappedId=null, manualCheckInRequired=false}", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      RepositoryEntryCacheModel repositoryEntryCacheModel0 = new RepositoryEntryCacheModel();
      repositoryEntryCacheModel0.uuid = "system.properties.final";
      // Undeclared exception!
      try {
        repositoryEntryCacheModel0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      RepositoryEntryCacheModel repositoryEntryCacheModel0 = new RepositoryEntryCacheModel();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      repositoryEntryCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(false, repositoryEntryCacheModel0.manualCheckInRequired);
  }

  @Test
  public void test4()  throws Throwable  {
      RepositoryEntryCacheModel repositoryEntryCacheModel0 = new RepositoryEntryCacheModel();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      repositoryEntryCacheModel0.mappedId = "(_t|M fkM";
      repositoryEntryCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0L, repositoryEntryCacheModel0.repositoryEntryId);
  }
}
