/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.UserTrackerPath;
import com.liferay.portal.model.UserTrackerPathSoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UserTrackerPathSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UserTrackerPathSoap userTrackerPathSoap0 = new UserTrackerPathSoap();
      long long0 = userTrackerPathSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test1()  throws Throwable  {
      UserTrackerPathSoap userTrackerPathSoap0 = new UserTrackerPathSoap();
      userTrackerPathSoap0.setPathDate((Date) null);
      assertEquals(0L, userTrackerPathSoap0.getUserTrackerPathId());
  }

  @Test
  public void test2()  throws Throwable  {
      UserTrackerPathSoap userTrackerPathSoap0 = new UserTrackerPathSoap();
      String string0 = userTrackerPathSoap0.getPath();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      LinkedList<UserTrackerPath> linkedList0 = new LinkedList<UserTrackerPath>();
      linkedList0.add((UserTrackerPath) null);
      // Undeclared exception!
      try {
        UserTrackerPathSoap.toSoapModels((List<UserTrackerPath>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      UserTrackerPathSoap userTrackerPathSoap0 = new UserTrackerPathSoap();
      Date date0 = userTrackerPathSoap0.getPathDate();
      assertNull(date0);
  }

  @Test
  public void test5()  throws Throwable  {
      UserTrackerPathSoap userTrackerPathSoap0 = new UserTrackerPathSoap();
      userTrackerPathSoap0.setPath("");
      assertEquals(0L, userTrackerPathSoap0.getUserTrackerPathId());
  }

  @Test
  public void test6()  throws Throwable  {
      UserTrackerPathSoap userTrackerPathSoap0 = new UserTrackerPathSoap();
      userTrackerPathSoap0.setUserTrackerId((-1L));
      assertEquals((-1L), userTrackerPathSoap0.getUserTrackerId());
  }

  @Test
  public void test7()  throws Throwable  {
      UserTrackerPathSoap userTrackerPathSoap0 = new UserTrackerPathSoap();
      long long0 = userTrackerPathSoap0.getUserTrackerPathId();
      assertEquals(0L, long0);
  }

  @Test
  public void test8()  throws Throwable  {
      UserTrackerPathSoap userTrackerPathSoap0 = new UserTrackerPathSoap();
      userTrackerPathSoap0.setPrimaryKey((-1L));
      assertEquals((-1L), userTrackerPathSoap0.getUserTrackerPathId());
      assertEquals((-1L), userTrackerPathSoap0.getPrimaryKey());
  }

  @Test
  public void test9()  throws Throwable  {
      UserTrackerPathSoap userTrackerPathSoap0 = new UserTrackerPathSoap();
      long long0 = userTrackerPathSoap0.getUserTrackerId();
      assertEquals(0L, long0);
  }

  @Test
  public void test10()  throws Throwable  {
      UserTrackerPath[][] userTrackerPathArray0 = new UserTrackerPath[1][7];
      // Undeclared exception!
      try {
        UserTrackerPathSoap.toSoapModels(userTrackerPathArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      LinkedList<UserTrackerPath> linkedList0 = new LinkedList<UserTrackerPath>();
      UserTrackerPathSoap[] userTrackerPathSoapArray0 = UserTrackerPathSoap.toSoapModels((List<UserTrackerPath>) linkedList0);
      assertNotNull(userTrackerPathSoapArray0);
  }
}
