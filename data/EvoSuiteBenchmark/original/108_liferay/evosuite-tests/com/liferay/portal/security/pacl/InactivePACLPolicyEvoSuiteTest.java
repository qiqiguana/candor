/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.security.pacl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.security.pacl.InactivePACLPolicy;
import groovy.lang.GroovyClassLoader;
import java.io.ObjectStreamConstants;
import java.io.SerializablePermission;
import java.lang.reflect.Method;
import java.security.Permission;
import java.util.Properties;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class InactivePACLPolicyEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Properties properties0 = new Properties();
      InactivePACLPolicy inactivePACLPolicy0 = new InactivePACLPolicy("rA\"<<&", classLoader0, properties0);
      boolean boolean0 = inactivePACLPolicy0.hasSQL("rA\"<<&");
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      Properties properties0 = new Properties();
      InactivePACLPolicy inactivePACLPolicy0 = new InactivePACLPolicy("", (ClassLoader) null, properties0);
      Object[] objectArray0 = new Object[6];
      boolean boolean0 = inactivePACLPolicy0.hasPortalService((Object) null, (Method) null, objectArray0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Properties properties0 = new Properties();
      InactivePACLPolicy inactivePACLPolicy0 = new InactivePACLPolicy("", classLoader0, properties0);
      String string0 = inactivePACLPolicy0.toString();
      assertEquals("{active=false, hashCode=1134503438, servletContextName=}", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Properties properties0 = new Properties();
      InactivePACLPolicy inactivePACLPolicy0 = new InactivePACLPolicy("rA\"<<&", classLoader0, properties0);
      boolean boolean0 = inactivePACLPolicy0.hasJNDI((String) null);
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      GroovyClassLoader groovyClassLoader0 = new GroovyClassLoader();
      Properties properties0 = new Properties();
      InactivePACLPolicy inactivePACLPolicy0 = new InactivePACLPolicy("X", (ClassLoader) groovyClassLoader0, properties0);
      SerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;
      inactivePACLPolicy0.checkPermission((Permission) serializablePermission0);
      assertEquals("{active=false, hashCode=363680938, servletContextName=X}", inactivePACLPolicy0.toString());
  }
}
