/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.upgrade.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.xml.Element;
import com.liferay.portal.upgrade.util.UpgradeAssetPublisherManualEntries;
import com.liferay.portal.xml.DocumentImpl;
import com.liferay.portal.xml.ElementImpl;
import org.dom4j.Document;
import org.dom4j.DocumentFactory;
import org.dom4j.tree.DefaultDocument;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UpgradeAssetPublisherManualEntriesEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UpgradeAssetPublisherManualEntries upgradeAssetPublisherManualEntries0 = new UpgradeAssetPublisherManualEntries();
      String string0 = upgradeAssetPublisherManualEntries0.getUpdatePortletPreferencesWhereClause();
      assertNotNull(string0);
      assertEquals("(portletId like '101_INSTANCE_%') and ((preferences like '%<preference><name>selection-style</name><value>manual</value></preference>%') OR (preferences like '%<preference><name>selectionStyle</name><value>manual</value></preference>%'))", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      DocumentFactory documentFactory0 = DocumentFactory.getInstance();
      DefaultDocument defaultDocument0 = (DefaultDocument)documentFactory0.createDocument();
      DocumentImpl documentImpl0 = new DocumentImpl((Document) defaultDocument0);
      ElementImpl elementImpl0 = (ElementImpl)documentImpl0.addElement("", "");
      UpgradeAssetPublisherManualEntries.upgradeToAssetEntryIdElement((Element) elementImpl0);
      assertEquals("", elementImpl0.getText());
  }

  @Test
  public void test2()  throws Throwable  {
      DocumentFactory documentFactory0 = DocumentFactory.getInstance();
      DefaultDocument defaultDocument0 = (DefaultDocument)documentFactory0.createDocument();
      DocumentImpl documentImpl0 = new DocumentImpl((Document) defaultDocument0);
      ElementImpl elementImpl0 = (ElementImpl)documentImpl0.addElement("", "");
      UpgradeAssetPublisherManualEntries.upgradeToAssetEntryTypeElement((Element) elementImpl0);
      assertEquals(false, elementImpl0.hasContent());
  }

  @Test
  public void test3()  throws Throwable  {
      UpgradeAssetPublisherManualEntries upgradeAssetPublisherManualEntries0 = new UpgradeAssetPublisherManualEntries();
      String[] stringArray0 = new String[1];
      try {
        upgradeAssetPublisherManualEntries0.getAssetEntryXmls(stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
