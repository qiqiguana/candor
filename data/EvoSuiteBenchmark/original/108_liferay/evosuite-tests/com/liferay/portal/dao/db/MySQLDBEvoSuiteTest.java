/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.dao.db;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.dao.db.MySQLDB;
import java.io.IOException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MySQLDBEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MySQLDB mySQLDB0 = new MySQLDB();
      assertNotNull(mySQLDB0);
      
      // Undeclared exception!
      try {
        mySQLDB0.buildCreateFile("rename table >61+BV<(!SU to D6yUeD;\n", "alter_table_name >61+BV<(!SU D6yUeD");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      MySQLDB mySQLDB0 = (MySQLDB)MySQLDB.getInstance();
      assertEquals(true, mySQLDB0.isSupportsAlterColumnType());
  }

  @Test
  public void test2()  throws Throwable  {
      MySQLDB mySQLDB0 = new MySQLDB();
      assertNotNull(mySQLDB0);
      
      boolean boolean0 = mySQLDB0.isSupportsUpdateWithInnerJoin();
      assertEquals(true, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      MySQLDB mySQLDB0 = new MySQLDB();
      assertNotNull(mySQLDB0);
      
      String string0 = mySQLDB0.buildSQL("yQ)B:Ujt+S0");
      assertEquals("yQ)B:Ujt+S0\n", string0);
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      MySQLDB mySQLDB0 = new MySQLDB();
      assertNotNull(mySQLDB0);
      
      boolean boolean0 = mySQLDB0.isSupportsDateMilliseconds();
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      MySQLDB mySQLDB0 = new MySQLDB();
      // Undeclared exception!
      try {
        mySQLDB0.buildSQL("alter_column_name E");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 2
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      MySQLDB mySQLDB0 = new MySQLDB();
      // Undeclared exception!
      try {
        mySQLDB0.reword("alter_column_type 9qJ8^(R+w\tE&)E9");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 2
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      MySQLDB mySQLDB0 = new MySQLDB();
      assertNotNull(mySQLDB0);
      
      String string0 = mySQLDB0.reword("alter_table_name >61+BV<(!SU D6yUeD");
      assertNotNull(string0);
      assertEquals("rename table >61+BV<(!SU to D6yUeD;\n", string0);
  }
}
