/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.PrimitiveLongList;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PrimitiveLongListEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PrimitiveLongList primitiveLongList0 = new PrimitiveLongList();
      assertNotNull(primitiveLongList0);
      
      primitiveLongList0.getArray();
      long[] longArray0 = new long[3];
      primitiveLongList0.addAll(longArray0);
      assertEquals(3, primitiveLongList0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      PrimitiveLongList primitiveLongList0 = new PrimitiveLongList();
      assertNotNull(primitiveLongList0);
      
      long[] longArray0 = new long[3];
      primitiveLongList0.addAll(longArray0);
      assertEquals(3, primitiveLongList0.size());
  }

  @Test
  public void test2()  throws Throwable  {
      PrimitiveLongList primitiveLongList0 = new PrimitiveLongList(1);
      assertNotNull(primitiveLongList0);
      
      int int0 = primitiveLongList0.size();
      assertEquals(0, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      PrimitiveLongList primitiveLongList0 = new PrimitiveLongList();
      assertNotNull(primitiveLongList0);
      
      primitiveLongList0.getArray();
      primitiveLongList0.add(582L);
      assertEquals(1, primitiveLongList0.size());
  }

  @Test
  public void test4()  throws Throwable  {
      PrimitiveLongList primitiveLongList0 = new PrimitiveLongList();
      assertNotNull(primitiveLongList0);
      
      long[] longArray0 = primitiveLongList0.getArray();
      assertNotNull(longArray0);
      
      long[] longArray1 = primitiveLongList0.getArray();
      assertSame(longArray1, longArray0);
  }
}
