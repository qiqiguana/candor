/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.javadoc;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.javadoc.JavadocManagerImpl;
import com.liferay.portal.kernel.javadoc.BaseJavadoc;
import com.liferay.portal.kernel.javadoc.JavadocClass;
import com.liferay.portal.kernel.javadoc.JavadocMethod;
import com.liferay.portal.xml.BranchImpl;
import com.liferay.portal.xml.DocumentImpl;
import com.liferay.portal.xml.ElementImpl;
import com.liferay.portal.xml.QNameImpl;
import com.thoughtworks.xstream.annotations.XStreamImplicit;
import java.lang.reflect.Method;
import java.util.Collection;
import org.apache.axis.message.RPCParam;
import org.dom4j.Branch;
import org.dom4j.Document;
import org.dom4j.DocumentFactory;
import org.dom4j.Element;
import org.dom4j.Namespace;
import org.dom4j.QName;
import org.dom4j.bean.BeanAttributeList;
import org.dom4j.bean.BeanElement;
import org.dom4j.bean.BeanMetaData;
import org.dom4j.tree.BaseElement;
import org.dom4j.tree.DefaultDocument;
import org.dom4j.tree.NamespaceStack;
import org.dom4j.util.IndexedElement;
import org.jfree.data.statistics.BoxAndWhiskerItem;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JavadocManagerImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JavadocManagerImpl javadocManagerImpl0 = new JavadocManagerImpl();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try {
        javadocManagerImpl0.load("8{pX1pNaOwB", classLoader0);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsValues
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      JavadocManagerImpl javadocManagerImpl0 = new JavadocManagerImpl();
      Method method0 = RPCParam.getValueSetMethod();
      JavadocMethod javadocMethod0 = javadocManagerImpl0.lookupJavadocMethod(method0);
      assertNull(javadocMethod0);
  }

  @Test
  public void test2()  throws Throwable  {
      JavadocManagerImpl javadocManagerImpl0 = new JavadocManagerImpl();
      javadocManagerImpl0.unload("8{pwX1pNaOwB");
  }

  @Test
  public void test3()  throws Throwable  {
      JavadocManagerImpl javadocManagerImpl0 = new JavadocManagerImpl();
      DocumentFactory documentFactory0 = new DocumentFactory();
      IndexedElement indexedElement0 = new IndexedElement("Row key (");
      DefaultDocument defaultDocument0 = (DefaultDocument)documentFactory0.createDocument((Element) indexedElement0);
      DocumentImpl documentImpl0 = new DocumentImpl((Document) defaultDocument0);
      javadocManagerImpl0.parseDocument("Row key (", (ClassLoader) null, (com.liferay.portal.kernel.xml.Document) documentImpl0);
      assertEquals(1, documentImpl0.nodeCount());
  }

  @Test
  public void test4()  throws Throwable  {
      JavadocManagerImpl javadocManagerImpl0 = new JavadocManagerImpl();
      BaseElement baseElement0 = new BaseElement("8{pX1pNaOwB");
      BranchImpl branchImpl0 = new BranchImpl((Branch) baseElement0);
      ElementImpl elementImpl0 = (ElementImpl)branchImpl0.addElement("8{pX1pNaOwB");
      Class<?> class0 = XStreamImplicit.class;
      JavadocClass javadocClass0 = javadocManagerImpl0.parseJavadocClass("8{pX1pNaOwB", (com.liferay.portal.kernel.xml.Element) elementImpl0, class0);
      assertEquals("8{pX1pNaOwB", javadocClass0.getServletContextName());
  }

  @Test
  public void test5()  throws Throwable  {
      JavadocManagerImpl javadocManagerImpl0 = new JavadocManagerImpl();
      Class<?> class0 = BoxAndWhiskerItem.class;
      NamespaceStack namespaceStack0 = new NamespaceStack();
      QName qName0 = namespaceStack0.getQName("]AS0", "]AS0", "]AS0");
      DocumentFactory documentFactory0 = qName0.getDocumentFactory();
      DefaultDocument defaultDocument0 = (DefaultDocument)documentFactory0.createDocument();
      DocumentImpl documentImpl0 = new DocumentImpl((Document) defaultDocument0);
      QNameImpl qNameImpl0 = new QNameImpl(qName0);
      ElementImpl elementImpl0 = (ElementImpl)documentImpl0.addElement((com.liferay.portal.kernel.xml.QName) qNameImpl0);
      try {
        javadocManagerImpl0.parseJavadocMethod("]AS0", class0, (com.liferay.portal.kernel.xml.Element) elementImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      JavadocManagerImpl javadocManagerImpl0 = new JavadocManagerImpl();
      Class<?> class0 = JavadocManagerImpl.class;
      BeanMetaData beanMetaData0 = new BeanMetaData(class0);
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      QName qName0 = QName.get("`", namespace0);
      BeanElement beanElement0 = new BeanElement(qName0);
      BeanAttributeList beanAttributeList0 = beanMetaData0.createAttributeList(beanElement0);
      // Undeclared exception!
      try {
        javadocManagerImpl0.unload("`", (Collection<? extends BaseJavadoc>) beanAttributeList0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * org.dom4j.bean.BeanAttribute cannot be cast to com.liferay.portal.kernel.javadoc.BaseJavadoc
         */
      }
  }
}
