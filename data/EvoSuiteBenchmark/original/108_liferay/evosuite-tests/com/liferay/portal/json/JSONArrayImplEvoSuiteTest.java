/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.json;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.json.JSONArrayImpl;
import com.liferay.portal.json.JSONObjectImpl;
import com.liferay.portal.kernel.json.JSONException;
import com.liferay.portal.kernel.json.JSONObject;
import java.io.StringWriter;
import java.io.Writer;
import org.json.JSONArray;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JSONArrayImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JSONArrayImpl jSONArrayImpl0 = new JSONArrayImpl();
      jSONArrayImpl0.put("[]");
      JSONObjectImpl jSONObjectImpl0 = new JSONObjectImpl((Object) "[\"[]\"]");
      jSONArrayImpl0.put((JSONObject) jSONObjectImpl0);
      jSONArrayImpl0.getJSONObject(1);
      assertEquals(2, jSONArrayImpl0.length());
      assertEquals("[\"[]\",{\"bytes\":[91,34,91,93,34,93],\"empty\":false}]", jSONArrayImpl0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      JSONArrayImpl jSONArrayImpl0 = new JSONArrayImpl((JSONArray) null);
      JSONArrayImpl jSONArrayImpl1 = (JSONArrayImpl)jSONArrayImpl0.put(1.7976931348623157E308);
      assertSame(jSONArrayImpl1, jSONArrayImpl0);
  }

  @Test
  public void test2()  throws Throwable  {
      JSONArrayImpl jSONArrayImpl0 = new JSONArrayImpl();
      String string0 = jSONArrayImpl0.join("[]");
      assertEquals("", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      JSONArrayImpl jSONArrayImpl0 = new JSONArrayImpl();
      String string0 = jSONArrayImpl0.toString();
      assertEquals("[]", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      JSONArrayImpl jSONArrayImpl0 = new JSONArrayImpl();
      jSONArrayImpl0.put(1617);
      assertEquals(1, jSONArrayImpl0.length());
      assertEquals("[1617]", jSONArrayImpl0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      JSONArrayImpl jSONArrayImpl0 = null;
      try {
        jSONArrayImpl0 = new JSONArrayImpl("a@'U9ui0cMI-+j");
        fail("Expecting exception: JSONException");
      } catch(JSONException e) {
        /*
         * org.json.JSONException: A JSONArray text must start with '[' at 1 [character 2 line 1]
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      JSONArrayImpl jSONArrayImpl0 = new JSONArrayImpl();
      double double0 = jSONArrayImpl0.getDouble(1617);
      assertEquals(Double.NaN, double0, 0.01D);
  }

  @Test
  public void test7()  throws Throwable  {
      JSONArrayImpl jSONArrayImpl0 = new JSONArrayImpl();
      jSONArrayImpl0.put((com.liferay.portal.kernel.json.JSONArray) jSONArrayImpl0);
      jSONArrayImpl0.getJSONArray(0);
      assertEquals(1, jSONArrayImpl0.length());
  }

  @Test
  public void test8()  throws Throwable  {
      JSONArrayImpl jSONArrayImpl0 = new JSONArrayImpl();
      boolean boolean0 = jSONArrayImpl0.getBoolean((-7));
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      JSONArrayImpl jSONArrayImpl0 = new JSONArrayImpl();
      long long0 = jSONArrayImpl0.getLong((-7));
      assertEquals(0L, long0);
  }

  @Test
  public void test10()  throws Throwable  {
      JSONArrayImpl jSONArrayImpl0 = new JSONArrayImpl();
      jSONArrayImpl0.put((long) 0);
      assertEquals("[0]", jSONArrayImpl0.toString());
      assertEquals(1, jSONArrayImpl0.length());
  }

  @Test
  public void test11()  throws Throwable  {
      JSONArrayImpl jSONArrayImpl0 = new JSONArrayImpl();
      int int0 = jSONArrayImpl0.getInt(1);
      assertEquals(0, int0);
  }

  @Test
  public void test12()  throws Throwable  {
      JSONArrayImpl jSONArrayImpl0 = new JSONArrayImpl();
      String string0 = jSONArrayImpl0.getString(1);
      assertEquals("", string0);
  }

  @Test
  public void test13()  throws Throwable  {
      JSONArrayImpl jSONArrayImpl0 = new JSONArrayImpl();
      jSONArrayImpl0.put(false);
      assertEquals("[false]", jSONArrayImpl0.toString());
      assertEquals(1, jSONArrayImpl0.length());
  }

  @Test
  public void test14()  throws Throwable  {
      JSONArrayImpl jSONArrayImpl0 = new JSONArrayImpl();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = (StringWriter)jSONArrayImpl0.write((Writer) stringWriter0);
      assertNotNull(stringWriter1);
      assertEquals("[]", stringWriter0.toString());
  }

  @Test
  public void test15()  throws Throwable  {
      JSONArrayImpl jSONArrayImpl0 = new JSONArrayImpl();
      String string0 = jSONArrayImpl0.toString((-7));
      assertEquals("[]", string0);
  }

  @Test
  public void test16()  throws Throwable  {
      JSONArrayImpl jSONArrayImpl0 = new JSONArrayImpl();
      JSONObjectImpl jSONObjectImpl0 = new JSONObjectImpl((Object) "[\"[]\"]");
      jSONArrayImpl0.put((JSONObject) jSONObjectImpl0);
      assertEquals("[{\"bytes\":[91,34,91,93,34,93],\"empty\":false}]", jSONArrayImpl0.toString());
      assertEquals(1, jSONArrayImpl0.length());
  }

  @Test
  public void test17()  throws Throwable  {
      JSONArrayImpl jSONArrayImpl0 = new JSONArrayImpl();
      boolean boolean0 = jSONArrayImpl0.isNull(312);
      assertEquals(true, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      JSONArrayImpl jSONArrayImpl0 = new JSONArrayImpl();
      int int0 = jSONArrayImpl0.length();
      assertEquals(0, int0);
  }

  @Test
  public void test19()  throws Throwable  {
      JSONArrayImpl jSONArrayImpl0 = new JSONArrayImpl();
      JSONArrayImpl jSONArrayImpl1 = (JSONArrayImpl)jSONArrayImpl0.getJSONArray(1617);
      assertNull(jSONArrayImpl1);
  }

  @Test
  public void test20()  throws Throwable  {
      JSONArrayImpl jSONArrayImpl0 = new JSONArrayImpl();
      JSONObjectImpl jSONObjectImpl0 = (JSONObjectImpl)jSONArrayImpl0.getJSONObject(0);
      assertNull(jSONObjectImpl0);
  }
}
