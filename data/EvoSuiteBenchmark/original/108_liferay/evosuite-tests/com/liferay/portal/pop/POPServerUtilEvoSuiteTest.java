/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.pop;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.pop.MessageListener;
import com.liferay.portal.pop.MessageListenerWrapper;
import com.liferay.portal.pop.POPServerUtil;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class POPServerUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MessageListenerWrapper messageListenerWrapper0 = new MessageListenerWrapper((MessageListener) null);
      try {
        POPServerUtil.addListener((MessageListener) messageListenerWrapper0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      List<MessageListener> list0 = POPServerUtil.getListeners();
      assertEquals(false, list0.isEmpty());
  }

  @Test
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try {
        POPServerUtil.start();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsValues
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      POPServerUtil.deleteListener((MessageListener) null);
  }

  @Test
  public void test4()  throws Throwable  {
      POPServerUtil.addListener((MessageListener) null);
  }

  @Test
  public void test5()  throws Throwable  {
      MessageListenerWrapper messageListenerWrapper0 = new MessageListenerWrapper((MessageListener) null);
      try {
        POPServerUtil.deleteListener((MessageListener) messageListenerWrapper0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
