/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.upgrade.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.upgrade.util.DatabaseValueMapper;
import java.util.Iterator;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DatabaseValueMapperEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DatabaseValueMapper databaseValueMapper0 = new DatabaseValueMapper();
      Iterator<Object> iterator0 = databaseValueMapper0.iterator();
      assertEquals(false, iterator0.hasNext());
  }

  @Test
  public void test1()  throws Throwable  {
      DatabaseValueMapper databaseValueMapper0 = new DatabaseValueMapper();
      int int0 = databaseValueMapper0.size();
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      DatabaseValueMapper databaseValueMapper0 = new DatabaseValueMapper();
      Object object0 = databaseValueMapper0.getNewValue((Object) "@;zFJ%n");
      assertNull(object0);
  }

  @Test
  public void test3()  throws Throwable  {
      DatabaseValueMapper databaseValueMapper0 = new DatabaseValueMapper();
      databaseValueMapper0.appendException((Object) null);
      assertEquals(0, databaseValueMapper0.size());
  }

  @Test
  public void test4()  throws Throwable  {
      DatabaseValueMapper databaseValueMapper0 = new DatabaseValueMapper();
      databaseValueMapper0.mapValue((Object) null, (Object) null);
      assertEquals(0, databaseValueMapper0.size());
  }
}
