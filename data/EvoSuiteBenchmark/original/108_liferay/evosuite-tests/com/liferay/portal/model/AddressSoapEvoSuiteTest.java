/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.Address;
import com.liferay.portal.model.AddressSoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AddressSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      long long0 = addressSoap0.getRegionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test1()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      addressSoap0.setStreet2((String) null);
      assertEquals(0L, addressSoap0.getCompanyId());
  }

  @Test
  public void test2()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      addressSoap0.setClassPK((-717L));
      assertEquals((-717L), addressSoap0.getClassPK());
  }

  @Test
  public void test3()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      long long0 = addressSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test4()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      long long0 = addressSoap0.getClassPK();
      assertEquals(0L, long0);
  }

  @Test
  public void test5()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      long long0 = addressSoap0.getCountryId();
      assertEquals(0L, long0);
  }

  @Test
  public void test6()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      String string0 = addressSoap0.getUserName();
      assertNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      Date date0 = addressSoap0.getModifiedDate();
      assertNull(date0);
  }

  @Test
  public void test8()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      addressSoap0.setStreet3((String) null);
      assertEquals(false, addressSoap0.isPrimary());
  }

  @Test
  public void test9()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      addressSoap0.setRegionId(0L);
      assertNull(addressSoap0.getStreet1());
  }

  @Test
  public void test10()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      addressSoap0.setUserName("2YR.*u6iz^jXc2&CuM");
      assertEquals(0L, addressSoap0.getClassPK());
  }

  @Test
  public void test11()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      boolean boolean0 = addressSoap0.getPrimary();
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      addressSoap0.setPrimaryKey(1878L);
      assertEquals(1878L, addressSoap0.getPrimaryKey());
      assertEquals(1878L, addressSoap0.getAddressId());
  }

  @Test
  public void test13()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      addressSoap0.setPrimary(false);
      assertEquals(false, addressSoap0.isPrimary());
      assertEquals(false, addressSoap0.getPrimary());
  }

  @Test
  public void test14()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      int int0 = addressSoap0.getTypeId();
      assertEquals(0, int0);
  }

  @Test
  public void test15()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      String string0 = addressSoap0.getStreet2();
      assertNull(string0);
  }

  @Test
  public void test16()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      addressSoap0.setStreet1((String) null);
      assertEquals(false, addressSoap0.getMailing());
  }

  @Test
  public void test17()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      boolean boolean0 = addressSoap0.isMailing();
      assertEquals(false, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      addressSoap0.setCountryId(0L);
      assertEquals(false, addressSoap0.isMailing());
  }

  @Test
  public void test19()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      addressSoap0.setZip("2YR.*u6iz^jXc2&CuM");
      assertEquals(0L, addressSoap0.getClassNameId());
  }

  @Test
  public void test20()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      addressSoap0.setCompanyId((-289L));
      assertEquals((-289L), addressSoap0.getCompanyId());
  }

  @Test
  public void test21()  throws Throwable  {
      LinkedList<Address> linkedList0 = new LinkedList<Address>();
      linkedList0.add((Address) null);
      // Undeclared exception!
      try {
        AddressSoap.toSoapModels((List<Address>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test22()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      Date date0 = new Date();
      addressSoap0.setModifiedDate(date0);
      assertEquals(2, date0.getDate());
  }

  @Test
  public void test23()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      boolean boolean0 = addressSoap0.getMailing();
      assertEquals(false, boolean0);
  }

  @Test
  public void test24()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      Date date0 = addressSoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test25()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      long long0 = addressSoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test26()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      boolean boolean0 = addressSoap0.isPrimary();
      assertEquals(false, boolean0);
  }

  @Test
  public void test27()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      String string0 = addressSoap0.getCity();
      assertNull(string0);
  }

  @Test
  public void test28()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      String string0 = addressSoap0.getStreet1();
      assertNull(string0);
  }

  @Test
  public void test29()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      addressSoap0.setUserId(582L);
      assertEquals(582L, addressSoap0.getUserId());
  }

  @Test
  public void test30()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      long long0 = addressSoap0.getClassNameId();
      assertEquals(0L, long0);
  }

  @Test
  public void test31()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      addressSoap0.setTypeId(4);
      assertEquals(4, addressSoap0.getTypeId());
  }

  @Test
  public void test32()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      long long0 = addressSoap0.getAddressId();
      assertEquals(0L, long0);
  }

  @Test
  public void test33()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      long long0 = addressSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test34()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      String string0 = addressSoap0.getStreet3();
      assertNull(string0);
  }

  @Test
  public void test35()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      addressSoap0.setMailing(false);
      assertEquals(false, addressSoap0.getMailing());
      assertEquals(false, addressSoap0.isMailing());
  }

  @Test
  public void test36()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      String string0 = addressSoap0.getZip();
      assertNull(string0);
  }

  @Test
  public void test37()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      addressSoap0.setCity("A0k#iYY#c7kL@r1a");
      assertEquals(0, addressSoap0.getTypeId());
  }

  @Test
  public void test38()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      addressSoap0.setClassNameId(1878L);
      assertEquals(1878L, addressSoap0.getClassNameId());
  }

  @Test
  public void test39()  throws Throwable  {
      AddressSoap addressSoap0 = new AddressSoap();
      addressSoap0.setCreateDate((Date) null);
      assertEquals(0L, addressSoap0.getCompanyId());
  }

  @Test
  public void test40()  throws Throwable  {
      Address[][] addressArray0 = new Address[1][8];
      // Undeclared exception!
      try {
        AddressSoap.toSoapModels(addressArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test41()  throws Throwable  {
      LinkedList<Address> linkedList0 = new LinkedList<Address>();
      AddressSoap[] addressSoapArray0 = AddressSoap.toSoapModels((List<Address>) linkedList0);
      assertNotNull(addressSoapArray0);
  }
}
