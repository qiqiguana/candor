/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.BinarySearch;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BinarySearchEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      BinarySearch<Integer> binarySearch0 = BinarySearch.forList((List<Integer>) linkedList0);
      // Undeclared exception!
      try {
        binarySearch0.findFirst((Integer) (-5), (-5));
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 2147483645, Size: 0
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      LinkedList<Comparable<String>> linkedList0 = new LinkedList<Comparable<String>>();
      BinarySearch<Comparable<String>> binarySearch0 = BinarySearch.forList((List<Comparable<String>>) linkedList0, (Comparator<Comparable<String>>) null);
      // Undeclared exception!
      try {
        binarySearch0.find((Comparable<String>) "fffffff2", (-14));
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 2147483640, Size: 0
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      BinarySearch<String> binarySearch0 = BinarySearch.forList((List<String>) linkedList0);
      assertEquals(-1, binarySearch0.getLastIndex());
      
      linkedList0.add("");
      int int0 = binarySearch0.find("");
      assertEquals(0, binarySearch0.getLastIndex());
      assertEquals(0, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("");
      BinarySearch<String> binarySearch0 = BinarySearch.forList((List<String>) linkedList0);
      int int0 = binarySearch0.find("ylfT^sb#w3Vl");
      assertEquals((-2), int0);
      assertEquals(0, binarySearch0.getLastIndex());
  }

  @Test
  public void test4()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("q.");
      BinarySearch<String> binarySearch0 = BinarySearch.forList((List<String>) linkedList0);
      int int0 = binarySearch0.find("RlfT^ib#w3Vl");
      assertEquals(0, binarySearch0.getLastIndex());
      assertEquals((-1), int0);
  }

  @Test
  public void test5()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      BinarySearch<String> binarySearch0 = BinarySearch.forList((List<String>) linkedList0);
      assertEquals(-1, binarySearch0.getLastIndex());
      
      linkedList0.add("");
      int int0 = binarySearch0.findFirst("");
      assertEquals(0, binarySearch0.getLastIndex());
      assertEquals(0, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("");
      BinarySearch<String> binarySearch0 = BinarySearch.forList((List<String>) linkedList0);
      int int0 = binarySearch0.findFirst("#/)a-grtciJ_c");
      assertEquals(0, binarySearch0.getLastIndex());
      assertEquals((-2), int0);
  }

  @Test
  public void test7()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("q.");
      BinarySearch<String> binarySearch0 = BinarySearch.forList((List<String>) linkedList0);
      int int0 = binarySearch0.findFirst("RlfT^ib#w3Vl");
      assertEquals((-1), int0);
      assertEquals(0, binarySearch0.getLastIndex());
  }

  @Test
  public void test8()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      BinarySearch<String> binarySearch0 = BinarySearch.forList((List<String>) linkedList0);
      assertEquals(-1, binarySearch0.getLastIndex());
      
      linkedList0.add("");
      int int0 = binarySearch0.findLast("", 0);
      assertEquals(0, binarySearch0.getLastIndex());
      assertEquals(0, int0);
  }

  @Test
  public void test9()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("q.");
      BinarySearch<String> binarySearch0 = BinarySearch.forList((List<String>) linkedList0);
      int int0 = binarySearch0.findLast("RlfT^ib#w3Vl");
      assertEquals(0, binarySearch0.getLastIndex());
      assertEquals((-1), int0);
  }

  @Test
  public void test10()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("");
      BinarySearch<String> binarySearch0 = BinarySearch.forList((List<String>) linkedList0);
      int int0 = binarySearch0.findLast("ylfT^sb#w3Vl");
      assertEquals(0, binarySearch0.getLastIndex());
      assertEquals((-2), int0);
  }
}
