/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.service.permission;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.Group;
import com.liferay.portal.security.permission.PermissionChecker;
import com.liferay.portal.service.permission.GroupPermission;
import com.liferay.portal.service.permission.GroupPermissionUtil;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class GroupPermissionUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try {
        GroupPermissionUtil.contains((PermissionChecker) null, (Group) null, "+>Syu;p#Ht,w8XG\"_");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try {
        GroupPermissionUtil.contains((PermissionChecker) null, 0L, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try {
        GroupPermissionUtil.check((PermissionChecker) null, (-1720L), (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try {
        GroupPermissionUtil.check((PermissionChecker) null, (Group) null, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      GroupPermission groupPermission0 = GroupPermissionUtil.getGroupPermission();
      GroupPermissionUtil groupPermissionUtil0 = new GroupPermissionUtil();
      groupPermissionUtil0.setGroupPermission(groupPermission0);
  }
}
