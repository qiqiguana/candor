/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.LayoutRevision;
import com.liferay.portal.model.LayoutRevisionSoap;
import com.liferay.portal.model.LayoutRevisionWrapper;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LayoutRevisionSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      long long0 = layoutRevisionSoap0.getLayoutRevisionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test1()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setIconImageId((long) (-1299));
      assertEquals((-1299L), layoutRevisionSoap0.getIconImageId());
  }

  @Test
  public void test2()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      String string0 = layoutRevisionSoap0.getTitle();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      String string0 = layoutRevisionSoap0.getUserName();
      assertNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      Date date0 = layoutRevisionSoap0.getStatusDate();
      assertNull(date0);
  }

  @Test
  public void test5()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setIconImage(true);
      assertEquals(true, layoutRevisionSoap0.getIconImage());
      assertEquals(true, layoutRevisionSoap0.isIconImage());
  }

  @Test
  public void test6()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setCss("");
      assertEquals(0L, layoutRevisionSoap0.getUserId());
  }

  @Test
  public void test7()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      boolean boolean0 = layoutRevisionSoap0.isPrivateLayout();
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      String string0 = layoutRevisionSoap0.getName();
      assertNull(string0);
  }

  @Test
  public void test9()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setLayoutBranchId(0L);
      assertEquals(0L, layoutRevisionSoap0.getGroupId());
  }

  @Test
  public void test10()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setCreateDate((Date) null);
      assertEquals(0L, layoutRevisionSoap0.getLayoutSetBranchId());
  }

  @Test
  public void test11()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      boolean boolean0 = layoutRevisionSoap0.getMajor();
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      String string0 = layoutRevisionSoap0.getWapColorSchemeId();
      assertNull(string0);
  }

  @Test
  public void test13()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setPlid((-1L));
      assertEquals((-1L), layoutRevisionSoap0.getPlid());
  }

  @Test
  public void test14()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      boolean boolean0 = layoutRevisionSoap0.isMajor();
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      String string0 = layoutRevisionSoap0.getRobots();
      assertNull(string0);
  }

  @Test
  public void test16()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      long long0 = layoutRevisionSoap0.getStatusByUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test17()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setDescription("");
      assertEquals(false, layoutRevisionSoap0.isHead());
  }

  @Test
  public void test18()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      String string0 = layoutRevisionSoap0.getWapThemeId();
      assertNull(string0);
  }

  @Test
  public void test19()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      long long0 = layoutRevisionSoap0.getLayoutBranchId();
      assertEquals(0L, long0);
  }

  @Test
  public void test20()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setPrimaryKey(0L);
      assertEquals(false, layoutRevisionSoap0.getMajor());
  }

  @Test
  public void test21()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      String string0 = layoutRevisionSoap0.getTypeSettings();
      assertNull(string0);
  }

  @Test
  public void test22()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      String string0 = layoutRevisionSoap0.getStatusByUserName();
      assertNull(string0);
  }

  @Test
  public void test23()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setStatusByUserName("");
      assertEquals("", layoutRevisionSoap0.getStatusByUserName());
  }

  @Test
  public void test24()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setRobots("<;'5X2o[.r");
      assertEquals(0L, layoutRevisionSoap0.getLayoutRevisionId());
  }

  @Test
  public void test25()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      String string0 = layoutRevisionSoap0.getColorSchemeId();
      assertNull(string0);
  }

  @Test
  public void test26()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      boolean boolean0 = layoutRevisionSoap0.isIconImage();
      assertEquals(false, boolean0);
  }

  @Test
  public void test27()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setThemeId("");
      assertEquals(0L, layoutRevisionSoap0.getPlid());
  }

  @Test
  public void test28()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      String string0 = layoutRevisionSoap0.getThemeId();
      assertNull(string0);
  }

  @Test
  public void test29()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setName("");
      assertEquals(0L, layoutRevisionSoap0.getLayoutBranchId());
  }

  @Test
  public void test30()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      boolean boolean0 = layoutRevisionSoap0.isHead();
      assertEquals(false, boolean0);
  }

  @Test
  public void test31()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setStatus((-1299));
      assertEquals(-1299, layoutRevisionSoap0.getStatus());
  }

  @Test
  public void test32()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      long long0 = layoutRevisionSoap0.getLayoutSetBranchId();
      assertEquals(0L, long0);
  }

  @Test
  public void test33()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      String string0 = layoutRevisionSoap0.getKeywords();
      assertNull(string0);
  }

  @Test
  public void test34()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setTypeSettings("");
      assertEquals(0L, layoutRevisionSoap0.getCompanyId());
  }

  @Test
  public void test35()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setParentLayoutRevisionId((-21L));
      assertEquals((-21L), layoutRevisionSoap0.getParentLayoutRevisionId());
  }

  @Test
  public void test36()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setStatusByUserId(0L);
      assertNull(layoutRevisionSoap0.getUserName());
  }

  @Test
  public void test37()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      boolean boolean0 = layoutRevisionSoap0.getHead();
      assertEquals(false, boolean0);
  }

  @Test
  public void test38()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      boolean boolean0 = layoutRevisionSoap0.getIconImage();
      assertEquals(false, boolean0);
  }

  @Test
  public void test39()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setColorSchemeId((String) null);
      assertEquals(0L, layoutRevisionSoap0.getCompanyId());
  }

  @Test
  public void test40()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      int int0 = layoutRevisionSoap0.getStatus();
      assertEquals(0, int0);
  }

  @Test
  public void test41()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      long long0 = layoutRevisionSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test42()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      long long0 = layoutRevisionSoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test43()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      long long0 = layoutRevisionSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test44()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setLayoutSetBranchId(0L);
      assertEquals(false, layoutRevisionSoap0.isMajor());
  }

  @Test
  public void test45()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setTitle((String) null);
      assertEquals(0L, layoutRevisionSoap0.getLayoutBranchId());
  }

  @Test
  public void test46()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      long long0 = layoutRevisionSoap0.getPlid();
      assertEquals(0L, long0);
  }

  @Test
  public void test47()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      boolean boolean0 = layoutRevisionSoap0.getPrivateLayout();
      assertEquals(false, boolean0);
  }

  @Test
  public void test48()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      long long0 = layoutRevisionSoap0.getParentLayoutRevisionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test49()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setStatusDate((Date) null);
      assertEquals(0L, layoutRevisionSoap0.getCompanyId());
  }

  @Test
  public void test50()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      long long0 = layoutRevisionSoap0.getIconImageId();
      assertEquals(0L, long0);
  }

  @Test
  public void test51()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setCompanyId(0L);
      assertEquals(false, layoutRevisionSoap0.getIconImage());
  }

  @Test
  public void test52()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setHead(false);
      assertEquals(false, layoutRevisionSoap0.getHead());
      assertEquals(false, layoutRevisionSoap0.isHead());
  }

  @Test
  public void test53()  throws Throwable  {
      LinkedList<LayoutRevision> linkedList0 = new LinkedList<LayoutRevision>();
      LayoutRevisionWrapper layoutRevisionWrapper0 = new LayoutRevisionWrapper((LayoutRevision) null);
      linkedList0.add((LayoutRevision) layoutRevisionWrapper0);
      // Undeclared exception!
      try {
        LayoutRevisionSoap.toSoapModels((List<LayoutRevision>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test54()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setMajor(false);
      assertEquals(false, layoutRevisionSoap0.isMajor());
      assertEquals(false, layoutRevisionSoap0.getMajor());
  }

  @Test
  public void test55()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      Date date0 = layoutRevisionSoap0.getModifiedDate();
      assertNull(date0);
  }

  @Test
  public void test56()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      Date date0 = layoutRevisionSoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test57()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setPrivateLayout(true);
      assertEquals(true, layoutRevisionSoap0.isPrivateLayout());
      assertEquals(true, layoutRevisionSoap0.getPrivateLayout());
  }

  @Test
  public void test58()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setModifiedDate((Date) null);
      assertEquals(0L, layoutRevisionSoap0.getLayoutSetBranchId());
  }

  @Test
  public void test59()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      long long0 = layoutRevisionSoap0.getGroupId();
      assertEquals(0L, long0);
  }

  @Test
  public void test60()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      String string0 = layoutRevisionSoap0.getCss();
      assertNull(string0);
  }

  @Test
  public void test61()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setWapThemeId("");
      assertEquals(0L, layoutRevisionSoap0.getLayoutBranchId());
  }

  @Test
  public void test62()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setUserName("");
      assertNull(layoutRevisionSoap0.getRobots());
  }

  @Test
  public void test63()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setWapColorSchemeId("");
      assertEquals(0L, layoutRevisionSoap0.getIconImageId());
  }

  @Test
  public void test64()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setGroupId(0L);
      assertNull(layoutRevisionSoap0.getUserName());
  }

  @Test
  public void test65()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setKeywords((String) null);
      assertEquals(false, layoutRevisionSoap0.getIconImage());
  }

  @Test
  public void test66()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      String string0 = layoutRevisionSoap0.getDescription();
      assertNull(string0);
  }

  @Test
  public void test67()  throws Throwable  {
      LayoutRevisionSoap layoutRevisionSoap0 = new LayoutRevisionSoap();
      layoutRevisionSoap0.setUserId(0L);
      assertEquals(false, layoutRevisionSoap0.getPrivateLayout());
  }

  @Test
  public void test68()  throws Throwable  {
      LayoutRevision[][] layoutRevisionArray0 = new LayoutRevision[1][1];
      // Undeclared exception!
      try {
        LayoutRevisionSoap.toSoapModels(layoutRevisionArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test69()  throws Throwable  {
      LinkedList<LayoutRevision> linkedList0 = new LinkedList<LayoutRevision>();
      LayoutRevisionSoap[] layoutRevisionSoapArray0 = LayoutRevisionSoap.toSoapModels((List<LayoutRevision>) linkedList0);
      assertNotNull(layoutRevisionSoapArray0);
  }
}
