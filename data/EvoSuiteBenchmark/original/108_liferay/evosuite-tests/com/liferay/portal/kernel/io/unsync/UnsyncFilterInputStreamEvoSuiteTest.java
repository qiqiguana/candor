/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.io.unsync;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.io.unsync.UnsyncFilterInputStream;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UnsyncFilterInputStreamEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UnsyncFilterInputStream unsyncFilterInputStream0 = new UnsyncFilterInputStream((InputStream) null);
      // Undeclared exception!
      try {
        unsyncFilterInputStream0.available();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      UnsyncFilterInputStream unsyncFilterInputStream0 = new UnsyncFilterInputStream((InputStream) null);
      // Undeclared exception!
      try {
        unsyncFilterInputStream0.read();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      UnsyncFilterInputStream unsyncFilterInputStream0 = new UnsyncFilterInputStream((InputStream) byteArrayInputStream0);
      unsyncFilterInputStream0.mark((int) (byte)1);
      assertEquals(5, unsyncFilterInputStream0.available());
  }

  @Test
  public void test3()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      UnsyncFilterInputStream unsyncFilterInputStream0 = new UnsyncFilterInputStream((InputStream) pipedInputStream0);
      unsyncFilterInputStream0.close();
      assertEquals(0, unsyncFilterInputStream0.available());
  }

  @Test
  public void test4()  throws Throwable  {
      UnsyncFilterInputStream unsyncFilterInputStream0 = new UnsyncFilterInputStream((InputStream) null);
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try {
        unsyncFilterInputStream0.read(byteArray0, (int) (byte) (-16), (int) (byte) (-16));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      UnsyncFilterInputStream unsyncFilterInputStream0 = new UnsyncFilterInputStream((InputStream) null);
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try {
        unsyncFilterInputStream0.read(byteArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      UnsyncFilterInputStream unsyncFilterInputStream0 = new UnsyncFilterInputStream((InputStream) null);
      // Undeclared exception!
      try {
        unsyncFilterInputStream0.reset();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      UnsyncFilterInputStream unsyncFilterInputStream0 = new UnsyncFilterInputStream((InputStream) null);
      // Undeclared exception!
      try {
        unsyncFilterInputStream0.skip(101L);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      UnsyncFilterInputStream unsyncFilterInputStream0 = new UnsyncFilterInputStream((InputStream) pipedInputStream0);
      boolean boolean0 = unsyncFilterInputStream0.markSupported();
      assertEquals(false, boolean0);
  }
}
