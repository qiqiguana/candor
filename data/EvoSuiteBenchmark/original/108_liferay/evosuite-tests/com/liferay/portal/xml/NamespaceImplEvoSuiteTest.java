/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.xml;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.xml.Visitor;
import com.liferay.portal.xml.NamespaceImpl;
import org.dom4j.Namespace;
import org.dom4j.QName;
import org.dom4j.util.IndexedElement;
import org.dom4j.util.UserDataAttribute;
import org.dom4j.util.UserDataElement;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class NamespaceImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      NamespaceImpl namespaceImpl0 = new NamespaceImpl((Namespace) null);
      // Undeclared exception!
      try {
        namespaceImpl0.hashCode();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      QName qName0 = QName.get("", "");
      IndexedElement indexedElement0 = new IndexedElement(qName0);
      Namespace namespace0 = indexedElement0.getNamespace();
      NamespaceImpl namespaceImpl0 = new NamespaceImpl(namespace0);
      String string0 = namespaceImpl0.toString();
      assertNotNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      QName qName0 = QName.get("Q,", "Q,", "Q,");
      UserDataElement userDataElement0 = new UserDataElement(qName0);
      Namespace namespace0 = userDataElement0.getNamespaceForURI("Q,");
      NamespaceImpl namespaceImpl0 = new NamespaceImpl(namespace0);
      short short0 = namespaceImpl0.getNodeType();
      assertEquals((short)13, short0);
  }

  @Test
  public void test3()  throws Throwable  {
      QName qName0 = QName.get("Q,", "Q,", "Q,");
      UserDataElement userDataElement0 = new UserDataElement(qName0);
      Namespace namespace0 = userDataElement0.getNamespaceForURI("Q,");
      NamespaceImpl namespaceImpl0 = new NamespaceImpl(namespace0);
      String string0 = namespaceImpl0.getURI();
      assertEquals("Q,", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      NamespaceImpl namespaceImpl0 = new NamespaceImpl((Namespace) null);
      Namespace namespace0 = namespaceImpl0.getWrappedNamespace();
      assertNull(namespace0);
  }

  @Test
  public void test5()  throws Throwable  {
      IndexedElement indexedElement0 = new IndexedElement("");
      Namespace namespace0 = indexedElement0.getNamespaceForURI("");
      NamespaceImpl namespaceImpl0 = new NamespaceImpl(namespace0);
      String string0 = namespaceImpl0.getXPathNameStep();
      assertEquals("namespace::*[name()='']", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      QName qName0 = QName.get("B", "", "");
      UserDataAttribute userDataAttribute0 = new UserDataAttribute(qName0, "");
      Namespace namespace0 = userDataAttribute0.getNamespace();
      NamespaceImpl namespaceImpl0 = new NamespaceImpl(namespace0);
      String string0 = namespaceImpl0.getPrefix();
      assertEquals("", string0);
  }

  @Test
  public void test7()  throws Throwable  {
      Namespace namespace0 = Namespace.get("");
      NamespaceImpl namespaceImpl0 = new NamespaceImpl(namespace0);
      // Undeclared exception!
      try {
        namespaceImpl0.equals((Object) "ToolTipText");
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * java.lang.String cannot be cast to com.liferay.portal.xml.NamespaceImpl
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      Namespace namespace0 = Namespace.get("c}Oc5d", "");
      NamespaceImpl namespaceImpl0 = new NamespaceImpl(namespace0);
      // Undeclared exception!
      try {
        namespaceImpl0.accept((Visitor<NamespaceImpl>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
