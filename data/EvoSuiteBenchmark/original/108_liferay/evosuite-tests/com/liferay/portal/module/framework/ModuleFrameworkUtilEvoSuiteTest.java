/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.module.framework;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.module.framework.ModuleFrameworkUtil;
import com.liferay.portal.security.auth.PrincipalException;
import java.io.InputStream;
import org.geotools.factory.Hints;
import org.junit.BeforeClass;
import org.osgi.framework.launch.Framework;
import org.springframework.context.support.GenericXmlApplicationContext;
import org.springframework.core.MethodParameter;

@RunWith(EvoSuiteRunner.class)
public class ModuleFrameworkUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Class<?> class0 = MethodParameter.class;
      Hints.ClassKey hints_ClassKey0 = new Hints.ClassKey(class0);
      Class<?> class1 = hints_ClassKey0.getValueClass();
      ModuleFrameworkUtil.registerContext((Object) class1);
      assertEquals(false, class1.isMemberClass());
  }

  @Test
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try {
        ModuleFrameworkUtil.startFramework();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsValues
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      try {
        ModuleFrameworkUtil.addBundle("]zN~8");
        fail("Expecting exception: PrincipalException");
      } catch(PrincipalException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ModuleFrameworkUtil.stopFramework();
  }

  @Test
  public void test4()  throws Throwable  {
      try {
        ModuleFrameworkUtil.updateBundle((-2003L));
        fail("Expecting exception: PrincipalException");
      } catch(PrincipalException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      try {
        ModuleFrameworkUtil.stopBundle(7L);
        fail("Expecting exception: PrincipalException");
      } catch(PrincipalException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      try {
        ModuleFrameworkUtil.stopBundle(1309L, 1471);
        fail("Expecting exception: PrincipalException");
      } catch(PrincipalException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Framework framework0 = ModuleFrameworkUtil.getFramework();
      assertNull(framework0);
  }

  @Test
  public void test8()  throws Throwable  {
      ModuleFrameworkUtil.stopRuntime();
  }

  @Test
  public void test9()  throws Throwable  {
      try {
        ModuleFrameworkUtil.setBundleStartLevel(17L, 1530);
        fail("Expecting exception: PrincipalException");
      } catch(PrincipalException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      ModuleFrameworkUtil.startRuntime();
  }

  @Test
  public void test11()  throws Throwable  {
      try {
        ModuleFrameworkUtil.startBundle((-857L), 321);
        fail("Expecting exception: PrincipalException");
      } catch(PrincipalException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      try {
        ModuleFrameworkUtil.uninstallBundle(518L);
        fail("Expecting exception: PrincipalException");
      } catch(PrincipalException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      try {
        ModuleFrameworkUtil.startBundle((-5L));
        fail("Expecting exception: PrincipalException");
      } catch(PrincipalException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      try {
        ModuleFrameworkUtil.updateBundle(2L, (InputStream) null);
        fail("Expecting exception: PrincipalException");
      } catch(PrincipalException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      try {
        ModuleFrameworkUtil.getState(32L);
        fail("Expecting exception: PrincipalException");
      } catch(PrincipalException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      ModuleFrameworkUtil.registerContext((Object) null);
  }

  @Test
  public void test17()  throws Throwable  {
      GenericXmlApplicationContext genericXmlApplicationContext0 = new GenericXmlApplicationContext();
      // Undeclared exception!
      try {
        ModuleFrameworkUtil.registerContext((Object) genericXmlApplicationContext0);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsValues
         */
      }
  }
}
