/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.messaging;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.messaging.Message;
import com.liferay.portal.kernel.util.TransientValue;
import java.util.HashMap;
import java.util.Map;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MessageEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Message message0 = new Message();
      Map<String, Object> map0 = message0.getValues();
      assertNull(map0);
  }

  @Test
  public void test1()  throws Throwable  {
      Message message0 = new Message();
      message0.setResponseId("? Q$OG+");
      assertEquals("{destinationName=null, response=null, responseDestinationName=null, responseId=? Q$OG+, payload=null, values=null}", message0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      Message message0 = new Message();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      message0.setValues((Map<String, Object>) hashMap0);
      boolean boolean0 = message0.contains("");
      assertEquals(true, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      Message message0 = new Message();
      String string0 = message0.getString("zcj1");
      assertEquals("null", string0);
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      Message message0 = new Message();
      message0.setResponse((Object) "null");
      assertNull(message0.getResponseDestinationName());
  }

  @Test
  public void test5()  throws Throwable  {
      Message message0 = new Message();
      String string0 = message0.getResponseId();
      assertNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      Message message0 = new Message();
      String string0 = message0.getDestinationName();
      assertNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      Message message0 = new Message();
      Boolean boolean0 = new Boolean(false);
      message0.setPayload((Object) boolean0);
      assertEquals("{destinationName=null, response=null, responseDestinationName=null, responseId=null, payload=false, values=null}", message0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      Message message0 = new Message();
      Object object0 = message0.getPayload();
      assertNull(object0);
  }

  @Test
  public void test9()  throws Throwable  {
      Message message0 = new Message();
      String string0 = message0.toString();
      assertEquals("{destinationName=null, response=null, responseDestinationName=null, responseId=null, payload=null, values=null}", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      Message message0 = new Message();
      String string0 = message0.getResponseDestinationName();
      assertNull(string0);
  }

  @Test
  public void test11()  throws Throwable  {
      Message message0 = new Message();
      message0.setDestinationName("4");
      assertEquals("4", message0.getDestinationName());
  }

  @Test
  public void test12()  throws Throwable  {
      Message message0 = new Message();
      Object object0 = message0.getResponse();
      assertNull(object0);
  }

  @Test
  public void test13()  throws Throwable  {
      Message message0 = new Message();
      message0.setResponseDestinationName("0ojcQP+");
      assertEquals("0ojcQP+", message0.getResponseDestinationName());
  }

  @Test
  public void test14()  throws Throwable  {
      Message message0 = new Message();
      Message message1 = message0.clone();
      assertNotNull(message1);
      assertNotSame(message0, message1);
  }

  @Test
  public void test15()  throws Throwable  {
      Message message0 = new Message();
      TransientValue<String> transientValue0 = new TransientValue<String>();
      message0.put("4", (Object) transientValue0);
      Message message1 = message0.clone();
      assertNotSame(message0, message1);
      assertNotNull(message1);
  }

  @Test
  public void test16()  throws Throwable  {
      Message message0 = new Message();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      message0.setValues((Map<String, Object>) hashMap0);
      long long0 = message0.getLong("? Q$OG+");
      assertEquals(0L, long0);
  }

  @Test
  public void test17()  throws Throwable  {
      Message message0 = new Message();
      TransientValue<String> transientValue0 = new TransientValue<String>();
      message0.put("4", (Object) transientValue0);
      double double0 = message0.getDouble("4");
      assertEquals(0.0, double0, 0.01D);
  }

  @Test
  public void test18()  throws Throwable  {
      Message message0 = new Message();
      boolean boolean0 = message0.getBoolean("0ojcQP+");
      assertEquals(false, boolean0);
  }

  @Test
  public void test19()  throws Throwable  {
      Message message0 = new Message();
      boolean boolean0 = message0.contains(";");
      message0.put("$h3u8", (Object) boolean0);
      boolean boolean1 = message0.getBoolean("$h3u8");
      assertEquals("{destinationName=null, response=null, responseDestinationName=null, responseId=null, payload=null, values={$h3u8=false}}", message0.toString());
      assertEquals(false, boolean1);
  }

  @Test
  public void test20()  throws Throwable  {
      Message message0 = new Message();
      Double double0 = Double.valueOf(1152.9550895462382);
      message0.put((String) null, (Object) double0);
      double double1 = message0.getDouble((String) null);
      assertEquals("{destinationName=null, response=null, responseDestinationName=null, responseId=null, payload=null, values={null=1152.9550895462382}}", message0.toString());
      assertEquals(1152.9550895462382, double1, 0.01D);
  }

  @Test
  public void test21()  throws Throwable  {
      Message message0 = new Message();
      int int0 = message0.getInteger((String) null);
      assertEquals(0, int0);
  }

  @Test
  public void test22()  throws Throwable  {
      Message message0 = new Message();
      Byte byte0 = Byte.valueOf((byte) (-28));
      message0.put("? Q$OG+", (Object) byte0);
      int int0 = message0.getInteger("? Q$OG+");
      assertEquals("{destinationName=null, response=null, responseDestinationName=null, responseId=null, payload=null, values={? Q$OG+=-28}}", message0.toString());
      assertEquals((-28), int0);
  }

  @Test
  public void test23()  throws Throwable  {
      Message message0 = new Message();
      Byte byte0 = Byte.valueOf((byte) (-28));
      message0.put("? Q$OG+", (Object) byte0);
      long long0 = message0.getLong("? Q$OG+");
      assertEquals("{destinationName=null, response=null, responseDestinationName=null, responseId=null, payload=null, values={? Q$OG+=-28}}", message0.toString());
      assertEquals((-28L), long0);
  }

  @Test
  public void test24()  throws Throwable  {
      Message message0 = new Message();
      message0.put("4", (Object) null);
      assertNull(message0.getDestinationName());
  }

  @Test
  public void test25()  throws Throwable  {
      Message message0 = new Message();
      TransientValue<String> transientValue0 = new TransientValue<String>();
      message0.put("4", (Object) transientValue0);
      message0.put("4", (Object) null);
      assertNull(message0.getDestinationName());
  }

  @Test
  public void test26()  throws Throwable  {
      Message message0 = new Message();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      message0.setValues((Map<String, Object>) hashMap0);
      Byte byte0 = Byte.valueOf((byte) (-28));
      message0.put("? Q$OG+", (Object) byte0);
      assertEquals("{destinationName=null, response=null, responseDestinationName=null, responseId=null, payload=null, values={? Q$OG+=-28}}", message0.toString());
  }

  @Test
  public void test27()  throws Throwable  {
      Message message0 = new Message();
      Object object0 = new Object();
      message0.put("? Q$OG+", object0);
      assertNull(message0.getResponseDestinationName());
  }

  @Test
  public void test28()  throws Throwable  {
      Message message0 = new Message();
      message0.remove("? Q$OG+");
      assertEquals("{destinationName=null, response=null, responseDestinationName=null, responseId=null, payload=null, values=null}", message0.toString());
  }

  @Test
  public void test29()  throws Throwable  {
      Message message0 = new Message();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      message0.setValues((Map<String, Object>) hashMap0);
      message0.remove("? Q$OG+");
      assertNull(message0.getResponseDestinationName());
  }
}
