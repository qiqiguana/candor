/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.cluster;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.cluster.AddressImpl;
import org.jgroups.Address;
import org.jgroups.AnycastAddress;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AddressImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AnycastAddress anycastAddress0 = new AnycastAddress();
      AddressImpl addressImpl0 = new AddressImpl((Address) anycastAddress0);
      int int0 = addressImpl0.hashCode();
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      AnycastAddress anycastAddress0 = new AnycastAddress();
      AddressImpl addressImpl0 = new AddressImpl((Address) anycastAddress0);
      AnycastAddress anycastAddress1 = (AnycastAddress)addressImpl0.getRealAddress();
      assertEquals("AnycastAddress []", anycastAddress1.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      AnycastAddress anycastAddress0 = new AnycastAddress();
      AddressImpl addressImpl0 = new AddressImpl((Address) anycastAddress0);
      String string0 = addressImpl0.toString();
      assertEquals("AnycastAddress []", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      AnycastAddress anycastAddress0 = new AnycastAddress();
      AddressImpl addressImpl0 = new AddressImpl((Address) anycastAddress0);
      String string0 = addressImpl0.getDescription();
      assertEquals("AnycastAddress []", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      AnycastAddress anycastAddress0 = new AnycastAddress();
      AddressImpl addressImpl0 = new AddressImpl((Address) anycastAddress0);
      boolean boolean0 = addressImpl0.equals((Object) addressImpl0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      AnycastAddress anycastAddress0 = new AnycastAddress();
      AddressImpl addressImpl0 = new AddressImpl((Address) anycastAddress0);
      boolean boolean0 = addressImpl0.equals((Object) null);
      assertEquals(false, boolean0);
  }
}
