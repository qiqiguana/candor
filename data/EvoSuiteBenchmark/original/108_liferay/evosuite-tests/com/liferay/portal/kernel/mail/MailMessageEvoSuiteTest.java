/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.mail;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.mail.model.FileAttachment;
import com.liferay.portal.kernel.mail.MailMessage;
import com.liferay.portal.kernel.mail.SMTPAccount;
import java.io.File;
import java.io.UnsupportedEncodingException;
import java.util.List;
import javax.mail.internet.InternetAddress;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MailMessageEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MailMessage mailMessage0 = new MailMessage();
      InternetAddress[] internetAddressArray0 = new InternetAddress[1];
      mailMessage0.setBCC(internetAddressArray0);
      assertNull(mailMessage0.getSubject());
  }

  @Test
  public void test1()  throws Throwable  {
      MailMessage mailMessage0 = new MailMessage();
      String string0 = mailMessage0.getMessageId();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      MailMessage mailMessage0 = new MailMessage();
      mailMessage0.setMessageId("f-+[\"W%Uy}]j");
      assertEquals("f-+[\"W%Uy}]j", mailMessage0.getMessageId());
  }

  @Test
  public void test3()  throws Throwable  {
      MailMessage mailMessage0 = new MailMessage();
      mailMessage0.addFileAttachment((File) null);
      assertEquals(false, mailMessage0.getHTMLFormat());
  }

  @Test
  public void test4()  throws Throwable  {
      MailMessage mailMessage0 = new MailMessage();
      boolean boolean0 = mailMessage0.getHTMLFormat();
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      MailMessage mailMessage0 = new MailMessage();
      InternetAddress internetAddress0 = mailMessage0.getFrom();
      assertNull(internetAddress0);
  }

  @Test
  public void test6()  throws Throwable  {
      InternetAddress internetAddress0 = new InternetAddress();
      MailMessage mailMessage0 = new MailMessage(internetAddress0, internetAddress0, "", "", true);
      assertNotNull(mailMessage0);
      
      mailMessage0.getBCC();
      assertEquals(true, mailMessage0.getHTMLFormat());
      assertEquals(true, mailMessage0.isHTMLFormat());
  }

  @Test
  public void test7()  throws Throwable  {
      MailMessage mailMessage0 = new MailMessage();
      mailMessage0.setHTMLFormat(true);
      assertEquals(true, mailMessage0.getHTMLFormat());
      assertEquals(true, mailMessage0.isHTMLFormat());
  }

  @Test
  public void test8()  throws Throwable  {
      InternetAddress internetAddress0 = new InternetAddress();
      MailMessage mailMessage0 = new MailMessage(internetAddress0, internetAddress0, "", "", true);
      assertNotNull(mailMessage0);
      
      mailMessage0.getReplyTo();
      assertEquals(true, mailMessage0.getHTMLFormat());
      assertEquals(true, mailMessage0.isHTMLFormat());
  }

  @Test
  public void test9()  throws Throwable  {
      InternetAddress internetAddress0 = new InternetAddress("", "");
      MailMessage mailMessage0 = new MailMessage();
      mailMessage0.setBCC(internetAddress0);
      assertEquals(false, mailMessage0.isHTMLFormat());
  }

  @Test
  public void test10()  throws Throwable  {
      MailMessage mailMessage0 = new MailMessage();
      boolean boolean0 = mailMessage0.isHTMLFormat();
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      MailMessage mailMessage0 = new MailMessage();
      InternetAddress[] internetAddressArray0 = mailMessage0.getTo();
      assertNull(internetAddressArray0);
  }

  @Test
  public void test12()  throws Throwable  {
      MailMessage mailMessage0 = new MailMessage();
      List<FileAttachment> list0 = mailMessage0.getFileAttachments();
      assertEquals(true, list0.isEmpty());
  }

  @Test
  public void test13()  throws Throwable  {
      InternetAddress internetAddress0 = new InternetAddress();
      MailMessage mailMessage0 = new MailMessage(internetAddress0, internetAddress0, "", "", true);
      assertNotNull(mailMessage0);
      
      mailMessage0.setTo(internetAddress0);
      assertEquals(true, mailMessage0.isHTMLFormat());
      assertEquals(true, mailMessage0.getHTMLFormat());
  }

  @Test
  public void test14()  throws Throwable  {
      InternetAddress internetAddress0 = new InternetAddress();
      MailMessage mailMessage0 = new MailMessage(internetAddress0, internetAddress0, "", "", true);
      assertNotNull(mailMessage0);
      
      mailMessage0.setSMTPAccount((SMTPAccount) null);
      assertEquals(true, mailMessage0.isHTMLFormat());
      assertEquals(true, mailMessage0.getHTMLFormat());
  }

  @Test
  public void test15()  throws Throwable  {
      MailMessage mailMessage0 = new MailMessage();
      mailMessage0.setSubject("");
      assertNull(mailMessage0.getMessageId());
  }

  @Test
  public void test16()  throws Throwable  {
      MailMessage mailMessage0 = new MailMessage();
      InternetAddress internetAddress0 = new InternetAddress("", "", "e`$> q#/");
      mailMessage0.setCC(internetAddress0);
      assertEquals(" <>", internetAddress0.toUnicodeString());
  }

  @Test
  public void test17()  throws Throwable  {
      InternetAddress internetAddress0 = new InternetAddress();
      MailMessage mailMessage0 = new MailMessage(internetAddress0, internetAddress0, "", "", true);
      assertNotNull(mailMessage0);
      
      mailMessage0.getSMTPAccount();
      assertEquals(true, mailMessage0.isHTMLFormat());
      assertEquals(true, mailMessage0.getHTMLFormat());
  }

  @Test
  public void test18()  throws Throwable  {
      MailMessage mailMessage0 = new MailMessage();
      mailMessage0.setCC((InternetAddress[]) null);
      assertEquals(false, mailMessage0.getHTMLFormat());
  }

  @Test
  public void test19()  throws Throwable  {
      MailMessage mailMessage0 = new MailMessage();
      String string0 = mailMessage0.getInReplyTo();
      assertNull(string0);
  }

  @Test
  public void test20()  throws Throwable  {
      MailMessage mailMessage0 = new MailMessage();
      InternetAddress[] internetAddressArray0 = mailMessage0.getBulkAddresses();
      assertNull(internetAddressArray0);
  }

  @Test
  public void test21()  throws Throwable  {
      MailMessage mailMessage0 = new MailMessage();
      String string0 = mailMessage0.getSubject();
      assertNull(string0);
  }

  @Test
  public void test22()  throws Throwable  {
      MailMessage mailMessage0 = new MailMessage();
      String string0 = mailMessage0.getBody();
      assertNull(string0);
  }

  @Test
  public void test23()  throws Throwable  {
      InternetAddress internetAddress0 = new InternetAddress();
      MailMessage mailMessage0 = new MailMessage(internetAddress0, "", "a", false);
      assertEquals("a", mailMessage0.getBody());
      assertEquals(false, mailMessage0.isHTMLFormat());
      assertEquals("", mailMessage0.getSubject());
  }

  @Test
  public void test24()  throws Throwable  {
      MailMessage mailMessage0 = new MailMessage();
      mailMessage0.setTo((InternetAddress[]) null);
      assertEquals(false, mailMessage0.isHTMLFormat());
  }

  @Test
  public void test25()  throws Throwable  {
      MailMessage mailMessage0 = new MailMessage();
      InternetAddress[] internetAddressArray0 = mailMessage0.getCC();
      assertNull(internetAddressArray0);
  }

  @Test
  public void test26()  throws Throwable  {
      MailMessage mailMessage0 = new MailMessage();
      InternetAddress[] internetAddressArray0 = new InternetAddress[9];
      mailMessage0.setReplyTo(internetAddressArray0);
      assertNull(mailMessage0.getBody());
  }

  @Test
  public void test27()  throws Throwable  {
      InternetAddress internetAddress0 = new InternetAddress();
      MailMessage mailMessage0 = new MailMessage(internetAddress0, internetAddress0, "", "", true);
      assertNotNull(mailMessage0);
      
      mailMessage0.setInReplyTo("v}vHC[-9LKc/eXk*c");
      assertEquals(true, mailMessage0.getHTMLFormat());
      assertEquals(true, mailMessage0.isHTMLFormat());
  }

  @Test
  public void test28()  throws Throwable  {
      MailMessage mailMessage0 = new MailMessage();
      mailMessage0.setBody("f-+[\"W%Uy}]j");
      assertEquals("f-+[\"W%Uy}]j", mailMessage0.getBody());
  }

  @Test
  public void test29()  throws Throwable  {
      MailMessage mailMessage0 = new MailMessage();
      InternetAddress internetAddress0 = new InternetAddress((String) null, (String) null, (String) null);
      mailMessage0.setFrom(internetAddress0);
      assertNull(internetAddress0.toUnicodeString());
  }

  @Test
  public void test30()  throws Throwable  {
      MailMessage mailMessage0 = new MailMessage();
      InternetAddress[] internetAddressArray0 = new InternetAddress[1];
      mailMessage0.setBulkAddresses(internetAddressArray0);
      assertEquals(false, mailMessage0.isHTMLFormat());
  }

  @Test
  public void test31()  throws Throwable  {
      InternetAddress internetAddress0 = new InternetAddress();
      MailMessage mailMessage0 = new MailMessage(internetAddress0, internetAddress0, "", "", true);
      assertNotNull(mailMessage0);
      
      File file0 = new File("H4[_m~ a#dW[*", "");
      mailMessage0.addFileAttachment(file0, "");
      assertEquals(true, mailMessage0.isHTMLFormat());
      assertEquals(true, mailMessage0.getHTMLFormat());
  }
}
