/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.mobile.device;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.mobile.device.DefaultDeviceCapabilityFilter;
import com.liferay.portal.kernel.mobile.device.DeviceCapabilityFilter;
import com.liferay.portal.mobile.device.DeviceRecognitionProviderProxyBean;
import javax.servlet.http.HttpServletRequest;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DeviceRecognitionProviderProxyBeanEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DeviceRecognitionProviderProxyBean deviceRecognitionProviderProxyBean0 = new DeviceRecognitionProviderProxyBean();
      // Undeclared exception!
      try {
        deviceRecognitionProviderProxyBean0.detectDevice((HttpServletRequest) null);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      DeviceRecognitionProviderProxyBean deviceRecognitionProviderProxyBean0 = new DeviceRecognitionProviderProxyBean();
      // Undeclared exception!
      try {
        deviceRecognitionProviderProxyBean0.reload();
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      DeviceRecognitionProviderProxyBean deviceRecognitionProviderProxyBean0 = new DeviceRecognitionProviderProxyBean();
      DefaultDeviceCapabilityFilter defaultDeviceCapabilityFilter0 = new DefaultDeviceCapabilityFilter();
      // Undeclared exception!
      try {
        deviceRecognitionProviderProxyBean0.setDeviceCapabilityFilter((DeviceCapabilityFilter) defaultDeviceCapabilityFilter0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      DeviceRecognitionProviderProxyBean deviceRecognitionProviderProxyBean0 = new DeviceRecognitionProviderProxyBean();
      // Undeclared exception!
      try {
        deviceRecognitionProviderProxyBean0.getKnownDevices();
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }
}
