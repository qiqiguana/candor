/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.workflow;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.workflow.DefaultWorkflowLog;
import java.util.Date;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DefaultWorkflowLogEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      String string0 = defaultWorkflowLog0.getPreviousState();
      assertNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      long long0 = defaultWorkflowLog0.getPreviousUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      long long0 = defaultWorkflowLog0.getRoleId();
      assertEquals(0L, long0);
  }

  @Test
  public void test3()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      long long0 = defaultWorkflowLog0.getWorkflowTaskId();
      assertEquals(0L, long0);
  }

  @Test
  public void test4()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      long long0 = defaultWorkflowLog0.getWorkflowLogId();
      assertEquals(0L, long0);
  }

  @Test
  public void test5()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      defaultWorkflowLog0.setUserId(1016L);
      assertEquals(1016L, defaultWorkflowLog0.getUserId());
  }

  @Test
  public void test6()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      String string0 = defaultWorkflowLog0.getState();
      assertNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      String string0 = defaultWorkflowLog0.getComment();
      assertNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      defaultWorkflowLog0.setPreviousState((String) null);
      assertNull(defaultWorkflowLog0.getState());
  }

  @Test
  public void test9()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      defaultWorkflowLog0.setType((-153));
      assertEquals(-153, defaultWorkflowLog0.getType());
  }

  @Test
  public void test10()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      defaultWorkflowLog0.setAuditUserId(0L);
      assertEquals(0L, defaultWorkflowLog0.getWorkflowTaskId());
  }

  @Test
  public void test11()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      defaultWorkflowLog0.setPreviousUserId(1221L);
      assertEquals(1221L, defaultWorkflowLog0.getPreviousUserId());
  }

  @Test
  public void test12()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      long long0 = defaultWorkflowLog0.getAuditUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test13()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      long long0 = defaultWorkflowLog0.getPreviousRoleId();
      assertEquals(0L, long0);
  }

  @Test
  public void test14()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      defaultWorkflowLog0.setRoleId((-341L));
      assertEquals((-341L), defaultWorkflowLog0.getRoleId());
  }

  @Test
  public void test15()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      defaultWorkflowLog0.setComment("Ti!uX=N`j;H[,");
      assertEquals(0L, defaultWorkflowLog0.getAuditUserId());
  }

  @Test
  public void test16()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      int int0 = defaultWorkflowLog0.getType();
      assertEquals(0, int0);
  }

  @Test
  public void test17()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      long long0 = defaultWorkflowLog0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test18()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      defaultWorkflowLog0.setWorkflowLogId((-258L));
      assertEquals((-258L), defaultWorkflowLog0.getWorkflowLogId());
  }

  @Test
  public void test19()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      defaultWorkflowLog0.setState("+0");
      assertEquals("+0", defaultWorkflowLog0.getState());
  }

  @Test
  public void test20()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      defaultWorkflowLog0.setCreateDate((Date) null);
      assertEquals(0L, defaultWorkflowLog0.getRoleId());
  }

  @Test
  public void test21()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      Date date0 = defaultWorkflowLog0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test22()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      defaultWorkflowLog0.setPreviousRoleId((long) 0);
      assertEquals(0L, defaultWorkflowLog0.getPreviousUserId());
  }

  @Test
  public void test23()  throws Throwable  {
      DefaultWorkflowLog defaultWorkflowLog0 = new DefaultWorkflowLog();
      defaultWorkflowLog0.setWorkflowTaskId(1L);
      assertEquals(1L, defaultWorkflowLog0.getWorkflowTaskId());
  }
}
