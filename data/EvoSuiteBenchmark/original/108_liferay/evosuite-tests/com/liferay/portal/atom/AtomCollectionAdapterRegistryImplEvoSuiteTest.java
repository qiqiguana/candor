/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.atom;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.atom.AtomCollectionAdapterRegistryImpl;
import com.liferay.portal.kernel.atom.AtomCollectionAdapter;
import com.liferay.portal.kernel.atom.AtomException;
import com.liferay.portlet.documentlibrary.atom.FileEntryAtomCollectionAdapter;
import com.liferay.portlet.usersadmin.atom.UserAtomCollectionAdapter;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AtomCollectionAdapterRegistryImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AtomCollectionAdapterRegistryImpl atomCollectionAdapterRegistryImpl0 = new AtomCollectionAdapterRegistryImpl();
      AtomCollectionAdapter<?> atomCollectionAdapter0 = atomCollectionAdapterRegistryImpl0.getAtomCollectionAdapter("(n]mvd-ns5s");
      assertNull(atomCollectionAdapter0);
  }

  @Test
  public void test1()  throws Throwable  {
      AtomCollectionAdapterRegistryImpl atomCollectionAdapterRegistryImpl0 = new AtomCollectionAdapterRegistryImpl();
      List<AtomCollectionAdapter<?>> list0 = atomCollectionAdapterRegistryImpl0.getAtomCollectionAdapters();
      assertEquals(0, list0.size());
  }

  @Test
  public void test2()  throws Throwable  {
      AtomCollectionAdapterRegistryImpl atomCollectionAdapterRegistryImpl0 = new AtomCollectionAdapterRegistryImpl();
      UserAtomCollectionAdapter userAtomCollectionAdapter0 = new UserAtomCollectionAdapter();
      atomCollectionAdapterRegistryImpl0.unregister((AtomCollectionAdapter<?>) userAtomCollectionAdapter0);
      assertEquals("users", userAtomCollectionAdapter0.getCollectionName());
  }

  @Test
  public void test3()  throws Throwable  {
      AtomCollectionAdapterRegistryImpl atomCollectionAdapterRegistryImpl0 = new AtomCollectionAdapterRegistryImpl();
      FileEntryAtomCollectionAdapter fileEntryAtomCollectionAdapter0 = new FileEntryAtomCollectionAdapter();
      atomCollectionAdapterRegistryImpl0.register((AtomCollectionAdapter<?>) fileEntryAtomCollectionAdapter0);
      try {
        atomCollectionAdapterRegistryImpl0.register((AtomCollectionAdapter<?>) fileEntryAtomCollectionAdapter0);
        fail("Expecting exception: AtomException");
      } catch(AtomException e) {
        /*
         * Duplicate collection name files
         */
      }
  }
}
