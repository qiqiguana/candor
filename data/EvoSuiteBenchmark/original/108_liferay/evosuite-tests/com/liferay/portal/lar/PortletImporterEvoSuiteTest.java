/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.lar;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.bean.BeanLocatorException;
import com.liferay.portal.kernel.lar.PortletDataContext;
import com.liferay.portal.lar.CurrentUserIdStrategy;
import com.liferay.portal.lar.PortletImporter;
import com.liferay.portal.model.User;
import com.liferay.portlet.PortletPreferencesImpl;
import com.liferay.portlet.ResourceResponseImpl;
import java.io.File;
import java.util.Map;
import javax.portlet.PortletPreferences;
import javax.portlet.ReadOnlyException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PortletImporterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PortletImporter portletImporter0 = new PortletImporter();
      // Undeclared exception!
      try {
        portletImporter0.resetPortletScope((PortletDataContext) null, 369L);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      PortletImporter portletImporter0 = new PortletImporter();
      // Undeclared exception!
      try {
        portletImporter0.getAssetCategoryPath((PortletDataContext) null, (-1354L));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      PortletImporter portletImporter0 = new PortletImporter();
      ResourceResponseImpl resourceResponseImpl0 = new ResourceResponseImpl();
      Map<String, String[]> map0 = resourceResponseImpl0.getProperties();
      // Undeclared exception!
      try {
        portletImporter0.importPortletInfo(128L, 128L, 128L, (String) null, map0, (File) null);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.servlet.filters.cache.CacheUtil
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      PortletImporter portletImporter0 = new PortletImporter();
      CurrentUserIdStrategy currentUserIdStrategy0 = (CurrentUserIdStrategy)portletImporter0.getUserIdStrategy((User) null, "8_%&nW'.-W4gB");
      assertNotNull(currentUserIdStrategy0);
  }

  @Test
  public void test4()  throws Throwable  {
      PortletImporter portletImporter0 = new PortletImporter();
      PortletPreferencesImpl portletPreferencesImpl0 = new PortletPreferencesImpl();
      String[] stringArray0 = new String[2];
      portletPreferencesImpl0.setValues("BjW-O`y", stringArray0);
      portletImporter0.updateAssetPublisherClassNameIds((PortletPreferences) portletPreferencesImpl0, "BjW-O`y");
      assertEquals(0L, portletPreferencesImpl0.getPlid());
  }

  @Test
  public void test5()  throws Throwable  {
      PortletImporter portletImporter0 = new PortletImporter();
      PortletPreferencesImpl portletPreferencesImpl0 = new PortletPreferencesImpl();
      portletImporter0.updateAssetPublisherClassNameIds((PortletPreferences) portletPreferencesImpl0, "1.2.840.113549.2.9");
      assertEquals(0, portletPreferencesImpl0.getOwnerType());
  }

  @Test
  public void test6()  throws Throwable  {
      PortletImporter portletImporter0 = new PortletImporter();
      PortletPreferencesImpl portletPreferencesImpl0 = new PortletPreferencesImpl();
      Class<?> class0 = PortletImporter.class;
      String[] stringArray0 = new String[9];
      portletPreferencesImpl0.setValues("1.2.840.113549.2.9", stringArray0);
      try {
        portletImporter0.updateAssetPublisherClassPKs((PortletDataContext) null, (PortletPreferences) portletPreferencesImpl0, "1.2.840.113549.2.9", class0, (-397L));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      PortletImporter portletImporter0 = new PortletImporter();
      PortletPreferencesImpl portletPreferencesImpl0 = new PortletPreferencesImpl();
      Class<?> class0 = PortletImporter.class;
      portletImporter0.updateAssetPublisherClassPKs((PortletDataContext) null, (PortletPreferences) portletPreferencesImpl0, "1.2.840.113549.2.9", class0, (-397L));
      assertEquals(0, portletPreferencesImpl0.size());
  }

  @Test
  public void test8()  throws Throwable  {
      PortletImporter portletImporter0 = new PortletImporter();
      PortletPreferencesImpl portletPreferencesImpl0 = new PortletPreferencesImpl();
      String[] stringArray0 = new String[2];
      portletPreferencesImpl0.setValues("BjW-O`y", stringArray0);
      portletImporter0.updateAssetPublisherGlobalScopeId((PortletPreferences) portletPreferencesImpl0, "BjW-O`y", 1L);
      assertEquals(1, portletPreferencesImpl0.size());
  }

  @Test
  public void test9()  throws Throwable  {
      PortletImporter portletImporter0 = new PortletImporter();
      PortletPreferencesImpl portletPreferencesImpl0 = new PortletPreferencesImpl();
      portletImporter0.updateAssetPublisherGlobalScopeId((PortletPreferences) portletPreferencesImpl0, "/y$Xr)i(*-<TAA", (-79L));
      assertEquals(0L, portletPreferencesImpl0.getOwnerId());
  }

  @Test
  public void test10()  throws Throwable  {
      PortletImporter portletImporter0 = new PortletImporter();
      try {
        portletImporter0.updatePortletPreferences((PortletDataContext) null, 347L, 953, 347L, "Q", "Q", false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      PortletImporter portletImporter0 = new PortletImporter();
      try {
        portletImporter0.updatePortletPreferences((PortletDataContext) null, 1519L, 1, 1519L, "can't determine class name for collection field ", "can't determine class name for collection field ", true);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }
}
