/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.jmx.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.jmx.model.MBean;
import java.util.List;
import javax.management.MBeanInfo;
import javax.management.MBeanServerDelegate;
import javax.management.MalformedObjectNameException;
import javax.management.ObjectName;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MBeanEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ObjectName objectName0 = ObjectName.WILDCARD;
      MBean mBean0 = new MBean(objectName0);
      mBean0.isLoaded();
      assertEquals("", mBean0.getMBeanName());
      assertEquals("*", mBean0.getDomainName());
  }

  @Test
  public void test1()  throws Throwable  {
      ObjectName objectName0 = ObjectName.WILDCARD;
      MBean mBean0 = new MBean(objectName0);
      mBean0.getMBeanInfo();
      assertEquals("*", mBean0.getDomainName());
      assertEquals("", mBean0.getMBeanName());
  }

  @Test
  public void test2()  throws Throwable  {
      MBean mBean0 = new MBean("U,fW]Nt7JYU", "U,fW]Nt7JYU");
      String string0 = mBean0.getDomainName();
      assertEquals("U,fW]Nt7JYU", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      ObjectName objectName0 = ObjectName.WILDCARD;
      MBean mBean0 = new MBean(objectName0, (MBeanInfo) null);
      assertEquals(true, mBean0.isLoaded());
  }

  @Test
  public void test4()  throws Throwable  {
      ObjectName objectName0 = MBeanServerDelegate.DELEGATE_NAME;
      MBean mBean0 = new MBean(objectName0);
      // Undeclared exception!
      try {
        mBean0.hashCode();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      MBean mBean0 = new MBean("", "");
      String string0 = mBean0.getMBeanName();
      assertEquals("", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      MBean mBean0 = new MBean("", "");
      boolean boolean0 = mBean0.equals((Object) "");
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      MBean mBean0 = new MBean("", "");
      MBean mBean1 = new MBean("", "");
      boolean boolean0 = mBean0.equals((Object) mBean1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      MBean mBean0 = new MBean("U,fW]Nt7JYU", "U,fW]Nt7JYU");
      MBean mBean1 = new MBean("C]> P@y9l6C-{G|H", "C]> P@y9l6C-{G|H");
      boolean boolean0 = mBean0.equals((Object) mBean1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      MBean mBean0 = new MBean("TX", "TX");
      MBean mBean1 = new MBean("TX", (String) null);
      boolean boolean0 = mBean0.equals((Object) mBean1);
      assertFalse(mBean1.equals(mBean0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      ObjectName objectName0 = ObjectName.WILDCARD;
      MBean mBean0 = new MBean(objectName0);
      ObjectName objectName1 = mBean0.getObjectName();
      assertEquals("*", mBean0.getDomainName());
      assertNotNull(objectName1);
      assertEquals("", mBean0.getMBeanName());
  }

  @Test
  public void test11()  throws Throwable  {
      MBean mBean0 = new MBean("NNsDz5/AU|@{_?5B:Ti", "NNsDz5/AU|@{_?5B:Ti");
      try {
        mBean0.getObjectName();
        fail("Expecting exception: MalformedObjectNameException");
      } catch(MalformedObjectNameException e) {
        /*
         * Invalid character ':' in key part of property
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      ObjectName objectName0 = ObjectName.WILDCARD;
      MBean mBean0 = new MBean(objectName0);
      List<String> list0 = mBean0.getPath();
      assertNotNull(list0);
      
      List<String> list1 = mBean0.getPath();
      assertEquals("*", mBean0.getDomainName());
      assertSame(list1, list0);
      assertEquals("", mBean0.getMBeanName());
  }

  @Test
  public void test13()  throws Throwable  {
      MBean mBean0 = new MBean("TX", "TX");
      List<String> list0 = mBean0.getPath();
      assertEquals(true, list0.isEmpty());
  }

  @Test
  public void test14()  throws Throwable  {
      ObjectName objectName0 = MBeanServerDelegate.DELEGATE_NAME;
      MBean mBean0 = new MBean(objectName0);
      List<String> list0 = mBean0.getPath();
      assertNotNull(list0);
      assertEquals("JMImplementation", mBean0.getDomainName());
      assertEquals(1, list0.size());
  }
}
