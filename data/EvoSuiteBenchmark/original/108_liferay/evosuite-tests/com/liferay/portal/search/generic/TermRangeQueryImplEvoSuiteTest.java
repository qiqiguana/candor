/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.search.generic;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.search.generic.TermRangeQueryImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TermRangeQueryImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TermRangeQueryImpl termRangeQueryImpl0 = new TermRangeQueryImpl("", "", "", true, true);
      String string0 = termRangeQueryImpl0.getLowerTerm();
      assertEquals(true, termRangeQueryImpl0.includesLower());
      assertEquals(true, termRangeQueryImpl0.includesUpper());
      assertNotNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      TermRangeQueryImpl termRangeQueryImpl0 = new TermRangeQueryImpl("", "", "", true, true);
      String string0 = termRangeQueryImpl0.getUpperTerm();
      assertEquals(true, termRangeQueryImpl0.includesLower());
      assertEquals(true, termRangeQueryImpl0.includesUpper());
      assertNotNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      TermRangeQueryImpl termRangeQueryImpl0 = new TermRangeQueryImpl("", "", "", true, true);
      TermRangeQueryImpl termRangeQueryImpl1 = (TermRangeQueryImpl)termRangeQueryImpl0.getWrappedQuery();
      assertEquals(true, termRangeQueryImpl0.includesUpper());
      assertEquals(true, termRangeQueryImpl0.includesLower());
      assertEquals(":[ TO ]", termRangeQueryImpl1.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      TermRangeQueryImpl termRangeQueryImpl0 = new TermRangeQueryImpl("", "", "", true, true);
      boolean boolean0 = termRangeQueryImpl0.includesLower();
      assertEquals(true, boolean0);
      assertEquals(true, termRangeQueryImpl0.includesUpper());
  }

  @Test
  public void test4()  throws Throwable  {
      TermRangeQueryImpl termRangeQueryImpl0 = new TermRangeQueryImpl("", "", "", true, true);
      String string0 = termRangeQueryImpl0.getField();
      assertEquals(true, termRangeQueryImpl0.includesUpper());
      assertNotNull(string0);
      assertEquals(true, termRangeQueryImpl0.includesLower());
      assertEquals(":[ TO ]", termRangeQueryImpl0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      TermRangeQueryImpl termRangeQueryImpl0 = new TermRangeQueryImpl("", "", "", true, true);
      boolean boolean0 = termRangeQueryImpl0.includesUpper();
      assertEquals(true, termRangeQueryImpl0.includesLower());
      assertEquals(true, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      TermRangeQueryImpl termRangeQueryImpl0 = new TermRangeQueryImpl("}--` +/i:", "}--` +/i:", "}--` +/i:", false, false);
      String string0 = termRangeQueryImpl0.toString();
      assertEquals("}--` +/i::{}--` +/i: TO }--` +/i:}", string0);
  }

  @Test
  public void test7()  throws Throwable  {
      TermRangeQueryImpl termRangeQueryImpl0 = new TermRangeQueryImpl("", "", "", true, true);
      String string0 = termRangeQueryImpl0.toString();
      assertEquals(true, termRangeQueryImpl0.includesLower());
      assertEquals(true, termRangeQueryImpl0.includesUpper());
      assertEquals(":[ TO ]", string0);
  }

  @Test
  public void test8()  throws Throwable  {
      TermRangeQueryImpl termRangeQueryImpl0 = new TermRangeQueryImpl((String) null, (String) null, (String) null, true, true);
      String string0 = termRangeQueryImpl0.toString();
      assertEquals(true, termRangeQueryImpl0.includesLower());
      assertEquals(true, termRangeQueryImpl0.includesUpper());
      assertEquals("null:[* TO *]", string0);
  }
}
