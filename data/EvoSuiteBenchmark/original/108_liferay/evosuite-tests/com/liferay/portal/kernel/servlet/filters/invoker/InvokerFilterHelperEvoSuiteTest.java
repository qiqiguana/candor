/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.servlet.filters.invoker;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.servlet.PortalClassLoaderFilter;
import com.liferay.portal.kernel.servlet.filters.invoker.Dispatcher;
import com.liferay.portal.kernel.servlet.filters.invoker.FilterMapping;
import com.liferay.portal.kernel.servlet.filters.invoker.InvokerFilter;
import com.liferay.portal.kernel.servlet.filters.invoker.InvokerFilterChain;
import com.liferay.portal.kernel.servlet.filters.invoker.InvokerFilterHelper;
import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import jodd.decora.DecoraServletFilter;
import org.junit.BeforeClass;
import org.tuckey.web.MockChain;
import org.tuckey.web.MockFilterConfig;
import org.tuckey.web.MockServletContext;

@RunWith(EvoSuiteRunner.class)
public class InvokerFilterHelperEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      InvokerFilterHelper invokerFilterHelper0 = new InvokerFilterHelper();
      Filter filter0 = invokerFilterHelper0.getFilter("Cq");
      assertNull(filter0);
  }

  @Test
  public void test1()  throws Throwable  {
      InvokerFilterHelper invokerFilterHelper0 = new InvokerFilterHelper();
      FilterConfig filterConfig0 = invokerFilterHelper0.getFilterConfig("");
      assertNull(filterConfig0);
  }

  @Test
  public void test2()  throws Throwable  {
      InvokerFilterHelper invokerFilterHelper0 = new InvokerFilterHelper();
      InvokerFilter invokerFilter0 = new InvokerFilter();
      invokerFilterHelper0.addInvokerFilter(invokerFilter0);
      invokerFilterHelper0.destroy();
  }

  @Test
  public void test3()  throws Throwable  {
      InvokerFilterHelper invokerFilterHelper0 = new InvokerFilterHelper();
      DecoraServletFilter decoraServletFilter0 = null;
      try {
        decoraServletFilter0 = new DecoraServletFilter();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class jodd.decora.DecoraServletFilter
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      InvokerFilterHelper invokerFilterHelper0 = new InvokerFilterHelper();
      PortalClassLoaderFilter portalClassLoaderFilter0 = new PortalClassLoaderFilter();
      InvokerFilter invokerFilter0 = new InvokerFilter();
      invokerFilterHelper0.addInvokerFilter(invokerFilter0);
      PortalClassLoaderFilter portalClassLoaderFilter1 = (PortalClassLoaderFilter)invokerFilterHelper0.registerFilter("", (Filter) portalClassLoaderFilter0);
      assertNull(portalClassLoaderFilter1);
  }

  @Test
  public void test5()  throws Throwable  {
      InvokerFilterHelper invokerFilterHelper0 = new InvokerFilterHelper();
      // Undeclared exception!
      try {
        invokerFilterHelper0.registerFilterMapping((FilterMapping) null, "", true);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 1, Size: 0
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      InvokerFilterHelper invokerFilterHelper0 = new InvokerFilterHelper();
      invokerFilterHelper0.unregisterFilterMapping((FilterMapping) null);
  }

  @Test
  public void test7()  throws Throwable  {
      InvokerFilterHelper invokerFilterHelper0 = new InvokerFilterHelper();
      Dispatcher dispatcher0 = Dispatcher.FORWARD;
      MockChain mockChain0 = new MockChain();
      InvokerFilterChain invokerFilterChain0 = invokerFilterHelper0.createInvokerFilterChain((HttpServletRequest) null, dispatcher0, "", (FilterChain) mockChain0);
      assertNotNull(invokerFilterChain0);
  }

  @Test
  public void test8()  throws Throwable  {
      InvokerFilterHelper invokerFilterHelper0 = new InvokerFilterHelper();
      MockServletContext mockServletContext0 = new MockServletContext();
      MockFilterConfig mockFilterConfig0 = new MockFilterConfig();
      Filter filter0 = invokerFilterHelper0.getFilter((ServletContext) mockServletContext0, "Cq", (FilterConfig) mockFilterConfig0);
      assertNull(filter0);
  }
}
