/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.atom;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.atom.AtomPager;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AtomPagerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AtomPager atomPager0 = new AtomPager(0, 1211, 0);
      assertNotNull(atomPager0);
      
      int int0 = atomPager0.getTotalElements();
      assertEquals(1, atomPager0.getLastPage());
      assertEquals(0, atomPager0.getStart());
      assertEquals(0, int0);
      assertEquals(1211, atomPager0.getElementsPerPage());
  }

  @Test
  public void test1()  throws Throwable  {
      AtomPager atomPager0 = new AtomPager(882, 882, 882);
      int int0 = atomPager0.getFirstPage();
      assertEquals(1, int0);
      assertEquals(882, atomPager0.getTotalElements());
      assertEquals(882, atomPager0.getElementsPerPage());
      assertEquals(0, atomPager0.getStart());
  }

  @Test
  public void test2()  throws Throwable  {
      AtomPager atomPager0 = new AtomPager(0, 1211, 0);
      assertNotNull(atomPager0);
      
      int int0 = atomPager0.getElementsPerPage();
      assertEquals(1211, int0);
      assertEquals(0, atomPager0.getStart());
      assertEquals(0, atomPager0.getTotalElements());
      assertEquals(1, atomPager0.getLastPage());
  }

  @Test
  public void test3()  throws Throwable  {
      AtomPager atomPager0 = new AtomPager(122, 122, 122);
      int int0 = atomPager0.getStart();
      assertEquals(122, atomPager0.getTotalElements());
      assertEquals(0, int0);
      assertEquals(1, atomPager0.getFirstPage());
      assertEquals(122, atomPager0.getElementsPerPage());
  }

  @Test
  public void test4()  throws Throwable  {
      AtomPager atomPager0 = new AtomPager(0, 1211, 0);
      assertNotNull(atomPager0);
      
      int int0 = atomPager0.getLastPage();
      assertEquals(0, atomPager0.getStart());
      assertEquals(0, atomPager0.getTotalElements());
      assertEquals(1211, atomPager0.getElementsPerPage());
      assertEquals(1, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      AtomPager atomPager0 = new AtomPager(882, 882, 882);
      int int0 = atomPager0.getPage();
      assertEquals(882, atomPager0.getElementsPerPage());
      assertEquals(1, atomPager0.getFirstPage());
      assertEquals(882, atomPager0.getTotalElements());
      assertEquals(0, atomPager0.getStart());
      assertEquals(1, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      AtomPager atomPager0 = new AtomPager(0, 1211, 0);
      assertNotNull(atomPager0);
      
      int int0 = atomPager0.getNextPage();
      assertEquals(1, atomPager0.getLastPage());
      assertEquals(0, atomPager0.getStart());
      assertEquals(1211, atomPager0.getElementsPerPage());
      assertEquals(0, int0);
      assertEquals(0, atomPager0.getTotalElements());
  }

  @Test
  public void test7()  throws Throwable  {
      AtomPager atomPager0 = new AtomPager(882, 882, 882);
      int int0 = atomPager0.getEnd();
      assertEquals(882, atomPager0.getElementsPerPage());
      assertEquals(881, int0);
      assertEquals(1, atomPager0.getFirstPage());
      assertEquals(882, atomPager0.getTotalElements());
      assertEquals(0, atomPager0.getStart());
  }

  @Test
  public void test8()  throws Throwable  {
      AtomPager atomPager0 = new AtomPager(0, 1211, 0);
      assertNotNull(atomPager0);
      
      int int0 = atomPager0.getPreviousPage();
      assertEquals(1211, atomPager0.getElementsPerPage());
      assertEquals(0, atomPager0.getStart());
      assertEquals(0, int0);
      assertEquals(1, atomPager0.getLastPage());
      assertEquals(0, atomPager0.getTotalElements());
  }

  @Test
  public void test9()  throws Throwable  {
      AtomPager atomPager0 = new AtomPager(1545, 1545, 1039);
      assertEquals(0, atomPager0.getStart());
      assertEquals(1545, atomPager0.getElementsPerPage());
      assertEquals(1, atomPager0.getFirstPage());
      assertEquals(1039, atomPager0.getTotalElements());
      assertNotNull(atomPager0);
  }

  @Test
  public void test10()  throws Throwable  {
      AtomPager atomPager0 = new AtomPager(1, (-1239), 0);
      assertNotNull(atomPager0);
      assertEquals(0, atomPager0.getNextPage());
      assertEquals(0, atomPager0.getTotalElements());
      assertEquals(-1240, atomPager0.getEnd());
      assertEquals(1, atomPager0.getFirstPage());
  }

  @Test
  public void test11()  throws Throwable  {
      AtomPager atomPager0 = new AtomPager((-2014), (-1), (-2014));
      assertNotNull(atomPager0);
      assertEquals(0, atomPager0.getStart());
      assertEquals(-2014, atomPager0.getTotalElements());
      assertEquals(-1, atomPager0.getElementsPerPage());
      assertEquals(2014, atomPager0.getLastPage());
  }
}
