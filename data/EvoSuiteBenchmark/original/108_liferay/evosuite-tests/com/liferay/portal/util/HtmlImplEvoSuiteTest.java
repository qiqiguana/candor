/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.util.HtmlImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class HtmlImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.toInputSafe("");
      assertEquals("", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.stripHtml("&#x2014;");
      assertEquals("&#x2014;", string0);
      assertNotNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.escapeCSS("");
      assertEquals("", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.stripBetween("-->", "-->");
      assertEquals("-->", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      // Undeclared exception!
      try {
        htmlImpl0.escapeURL("CantBindXML");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.fromInputSafe((String) null);
      assertNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.replaceMsWordCharacters("scanner/notify-builtin-refs");
      assertEquals("scanner/notify-builtin-refs", string0);
  }

  @Test
  public void test7()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.escape((String) null);
      assertNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.escape("");
      assertEquals("", string0);
  }

  @Test
  public void test9()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.escape("\"", 1641);
      assertEquals("&#034;", string0);
      assertNotNull(string0);
  }

  @Test
  public void test10()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.escape("<`@!'JWA(p(m#8&1");
      assertEquals("&lt;`@!&#039;JWA(p(m#8&amp;1", string0);
      assertNotNull(string0);
  }

  @Test
  public void test11()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.escape("-->", (-1996));
      assertNotNull(string0);
      assertEquals("--&gt;", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.escape("CantBindXML");
      assertNotNull(string0);
      assertEquals("CantBindXML", string0);
  }

  @Test
  public void test13()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.escape((String) null, 9);
      assertNull(string0);
  }

  @Test
  public void test14()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.escapeCSS(">-b3l37?%U$F");
      assertEquals("\\3e-b3l37\\3f\\25U\\24F", string0);
      assertNotNull(string0);
  }

  @Test
  public void test15()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.escapeJS("YH+");
      assertNotNull(string0);
      assertEquals("YH\\x2b", string0);
  }

  @Test
  public void test16()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.escapeAttribute("xdR'4j_j'usn>fBi&1~");
      assertEquals("xdR&#x27;4j_j&#x27;usn&#x3e;fBi&#x26;1&#x7e;", string0);
      assertNotNull(string0);
  }

  @Test
  public void test17()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.escapeAttribute("\n");
      assertEquals("&#x0a;", string0);
      assertNotNull(string0);
  }

  @Test
  public void test18()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.escapeAttribute("cZrR");
      assertNotNull(string0);
      assertEquals("cZrR", string0);
  }

  @Test
  public void test19()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.escapeHREF("");
      assertEquals("", string0);
  }

  @Test
  public void test20()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.escapeHREF((String) null);
      assertNull(string0);
  }

  @Test
  public void test21()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.escapeHREF("<");
      assertNotNull(string0);
      assertEquals("<", string0);
  }

  @Test
  public void test22()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.escapeXPath("");
      assertEquals("", string0);
  }

  @Test
  public void test23()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.escapeXPath("s040DRe2@CD=Hj2'");
      assertNotNull(string0);
      assertEquals("s040DRe2_CD_Hj2'", string0);
  }

  @Test
  public void test24()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.escapeXPathAttribute("");
      assertEquals("\"\"", string0);
      assertNotNull(string0);
  }

  @Test
  public void test25()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.escapeXPathAttribute("\"");
      assertNotNull(string0);
      assertEquals("'\"'", string0);
  }

  @Test
  public void test26()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      // Undeclared exception!
      try {
        htmlImpl0.extractText("");
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class net.htmlparser.jericho.Tag
         */
      }
  }

  @Test
  public void test27()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.extractText((String) null);
      assertNull(string0);
  }

  @Test
  public void test28()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.stripHtml((String) null);
      assertNull(string0);
  }

  @Test
  public void test29()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.stripHtml("E!{1<JzPEc");
      assertEquals("E!{1 ", string0);
      assertNotNull(string0);
  }

  @Test
  public void test30()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.unescape("");
      assertEquals("", string0);
  }

  @Test
  public void test31()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.unescape((String) null);
      assertNull(string0);
  }

  @Test
  public void test32()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.unescape(";");
      assertNotNull(string0);
      assertEquals(";", string0);
  }

  @Test
  public void test33()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.unescapeCDATA("f");
      assertEquals("f", string0);
      assertNotNull(string0);
  }

  @Test
  public void test34()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.unescapeCDATA((String) null);
      assertNull(string0);
  }

  @Test
  public void test35()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.unescapeCDATA("");
      assertEquals("", string0);
  }

  @Test
  public void test36()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.wordBreak("&#x2014;", 2544);
      assertEquals("&#x2014;", string0);
      assertNotNull(string0);
  }

  @Test
  public void test37()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      // Undeclared exception!
      try {
        htmlImpl0.wordBreak("", (-1777));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: -1777
         */
      }
  }

  @Test
  public void test38()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.wordBreak("<`@!'JWA(p(m#8&1", 1786);
      assertNotNull(string0);
      assertEquals("<`@!'JWA(p(m#8&1", string0);
  }

  @Test
  public void test39()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      String string0 = htmlImpl0.wordBreak("[WXU1S0 n,\"f", 1428);
      assertEquals("[WXU1S0 n,\"f", string0);
      assertNotNull(string0);
  }

  @Test
  public void test40()  throws Throwable  {
      HtmlImpl htmlImpl0 = new HtmlImpl();
      boolean boolean0 = htmlImpl0.isScriptTag("scanner/notify-builtin-refs", 0);
      assertEquals(false, boolean0);
  }
}
