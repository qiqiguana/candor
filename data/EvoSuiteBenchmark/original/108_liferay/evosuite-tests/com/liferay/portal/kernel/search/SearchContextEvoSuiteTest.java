/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.search;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.search.BooleanClause;
import com.liferay.portal.kernel.search.QueryConfig;
import com.liferay.portal.kernel.search.SearchContext;
import com.liferay.portal.kernel.search.Sort;
import com.liferay.portal.kernel.search.facet.Facet;
import com.liferay.portal.kernel.search.facet.ModifiedFacet;
import com.liferay.portal.kernel.search.facet.ScopeFacet;
import java.io.Serializable;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SearchContextEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.setBooleanClauses((BooleanClause[]) null);
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(-1, searchContext0.getStart());
  }

  @Test
  public void test1()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.getCategoryIds();
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(true, searchContext0.isScopeStrict());
  }

  @Test
  public void test2()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.isAndSearch();
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
  }

  @Test
  public void test3()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      
      searchContext0.setIncludeLiveGroups(false);
      assertEquals(false, searchContext0.isIncludeLiveGroups());
      assertEquals(-1, searchContext0.getStart());
  }

  @Test
  public void test4()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.setStart(947);
      assertEquals(947, searchContext0.getStart());
      assertEquals(true, searchContext0.isScopeStrict());
  }

  @Test
  public void test5()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.getAssetCategoryIds();
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(-1, searchContext0.getStart());
  }

  @Test
  public void test6()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      Map<String, Facet> map0 = searchContext0.getFacets();
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(-1, searchContext0.getEnd());
      assertNotNull(map0);
      assertEquals(true, searchContext0.isIncludeLiveGroups());
  }

  @Test
  public void test7()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      int int0 = searchContext0.getStart();
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals((-1), int0);
      assertEquals(-1, searchContext0.getEnd());
  }

  @Test
  public void test8()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.getFacet("");
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(-1, searchContext0.getStart());
  }

  @Test
  public void test9()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.getCompanyId();
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
  }

  @Test
  public void test10()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      boolean boolean0 = searchContext0.isScopeStrict();
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(true, boolean0);
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(-1, searchContext0.getStart());
  }

  @Test
  public void test11()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.getFolderIds();
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(-1, searchContext0.getEnd());
  }

  @Test
  public void test12()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.getPortletIds();
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(true, searchContext0.isScopeStrict());
  }

  @Test
  public void test13()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.setQueryConfig((QueryConfig) null);
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(-1, searchContext0.getStart());
  }

  @Test
  public void test14()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.getGroupIds();
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
  }

  @Test
  public void test15()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.getTimeZone();
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(true, searchContext0.isScopeStrict());
  }

  @Test
  public void test16()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.getNodeIds();
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
  }

  @Test
  public void test17()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.setScopeStrict(true);
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
  }

  @Test
  public void test18()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      Sort[] sortArray0 = new Sort[10];
      searchContext0.setSorts(sortArray0);
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(-1, searchContext0.getEnd());
  }

  @Test
  public void test19()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.setKeywords("f");
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
  }

  @Test
  public void test20()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      Locale locale0 = searchContext0.getLocale();
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertNotNull(locale0);
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
  }

  @Test
  public void test21()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.getOwnerUserId();
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
  }

  @Test
  public void test22()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      long[] longArray0 = new long[10];
      searchContext0.setNodeIds(longArray0);
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isScopeStrict());
  }

  @Test
  public void test23()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      int int0 = searchContext0.getEnd();
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals((-1), int0);
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
  }

  @Test
  public void test24()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      String[] stringArray0 = searchContext0.getEntryClassNames();
      assertNotNull(stringArray0);
      
      searchContext0.setPortletIds(stringArray0);
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(-1, searchContext0.getStart());
  }

  @Test
  public void test25()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      searchContext0.setFolderIds((List<Long>) linkedList0);
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
  }

  @Test
  public void test26()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.setCompanyId(10L);
      assertEquals(10L, searchContext0.getCompanyId());
      assertEquals(-1, searchContext0.getStart());
  }

  @Test
  public void test27()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      
      searchContext0.setIncludeStagingGroups(false);
      assertEquals(false, searchContext0.isIncludeStagingGroups());
      assertEquals(-1, searchContext0.getEnd());
  }

  @Test
  public void test28()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.setOwnerUserId((-588L));
      assertEquals((-588L), searchContext0.getOwnerUserId());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
  }

  @Test
  public void test29()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.getAssetTagNames();
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
  }

  @Test
  public void test30()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.getKeywords();
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(true, searchContext0.isScopeStrict());
  }

  @Test
  public void test31()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.getSorts();
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
  }

  @Test
  public void test32()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      long[] longArray0 = new long[18];
      searchContext0.setGroupIds(longArray0);
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(-1, searchContext0.getStart());
  }

  @Test
  public void test33()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      long[] longArray0 = new long[10];
      searchContext0.setFolderIds(longArray0);
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(-1, searchContext0.getStart());
  }

  @Test
  public void test34()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.setAttributes((Map<String, Serializable>) null);
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isScopeStrict());
  }

  @Test
  public void test35()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      boolean boolean0 = searchContext0.isIncludeStagingGroups();
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(true, boolean0);
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(-1, searchContext0.getEnd());
  }

  @Test
  public void test36()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.setUserId((long) 947);
      assertEquals(947L, searchContext0.getUserId());
      assertEquals(true, searchContext0.isScopeStrict());
  }

  @Test
  public void test37()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.setCategoryIds((long[]) null);
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
  }

  @Test
  public void test38()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.setAssetCategoryIds((long[]) null);
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(-1, searchContext0.getStart());
  }

  @Test
  public void test39()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.getUserId();
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(-1, searchContext0.getEnd());
  }

  @Test
  public void test40()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.setAndSearch(true);
      assertEquals(true, searchContext0.isAndSearch());
      assertEquals(-1, searchContext0.getEnd());
  }

  @Test
  public void test41()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      String[] stringArray0 = new String[10];
      searchContext0.setEntryClassNames(stringArray0);
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(-1, searchContext0.getEnd());
  }

  @Test
  public void test42()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      String[] stringArray0 = new String[10];
      searchContext0.setAssetTagNames(stringArray0);
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(-1, searchContext0.getStart());
  }

  @Test
  public void test43()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.getBooleanClauses();
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(-1, searchContext0.getEnd());
  }

  @Test
  public void test44()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(947, "");
      searchContext0.setTimeZone((TimeZone) simpleTimeZone0);
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
  }

  @Test
  public void test45()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      boolean boolean0 = searchContext0.isIncludeLiveGroups();
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, boolean0);
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
  }

  @Test
  public void test46()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.setEnd((-78));
      assertEquals(-78, searchContext0.getEnd());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
  }

  @Test
  public void test47()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      ModifiedFacet modifiedFacet0 = new ModifiedFacet(searchContext0);
      searchContext0.addFacet((Facet) modifiedFacet0);
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
  }

  @Test
  public void test48()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.addFacet((Facet) null);
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(-1, searchContext0.getStart());
  }

  @Test
  public void test49()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      Map<String, Serializable> map0 = searchContext0.getAttributes();
      assertNotNull(map0);
      
      searchContext0.getAttribute("");
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(-1, searchContext0.getEnd());
  }

  @Test
  public void test50()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.getAttribute("Read past EOF (resource: ");
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(-1, searchContext0.getStart());
  }

  @Test
  public void test51()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      Map<String, Serializable> map0 = searchContext0.getAttributes();
      Map<String, Serializable> map1 = searchContext0.getAttributes();
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertNotNull(map1);
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertSame(map1, map0);
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(-1, searchContext0.getEnd());
  }

  @Test
  public void test52()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      String[] stringArray0 = searchContext0.getEntryClassNames();
      String[] stringArray1 = searchContext0.getEntryClassNames();
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(-1, searchContext0.getEnd());
      assertSame(stringArray1, stringArray0);
      assertNotNull(stringArray1);
  }

  @Test
  public void test53()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      // Undeclared exception!
      try {
        searchContext0.getQueryConfig();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.kernel.search.QueryConfig
         */
      }
  }

  @Test
  public void test54()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.setSearchEngineId("5");
      String string0 = searchContext0.getSearchEngineId();
      assertEquals(-1, searchContext0.getStart());
      assertNotNull(string0);
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
  }

  @Test
  public void test55()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      // Undeclared exception!
      try {
        searchContext0.getSearchEngineId();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.kernel.search.SearchEngineUtil
         */
      }
  }

  @Test
  public void test56()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      Map<String, Serializable> map0 = searchContext0.getAttributes();
      assertNotNull(map0);
      
      searchContext0.setAttribute("", (Serializable) 0L);
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(-1, searchContext0.getEnd());
  }

  @Test
  public void test57()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.setAttribute("%0", (Serializable) null);
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(-1, searchContext0.getStart());
  }

  @Test
  public void test58()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      ScopeFacet scopeFacet0 = new ScopeFacet(searchContext0);
      LinkedList<Facet> linkedList0 = new LinkedList<Facet>();
      linkedList0.add((Facet) scopeFacet0);
      searchContext0.setFacets((List<Facet>) linkedList0);
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
  }

  @Test
  public void test59()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.setLocale((Locale) null);
      assertEquals(-1, searchContext0.getStart());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(-1, searchContext0.getEnd());
  }

  @Test
  public void test60()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      searchContext0.setLocale(locale0);
      assertEquals(-1, searchContext0.getStart());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
  }

  @Test
  public void test61()  throws Throwable  {
      SearchContext searchContext0 = new SearchContext();
      searchContext0.setSearchEngineId("Read past EOF (resource: ");
      searchContext0.setSearchEngineId((String) null);
      assertEquals(true, searchContext0.isScopeStrict());
      assertEquals(true, searchContext0.isIncludeLiveGroups());
      assertEquals(-1, searchContext0.getEnd());
      assertEquals(true, searchContext0.isIncludeStagingGroups());
      assertEquals(-1, searchContext0.getStart());
  }
}
