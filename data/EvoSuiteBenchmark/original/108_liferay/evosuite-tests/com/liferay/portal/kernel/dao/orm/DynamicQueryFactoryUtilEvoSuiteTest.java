/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.dao.orm;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.dao.orm.hibernate.DynamicQueryFactoryImpl;
import com.liferay.portal.dao.orm.hibernate.DynamicQueryImpl;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactory;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DynamicQueryFactoryUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Class<?> class0 = DynamicQueryFactoryUtil.class;
      DynamicQueryFactoryUtil.forClass(class0, "rbwQ%qP7)8Ep,p/6C,,");
  }

  @Test
  public void test1()  throws Throwable  {
      Class<?> class0 = Class.class;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      DynamicQueryFactoryUtil.forClass(class0, "wp/*K'Vi{[1m6QH+", classLoader0);
  }

  @Test
  public void test2()  throws Throwable  {
      Class<?> class0 = DynamicQueryFactoryUtil.class;
      DynamicQueryFactoryUtil.forClass(class0);
  }

  @Test
  public void test3()  throws Throwable  {
      DynamicQueryFactoryUtil dynamicQueryFactoryUtil0 = new DynamicQueryFactoryUtil();
      DynamicQueryFactoryImpl dynamicQueryFactoryImpl0 = new DynamicQueryFactoryImpl();
      dynamicQueryFactoryUtil0.setDynamicQueryFactory((DynamicQueryFactory) dynamicQueryFactoryImpl0);
  }

  @Test
  public void test4()  throws Throwable  {
      Class<?> class0 = DynamicQueryFactoryUtil.class;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      DynamicQueryImpl dynamicQueryImpl0 = (DynamicQueryImpl)DynamicQueryFactoryUtil.forClass(class0, classLoader0);
      assertNotNull(dynamicQueryImpl0);
  }
}
