/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.io.delta;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.io.delta.RollingChecksum;
import java.io.IOException;
import java.nio.channels.ReadableByteChannel;
import org.jruby.util.io.NullChannel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RollingChecksumEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      NullChannel nullChannel0 = new NullChannel();
      RollingChecksum rollingChecksum0 = new RollingChecksum((ReadableByteChannel) nullChannel0, 129);
      assertNotNull(rollingChecksum0);
      
      int int0 = rollingChecksum0.getPosition();
      assertEquals(0, rollingChecksum0.currentBlockLength());
      assertEquals(0, rollingChecksum0.weakChecksum());
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      NullChannel nullChannel0 = new NullChannel();
      RollingChecksum rollingChecksum0 = new RollingChecksum((ReadableByteChannel) nullChannel0, 129);
      assertNotNull(rollingChecksum0);
      
      int int0 = rollingChecksum0.weakChecksum();
      assertEquals(0, rollingChecksum0.currentBlockLength());
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      NullChannel nullChannel0 = new NullChannel();
      RollingChecksum rollingChecksum0 = new RollingChecksum((ReadableByteChannel) nullChannel0, 1331);
      assertNotNull(rollingChecksum0);
      
      // Undeclared exception!
      try {
        rollingChecksum0.getFirstByte();
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      NullChannel nullChannel0 = new NullChannel();
      RollingChecksum rollingChecksum0 = new RollingChecksum((ReadableByteChannel) nullChannel0, 129);
      assertNotNull(rollingChecksum0);
      
      rollingChecksum0.nextBlock();
      assertEquals(0, rollingChecksum0.weakChecksum());
      assertEquals(0, rollingChecksum0.getPosition());
      assertEquals(0, rollingChecksum0.currentBlockLength());
  }

  @Test
  public void test4()  throws Throwable  {
      NullChannel nullChannel0 = new NullChannel();
      RollingChecksum rollingChecksum0 = new RollingChecksum((ReadableByteChannel) nullChannel0, 129);
      assertNotNull(rollingChecksum0);
      
      byte[] byteArray0 = rollingChecksum0.strongChecksum();
      assertNotNull(byteArray0);
      assertEquals(0, rollingChecksum0.weakChecksum());
      assertEquals(false, rollingChecksum0.hasNext());
  }

  @Test
  public void test5()  throws Throwable  {
      NullChannel nullChannel0 = new NullChannel();
      RollingChecksum rollingChecksum0 = new RollingChecksum((ReadableByteChannel) nullChannel0, 1331);
      assertNotNull(rollingChecksum0);
      
      boolean boolean0 = rollingChecksum0.hasNext();
      assertEquals(0, rollingChecksum0.currentBlockLength());
      assertEquals(false, boolean0);
      assertEquals(0, rollingChecksum0.weakChecksum());
  }
}
