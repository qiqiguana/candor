/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.executor;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.executor.PortalExecutorFactoryImpl;
import com.liferay.portal.executor.PortalExecutorManagerImpl;
import com.liferay.portal.kernel.concurrent.ThreadPoolExecutor;
import com.liferay.portal.kernel.executor.PortalExecutorFactory;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PortalExecutorManagerImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PortalExecutorManagerImpl portalExecutorManagerImpl0 = new PortalExecutorManagerImpl();
      portalExecutorManagerImpl0.shutdown("");
  }

  @Test
  public void test1()  throws Throwable  {
      PortalExecutorManagerImpl portalExecutorManagerImpl0 = new PortalExecutorManagerImpl();
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      // Undeclared exception!
      try {
        portalExecutorManagerImpl0.execute("M,VM1THmXy", (Callable<PortalExecutorManagerImpl>) null, 22L, timeUnit0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      PortalExecutorManagerImpl portalExecutorManagerImpl0 = new PortalExecutorManagerImpl();
      PortalExecutorFactoryImpl portalExecutorFactoryImpl0 = new PortalExecutorFactoryImpl();
      portalExecutorManagerImpl0.setPortalExecutorFactory((PortalExecutorFactory) portalExecutorFactoryImpl0);
      portalExecutorManagerImpl0.afterPropertiesSet();
  }

  @Test
  public void test3()  throws Throwable  {
      PortalExecutorManagerImpl portalExecutorManagerImpl0 = new PortalExecutorManagerImpl();
      // Undeclared exception!
      try {
        portalExecutorManagerImpl0.execute("", (Callable<String>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      PortalExecutorManagerImpl portalExecutorManagerImpl0 = new PortalExecutorManagerImpl();
      // Undeclared exception!
      try {
        portalExecutorManagerImpl0.afterPropertiesSet();
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Portal executor factory is null
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      PortalExecutorManagerImpl portalExecutorManagerImpl0 = new PortalExecutorManagerImpl();
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(1435, 1435);
      portalExecutorManagerImpl0.registerPortalExecutor("", threadPoolExecutor0);
      ThreadPoolExecutor threadPoolExecutor1 = portalExecutorManagerImpl0.getPortalExecutor("");
      assertEquals(0, threadPoolExecutor1.getPendingTaskCount());
  }

  @Test
  public void test6()  throws Throwable  {
      PortalExecutorManagerImpl portalExecutorManagerImpl0 = new PortalExecutorManagerImpl();
      ThreadPoolExecutor threadPoolExecutor0 = portalExecutorManagerImpl0.getPortalExecutor("h", false);
      assertNull(threadPoolExecutor0);
  }

  @Test
  public void test7()  throws Throwable  {
      PortalExecutorManagerImpl portalExecutorManagerImpl0 = new PortalExecutorManagerImpl();
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(1414, 1414);
      portalExecutorManagerImpl0.registerPortalExecutor("", threadPoolExecutor0);
      ThreadPoolExecutor threadPoolExecutor1 = portalExecutorManagerImpl0.registerPortalExecutor("", (ThreadPoolExecutor) null);
      assertSame(threadPoolExecutor1, threadPoolExecutor0);
  }

  @Test
  public void test8()  throws Throwable  {
      PortalExecutorManagerImpl portalExecutorManagerImpl0 = new PortalExecutorManagerImpl();
      portalExecutorManagerImpl0.setPortalExecutors((Map<String, ThreadPoolExecutor>) null);
  }

  @Test
  public void test9()  throws Throwable  {
      PortalExecutorManagerImpl portalExecutorManagerImpl0 = new PortalExecutorManagerImpl();
      HashMap<String, ThreadPoolExecutor> hashMap0 = new HashMap<String, ThreadPoolExecutor>();
      portalExecutorManagerImpl0.setPortalExecutors((Map<String, ThreadPoolExecutor>) hashMap0);
      assertEquals(0, hashMap0.size());
  }

  @Test
  public void test10()  throws Throwable  {
      PortalExecutorManagerImpl portalExecutorManagerImpl0 = new PortalExecutorManagerImpl();
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(1414, 1414);
      portalExecutorManagerImpl0.registerPortalExecutor("WTJ-mEC-+/", threadPoolExecutor0);
      portalExecutorManagerImpl0.shutdown(true);
  }

  @Test
  public void test11()  throws Throwable  {
      PortalExecutorManagerImpl portalExecutorManagerImpl0 = new PortalExecutorManagerImpl();
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(1414, 1414);
      portalExecutorManagerImpl0.registerPortalExecutor("WTJ-mEC-+/", threadPoolExecutor0);
      portalExecutorManagerImpl0.shutdown();
  }

  @Test
  public void test12()  throws Throwable  {
      PortalExecutorManagerImpl portalExecutorManagerImpl0 = new PortalExecutorManagerImpl();
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(1414, 1414);
      portalExecutorManagerImpl0.registerPortalExecutor("", threadPoolExecutor0);
      portalExecutorManagerImpl0.shutdown("", true);
  }

  @Test
  public void test13()  throws Throwable  {
      PortalExecutorManagerImpl portalExecutorManagerImpl0 = new PortalExecutorManagerImpl();
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(1435, 1435);
      portalExecutorManagerImpl0.registerPortalExecutor("", threadPoolExecutor0);
      portalExecutorManagerImpl0.shutdown("", false);
  }
}
