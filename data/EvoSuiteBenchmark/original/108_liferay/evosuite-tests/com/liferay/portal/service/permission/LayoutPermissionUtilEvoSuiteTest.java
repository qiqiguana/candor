/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.service.permission;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.Layout;
import com.liferay.portal.security.permission.PermissionChecker;
import com.liferay.portal.service.permission.LayoutPermission;
import com.liferay.portal.service.permission.LayoutPermissionImpl;
import com.liferay.portal.service.permission.LayoutPermissionUtil;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LayoutPermissionUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try {
        LayoutPermissionUtil.check((PermissionChecker) null, (Layout) null, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try {
        LayoutPermissionUtil.containsWithoutViewableGroup((PermissionChecker) null, (Layout) null, "P", "P");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      LayoutPermissionUtil layoutPermissionUtil0 = new LayoutPermissionUtil();
      LayoutPermissionImpl layoutPermissionImpl0 = (LayoutPermissionImpl)LayoutPermissionUtil.getLayoutPermission();
      layoutPermissionUtil0.setLayoutPermission((LayoutPermission) layoutPermissionImpl0);
  }

  @Test
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try {
        LayoutPermissionUtil.contains((PermissionChecker) null, (Layout) null, false, "aac5");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try {
        LayoutPermissionUtil.contains((PermissionChecker) null, 1813L, false, 1813L, "#::pPg!2WlX", "#::pPg!2WlX");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try {
        LayoutPermissionUtil.check((PermissionChecker) null, 5000L, "wGa-]+F(*");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try {
        LayoutPermissionUtil.contains((PermissionChecker) null, (Layout) null, "No access allowed to system property 'org.apache.commons.logging.log' - ");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try {
        LayoutPermissionUtil.contains((PermissionChecker) null, (Layout) null, "0-<p", false, "0-<p");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      // Undeclared exception!
      try {
        LayoutPermissionUtil.contains((PermissionChecker) null, (Layout) null, "^*Lwb;$'KM7V'0", "^*Lwb;$'KM7V'0");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      // Undeclared exception!
      try {
        LayoutPermissionUtil.containsWithoutViewableGroup((PermissionChecker) null, (Layout) null, "tHSun>2&dph", false, "tHSun>2&dph");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try {
        LayoutPermissionUtil.contains((PermissionChecker) null, 1395L, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try {
        LayoutPermissionUtil.check((PermissionChecker) null, 0L, false, 0L, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try {
        LayoutPermissionUtil.contains((PermissionChecker) null, (-9223372036854775808L), true, 704L, "plugin.repositories.trusted");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
