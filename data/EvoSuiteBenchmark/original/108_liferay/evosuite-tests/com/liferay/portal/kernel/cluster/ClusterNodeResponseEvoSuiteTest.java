/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.cluster;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.cluster.Address;
import com.liferay.portal.kernel.cluster.ClusterMessageType;
import com.liferay.portal.kernel.cluster.ClusterNode;
import com.liferay.portal.kernel.cluster.ClusterNodeResponse;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ClusterNodeResponseEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ClusterNodeResponse clusterNodeResponse0 = new ClusterNodeResponse();
      Address address0 = clusterNodeResponse0.getAddress();
      assertNull(address0);
  }

  @Test
  public void test1()  throws Throwable  {
      ClusterNodeResponse clusterNodeResponse0 = new ClusterNodeResponse();
      clusterNodeResponse0.setResult((Object) "{clusterMessageType=UPDATE, clusterNode=null, multicast=false, uuid=null}");
      assertEquals(false, clusterNodeResponse0.hasException());
  }

  @Test
  public void test2()  throws Throwable  {
      ClusterNodeResponse clusterNodeResponse0 = new ClusterNodeResponse();
      clusterNodeResponse0.setUuid("{clusterMessageType=EXECUTE, multicast=false, result=null, uuid=null}");
      assertEquals(false, clusterNodeResponse0.hasException());
  }

  @Test
  public void test3()  throws Throwable  {
      ClusterNodeResponse clusterNodeResponse0 = new ClusterNodeResponse();
      clusterNodeResponse0.setMulticast(false);
      assertEquals(false, clusterNodeResponse0.isMulticast());
  }

  @Test
  public void test4()  throws Throwable  {
      ClusterNodeResponse clusterNodeResponse0 = new ClusterNodeResponse();
      clusterNodeResponse0.setAddress((Address) null);
      assertNull(clusterNodeResponse0.getUuid());
  }

  @Test
  public void test5()  throws Throwable  {
      ClusterNodeResponse clusterNodeResponse0 = new ClusterNodeResponse();
      ClusterNode clusterNode0 = clusterNodeResponse0.getClusterNode();
      assertNull(clusterNode0);
  }

  @Test
  public void test6()  throws Throwable  {
      ClusterNodeResponse clusterNodeResponse0 = new ClusterNodeResponse();
      String string0 = clusterNodeResponse0.getUuid();
      assertNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      ClusterNodeResponse clusterNodeResponse0 = new ClusterNodeResponse();
      clusterNodeResponse0.getClusterMessageType();
  }

  @Test
  public void test8()  throws Throwable  {
      ClusterNodeResponse clusterNodeResponse0 = new ClusterNodeResponse();
      boolean boolean0 = clusterNodeResponse0.isMulticast();
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      ClusterNodeResponse clusterNodeResponse0 = new ClusterNodeResponse();
      clusterNodeResponse0.setClusterNode((ClusterNode) null);
      assertEquals(false, clusterNodeResponse0.isMulticast());
  }

  @Test
  public void test10()  throws Throwable  {
      ClusterNodeResponse clusterNodeResponse0 = new ClusterNodeResponse();
      ClusterMessageType clusterMessageType0 = ClusterMessageType.EXECUTE;
      clusterNodeResponse0.setClusterMessageType(clusterMessageType0);
      String string0 = clusterNodeResponse0.toString();
      assertEquals("{clusterMessageType=EXECUTE, multicast=false, result=null, uuid=null}", string0);
      assertNotNull(string0);
  }

  @Test
  public void test11()  throws Throwable  {
      ClusterNodeResponse clusterNodeResponse0 = new ClusterNodeResponse();
      clusterNodeResponse0.setException((Exception) null);
      assertEquals(false, clusterNodeResponse0.isMulticast());
  }

  @Test
  public void test12()  throws Throwable  {
      ClusterNodeResponse clusterNodeResponse0 = new ClusterNodeResponse();
      Object object0 = clusterNodeResponse0.getResult();
      assertNull(object0);
  }

  @Test
  public void test13()  throws Throwable  {
      ClusterNodeResponse clusterNodeResponse0 = new ClusterNodeResponse();
      ClusterMessageType clusterMessageType0 = ClusterMessageType.NOTIFY;
      clusterNodeResponse0.setClusterMessageType(clusterMessageType0);
      String string0 = clusterNodeResponse0.toString();
      assertNotNull(string0);
      assertEquals("{clusterMessageType=NOTIFY, clusterNode=null, multicast=false, uuid=null}", string0);
  }

  @Test
  public void test14()  throws Throwable  {
      ClusterNodeResponse clusterNodeResponse0 = new ClusterNodeResponse();
      ClusterMessageType clusterMessageType0 = ClusterMessageType.UPDATE;
      clusterNodeResponse0.setClusterMessageType(clusterMessageType0);
      String string0 = clusterNodeResponse0.toString();
      assertEquals("{clusterMessageType=UPDATE, clusterNode=null, multicast=false, uuid=null}", string0);
      assertNotNull(string0);
  }
}
