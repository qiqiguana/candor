/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.poller.comet;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.poller.comet.CometException;
import com.liferay.portal.kernel.poller.comet.CometSession;
import com.liferay.portal.kernel.poller.comet.CometState;
import com.liferay.portal.poller.comet.PollerCometHandler;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BaseCometHandlerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PollerCometHandler pollerCometHandler0 = new PollerCometHandler();
      CometState cometState0 = pollerCometHandler0.getCometState();
      assertEquals("STATE_OPEN", cometState0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      PollerCometHandler pollerCometHandler0 = new PollerCometHandler();
      char[] charArray0 = new char[2];
      pollerCometHandler0.receiveData(charArray0);
      assertEquals(CometState.STATE_OPEN, pollerCometHandler0.getCometState());
  }

  @Test
  public void test2()  throws Throwable  {
      PollerCometHandler pollerCometHandler0 = new PollerCometHandler();
      try {
        pollerCometHandler0.init((CometSession) null);
        fail("Expecting exception: CometException");
      } catch(CometException e) {
        /*
         * java.lang.NullPointerException
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      PollerCometHandler pollerCometHandler0 = new PollerCometHandler();
      CometSession cometSession0 = pollerCometHandler0.getCometSession();
      assertNull(cometSession0);
  }

  @Test
  public void test4()  throws Throwable  {
      PollerCometHandler pollerCometHandler0 = new PollerCometHandler();
      pollerCometHandler0.destroy();
      assertEquals(CometState.STATE_CLOSED, pollerCometHandler0.getCometState());
  }
}
