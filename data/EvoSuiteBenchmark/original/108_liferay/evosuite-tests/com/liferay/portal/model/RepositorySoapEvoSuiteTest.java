/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.Repository;
import com.liferay.portal.model.RepositorySoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RepositorySoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      repositorySoap0.setUserName("s8-aSgmF:E5c[lPP|_");
      assertEquals("s8-aSgmF:E5c[lPP|_", repositorySoap0.getUserName());
  }

  @Test
  public void test1()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      repositorySoap0.setTypeSettings("s8-aSgmF:E5c[lPP|_");
      assertEquals(0L, repositorySoap0.getClassNameId());
  }

  @Test
  public void test2()  throws Throwable  {
      LinkedList<Repository> linkedList0 = new LinkedList<Repository>();
      linkedList0.offer((Repository) null);
      // Undeclared exception!
      try {
        RepositorySoap.toSoapModels((List<Repository>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      repositorySoap0.setUserId((-7L));
      assertEquals((-7L), repositorySoap0.getUserId());
  }

  @Test
  public void test4()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      repositorySoap0.setName("s8-aSgmF:E5c[lPP|_");
      assertEquals(0L, repositorySoap0.getClassNameId());
  }

  @Test
  public void test5()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      repositorySoap0.setPrimaryKey((-7L));
      assertEquals((-7L), repositorySoap0.getRepositoryId());
      assertEquals((-7L), repositorySoap0.getPrimaryKey());
  }

  @Test
  public void test6()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      String string0 = repositorySoap0.getDescription();
      assertNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      long long0 = repositorySoap0.getRepositoryId();
      assertEquals(0L, long0);
  }

  @Test
  public void test8()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      String string0 = repositorySoap0.getUserName();
      assertNull(string0);
  }

  @Test
  public void test9()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      repositorySoap0.setCompanyId((-1357L));
      assertEquals((-1357L), repositorySoap0.getCompanyId());
  }

  @Test
  public void test10()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      String string0 = repositorySoap0.getPortletId();
      assertNull(string0);
  }

  @Test
  public void test11()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      repositorySoap0.setDlFolderId(0L);
      assertEquals(0L, repositorySoap0.getClassNameId());
  }

  @Test
  public void test12()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      repositorySoap0.setUuid("s8-aSgmF:E5c[lPP|_");
      assertEquals(0L, repositorySoap0.getRepositoryId());
  }

  @Test
  public void test13()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      long long0 = repositorySoap0.getGroupId();
      assertEquals(0L, long0);
  }

  @Test
  public void test14()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      repositorySoap0.setPortletId("s8-aSgmF:E5c[lPP|_");
      assertEquals(0L, repositorySoap0.getCompanyId());
  }

  @Test
  public void test15()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      long long0 = repositorySoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test16()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      repositorySoap0.setClassNameId(0L);
      assertNull(repositorySoap0.getUserName());
  }

  @Test
  public void test17()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      long long0 = repositorySoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test18()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      repositorySoap0.setCreateDate((Date) null);
      assertNull(repositorySoap0.getUuid());
  }

  @Test
  public void test19()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      repositorySoap0.setGroupId(0L);
      assertEquals(0L, repositorySoap0.getDlFolderId());
  }

  @Test
  public void test20()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      String string0 = repositorySoap0.getUuid();
      assertNull(string0);
  }

  @Test
  public void test21()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      String string0 = repositorySoap0.getTypeSettings();
      assertNull(string0);
  }

  @Test
  public void test22()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      long long0 = repositorySoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test23()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      long long0 = repositorySoap0.getDlFolderId();
      assertEquals(0L, long0);
  }

  @Test
  public void test24()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      repositorySoap0.setModifiedDate((Date) null);
      assertEquals(0L, repositorySoap0.getPrimaryKey());
  }

  @Test
  public void test25()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      Date date0 = repositorySoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test26()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      Date date0 = repositorySoap0.getModifiedDate();
      assertNull(date0);
  }

  @Test
  public void test27()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      long long0 = repositorySoap0.getClassNameId();
      assertEquals(0L, long0);
  }

  @Test
  public void test28()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      String string0 = repositorySoap0.getName();
      assertNull(string0);
  }

  @Test
  public void test29()  throws Throwable  {
      RepositorySoap repositorySoap0 = new RepositorySoap();
      repositorySoap0.setDescription((String) null);
      assertEquals(0L, repositorySoap0.getClassNameId());
  }

  @Test
  public void test30()  throws Throwable  {
      Repository[][] repositoryArray0 = new Repository[1][3];
      // Undeclared exception!
      try {
        RepositorySoap.toSoapModels(repositoryArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test31()  throws Throwable  {
      LinkedList<Repository> linkedList0 = new LinkedList<Repository>();
      RepositorySoap[] repositorySoapArray0 = RepositorySoap.toSoapModels((List<Repository>) linkedList0);
      assertNotNull(repositorySoapArray0);
  }
}
