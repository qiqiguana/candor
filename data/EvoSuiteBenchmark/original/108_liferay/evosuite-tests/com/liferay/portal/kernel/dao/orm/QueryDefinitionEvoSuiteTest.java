/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.dao.orm;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.dao.orm.QueryDefinition;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.kernel.workflow.comparator.BaseWorkflowTaskNameComparator;
import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class QueryDefinitionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      QueryDefinition queryDefinition0 = new QueryDefinition();
      // Undeclared exception!
      try {
        queryDefinition0.setAttribute("\"!v>7Anh']Ic", "\"!v>7Anh']Ic");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      QueryDefinition queryDefinition0 = new QueryDefinition();
      int int0 = queryDefinition0.getStatus();
      assertEquals(-1, queryDefinition0.getStart());
      assertEquals(-1, queryDefinition0.getEnd());
      assertEquals((-1), int0);
  }

  @Test
  public void test2()  throws Throwable  {
      QueryDefinition queryDefinition0 = new QueryDefinition((-1));
      queryDefinition0.getAttributes();
      assertEquals(true, queryDefinition0.isExcludeStatus());
      assertEquals(-1, queryDefinition0.getEnd());
      assertEquals(-1, queryDefinition0.getStart());
      assertEquals(8, queryDefinition0.getStatus());
  }

  @Test
  public void test3()  throws Throwable  {
      QueryDefinition queryDefinition0 = new QueryDefinition();
      queryDefinition0.getOrderByComparator();
      assertEquals(-1, queryDefinition0.getStatus());
      assertEquals(-1, queryDefinition0.getStart());
      assertEquals(-1, queryDefinition0.getEnd());
  }

  @Test
  public void test4()  throws Throwable  {
      BaseWorkflowTaskNameComparator baseWorkflowTaskNameComparator0 = new BaseWorkflowTaskNameComparator(true);
      QueryDefinition queryDefinition0 = new QueryDefinition(0, false, (-1203), 0, (OrderByComparator) baseWorkflowTaskNameComparator0);
      assertEquals(-1203, queryDefinition0.getStart());
      
      queryDefinition0.setStart(0);
      assertEquals(0, queryDefinition0.getEnd());
  }

  @Test
  public void test5()  throws Throwable  {
      BaseWorkflowTaskNameComparator baseWorkflowTaskNameComparator0 = new BaseWorkflowTaskNameComparator(true);
      QueryDefinition queryDefinition0 = new QueryDefinition(0, false, (-1203), 0, (OrderByComparator) baseWorkflowTaskNameComparator0);
      boolean boolean0 = queryDefinition0.isExcludeStatus();
      assertEquals(0, queryDefinition0.getEnd());
      assertEquals(false, boolean0);
      assertEquals(0, queryDefinition0.getStatus());
      assertEquals(-1203, queryDefinition0.getStart());
  }

  @Test
  public void test6()  throws Throwable  {
      BaseWorkflowTaskNameComparator baseWorkflowTaskNameComparator0 = new BaseWorkflowTaskNameComparator(true);
      QueryDefinition queryDefinition0 = new QueryDefinition(0, false, (-1203), 0, (OrderByComparator) baseWorkflowTaskNameComparator0);
      int int0 = queryDefinition0.getStart();
      assertEquals(0, queryDefinition0.getStatus());
      assertEquals(0, queryDefinition0.getEnd());
      assertEquals((-1203), int0);
      assertEquals(false, queryDefinition0.isExcludeStatus());
  }

  @Test
  public void test7()  throws Throwable  {
      QueryDefinition queryDefinition0 = new QueryDefinition(0);
      assertEquals(-1, queryDefinition0.getEnd());
      
      queryDefinition0.setEnd(0);
      assertEquals(0, queryDefinition0.getEnd());
      assertEquals(-1, queryDefinition0.getStart());
  }

  @Test
  public void test8()  throws Throwable  {
      QueryDefinition queryDefinition0 = new QueryDefinition();
      int int0 = queryDefinition0.getEnd();
      assertEquals((-1), int0);
      assertEquals(-1, queryDefinition0.getStatus());
      assertEquals(-1, queryDefinition0.getStart());
  }

  @Test
  public void test9()  throws Throwable  {
      QueryDefinition queryDefinition0 = new QueryDefinition();
      queryDefinition0.setOrderByComparator((OrderByComparator) null);
      assertEquals(-1, queryDefinition0.getEnd());
      assertEquals(-1, queryDefinition0.getStatus());
      assertEquals(-1, queryDefinition0.getStart());
  }

  @Test
  public void test10()  throws Throwable  {
      BaseWorkflowTaskNameComparator baseWorkflowTaskNameComparator0 = new BaseWorkflowTaskNameComparator();
      QueryDefinition queryDefinition0 = new QueryDefinition(169, 169, 169, (OrderByComparator) baseWorkflowTaskNameComparator0);
      assertEquals(false, queryDefinition0.isExcludeStatus());
      assertEquals(169, queryDefinition0.getStart());
      assertEquals(169, queryDefinition0.getEnd());
      assertEquals(169, queryDefinition0.getStatus());
  }

  @Test
  public void test11()  throws Throwable  {
      BaseWorkflowTaskNameComparator baseWorkflowTaskNameComparator0 = new BaseWorkflowTaskNameComparator();
      QueryDefinition queryDefinition0 = new QueryDefinition((-1), 0, (-1), (OrderByComparator) baseWorkflowTaskNameComparator0);
      assertEquals(true, queryDefinition0.isExcludeStatus());
      assertEquals(0, queryDefinition0.getStart());
      assertEquals(8, queryDefinition0.getStatus());
      assertEquals(-1, queryDefinition0.getEnd());
  }

  @Test
  public void test12()  throws Throwable  {
      QueryDefinition queryDefinition0 = new QueryDefinition();
      HashMap<String, Serializable> hashMap0 = new HashMap<String, Serializable>();
      queryDefinition0.setAttributes((Map<String, Serializable>) hashMap0);
      queryDefinition0.getAttribute("\"!v>7Anh']Ic");
      assertEquals(-1, queryDefinition0.getEnd());
      assertEquals(-1, queryDefinition0.getStatus());
      assertEquals(-1, queryDefinition0.getStart());
  }

  @Test
  public void test13()  throws Throwable  {
      QueryDefinition queryDefinition0 = new QueryDefinition((-1));
      queryDefinition0.getAttribute("1f77+S-QxC?");
      assertEquals(-1, queryDefinition0.getStart());
      assertEquals(-1, queryDefinition0.getEnd());
      assertEquals(8, queryDefinition0.getStatus());
      assertEquals(true, queryDefinition0.isExcludeStatus());
  }

  @Test
  public void test14()  throws Throwable  {
      QueryDefinition queryDefinition0 = new QueryDefinition();
      HashMap<String, Serializable> hashMap0 = new HashMap<String, Serializable>();
      queryDefinition0.setAttributes((Map<String, Serializable>) hashMap0);
      queryDefinition0.setAttributes((Map<String, Serializable>) hashMap0);
      assertEquals(-1, queryDefinition0.getStatus());
      assertEquals(-1, queryDefinition0.getEnd());
      assertEquals(-1, queryDefinition0.getStart());
  }
}
