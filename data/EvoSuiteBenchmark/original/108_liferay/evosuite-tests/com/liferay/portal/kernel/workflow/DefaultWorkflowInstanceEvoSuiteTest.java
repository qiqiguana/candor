/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.workflow;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.workflow.DefaultWorkflowInstance;
import com.liferay.portal.kernel.workflow.WorkflowInstance;
import java.io.Serializable;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DefaultWorkflowInstanceEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultWorkflowInstance defaultWorkflowInstance0 = new DefaultWorkflowInstance();
      defaultWorkflowInstance0.addChildWorkflowInstance((WorkflowInstance) defaultWorkflowInstance0);
      assertEquals(1, defaultWorkflowInstance0.getChildrenWorkflowInstanceCount());
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultWorkflowInstance defaultWorkflowInstance0 = new DefaultWorkflowInstance();
      int int0 = defaultWorkflowInstance0.getChildrenWorkflowInstanceCount();
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultWorkflowInstance defaultWorkflowInstance0 = new DefaultWorkflowInstance();
      String string0 = defaultWorkflowInstance0.getWorkflowDefinitionName();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      DefaultWorkflowInstance defaultWorkflowInstance0 = new DefaultWorkflowInstance();
      boolean boolean0 = defaultWorkflowInstance0.isComplete();
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      DefaultWorkflowInstance defaultWorkflowInstance0 = new DefaultWorkflowInstance();
      defaultWorkflowInstance0.setWorkflowDefinitionVersion((-255));
      assertEquals(-255, defaultWorkflowInstance0.getWorkflowDefinitionVersion());
  }

  @Test
  public void test5()  throws Throwable  {
      DefaultWorkflowInstance defaultWorkflowInstance0 = new DefaultWorkflowInstance();
      Map<String, Serializable> map0 = defaultWorkflowInstance0.getWorkflowContext();
      assertNull(map0);
  }

  @Test
  public void test6()  throws Throwable  {
      DefaultWorkflowInstance defaultWorkflowInstance0 = new DefaultWorkflowInstance();
      WorkflowInstance workflowInstance0 = defaultWorkflowInstance0.getParentWorkflowInstance();
      assertNull(workflowInstance0);
  }

  @Test
  public void test7()  throws Throwable  {
      DefaultWorkflowInstance defaultWorkflowInstance0 = new DefaultWorkflowInstance();
      defaultWorkflowInstance0.setWorkflowDefinitionName((String) null);
      assertEquals(0, defaultWorkflowInstance0.getChildrenWorkflowInstanceCount());
  }

  @Test
  public void test8()  throws Throwable  {
      DefaultWorkflowInstance defaultWorkflowInstance0 = new DefaultWorkflowInstance();
      LinkedList<WorkflowInstance> linkedList0 = new LinkedList<WorkflowInstance>();
      defaultWorkflowInstance0.setChildrenWorkflowInstances((List<WorkflowInstance>) linkedList0);
      assertEquals(0, defaultWorkflowInstance0.getChildrenWorkflowInstanceCount());
  }

  @Test
  public void test9()  throws Throwable  {
      DefaultWorkflowInstance defaultWorkflowInstance0 = new DefaultWorkflowInstance();
      List<WorkflowInstance> list0 = defaultWorkflowInstance0.getChildrenWorkflowInstances();
      assertEquals(0, list0.size());
  }

  @Test
  public void test10()  throws Throwable  {
      DefaultWorkflowInstance defaultWorkflowInstance0 = new DefaultWorkflowInstance();
      defaultWorkflowInstance0.setParentWorkflowInstance((WorkflowInstance) defaultWorkflowInstance0);
      long long0 = defaultWorkflowInstance0.getParentWorkflowInstanceId();
      assertEquals(0L, long0);
  }

  @Test
  public void test11()  throws Throwable  {
      DefaultWorkflowInstance defaultWorkflowInstance0 = new DefaultWorkflowInstance();
      defaultWorkflowInstance0.setStartDate((Date) null);
      assertEquals(0L, defaultWorkflowInstance0.getParentWorkflowInstanceId());
  }

  @Test
  public void test12()  throws Throwable  {
      DefaultWorkflowInstance defaultWorkflowInstance0 = new DefaultWorkflowInstance();
      String string0 = defaultWorkflowInstance0.getState();
      assertNull(string0);
  }

  @Test
  public void test13()  throws Throwable  {
      DefaultWorkflowInstance defaultWorkflowInstance0 = new DefaultWorkflowInstance();
      defaultWorkflowInstance0.setWorkflowContext((Map<String, Serializable>) null);
      assertEquals(0, defaultWorkflowInstance0.getChildrenWorkflowInstanceCount());
  }

  @Test
  public void test14()  throws Throwable  {
      DefaultWorkflowInstance defaultWorkflowInstance0 = new DefaultWorkflowInstance();
      Date date0 = defaultWorkflowInstance0.getStartDate();
      assertNull(date0);
  }

  @Test
  public void test15()  throws Throwable  {
      DefaultWorkflowInstance defaultWorkflowInstance0 = new DefaultWorkflowInstance();
      Date date0 = new Date();
      defaultWorkflowInstance0.setEndDate(date0);
      boolean boolean0 = defaultWorkflowInstance0.isComplete();
      assertEquals(true, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      DefaultWorkflowInstance defaultWorkflowInstance0 = new DefaultWorkflowInstance();
      int int0 = defaultWorkflowInstance0.getWorkflowDefinitionVersion();
      assertEquals(0, int0);
  }

  @Test
  public void test17()  throws Throwable  {
      DefaultWorkflowInstance defaultWorkflowInstance0 = new DefaultWorkflowInstance();
      defaultWorkflowInstance0.setWorkflowInstanceId((-1914L));
      assertEquals((-1914L), defaultWorkflowInstance0.getWorkflowInstanceId());
  }

  @Test
  public void test18()  throws Throwable  {
      DefaultWorkflowInstance defaultWorkflowInstance0 = new DefaultWorkflowInstance();
      defaultWorkflowInstance0.setState("");
      assertEquals(0, defaultWorkflowInstance0.getWorkflowDefinitionVersion());
  }

  @Test
  public void test19()  throws Throwable  {
      DefaultWorkflowInstance defaultWorkflowInstance0 = new DefaultWorkflowInstance();
      long long0 = defaultWorkflowInstance0.getParentWorkflowInstanceId();
      assertEquals(0L, long0);
  }
}
