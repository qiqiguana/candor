/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.servlet.PortalClassLoaderServlet;
import com.liferay.portal.kernel.servlet.SecurePluginContextListener;
import com.liferay.portal.kernel.servlet.SerializableSessionAttributeListener;
import com.liferay.portal.kernel.util.PortalLifecycle;
import com.liferay.portal.kernel.util.PortalLifecycleUtil;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PortalLifecycleUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SerializableSessionAttributeListener serializableSessionAttributeListener0 = new SerializableSessionAttributeListener();
      PortalLifecycleUtil.flushDestroys();
      PortalLifecycleUtil.register((PortalLifecycle) serializableSessionAttributeListener0, 316);
      PortalLifecycleUtil.register((PortalLifecycle) serializableSessionAttributeListener0);
  }

  @Test
  public void test1()  throws Throwable  {
      PortalClassLoaderServlet portalClassLoaderServlet0 = new PortalClassLoaderServlet();
      PortalLifecycleUtil.removeDestroy((PortalLifecycle) portalClassLoaderServlet0);
      // Undeclared exception!
      try {
        PortalLifecycleUtil.flushInits();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Unable to initialize portal
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      PortalClassLoaderServlet portalClassLoaderServlet0 = new PortalClassLoaderServlet();
      PortalLifecycleUtil.removeDestroy((PortalLifecycle) portalClassLoaderServlet0);
      PortalLifecycleUtil.flushInits();
      PortalLifecycleUtil.flushInits();
  }

  @Test
  public void test3()  throws Throwable  {
      PortalLifecycleUtil.flushInits();
      PortalLifecycleUtil.reset();
      PortalLifecycleUtil portalLifecycleUtil0 = new PortalLifecycleUtil();
      SecurePluginContextListener securePluginContextListener0 = new SecurePluginContextListener();
      PortalLifecycleUtil.removeDestroy((PortalLifecycle) securePluginContextListener0);
      PortalLifecycleUtil.reset();
      PortalLifecycleUtil.flushInits();
  }

  @Test
  public void test4()  throws Throwable  {
      SerializableSessionAttributeListener serializableSessionAttributeListener0 = new SerializableSessionAttributeListener();
      // Undeclared exception!
      try {
        PortalLifecycleUtil.register((PortalLifecycle) serializableSessionAttributeListener0, 2);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Unable to initialize portal
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      SecurePluginContextListener securePluginContextListener0 = new SecurePluginContextListener();
      // Undeclared exception!
      try {
        securePluginContextListener0.registerPortalLifecycle(0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Unable to initialize portal
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      SerializableSessionAttributeListener serializableSessionAttributeListener0 = new SerializableSessionAttributeListener();
      PortalLifecycleUtil.register((PortalLifecycle) serializableSessionAttributeListener0, 1);
  }

  @Test
  public void test7()  throws Throwable  {
      PortalLifecycleUtil.reset();
  }
}
