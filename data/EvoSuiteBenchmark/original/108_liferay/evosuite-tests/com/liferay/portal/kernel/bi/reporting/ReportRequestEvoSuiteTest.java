/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.bi.reporting;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.bi.reporting.ContextClassloaderReportDesignRetriever;
import com.liferay.portal.kernel.bi.reporting.ReportDataSourceType;
import com.liferay.portal.kernel.bi.reporting.ReportDesignRetriever;
import com.liferay.portal.kernel.bi.reporting.ReportFormat;
import com.liferay.portal.kernel.bi.reporting.ReportRequest;
import com.liferay.portal.kernel.bi.reporting.ReportRequestContext;
import java.util.HashMap;
import java.util.Map;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ReportRequestEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ContextClassloaderReportDesignRetriever contextClassloaderReportDesignRetriever0 = new ContextClassloaderReportDesignRetriever("rtf");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ReportRequest reportRequest0 = new ReportRequest((ReportRequestContext) null, (ReportDesignRetriever) contextClassloaderReportDesignRetriever0, (Map<String, String>) hashMap0, "rtf");
      reportRequest0.setReportRequestContext((ReportRequestContext) null);
      assertEquals(ReportFormat.RTF, reportRequest0.getReportFormat());
  }

  @Test
  public void test1()  throws Throwable  {
      ReportDataSourceType reportDataSourceType0 = ReportDataSourceType.EMPTY;
      ReportRequestContext reportRequestContext0 = new ReportRequestContext(reportDataSourceType0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ReportRequest reportRequest0 = new ReportRequest(reportRequestContext0, (ReportDesignRetriever) null, (Map<String, String>) hashMap0, "txt");
      Map<String, String> map0 = reportRequest0.getReportParameters();
      assertEquals(0, map0.size());
  }

  @Test
  public void test2()  throws Throwable  {
      ReportDataSourceType reportDataSourceType0 = ReportDataSourceType.XLS;
      ReportRequestContext reportRequestContext0 = new ReportRequestContext(reportDataSourceType0);
      ContextClassloaderReportDesignRetriever contextClassloaderReportDesignRetriever0 = new ContextClassloaderReportDesignRetriever("html");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ReportRequest reportRequest0 = new ReportRequest(reportRequestContext0, (ReportDesignRetriever) contextClassloaderReportDesignRetriever0, (Map<String, String>) hashMap0, "html");
      ReportFormat reportFormat0 = ReportFormat.PDF;
      reportRequest0.setReportFormat(reportFormat0);
      assertEquals(ReportFormat.PDF, reportRequest0.getReportFormat());
  }

  @Test
  public void test3()  throws Throwable  {
      ContextClassloaderReportDesignRetriever contextClassloaderReportDesignRetriever0 = new ContextClassloaderReportDesignRetriever("rtf");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ReportRequest reportRequest0 = new ReportRequest((ReportRequestContext) null, (ReportDesignRetriever) contextClassloaderReportDesignRetriever0, (Map<String, String>) hashMap0, "rtf");
      reportRequest0.setReportDesignRetriever((ReportDesignRetriever) contextClassloaderReportDesignRetriever0);
      assertEquals(ReportFormat.RTF, reportRequest0.getReportFormat());
  }

  @Test
  public void test4()  throws Throwable  {
      ReportDataSourceType reportDataSourceType0 = ReportDataSourceType.PORTAL;
      ReportRequestContext reportRequestContext0 = new ReportRequestContext(reportDataSourceType0);
      ContextClassloaderReportDesignRetriever contextClassloaderReportDesignRetriever0 = new ContextClassloaderReportDesignRetriever("rtf");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ReportRequest reportRequest0 = new ReportRequest(reportRequestContext0, (ReportDesignRetriever) contextClassloaderReportDesignRetriever0, (Map<String, String>) hashMap0, "rtf");
      ReportRequestContext reportRequestContext1 = reportRequest0.getReportRequestContext();
      assertSame(reportRequestContext1, reportRequestContext0);
  }

  @Test
  public void test5()  throws Throwable  {
      ContextClassloaderReportDesignRetriever contextClassloaderReportDesignRetriever0 = new ContextClassloaderReportDesignRetriever("rtf");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ReportRequest reportRequest0 = new ReportRequest((ReportRequestContext) null, (ReportDesignRetriever) contextClassloaderReportDesignRetriever0, (Map<String, String>) hashMap0, "rtf");
      reportRequest0.setReportParameters((Map<String, String>) hashMap0);
      assertEquals("{}", hashMap0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      ReportDataSourceType reportDataSourceType0 = ReportDataSourceType.XLS;
      ReportRequestContext reportRequestContext0 = new ReportRequestContext(reportDataSourceType0);
      ContextClassloaderReportDesignRetriever contextClassloaderReportDesignRetriever0 = new ContextClassloaderReportDesignRetriever("html");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ReportRequest reportRequest0 = new ReportRequest(reportRequestContext0, (ReportDesignRetriever) contextClassloaderReportDesignRetriever0, (Map<String, String>) hashMap0, "html");
      ContextClassloaderReportDesignRetriever contextClassloaderReportDesignRetriever1 = (ContextClassloaderReportDesignRetriever)reportRequest0.getReportDesignRetriever();
      assertSame(contextClassloaderReportDesignRetriever0, contextClassloaderReportDesignRetriever1);
  }

  @Test
  public void test7()  throws Throwable  {
      ReportDataSourceType reportDataSourceType0 = ReportDataSourceType.EMPTY;
      ReportRequestContext reportRequestContext0 = new ReportRequestContext(reportDataSourceType0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ReportRequest reportRequest0 = new ReportRequest(reportRequestContext0, (ReportDesignRetriever) null, (Map<String, String>) hashMap0, "txt");
      ReportFormat reportFormat0 = reportRequest0.getReportFormat();
      assertEquals("txt", reportFormat0.toString());
  }
}
