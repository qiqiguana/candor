/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.lar;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.bean.BeanLocatorException;
import com.liferay.portal.kernel.lar.PortletDataContext;
import com.liferay.portal.kernel.xml.Element;
import com.liferay.portal.lar.LayoutCache;
import com.liferay.portal.lar.PermissionExporter;
import com.liferay.portal.model.Layout;
import com.liferay.portal.model.Role;
import java.util.List;
import javax.swing.table.TableRowSorter;
import org.jfree.data.xy.XYDatasetTableModel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PermissionExporterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PermissionExporter permissionExporter0 = new PermissionExporter();
      LayoutCache layoutCache0 = new LayoutCache();
      try {
        permissionExporter0.exportLayoutRoles(layoutCache0, (-7L), (-7L), (Element) null);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      PermissionExporter permissionExporter0 = new PermissionExporter();
      LayoutCache layoutCache0 = new LayoutCache();
      try {
        permissionExporter0.exportPortletPermissions((PortletDataContext) null, layoutCache0, "r;+9NxP", (Layout) null, (Element) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      PermissionExporter permissionExporter0 = new PermissionExporter();
      boolean boolean0 = permissionExporter0.hasRole((List<Role>) null, "");
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      PermissionExporter permissionExporter0 = new PermissionExporter();
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      TableRowSorter<XYDatasetTableModel> tableRowSorter0 = new TableRowSorter<XYDatasetTableModel>(xYDatasetTableModel0);
      List<?> list0 = tableRowSorter0.getSortKeys();
      boolean boolean0 = permissionExporter0.hasRole(list0, "");
      assertEquals(false, boolean0);
  }
}
