/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.UserTracker;
import com.liferay.portal.model.UserTrackerSoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UserTrackerSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LinkedList<UserTracker> linkedList0 = new LinkedList<UserTracker>();
      linkedList0.add((UserTracker) null);
      // Undeclared exception!
      try {
        UserTrackerSoap.toSoapModels((List<UserTracker>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      UserTrackerSoap userTrackerSoap0 = new UserTrackerSoap();
      String string0 = userTrackerSoap0.getSessionId();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      UserTrackerSoap userTrackerSoap0 = new UserTrackerSoap();
      Date date0 = userTrackerSoap0.getModifiedDate();
      assertNull(date0);
  }

  @Test
  public void test3()  throws Throwable  {
      UserTrackerSoap userTrackerSoap0 = new UserTrackerSoap();
      userTrackerSoap0.setUserAgent((String) null);
      assertNull(userTrackerSoap0.getSessionId());
  }

  @Test
  public void test4()  throws Throwable  {
      UserTrackerSoap userTrackerSoap0 = new UserTrackerSoap();
      long long0 = userTrackerSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test5()  throws Throwable  {
      UserTrackerSoap userTrackerSoap0 = new UserTrackerSoap();
      userTrackerSoap0.setRemoteHost("[r;-}=^36UN&7DpB19}");
      assertEquals(0L, userTrackerSoap0.getPrimaryKey());
  }

  @Test
  public void test6()  throws Throwable  {
      UserTrackerSoap userTrackerSoap0 = new UserTrackerSoap();
      String string0 = userTrackerSoap0.getRemoteHost();
      assertNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      UserTrackerSoap userTrackerSoap0 = new UserTrackerSoap();
      long long0 = userTrackerSoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test8()  throws Throwable  {
      UserTrackerSoap userTrackerSoap0 = new UserTrackerSoap();
      String string0 = userTrackerSoap0.getRemoteAddr();
      assertNull(string0);
  }

  @Test
  public void test9()  throws Throwable  {
      UserTrackerSoap userTrackerSoap0 = new UserTrackerSoap();
      userTrackerSoap0.setCompanyId(0L);
      assertNull(userTrackerSoap0.getRemoteAddr());
  }

  @Test
  public void test10()  throws Throwable  {
      UserTrackerSoap userTrackerSoap0 = new UserTrackerSoap();
      long long0 = userTrackerSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test11()  throws Throwable  {
      UserTrackerSoap userTrackerSoap0 = new UserTrackerSoap();
      userTrackerSoap0.setModifiedDate((Date) null);
      assertEquals(0L, userTrackerSoap0.getUserId());
  }

  @Test
  public void test12()  throws Throwable  {
      UserTrackerSoap userTrackerSoap0 = new UserTrackerSoap();
      String string0 = userTrackerSoap0.getUserAgent();
      assertNull(string0);
  }

  @Test
  public void test13()  throws Throwable  {
      UserTrackerSoap userTrackerSoap0 = new UserTrackerSoap();
      userTrackerSoap0.setUserId(0L);
      assertNull(userTrackerSoap0.getRemoteHost());
  }

  @Test
  public void test14()  throws Throwable  {
      UserTrackerSoap userTrackerSoap0 = new UserTrackerSoap();
      userTrackerSoap0.setPrimaryKey(0L);
      assertEquals(0L, userTrackerSoap0.getUserTrackerId());
  }

  @Test
  public void test15()  throws Throwable  {
      UserTrackerSoap userTrackerSoap0 = new UserTrackerSoap();
      long long0 = userTrackerSoap0.getUserTrackerId();
      assertEquals(0L, long0);
  }

  @Test
  public void test16()  throws Throwable  {
      UserTrackerSoap userTrackerSoap0 = new UserTrackerSoap();
      userTrackerSoap0.setRemoteAddr("[r;-}=^36UN&7DpB19}");
      assertEquals(0L, userTrackerSoap0.getPrimaryKey());
  }

  @Test
  public void test17()  throws Throwable  {
      UserTrackerSoap userTrackerSoap0 = new UserTrackerSoap();
      userTrackerSoap0.setSessionId((String) null);
      assertNull(userTrackerSoap0.getSessionId());
  }

  @Test
  public void test18()  throws Throwable  {
      UserTracker[][] userTrackerArray0 = new UserTracker[1][2];
      // Undeclared exception!
      try {
        UserTrackerSoap.toSoapModels(userTrackerArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test19()  throws Throwable  {
      LinkedList<UserTracker> linkedList0 = new LinkedList<UserTracker>();
      UserTrackerSoap[] userTrackerSoapArray0 = UserTrackerSoap.toSoapModels((List<UserTracker>) linkedList0);
      assertNotNull(userTrackerSoapArray0);
  }
}
