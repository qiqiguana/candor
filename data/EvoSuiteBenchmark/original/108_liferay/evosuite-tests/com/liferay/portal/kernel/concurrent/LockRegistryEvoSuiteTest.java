/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.concurrent;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.concurrent.LockRegistry;
import java.util.Map;
import java.util.concurrent.locks.ReentrantLock;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LockRegistryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Map<String, ReentrantLock> map0 = LockRegistry.freeLock("");
      assertNull(map0);
  }

  @Test
  public void test1()  throws Throwable  {
      LockRegistry.allocateLock("", "");
      LockRegistry.freeLock("", "");
      LockRegistry.finallyFreeLock("", "", true);
      LockRegistry.freeAllLock(true);
      LockRegistry lockRegistry0 = new LockRegistry();
      LockRegistry.freeAllLock();
      ReentrantLock reentrantLock0 = LockRegistry.freeLock("", "");
      assertNull(reentrantLock0);
  }

  @Test
  public void test2()  throws Throwable  {
      LockRegistry.getLock("", "");
      Map<String, ReentrantLock> map0 = LockRegistry.freeLock("");
      assertNull(map0);
  }

  @Test
  public void test3()  throws Throwable  {
      LockRegistry.getLock("", "");
      ReentrantLock reentrantLock0 = LockRegistry.allocateLock("", "");
      assertNotNull(reentrantLock0);
      assertEquals(0, reentrantLock0.getHoldCount());
  }
}
