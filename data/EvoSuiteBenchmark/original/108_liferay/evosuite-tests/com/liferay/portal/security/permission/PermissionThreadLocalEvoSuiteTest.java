/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.security.permission;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.security.permission.PermissionChecker;
import com.liferay.portal.security.permission.PermissionThreadLocal;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PermissionThreadLocalEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PermissionThreadLocal.setIndexEnabled(false);
  }

  @Test
  public void test1()  throws Throwable  {
      PermissionThreadLocal.setAddResource(false);
  }

  @Test
  public void test2()  throws Throwable  {
      PermissionThreadLocal permissionThreadLocal0 = new PermissionThreadLocal();
      assertEquals(false, permissionThreadLocal0.isAddResource());
  }

  @Test
  public void test3()  throws Throwable  {
      PermissionThreadLocal.setPermissionChecker((PermissionChecker) null);
  }

  @Test
  public void test4()  throws Throwable  {
      PermissionChecker permissionChecker0 = PermissionThreadLocal.getPermissionChecker();
      assertNull(permissionChecker0);
  }

  @Test
  public void test5()  throws Throwable  {
      boolean boolean0 = PermissionThreadLocal.isAddResource();
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      boolean boolean0 = PermissionThreadLocal.isFlushEnabled();
      assertEquals(true, boolean0);
  }
}
