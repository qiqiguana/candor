/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.dao.db;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.dao.db.IngresDB;
import java.io.IOException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class IngresDBEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      IngresDB ingresDB0 = new IngresDB();
      assertNotNull(ingresDB0);
      
      ingresDB0.buildCreateFile("-- alter_column_name interruptAction\n", "-- alter_column_name interruptAction\n", 0);
      assertEquals("ingres", ingresDB0.getServerName());
  }

  @Test
  public void test1()  throws Throwable  {
      IngresDB ingresDB0 = (IngresDB)IngresDB.getInstance();
      assertEquals("1", ingresDB0.getTemplateTrue());
  }

  @Test
  public void test2()  throws Throwable  {
      IngresDB ingresDB0 = new IngresDB();
      assertNotNull(ingresDB0);
      
      boolean boolean0 = ingresDB0.isSupportsAlterColumnName();
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      IngresDB ingresDB0 = new IngresDB();
      String string0 = ingresDB0.buildSQL("alter_column_name interruptAction");
      assertEquals("-- alter_column_name interruptAction\n", string0);
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      IngresDB ingresDB0 = new IngresDB();
      String[] stringArray0 = new String[5];
      String string0 = ingresDB0.replaceTemplate((String) null, stringArray0);
      assertNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      IngresDB ingresDB0 = new IngresDB();
      assertNotNull(ingresDB0);
      
      String[] stringArray0 = new String[4];
      String string0 = ingresDB0.replaceTemplate(" STRING", stringArray0);
      assertEquals(" STRING", string0);
      assertNotNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      IngresDB ingresDB0 = new IngresDB();
      // Undeclared exception!
      try {
        ingresDB0.buildSQL("alter_table_name 8");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 2
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      IngresDB ingresDB0 = new IngresDB();
      // Undeclared exception!
      try {
        ingresDB0.reword("alter_column_type 0(4yxTJ]Y");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 2
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      IngresDB ingresDB0 = new IngresDB();
      assertNotNull(ingresDB0);
      
      String string0 = ingresDB0.reword("drop primary key");
      assertNotNull(string0);
      assertEquals("alter table key drop constraint key_pkey;\n", string0);
  }

  @Test
  public void test9()  throws Throwable  {
      IngresDB ingresDB0 = new IngresDB();
      assertNotNull(ingresDB0);
      
      String string0 = ingresDB0.reword("alter table key drop constraint key_pkey;\n");
      assertEquals("alter table key drop constraint key_pkey;\n", string0);
  }
}
