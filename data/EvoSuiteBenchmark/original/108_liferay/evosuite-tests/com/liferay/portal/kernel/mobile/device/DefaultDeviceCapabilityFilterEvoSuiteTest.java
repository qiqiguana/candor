/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.mobile.device;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.mobile.device.DefaultDeviceCapabilityFilter;
import java.util.LinkedHashSet;
import java.util.Set;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DefaultDeviceCapabilityFilterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultDeviceCapabilityFilter defaultDeviceCapabilityFilter0 = new DefaultDeviceCapabilityFilter();
      boolean boolean0 = defaultDeviceCapabilityFilter0.accept("U^", "U^");
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultDeviceCapabilityFilter defaultDeviceCapabilityFilter0 = new DefaultDeviceCapabilityFilter();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(0);
      linkedHashSet0.add("false");
      defaultDeviceCapabilityFilter0.setAcceptableCapabilityNames((Set<String>) linkedHashSet0);
      boolean boolean0 = defaultDeviceCapabilityFilter0.accept("false");
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultDeviceCapabilityFilter defaultDeviceCapabilityFilter0 = new DefaultDeviceCapabilityFilter();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(0);
      linkedHashSet0.add("false");
      defaultDeviceCapabilityFilter0.setAcceptableCapabilityNames((Set<String>) linkedHashSet0);
      boolean boolean0 = defaultDeviceCapabilityFilter0.accept("/y", "/y");
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      DefaultDeviceCapabilityFilter defaultDeviceCapabilityFilter0 = new DefaultDeviceCapabilityFilter();
      boolean boolean0 = defaultDeviceCapabilityFilter0.accept("", "");
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      DefaultDeviceCapabilityFilter defaultDeviceCapabilityFilter0 = new DefaultDeviceCapabilityFilter();
      boolean boolean0 = defaultDeviceCapabilityFilter0.accept("/y", "false");
      assertEquals(false, boolean0);
  }
}
