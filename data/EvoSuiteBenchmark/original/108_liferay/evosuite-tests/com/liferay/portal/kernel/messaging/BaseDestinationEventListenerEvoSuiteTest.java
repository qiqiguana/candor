/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.messaging;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.messaging.BaseDestinationEventListener;
import com.liferay.portal.kernel.messaging.BridgingMessageListener;
import com.liferay.portal.kernel.messaging.Destination;
import com.liferay.portal.kernel.messaging.DummyMessageListener;
import com.liferay.portal.kernel.messaging.MessageListener;
import com.liferay.portal.kernel.messaging.ParallelDestination;
import com.liferay.portal.kernel.messaging.sender.DefaultSingleDestinationMessageSender;
import com.liferay.portal.kernel.messaging.sender.SingleDestinationMessageSender;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BaseDestinationEventListenerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BaseDestinationEventListener baseDestinationEventListener0 = new BaseDestinationEventListener();
      DefaultSingleDestinationMessageSender defaultSingleDestinationMessageSender0 = new DefaultSingleDestinationMessageSender();
      BridgingMessageListener bridgingMessageListener0 = new BridgingMessageListener((SingleDestinationMessageSender) defaultSingleDestinationMessageSender0);
      baseDestinationEventListener0.messageListenerRegistered("{destinationName=", (MessageListener) bridgingMessageListener0);
  }

  @Test
  public void test1()  throws Throwable  {
      BaseDestinationEventListener baseDestinationEventListener0 = new BaseDestinationEventListener();
      ParallelDestination parallelDestination0 = new ParallelDestination();
      baseDestinationEventListener0.destinationRemoved((Destination) parallelDestination0);
  }

  @Test
  public void test2()  throws Throwable  {
      BaseDestinationEventListener baseDestinationEventListener0 = new BaseDestinationEventListener();
      baseDestinationEventListener0.destinationAdded((Destination) null);
  }

  @Test
  public void test3()  throws Throwable  {
      BaseDestinationEventListener baseDestinationEventListener0 = new BaseDestinationEventListener();
      DummyMessageListener dummyMessageListener0 = new DummyMessageListener();
      baseDestinationEventListener0.messageListenerUnregistered("{destinationName=", (MessageListener) dummyMessageListener0);
  }
}
