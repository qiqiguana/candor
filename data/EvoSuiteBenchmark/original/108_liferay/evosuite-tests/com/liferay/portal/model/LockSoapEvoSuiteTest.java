/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.Lock;
import com.liferay.portal.model.LockSoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LockSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      lockSoap0.setPrimaryKey(0L);
      assertNull(lockSoap0.getKey());
  }

  @Test
  public void test1()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      lockSoap0.setUserName("C{");
      assertEquals(false, lockSoap0.getInheritable());
  }

  @Test
  public void test2()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      String string0 = lockSoap0.getClassName();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      Date date0 = lockSoap0.getExpirationDate();
      assertNull(date0);
  }

  @Test
  public void test4()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      lockSoap0.setCreateDate((Date) null);
      assertEquals(0L, lockSoap0.getLockId());
  }

  @Test
  public void test5()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      long long0 = lockSoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test6()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      lockSoap0.setExpirationDate((Date) null);
      assertNull(lockSoap0.getUuid());
  }

  @Test
  public void test7()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      lockSoap0.setInheritable(true);
      assertEquals(true, lockSoap0.isInheritable());
      assertEquals(true, lockSoap0.getInheritable());
  }

  @Test
  public void test8()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      lockSoap0.setOwner("R");
      assertNull(lockSoap0.getUserName());
  }

  @Test
  public void test9()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      Date date0 = lockSoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test10()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      lockSoap0.setCompanyId(18L);
      assertEquals(18L, lockSoap0.getCompanyId());
  }

  @Test
  public void test11()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      lockSoap0.setUserId(0L);
      assertEquals(false, lockSoap0.isInheritable());
  }

  @Test
  public void test12()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      String string0 = lockSoap0.getKey();
      assertNull(string0);
  }

  @Test
  public void test13()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      long long0 = lockSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test14()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      lockSoap0.setUuid("R");
      assertEquals("R", lockSoap0.getUuid());
  }

  @Test
  public void test15()  throws Throwable  {
      LinkedList<Lock> linkedList0 = new LinkedList<Lock>();
      linkedList0.offer((Lock) null);
      // Undeclared exception!
      try {
        LockSoap.toSoapModels((List<Lock>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      String string0 = lockSoap0.getUuid();
      assertNull(string0);
  }

  @Test
  public void test17()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      boolean boolean0 = lockSoap0.getInheritable();
      assertEquals(false, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      String string0 = lockSoap0.getUserName();
      assertNull(string0);
  }

  @Test
  public void test19()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      lockSoap0.setClassName("C{");
      assertNull(lockSoap0.getUuid());
  }

  @Test
  public void test20()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      String string0 = lockSoap0.getOwner();
      assertNull(string0);
  }

  @Test
  public void test21()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      boolean boolean0 = lockSoap0.isInheritable();
      assertEquals(false, boolean0);
  }

  @Test
  public void test22()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      long long0 = lockSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test23()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      long long0 = lockSoap0.getLockId();
      assertEquals(0L, long0);
  }

  @Test
  public void test24()  throws Throwable  {
      LockSoap lockSoap0 = new LockSoap();
      lockSoap0.setKey("R");
      assertEquals(0L, lockSoap0.getCompanyId());
  }

  @Test
  public void test25()  throws Throwable  {
      Lock[][] lockArray0 = new Lock[1][8];
      // Undeclared exception!
      try {
        LockSoap.toSoapModels(lockArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test26()  throws Throwable  {
      LinkedList<Lock> linkedList0 = new LinkedList<Lock>();
      LockSoap[] lockSoapArray0 = LockSoap.toSoapModels((List<Lock>) linkedList0);
      assertNotNull(lockSoapArray0);
  }
}
