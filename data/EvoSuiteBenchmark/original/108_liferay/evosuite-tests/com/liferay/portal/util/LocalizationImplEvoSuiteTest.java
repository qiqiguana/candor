/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.util.LocalizationImpl;
import com.liferay.portlet.PortalPreferencesImpl;
import com.liferay.portlet.PortalPreferencesWrapper;
import com.liferay.portlet.PortletPreferencesImpl;
import com.liferay.portlet.PortletPreferencesWrapper;
import java.util.Locale;
import java.util.Map;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.portlet.PortletPreferences;
import javax.portlet.PortletRequest;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LocalizationImplEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          LocalizationImpl localizationImpl0 = new LocalizationImpl();
          // Undeclared exception!
          try {
            localizationImpl0.removeLocalization("xpecte3d '", "xpecte3d '", "xpecte3d '");
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.lang.RuntimePermission getClassLoader.portal)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * com.liferay.portal.kernel.util.PortalClassLoaderUtil.getClassLoader(PortalClassLoaderUtil.java:38)
             * com.liferay.portal.security.pacl.PACLClassLoaderUtil.getPortalClassLoader(PACLClassLoaderUtil.java:64)
             * com.liferay.portal.util.LocalizationImpl.removeLocalization(LocalizationImpl.java:528)
             * com.liferay.portal.util.LocalizationImpl.removeLocalization(LocalizationImpl.java:509)
             * com.liferay.portal.util.LocalizationImpl.removeLocalization(LocalizationImpl.java:503)
             * sun.reflect.GeneratedMethodAccessor85.invoke(Unknown Source)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test1()  throws Throwable  {
      LocalizationImpl localizationImpl0 = new LocalizationImpl();
      // Undeclared exception!
      try {
        localizationImpl0.getLocalization("J$dPbP:`Uyc'", "J$dPbP:`Uyc'");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      LocalizationImpl localizationImpl0 = new LocalizationImpl();
      PortletPreferencesImpl portletPreferencesImpl0 = new PortletPreferencesImpl();
      String string0 = localizationImpl0.getPreferencesValue((PortletPreferences) portletPreferencesImpl0, "", "");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          LocalizationImpl localizationImpl0 = new LocalizationImpl();
          // Undeclared exception!
          try {
            localizationImpl0.updateLocalization((String) null, (String) null, (String) null);
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.lang.RuntimePermission getClassLoader.portal)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * com.liferay.portal.kernel.util.PortalClassLoaderUtil.getClassLoader(PortalClassLoaderUtil.java:38)
             * com.liferay.portal.security.pacl.PACLClassLoaderUtil.getPortalClassLoader(PACLClassLoaderUtil.java:64)
             * com.liferay.portal.util.LocalizationImpl.updateLocalization(LocalizationImpl.java:728)
             * com.liferay.portal.util.LocalizationImpl.updateLocalization(LocalizationImpl.java:714)
             * com.liferay.portal.util.LocalizationImpl.updateLocalization(LocalizationImpl.java:706)
             * com.liferay.portal.util.LocalizationImpl.updateLocalization(LocalizationImpl.java:688)
             * sun.reflect.GeneratedMethodAccessor92.invoke(Unknown Source)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test4()  throws Throwable  {
      LocalizationImpl localizationImpl0 = new LocalizationImpl();
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      PortalPreferencesWrapper portalPreferencesWrapper0 = new PortalPreferencesWrapper(portalPreferencesImpl0);
      String[] stringArray0 = new String[9];
      localizationImpl0.setPreferencesValues((PortletPreferences) portalPreferencesWrapper0, "", "", stringArray0);
      assertEquals(1, portalPreferencesImpl0.size());
  }

  @Test
  public void test5()  throws Throwable  {
      LocalizationImpl localizationImpl0 = new LocalizationImpl();
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      PortalPreferencesWrapper portalPreferencesWrapper0 = new PortalPreferencesWrapper(portalPreferencesImpl0);
      String[] stringArray0 = localizationImpl0.getPreferencesValues((PortletPreferences) portalPreferencesWrapper0, "&b%Yy4", "&b%Yy4");
      assertNotNull(stringArray0);
  }

  @Test
  public void test6()  throws Throwable  {
      LocalizationImpl localizationImpl0 = new LocalizationImpl();
      PortletPreferencesImpl portletPreferencesImpl0 = new PortletPreferencesImpl();
      PortletPreferencesWrapper portletPreferencesWrapper0 = new PortletPreferencesWrapper((PortletPreferences) portletPreferencesImpl0, "");
      localizationImpl0.setPreferencesValue((PortletPreferences) portletPreferencesWrapper0, "", "", "b#3Xu#<vW$b]](R");
      String string0 = localizationImpl0.getPreferencesValue((PortletPreferences) portletPreferencesImpl0, "", "");
      assertEquals(1, portletPreferencesImpl0.size());
      assertEquals("b#3Xu#<vW$b]](R", string0);
  }

  @Test
  public void test7()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          LocalizationImpl localizationImpl0 = new LocalizationImpl();
          // Undeclared exception!
          try {
            localizationImpl0.getDefaultLocale("sDna#Q\"~Rc0([[Z");
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.lang.RuntimePermission getClassLoader.portal)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * com.liferay.portal.kernel.util.PortalClassLoaderUtil.getClassLoader(PortalClassLoaderUtil.java:38)
             * com.liferay.portal.security.pacl.PACLClassLoaderUtil.getPortalClassLoader(PACLClassLoaderUtil.java:64)
             * com.liferay.portal.util.LocalizationImpl._getRootAttribute(LocalizationImpl.java:944)
             * com.liferay.portal.util.LocalizationImpl.getDefaultLocale(LocalizationImpl.java:133)
             * sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             * sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test8()  throws Throwable  {
      LocalizationImpl localizationImpl0 = new LocalizationImpl();
      // Undeclared exception!
      try {
        localizationImpl0.getLocalizedParameter((PortletRequest) null, "bm+J!!.[n");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          LocalizationImpl localizationImpl0 = new LocalizationImpl();
          // Undeclared exception!
          try {
            localizationImpl0.updateLocalization("8;N", "8;N", "8;N", "8;N");
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.lang.RuntimePermission getClassLoader.portal)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * com.liferay.portal.kernel.util.PortalClassLoaderUtil.getClassLoader(PortalClassLoaderUtil.java:38)
             * com.liferay.portal.security.pacl.PACLClassLoaderUtil.getPortalClassLoader(PACLClassLoaderUtil.java:64)
             * com.liferay.portal.util.LocalizationImpl.updateLocalization(LocalizationImpl.java:728)
             * com.liferay.portal.util.LocalizationImpl.updateLocalization(LocalizationImpl.java:714)
             * com.liferay.portal.util.LocalizationImpl.updateLocalization(LocalizationImpl.java:706)
             * com.liferay.portal.util.LocalizationImpl.updateLocalization(LocalizationImpl.java:698)
             * sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test10()  throws Throwable  {
      LocalizationImpl localizationImpl0 = new LocalizationImpl();
      String string0 = localizationImpl0.getLocalization("", "J$dPbP:`Uyc'", false);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      LocalizationImpl localizationImpl0 = new LocalizationImpl();
      // Undeclared exception!
      try {
        localizationImpl0.getLocalizationMap("", (ClassLoader) null, "", true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      LocalizationImpl localizationImpl0 = new LocalizationImpl();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Map<Locale, String> map0 = localizationImpl0.getLocalizationMap("8;N", classLoader0, (String) null, false);
      assertNull(map0);
  }

  @Test
  public void test13()  throws Throwable  {
      LocalizationImpl localizationImpl0 = new LocalizationImpl();
      String[] stringArray0 = new String[6];
      Map<Locale, String> map0 = localizationImpl0.getLocalizationMap(stringArray0, stringArray0);
      assertNotNull(map0);
      assertEquals(1, map0.size());
  }

  @Test
  public void test14()  throws Throwable  {
      LocalizationImpl localizationImpl0 = new LocalizationImpl();
      PortletPreferencesImpl portletPreferencesImpl0 = new PortletPreferencesImpl();
      String string0 = localizationImpl0.getPreferencesValue((PortletPreferences) portletPreferencesImpl0, "", "85V", false);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test
  public void test15()  throws Throwable  {
      LocalizationImpl localizationImpl0 = new LocalizationImpl();
      PortletPreferencesImpl portletPreferencesImpl0 = new PortletPreferencesImpl();
      String[] stringArray0 = localizationImpl0.getPreferencesValues((PortletPreferences) portletPreferencesImpl0, ",", ",", false);
      assertNotNull(stringArray0);
  }

  @Test
  public void test16()  throws Throwable  {
      LocalizationImpl localizationImpl0 = new LocalizationImpl();
      PortletPreferencesImpl portletPreferencesImpl0 = new PortletPreferencesImpl();
      PortletPreferencesWrapper portletPreferencesWrapper0 = new PortletPreferencesWrapper((PortletPreferences) portletPreferencesImpl0, "");
      localizationImpl0.setPreferencesValue((PortletPreferences) portletPreferencesWrapper0, "", "", "b#3Xu#<vW$b]](R");
      localizationImpl0.getPreferencesValues((PortletPreferences) portletPreferencesImpl0, "", "", true);
      assertEquals(1, portletPreferencesImpl0.size());
  }

  @Test
  public void test17()  throws Throwable  {
      LocalizationImpl localizationImpl0 = new LocalizationImpl();
      String string0 = localizationImpl0.removeLocalization((String) null, (String) null, (String) null);
      assertEquals("", string0);
  }

  @Test
  public void test18()  throws Throwable  {
      LocalizationImpl localizationImpl0 = new LocalizationImpl();
      String string0 = localizationImpl0.getLocalization("^(t*\u0002[X>T#+(Yzv", "^(t*\u0002[X>T#+(Yzv", false);
      assertEquals("", string0);
      assertNotNull(string0);
      
      String string1 = localizationImpl0.getLocalization("^(t*\u0002[X>T#+(Yzv", "edt", false);
      assertNotNull(string1);
      assertEquals("", string1);
  }

  @Test
  public void test19()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          LocalizationImpl localizationImpl0 = new LocalizationImpl();
          // Undeclared exception!
          try {
            localizationImpl0.updateLocalization("<root />", "<root />", "<root />");
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.lang.RuntimePermission getClassLoader.portal)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * com.liferay.portal.kernel.util.PortalClassLoaderUtil.getClassLoader(PortalClassLoaderUtil.java:38)
             * com.liferay.portal.security.pacl.PACLClassLoaderUtil.getPortalClassLoader(PACLClassLoaderUtil.java:64)
             * com.liferay.portal.util.LocalizationImpl.updateLocalization(LocalizationImpl.java:728)
             * com.liferay.portal.util.LocalizationImpl.updateLocalization(LocalizationImpl.java:714)
             * com.liferay.portal.util.LocalizationImpl.updateLocalization(LocalizationImpl.java:706)
             * com.liferay.portal.util.LocalizationImpl.updateLocalization(LocalizationImpl.java:688)
             * sun.reflect.GeneratedMethodAccessor92.invoke(Unknown Source)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }
}
