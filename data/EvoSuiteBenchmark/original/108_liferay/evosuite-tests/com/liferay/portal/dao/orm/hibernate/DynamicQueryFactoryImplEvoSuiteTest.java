/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.dao.orm.hibernate;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.dao.orm.hibernate.DynamicQueryFactoryImpl;
import com.liferay.portal.dao.orm.hibernate.DynamicQueryImpl;
import java.net.SocketAddress;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DynamicQueryFactoryImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DynamicQueryFactoryImpl dynamicQueryFactoryImpl0 = new DynamicQueryFactoryImpl();
      Class<?> class0 = SocketAddress.class;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      DynamicQueryImpl dynamicQueryImpl0 = (DynamicQueryImpl)dynamicQueryFactoryImpl0.forClass(class0, "zVJv]V%I.8B", classLoader0);
      DynamicQueryImpl dynamicQueryImpl1 = (DynamicQueryImpl)dynamicQueryFactoryImpl0.forClass(class0, classLoader0);
      assertFalse(dynamicQueryImpl1.equals(dynamicQueryImpl0));
  }

  @Test
  public void test1()  throws Throwable  {
      DynamicQueryFactoryImpl dynamicQueryFactoryImpl0 = new DynamicQueryFactoryImpl();
      Class<?> class0 = SocketAddress.class;
      DynamicQueryImpl dynamicQueryImpl0 = (DynamicQueryImpl)dynamicQueryFactoryImpl0.forClass(class0, "zVJv]V%I.8B");
      assertNotNull(dynamicQueryImpl0);
  }

  @Test
  public void test2()  throws Throwable  {
      DynamicQueryFactoryImpl dynamicQueryFactoryImpl0 = new DynamicQueryFactoryImpl();
      Class<?> class0 = DynamicQueryFactoryImpl.class;
      DynamicQueryImpl dynamicQueryImpl0 = (DynamicQueryImpl)dynamicQueryFactoryImpl0.forClass(class0);
      assertNotNull(dynamicQueryImpl0);
  }
}
