/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.security.pacl.checker;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.security.pacl.checker.NetChecker;
import java.awt.event.ItemListener;
import java.security.Permission;
import java.security.SecurityPermission;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class NetCheckerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      NetChecker netChecker0 = new NetChecker();
      netChecker0.afterPropertiesSet();
      assertEquals(false, netChecker0.hasGetProxySelector());
  }

  @Test
  public void test1()  throws Throwable  {
      NetChecker netChecker0 = new NetChecker();
      SecurityPermission securityPermission0 = new SecurityPermission("seKtCaretPsition", "seKtCaretPsition");
      netChecker0.checkPermission((Permission) securityPermission0);
      assertEquals(false, netChecker0.hasGetProxySelector());
  }

  @Test
  public void test2()  throws Throwable  {
      NetChecker netChecker0 = new NetChecker();
      SecurityPermission securityPermission0 = new SecurityPermission("getProxySelector", "getProxySelector");
      // Undeclared exception!
      try {
        netChecker0.checkPermission((Permission) securityPermission0);
        fail("Expecting exception: SecurityException");
      } catch(SecurityException e) {
        /*
         * Attempted to get proxy selector
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      NetChecker netChecker0 = new NetChecker();
      Class<?> class0 = ItemListener.class;
      netChecker0.logGetProxySelector(class0, 1);
      assertEquals(false, netChecker0.hasGetProxySelector());
  }
}
