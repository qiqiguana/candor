/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.messaging;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.messaging.LayoutsLocalPublisherRequest;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LayoutsLocalPublisherRequestEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LayoutsLocalPublisherRequest layoutsLocalPublisherRequest0 = new LayoutsLocalPublisherRequest();
      layoutsLocalPublisherRequest0.setTargetGroupId(0L);
      assertNull(layoutsLocalPublisherRequest0.getCronText());
  }

  @Test
  public void test1()  throws Throwable  {
      LayoutsLocalPublisherRequest layoutsLocalPublisherRequest0 = new LayoutsLocalPublisherRequest();
      layoutsLocalPublisherRequest0.setEndDate((Date) null);
      assertNull(layoutsLocalPublisherRequest0.getCommand());
  }

  @Test
  public void test2()  throws Throwable  {
      LayoutsLocalPublisherRequest layoutsLocalPublisherRequest0 = new LayoutsLocalPublisherRequest();
      layoutsLocalPublisherRequest0.setSourceGroupId(17L);
      assertEquals(17L, layoutsLocalPublisherRequest0.getSourceGroupId());
  }

  @Test
  public void test3()  throws Throwable  {
      LayoutsLocalPublisherRequest layoutsLocalPublisherRequest0 = new LayoutsLocalPublisherRequest();
      layoutsLocalPublisherRequest0.setStartDate((Date) null);
      assertEquals(0L, layoutsLocalPublisherRequest0.getUserId());
  }

  @Test
  public void test4()  throws Throwable  {
      LayoutsLocalPublisherRequest layoutsLocalPublisherRequest0 = new LayoutsLocalPublisherRequest();
      layoutsLocalPublisherRequest0.setParameterMap((Map<String, String[]>) null);
      assertNull(layoutsLocalPublisherRequest0.getCommand());
  }

  @Test
  public void test5()  throws Throwable  {
      LayoutsLocalPublisherRequest layoutsLocalPublisherRequest0 = new LayoutsLocalPublisherRequest();
      Date date0 = layoutsLocalPublisherRequest0.getEndDate();
      assertNull(date0);
  }

  @Test
  public void test6()  throws Throwable  {
      LayoutsLocalPublisherRequest layoutsLocalPublisherRequest0 = new LayoutsLocalPublisherRequest();
      layoutsLocalPublisherRequest0.setCronText("TtvElI");
      assertEquals("TtvElI", layoutsLocalPublisherRequest0.getCronText());
  }

  @Test
  public void test7()  throws Throwable  {
      LayoutsLocalPublisherRequest layoutsLocalPublisherRequest0 = new LayoutsLocalPublisherRequest();
      boolean boolean0 = layoutsLocalPublisherRequest0.isPrivateLayout();
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      LayoutsLocalPublisherRequest layoutsLocalPublisherRequest0 = new LayoutsLocalPublisherRequest();
      String string0 = layoutsLocalPublisherRequest0.getCommand();
      assertNull(string0);
  }

  @Test
  public void test9()  throws Throwable  {
      LayoutsLocalPublisherRequest layoutsLocalPublisherRequest0 = new LayoutsLocalPublisherRequest();
      Map<String, String[]> map0 = layoutsLocalPublisherRequest0.getParameterMap();
      assertNull(map0);
  }

  @Test
  public void test10()  throws Throwable  {
      LayoutsLocalPublisherRequest layoutsLocalPublisherRequest0 = new LayoutsLocalPublisherRequest();
      layoutsLocalPublisherRequest0.setLayoutIdMap((Map<Long, Boolean>) null);
      assertEquals(false, layoutsLocalPublisherRequest0.isPrivateLayout());
  }

  @Test
  public void test11()  throws Throwable  {
      LayoutsLocalPublisherRequest layoutsLocalPublisherRequest0 = new LayoutsLocalPublisherRequest();
      layoutsLocalPublisherRequest0.setUserId(0L);
      assertNull(layoutsLocalPublisherRequest0.getCronText());
  }

  @Test
  public void test12()  throws Throwable  {
      LayoutsLocalPublisherRequest layoutsLocalPublisherRequest0 = new LayoutsLocalPublisherRequest();
      long long0 = layoutsLocalPublisherRequest0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test13()  throws Throwable  {
      HashMap<Long, Boolean> hashMap0 = new HashMap<Long, Boolean>();
      LayoutsLocalPublisherRequest layoutsLocalPublisherRequest0 = new LayoutsLocalPublisherRequest("", 0L, 0L, 1L, false, (Map<Long, Boolean>) hashMap0, (Map<String, String[]>) null, (Date) null, (Date) null);
      assertEquals(0L, layoutsLocalPublisherRequest0.getSourceGroupId());
      assertEquals("", layoutsLocalPublisherRequest0.getCommand());
      assertEquals(false, layoutsLocalPublisherRequest0.isPrivateLayout());
      assertEquals(1L, layoutsLocalPublisherRequest0.getTargetGroupId());
      assertEquals(0L, layoutsLocalPublisherRequest0.getUserId());
  }

  @Test
  public void test14()  throws Throwable  {
      LayoutsLocalPublisherRequest layoutsLocalPublisherRequest0 = new LayoutsLocalPublisherRequest();
      Map<Long, Boolean> map0 = layoutsLocalPublisherRequest0.getLayoutIdMap();
      assertNull(map0);
  }

  @Test
  public void test15()  throws Throwable  {
      LayoutsLocalPublisherRequest layoutsLocalPublisherRequest0 = new LayoutsLocalPublisherRequest();
      Date date0 = layoutsLocalPublisherRequest0.getScheduledFireTime();
      assertNull(date0);
  }

  @Test
  public void test16()  throws Throwable  {
      LayoutsLocalPublisherRequest layoutsLocalPublisherRequest0 = new LayoutsLocalPublisherRequest();
      long long0 = layoutsLocalPublisherRequest0.getSourceGroupId();
      assertEquals(0L, long0);
  }

  @Test
  public void test17()  throws Throwable  {
      LayoutsLocalPublisherRequest layoutsLocalPublisherRequest0 = new LayoutsLocalPublisherRequest();
      layoutsLocalPublisherRequest0.setCommand("");
      assertEquals("", layoutsLocalPublisherRequest0.getCommand());
  }

  @Test
  public void test18()  throws Throwable  {
      LayoutsLocalPublisherRequest layoutsLocalPublisherRequest0 = new LayoutsLocalPublisherRequest();
      layoutsLocalPublisherRequest0.setScheduledFireTime((Date) null);
      assertNull(layoutsLocalPublisherRequest0.getCommand());
  }

  @Test
  public void test19()  throws Throwable  {
      LayoutsLocalPublisherRequest layoutsLocalPublisherRequest0 = new LayoutsLocalPublisherRequest();
      layoutsLocalPublisherRequest0.setPrivateLayout(false);
      assertEquals(false, layoutsLocalPublisherRequest0.isPrivateLayout());
  }

  @Test
  public void test20()  throws Throwable  {
      LayoutsLocalPublisherRequest layoutsLocalPublisherRequest0 = new LayoutsLocalPublisherRequest();
      Date date0 = layoutsLocalPublisherRequest0.getStartDate();
      assertNull(date0);
  }

  @Test
  public void test21()  throws Throwable  {
      LayoutsLocalPublisherRequest layoutsLocalPublisherRequest0 = new LayoutsLocalPublisherRequest();
      String string0 = layoutsLocalPublisherRequest0.getCronText();
      assertNull(string0);
  }

  @Test
  public void test22()  throws Throwable  {
      LayoutsLocalPublisherRequest layoutsLocalPublisherRequest0 = new LayoutsLocalPublisherRequest();
      long long0 = layoutsLocalPublisherRequest0.getTargetGroupId();
      assertEquals(0L, long0);
  }
}
