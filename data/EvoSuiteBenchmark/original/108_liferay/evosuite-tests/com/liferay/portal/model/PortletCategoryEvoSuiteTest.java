/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.PortletCategory;
import java.util.Set;
import java.util.TreeSet;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PortletCategoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PortletCategory portletCategory0 = new PortletCategory("");
      assertNotNull(portletCategory0);
      
      portletCategory0.addCategory(portletCategory0);
      // Undeclared exception!
      try {
        portletCategory0.getRootCategory();
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      PortletCategory portletCategory0 = new PortletCategory("", (Set<String>) treeSet0);
      portletCategory0.setPortletIds((Set<String>) treeSet0);
      assertEquals(true, treeSet0.isEmpty());
  }

  @Test
  public void test2()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      PortletCategory portletCategory0 = new PortletCategory(")%CU_4O'n", (Set<String>) treeSet0);
      portletCategory0.merge(portletCategory0);
      assertEquals(false, portletCategory0.isHidden());
  }

  @Test
  public void test3()  throws Throwable  {
      PortletCategory portletCategory0 = new PortletCategory();
      PortletCategory portletCategory1 = portletCategory0.getParentCategory();
      assertNull(portletCategory1);
  }

  @Test
  public void test4()  throws Throwable  {
      PortletCategory portletCategory0 = new PortletCategory("");
      String string0 = portletCategory0.getPath();
      assertEquals("", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      PortletCategory portletCategory0 = new PortletCategory("//", (Set<String>) treeSet0);
      assertNotNull(portletCategory0);
      assertEquals("//", portletCategory0.getPath());
      assertEquals("", portletCategory0.getName());
  }

  @Test
  public void test6()  throws Throwable  {
      PortletCategory portletCategory0 = new PortletCategory("");
      PortletCategory portletCategory1 = portletCategory0.getRootCategory();
      assertEquals(false, portletCategory1.isHidden());
  }

  @Test
  public void test7()  throws Throwable  {
      PortletCategory portletCategory0 = new PortletCategory();
      assertNotNull(portletCategory0);
      
      boolean boolean0 = portletCategory0.isHidden();
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      PortletCategory portletCategory0 = new PortletCategory("category.hidden");
      assertNotNull(portletCategory0);
      
      boolean boolean0 = portletCategory0.isHidden();
      assertEquals(true, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      PortletCategory portletCategory0 = new PortletCategory();
      assertNotNull(portletCategory0);
      
      portletCategory0.addCategory(portletCategory0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      // Undeclared exception!
      try {
        portletCategory0.separate((Set<String>) treeSet0);
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      PortletCategory portletCategory0 = new PortletCategory(")%CU_4O'n", (Set<String>) treeSet0);
      treeSet0.add("");
      portletCategory0.separate(")%CU_4O'n");
      assertEquals(false, treeSet0.isEmpty());
      assertEquals(1, treeSet0.size());
  }

  @Test
  public void test11()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      PortletCategory portletCategory0 = new PortletCategory(")%CU_4O'n", (Set<String>) treeSet0);
      assertNotNull(portletCategory0);
      
      treeSet0.add(")%CU_4O'n");
      portletCategory0.separate(")%CU_4O'n");
      assertEquals("[]", treeSet0.toString());
      assertEquals(0, treeSet0.size());
  }

  @Test
  public void test12()  throws Throwable  {
      PortletCategory portletCategory0 = new PortletCategory("category.hidden");
      assertNotNull(portletCategory0);
      
      portletCategory0.addCategory(portletCategory0);
      // Undeclared exception!
      try {
        portletCategory0.merge(portletCategory0, portletCategory0);
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      PortletCategory portletCategory0 = new PortletCategory();
      assertNotNull(portletCategory0);
      
      PortletCategory portletCategory1 = new PortletCategory("");
      portletCategory0.addCategory(portletCategory1);
      portletCategory0.merge(portletCategory1, portletCategory0);
      assertEquals("root////", portletCategory1.getPath());
  }
}
