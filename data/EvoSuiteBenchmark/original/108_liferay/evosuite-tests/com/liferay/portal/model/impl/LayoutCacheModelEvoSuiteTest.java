/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.impl.LayoutCacheModel;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import javax.swing.DebugGraphics;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LayoutCacheModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LayoutCacheModel layoutCacheModel0 = new LayoutCacheModel();
      // Undeclared exception!
      try {
        layoutCacheModel0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      LayoutCacheModel layoutCacheModel0 = new LayoutCacheModel();
      String string0 = layoutCacheModel0.toString();
      assertEquals("{uuid=null, plid=0, groupId=0, companyId=0, createDate=0, modifiedDate=0, privateLayout=false, layoutId=0, parentLayoutId=0, name=null, title=null, description=null, keywords=null, robots=null, type=null, typeSettings=null, hidden=false, friendlyURL=null, iconImage=false, iconImageId=0, themeId=null, colorSchemeId=null, wapThemeId=null, wapColorSchemeId=null, css=null, priority=0, layoutPrototypeUuid=null, layoutPrototypeLinkEnabled=false, sourcePrototypeLayoutUuid=null}", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      LayoutCacheModel layoutCacheModel0 = new LayoutCacheModel();
      PrintStream printStream0 = DebugGraphics.logStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) printStream0);
      layoutCacheModel0.uuid = "+gypa";
      layoutCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(false, layoutCacheModel0.iconImage);
  }

  @Test
  public void test3()  throws Throwable  {
      LayoutCacheModel layoutCacheModel0 = new LayoutCacheModel();
      layoutCacheModel0.title = "+gypa";
      PrintStream printStream0 = DebugGraphics.logStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) printStream0);
      layoutCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0L, layoutCacheModel0.plid);
  }

  @Test
  public void test4()  throws Throwable  {
      LayoutCacheModel layoutCacheModel0 = new LayoutCacheModel();
      PrintStream printStream0 = DebugGraphics.logStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) printStream0);
      layoutCacheModel0.description = "";
      layoutCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(false, layoutCacheModel0.privateLayout);
  }

  @Test
  public void test5()  throws Throwable  {
      LayoutCacheModel layoutCacheModel0 = new LayoutCacheModel();
      PrintStream printStream0 = DebugGraphics.logStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) printStream0);
      layoutCacheModel0.keywords = "3";
      layoutCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(false, layoutCacheModel0.iconImage);
  }

  @Test
  public void test6()  throws Throwable  {
      LayoutCacheModel layoutCacheModel0 = new LayoutCacheModel();
      PrintStream printStream0 = DebugGraphics.logStream();
      layoutCacheModel0.friendlyURL = "";
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) printStream0);
      layoutCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0, layoutCacheModel0.priority);
  }
}
