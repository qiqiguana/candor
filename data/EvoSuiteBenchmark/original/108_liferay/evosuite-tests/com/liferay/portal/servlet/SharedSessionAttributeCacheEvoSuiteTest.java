/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.servlet;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.servlet.SharedSessionAttributeCache;
import java.util.Map;
import javax.servlet.http.HttpSession;
import org.junit.BeforeClass;
import org.tuckey.web.MockSession;

@RunWith(EvoSuiteRunner.class)
public class SharedSessionAttributeCacheEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      SharedSessionAttributeCache sharedSessionAttributeCache0 = SharedSessionAttributeCache.getInstance((HttpSession) mockSession0);
      sharedSessionAttributeCache0.removeAttribute("");
  }

  @Test
  public void test1()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      SharedSessionAttributeCache sharedSessionAttributeCache0 = SharedSessionAttributeCache.getInstance((HttpSession) mockSession0);
      // Undeclared exception!
      try {
        sharedSessionAttributeCache0.setAttribute("", (Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      SharedSessionAttributeCache sharedSessionAttributeCache0 = SharedSessionAttributeCache.getInstance((HttpSession) mockSession0);
      Map<String, Object> map0 = sharedSessionAttributeCache0.getValues();
      assertEquals(0, map0.size());
  }

  @Test
  public void test3()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      SharedSessionAttributeCache sharedSessionAttributeCache0 = SharedSessionAttributeCache.getInstance((HttpSession) mockSession0);
      assertNotNull(sharedSessionAttributeCache0);
      
      boolean boolean0 = sharedSessionAttributeCache0.contains("");
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      SharedSessionAttributeCache sharedSessionAttributeCache0 = SharedSessionAttributeCache.getInstance((HttpSession) mockSession0);
      assertNotNull(sharedSessionAttributeCache0);
      
      SharedSessionAttributeCache sharedSessionAttributeCache1 = SharedSessionAttributeCache.getInstance((HttpSession) mockSession0);
      assertSame(sharedSessionAttributeCache1, sharedSessionAttributeCache0);
  }
}
