/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.security.permission;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.Group;
import com.liferay.portal.model.Organization;
import com.liferay.portal.model.Role;
import com.liferay.portal.security.permission.PermissionChecker;
import com.liferay.portal.security.permission.PermissionCheckerBagImpl;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PermissionCheckerBagImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PermissionCheckerBagImpl permissionCheckerBagImpl0 = new PermissionCheckerBagImpl();
      // Undeclared exception!
      try {
        permissionCheckerBagImpl0.getRoleIds();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      PermissionCheckerBagImpl permissionCheckerBagImpl0 = new PermissionCheckerBagImpl();
      List<Group> list0 = permissionCheckerBagImpl0.getGroups();
      assertNull(list0);
  }

  @Test
  public void test2()  throws Throwable  {
      PermissionCheckerBagImpl permissionCheckerBagImpl0 = new PermissionCheckerBagImpl(276L, (List<Group>) null, (List<Organization>) null, (List<Group>) null, (List<Group>) null, (List<Group>) null, (List<Role>) null);
      List<Organization> list0 = permissionCheckerBagImpl0.getUserOrgs();
      assertNull(list0);
  }

  @Test
  public void test3()  throws Throwable  {
      PermissionCheckerBagImpl permissionCheckerBagImpl0 = new PermissionCheckerBagImpl(276L, (List<Group>) null, (List<Organization>) null, (List<Group>) null, (List<Group>) null, (List<Group>) null, (List<Role>) null);
      List<Group> list0 = permissionCheckerBagImpl0.getUserGroups();
      assertNull(list0);
  }

  @Test
  public void test4()  throws Throwable  {
      PermissionCheckerBagImpl permissionCheckerBagImpl0 = new PermissionCheckerBagImpl();
      List<Group> list0 = permissionCheckerBagImpl0.getUserOrgGroups();
      assertNull(list0);
  }

  @Test
  public void test5()  throws Throwable  {
      PermissionCheckerBagImpl permissionCheckerBagImpl0 = new PermissionCheckerBagImpl();
      List<Group> list0 = permissionCheckerBagImpl0.getUserUserGroupGroups();
      assertNull(list0);
  }

  @Test
  public void test6()  throws Throwable  {
      PermissionCheckerBagImpl permissionCheckerBagImpl0 = new PermissionCheckerBagImpl();
      boolean boolean0 = permissionCheckerBagImpl0.isOrganizationAdminImpl((PermissionChecker) null, (Organization) null);
      assertEquals(false, boolean0);
  }
}
