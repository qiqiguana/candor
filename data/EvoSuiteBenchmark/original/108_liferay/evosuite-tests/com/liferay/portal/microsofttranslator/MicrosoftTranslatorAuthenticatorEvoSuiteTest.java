/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.microsofttranslator;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.microsofttranslator.MicrosoftTranslatorAuthenticator;
import org.evosuite.runtime.System;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MicrosoftTranslatorAuthenticatorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MicrosoftTranslatorAuthenticator microsoftTranslatorAuthenticator0 = null;
      try {
        microsoftTranslatorAuthenticator0 = new MicrosoftTranslatorAuthenticator();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsValues
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      MicrosoftTranslatorAuthenticator microsoftTranslatorAuthenticator0 = new MicrosoftTranslatorAuthenticator("_?-HS;YSK~N]jbO", "_?-HS;YSK~N]jbO");
      String string0 = microsoftTranslatorAuthenticator0.getError();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      MicrosoftTranslatorAuthenticator microsoftTranslatorAuthenticator0 = new MicrosoftTranslatorAuthenticator("_?-HS;YSK~N]jbO", "_?-HS;YSK~N]jbO");
      assertNotNull(microsoftTranslatorAuthenticator0);
      
      microsoftTranslatorAuthenticator0.getAccessToken();
      assertEquals(false, microsoftTranslatorAuthenticator0.isStale());
  }

  @Test
  public void test3()  throws Throwable  {
      MicrosoftTranslatorAuthenticator microsoftTranslatorAuthenticator0 = new MicrosoftTranslatorAuthenticator("_?-HS;YSK~N]jbO", "_?-HS;YSK~N]jbO");
      assertEquals(false, microsoftTranslatorAuthenticator0.isStale());
      assertNotNull(microsoftTranslatorAuthenticator0);
      
      System.setCurrentTimeMillis((-9223372036854775775L));
      microsoftTranslatorAuthenticator0.getAccessToken();
      assertEquals(true, microsoftTranslatorAuthenticator0.isStale());
  }
}
