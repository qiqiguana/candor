/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.LayoutSet;
import com.liferay.portal.model.LayoutSetSoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LayoutSetSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      layoutSetSoap0.setPrimaryKey(7L);
      assertEquals(7L, layoutSetSoap0.getPrimaryKey());
      assertEquals(7L, layoutSetSoap0.getLayoutSetId());
  }

  @Test
  public void test1()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      boolean boolean0 = layoutSetSoap0.getPrivateLayout();
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      long long0 = layoutSetSoap0.getLogoId();
      assertEquals(0L, long0);
  }

  @Test
  public void test3()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      layoutSetSoap0.setCompanyId(0L);
      assertNull(layoutSetSoap0.getCss());
  }

  @Test
  public void test4()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      long long0 = layoutSetSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test5()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      String string0 = layoutSetSoap0.getThemeId();
      assertNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      layoutSetSoap0.setLayoutSetPrototypeUuid((String) null);
      assertEquals(0L, layoutSetSoap0.getGroupId());
  }

  @Test
  public void test7()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      layoutSetSoap0.setWapThemeId("GJ5G@<CR_");
      assertEquals(0, layoutSetSoap0.getPageCount());
  }

  @Test
  public void test8()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      layoutSetSoap0.setLayoutSetPrototypeLinkEnabled(false);
      assertEquals(false, layoutSetSoap0.isLayoutSetPrototypeLinkEnabled());
      assertEquals(false, layoutSetSoap0.getLayoutSetPrototypeLinkEnabled());
  }

  @Test
  public void test9()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      long long0 = layoutSetSoap0.getLayoutSetId();
      assertEquals(0L, long0);
  }

  @Test
  public void test10()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      layoutSetSoap0.setCreateDate((Date) null);
      assertNull(layoutSetSoap0.getLayoutSetPrototypeUuid());
  }

  @Test
  public void test11()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      boolean boolean0 = layoutSetSoap0.isLogo();
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      boolean boolean0 = layoutSetSoap0.getLogo();
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      layoutSetSoap0.setLogoId(0L);
      assertEquals(false, layoutSetSoap0.getPrivateLayout());
  }

  @Test
  public void test14()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      layoutSetSoap0.setSettings("zsFY");
      assertEquals(0L, layoutSetSoap0.getLogoId());
  }

  @Test
  public void test15()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      layoutSetSoap0.setCss((String) null);
      assertNull(layoutSetSoap0.getWapColorSchemeId());
  }

  @Test
  public void test16()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      String string0 = layoutSetSoap0.getLayoutSetPrototypeUuid();
      assertNull(string0);
  }

  @Test
  public void test17()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      layoutSetSoap0.setLogo(false);
      assertEquals(false, layoutSetSoap0.getLogo());
      assertEquals(false, layoutSetSoap0.isLogo());
  }

  @Test
  public void test18()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      String string0 = layoutSetSoap0.getSettings();
      assertNull(string0);
  }

  @Test
  public void test19()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      String string0 = layoutSetSoap0.getWapThemeId();
      assertNull(string0);
  }

  @Test
  public void test20()  throws Throwable  {
      LinkedList<LayoutSet> linkedList0 = new LinkedList<LayoutSet>();
      linkedList0.addFirst((LayoutSet) null);
      // Undeclared exception!
      try {
        LayoutSetSoap.toSoapModels((List<LayoutSet>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test21()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      layoutSetSoap0.setThemeId((String) null);
      assertNull(layoutSetSoap0.getColorSchemeId());
  }

  @Test
  public void test22()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      String string0 = layoutSetSoap0.getColorSchemeId();
      assertNull(string0);
  }

  @Test
  public void test23()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      boolean boolean0 = layoutSetSoap0.isPrivateLayout();
      assertEquals(false, boolean0);
  }

  @Test
  public void test24()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      long long0 = layoutSetSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test25()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      long long0 = layoutSetSoap0.getGroupId();
      assertEquals(0L, long0);
  }

  @Test
  public void test26()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      Date date0 = layoutSetSoap0.getModifiedDate();
      assertNull(date0);
  }

  @Test
  public void test27()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      Date date0 = new Date();
      layoutSetSoap0.setModifiedDate(date0);
      assertEquals(false, layoutSetSoap0.getPrivateLayout());
  }

  @Test
  public void test28()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      int int0 = layoutSetSoap0.getPageCount();
      assertEquals(0, int0);
  }

  @Test
  public void test29()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      layoutSetSoap0.setPageCount((-1987));
      assertEquals(-1987, layoutSetSoap0.getPageCount());
  }

  @Test
  public void test30()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      boolean boolean0 = layoutSetSoap0.getLayoutSetPrototypeLinkEnabled();
      assertEquals(false, boolean0);
  }

  @Test
  public void test31()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      layoutSetSoap0.setColorSchemeId((String) null);
      assertNull(layoutSetSoap0.getWapThemeId());
  }

  @Test
  public void test32()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      String string0 = layoutSetSoap0.getCss();
      assertNull(string0);
  }

  @Test
  public void test33()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      layoutSetSoap0.setGroupId(0L);
      assertEquals(false, layoutSetSoap0.getPrivateLayout());
  }

  @Test
  public void test34()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      layoutSetSoap0.setPrivateLayout(false);
      assertEquals(false, layoutSetSoap0.isPrivateLayout());
      assertEquals(false, layoutSetSoap0.getPrivateLayout());
  }

  @Test
  public void test35()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      boolean boolean0 = layoutSetSoap0.isLayoutSetPrototypeLinkEnabled();
      assertEquals(false, boolean0);
  }

  @Test
  public void test36()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      Date date0 = layoutSetSoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test37()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      layoutSetSoap0.setWapColorSchemeId("GJ5G@<CR_");
      assertEquals(false, layoutSetSoap0.isPrivateLayout());
  }

  @Test
  public void test38()  throws Throwable  {
      LayoutSetSoap layoutSetSoap0 = new LayoutSetSoap();
      String string0 = layoutSetSoap0.getWapColorSchemeId();
      assertNull(string0);
  }

  @Test
  public void test39()  throws Throwable  {
      LayoutSet[][] layoutSetArray0 = new LayoutSet[1][3];
      // Undeclared exception!
      try {
        LayoutSetSoap.toSoapModels(layoutSetArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test40()  throws Throwable  {
      LinkedList<LayoutSet> linkedList0 = new LinkedList<LayoutSet>();
      LayoutSetSoap[] layoutSetSoapArray0 = LayoutSetSoap.toSoapModels((List<LayoutSet>) linkedList0);
      assertNotNull(layoutSetSoapArray0);
  }
}
