/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.cluster;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.cluster.Address;
import com.liferay.portal.kernel.cluster.ClusterMessageType;
import com.liferay.portal.kernel.cluster.ClusterNode;
import com.liferay.portal.kernel.cluster.ClusterRequest;
import com.liferay.portal.kernel.util.MethodHandler;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ClusterRequestEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Address[] addressArray0 = new Address[1];
      // Undeclared exception!
      try {
        ClusterRequest.createUnicastRequest((MethodHandler) null, addressArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try {
        ClusterRequest.createMulticastRequest((MethodHandler) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ClusterMessageType clusterMessageType0 = ClusterMessageType.UPDATE;
      // Undeclared exception!
      try {
        ClusterRequest.createClusterRequest(clusterMessageType0, (ClusterNode) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      String[] stringArray0 = new String[15];
      // Undeclared exception!
      try {
        ClusterRequest.createUnicastRequest((MethodHandler) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
