/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.io.unsync;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.io.unsync.UnsyncStringWriter;
import com.liferay.portal.kernel.util.StringBundler;
import jline.JLineStringBuilder;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UnsyncStringWriterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UnsyncStringWriter unsyncStringWriter0 = new UnsyncStringWriter((-339));
      assertNotNull(unsyncStringWriter0);
      
      char[] charArray0 = new char[3];
      unsyncStringWriter0.write(charArray0);
      assertEquals("\u0000\u0000\u0000", unsyncStringWriter0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      UnsyncStringWriter unsyncStringWriter0 = new UnsyncStringWriter(0);
      StringBundler stringBundler0 = unsyncStringWriter0.getStringBundler();
      assertNotNull(stringBundler0);
      assertEquals(16, stringBundler0.capacity());
  }

  @Test
  public void test2()  throws Throwable  {
      UnsyncStringWriter unsyncStringWriter0 = new UnsyncStringWriter(0);
      unsyncStringWriter0.append('~');
      assertEquals("~", unsyncStringWriter0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      UnsyncStringWriter unsyncStringWriter0 = new UnsyncStringWriter();
      unsyncStringWriter0.reset();
      assertEquals("", unsyncStringWriter0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      UnsyncStringWriter unsyncStringWriter0 = new UnsyncStringWriter(false, 0);
      unsyncStringWriter0.close();
      assertEquals("", unsyncStringWriter0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      UnsyncStringWriter unsyncStringWriter0 = new UnsyncStringWriter(0);
      unsyncStringWriter0.flush();
      assertEquals("", unsyncStringWriter0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      UnsyncStringWriter unsyncStringWriter0 = new UnsyncStringWriter(false);
      String string0 = unsyncStringWriter0.toString();
      assertEquals("", string0);
  }

  @Test
  public void test7()  throws Throwable  {
      UnsyncStringWriter unsyncStringWriter0 = new UnsyncStringWriter(0);
      JLineStringBuilder jLineStringBuilder0 = new JLineStringBuilder();
      UnsyncStringWriter unsyncStringWriter1 = unsyncStringWriter0.append((CharSequence) jLineStringBuilder0);
      assertNotNull(unsyncStringWriter1);
      assertEquals("", unsyncStringWriter1.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      UnsyncStringWriter unsyncStringWriter0 = new UnsyncStringWriter(false, 0);
      assertNotNull(unsyncStringWriter0);
      
      unsyncStringWriter0.append((CharSequence) null);
      assertEquals("null", unsyncStringWriter0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      UnsyncStringWriter unsyncStringWriter0 = new UnsyncStringWriter(false, 0);
      assertNotNull(unsyncStringWriter0);
      
      StringBuilder stringBuilder0 = unsyncStringWriter0.getStringBuilder();
      assertNotNull(stringBuilder0);
      
      UnsyncStringWriter unsyncStringWriter1 = unsyncStringWriter0.append((CharSequence) stringBuilder0, 0, 0);
      assertEquals("", unsyncStringWriter0.toString());
      assertNotNull(unsyncStringWriter1);
      assertEquals("", stringBuilder0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      UnsyncStringWriter unsyncStringWriter0 = new UnsyncStringWriter(true, 0);
      UnsyncStringWriter unsyncStringWriter1 = unsyncStringWriter0.append((CharSequence) null, 0, 0);
      assertNotNull(unsyncStringWriter1);
      assertEquals("", unsyncStringWriter0.toString());
      assertEquals("", unsyncStringWriter1.toString());
  }

  @Test
  public void test11()  throws Throwable  {
      UnsyncStringWriter unsyncStringWriter0 = new UnsyncStringWriter(false, 16);
      assertNotNull(unsyncStringWriter0);
      
      unsyncStringWriter0.reset();
      assertEquals("", unsyncStringWriter0.toString());
  }

  @Test
  public void test12()  throws Throwable  {
      UnsyncStringWriter unsyncStringWriter0 = new UnsyncStringWriter(0);
      String string0 = unsyncStringWriter0.toString();
      assertEquals("", string0);
  }

  @Test
  public void test13()  throws Throwable  {
      UnsyncStringWriter unsyncStringWriter0 = new UnsyncStringWriter(0);
      char[] charArray0 = new char[1];
      unsyncStringWriter0.write(charArray0, 0, 0);
      assertEquals("", unsyncStringWriter0.toString());
  }

  @Test
  public void test14()  throws Throwable  {
      UnsyncStringWriter unsyncStringWriter0 = new UnsyncStringWriter(false, 0);
      assertNotNull(unsyncStringWriter0);
      
      char[] charArray0 = new char[3];
      unsyncStringWriter0.write(charArray0);
      assertEquals("\u0000\u0000\u0000", unsyncStringWriter0.toString());
  }

  @Test
  public void test15()  throws Throwable  {
      UnsyncStringWriter unsyncStringWriter0 = new UnsyncStringWriter(false);
      unsyncStringWriter0.append('~');
      assertEquals("~", unsyncStringWriter0.toString());
  }

  @Test
  public void test16()  throws Throwable  {
      UnsyncStringWriter unsyncStringWriter0 = new UnsyncStringWriter();
      unsyncStringWriter0.write((-1589));
      assertEquals("\uF9CB", unsyncStringWriter0.toString());
  }

  @Test
  public void test17()  throws Throwable  {
      UnsyncStringWriter unsyncStringWriter0 = new UnsyncStringWriter(true, 0);
      unsyncStringWriter0.write((String) null, (-1297), 1247);
      assertEquals("null", unsyncStringWriter0.toString());
  }

  @Test
  public void test18()  throws Throwable  {
      UnsyncStringWriter unsyncStringWriter0 = new UnsyncStringWriter((-339));
      unsyncStringWriter0.write("", 0, 0);
      assertEquals("", unsyncStringWriter0.toString());
  }

  @Test
  public void test19()  throws Throwable  {
      UnsyncStringWriter unsyncStringWriter0 = new UnsyncStringWriter(false, 12);
      assertNotNull(unsyncStringWriter0);
      
      // Undeclared exception!
      try {
        unsyncStringWriter0.write("$>XG%_P", 12, 12);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: 24
         */
      }
  }

  @Test
  public void test20()  throws Throwable  {
      UnsyncStringWriter unsyncStringWriter0 = new UnsyncStringWriter(true);
      // Undeclared exception!
      try {
        unsyncStringWriter0.write(".unsafe.create.limit", 0, (-724));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: -724
         */
      }
  }
}
