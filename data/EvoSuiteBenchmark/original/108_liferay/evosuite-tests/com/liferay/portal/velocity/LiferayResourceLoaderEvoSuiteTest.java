/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.velocity;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.velocity.LiferayResourceLoader;
import org.apache.commons.collections.ExtendedProperties;
import org.apache.velocity.exception.ResourceNotFoundException;
import org.apache.velocity.runtime.resource.ContentResource;
import org.apache.velocity.runtime.resource.Resource;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LiferayResourceLoaderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LiferayResourceLoader liferayResourceLoader0 = new LiferayResourceLoader();
      ExtendedProperties extendedProperties0 = new ExtendedProperties();
      // Undeclared exception!
      try {
        liferayResourceLoader0.init(extendedProperties0);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsValues
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      LiferayResourceLoader liferayResourceLoader0 = new LiferayResourceLoader();
      long long0 = liferayResourceLoader0.getLastModified((Resource) null);
      assertEquals(0L, long0);
  }

  @Test
  public void test2()  throws Throwable  {
      LiferayResourceLoader liferayResourceLoader0 = new LiferayResourceLoader();
      try {
        liferayResourceLoader0.getResourceStream("@");
        fail("Expecting exception: ResourceNotFoundException");
      } catch(ResourceNotFoundException e) {
        /*
         * @
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      LiferayResourceLoader liferayResourceLoader0 = new LiferayResourceLoader();
      ContentResource contentResource0 = new ContentResource();
      boolean boolean0 = liferayResourceLoader0.isSourceModified((Resource) contentResource0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      LiferayResourceLoader liferayResourceLoader0 = new LiferayResourceLoader();
      boolean boolean0 = liferayResourceLoader0.resourceExists((String) null);
      assertEquals(false, boolean0);
  }
}
