/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.test;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.test.RunAfterTestMethodCallback;
import com.liferay.portal.kernel.test.TestContextHandler;
import java.lang.reflect.Method;
import org.junit.BeforeClass;
import org.junit.internal.runners.model.MultipleFailureException;
import org.junit.internal.runners.statements.ExpectException;
import org.junit.runners.model.Statement;

@RunWith(EvoSuiteRunner.class)
public class RunAfterTestMethodCallbackEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Class<?> class0 = RunAfterTestMethodCallback.class;
      TestContextHandler testContextHandler0 = new TestContextHandler(class0);
      RunAfterTestMethodCallback runAfterTestMethodCallback0 = new RunAfterTestMethodCallback((Object) "com.liferay.portal.kernel.test.RunAfterTestMethodCallback", (Method) null, (Statement) null, testContextHandler0);
      runAfterTestMethodCallback0.evaluate();
  }

  @Test
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      Class<?> class0 = RunAfterTestMethodCallback.class;
      ExpectException expectException0 = new ExpectException((Statement) null, class0);
      TestContextHandler testContextHandler0 = new TestContextHandler(class0);
      RunAfterTestMethodCallback runAfterTestMethodCallback0 = new RunAfterTestMethodCallback(object0, (Method) null, (Statement) expectException0, testContextHandler0);
      try {
        runAfterTestMethodCallback0.evaluate();
        fail("Expecting exception: MultipleFailureException");
      } catch(MultipleFailureException e) {
        /*
         * There were 1 errors:
         *   java.lang.Exception(Unexpected exception, expected<com.liferay.portal.kernel.test.RunAfterTestMethodCallback> but was<java.lang.NullPointerException>)
         */
      }
  }
}
