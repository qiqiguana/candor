/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.servlet;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import ch.qos.logback.core.pattern.color.MagentaCompositeConverter;
import com.liferay.portal.kernel.servlet.SessionErrors;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portlet.ActionRequestImpl;
import com.liferay.portlet.EventRequestImpl;
import com.liferay.portlet.PortletRequestImpl;
import com.liferay.portlet.PortletServletSession;
import com.liferay.portlet.PortletSessionImpl;
import com.liferay.portlet.RenderRequestImpl;
import com.liferay.portlet.ResourceRequestImpl;
import java.util.Iterator;
import java.util.Set;
import javax.portlet.EventRequest;
import javax.portlet.PortletContext;
import javax.portlet.PortletRequest;
import javax.portlet.PortletSession;
import javax.portlet.ResourceRequest;
import javax.portlet.filter.EventRequestWrapper;
import javax.portlet.filter.ResourceRequestWrapper;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import org.apache.axis.soap.SOAPConstants;
import org.apache.xpath.compiler.FunctionTable;
import org.dom4j.Node;
import org.junit.BeforeClass;
import org.tuckey.web.MockSession;

@RunWith(EvoSuiteRunner.class)
public class SessionErrorsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try {
        SessionErrors.iterator((HttpServletRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try {
        SessionErrors.contains((HttpServletRequest) null, "ws<lFile");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Class<?> class0 = SessionErrors.class;
      RenderRequestImpl renderRequestImpl0 = new RenderRequestImpl();
      // Undeclared exception!
      try {
        SessionErrors.contains((PortletRequest) renderRequestImpl0, class0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ActionRequestImpl actionRequestImpl0 = new ActionRequestImpl();
      Class<?> class0 = ServiceContext.class;
      // Undeclared exception!
      try {
        SessionErrors.add((PortletRequest) actionRequestImpl0, class0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try {
        SessionErrors.add((HttpServletRequest) null, (String) null, (Object) "Factory");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      RenderRequestImpl renderRequestImpl0 = new RenderRequestImpl();
      // Undeclared exception!
      try {
        SessionErrors.size((PortletRequest) renderRequestImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      SessionErrors sessionErrors0 = new SessionErrors();
      assertNotNull(sessionErrors0);
  }

  @Test
  public void test7()  throws Throwable  {
      ActionRequestImpl actionRequestImpl0 = new ActionRequestImpl();
      Class<?> class0 = MagentaCompositeConverter.class;
      // Undeclared exception!
      try {
        SessionErrors.add((PortletRequest) actionRequestImpl0, class0, (Object) "javax.xml.transform.enable-output-escaping");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      Class<?> class0 = SessionErrors.class;
      // Undeclared exception!
      try {
        SessionErrors.contains((PortletSession) null, class0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      Class<?> class0 = SessionErrors.class;
      // Undeclared exception!
      try {
        SessionErrors.get((HttpServletRequest) null, class0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      Class<?> class0 = SessionErrors.class;
      SessionErrors.add((HttpSession) mockSession0, class0);
      SessionErrors.clear((HttpSession) mockSession0);
      assertEquals(0L, mockSession0.getCreationTime());
  }

  @Test
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try {
        SessionErrors.size((HttpServletRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      EventRequestImpl eventRequestImpl0 = new EventRequestImpl();
      EventRequestWrapper eventRequestWrapper0 = new EventRequestWrapper((EventRequest) eventRequestImpl0);
      // Undeclared exception!
      try {
        SessionErrors.contains((PortletRequest) eventRequestWrapper0, "?>+`yiV?OY5@W");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try {
        SessionErrors.isEmpty((HttpServletRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      Class<?> class0 = SessionErrors.class;
      // Undeclared exception!
      try {
        SessionErrors.add((HttpSession) null, class0, (Object) "Comment");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      ActionRequestImpl actionRequestImpl0 = new ActionRequestImpl();
      // Undeclared exception!
      try {
        SessionErrors.add((PortletRequest) actionRequestImpl0, "wS_COMPLEX_PROPERTY");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      Class<?> class0 = SessionErrors.class;
      // Undeclared exception!
      try {
        SessionErrors.contains((HttpServletRequest) null, class0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try {
        SessionErrors.get((HttpServletRequest) null, "uSP5[");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test18()  throws Throwable  {
      ActionRequestImpl actionRequestImpl0 = new ActionRequestImpl();
      // Undeclared exception!
      try {
        SessionErrors.keySet((PortletRequest) actionRequestImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test19()  throws Throwable  {
      ActionRequestImpl actionRequestImpl0 = new ActionRequestImpl();
      // Undeclared exception!
      try {
        SessionErrors.isEmpty((PortletRequest) actionRequestImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try {
        SessionErrors.add((HttpServletRequest) null, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test21()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      PortletSessionImpl portletSessionImpl0 = new PortletSessionImpl((HttpSession) mockSession0, (PortletContext) null, "n$W$`kll*33+28kC", (long) 0);
      Class<?> class0 = SOAPConstants.class;
      SessionErrors.add((PortletSession) portletSessionImpl0, class0, (Object) "http://xml.apache.org/xpath/features/whitespace-pre-stripping");
      boolean boolean0 = SessionErrors.contains((PortletSession) portletSessionImpl0, "n$W$`kll*33+28kC");
      assertEquals(true, boolean0);
  }

  @Test
  public void test22()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      PortletSessionImpl portletSessionImpl0 = new PortletSessionImpl((HttpSession) mockSession0, (PortletContext) null, "IDREFInvalidWithNamespaces", (long) 1);
      Class<?> class0 = SessionErrors.class;
      Object object0 = SessionErrors.get((PortletSession) portletSessionImpl0, class0);
      assertNull(object0);
  }

  @Test
  public void test23()  throws Throwable  {
      ActionRequestImpl actionRequestImpl0 = new ActionRequestImpl();
      // Undeclared exception!
      try {
        SessionErrors.print((PortletRequest) actionRequestImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try {
        SessionErrors.print((HttpServletRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test25()  throws Throwable  {
      ResourceRequestImpl resourceRequestImpl0 = new ResourceRequestImpl();
      Class<?> class0 = SessionErrors.class;
      // Undeclared exception!
      try {
        SessionErrors.get((PortletRequest) resourceRequestImpl0, class0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test26()  throws Throwable  {
      Class<?> class0 = SessionErrors.class;
      // Undeclared exception!
      try {
        SessionErrors.add((HttpServletRequest) null, class0, (Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test27()  throws Throwable  {
      ActionRequestImpl actionRequestImpl0 = new ActionRequestImpl();
      // Undeclared exception!
      try {
        SessionErrors.clear((PortletRequest) actionRequestImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try {
        SessionErrors.keySet((HttpServletRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test29()  throws Throwable  {
      ActionRequestImpl actionRequestImpl0 = new ActionRequestImpl();
      // Undeclared exception!
      try {
        SessionErrors.iterator((PortletRequest) actionRequestImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test30()  throws Throwable  {
      ResourceRequestImpl resourceRequestImpl0 = new ResourceRequestImpl();
      ResourceRequestWrapper resourceRequestWrapper0 = new ResourceRequestWrapper((ResourceRequest) resourceRequestImpl0);
      // Undeclared exception!
      try {
        SessionErrors.get((PortletRequest) resourceRequestWrapper0, "IDREFInvalidWithNamespaces");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test31()  throws Throwable  {
      ActionRequestImpl actionRequestImpl0 = new ActionRequestImpl();
      // Undeclared exception!
      try {
        SessionErrors.add((PortletRequest) actionRequestImpl0, "]Qo(-W/(~&", (Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test32()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      ResourceRequestImpl resourceRequestImpl0 = new ResourceRequestImpl();
      PortletServletSession portletServletSession0 = new PortletServletSession((HttpSession) mockSession0, (PortletRequestImpl) resourceRequestImpl0);
      Class<?> class0 = SessionErrors.class;
      boolean boolean0 = SessionErrors.contains((HttpSession) portletServletSession0, class0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test33()  throws Throwable  {
      Class<?> class0 = FunctionTable.class;
      // Undeclared exception!
      try {
        SessionErrors.add((HttpServletRequest) null, class0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try {
        SessionErrors.clear((HttpServletRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test35()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      ResourceRequestImpl resourceRequestImpl0 = new ResourceRequestImpl();
      PortletServletSession portletServletSession0 = new PortletServletSession((HttpSession) mockSession0, (PortletRequestImpl) resourceRequestImpl0);
      Class<?> class0 = SessionErrors.class;
      Object object0 = SessionErrors.get((HttpSession) portletServletSession0, class0);
      assertNull(object0);
  }

  @Test
  public void test36()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      SessionErrors.clear((HttpSession) mockSession0);
      assertNull(mockSession0.getId());
  }

  @Test
  public void test37()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      PortletSessionImpl portletSessionImpl0 = new PortletSessionImpl((HttpSession) mockSession0, (PortletContext) null, "n$W$`kll*33+28kC", (-1679L));
      SessionErrors.clear((PortletSession) portletSessionImpl0);
      assertEquals(0L, portletSessionImpl0.getCreationTime());
  }

  @Test
  public void test38()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      SessionErrors.add((HttpSession) mockSession0, "A.g?s", (Object) "Center");
      ResourceRequestImpl resourceRequestImpl0 = new ResourceRequestImpl();
      PortletServletSession portletServletSession0 = new PortletServletSession((HttpSession) mockSession0, (PortletRequestImpl) resourceRequestImpl0);
      Class<?> class0 = SessionErrors.class;
      boolean boolean0 = SessionErrors.contains((HttpSession) portletServletSession0, class0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test39()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      PortletSessionImpl portletSessionImpl0 = new PortletSessionImpl((HttpSession) mockSession0, (PortletContext) null, "n$W$`kll*33+28kC", (long) 0);
      boolean boolean0 = SessionErrors.contains((PortletSession) portletSessionImpl0, "n$W$`kll*33+28kC");
      assertEquals(false, boolean0);
  }

  @Test
  public void test40()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      SessionErrors.add((HttpSession) mockSession0, "A.g?s", (Object) "Center");
      Class<?> class0 = SessionErrors.class;
      Object object0 = SessionErrors.get((HttpSession) mockSession0, class0);
      assertNull(object0);
  }

  @Test
  public void test41()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      PortletSessionImpl portletSessionImpl0 = new PortletSessionImpl((HttpSession) mockSession0, (PortletContext) null, "IDREFInvalidWithNamespaces", (long) 1);
      SessionErrors.add((PortletSession) portletSessionImpl0, "IDREFInvalidWithNamespaces", (Object) "quit.requested");
      Class<?> class0 = SessionErrors.class;
      Object object0 = SessionErrors.get((PortletSession) portletSessionImpl0, class0);
      assertNull(object0);
  }

  @Test
  public void test42()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      Class<?> class0 = Node.class;
      SessionErrors.add((HttpSession) mockSession0, class0);
      boolean boolean0 = SessionErrors.isEmpty((HttpSession) mockSession0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test43()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      boolean boolean0 = SessionErrors.isEmpty((HttpSession) mockSession0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test44()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      PortletSessionImpl portletSessionImpl0 = new PortletSessionImpl((HttpSession) mockSession0, (PortletContext) null, "IDREFInvalidWithNamespaces", (long) 1);
      SessionErrors.add((PortletSession) portletSessionImpl0, "IDREFInvalidWithNamespaces", (Object) "quit.requested");
      boolean boolean0 = SessionErrors.isEmpty((PortletSession) portletSessionImpl0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test45()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      PortletSessionImpl portletSessionImpl0 = new PortletSessionImpl((HttpSession) mockSession0, (PortletContext) null, "n$W$`kll*33+28kC", (long) 0);
      boolean boolean0 = SessionErrors.isEmpty((PortletSession) portletSessionImpl0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test46()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      Class<?> class0 = Node.class;
      SessionErrors.add((HttpSession) mockSession0, class0);
      SessionErrors.print((HttpSession) mockSession0);
      assertNull(mockSession0.getId());
  }

  @Test
  public void test47()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      Iterator<String> iterator0 = SessionErrors.iterator((HttpSession) mockSession0);
      assertEquals(false, iterator0.hasNext());
  }

  @Test
  public void test48()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      PortletSessionImpl portletSessionImpl0 = new PortletSessionImpl((HttpSession) mockSession0, (PortletContext) null, "IDREFInvalidWithNamespaces", (long) 1);
      SessionErrors.print((PortletSession) portletSessionImpl0);
      assertEquals(0, portletSessionImpl0.getMaxInactiveInterval());
  }

  @Test
  public void test49()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      Class<?> class0 = Node.class;
      SessionErrors.add((HttpSession) mockSession0, class0);
      Set<String> set0 = SessionErrors.keySet((HttpSession) mockSession0);
      assertNotNull(set0);
      assertEquals(false, set0.isEmpty());
  }

  @Test
  public void test50()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      Set<String> set0 = SessionErrors.keySet((HttpSession) mockSession0);
      assertEquals(0, set0.size());
  }

  @Test
  public void test51()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      PortletSessionImpl portletSessionImpl0 = new PortletSessionImpl((HttpSession) mockSession0, (PortletContext) null, "IDREFInvalidWithNamespaces", (long) 1);
      SessionErrors.add((PortletSession) portletSessionImpl0, "IDREFInvalidWithNamespaces", (Object) "quit.requested");
      Set<String> set0 = SessionErrors.keySet((PortletSession) portletSessionImpl0);
      assertEquals(1, set0.size());
      assertNotNull(set0);
  }

  @Test
  public void test52()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      PortletSessionImpl portletSessionImpl0 = new PortletSessionImpl((HttpSession) mockSession0, (PortletContext) null, "n$W$`kll*33+28kC", (long) 0);
      Set<String> set0 = SessionErrors.keySet((PortletSession) portletSessionImpl0);
      assertEquals(0, set0.size());
  }

  @Test
  public void test53()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      PortletSessionImpl portletSessionImpl0 = new PortletSessionImpl((HttpSession) mockSession0, (PortletContext) null, "IDREFInvalidWithNamespaces", (long) 1);
      SessionErrors.add((PortletSession) portletSessionImpl0, "IDREFInvalidWithNamespaces", (Object) "quit.requested");
      SessionErrors.print((PortletSession) portletSessionImpl0);
      assertEquals(0L, portletSessionImpl0.getCreationTime());
  }

  @Test
  public void test54()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      SessionErrors.add((HttpSession) mockSession0, "A.g?s", (Object) "Center");
      int int0 = SessionErrors.size((HttpSession) mockSession0);
      assertEquals(1, int0);
  }

  @Test
  public void test55()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      int int0 = SessionErrors.size((HttpSession) mockSession0);
      assertEquals(0, int0);
  }

  @Test
  public void test56()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      ResourceRequestImpl resourceRequestImpl0 = new ResourceRequestImpl();
      PortletServletSession portletServletSession0 = new PortletServletSession((HttpSession) mockSession0, (PortletRequestImpl) resourceRequestImpl0);
      Class<?> class0 = SessionErrors.class;
      PortletSessionImpl portletSessionImpl0 = new PortletSessionImpl((HttpSession) portletServletSession0, (PortletContext) null, "", (long) 1);
      SessionErrors.add((PortletSession) portletSessionImpl0, class0);
      int int0 = SessionErrors.size((PortletSession) portletSessionImpl0);
      assertEquals(1, int0);
  }

  @Test
  public void test57()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      PortletSessionImpl portletSessionImpl0 = new PortletSessionImpl((HttpSession) mockSession0, (PortletContext) null, "n$W$`kll*33+28kC", (-1679L));
      int int0 = SessionErrors.size((PortletSession) portletSessionImpl0);
      assertEquals(0, int0);
  }
}
