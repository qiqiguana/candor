/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.theme;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.theme.PortletDisplay;
import com.liferay.portal.theme.ThemeDisplay;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.Writer;
import javax.portlet.PortletPreferences;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PortletDisplayEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setURLEditGuest("S");
      assertEquals(0, portletDisplay0.getColumnCount());
  }

  @Test
  public void test1()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.copyFrom(portletDisplay0);
      assertEquals(0, portletDisplay0.getColumnCount());
      assertEquals(0, portletDisplay0.getColumnPos());
      assertEquals("Liferay.Portlet.openConfiguration('#p_p_id__', '', ' ', ''); return false;", portletDisplay0.getURLConfigurationJS());
  }

  @Test
  public void test2()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setModeConfig(true);
      assertEquals(true, portletDisplay0.isModeConfig());
  }

  @Test
  public void test3()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setURLHelp("put^|At");
      assertEquals(false, portletDisplay0.isModeHelp());
  }

  @Test
  public void test4()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setURLConfiguration("3Po");
      assertEquals("", portletDisplay0.getRootPortletId());
  }

  @Test
  public void test5()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setShowPrintIcon(false);
      assertEquals(false, portletDisplay0.isShowPrintIcon());
  }

  @Test
  public void test6()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setShowHelpIcon(true);
      assertEquals(true, portletDisplay0.isShowHelpIcon());
  }

  @Test
  public void test7()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setURLMax("LOCL4_L");
      assertEquals(false, portletDisplay0.isRestoreCurrentView());
  }

  @Test
  public void test8()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setStateNormal(false);
      assertEquals(false, portletDisplay0.isStateNormal());
  }

  @Test
  public void test9()  throws Throwable  {
      ThemeDisplay themeDisplay0 = new ThemeDisplay();
      assertEquals(false, themeDisplay0.isShowSiteContentIcon());
  }

  @Test
  public void test10()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setRootPortletId("S");
      assertEquals("", portletDisplay0.getURLRefresh());
  }

  @Test
  public void test11()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setRestoreCurrentView(true);
      assertEquals(true, portletDisplay0.isRestoreCurrentView());
  }

  @Test
  public void test12()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setShowPortletIcon(true);
      assertEquals(true, portletDisplay0.isShowPortletIcon());
  }

  @Test
  public void test13()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      String string0 = portletDisplay0.getURLConfigurationJS();
      assertNotNull(string0);
      assertEquals("Liferay.Portlet.openConfiguration('#p_p_id__', '', ' ', ''); return false;", string0);
  }

  @Test
  public void test14()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setModeAbout(true);
      assertEquals(true, portletDisplay0.isModeAbout());
  }

  @Test
  public void test15()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      // Undeclared exception!
      try {
        portletDisplay0.copyTo(portletDisplay0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setURLPrint("");
      assertEquals(false, portletDisplay0.isModeHelp());
  }

  @Test
  public void test17()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setURLPortletCss(">yU2CauE");
      assertEquals("", portletDisplay0.getPortletName());
  }

  @Test
  public void test18()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setResourcePK(">yU2CauE");
      assertEquals(false, portletDisplay0.isStateExclusive());
  }

  @Test
  public void test19()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setPortletSetup((PortletPreferences) null);
      assertEquals("", portletDisplay0.getColumnId());
  }

  @Test
  public void test20()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setModeEditDefaults(false);
      assertEquals(false, portletDisplay0.isModeEditDefaults());
  }

  @Test
  public void test21()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setURLClose("S");
      assertEquals(false, portletDisplay0.isAccess());
  }

  @Test
  public void test22()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setShowCloseIcon(false);
      assertEquals(false, portletDisplay0.isShowCloseIcon());
  }

  @Test
  public void test23()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setURLRefresh("K68");
      assertEquals(false, portletDisplay0.isModeConfig());
  }

  @Test
  public void test24()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setURLMin("");
      assertEquals(false, portletDisplay0.isStateMin());
  }

  @Test
  public void test25()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setShowMoveIcon(false);
      assertEquals(false, portletDisplay0.isShowMoveIcon());
  }

  @Test
  public void test26()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setId("");
      assertEquals(false, portletDisplay0.isWebDAVEnabled());
  }

  @Test
  public void test27()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setNamespace("YW5 6-%XyD~dS1GR%h");
      assertEquals(0, portletDisplay0.getColumnPos());
  }

  @Test
  public void test28()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setStateMax(true);
      assertEquals(true, portletDisplay0.isStateMax());
  }

  @Test
  public void test29()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setStateMin(true);
      assertEquals(true, portletDisplay0.isStateMin());
  }

  @Test
  public void test30()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      portletDisplay0.writeContent((Writer) charArrayWriter0);
      assertEquals("", portletDisplay0.getColumnId());
  }

  @Test
  public void test31()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setModeEditGuest(false);
      assertEquals(false, portletDisplay0.isModeEditGuest());
  }

  @Test
  public void test32()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setStatePopUp(false);
      assertEquals(false, portletDisplay0.isStatePopUp());
  }

  @Test
  public void test33()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setShowRefreshIcon(true);
      assertEquals(true, portletDisplay0.isShowRefreshIcon());
  }

  @Test
  public void test34()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setStateExclusive(false);
      assertEquals(false, portletDisplay0.isStateExclusive());
  }

  @Test
  public void test35()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setModePrint(false);
      assertEquals(false, portletDisplay0.isModePrint());
  }

  @Test
  public void test36()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setShowPortletCssIcon(false);
      assertEquals(false, portletDisplay0.isShowPortletCssIcon());
  }

  @Test
  public void test37()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setShowEditDefaultsIcon(true);
      assertEquals(true, portletDisplay0.isShowEditDefaultsIcon());
  }

  @Test
  public void test38()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setShowBackIcon(false);
      assertEquals(false, portletDisplay0.isShowBackIcon());
  }

  @Test
  public void test39()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setPortletName(">yU2CauE");
      assertEquals(false, portletDisplay0.isWebDAVEnabled());
  }

  @Test
  public void test40()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setShowMinIcon(false);
      assertEquals(false, portletDisplay0.isShowMinIcon());
  }

  @Test
  public void test41()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setInstanceId("YW5 6-%XyD~dS1GR%h");
      assertEquals(false, portletDisplay0.isShowEditGuestIcon());
  }

  @Test
  public void test42()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setModeView(true);
      assertEquals(true, portletDisplay0.isModeView());
  }

  @Test
  public void test43()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setURLEdit("");
      assertEquals(false, portletDisplay0.isRestoreCurrentView());
  }

  @Test
  public void test44()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setURLBack("S");
      assertEquals("", portletDisplay0.getURLEditGuest());
  }

  @Test
  public void test45()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setURLPortlet(">yU2CauE");
      assertEquals(false, portletDisplay0.isShowMinIcon());
  }

  @Test
  public void test46()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setModeHelp(true);
      assertEquals(true, portletDisplay0.isModeHelp());
  }

  @Test
  public void test47()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      // Undeclared exception!
      try {
        portletDisplay0.isFocused();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test48()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setModeEdit(true);
      assertEquals(true, portletDisplay0.isModeEdit());
  }

  @Test
  public void test49()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setModePreview(true);
      assertEquals(true, portletDisplay0.isModePreview());
  }

  @Test
  public void test50()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setShowEditGuestIcon(true);
      assertEquals(true, portletDisplay0.isShowEditGuestIcon());
  }

  @Test
  public void test51()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setShowConfigurationIcon(true);
      assertEquals(true, portletDisplay0.isShowConfigurationIcon());
  }

  @Test
  public void test52()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setURLExportImport("");
      assertEquals("", portletDisplay0.getColumnId());
  }

  @Test
  public void test53()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setURLEditDefaults("");
      assertEquals(0, portletDisplay0.getColumnCount());
  }

  @Test
  public void test54()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setWebDAVEnabled(false);
      assertEquals(false, portletDisplay0.isWebDAVEnabled());
  }

  @Test
  public void test55()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setShowMaxIcon(false);
      assertEquals(false, portletDisplay0.isShowMaxIcon());
  }

  @Test
  public void test56()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setShowEditIcon(true);
      assertEquals(true, portletDisplay0.isShowEditIcon());
  }

  @Test
  public void test57()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setShowExportImportIcon(true);
      assertEquals(true, portletDisplay0.isShowExportImportIcon());
  }

  @Test
  public void test58()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.recycle();
      assertEquals(false, portletDisplay0.isModeEditDefaults());
      assertEquals(0, portletDisplay0.getColumnCount());
      assertEquals(false, portletDisplay0.isModeEdit());
      assertEquals(false, portletDisplay0.isAccess());
      assertEquals(false, portletDisplay0.isModeAbout());
      assertEquals(false, portletDisplay0.isActive());
      assertEquals(0, portletDisplay0.getColumnPos());
      assertEquals(false, portletDisplay0.isModeConfig());
  }

  @Test
  public void test59()  throws Throwable  {
      PortletDisplay portletDisplay0 = new PortletDisplay();
      portletDisplay0.setContent((StringBundler) null);
      assertEquals("", portletDisplay0.getCustomCSSClassName());
  }
}
