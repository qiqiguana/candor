/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.cache.cluster.clusterlink;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.cache.cluster.clusterlink.ClusterLinkPortalCacheClusterChannel;
import com.liferay.portal.cache.cluster.clusterlink.ClusterLinkPortalCacheClusterChannelFactory;
import com.liferay.portal.kernel.cache.cluster.PortalCacheClusterException;
import com.liferay.portal.kernel.cluster.Priority;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ClusterLinkPortalCacheClusterChannelFactoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ClusterLinkPortalCacheClusterChannelFactory clusterLinkPortalCacheClusterChannelFactory0 = new ClusterLinkPortalCacheClusterChannelFactory();
      clusterLinkPortalCacheClusterChannelFactory0.setDestinationName("64\">v''VjLui+j?5z");
  }

  @Test
  public void test1()  throws Throwable  {
      ClusterLinkPortalCacheClusterChannelFactory clusterLinkPortalCacheClusterChannelFactory0 = new ClusterLinkPortalCacheClusterChannelFactory();
      LinkedList<Priority> linkedList0 = new LinkedList<Priority>();
      clusterLinkPortalCacheClusterChannelFactory0.setPriorities((List<Priority>) linkedList0);
      // Undeclared exception!
      try {
        clusterLinkPortalCacheClusterChannelFactory0.createPortalCacheClusterChannel();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Cannot create more than 0 channels
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ClusterLinkPortalCacheClusterChannelFactory clusterLinkPortalCacheClusterChannelFactory0 = new ClusterLinkPortalCacheClusterChannelFactory();
      LinkedList<Priority> linkedList0 = new LinkedList<Priority>();
      Priority priority0 = Priority.LEVEL6;
      linkedList0.offerFirst(priority0);
      clusterLinkPortalCacheClusterChannelFactory0.setPriorities((List<Priority>) linkedList0);
      ClusterLinkPortalCacheClusterChannel clusterLinkPortalCacheClusterChannel0 = (ClusterLinkPortalCacheClusterChannel)clusterLinkPortalCacheClusterChannelFactory0.createPortalCacheClusterChannel();
      assertEquals(0L, clusterLinkPortalCacheClusterChannel0.getSentEventNumber());
  }
}
