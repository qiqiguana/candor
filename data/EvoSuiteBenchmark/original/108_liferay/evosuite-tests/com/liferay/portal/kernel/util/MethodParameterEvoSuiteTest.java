/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.MethodParameter;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MethodParameterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Class<?> class0 = Class.class;
      MethodParameter methodParameter0 = new MethodParameter("<wS:<e>\"yk5nNtqq,>", "|{z.[*ALQh'0zx", class0);
      Class<?> class1 = methodParameter0.getType();
      assertEquals("|{z.[*ALQh'0zx", methodParameter0.getSignature());
      assertEquals("<wS:<e>\"yk5nNtqq,>", methodParameter0.getName());
      assertNotNull(class1);
  }

  @Test
  public void test1()  throws Throwable  {
      Class<?> class0 = Class.class;
      MethodParameter methodParameter0 = new MethodParameter("<wS:<e>\"yk5nNtqq,>", "|{z.[*ALQh'0zx", class0);
      String string0 = methodParameter0.getSignature();
      assertEquals("|{z.[*ALQh'0zx", string0);
      assertEquals("<wS:<e>\"yk5nNtqq,>", methodParameter0.getName());
      assertNotNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      Class<?> class0 = Class.class;
      MethodParameter methodParameter0 = new MethodParameter("EgPA]<SOO:u}a;2>p", "EgPA]<SOO:u}a;2>p", class0);
      String string0 = methodParameter0.getName();
      assertEquals("EgPA]<SOO:u}a;2>p", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      Class<?> class0 = Class.class;
      MethodParameter methodParameter0 = new MethodParameter("<", "<", class0);
      methodParameter0.getGenericTypes();
      Class<?>[] classArray0 = methodParameter0.getGenericTypes();
      assertNull(classArray0);
  }

  @Test
  public void test4()  throws Throwable  {
      Class<?> class0 = Class.class;
      MethodParameter methodParameter0 = new MethodParameter("<wS:<e>\"yk5nNtqq,>", "<wS:<e>\"yk5nNtqq,>", class0);
      Class<?>[] classArray0 = methodParameter0.getGenericTypes();
      assertNotNull(classArray0);
  }

  @Test
  public void test5()  throws Throwable  {
      Class<?> class0 = Class.class;
      MethodParameter methodParameter0 = new MethodParameter((String) null, (String) null, class0);
      Class<?>[] classArray0 = methodParameter0.getGenericTypes();
      assertNull(classArray0);
  }

  @Test
  public void test6()  throws Throwable  {
      Class<?> class0 = Class.class;
      MethodParameter methodParameter0 = new MethodParameter("<wS:<e>\"yk5nNtqq,>", "|{z.[*ALQh'0zx", class0);
      Class<?>[] classArray0 = methodParameter0.getGenericTypes();
      assertNull(classArray0);
      assertEquals("<wS:<e>\"yk5nNtqq,>", methodParameter0.getName());
      assertEquals("|{z.[*ALQh'0zx", methodParameter0.getSignature());
  }

  @Test
  public void test7()  throws Throwable  {
      Class<?> class0 = Class.class;
      MethodParameter methodParameter0 = new MethodParameter("IQPA]:u<C=)a*Nr;2>=", "IQPA]:u<C=)a*Nr;2>=", class0);
      Class<?>[] classArray0 = methodParameter0.getGenericTypes();
      assertNotNull(classArray0);
  }

  @Test
  public void test8()  throws Throwable  {
      Class<?> class0 = Class.class;
      MethodParameter methodParameter0 = new MethodParameter("EgPA]<SOO:u}a;2>p", "EgPA]<SOO:u}a;2>p", class0);
      Class<?>[] classArray0 = methodParameter0.getGenericTypes();
      assertNotNull(classArray0);
  }

  @Test
  public void test9()  throws Throwable  {
      Class<?> class0 = Class.class;
      MethodParameter methodParameter0 = new MethodParameter("TGQgQPA]\"y<EH}1*;9>0", "TGQgQPA]\"y<EH}1*;9>0", class0);
      try {
        methodParameter0.getGenericTypes();
        fail("Expecting exception: ClassNotFoundException");
      } catch(ClassNotFoundException e) {
        /*
         * EH}1*;
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      Class<?> class0 = Class.class;
      MethodParameter methodParameter0 = new MethodParameter("mTBgQP8+\"u<Zf_a*;Q>=", "mTBgQP8+\"u<Zf_a*;Q>=", class0);
      Class<?>[] classArray0 = methodParameter0.getGenericTypes();
      assertNotNull(classArray0);
  }
}
