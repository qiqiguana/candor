/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.search;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.search.Sort;
import com.liferay.portal.kernel.search.SortFactory;
import com.liferay.portal.kernel.search.SortFactoryImpl;
import com.liferay.portal.kernel.search.SortFactoryUtil;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SortFactoryUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SortFactoryUtil sortFactoryUtil0 = new SortFactoryUtil();
      SortFactoryImpl sortFactoryImpl0 = new SortFactoryImpl();
      sortFactoryUtil0.setSortFactory((SortFactory) sortFactoryImpl0);
  }

  @Test
  public void test1()  throws Throwable  {
      LinkedList<Sort> linkedList0 = new LinkedList<Sort>();
      Sort[] sortArray0 = SortFactoryUtil.toArray((List<Sort>) linkedList0);
      assertNotNull(sortArray0);
  }

  @Test
  public void test2()  throws Throwable  {
      Sort[] sortArray0 = SortFactoryUtil.getDefaultSorts();
      assertNotNull(sortArray0);
  }

  @Test
  public void test3()  throws Throwable  {
      Class<?> class0 = List.class;
      // Undeclared exception!
      try {
        SortFactoryUtil.getSort(class0, "R#k~5", "R#k~5");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Sort sort0 = SortFactoryUtil.create("&_r)O[.=|)tT<lwnn:", 1121, true);
      assertEquals("{fieldName=&_r)O[.=|)tT<lwnn:, type=1121, reverse=true}", sort0.toString());
      assertNotNull(sort0);
      assertEquals(true, sort0.isReverse());
  }

  @Test
  public void test5()  throws Throwable  {
      Sort sort0 = SortFactoryUtil.create("", false);
      assertNotNull(sort0);
      assertEquals("{fieldName=, type=3, reverse=false}", sort0.toString());
  }
}
