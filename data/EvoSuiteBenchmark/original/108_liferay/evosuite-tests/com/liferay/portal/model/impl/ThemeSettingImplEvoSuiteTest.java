/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.impl.ThemeSettingImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ThemeSettingImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[1];
      ThemeSettingImpl themeSettingImpl0 = new ThemeSettingImpl(false, stringArray0, "", "", "");
      themeSettingImpl0.setType("");
      assertEquals(false, themeSettingImpl0.isConfigurable());
  }

  @Test
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[4];
      ThemeSettingImpl themeSettingImpl0 = new ThemeSettingImpl(false, stringArray0, "", "", "");
      themeSettingImpl0.setValue("x");
      assertEquals(false, themeSettingImpl0.isConfigurable());
  }

  @Test
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[4];
      ThemeSettingImpl themeSettingImpl0 = new ThemeSettingImpl(true, stringArray0, "`;f=:wplSu+VF#`", "", "");
      String[] stringArray1 = themeSettingImpl0.getOptions();
      assertEquals("", themeSettingImpl0.getValue());
      assertNotNull(stringArray1);
      assertEquals("", themeSettingImpl0.getType());
      assertEquals(true, themeSettingImpl0.isConfigurable());
      assertEquals("`;f=:wplSu+VF#`", themeSettingImpl0.getScript());
  }

  @Test
  public void test3()  throws Throwable  {
      String[] stringArray0 = new String[3];
      ThemeSettingImpl themeSettingImpl0 = new ThemeSettingImpl(true, stringArray0, "g5)/e{<Qv15W*J", "", "");
      String string0 = themeSettingImpl0.getValue();
      assertNotNull(string0);
      assertEquals("g5)/e{<Qv15W*J", themeSettingImpl0.getScript());
      assertEquals(true, themeSettingImpl0.isConfigurable());
      assertEquals("", themeSettingImpl0.getType());
      assertEquals("", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[5];
      ThemeSettingImpl themeSettingImpl0 = new ThemeSettingImpl(false, stringArray0, "", "~0acl ONinG", "");
      String string0 = themeSettingImpl0.getScript();
      assertEquals("~0acl ONinG", themeSettingImpl0.getType());
      assertNotNull(string0);
      assertEquals("", themeSettingImpl0.getValue());
      assertEquals("", string0);
      assertEquals(false, themeSettingImpl0.isConfigurable());
  }

  @Test
  public void test5()  throws Throwable  {
      String string0 = ThemeSettingImpl.namespaceProperty("y<gP-_,", "y<gP-_,");
      assertEquals("lfr-theme:y<gP-_,:y<gP-_,", string0);
      assertNotNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      String[] stringArray0 = new String[1];
      ThemeSettingImpl themeSettingImpl0 = new ThemeSettingImpl(true, stringArray0, "y<gP-_,", "", "");
      themeSettingImpl0.setOptions(stringArray0);
      assertEquals(true, themeSettingImpl0.isConfigurable());
      assertEquals("", themeSettingImpl0.getType());
      assertEquals("y<gP-_,", themeSettingImpl0.getScript());
      assertEquals("", themeSettingImpl0.getValue());
  }

  @Test
  public void test7()  throws Throwable  {
      String[] stringArray0 = new String[4];
      ThemeSettingImpl themeSettingImpl0 = new ThemeSettingImpl(true, stringArray0, "`;f=:wplSu+VF#`", "", "");
      themeSettingImpl0.setConfigurable(true);
      assertEquals("", themeSettingImpl0.getValue());
      assertEquals(true, themeSettingImpl0.isConfigurable());
      assertEquals("`;f=:wplSu+VF#`", themeSettingImpl0.getScript());
      assertEquals("", themeSettingImpl0.getType());
  }

  @Test
  public void test8()  throws Throwable  {
      String[] stringArray0 = new String[10];
      ThemeSettingImpl themeSettingImpl0 = new ThemeSettingImpl(false, stringArray0, "", ")gWE7C\"IJDh<QZ^op)P", "");
      assertEquals("", themeSettingImpl0.getScript());
      
      themeSettingImpl0.setScript("");
      assertEquals(")gWE7C\"IJDh<QZ^op)P", themeSettingImpl0.getType());
      assertEquals(false, themeSettingImpl0.isConfigurable());
      assertEquals("", themeSettingImpl0.getValue());
  }

  @Test
  public void test9()  throws Throwable  {
      String[] stringArray0 = new String[4];
      ThemeSettingImpl themeSettingImpl0 = new ThemeSettingImpl(false, stringArray0, ":", "x(HJB(", ":");
      String string0 = themeSettingImpl0.getType();
      assertEquals(false, themeSettingImpl0.isConfigurable());
      assertNotNull(string0);
      assertEquals(":", themeSettingImpl0.getValue());
      assertEquals("x(HJB(", string0);
      assertEquals(":", themeSettingImpl0.getScript());
  }

  @Test
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[1];
      ThemeSettingImpl themeSettingImpl0 = new ThemeSettingImpl(false, stringArray0, "", "", "");
      boolean boolean0 = themeSettingImpl0.isConfigurable();
      assertEquals(false, boolean0);
  }
}
