/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.io.unsync;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.io.unsync.UnsyncBufferedWriter;
import de.schlichtherle.nio.charset.IBM437Charset;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.Writer;
import java.nio.charset.CharsetEncoder;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UnsyncBufferedWriterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UnsyncBufferedWriter unsyncBufferedWriter0 = null;
      try {
        unsyncBufferedWriter0 = new UnsyncBufferedWriter((Writer) null, (-374));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Size is less than 0
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      UnsyncBufferedWriter unsyncBufferedWriter0 = new UnsyncBufferedWriter((Writer) null);
      unsyncBufferedWriter0.close();
  }

  @Test
  public void test2()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      UnsyncBufferedWriter unsyncBufferedWriter0 = new UnsyncBufferedWriter((Writer) charArrayWriter0);
      unsyncBufferedWriter0.write("M|\"j^]");
      unsyncBufferedWriter0.close();
      assertEquals(6, charArrayWriter0.size());
      assertEquals("M|\"j^]", charArrayWriter0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      UnsyncBufferedWriter unsyncBufferedWriter0 = new UnsyncBufferedWriter((Writer) charArrayWriter0);
      unsyncBufferedWriter0.flush();
  }

  @Test
  public void test4()  throws Throwable  {
      UnsyncBufferedWriter unsyncBufferedWriter0 = new UnsyncBufferedWriter((Writer) null, 1);
      try {
        unsyncBufferedWriter0.flush();
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * Writer is null
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      UnsyncBufferedWriter unsyncBufferedWriter0 = new UnsyncBufferedWriter((Writer) charArrayWriter0);
      UnsyncBufferedWriter unsyncBufferedWriter1 = new UnsyncBufferedWriter((Writer) unsyncBufferedWriter0);
      unsyncBufferedWriter0.write((-548));
      unsyncBufferedWriter1.close();
      assertEquals(1, charArrayWriter0.size());
      assertEquals("\uFDDC", charArrayWriter0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      UnsyncBufferedWriter unsyncBufferedWriter0 = new UnsyncBufferedWriter((Writer) null);
      char[] charArray0 = new char[4];
      try {
        unsyncBufferedWriter0.write(charArray0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * Writer is null
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      UnsyncBufferedWriter unsyncBufferedWriter0 = new UnsyncBufferedWriter((Writer) charArrayWriter0, 46);
      char[] charArray0 = new char[39];
      // Undeclared exception!
      try {
        unsyncBufferedWriter0.write(charArray0, (int) 'I', 46);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      UnsyncBufferedWriter unsyncBufferedWriter0 = new UnsyncBufferedWriter((Writer) charArrayWriter0, 46);
      char[] charArray0 = new char[39];
      unsyncBufferedWriter0.write(charArray0);
      // Undeclared exception!
      try {
        unsyncBufferedWriter0.write(charArray0, (int) 'I', 46);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      UnsyncBufferedWriter unsyncBufferedWriter0 = new UnsyncBufferedWriter((Writer) charArrayWriter0);
      assertNotNull(unsyncBufferedWriter0);
      
      char[] charArray0 = new char[8];
      unsyncBufferedWriter0.write((-548));
      unsyncBufferedWriter0.write(charArray0);
      assertEquals(0, charArrayWriter0.size());
      assertEquals("", charArrayWriter0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      UnsyncBufferedWriter unsyncBufferedWriter0 = new UnsyncBufferedWriter((Writer) charArrayWriter0, 46);
      char[] charArray0 = new char[39];
      unsyncBufferedWriter0.write(charArray0);
      unsyncBufferedWriter0.write(charArray0);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", charArrayWriter0.toString());
      assertEquals(39, charArrayWriter0.size());
  }

  @Test
  public void test11()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      IBM437Charset iBM437Charset0 = new IBM437Charset();
      CharsetEncoder charsetEncoder0 = iBM437Charset0.newEncoder();
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter((OutputStream) pipedOutputStream0, charsetEncoder0);
      UnsyncBufferedWriter unsyncBufferedWriter0 = new UnsyncBufferedWriter((Writer) outputStreamWriter0);
      unsyncBufferedWriter0.close();
      try {
        unsyncBufferedWriter0.write((-1583));
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * Writer is null
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      PipedWriter pipedWriter0 = new PipedWriter(pipedReader0);
      UnsyncBufferedWriter unsyncBufferedWriter0 = new UnsyncBufferedWriter((Writer) pipedWriter0, (int) '\u0017');
      unsyncBufferedWriter0.write("W[S-=oLbGC");
      unsyncBufferedWriter0.write("W[S-=oLbGC");
      unsyncBufferedWriter0.newLine();
      unsyncBufferedWriter0.append('G');
  }

  @Test
  public void test13()  throws Throwable  {
      UnsyncBufferedWriter unsyncBufferedWriter0 = new UnsyncBufferedWriter((Writer) null);
      try {
        unsyncBufferedWriter0.newLine();
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * Writer is null
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      UnsyncBufferedWriter unsyncBufferedWriter0 = new UnsyncBufferedWriter((Writer) charArrayWriter0, 1);
      unsyncBufferedWriter0.append((CharSequence) null);
      assertEquals(3, charArrayWriter0.size());
      assertEquals("nul", charArrayWriter0.toString());
  }
}
