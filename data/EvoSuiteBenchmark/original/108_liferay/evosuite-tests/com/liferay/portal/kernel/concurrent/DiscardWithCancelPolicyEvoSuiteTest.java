/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.concurrent;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.concurrent.DiscardWithCancelPolicy;
import com.liferay.portal.kernel.concurrent.ThreadPoolExecutor;
import java.util.concurrent.Future;
import java.util.concurrent.FutureTask;
import org.jgroups.util.LazyThreadFactory;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DiscardWithCancelPolicyEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DiscardWithCancelPolicy discardWithCancelPolicy0 = new DiscardWithCancelPolicy();
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(6, 6);
      discardWithCancelPolicy0.rejectedExecution((Runnable) null, threadPoolExecutor0);
      assertEquals(false, threadPoolExecutor0.isAllowCoreThreadTimeout());
  }

  @Test
  public void test1()  throws Throwable  {
      DiscardWithCancelPolicy discardWithCancelPolicy0 = new DiscardWithCancelPolicy();
      ThreadGroup threadGroup0 = new ThreadGroup("V^#o]=|bWD");
      LazyThreadFactory lazyThreadFactory0 = new LazyThreadFactory(threadGroup0, "V^#o]=|bWD", false);
      Thread thread0 = lazyThreadFactory0.newThread((Runnable) null, "V^#o]=|bWD");
      FutureTask<Future<Object>> futureTask0 = new FutureTask<Future<Object>>((Runnable) thread0, (Future<Object>) null);
      discardWithCancelPolicy0.rejectedExecution((Runnable) futureTask0, (ThreadPoolExecutor) null);
      assertEquals(true, futureTask0.isDone());
      assertEquals(370L, thread0.getId());
  }
}
