/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.mobile.device.rulegroup.rule.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.mobile.device.Device;
import com.liferay.portal.kernel.mobile.device.UnknownDevice;
import com.liferay.portal.mobile.device.rulegroup.rule.impl.SimpleRuleHandler;
import com.liferay.portal.theme.ThemeDisplay;
import com.liferay.portlet.mobiledevicerules.model.MDRRule;
import java.util.Collection;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SimpleRuleHandlerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SimpleRuleHandler simpleRuleHandler0 = new SimpleRuleHandler();
      String string0 = simpleRuleHandler0.getType();
      assertEquals("com.liferay.portal.mobile.device.rulegroup.rule.impl.SimpleRuleHandler", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      SimpleRuleHandler simpleRuleHandler0 = new SimpleRuleHandler();
      Collection<String> collection0 = simpleRuleHandler0.getPropertyNames();
      assertEquals(false, collection0.isEmpty());
  }

  @Test
  public void test2()  throws Throwable  {
      SimpleRuleHandler simpleRuleHandler0 = new SimpleRuleHandler();
      ThemeDisplay themeDisplay0 = new ThemeDisplay();
      boolean boolean0 = simpleRuleHandler0.evaluateRule((MDRRule) null, themeDisplay0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      SimpleRuleHandler simpleRuleHandler0 = new SimpleRuleHandler();
      ThemeDisplay themeDisplay0 = new ThemeDisplay();
      UnknownDevice unknownDevice0 = UnknownDevice.getInstance();
      themeDisplay0.setDevice((Device) unknownDevice0);
      // Undeclared exception!
      try {
        simpleRuleHandler0.evaluateRule((MDRRule) null, themeDisplay0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
