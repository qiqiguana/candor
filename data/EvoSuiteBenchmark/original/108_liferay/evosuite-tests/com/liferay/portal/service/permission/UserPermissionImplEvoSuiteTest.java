/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.service.permission;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.security.auth.PrincipalException;
import com.liferay.portal.security.permission.PermissionChecker;
import com.liferay.portal.service.permission.UserPermissionImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UserPermissionImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UserPermissionImpl userPermissionImpl0 = new UserPermissionImpl();
      // Undeclared exception!
      try {
        userPermissionImpl0.check((PermissionChecker) null, 0L, "DELETE");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      UserPermissionImpl userPermissionImpl0 = new UserPermissionImpl();
      try {
        userPermissionImpl0.check((PermissionChecker) null, (-1L), (-1L), (-1L), "yF{?@");
        fail("Expecting exception: PrincipalException");
      } catch(PrincipalException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      UserPermissionImpl userPermissionImpl0 = new UserPermissionImpl();
      try {
        userPermissionImpl0.check((PermissionChecker) null, 4294967301L, "ECq0}P");
        fail("Expecting exception: PrincipalException");
      } catch(PrincipalException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      UserPermissionImpl userPermissionImpl0 = new UserPermissionImpl();
      // Undeclared exception!
      try {
        userPermissionImpl0.check((PermissionChecker) null, (-1467L), (-1467L), (-1467L), "IMPERSONATE");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      UserPermissionImpl userPermissionImpl0 = new UserPermissionImpl();
      // Undeclared exception!
      try {
        userPermissionImpl0.contains((PermissionChecker) null, 0L, "PERMISSIONS");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      UserPermissionImpl userPermissionImpl0 = new UserPermissionImpl();
      // Undeclared exception!
      try {
        userPermissionImpl0.contains((PermissionChecker) null, 20L, "UPDATE");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
