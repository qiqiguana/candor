/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.impl.LayoutRevisionCacheModel;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LayoutRevisionCacheModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LayoutRevisionCacheModel layoutRevisionCacheModel0 = new LayoutRevisionCacheModel();
      String string0 = layoutRevisionCacheModel0.toString();
      assertEquals("{layoutRevisionId=0, groupId=0, companyId=0, userId=0, userName=null, createDate=0, modifiedDate=0, layoutSetBranchId=0, layoutBranchId=0, parentLayoutRevisionId=0, head=false, major=false, plid=0, privateLayout=false, name=null, title=null, description=null, keywords=null, robots=null, typeSettings=null, iconImage=false, iconImageId=0, themeId=null, colorSchemeId=null, wapThemeId=null, wapColorSchemeId=null, css=null, status=0, statusByUserId=0, statusByUserName=null, statusDate=0}", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      LayoutRevisionCacheModel layoutRevisionCacheModel0 = new LayoutRevisionCacheModel();
      // Undeclared exception!
      try {
        layoutRevisionCacheModel0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      LayoutRevisionCacheModel layoutRevisionCacheModel0 = new LayoutRevisionCacheModel();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      layoutRevisionCacheModel0.userName = "O1=X&*";
      layoutRevisionCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0, layoutRevisionCacheModel0.status);
  }

  @Test
  public void test3()  throws Throwable  {
      LayoutRevisionCacheModel layoutRevisionCacheModel0 = new LayoutRevisionCacheModel();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      layoutRevisionCacheModel0.name = "Hxx(X eu0.8V^8";
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      layoutRevisionCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(false, layoutRevisionCacheModel0.major);
  }

  @Test
  public void test4()  throws Throwable  {
      LayoutRevisionCacheModel layoutRevisionCacheModel0 = new LayoutRevisionCacheModel();
      layoutRevisionCacheModel0.title = "O1=X&*";
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      layoutRevisionCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(false, layoutRevisionCacheModel0.privateLayout);
  }

  @Test
  public void test5()  throws Throwable  {
      LayoutRevisionCacheModel layoutRevisionCacheModel0 = new LayoutRevisionCacheModel();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      layoutRevisionCacheModel0.description = ">-JkhP>;";
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      layoutRevisionCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0L, layoutRevisionCacheModel0.statusByUserId);
  }

  @Test
  public void test6()  throws Throwable  {
      LayoutRevisionCacheModel layoutRevisionCacheModel0 = new LayoutRevisionCacheModel();
      layoutRevisionCacheModel0.robots = "{layoutRevisionId=0, groupId=0, companyId=0, userId=0, userName=null, createDate=0, modifiedDate=0, layoutSetBranchId=0, layoutBranchId=0, parentLayoutRevisionId=0, head=false, major=false, plid=0, privateLayout=false, name=null, title=null, description=null, keywords=null, robots=null, typeSettings=null, iconImage=false, iconImageId=0, themeId=null, colorSchemeId=null, wapThemeId=null, wapColorSchemeId=null, css=null, status=0, statusByUserId=0, statusByUserName=null, statusDate=0}";
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      layoutRevisionCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0L, layoutRevisionCacheModel0.createDate);
  }

  @Test
  public void test7()  throws Throwable  {
      LayoutRevisionCacheModel layoutRevisionCacheModel0 = new LayoutRevisionCacheModel();
      layoutRevisionCacheModel0.themeId = null;
      layoutRevisionCacheModel0.themeId = "{layoutRevisionId=0, groupId=0, companyId=0, userId=0, userName=null, createDate=0, modifiedDate=0, layoutSetBranchId=0, layoutBranchId=0, parentLayoutRevisionId=0, head=false, major=false, plid=0, privateLayout=false, name=null, title=null, description=null, keywords=null, robots=null, typeSettings=null, iconImage=false, iconImageId=0, themeId=null, colorSchemeId=null, wapThemeId=null, wapColorSchemeId=null, css=null, status=0, statusByUserId=0, statusByUserName=null, statusDate=0}";
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      layoutRevisionCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0L, layoutRevisionCacheModel0.userId);
  }

  @Test
  public void test8()  throws Throwable  {
      LayoutRevisionCacheModel layoutRevisionCacheModel0 = new LayoutRevisionCacheModel();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      layoutRevisionCacheModel0.colorSchemeId = ">-JkhP>;";
      layoutRevisionCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0, layoutRevisionCacheModel0.status);
  }

  @Test
  public void test9()  throws Throwable  {
      LayoutRevisionCacheModel layoutRevisionCacheModel0 = new LayoutRevisionCacheModel();
      layoutRevisionCacheModel0.statusByUserName = "Hxx(X eu0.8V^8";
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      layoutRevisionCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0L, layoutRevisionCacheModel0.createDate);
  }
}
