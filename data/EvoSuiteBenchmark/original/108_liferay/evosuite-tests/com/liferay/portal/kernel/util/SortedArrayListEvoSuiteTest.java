/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.SortedArrayList;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SortedArrayListEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SortedArrayList<Integer> sortedArrayList0 = new SortedArrayList<Integer>();
      // Undeclared exception!
      try {
        sortedArrayList0.set(4, (Integer) 4);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      SortedArrayList<Comparable<Integer>> sortedArrayList0 = new SortedArrayList<Comparable<Integer>>((Comparator<Comparable<Integer>>) null);
      // Undeclared exception!
      try {
        sortedArrayList0.add(16, 16);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      SortedArrayList<Integer> sortedArrayList0 = new SortedArrayList<Integer>();
      sortedArrayList0.add((Integer) (-12));
      sortedArrayList0.add((Integer) (-21));
      SortedArrayList<Integer> sortedArrayList1 = new SortedArrayList<Integer>((Collection<? extends Integer>) sortedArrayList0);
      assertEquals("[-21, -12]", sortedArrayList0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      SortedArrayList<Object> sortedArrayList0 = new SortedArrayList<Object>();
      ArrayList<ArrayList<Object>> arrayList0 = new ArrayList<ArrayList<Object>>();
      // Undeclared exception!
      try {
        sortedArrayList0.addAll((-1195), (Collection<?>) arrayList0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      SortedArrayList<Integer> sortedArrayList0 = new SortedArrayList<Integer>();
      sortedArrayList0.add((Integer) (-12));
      assertEquals(1, sortedArrayList0.size());
      
      SortedArrayList<Integer> sortedArrayList1 = new SortedArrayList<Integer>((Collection<? extends Integer>) sortedArrayList0);
      assertTrue(sortedArrayList1.equals(sortedArrayList0));
  }
}
