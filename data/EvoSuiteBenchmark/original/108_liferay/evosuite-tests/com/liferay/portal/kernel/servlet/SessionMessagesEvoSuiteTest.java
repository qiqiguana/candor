/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.servlet;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.caucho.loader.DynamicClassLoader;
import com.liferay.portal.kernel.servlet.SessionMessages;
import com.liferay.portlet.ActionRequestImpl;
import com.liferay.portlet.EventRequestImpl;
import com.liferay.portlet.PortletRequestImpl;
import com.liferay.portlet.PortletServletSession;
import com.liferay.portlet.PortletSessionImpl;
import com.liferay.portlet.RenderRequestImpl;
import com.liferay.portlet.ResourceRequestImpl;
import groovy.lang.GroovyShell;
import java.awt.event.ItemListener;
import java.util.Iterator;
import java.util.Set;
import javax.portlet.EventRequest;
import javax.portlet.PortletContext;
import javax.portlet.PortletRequest;
import javax.portlet.PortletSession;
import javax.portlet.RenderRequest;
import javax.portlet.ResourceRequest;
import javax.portlet.filter.EventRequestWrapper;
import javax.portlet.filter.PortletRequestWrapper;
import javax.portlet.filter.RenderRequestWrapper;
import javax.portlet.filter.ResourceRequestWrapper;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import org.apache.commons.httpclient.Header;
import org.apache.xml.utils.StringVector;
import org.junit.BeforeClass;
import org.portletbridge.portlet.BridgeAuthenticator;
import org.tuckey.web.MockSession;

@RunWith(EvoSuiteRunner.class)
public class SessionMessagesEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      PortletSessionImpl portletSessionImpl0 = new PortletSessionImpl((HttpSession) mockSession0, (PortletContext) null, "", (-1963L));
      Class<?> class0 = GroovyShell.class;
      Object object0 = SessionMessages.get((PortletSession) portletSessionImpl0, class0);
      assertNull(object0);
  }

  @Test
  public void test1()  throws Throwable  {
      ActionRequestImpl actionRequestImpl0 = new ActionRequestImpl();
      // Undeclared exception!
      try {
        SessionMessages.get((PortletRequest) actionRequestImpl0, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try {
        SessionMessages.get((HttpServletRequest) null, "<?m? version=\"");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ActionRequestImpl actionRequestImpl0 = new ActionRequestImpl();
      // Undeclared exception!
      try {
        SessionMessages.print((PortletRequest) actionRequestImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      EventRequestImpl eventRequestImpl0 = new EventRequestImpl();
      MockSession mockSession0 = new MockSession();
      PortletServletSession portletServletSession0 = new PortletServletSession((HttpSession) mockSession0, (PortletRequestImpl) eventRequestImpl0);
      Class<?> class0 = Header.class;
      SessionMessages.add((HttpSession) portletServletSession0, class0);
      assertEquals(0, portletServletSession0.getMaxInactiveInterval());
  }

  @Test
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try {
        SessionMessages.add((HttpServletRequest) null, "", (Object) "http://www.thaiopensource.com/trex");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      ResourceRequestImpl resourceRequestImpl0 = new ResourceRequestImpl();
      // Undeclared exception!
      try {
        SessionMessages.add((PortletRequest) resourceRequestImpl0, "or.apache.axishandlers.soap.SOAPSevice", (Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Class<?> class0 = Header.class;
      // Undeclared exception!
      try {
        SessionMessages.contains((HttpServletRequest) null, class0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      Class<?> class0 = SessionMessages.class;
      // Undeclared exception!
      try {
        SessionMessages.add((HttpServletRequest) null, class0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      ActionRequestImpl actionRequestImpl0 = new ActionRequestImpl();
      PortletRequestWrapper portletRequestWrapper0 = new PortletRequestWrapper((PortletRequest) actionRequestImpl0);
      // Undeclared exception!
      try {
        SessionMessages.clear((PortletRequest) portletRequestWrapper0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      Class<?> class0 = SessionMessages.class;
      Object object0 = SessionMessages.get((HttpSession) mockSession0, class0);
      assertNull(object0);
  }

  @Test
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try {
        SessionMessages.add((HttpServletRequest) null, "8RsB&Ux;9eQ[s#A*SD");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      EventRequestImpl eventRequestImpl0 = new EventRequestImpl();
      // Undeclared exception!
      try {
        SessionMessages.keySet((PortletRequest) eventRequestImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      EventRequestImpl eventRequestImpl0 = new EventRequestImpl();
      EventRequestWrapper eventRequestWrapper0 = new EventRequestWrapper((EventRequest) eventRequestImpl0);
      // Undeclared exception!
      try {
        SessionMessages.add((PortletRequest) eventRequestWrapper0, "R9~wT#1WYT|abb4XTX");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      Class<?> class0 = SessionMessages.class;
      // Undeclared exception!
      try {
        SessionMessages.add((HttpServletRequest) null, class0, (Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      RenderRequestImpl renderRequestImpl0 = new RenderRequestImpl();
      // Undeclared exception!
      try {
        SessionMessages.iterator((PortletRequest) renderRequestImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      ResourceRequestImpl resourceRequestImpl0 = new ResourceRequestImpl();
      Class<?> class0 = SessionMessages.class;
      // Undeclared exception!
      try {
        SessionMessages.get((PortletRequest) resourceRequestImpl0, class0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test17()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      Class<?> class0 = SessionMessages.class;
      SessionMessages.add((HttpSession) mockSession0, class0, (Object) "comment");
      boolean boolean0 = SessionMessages.contains((HttpSession) mockSession0, class0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      ActionRequestImpl actionRequestImpl0 = new ActionRequestImpl();
      // Undeclared exception!
      try {
        SessionMessages.isEmpty((PortletRequest) actionRequestImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test19()  throws Throwable  {
      Class<?> class0 = ItemListener.class;
      // Undeclared exception!
      try {
        SessionMessages.get((HttpServletRequest) null, class0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test20()  throws Throwable  {
      SessionMessages sessionMessages0 = new SessionMessages();
      assertNotNull(sessionMessages0);
  }

  @Test
  public void test21()  throws Throwable  {
      ResourceRequestImpl resourceRequestImpl0 = new ResourceRequestImpl();
      ResourceRequestWrapper resourceRequestWrapper0 = new ResourceRequestWrapper((ResourceRequest) resourceRequestImpl0);
      Class<?> class0 = SessionMessages.class;
      // Undeclared exception!
      try {
        SessionMessages.add((PortletRequest) resourceRequestWrapper0, class0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test22()  throws Throwable  {
      Class<?> class0 = DynamicClassLoader.class;
      // Undeclared exception!
      try {
        SessionMessages.contains((PortletSession) null, class0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test23()  throws Throwable  {
      ResourceRequestImpl resourceRequestImpl0 = new ResourceRequestImpl();
      ResourceRequestWrapper resourceRequestWrapper0 = new ResourceRequestWrapper((ResourceRequest) resourceRequestImpl0);
      // Undeclared exception!
      try {
        SessionMessages.contains((PortletRequest) resourceRequestWrapper0, "F");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try {
        SessionMessages.size((HttpServletRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test25()  throws Throwable  {
      Class<?> class0 = SessionMessages.class;
      // Undeclared exception!
      try {
        SessionMessages.add((PortletSession) null, class0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try {
        SessionMessages.keySet((HttpServletRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try {
        SessionMessages.iterator((HttpServletRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try {
        SessionMessages.isEmpty((HttpServletRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try {
        SessionMessages.clear((HttpServletRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test30()  throws Throwable  {
      RenderRequestImpl renderRequestImpl0 = new RenderRequestImpl();
      RenderRequestWrapper renderRequestWrapper0 = new RenderRequestWrapper((RenderRequest) renderRequestImpl0);
      Class<?> class0 = BridgeAuthenticator.class;
      // Undeclared exception!
      try {
        SessionMessages.contains((PortletRequest) renderRequestWrapper0, class0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try {
        SessionMessages.contains((HttpServletRequest) null, "MH");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try {
        SessionMessages.print((HttpServletRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test33()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      Class<?> class0 = SessionMessages.class;
      boolean boolean0 = SessionMessages.contains((HttpSession) mockSession0, class0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test34()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      PortletSessionImpl portletSessionImpl0 = new PortletSessionImpl((HttpSession) mockSession0, (PortletContext) null, "9sz.", (-1455L));
      Class<?> class0 = SessionMessages.class;
      SessionMessages.add((PortletSession) portletSessionImpl0, class0, (Object) "wrapped");
      SessionMessages.print((PortletSession) portletSessionImpl0);
      assertEquals(0L, portletSessionImpl0.getLastAccessedTime());
  }

  @Test
  public void test35()  throws Throwable  {
      ActionRequestImpl actionRequestImpl0 = new ActionRequestImpl();
      Class<?> class0 = StringVector.class;
      // Undeclared exception!
      try {
        SessionMessages.add((PortletRequest) actionRequestImpl0, class0, (Object) actionRequestImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test36()  throws Throwable  {
      EventRequestImpl eventRequestImpl0 = new EventRequestImpl();
      // Undeclared exception!
      try {
        SessionMessages.size((PortletRequest) eventRequestImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test37()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      SessionMessages.clear((HttpSession) mockSession0);
      assertEquals(false, mockSession0.isNew());
  }

  @Test
  public void test38()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      EventRequestImpl eventRequestImpl0 = new EventRequestImpl();
      SessionMessages.add((HttpSession) mockSession0, "9sz.");
      PortletServletSession portletServletSession0 = new PortletServletSession((HttpSession) mockSession0, (PortletRequestImpl) eventRequestImpl0);
      SessionMessages.clear((HttpSession) portletServletSession0);
      assertEquals(0L, portletServletSession0.getLastAccessedTime());
  }

  @Test
  public void test39()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      PortletSessionImpl portletSessionImpl0 = new PortletSessionImpl((HttpSession) mockSession0, (PortletContext) null, "9sz.", (-1455L));
      boolean boolean0 = SessionMessages.contains((PortletSession) portletSessionImpl0, "9sz.");
      assertEquals(false, boolean0);
  }

  @Test
  public void test40()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      Class<?> class0 = SessionMessages.class;
      SessionMessages.add((HttpSession) mockSession0, class0, (Object) "comment");
      String string0 = (String)SessionMessages.get((HttpSession) mockSession0, class0);
      assertEquals("comment", string0);
  }

  @Test
  public void test41()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      PortletSessionImpl portletSessionImpl0 = new PortletSessionImpl((HttpSession) mockSession0, (PortletContext) null, "", (-1963L));
      Class<?> class0 = GroovyShell.class;
      SessionMessages.add((PortletSession) portletSessionImpl0, class0, (Object) null);
      Object object0 = SessionMessages.get((PortletSession) portletSessionImpl0, class0);
      assertNull(object0);
  }

  @Test
  public void test42()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      SessionMessages.add((HttpSession) mockSession0, "org.apache.axis.handlers.soap.SOAPService", (Object) "string:");
      boolean boolean0 = SessionMessages.isEmpty((HttpSession) mockSession0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test43()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      boolean boolean0 = SessionMessages.isEmpty((HttpSession) mockSession0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test44()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      Class<?> class0 = SessionMessages.class;
      SessionMessages.add((HttpSession) mockSession0, class0, (Object) "comment");
      SessionMessages.print((HttpSession) mockSession0);
      assertNull(mockSession0.getId());
  }

  @Test
  public void test45()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      SessionMessages.print((HttpSession) mockSession0);
      assertEquals(0, mockSession0.getMaxInactiveInterval());
  }

  @Test
  public void test46()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      PortletSessionImpl portletSessionImpl0 = new PortletSessionImpl((HttpSession) mockSession0, (PortletContext) null, "java.util.Iterator", 0L);
      Iterator<String> iterator0 = SessionMessages.iterator((PortletSession) portletSessionImpl0);
      assertEquals(false, iterator0.hasNext());
  }

  @Test
  public void test47()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      Class<?> class0 = SessionMessages.class;
      SessionMessages.add((HttpSession) mockSession0, class0, (Object) "comment");
      Set<String> set0 = SessionMessages.keySet((HttpSession) mockSession0);
      assertEquals(false, set0.isEmpty());
      assertNotNull(set0);
  }

  @Test
  public void test48()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      Set<String> set0 = SessionMessages.keySet((HttpSession) mockSession0);
      assertEquals(0, set0.size());
  }

  @Test
  public void test49()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      PortletSessionImpl portletSessionImpl0 = new PortletSessionImpl((HttpSession) mockSession0, (PortletContext) null, "9sz.", (-1455L));
      Class<?> class0 = SessionMessages.class;
      SessionMessages.add((PortletSession) portletSessionImpl0, class0, (Object) "wrapped");
      Set<String> set0 = SessionMessages.keySet((PortletSession) portletSessionImpl0);
      assertNotNull(set0);
      assertEquals(false, set0.isEmpty());
  }

  @Test
  public void test50()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      PortletSessionImpl portletSessionImpl0 = new PortletSessionImpl((HttpSession) mockSession0, (PortletContext) null, "", (-1963L));
      Set<String> set0 = SessionMessages.keySet((PortletSession) portletSessionImpl0);
      assertEquals(0, set0.size());
  }

  @Test
  public void test51()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      SessionMessages.add((HttpSession) mockSession0, "9sz.");
      int int0 = SessionMessages.size((HttpSession) mockSession0);
      assertEquals(1, int0);
  }

  @Test
  public void test52()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      RenderRequestImpl renderRequestImpl0 = new RenderRequestImpl();
      PortletServletSession portletServletSession0 = new PortletServletSession((HttpSession) mockSession0, (PortletRequestImpl) renderRequestImpl0);
      int int0 = SessionMessages.size((HttpSession) portletServletSession0);
      assertEquals(0, int0);
  }

  @Test
  public void test53()  throws Throwable  {
      MockSession mockSession0 = new MockSession();
      PortletSessionImpl portletSessionImpl0 = new PortletSessionImpl((HttpSession) mockSession0, (PortletContext) null, "9sz.", (-1455L));
      Class<?> class0 = SessionMessages.class;
      SessionMessages.add((PortletSession) portletSessionImpl0, class0, (Object) "wrapped");
      int int0 = SessionMessages.size((PortletSession) portletSessionImpl0);
      assertEquals(1, int0);
  }
}
