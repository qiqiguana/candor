/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.security.jaas.ext;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.security.jaas.ext.BasicLoginModule;
import java.security.Principal;
import java.util.HashMap;
import java.util.Map;
import javax.security.auth.Subject;
import javax.security.auth.callback.CallbackHandler;
import javax.security.auth.login.LoginException;
import jcifs.smb.NtlmPasswordAuthentication;
import org.junit.BeforeClass;
import org.postgresql.gss.GSSCallbackHandler;

@RunWith(EvoSuiteRunner.class)
public class BasicLoginModuleEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BasicLoginModule basicLoginModule0 = new BasicLoginModule();
      boolean boolean0 = basicLoginModule0.commit();
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      BasicLoginModule basicLoginModule0 = new BasicLoginModule();
      String string0 = basicLoginModule0.getPassword();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      BasicLoginModule basicLoginModule0 = new BasicLoginModule();
      boolean boolean0 = basicLoginModule0.abort();
      assertEquals(true, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      BasicLoginModule basicLoginModule0 = new BasicLoginModule();
      GSSCallbackHandler gSSCallbackHandler0 = new GSSCallbackHandler("cO!nN@9.YCg9,/COk5", "cO!nN@9.YCg9,/COk5");
      HashMap<String, BasicLoginModule> hashMap0 = new HashMap<String, BasicLoginModule>();
      basicLoginModule0.initialize((Subject) null, (CallbackHandler) gSSCallbackHandler0, (Map<String, ?>) hashMap0, (Map<String, ?>) hashMap0);
      try {
        basicLoginModule0.login();
        fail("Expecting exception: LoginException");
      } catch(LoginException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      BasicLoginModule basicLoginModule0 = new BasicLoginModule();
      GSSCallbackHandler gSSCallbackHandler0 = new GSSCallbackHandler((String) null, "");
      HashMap<String, BasicLoginModule> hashMap0 = new HashMap<String, BasicLoginModule>();
      basicLoginModule0.initialize((Subject) null, (CallbackHandler) gSSCallbackHandler0, (Map<String, ?>) hashMap0, (Map<String, ?>) hashMap0);
      boolean boolean0 = basicLoginModule0.login();
      assertEquals(true, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      BasicLoginModule basicLoginModule0 = new BasicLoginModule();
      // Undeclared exception!
      try {
        basicLoginModule0.logout();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      BasicLoginModule basicLoginModule0 = new BasicLoginModule();
      byte[] byteArray0 = new byte[4];
      NtlmPasswordAuthentication ntlmPasswordAuthentication0 = new NtlmPasswordAuthentication("O#,\"[O7wmLPLh(goQ}B", "O#,\"[O7wmLPLh(goQ}B", byteArray0, byteArray0, byteArray0);
      basicLoginModule0.setPrincipal((Principal) ntlmPasswordAuthentication0);
      // Undeclared exception!
      try {
        basicLoginModule0.commit();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
