/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.BooleanWrapper;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BooleanWrapperEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BooleanWrapper booleanWrapper0 = new BooleanWrapper();
      int int0 = booleanWrapper0.compareTo(booleanWrapper0);
      assertEquals(false, booleanWrapper0.getValue());
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      BooleanWrapper booleanWrapper0 = new BooleanWrapper();
      int int0 = booleanWrapper0.compareTo((BooleanWrapper) null);
      assertEquals(1, int0);
      assertEquals(false, booleanWrapper0.getValue());
  }

  @Test
  public void test2()  throws Throwable  {
      BooleanWrapper booleanWrapper0 = new BooleanWrapper();
      assertEquals(false, booleanWrapper0.getValue());
      
      booleanWrapper0.setValue(true);
      int int0 = booleanWrapper0.compareTo(booleanWrapper0);
      assertEquals(true, booleanWrapper0.getValue());
      assertEquals(0, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      BooleanWrapper booleanWrapper0 = new BooleanWrapper();
      booleanWrapper0.setValue(true);
      BooleanWrapper booleanWrapper1 = new BooleanWrapper();
      int int0 = booleanWrapper0.compareTo(booleanWrapper1);
      assertEquals(true, booleanWrapper0.getValue());
      assertEquals(1, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      BooleanWrapper booleanWrapper0 = new BooleanWrapper();
      BooleanWrapper booleanWrapper1 = new BooleanWrapper();
      booleanWrapper1.setValue(true);
      int int0 = booleanWrapper0.compareTo(booleanWrapper1);
      assertEquals((-1), int0);
      assertEquals(true, booleanWrapper1.getValue());
  }
}
