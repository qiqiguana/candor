/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.WorkflowDefinitionLink;
import com.liferay.portal.model.WorkflowDefinitionLinkSoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class WorkflowDefinitionLinkSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      workflowDefinitionLinkSoap0.setCreateDate((Date) null);
      assertEquals(0L, workflowDefinitionLinkSoap0.getClassPK());
  }

  @Test
  public void test1()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      workflowDefinitionLinkSoap0.setWorkflowDefinitionVersion(1039);
      assertEquals(1039, workflowDefinitionLinkSoap0.getWorkflowDefinitionVersion());
  }

  @Test
  public void test2()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      workflowDefinitionLinkSoap0.setUserId((-1879L));
      assertEquals((-1879L), workflowDefinitionLinkSoap0.getUserId());
  }

  @Test
  public void test3()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      workflowDefinitionLinkSoap0.setGroupId((-1879L));
      assertEquals((-1879L), workflowDefinitionLinkSoap0.getGroupId());
  }

  @Test
  public void test4()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      long long0 = workflowDefinitionLinkSoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test5()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      int int0 = workflowDefinitionLinkSoap0.getWorkflowDefinitionVersion();
      assertEquals(0, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      long long0 = workflowDefinitionLinkSoap0.getClassPK();
      assertEquals(0L, long0);
  }

  @Test
  public void test7()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      long long0 = workflowDefinitionLinkSoap0.getGroupId();
      assertEquals(0L, long0);
  }

  @Test
  public void test8()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      String string0 = workflowDefinitionLinkSoap0.getWorkflowDefinitionName();
      assertNull(string0);
  }

  @Test
  public void test9()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      workflowDefinitionLinkSoap0.setClassPK((-1879L));
      assertEquals((-1879L), workflowDefinitionLinkSoap0.getClassPK());
  }

  @Test
  public void test10()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      workflowDefinitionLinkSoap0.setCompanyId(0L);
      assertEquals(0L, workflowDefinitionLinkSoap0.getTypePK());
  }

  @Test
  public void test11()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      Date date0 = workflowDefinitionLinkSoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test12()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      workflowDefinitionLinkSoap0.setTypePK(0L);
      assertEquals(0L, workflowDefinitionLinkSoap0.getClassPK());
  }

  @Test
  public void test13()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      workflowDefinitionLinkSoap0.setPrimaryKey(0L);
      assertEquals(0L, workflowDefinitionLinkSoap0.getClassPK());
  }

  @Test
  public void test14()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      workflowDefinitionLinkSoap0.setUserName("privaeLa'4yout");
      assertEquals(0, workflowDefinitionLinkSoap0.getWorkflowDefinitionVersion());
  }

  @Test
  public void test15()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      workflowDefinitionLinkSoap0.setWorkflowDefinitionName("privaeLa'4yout");
      assertEquals(0, workflowDefinitionLinkSoap0.getWorkflowDefinitionVersion());
  }

  @Test
  public void test16()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      workflowDefinitionLinkSoap0.setModifiedDate((Date) null);
      assertEquals(0L, workflowDefinitionLinkSoap0.getCompanyId());
  }

  @Test
  public void test17()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      long long0 = workflowDefinitionLinkSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test18()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      Date date0 = workflowDefinitionLinkSoap0.getModifiedDate();
      assertNull(date0);
  }

  @Test
  public void test19()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      String string0 = workflowDefinitionLinkSoap0.getUserName();
      assertNull(string0);
  }

  @Test
  public void test20()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      workflowDefinitionLinkSoap0.setClassNameId(0L);
      assertEquals(0L, workflowDefinitionLinkSoap0.getTypePK());
  }

  @Test
  public void test21()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      long long0 = workflowDefinitionLinkSoap0.getWorkflowDefinitionLinkId();
      assertEquals(0L, long0);
  }

  @Test
  public void test22()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      long long0 = workflowDefinitionLinkSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test23()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      long long0 = workflowDefinitionLinkSoap0.getClassNameId();
      assertEquals(0L, long0);
  }

  @Test
  public void test24()  throws Throwable  {
      LinkedList<WorkflowDefinitionLink> linkedList0 = new LinkedList<WorkflowDefinitionLink>();
      linkedList0.add((WorkflowDefinitionLink) null);
      // Undeclared exception!
      try {
        WorkflowDefinitionLinkSoap.toSoapModels((List<WorkflowDefinitionLink>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test25()  throws Throwable  {
      WorkflowDefinitionLinkSoap workflowDefinitionLinkSoap0 = new WorkflowDefinitionLinkSoap();
      long long0 = workflowDefinitionLinkSoap0.getTypePK();
      assertEquals(0L, long0);
  }

  @Test
  public void test26()  throws Throwable  {
      WorkflowDefinitionLink[][] workflowDefinitionLinkArray0 = new WorkflowDefinitionLink[1][4];
      // Undeclared exception!
      try {
        WorkflowDefinitionLinkSoap.toSoapModels(workflowDefinitionLinkArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test27()  throws Throwable  {
      LinkedList<WorkflowDefinitionLink> linkedList0 = new LinkedList<WorkflowDefinitionLink>();
      WorkflowDefinitionLinkSoap[] workflowDefinitionLinkSoapArray0 = WorkflowDefinitionLinkSoap.toSoapModels((List<WorkflowDefinitionLink>) linkedList0);
      assertNotNull(workflowDefinitionLinkSoapArray0);
  }
}
