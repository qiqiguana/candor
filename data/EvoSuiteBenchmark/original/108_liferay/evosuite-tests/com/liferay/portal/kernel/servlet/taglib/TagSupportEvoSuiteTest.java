/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.servlet.taglib;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.servlet.taglib.TagSupport;
import javax.servlet.FilterChain;
import javax.servlet.ServletContext;
import javax.servlet.jsp.JspException;
import javax.servlet.jsp.PageContext;
import javax.servlet.jsp.tagext.BodyTagSupport;
import javax.servlet.jsp.tagext.JspFragment;
import javax.servlet.jsp.tagext.Tag;
import org.junit.BeforeClass;
import org.springframework.mock.web.MockPageContext;

@RunWith(EvoSuiteRunner.class)
public class TagSupportEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TagSupport tagSupport0 = new TagSupport();
      int int0 = tagSupport0.doStartTag();
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      TagSupport tagSupport0 = new TagSupport();
      MockPageContext mockPageContext0 = new MockPageContext((ServletContext) null);
      tagSupport0.setPageContext((PageContext) mockPageContext0);
  }

  @Test
  public void test2()  throws Throwable  {
      TagSupport tagSupport0 = new TagSupport();
      tagSupport0.release();
      assertEquals(0, tagSupport0.doStartTag());
  }

  @Test
  public void test3()  throws Throwable  {
      TagSupport tagSupport0 = new TagSupport();
      int int0 = tagSupport0.doEndTag();
      assertEquals(6, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      Class<?> class0 = FilterChain.class;
      Tag tag0 = TagSupport.findAncestorWithClass((Tag) null, class0);
      assertNull(tag0);
  }

  @Test
  public void test5()  throws Throwable  {
      BodyTagSupport bodyTagSupport0 = new BodyTagSupport();
      Tag tag0 = TagSupport.findAncestorWithClass((Tag) bodyTagSupport0, (Class<?>) null);
      assertNull(tag0);
  }

  @Test
  public void test6()  throws Throwable  {
      TagSupport tagSupport0 = new TagSupport();
      Class<?> class0 = JspFragment.class;
      Tag tag0 = TagSupport.findAncestorWithClass((Tag) tagSupport0, class0);
      assertNull(tag0);
  }

  @Test
  public void test7()  throws Throwable  {
      TagSupport tagSupport0 = new TagSupport();
      TagSupport tagSupport1 = new TagSupport();
      Class<?> class0 = FilterChain.class;
      tagSupport1.setParent((Tag) tagSupport0);
      TagSupport tagSupport2 = (TagSupport)TagSupport.findAncestorWithClass((Tag) tagSupport1, class0);
      assertNull(tagSupport2);
  }

  @Test
  public void test8()  throws Throwable  {
      TagSupport tagSupport0 = new TagSupport();
      tagSupport0.setParent((Tag) tagSupport0);
      Class<?> class0 = TagSupport.class;
      TagSupport tagSupport1 = (TagSupport)TagSupport.findAncestorWithClass((Tag) tagSupport0, class0);
      assertSame(tagSupport0, tagSupport1);
  }
}
