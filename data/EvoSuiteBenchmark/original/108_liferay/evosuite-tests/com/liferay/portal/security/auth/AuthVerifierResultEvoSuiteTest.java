/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.security.auth;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.security.auth.AuthVerifierResult;
import java.util.Map;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AuthVerifierResultEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AuthVerifierResult authVerifierResult0 = new AuthVerifierResult();
      authVerifierResult0.setUserId(1637L);
      assertEquals(1637L, authVerifierResult0.getUserId());
      assertEquals("{settings={}, state=NOT_APPLICABLE, userId=1637}", authVerifierResult0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      AuthVerifierResult authVerifierResult0 = new AuthVerifierResult();
      Map<String, Object> map0 = authVerifierResult0.getSettings();
      authVerifierResult0.setSettings(map0);
      assertEquals("{settings={}, state=NOT_APPLICABLE, userId=0}", authVerifierResult0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      AuthVerifierResult authVerifierResult0 = new AuthVerifierResult();
      authVerifierResult0.setPassword("9yn0NP/=eDj>");
      assertEquals("{settings={}, state=NOT_APPLICABLE, userId=0}", authVerifierResult0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      AuthVerifierResult authVerifierResult0 = new AuthVerifierResult();
      String string0 = authVerifierResult0.toString();
      assertNotNull(string0);
      assertEquals("{settings={}, state=NOT_APPLICABLE, userId=0}", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      AuthVerifierResult authVerifierResult0 = new AuthVerifierResult();
      AuthVerifierResult.State authVerifierResult_State0 = authVerifierResult0.getState();
      authVerifierResult0.setState(authVerifierResult_State0);
      assertEquals("{settings={}, state=NOT_APPLICABLE, userId=0}", authVerifierResult0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      AuthVerifierResult authVerifierResult0 = new AuthVerifierResult();
      authVerifierResult0.getUserId();
      assertEquals("{settings={}, state=NOT_APPLICABLE, userId=0}", authVerifierResult0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      AuthVerifierResult authVerifierResult0 = new AuthVerifierResult();
      authVerifierResult0.getPassword();
      assertEquals("{settings={}, state=NOT_APPLICABLE, userId=0}", authVerifierResult0.toString());
  }
}
