/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.xml.xpath;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.xml.xpath.MatchesFunction;
import java.util.List;
import java.util.regex.PatternSyntaxException;
import org.apache.axis.message.SOAPEnvelope;
import org.apache.axis.schema.SchemaVersion;
import org.apache.axis.schema.SchemaVersion2000;
import org.apache.axis.soap.SOAP11Constants;
import org.apache.axis.soap.SOAPConstants;
import org.dom4j.QName;
import org.dom4j.bean.BeanElement;
import org.dom4j.dom.DOMElement;
import org.dom4j.util.UserDataElement;
import org.jaxen.Context;
import org.jaxen.ContextSupport;
import org.jaxen.FunctionCallException;
import org.jaxen.Navigator;
import org.jaxen.dom4j.DocumentNavigator;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MatchesFunctionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DocumentNavigator documentNavigator0 = (DocumentNavigator)DocumentNavigator.getInstance();
      Boolean boolean0 = MatchesFunction.evaluate((Object) "UPPER_TRAILING_CORNER", (Object) "UPPER_TRAILING_CORNER", (Navigator) documentNavigator0);
      assertEquals("true", boolean0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      MatchesFunction matchesFunction0 = new MatchesFunction();
      ContextSupport contextSupport0 = new ContextSupport();
      Context context0 = new Context(contextSupport0);
      UserDataElement userDataElement0 = new UserDataElement("!Q}93w\"!Mno2w7jD");
      QName qName0 = userDataElement0.getQName("!Q}93w\"!Mno2w7jD");
      BeanElement beanElement0 = new BeanElement(qName0, (Object) "ActionCommandKey");
      List<Object> list0 = beanElement0.attributes();
      Boolean boolean0 = (Boolean)matchesFunction0.call(context0, (List) list0);
      assertEquals(true, (boolean)boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try {
        MatchesFunction.evaluate((Object) "/d#::pPg!m2Wl/text()", (Object) "org.dom4j.util.IndexedElement@19d9fe4d [Element: <d#::pPg!m2Wl attributes: []/>]", (Object) "org.dom4j.util.IndexedElement@19d9fe4d [Element: <d#::pPg!m2Wl attributes: []/>]", (Navigator) null);
        fail("Expecting exception: PatternSyntaxException");
      } catch(PatternSyntaxException e) {
        /*
         * Unclosed character class near index 79
         * org.dom4j.util.IndexedElement@19d9fe4d [Element: <d#::pPg!m2Wl attributes: []/>]
         *                                                                                ^
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      MatchesFunction matchesFunction0 = new MatchesFunction();
      Context context0 = new Context((ContextSupport) null);
      SOAP11Constants sOAP11Constants0 = new SOAP11Constants();
      SchemaVersion2000 schemaVersion2000_0 = (SchemaVersion2000)SchemaVersion.SCHEMA_2000;
      SOAPEnvelope sOAPEnvelope0 = null;
      try {
        sOAPEnvelope0 = new SOAPEnvelope(true, (SOAPConstants) sOAP11Constants0, (SchemaVersion) schemaVersion2000_0);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class org.apache.axis.message.SOAPEnvelope
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      MatchesFunction matchesFunction0 = new MatchesFunction();
      ContextSupport contextSupport0 = new ContextSupport();
      Context context0 = new Context(contextSupport0);
      DOMElement dOMElement0 = new DOMElement("J-nWCAO'}");
      QName qName0 = dOMElement0.getQName("J-nWCAO'}");
      UserDataElement userDataElement0 = new UserDataElement(qName0);
      List<Object> list0 = userDataElement0.elements("J-nWCAO'}");
      try {
        matchesFunction0.call(context0, (List) list0);
        fail("Expecting exception: FunctionCallException");
      } catch(FunctionCallException e) {
        /*
         * matches() requires two or three arguments
         */
      }
  }
}
