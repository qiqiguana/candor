/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.bi.rules;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.bi.rules.RulesEngineProxyBean;
import com.liferay.portal.kernel.bi.rules.Fact;
import com.liferay.portal.kernel.bi.rules.Query;
import com.liferay.portal.kernel.bi.rules.RulesEngine;
import com.liferay.portal.kernel.bi.rules.RulesEngineException;
import com.liferay.portal.kernel.bi.rules.RulesEngineUtil;
import com.liferay.portal.kernel.bi.rules.RulesResourceRetriever;
import com.liferay.portal.kernel.resource.ByteArrayResourceRetriever;
import com.liferay.portal.kernel.resource.ContextClassLoaderResourceRetriever;
import com.liferay.portal.kernel.resource.ResourceRetriever;
import com.liferay.portal.kernel.resource.StringResourceRetriever;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RulesEngineUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RulesEngineUtil rulesEngineUtil0 = new RulesEngineUtil();
      RulesEngineProxyBean rulesEngineProxyBean0 = new RulesEngineProxyBean();
      rulesEngineUtil0.setRulesEngine((RulesEngine) rulesEngineProxyBean0);
  }

  @Test
  public void test1()  throws Throwable  {
      LinkedList<Fact<?>> linkedList0 = new LinkedList<Fact<?>>();
      Query query0 = Query.createStandardQuery();
      ClassLoader[] classLoaderArray0 = new ClassLoader[6];
      // Undeclared exception!
      try {
        RulesEngineUtil.execute("Received ", (List<Fact<?>>) linkedList0, query0, classLoaderArray0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      LinkedList<Fact<?>> linkedList0 = new LinkedList<Fact<?>>();
      // Undeclared exception!
      try {
        RulesEngineUtil.execute((String) null, (List<Fact<?>>) linkedList0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      LinkedList<Fact<?>> linkedList0 = new LinkedList<Fact<?>>();
      ClassLoader[] classLoaderArray0 = new ClassLoader[8];
      // Undeclared exception!
      try {
        RulesEngineUtil.execute("", (List<Fact<?>>) linkedList0, classLoaderArray0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      RulesResourceRetriever rulesResourceRetriever0 = new RulesResourceRetriever("A~GB~t>{Tt");
      // Undeclared exception!
      try {
        RulesEngineUtil.execute(rulesResourceRetriever0, (List<Fact<?>>) null);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try {
        RulesEngineUtil.remove((String) null);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayResourceRetriever byteArrayResourceRetriever0 = new ByteArrayResourceRetriever(byteArray0);
      RulesResourceRetriever rulesResourceRetriever0 = new RulesResourceRetriever((ResourceRetriever) byteArrayResourceRetriever0, "kV@@4;");
      // Undeclared exception!
      try {
        RulesEngineUtil.add("kV@@4;", rulesResourceRetriever0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      StringResourceRetriever stringResourceRetriever0 = new StringResourceRetriever("");
      RulesResourceRetriever rulesResourceRetriever0 = new RulesResourceRetriever((ResourceRetriever) stringResourceRetriever0, "");
      LinkedList<Fact<?>> linkedList0 = new LinkedList<Fact<?>>();
      ClassLoader[] classLoaderArray0 = new ClassLoader[8];
      // Undeclared exception!
      try {
        RulesEngineUtil.execute(rulesResourceRetriever0, (List<Fact<?>>) linkedList0, (Query) null, classLoaderArray0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      RulesResourceRetriever rulesResourceRetriever0 = new RulesResourceRetriever("#i6^&Zy%BD5J?&cI");
      ClassLoader[] classLoaderArray0 = new ClassLoader[5];
      // Undeclared exception!
      try {
        RulesEngineUtil.add("#i6^&Zy%BD5J?&cI", rulesResourceRetriever0, classLoaderArray0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      ByteArrayResourceRetriever byteArrayResourceRetriever0 = new ByteArrayResourceRetriever(byteArray0);
      RulesResourceRetriever rulesResourceRetriever0 = new RulesResourceRetriever((ResourceRetriever) byteArrayResourceRetriever0);
      // Undeclared exception!
      try {
        RulesEngineUtil.update("", rulesResourceRetriever0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try {
        RulesEngineUtil.containsRuleDomain(".Had1ler");
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      ContextClassLoaderResourceRetriever contextClassLoaderResourceRetriever0 = new ContextClassLoaderResourceRetriever("|XBj");
      RulesResourceRetriever rulesResourceRetriever0 = new RulesResourceRetriever((ResourceRetriever) contextClassLoaderResourceRetriever0, "|XBj");
      LinkedList<Fact<?>> linkedList0 = new LinkedList<Fact<?>>();
      Query query0 = Query.createCustomQuery("|XBj", "|XBj");
      // Undeclared exception!
      try {
        RulesEngineUtil.execute(rulesResourceRetriever0, (List<Fact<?>>) linkedList0, query0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      LinkedList<Fact<?>> linkedList0 = new LinkedList<Fact<?>>();
      Query query0 = Query.createStandardQuery();
      // Undeclared exception!
      try {
        RulesEngineUtil.execute("P4NIFLAp", (List<Fact<?>>) linkedList0, query0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      LinkedList<Fact<?>> linkedList0 = new LinkedList<Fact<?>>();
      ClassLoader[] classLoaderArray0 = new ClassLoader[2];
      RulesResourceRetriever rulesResourceRetriever0 = new RulesResourceRetriever(" and reuse previous one");
      // Undeclared exception!
      try {
        RulesEngineUtil.execute(rulesResourceRetriever0, (List<Fact<?>>) linkedList0, classLoaderArray0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      ClassLoader[] classLoaderArray0 = new ClassLoader[14];
      // Undeclared exception!
      try {
        RulesEngineUtil.update("", (RulesResourceRetriever) null, classLoaderArray0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }
}
