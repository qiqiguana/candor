/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.servlet;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import bsh.servlet.BshServlet;
import com.liferay.portal.kernel.servlet.PageContextWrapper;
import java.io.IOException;
import java.io.Writer;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.el.ELContext;
import javax.servlet.Servlet;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.jsp.JspContext;
import javax.servlet.jsp.JspWriter;
import javax.servlet.jsp.PageContext;
import org.apache.jasper.runtime.JspContextWrapper;
import org.junit.BeforeClass;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.mock.web.MockHttpServletResponse;
import org.springframework.mock.web.MockHttpSession;
import org.springframework.mock.web.MockJspWriter;
import org.springframework.mock.web.MockPageContext;
import org.springframework.mock.web.MockServletConfig;
import org.tuckey.web.MockServletContext;

@RunWith(EvoSuiteRunner.class)
public class PageContextWrapperEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MockPageContext mockPageContext0 = new MockPageContext();
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) mockPageContext0);
      pageContextWrapper0.getAttributesScope("i]#XiyV|i5=");
  }

  @Test
  public void test1()  throws Throwable  {
      MockPageContext mockPageContext0 = new MockPageContext();
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) mockPageContext0);
      pageContextWrapper0.setAttribute("", (Object) mockPageContext0);
  }

  @Test
  public void test2()  throws Throwable  {
      MockPageContext mockPageContext0 = new MockPageContext();
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) mockPageContext0);
      // Undeclared exception!
      try {
        pageContextWrapper0.getAttributeNamesInScope(7);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Invalid scope: 7
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      MockPageContext mockPageContext0 = new MockPageContext();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JspContextWrapper jspContextWrapper0 = new JspContextWrapper((JspContext) mockPageContext0, arrayList0, arrayList0, arrayList0, (Map<String, String>) hashMap0);
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) jspContextWrapper0);
      BshServlet bshServlet0 = new BshServlet();
      MockHttpServletRequest mockHttpServletRequest0 = (MockHttpServletRequest)mockPageContext0.getRequest();
      MockHttpServletResponse mockHttpServletResponse0 = (MockHttpServletResponse)pageContextWrapper0.getResponse();
      pageContextWrapper0.initialize((Servlet) bshServlet0, (ServletRequest) mockHttpServletRequest0, (ServletResponse) mockHttpServletResponse0, "?D.<", false, 8761, false);
      assertEquals(false, mockHttpServletRequest0.isRequestedSessionIdFromUrl());
  }

  @Test
  public void test4()  throws Throwable  {
      MockPageContext mockPageContext0 = new MockPageContext((ServletContext) null);
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) mockPageContext0);
      Object object0 = pageContextWrapper0.findAttribute("}2tZ@q`|q/q}C}");
      assertNull(object0);
  }

  @Test
  public void test5()  throws Throwable  {
      MockPageContext mockPageContext0 = new MockPageContext();
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) mockPageContext0);
      MockPageContext mockPageContext1 = (MockPageContext)pageContextWrapper0.getWrappedPageContext();
      assertSame(mockPageContext1, mockPageContext0);
  }

  @Test
  public void test6()  throws Throwable  {
      MockPageContext mockPageContext0 = new MockPageContext();
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) mockPageContext0);
      // Undeclared exception!
      try {
        pageContextWrapper0.include((String) null, false);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * include
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      MockPageContext mockPageContext0 = new MockPageContext();
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) mockPageContext0);
      // Undeclared exception!
      try {
        pageContextWrapper0.removeAttribute(".&eh-y@.ab", 9);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Invalid scope: 9
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      MockServletContext mockServletContext0 = new MockServletContext();
      MockPageContext mockPageContext0 = new MockPageContext((ServletContext) mockServletContext0);
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) mockPageContext0);
      // Undeclared exception!
      try {
        pageContextWrapper0.pushBody();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      MockPageContext mockPageContext0 = new MockPageContext();
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) mockPageContext0);
      MockPageContext mockPageContext1 = (MockPageContext)pageContextWrapper0.getPage();
      assertSame(mockPageContext0, mockPageContext1);
  }

  @Test
  public void test10()  throws Throwable  {
      MockPageContext mockPageContext0 = new MockPageContext((ServletContext) null);
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) mockPageContext0);
      org.springframework.mock.web.MockServletContext mockServletContext0 = (org.springframework.mock.web.MockServletContext)pageContextWrapper0.getServletContext();
      assertEquals("MockServletContext", mockServletContext0.getServletContextName());
  }

  @Test
  public void test11()  throws Throwable  {
      MockPageContext mockPageContext0 = new MockPageContext();
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) mockPageContext0);
      MockJspWriter mockJspWriter0 = (MockJspWriter)pageContextWrapper0.getOut();
      assertEquals(true, mockJspWriter0.isAutoFlush());
  }

  @Test
  public void test12()  throws Throwable  {
      MockServletContext mockServletContext0 = new MockServletContext();
      MockPageContext mockPageContext0 = new MockPageContext((ServletContext) mockServletContext0);
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) mockPageContext0);
      JspWriter jspWriter0 = pageContextWrapper0.pushBody((Writer) null);
      assertNull(jspWriter0);
  }

  @Test
  public void test13()  throws Throwable  {
      MockPageContext mockPageContext0 = new MockPageContext();
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) mockPageContext0);
      // Undeclared exception!
      try {
        pageContextWrapper0.getErrorData();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      MockPageContext mockPageContext0 = new MockPageContext((ServletContext) null);
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) mockPageContext0);
      MockServletConfig mockServletConfig0 = (MockServletConfig)pageContextWrapper0.getServletConfig();
      assertEquals("", mockServletConfig0.getServletName());
  }

  @Test
  public void test15()  throws Throwable  {
      MockPageContext mockPageContext0 = new MockPageContext((ServletContext) null);
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) mockPageContext0);
      Object object0 = pageContextWrapper0.getAttribute("}2tZ@q`|q/q}C}");
      assertNull(object0);
  }

  @Test
  public void test16()  throws Throwable  {
      MockPageContext mockPageContext0 = new MockPageContext();
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) mockPageContext0);
      // Undeclared exception!
      try {
        pageContextWrapper0.forward("");
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * forward
         */
      }
  }

  @Test
  public void test17()  throws Throwable  {
      MockPageContext mockPageContext0 = new MockPageContext((ServletContext) null);
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) mockPageContext0);
      pageContextWrapper0.removeAttribute("}2tZ@q`|q/q}C}");
  }

  @Test
  public void test18()  throws Throwable  {
      MockPageContext mockPageContext0 = new MockPageContext();
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) mockPageContext0);
      // Undeclared exception!
      try {
        pageContextWrapper0.include("|o5A<a;");
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * include
         */
      }
  }

  @Test
  public void test19()  throws Throwable  {
      MockPageContext mockPageContext0 = new MockPageContext();
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) mockPageContext0);
      ELContext eLContext0 = pageContextWrapper0.getELContext();
      assertNull(eLContext0);
  }

  @Test
  public void test20()  throws Throwable  {
      MockPageContext mockPageContext0 = new MockPageContext();
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) mockPageContext0);
      MockHttpSession mockHttpSession0 = (MockHttpSession)pageContextWrapper0.getSession();
      assertEquals(0L, mockHttpSession0.getLastAccessedTime());
  }

  @Test
  public void test21()  throws Throwable  {
      MockPageContext mockPageContext0 = new MockPageContext();
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) mockPageContext0);
      // Undeclared exception!
      try {
        pageContextWrapper0.setAttribute("", (Object) "", 1753);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Invalid scope: 1753
         */
      }
  }

  @Test
  public void test22()  throws Throwable  {
      MockPageContext mockPageContext0 = new MockPageContext();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JspContextWrapper jspContextWrapper0 = new JspContextWrapper((JspContext) mockPageContext0, arrayList0, arrayList0, arrayList0, (Map<String, String>) hashMap0);
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) jspContextWrapper0);
      pageContextWrapper0.release();
  }

  @Test
  public void test23()  throws Throwable  {
      MockPageContext mockPageContext0 = new MockPageContext();
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) mockPageContext0);
      // Undeclared exception!
      try {
        pageContextWrapper0.getAttribute("|5A<a;", 1509);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Invalid scope: 1509
         */
      }
  }

  @Test
  public void test24()  throws Throwable  {
      MockPageContext mockPageContext0 = new MockPageContext();
      PageContextWrapper pageContextWrapper0 = new PageContextWrapper((PageContext) mockPageContext0);
      JspWriter jspWriter0 = pageContextWrapper0.popBody();
      assertNull(jspWriter0);
  }
}
