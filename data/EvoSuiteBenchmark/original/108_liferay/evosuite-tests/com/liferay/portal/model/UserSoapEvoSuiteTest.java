/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.User;
import com.liferay.portal.model.UserSoap;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import org.jfree.data.time.SimpleTimePeriod;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UserSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      String string0 = userSoap0.getComments();
      assertNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setPrimaryKey(24L);
      assertEquals(24L, userSoap0.getUserId());
      assertEquals(24L, userSoap0.getPrimaryKey());
  }

  @Test
  public void test2()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setEmailAddressVerified(true);
      assertEquals(true, userSoap0.getEmailAddressVerified());
      assertEquals(true, userSoap0.isEmailAddressVerified());
  }

  @Test
  public void test3()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      Date date0 = userSoap0.getLockoutDate();
      assertNull(date0);
  }

  @Test
  public void test4()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setLanguageId("e'Gy6{iUvnaTw+6M");
      assertEquals(false, userSoap0.isPasswordEncrypted());
  }

  @Test
  public void test5()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setUuid((String) null);
      assertEquals(false, userSoap0.getDefaultUser());
  }

  @Test
  public void test6()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      String string0 = userSoap0.getEmailAddress();
      assertNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setMiddleName((String) null);
      assertNull(userSoap0.getFirstName());
  }

  @Test
  public void test8()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setPortraitId((-113L));
      assertEquals((-113L), userSoap0.getPortraitId());
  }

  @Test
  public void test9()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setPasswordEncrypted(true);
      assertEquals(true, userSoap0.isPasswordEncrypted());
      assertEquals(true, userSoap0.getPasswordEncrypted());
  }

  @Test
  public void test10()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      boolean boolean0 = userSoap0.getPasswordEncrypted();
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      long long0 = userSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test12()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      int int0 = userSoap0.getFailedLoginAttempts();
      assertEquals(0, int0);
  }

  @Test
  public void test13()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setFirstName((String) null);
      assertEquals(false, userSoap0.isEmailAddressVerified());
  }

  @Test
  public void test14()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setCreateDate((Date) null);
      assertNull(userSoap0.getUuid());
  }

  @Test
  public void test15()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      String string0 = userSoap0.getFirstName();
      assertNull(string0);
  }

  @Test
  public void test16()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setDefaultUser(true);
      assertEquals(true, userSoap0.getDefaultUser());
      assertEquals(true, userSoap0.isDefaultUser());
  }

  @Test
  public void test17()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setDigest("j2[K /$S2C>H$");
      assertEquals(false, userSoap0.getLockout());
  }

  @Test
  public void test18()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      String string0 = userSoap0.getPassword();
      assertNull(string0);
  }

  @Test
  public void test19()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      Date date0 = userSoap0.getLastFailedLoginDate();
      assertNull(date0);
  }

  @Test
  public void test20()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      String string0 = userSoap0.getLastLoginIP();
      assertNull(string0);
  }

  @Test
  public void test21()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      long long0 = userSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test22()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      String string0 = userSoap0.getDigest();
      assertNull(string0);
  }

  @Test
  public void test23()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      Date date0 = userSoap0.getPasswordModifiedDate();
      assertNull(date0);
  }

  @Test
  public void test24()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setLockout(false);
      assertEquals(false, userSoap0.isLockout());
      assertEquals(false, userSoap0.getLockout());
  }

  @Test
  public void test25()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      String string0 = userSoap0.getLoginIP();
      assertNull(string0);
  }

  @Test
  public void test26()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      int int0 = userSoap0.getStatus();
      assertEquals(0, int0);
  }

  @Test
  public void test27()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      String string0 = userSoap0.getGreeting();
      assertNull(string0);
  }

  @Test
  public void test28()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      boolean boolean0 = userSoap0.isEmailAddressVerified();
      assertEquals(false, boolean0);
  }

  @Test
  public void test29()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setReminderQueryQuestion((String) null);
      assertEquals(false, userSoap0.isEmailAddressVerified());
  }

  @Test
  public void test30()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      boolean boolean0 = userSoap0.isLockout();
      assertEquals(false, boolean0);
  }

  @Test
  public void test31()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setLoginIP((String) null);
      assertEquals(0L, userSoap0.getPrimaryKey());
  }

  @Test
  public void test32()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setComments("e'Gy6{iUvnaTw+6M");
      assertEquals(false, userSoap0.getPasswordEncrypted());
  }

  @Test
  public void test33()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setGraceLoginCount((-594));
      assertEquals(-594, userSoap0.getGraceLoginCount());
  }

  @Test
  public void test34()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      boolean boolean0 = userSoap0.getLockout();
      assertEquals(false, boolean0);
  }

  @Test
  public void test35()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setOpenId((String) null);
      assertNull(userSoap0.getGreeting());
  }

  @Test
  public void test36()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setStatus((-594));
      assertEquals(-594, userSoap0.getStatus());
  }

  @Test
  public void test37()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      boolean boolean0 = userSoap0.getDefaultUser();
      assertEquals(false, boolean0);
  }

  @Test
  public void test38()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      boolean boolean0 = userSoap0.isAgreedToTermsOfUse();
      assertEquals(false, boolean0);
  }

  @Test
  public void test39()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      String string0 = userSoap0.getOpenId();
      assertNull(string0);
  }

  @Test
  public void test40()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      Date date0 = userSoap0.getLoginDate();
      assertNull(date0);
  }

  @Test
  public void test41()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      String string0 = userSoap0.getScreenName();
      assertNull(string0);
  }

  @Test
  public void test42()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setLastFailedLoginDate((Date) null);
      assertEquals(0L, userSoap0.getUserId());
  }

  @Test
  public void test43()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      Date date0 = userSoap0.getModifiedDate();
      assertNull(date0);
  }

  @Test
  public void test44()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      int int0 = userSoap0.getGraceLoginCount();
      assertEquals(0, int0);
  }

  @Test
  public void test45()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      Date date0 = userSoap0.getLastLoginDate();
      assertNull(date0);
  }

  @Test
  public void test46()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setPassword((String) null);
      assertEquals(0, userSoap0.getFailedLoginAttempts());
  }

  @Test
  public void test47()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      long long0 = userSoap0.getPortraitId();
      assertEquals(0L, long0);
  }

  @Test
  public void test48()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setTimeZoneId("j2[K /$S2C>H$");
      assertEquals(false, userSoap0.isAgreedToTermsOfUse());
  }

  @Test
  public void test49()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setContactId((-1038L));
      assertEquals((-1038L), userSoap0.getContactId());
  }

  @Test
  public void test50()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      String string0 = userSoap0.getMiddleName();
      assertNull(string0);
  }

  @Test
  public void test51()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setCompanyId(0L);
      assertNull(userSoap0.getReminderQueryQuestion());
  }

  @Test
  public void test52()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setScreenName((String) null);
      assertEquals(false, userSoap0.getAgreedToTermsOfUse());
  }

  @Test
  public void test53()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      boolean boolean0 = userSoap0.getEmailAddressVerified();
      assertEquals(false, boolean0);
  }

  @Test
  public void test54()  throws Throwable  {
      ArrayList<User> arrayList0 = new ArrayList<User>();
      arrayList0.add((User) null);
      // Undeclared exception!
      try {
        UserSoap.toSoapModels((List<User>) arrayList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test55()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setModifiedDate((Date) null);
      assertEquals(false, userSoap0.getAgreedToTermsOfUse());
  }

  @Test
  public void test56()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      String string0 = userSoap0.getTimeZoneId();
      assertNull(string0);
  }

  @Test
  public void test57()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setLastLoginIP("J0CaHY7?_");
      assertNull(userSoap0.getReminderQueryQuestion());
  }

  @Test
  public void test58()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setFacebookId((-824L));
      assertEquals((-824L), userSoap0.getFacebookId());
  }

  @Test
  public void test59()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setFailedLoginAttempts(260);
      assertEquals(260, userSoap0.getFailedLoginAttempts());
  }

  @Test
  public void test60()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setJobTitle((String) null);
      assertEquals(0, userSoap0.getGraceLoginCount());
  }

  @Test
  public void test61()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      long long0 = userSoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test62()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      Date date0 = userSoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test63()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setPasswordReset(false);
      assertEquals(false, userSoap0.isPasswordReset());
      assertEquals(false, userSoap0.getPasswordReset());
  }

  @Test
  public void test64()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setLoginDate((Date) null);
      assertEquals(false, userSoap0.getPasswordEncrypted());
  }

  @Test
  public void test65()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      String string0 = userSoap0.getUuid();
      assertNull(string0);
  }

  @Test
  public void test66()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      String string0 = userSoap0.getLastName();
      assertNull(string0);
  }

  @Test
  public void test67()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      String string0 = userSoap0.getReminderQueryAnswer();
      assertNull(string0);
  }

  @Test
  public void test68()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setLastName((String) null);
      assertNull(userSoap0.getPassword());
  }

  @Test
  public void test69()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      String string0 = userSoap0.getLanguageId();
      assertNull(string0);
  }

  @Test
  public void test70()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setReminderQueryAnswer((String) null);
      assertEquals(false, userSoap0.getAgreedToTermsOfUse());
  }

  @Test
  public void test71()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setAgreedToTermsOfUse(false);
      assertEquals(false, userSoap0.isAgreedToTermsOfUse());
      assertEquals(false, userSoap0.getAgreedToTermsOfUse());
  }

  @Test
  public void test72()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      boolean boolean0 = userSoap0.getPasswordReset();
      assertEquals(false, boolean0);
  }

  @Test
  public void test73()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      boolean boolean0 = userSoap0.isPasswordEncrypted();
      assertEquals(false, boolean0);
  }

  @Test
  public void test74()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      boolean boolean0 = userSoap0.getAgreedToTermsOfUse();
      assertEquals(false, boolean0);
  }

  @Test
  public void test75()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      boolean boolean0 = userSoap0.isDefaultUser();
      assertEquals(false, boolean0);
  }

  @Test
  public void test76()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      long long0 = userSoap0.getFacebookId();
      assertEquals(0L, long0);
  }

  @Test
  public void test77()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      String string0 = userSoap0.getJobTitle();
      assertNull(string0);
  }

  @Test
  public void test78()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      boolean boolean0 = userSoap0.isPasswordReset();
      assertEquals(false, boolean0);
  }

  @Test
  public void test79()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod((-13L), (-13L));
      Date date0 = simpleTimePeriod0.getEnd();
      userSoap0.setLockoutDate(date0);
      assertNull(userSoap0.getGreeting());
  }

  @Test
  public void test80()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setGreeting("e'Gy6{iUvnaTw+6M");
      assertNull(userSoap0.getEmailAddress());
  }

  @Test
  public void test81()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setPasswordModifiedDate((Date) null);
      assertEquals(false, userSoap0.isDefaultUser());
  }

  @Test
  public void test82()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      String string0 = userSoap0.getReminderQueryQuestion();
      assertNull(string0);
  }

  @Test
  public void test83()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setLastLoginDate((Date) null);
      assertNull(userSoap0.getMiddleName());
  }

  @Test
  public void test84()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      userSoap0.setEmailAddress((String) null);
      assertNull(userSoap0.getMiddleName());
  }

  @Test
  public void test85()  throws Throwable  {
      UserSoap userSoap0 = new UserSoap();
      long long0 = userSoap0.getContactId();
      assertEquals(0L, long0);
  }

  @Test
  public void test86()  throws Throwable  {
      User[][] userArray0 = new User[1][8];
      // Undeclared exception!
      try {
        UserSoap.toSoapModels(userArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test87()  throws Throwable  {
      ArrayList<User> arrayList0 = new ArrayList<User>();
      UserSoap[] userSoapArray0 = UserSoap.toSoapModels((List<User>) arrayList0);
      assertNotNull(userSoapArray0);
  }
}
