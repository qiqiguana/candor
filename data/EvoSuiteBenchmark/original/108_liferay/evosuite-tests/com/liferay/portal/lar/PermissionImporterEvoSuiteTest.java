/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.lar;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.lar.LayoutCache;
import com.liferay.portal.lar.PermissionImporter;
import com.liferay.portal.model.Layout;
import com.liferay.portal.xml.ElementImpl;
import java.util.List;
import org.dom4j.Element;
import org.dom4j.Namespace;
import org.dom4j.QName;
import org.dom4j.bean.BeanElement;
import org.dom4j.dom.DOMElement;
import org.dom4j.util.UserDataElement;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PermissionImporterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PermissionImporter permissionImporter0 = new PermissionImporter();
      UserDataElement userDataElement0 = new UserDataElement("i=)GyUut?RUeA");
      QName qName0 = userDataElement0.getQName("i=)GyUut?RUeA");
      BeanElement beanElement0 = new BeanElement(qName0);
      ElementImpl elementImpl0 = new ElementImpl((Element) beanElement0);
      List<String> list0 = permissionImporter0.getActions((com.liferay.portal.kernel.xml.Element) elementImpl0);
      assertEquals(0, list0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      PermissionImporter permissionImporter0 = new PermissionImporter();
      LayoutCache layoutCache0 = new LayoutCache();
      DOMElement dOMElement0 = new DOMElement("5/IfzvOA;m\"[;@");
      ElementImpl elementImpl0 = new ElementImpl((Element) dOMElement0);
      permissionImporter0.importLayoutPermissions(layoutCache0, 0L, 0L, 0L, (Layout) null, (com.liferay.portal.kernel.xml.Element) elementImpl0, (com.liferay.portal.kernel.xml.Element) elementImpl0);
      assertEquals(false, elementImpl0.hasMixedContent());
  }

  @Test
  public void test2()  throws Throwable  {
      PermissionImporter permissionImporter0 = new PermissionImporter();
      LayoutCache layoutCache0 = new LayoutCache();
      Namespace namespace0 = Namespace.get("o*$h", "o*$h");
      DOMElement dOMElement0 = new DOMElement("o*$h", namespace0);
      ElementImpl elementImpl0 = new ElementImpl((Element) dOMElement0);
      permissionImporter0.importPermissions(layoutCache0, 10L, 10L, 10L, (Layout) null, "o*$h", "o*$h", (com.liferay.portal.kernel.xml.Element) elementImpl0, false);
      assertEquals(true, elementImpl0.isTextOnly());
  }

  @Test
  public void test3()  throws Throwable  {
      PermissionImporter permissionImporter0 = new PermissionImporter();
      LayoutCache layoutCache0 = new LayoutCache();
      DOMElement dOMElement0 = new DOMElement("5/IfzvOA;m\"[;@");
      ElementImpl elementImpl0 = new ElementImpl((Element) dOMElement0);
      permissionImporter0.importPortletPermissions(layoutCache0, 0L, 0L, 0L, (Layout) null, (com.liferay.portal.kernel.xml.Element) elementImpl0, "5/IfzvOA;m\"[;@");
      assertEquals("", elementImpl0.getText());
  }
}
