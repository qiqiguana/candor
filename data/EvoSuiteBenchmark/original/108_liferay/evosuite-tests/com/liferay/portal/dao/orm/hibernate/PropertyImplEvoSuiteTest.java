/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.dao.orm.hibernate;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.caucho.el.AbstractVariableResolver;
import com.liferay.portal.dao.orm.hibernate.CriterionImpl;
import com.liferay.portal.dao.orm.hibernate.DynamicQueryImpl;
import com.liferay.portal.dao.orm.hibernate.OrderImpl;
import com.liferay.portal.dao.orm.hibernate.ProjectionImpl;
import com.liferay.portal.dao.orm.hibernate.PropertyImpl;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import java.util.Collection;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Property;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PropertyImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Property property0 = Property.forName("rP~6");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.leProperty((com.liferay.portal.kernel.dao.orm.Property) propertyImpl0);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test1()  throws Throwable  {
      Property property0 = Property.forName("");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.geProperty("");
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test2()  throws Throwable  {
      Property property0 = Property.forName("x,]dG{0v_Hyy");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.isNotEmpty();
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test3()  throws Throwable  {
      Property property0 = Property.forName(">MU");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.gtProperty((com.liferay.portal.kernel.dao.orm.Property) propertyImpl0);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test4()  throws Throwable  {
      Property property0 = Property.forName("rP~6");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      ProjectionImpl projectionImpl0 = (ProjectionImpl)propertyImpl0.group();
      assertEquals("rP~6", projectionImpl0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      Property property0 = Property.forName((String) null);
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.eqProperty((com.liferay.portal.kernel.dao.orm.Property) propertyImpl0);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test6()  throws Throwable  {
      Property property0 = Property.forName("rP~6");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.neProperty((com.liferay.portal.kernel.dao.orm.Property) propertyImpl0);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test7()  throws Throwable  {
      Property property0 = Property.forName("_17zZAN?yUGHNd7_|");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      Class<?> class0 = PropertyImpl.class;
      DetachedCriteria detachedCriteria0 = DetachedCriteria.forClass((Class) class0, "_17zZAN?yUGHNd7_|");
      DynamicQueryImpl dynamicQueryImpl0 = new DynamicQueryImpl(detachedCriteria0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.gtSome((DynamicQuery) dynamicQueryImpl0);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test8()  throws Throwable  {
      Property property0 = Property.forName("");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      ProjectionImpl projectionImpl0 = (ProjectionImpl)propertyImpl0.max();
      assertEquals("max()", projectionImpl0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      Property property0 = Property.forName(">MU");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.le((Object) "");
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test10()  throws Throwable  {
      Property property0 = Property.forName(">MU");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      Class<?> class0 = PropertyImpl.class;
      DetachedCriteria detachedCriteria0 = DetachedCriteria.forClass((Class) class0, ">MU");
      DynamicQueryImpl dynamicQueryImpl0 = new DynamicQueryImpl(detachedCriteria0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.le((DynamicQuery) dynamicQueryImpl0);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test11()  throws Throwable  {
      Property property0 = Property.forName("x,]dG{0v_Hyy");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      Class<?> class0 = PropertyImpl.class;
      DetachedCriteria detachedCriteria0 = DetachedCriteria.forClass(class0);
      DynamicQueryImpl dynamicQueryImpl0 = new DynamicQueryImpl(detachedCriteria0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.eq((DynamicQuery) dynamicQueryImpl0);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test12()  throws Throwable  {
      Property property0 = Property.forName("z");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.geProperty((com.liferay.portal.kernel.dao.orm.Property) propertyImpl0);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test13()  throws Throwable  {
      Property property0 = Property.forName("z");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      DetachedCriteria detachedCriteria0 = DetachedCriteria.forEntityName("z", "n!<k`Y\";[]^Vz{");
      DynamicQueryImpl dynamicQueryImpl0 = new DynamicQueryImpl(detachedCriteria0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.geSome((DynamicQuery) dynamicQueryImpl0);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test14()  throws Throwable  {
      Property property0 = Property.forName("");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      Class<?> class0 = PropertyImpl.class;
      DetachedCriteria detachedCriteria0 = DetachedCriteria.forClass(class0);
      DynamicQueryImpl dynamicQueryImpl0 = new DynamicQueryImpl(detachedCriteria0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.gtAll((DynamicQuery) dynamicQueryImpl0);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test15()  throws Throwable  {
      Property property0 = Property.forName("_17zZAN?yUGHNd7_|");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.eq((Object) 1870);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test16()  throws Throwable  {
      Property property0 = Property.forName("_17zZAN?yUGHNd7_|");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.isNull();
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test17()  throws Throwable  {
      Property property0 = Property.forName(">MU");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      PropertyImpl propertyImpl1 = (PropertyImpl)propertyImpl0.getProperty((String) null);
      assertEquals(">MU.null", propertyImpl1.toString());
  }

  @Test
  public void test18()  throws Throwable  {
      Property property0 = Property.forName("");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.ne((Object) "Text");
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test19()  throws Throwable  {
      PropertyImpl propertyImpl0 = new PropertyImpl((Property) null);
      // Undeclared exception!
      try {
        propertyImpl0.like((Object) "string:");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test20()  throws Throwable  {
      Property property0 = Property.forName("_17zZAN?yUGHNd7_|");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      ProjectionImpl projectionImpl0 = (ProjectionImpl)propertyImpl0.avg();
      assertEquals("avg(_17zZAN?yUGHNd7_|)", projectionImpl0.toString());
  }

  @Test
  public void test21()  throws Throwable  {
      Property property0 = Property.forName("x,]dG{0v_Hyy");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      ProjectionImpl projectionImpl0 = (ProjectionImpl)propertyImpl0.min();
      assertEquals("min(x,]dG{0v_Hyy)", projectionImpl0.toString());
  }

  @Test
  public void test22()  throws Throwable  {
      Property property0 = Property.forName("3aW3X2oqZ*3?hfcC.vi");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      OrderImpl orderImpl0 = (OrderImpl)propertyImpl0.desc();
      assertNotNull(orderImpl0);
  }

  @Test
  public void test23()  throws Throwable  {
      Property property0 = Property.forName((String) null);
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      // Undeclared exception!
      try {
        propertyImpl0.in((Collection<Object>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test24()  throws Throwable  {
      Property property0 = Property.forName((String) null);
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      Class<?> class0 = AbstractVariableResolver.class;
      DetachedCriteria detachedCriteria0 = DetachedCriteria.forClass(class0);
      DynamicQueryImpl dynamicQueryImpl0 = new DynamicQueryImpl(detachedCriteria0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.ltSome((DynamicQuery) dynamicQueryImpl0);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test25()  throws Throwable  {
      Property property0 = Property.forName("rP~6");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.between((Object) "ToolTipText", (Object) "Before");
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test26()  throws Throwable  {
      Property property0 = Property.forName((String) null);
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      Class<?> class0 = AbstractVariableResolver.class;
      DetachedCriteria detachedCriteria0 = DetachedCriteria.forClass(class0);
      DynamicQueryImpl dynamicQueryImpl0 = new DynamicQueryImpl(detachedCriteria0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.eqAll((DynamicQuery) dynamicQueryImpl0);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test27()  throws Throwable  {
      Property property0 = Property.forName("z");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.leProperty("-509");
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test28()  throws Throwable  {
      Property property0 = Property.forName("z");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.eqProperty("z");
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test29()  throws Throwable  {
      Property property0 = Property.forName("");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.isNotNull();
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test30()  throws Throwable  {
      Property property0 = Property.forName("3aW3X2oqZ*3?hfcC.vi");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      DetachedCriteria detachedCriteria0 = DetachedCriteria.forEntityName("3aW3X2oqZ*3?hfcC.vi", "3aW3X2oqZ*3?hfcC.vi");
      DynamicQueryImpl dynamicQueryImpl0 = new DynamicQueryImpl(detachedCriteria0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.notIn((DynamicQuery) dynamicQueryImpl0);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test31()  throws Throwable  {
      Property property0 = Property.forName((String) null);
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      Class<?> class0 = AbstractVariableResolver.class;
      DetachedCriteria detachedCriteria0 = DetachedCriteria.forClass(class0);
      DynamicQueryImpl dynamicQueryImpl0 = new DynamicQueryImpl(detachedCriteria0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.leAll((DynamicQuery) dynamicQueryImpl0);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test32()  throws Throwable  {
      Property property0 = Property.forName("");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.ltProperty("");
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test33()  throws Throwable  {
      PropertyImpl propertyImpl0 = new PropertyImpl((Property) null);
      DetachedCriteria detachedCriteria0 = DetachedCriteria.forEntityName("3-nd");
      DynamicQueryImpl dynamicQueryImpl0 = new DynamicQueryImpl(detachedCriteria0);
      // Undeclared exception!
      try {
        propertyImpl0.ne((DynamicQuery) dynamicQueryImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test34()  throws Throwable  {
      Property property0 = Property.forName(">MU");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.neProperty(">MU");
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test35()  throws Throwable  {
      Property property0 = Property.forName("rP~6");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      DetachedCriteria detachedCriteria0 = DetachedCriteria.forEntityName((String) null, "rP~6");
      DynamicQueryImpl dynamicQueryImpl0 = new DynamicQueryImpl(detachedCriteria0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.ge((DynamicQuery) dynamicQueryImpl0);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test36()  throws Throwable  {
      Property property0 = Property.forName("z");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      ProjectionImpl projectionImpl0 = (ProjectionImpl)propertyImpl0.count();
      assertEquals("count(z)", projectionImpl0.toString());
  }

  @Test
  public void test37()  throws Throwable  {
      Property property0 = Property.forName("");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      Object[] objectArray0 = new Object[1];
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.in(objectArray0);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test38()  throws Throwable  {
      Property property0 = Property.forName("");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      OrderImpl orderImpl0 = (OrderImpl)propertyImpl0.asc();
      assertNotNull(orderImpl0);
  }

  @Test
  public void test39()  throws Throwable  {
      Property property0 = Property.forName("x,]dG{0v_Hyy");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.gtProperty("' in the registry");
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test40()  throws Throwable  {
      Property property0 = Property.forName("x,]dG{0v_Hyy");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      Class<?> class0 = PropertyImpl.class;
      DetachedCriteria detachedCriteria0 = DetachedCriteria.forClass(class0);
      DynamicQueryImpl dynamicQueryImpl0 = new DynamicQueryImpl(detachedCriteria0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.gt((DynamicQuery) dynamicQueryImpl0);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test41()  throws Throwable  {
      Property property0 = Property.forName(">MU");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.isEmpty();
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test42()  throws Throwable  {
      Property property0 = Property.forName("3aW3X2oqZ*3?hfcC.vi");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      DetachedCriteria detachedCriteria0 = DetachedCriteria.forEntityName("3aW3X2oqZ*3?hfcC.vi", "3aW3X2oqZ*3?hfcC.vi");
      DynamicQueryImpl dynamicQueryImpl0 = new DynamicQueryImpl(detachedCriteria0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.in((DynamicQuery) dynamicQueryImpl0);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test43()  throws Throwable  {
      Property property0 = Property.forName(">MU");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.ltProperty((com.liferay.portal.kernel.dao.orm.Property) propertyImpl0);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test44()  throws Throwable  {
      Property property0 = Property.forName("rP~6");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      DetachedCriteria detachedCriteria0 = DetachedCriteria.forEntityName((String) null, "rP~6");
      DynamicQueryImpl dynamicQueryImpl0 = new DynamicQueryImpl(detachedCriteria0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.leSome((DynamicQuery) dynamicQueryImpl0);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test45()  throws Throwable  {
      Property property0 = Property.forName("rP~6");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      DetachedCriteria detachedCriteria0 = DetachedCriteria.forEntityName((String) null, "rP~6");
      DynamicQueryImpl dynamicQueryImpl0 = new DynamicQueryImpl(detachedCriteria0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.lt((DynamicQuery) dynamicQueryImpl0);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test46()  throws Throwable  {
      Property property0 = Property.forName("z");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.lt((Object) "-509");
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test47()  throws Throwable  {
      Property property0 = Property.forName("");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      DetachedCriteria detachedCriteria0 = DetachedCriteria.forEntityName("", "");
      DynamicQueryImpl dynamicQueryImpl0 = new DynamicQueryImpl(detachedCriteria0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.ltAll((DynamicQuery) dynamicQueryImpl0);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test48()  throws Throwable  {
      Property property0 = Property.forName((String) null);
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.ge((Object) "borderPainted");
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test49()  throws Throwable  {
      Property property0 = Property.forName((String) null);
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.gt((Object) null);
      assertNotNull(criterionImpl0);
  }

  @Test
  public void test50()  throws Throwable  {
      Property property0 = Property.forName(">MU");
      PropertyImpl propertyImpl0 = new PropertyImpl(property0);
      Class<?> class0 = PropertyImpl.class;
      DetachedCriteria detachedCriteria0 = DetachedCriteria.forClass((Class) class0, ">MU");
      DynamicQueryImpl dynamicQueryImpl0 = new DynamicQueryImpl(detachedCriteria0);
      CriterionImpl criterionImpl0 = (CriterionImpl)propertyImpl0.geAll((DynamicQuery) dynamicQueryImpl0);
      assertNotNull(criterionImpl0);
  }
}
