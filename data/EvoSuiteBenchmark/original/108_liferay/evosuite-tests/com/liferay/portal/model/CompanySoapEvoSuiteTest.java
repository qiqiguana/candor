/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.Company;
import com.liferay.portal.model.CompanySoap;
import java.util.List;
import java.util.Vector;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CompanySoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CompanySoap companySoap0 = new CompanySoap();
      companySoap0.setKey("c2>V-v");
      assertEquals(0L, companySoap0.getAccountId());
  }

  @Test
  public void test1()  throws Throwable  {
      CompanySoap companySoap0 = new CompanySoap();
      companySoap0.setHomeURL("c2>V-v");
      assertNull(companySoap0.getKey());
  }

  @Test
  public void test2()  throws Throwable  {
      CompanySoap companySoap0 = new CompanySoap();
      String string0 = companySoap0.getKey();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      CompanySoap companySoap0 = new CompanySoap();
      long long0 = companySoap0.getAccountId();
      assertEquals(0L, long0);
  }

  @Test
  public void test4()  throws Throwable  {
      CompanySoap companySoap0 = new CompanySoap();
      boolean boolean0 = companySoap0.getActive();
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      CompanySoap companySoap0 = new CompanySoap();
      String string0 = companySoap0.getWebId();
      assertNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      CompanySoap companySoap0 = new CompanySoap();
      companySoap0.setAccountId((-18L));
      assertEquals((-18L), companySoap0.getAccountId());
  }

  @Test
  public void test7()  throws Throwable  {
      CompanySoap companySoap0 = new CompanySoap();
      companySoap0.setActive(false);
      assertEquals(false, companySoap0.isActive());
      assertEquals(false, companySoap0.getActive());
  }

  @Test
  public void test8()  throws Throwable  {
      CompanySoap companySoap0 = new CompanySoap();
      long long0 = companySoap0.getLogoId();
      assertEquals(0L, long0);
  }

  @Test
  public void test9()  throws Throwable  {
      CompanySoap companySoap0 = new CompanySoap();
      long long0 = companySoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test10()  throws Throwable  {
      CompanySoap companySoap0 = new CompanySoap();
      companySoap0.setLogoId((long) 350);
      assertEquals(350L, companySoap0.getLogoId());
  }

  @Test
  public void test11()  throws Throwable  {
      CompanySoap companySoap0 = new CompanySoap();
      long long0 = companySoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test12()  throws Throwable  {
      CompanySoap companySoap0 = new CompanySoap();
      companySoap0.setMx((String) null);
      assertNull(companySoap0.getHomeURL());
  }

  @Test
  public void test13()  throws Throwable  {
      CompanySoap companySoap0 = new CompanySoap();
      String string0 = companySoap0.getHomeURL();
      assertNull(string0);
  }

  @Test
  public void test14()  throws Throwable  {
      CompanySoap companySoap0 = new CompanySoap();
      String string0 = companySoap0.getMx();
      assertNull(string0);
  }

  @Test
  public void test15()  throws Throwable  {
      CompanySoap companySoap0 = new CompanySoap();
      boolean boolean0 = companySoap0.isActive();
      assertEquals(false, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      CompanySoap companySoap0 = new CompanySoap();
      boolean boolean0 = companySoap0.isSystem();
      assertEquals(false, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      CompanySoap companySoap0 = new CompanySoap();
      companySoap0.setWebId("c2>V-v");
      assertEquals(false, companySoap0.isActive());
  }

  @Test
  public void test18()  throws Throwable  {
      CompanySoap companySoap0 = new CompanySoap();
      companySoap0.setPrimaryKey((-8L));
      assertEquals((-8L), companySoap0.getCompanyId());
      assertEquals((-8L), companySoap0.getPrimaryKey());
  }

  @Test
  public void test19()  throws Throwable  {
      CompanySoap companySoap0 = new CompanySoap();
      companySoap0.setSystem(false);
      assertEquals(false, companySoap0.isSystem());
      assertEquals(false, companySoap0.getSystem());
  }

  @Test
  public void test20()  throws Throwable  {
      CompanySoap companySoap0 = new CompanySoap();
      boolean boolean0 = companySoap0.getSystem();
      assertEquals(false, boolean0);
  }

  @Test
  public void test21()  throws Throwable  {
      CompanySoap companySoap0 = new CompanySoap();
      companySoap0.setMaxUsers(350);
      assertEquals(350, companySoap0.getMaxUsers());
  }

  @Test
  public void test22()  throws Throwable  {
      Company[][] companyArray0 = new Company[1][9];
      // Undeclared exception!
      try {
        CompanySoap.toSoapModels(companyArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test23()  throws Throwable  {
      CompanySoap companySoap0 = new CompanySoap();
      int int0 = companySoap0.getMaxUsers();
      assertEquals(0, int0);
  }

  @Test
  public void test24()  throws Throwable  {
      Vector<Company> vector0 = new Vector<Company>();
      CompanySoap[] companySoapArray0 = CompanySoap.toSoapModels((List<Company>) vector0);
      assertNotNull(companySoapArray0);
  }
}
