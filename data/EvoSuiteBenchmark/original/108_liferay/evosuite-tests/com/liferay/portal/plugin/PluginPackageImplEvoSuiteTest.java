/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.plugin;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.plugin.License;
import com.liferay.portal.kernel.plugin.PluginPackage;
import com.liferay.portal.kernel.plugin.RemotePluginPackageRepository;
import com.liferay.portal.kernel.plugin.Screenshot;
import com.liferay.portal.plugin.PluginPackageImpl;
import java.util.Date;
import java.util.List;
import java.util.Properties;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PluginPackageImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      List<String> list0 = pluginPackageImpl0.getTypes();
      assertNotNull(list0);
      
      pluginPackageImpl0.setTypes(list0);
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      pluginPackageImpl0.isPreviousVersionThan((PluginPackage) pluginPackageImpl0);
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      pluginPackageImpl0.getDeploymentSettings();
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      pluginPackageImpl0.setChangeLog("/null:de/schlichtherle/io/arc8ive");
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.getChangeLog());
  }

  @Test
  public void test4()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      pluginPackageImpl0.getModifiedDate();
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      String string0 = pluginPackageImpl0.getLongDescription();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      List<String> list0 = pluginPackageImpl0.getLiferayVersions();
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
      assertNotNull(list0);
  }

  @Test
  public void test7()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      String string0 = pluginPackageImpl0.getPackageId();
      assertNotNull(string0);
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      String string0 = pluginPackageImpl0.getAuthor();
      assertNull(string0);
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      pluginPackageImpl0.setPageURL("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
      assertEquals("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver", pluginPackageImpl0.getPageURL());
  }

  @Test
  public void test10()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      pluginPackageImpl0.setModifiedDate((Date) null);
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
  }

  @Test
  public void test11()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      pluginPackageImpl0.setDownloadURL("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
  }

  @Test
  public void test12()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      pluginPackageImpl0.setDeploymentSettings((Properties) null);
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
  }

  @Test
  public void test13()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      pluginPackageImpl0.setContext((String) null);
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
  }

  @Test
  public void test14()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      List<Screenshot> list0 = pluginPackageImpl0.getScreenshots();
      assertNotNull(list0);
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
  }

  @Test
  public void test15()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      List<License> list0 = pluginPackageImpl0.getLicenses();
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
      assertNotNull(list0);
  }

  @Test
  public void test16()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      pluginPackageImpl0.getRepository();
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
  }

  @Test
  public void test17()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      String string0 = pluginPackageImpl0.getChangeLog();
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test
  public void test18()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      pluginPackageImpl0.setScreenshots((List<Screenshot>) null);
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
  }

  @Test
  public void test19()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      pluginPackageImpl0.setLongDescription((String) null);
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
  }

  @Test
  public void test20()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      pluginPackageImpl0.isLaterVersionThan((PluginPackage) pluginPackageImpl0);
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
  }

  @Test
  public void test21()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      String string0 = pluginPackageImpl0.getName();
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
      assertNull(string0);
  }

  @Test
  public void test22()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      List<String> list0 = pluginPackageImpl0.getTypes();
      assertNotNull(list0);
      
      pluginPackageImpl0.setLiferayVersions(list0);
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
  }

  @Test
  public void test23()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      String string0 = pluginPackageImpl0.getPageURL();
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
      assertNull(string0);
  }

  @Test
  public void test24()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertEquals("LOCAL_URL/de/schlichtherle/io/schlichtherle-io.arc8ive", pluginPackageImpl0.getArtifactURL());
      assertNotNull(pluginPackageImpl0);
      
      RemotePluginPackageRepository remotePluginPackageRepository0 = new RemotePluginPackageRepository((String) null);
      pluginPackageImpl0.setRepository(remotePluginPackageRepository0);
      remotePluginPackageRepository0.addPluginPackage((PluginPackage) pluginPackageImpl0);
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
      assertEquals("null/de/schlichtherle/io/schlichtherle-io.arc8ive", pluginPackageImpl0.getArtifactURL());
  }

  @Test
  public void test25()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      List<String> list0 = pluginPackageImpl0.getTypes();
      assertNotNull(list0);
      
      pluginPackageImpl0.setRequiredDeploymentContexts(list0);
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
  }

  @Test
  public void test26()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      String string0 = pluginPackageImpl0.toString();
      assertNotNull(string0);
      assertEquals("/null:de/schlichtherle/io/arc8ive", string0);
  }

  @Test
  public void test27()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      String string0 = pluginPackageImpl0.getContext();
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
      assertNull(string0);
  }

  @Test
  public void test28()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      List<String> list0 = pluginPackageImpl0.getRequiredDeploymentContexts();
      assertNotNull(list0);
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
  }

  @Test
  public void test29()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      pluginPackageImpl0.setShortDescription("/null:de/schlichtherle/io/arc8ive");
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.getShortDescription());
  }

  @Test
  public void test30()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      pluginPackageImpl0.setName("/null:de/schlichtherle/io/arc8ive");
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.getName());
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
  }

  @Test
  public void test31()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertEquals("schlichtherle", pluginPackageImpl0.getRecommendedDeploymentContext());
      assertNotNull(pluginPackageImpl0);
      
      pluginPackageImpl0.setRecommendedDeploymentContext("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      String string0 = pluginPackageImpl0.getRecommendedDeploymentContext();
      assertEquals("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver", string0);
  }

  @Test
  public void test32()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      String string0 = pluginPackageImpl0.getShortDescription();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
  }

  @Test
  public void test33()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      pluginPackageImpl0.setAuthor("/null:de/schlichtherle/io/arc8ive");
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.getAuthor());
  }

  @Test
  public void test34()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      int int0 = pluginPackageImpl0.hashCode();
      assertEquals(1363924862, int0);
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
  }

  @Test
  public void test35()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      boolean boolean0 = pluginPackageImpl0.isSameVersionAs((PluginPackage) pluginPackageImpl0);
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
      assertEquals(true, boolean0);
  }

  @Test
  public void test36()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      boolean boolean0 = pluginPackageImpl0.equals((Object) null);
      assertEquals(false, boolean0);
      assertEquals("/null:de/schlichtherle/io/arc8ive", pluginPackageImpl0.toString());
  }

  @Test
  public void test37()  throws Throwable  {
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("de/schlichtherle/io/arc8ive/spi/AbstractArchiveDriver");
      assertNotNull(pluginPackageImpl0);
      
      String string0 = pluginPackageImpl0.getRecommendedDeploymentContext();
      assertNotNull(string0);
      assertEquals("schlichtherle", string0);
  }
}
