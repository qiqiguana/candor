/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.dao.db;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.dao.db.DerbyDB;
import java.io.IOException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DerbyDBEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DerbyDB derbyDB0 = (DerbyDB)DerbyDB.getInstance();
      assertNotNull(derbyDB0);
      assertEquals("1", derbyDB0.getTemplateTrue());
  }

  @Test
  public void test1()  throws Throwable  {
      DerbyDB derbyDB0 = new DerbyDB();
      assertNotNull(derbyDB0);
      
      // Undeclared exception!
      try {
        derbyDB0.buildCreateFile("derby", "derby", 739);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      DerbyDB derbyDB0 = new DerbyDB();
      assertNotNull(derbyDB0);
      
      boolean boolean0 = derbyDB0.isSupportsAlterColumnName();
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      DerbyDB derbyDB0 = new DerbyDB();
      assertNotNull(derbyDB0);
      
      String string0 = derbyDB0.buildSQL("alter_column_type #.V");
      assertEquals("-- alter_column_type #.V\n", string0);
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      DerbyDB derbyDB0 = new DerbyDB();
      assertNotNull(derbyDB0);
      
      boolean boolean0 = derbyDB0.isSupportsAlterColumnType();
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      DerbyDB derbyDB0 = new DerbyDB();
      assertNotNull(derbyDB0);
      
      String string0 = derbyDB0.buildSQL("alter_column_name Wf.MP");
      assertNotNull(string0);
      assertEquals("-- alter_column_name Wf.MP\n", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      DerbyDB derbyDB0 = new DerbyDB();
      // Undeclared exception!
      try {
        derbyDB0.buildSQL("alter_table_name 1");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 2
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      DerbyDB derbyDB0 = new DerbyDB();
      assertNotNull(derbyDB0);
      
      String string0 = derbyDB0.buildSQL("lastSelectedPathCompnent");
      assertNotNull(string0);
      assertEquals("lastSelectedPathCompnent\n", string0);
  }
}
