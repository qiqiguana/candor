/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.repository.cmis.search;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.repository.cmis.search.CMISBetweenExpression;
import com.liferay.portal.kernel.repository.cmis.search.CMISCriterion;
import com.liferay.portal.kernel.repository.cmis.search.CMISDisjunction;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CMISDisjunctionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CMISDisjunction cMISDisjunction0 = new CMISDisjunction();
      CMISBetweenExpression cMISBetweenExpression0 = new CMISBetweenExpression("", "", "", false, false);
      cMISDisjunction0.add((CMISCriterion) cMISBetweenExpression0);
      String string0 = cMISDisjunction0.toQueryFragment();
      assertEquals("( >  AND  < )", cMISDisjunction0.toQueryFragment());
      assertEquals("( >  AND  < )", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      CMISDisjunction cMISDisjunction0 = new CMISDisjunction();
      String string0 = cMISDisjunction0.toQueryFragment();
      assertEquals("", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      CMISDisjunction cMISDisjunction0 = new CMISDisjunction();
      CMISBetweenExpression cMISBetweenExpression0 = new CMISBetweenExpression("", "", "", false, false);
      cMISDisjunction0.add((CMISCriterion) cMISBetweenExpression0);
      cMISDisjunction0.add((CMISCriterion) cMISDisjunction0);
      // Undeclared exception!
      try {
        cMISDisjunction0.toQueryFragment();
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
      }
  }
}
