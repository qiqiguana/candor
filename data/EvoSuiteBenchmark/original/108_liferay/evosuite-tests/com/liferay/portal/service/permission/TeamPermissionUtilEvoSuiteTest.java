/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.service.permission;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.bean.BeanLocatorException;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.Team;
import com.liferay.portal.security.permission.PermissionChecker;
import com.liferay.portal.service.permission.TeamPermission;
import com.liferay.portal.service.permission.TeamPermissionImpl;
import com.liferay.portal.service.permission.TeamPermissionUtil;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TeamPermissionUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try {
        TeamPermissionUtil.check((PermissionChecker) null, (Team) null, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TeamPermissionUtil teamPermissionUtil0 = new TeamPermissionUtil();
      TeamPermissionImpl teamPermissionImpl0 = new TeamPermissionImpl();
      teamPermissionUtil0.setTeamPermission((TeamPermission) teamPermissionImpl0);
  }

  @Test
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try {
        TeamPermissionUtil.check((PermissionChecker) null, (-961L), "%Ocu>YT#r5R7l)");
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try {
        TeamPermissionUtil.contains((PermissionChecker) null, (Team) null, "@K");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try {
        TeamPermissionUtil.contains((PermissionChecker) null, 0L, "org.bouncycastle.jce.provider.JCEBlockCipher$BlowfishCBC");
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }
}
