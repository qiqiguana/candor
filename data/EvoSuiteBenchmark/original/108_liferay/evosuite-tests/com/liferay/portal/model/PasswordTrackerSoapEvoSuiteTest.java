/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.PasswordTracker;
import com.liferay.portal.model.PasswordTrackerSoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PasswordTrackerSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PasswordTrackerSoap passwordTrackerSoap0 = new PasswordTrackerSoap();
      String string0 = passwordTrackerSoap0.getPassword();
      assertNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      PasswordTrackerSoap passwordTrackerSoap0 = new PasswordTrackerSoap();
      passwordTrackerSoap0.setPrimaryKey(0L);
      assertNull(passwordTrackerSoap0.getPassword());
  }

  @Test
  public void test2()  throws Throwable  {
      PasswordTrackerSoap passwordTrackerSoap0 = new PasswordTrackerSoap();
      passwordTrackerSoap0.setUserId(0L);
      assertEquals(0L, passwordTrackerSoap0.getUserId());
  }

  @Test
  public void test3()  throws Throwable  {
      PasswordTrackerSoap passwordTrackerSoap0 = new PasswordTrackerSoap();
      passwordTrackerSoap0.setPassword((String) null);
      assertEquals(0L, passwordTrackerSoap0.getPasswordTrackerId());
  }

  @Test
  public void test4()  throws Throwable  {
      PasswordTrackerSoap passwordTrackerSoap0 = new PasswordTrackerSoap();
      long long0 = passwordTrackerSoap0.getPasswordTrackerId();
      assertEquals(0L, long0);
  }

  @Test
  public void test5()  throws Throwable  {
      PasswordTrackerSoap passwordTrackerSoap0 = new PasswordTrackerSoap();
      long long0 = passwordTrackerSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test6()  throws Throwable  {
      PasswordTrackerSoap passwordTrackerSoap0 = new PasswordTrackerSoap();
      Date date0 = passwordTrackerSoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test7()  throws Throwable  {
      LinkedList<PasswordTracker> linkedList0 = new LinkedList<PasswordTracker>();
      linkedList0.add((PasswordTracker) null);
      // Undeclared exception!
      try {
        PasswordTrackerSoap.toSoapModels((List<PasswordTracker>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      PasswordTrackerSoap passwordTrackerSoap0 = new PasswordTrackerSoap();
      long long0 = passwordTrackerSoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test9()  throws Throwable  {
      PasswordTrackerSoap passwordTrackerSoap0 = new PasswordTrackerSoap();
      passwordTrackerSoap0.setCreateDate((Date) null);
      assertEquals(0L, passwordTrackerSoap0.getUserId());
  }

  @Test
  public void test10()  throws Throwable  {
      PasswordTracker[][] passwordTrackerArray0 = new PasswordTracker[1][6];
      // Undeclared exception!
      try {
        PasswordTrackerSoap.toSoapModels(passwordTrackerArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      LinkedList<PasswordTracker> linkedList0 = new LinkedList<PasswordTracker>();
      PasswordTrackerSoap[] passwordTrackerSoapArray0 = PasswordTrackerSoap.toSoapModels((List<PasswordTracker>) linkedList0);
      assertNotNull(passwordTrackerSoapArray0);
  }
}
