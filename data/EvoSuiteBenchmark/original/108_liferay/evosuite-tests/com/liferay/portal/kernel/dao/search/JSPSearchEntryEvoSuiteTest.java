/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.dao.search;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.dao.search.JSPSearchEntry;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.jsp.PageContext;
import org.junit.BeforeClass;
import org.springframework.mock.web.MockPageContext;
import org.tuckey.web.MockServletContext;

@RunWith(EvoSuiteRunner.class)
public class JSPSearchEntryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JSPSearchEntry jSPSearchEntry0 = new JSPSearchEntry();
      MockServletContext mockServletContext0 = new MockServletContext();
      jSPSearchEntry0.setServletContext((ServletContext) mockServletContext0);
      MockPageContext mockPageContext0 = new MockPageContext((ServletContext) mockServletContext0, (HttpServletRequest) null);
      try {
        jSPSearchEntry0.print((PageContext) mockPageContext0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      JSPSearchEntry jSPSearchEntry0 = new JSPSearchEntry();
      String string0 = jSPSearchEntry0.getPath();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      JSPSearchEntry jSPSearchEntry0 = new JSPSearchEntry();
      jSPSearchEntry0.setResponse((HttpServletResponse) null);
      assertEquals(1, jSPSearchEntry0.getColspan());
  }

  @Test
  public void test3()  throws Throwable  {
      JSPSearchEntry jSPSearchEntry0 = new JSPSearchEntry();
      jSPSearchEntry0.setRequest((HttpServletRequest) null);
      assertNull(jSPSearchEntry0.getPath());
  }

  @Test
  public void test4()  throws Throwable  {
      JSPSearchEntry jSPSearchEntry0 = new JSPSearchEntry();
      ServletContext servletContext0 = jSPSearchEntry0.getServletContext();
      assertNull(servletContext0);
  }

  @Test
  public void test5()  throws Throwable  {
      JSPSearchEntry jSPSearchEntry0 = new JSPSearchEntry();
      HttpServletRequest httpServletRequest0 = jSPSearchEntry0.getRequest();
      assertNull(httpServletRequest0);
  }

  @Test
  public void test6()  throws Throwable  {
      JSPSearchEntry jSPSearchEntry0 = new JSPSearchEntry();
      jSPSearchEntry0.setPath((String) null);
      assertEquals(0, jSPSearchEntry0.getIndex());
  }

  @Test
  public void test7()  throws Throwable  {
      JSPSearchEntry jSPSearchEntry0 = new JSPSearchEntry();
      // Undeclared exception!
      try {
        jSPSearchEntry0.clone();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      JSPSearchEntry jSPSearchEntry0 = new JSPSearchEntry();
      HttpServletResponse httpServletResponse0 = jSPSearchEntry0.getResponse();
      assertNull(httpServletResponse0);
  }

  @Test
  public void test9()  throws Throwable  {
      JSPSearchEntry jSPSearchEntry0 = new JSPSearchEntry();
      MockPageContext mockPageContext0 = new MockPageContext((ServletContext) null, (HttpServletRequest) null);
      try {
        jSPSearchEntry0.print((PageContext) mockPageContext0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
        /*
         * include
         */
      }
  }
}
