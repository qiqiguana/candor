/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.messaging;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.messaging.Destination;
import com.liferay.portal.kernel.messaging.DummyMessageListener;
import com.liferay.portal.kernel.messaging.GlobalDestinationEventListener;
import com.liferay.portal.kernel.messaging.InvokerMessageListener;
import com.liferay.portal.kernel.messaging.MessageListener;
import com.liferay.portal.kernel.messaging.ParallelDestination;
import com.liferay.portal.kernel.messaging.SynchronousDestination;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class GlobalDestinationEventListenerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      GlobalDestinationEventListener globalDestinationEventListener0 = new GlobalDestinationEventListener();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      globalDestinationEventListener0.setIgnoredDestinations((List<String>) linkedList0);
      ParallelDestination parallelDestination0 = new ParallelDestination();
      // Undeclared exception!
      try {
        globalDestinationEventListener0.destinationRemoved((Destination) parallelDestination0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      DummyMessageListener dummyMessageListener0 = new DummyMessageListener();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      GlobalDestinationEventListener globalDestinationEventListener0 = new GlobalDestinationEventListener((MessageListener) dummyMessageListener0, (List<String>) linkedList0);
      InvokerMessageListener invokerMessageListener0 = new InvokerMessageListener((MessageListener) dummyMessageListener0);
      globalDestinationEventListener0.setMessageListener((MessageListener) invokerMessageListener0);
  }

  @Test
  public void test2()  throws Throwable  {
      DummyMessageListener dummyMessageListener0 = new DummyMessageListener();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("");
      GlobalDestinationEventListener globalDestinationEventListener0 = new GlobalDestinationEventListener((MessageListener) dummyMessageListener0, (List<String>) linkedList0);
      SynchronousDestination synchronousDestination0 = new SynchronousDestination();
      globalDestinationEventListener0.destinationAdded((Destination) synchronousDestination0);
      assertEquals(false, synchronousDestination0.isRegistered());
      assertEquals(0, synchronousDestination0.getMessageListenerCount());
  }

  @Test
  public void test3()  throws Throwable  {
      DummyMessageListener dummyMessageListener0 = new DummyMessageListener();
      GlobalDestinationEventListener globalDestinationEventListener0 = new GlobalDestinationEventListener((MessageListener) dummyMessageListener0, (List<String>) null);
      ParallelDestination parallelDestination0 = new ParallelDestination();
      globalDestinationEventListener0.destinationAdded((Destination) parallelDestination0);
      assertEquals(true, parallelDestination0.isRegistered());
      assertEquals(1, parallelDestination0.getMessageListenerCount());
  }

  @Test
  public void test4()  throws Throwable  {
      DummyMessageListener dummyMessageListener0 = new DummyMessageListener();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("");
      GlobalDestinationEventListener globalDestinationEventListener0 = new GlobalDestinationEventListener((MessageListener) dummyMessageListener0, (List<String>) linkedList0);
      SynchronousDestination synchronousDestination0 = new SynchronousDestination();
      globalDestinationEventListener0.destinationRemoved((Destination) synchronousDestination0);
      assertEquals("", synchronousDestination0.getName());
  }
}
