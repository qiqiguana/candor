/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.impl.UserCacheModel;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import javax.swing.DebugGraphics;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UserCacheModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UserCacheModel userCacheModel0 = new UserCacheModel();
      String string0 = userCacheModel0.toString();
      assertEquals("{uuid=null, userId=0, companyId=0, createDate=0, modifiedDate=0, defaultUser=false, contactId=0, password=null, passwordEncrypted=false, passwordReset=false, passwordModifiedDate=0, digest=null, reminderQueryQuestion=null, reminderQueryAnswer=null, graceLoginCount=0, screenName=null, emailAddress=null, facebookId=0, openId=null, portraitId=0, languageId=null, timeZoneId=null, greeting=null, comments=null, firstName=null, middleName=null, lastName=null, jobTitle=null, loginDate=0, loginIP=null, lastLoginDate=0, lastLoginIP=null, lastFailedLoginDate=0, failedLoginAttempts=0, lockout=false, lockoutDate=0, agreedToTermsOfUse=false, emailAddressVerified=false, status=0}", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      UserCacheModel userCacheModel0 = new UserCacheModel();
      // Undeclared exception!
      try {
        userCacheModel0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      UserCacheModel userCacheModel0 = new UserCacheModel();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      userCacheModel0.uuid = "v";
      userCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(false, userCacheModel0.agreedToTermsOfUse);
  }

  @Test
  public void test3()  throws Throwable  {
      UserCacheModel userCacheModel0 = new UserCacheModel();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      userCacheModel0.password = "{uuid=null, userId=0, companyId=0, createDate=0, modifiedDate=0, defaultUser=false, contactId=0, password=null, passwordEncrypted=false, passwordReset=false, passwordModifiedDate=0, digest=null, reminderQueryQuestion=null, reminderQueryAnswer=null, graceLoginCount=0, screenName=null, emailAddress=null, facebookId=0, openId=null, portraitId=0, languageId=null, timeZoneId=null, greeting=null, comments=null, firstName=null, middleName=null, lastName=null, jobTitle=null, loginDate=0, loginIP=null, lastLoginDate=0, lastLoginIP=null, lastFailedLoginDate=0, failedLoginAttempts=0, lockout=false, lockoutDate=0, agreedToTermsOfUse=false, emailAddressVerified=false, status=0}";
      userCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0L, userCacheModel0.lockoutDate);
  }

  @Test
  public void test4()  throws Throwable  {
      UserCacheModel userCacheModel0 = new UserCacheModel();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      userCacheModel0.digest = "{uuid=null, userId=0, companyId=0, createDate=0, modifiedDate=0, defaultUser=false, contactId=0, password=null, passwordEncrypted=false, passwordReset=false, passwordModifiedDate=0, digest=null, reminderQueryQuestion=null, reminderQueryAnswer=null, graceLoginCount=0, screenName=null, emailAddress=null, facebookId=0, openId=null, portraitId=0, languageId=null, timeZoneId=null, greeting=null, comments=null, firstName=null, middleName=null, lastName=null, jobTitle=null, loginDate=0, loginIP=null, lastLoginDate=0, lastLoginIP=null, lastFailedLoginDate=0, failedLoginAttempts=0, lockout=false, lockoutDate=0, agreedToTermsOfUse=false, emailAddressVerified=false, status=0}";
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      userCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0L, userCacheModel0.facebookId);
  }

  @Test
  public void test5()  throws Throwable  {
      UserCacheModel userCacheModel0 = new UserCacheModel();
      userCacheModel0.reminderQueryQuestion = "{uuid=null, userId=0, companyId=0, createDate=0, modifiedDate=0, defaultUser=false, contactId=0, password=null, passwordEncrypted=false, passwordReset=false, passwordModifiedDate=0, digest=null, reminderQueryQuestion=null, reminderQueryAnswer=null, graceLoginCount=0, screenName=null, emailAddress=null, facebookId=0, openId=null, portraitId=0, languageId=null, timeZoneId=null, greeting=null, comments=null, firstName=null, middleName=null, lastName=null, jobTitle=null, loginDate=0, loginIP=null, lastLoginDate=0, lastLoginIP=null, lastFailedLoginDate=0, failedLoginAttempts=0, lockout=false, lockoutDate=0, agreedToTermsOfUse=false, emailAddressVerified=false, status=0}";
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      userCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(false, userCacheModel0.agreedToTermsOfUse);
  }

  @Test
  public void test6()  throws Throwable  {
      UserCacheModel userCacheModel0 = new UserCacheModel();
      userCacheModel0.reminderQueryAnswer = "v";
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      userCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0L, userCacheModel0.portraitId);
  }

  @Test
  public void test7()  throws Throwable  {
      UserCacheModel userCacheModel0 = new UserCacheModel();
      PrintStream printStream0 = DebugGraphics.logStream();
      userCacheModel0.screenName = " files)<br>";
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) printStream0);
      userCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals("{uuid=null, userId=0, companyId=0, createDate=0, modifiedDate=0, defaultUser=false, contactId=0, password=null, passwordEncrypted=false, passwordReset=false, passwordModifiedDate=0, digest=null, reminderQueryQuestion=null, reminderQueryAnswer=null, graceLoginCount=0, screenName= files)<br>, emailAddress=null, facebookId=0, openId=null, portraitId=0, languageId=null, timeZoneId=null, greeting=null, comments=null, firstName=null, middleName=null, lastName=null, jobTitle=null, loginDate=0, loginIP=null, lastLoginDate=0, lastLoginIP=null, lastFailedLoginDate=0, failedLoginAttempts=0, lockout=false, lockoutDate=0, agreedToTermsOfUse=false, emailAddressVerified=false, status=0}", userCacheModel0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      UserCacheModel userCacheModel0 = new UserCacheModel();
      userCacheModel0.languageId = "L";
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      userCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0L, userCacheModel0.companyId);
  }

  @Test
  public void test9()  throws Throwable  {
      UserCacheModel userCacheModel0 = new UserCacheModel();
      userCacheModel0.loginIP = " files)<br>";
      PrintStream printStream0 = DebugGraphics.logStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) printStream0);
      userCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0L, userCacheModel0.portraitId);
  }
}
