/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.atom;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.atom.AtomRequestContextImpl;
import com.liferay.portal.kernel.atom.AtomException;
import com.liferay.portal.kernel.atom.AtomRequestContext;
import com.liferay.portal.kernel.repository.model.Folder;
import com.liferay.portal.model.User;
import com.liferay.portal.model.UserWrapper;
import com.liferay.portal.repository.proxy.FolderProxyBean;
import com.liferay.portlet.blogs.atom.BlogsEntryAtomCollectionAdapter;
import com.liferay.portlet.blogs.model.BlogsEntry;
import com.liferay.portlet.blogs.model.BlogsEntryWrapper;
import com.liferay.portlet.documentlibrary.atom.FileEntryAtomCollectionAdapter;
import com.liferay.portlet.documentlibrary.atom.FolderAtomCollectionAdapter;
import com.liferay.portlet.usersadmin.atom.UserAtomCollectionAdapter;
import java.io.InputStream;
import java.util.Date;
import org.apache.abdera.protocol.server.RequestContext;
import org.joda.time.Chronology;
import org.joda.time.DateMidnight;
import org.joda.time.Instant;
import org.joda.time.MutableDateTime;
import org.joda.time.chrono.GJChronology;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BaseAtomCollectionAdapterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UserAtomCollectionAdapter userAtomCollectionAdapter0 = new UserAtomCollectionAdapter();
      UserWrapper userWrapper0 = new UserWrapper((User) null);
      // Undeclared exception!
      try {
        userAtomCollectionAdapter0.getMediaContentType((User) userWrapper0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      FolderAtomCollectionAdapter folderAtomCollectionAdapter0 = new FolderAtomCollectionAdapter();
      FolderProxyBean folderProxyBean0 = new FolderProxyBean((Folder) null, (ClassLoader) null);
      AtomRequestContextImpl atomRequestContextImpl0 = new AtomRequestContextImpl((RequestContext) null);
      try {
        folderAtomCollectionAdapter0.putMedia((Folder) folderProxyBean0, "", "", (InputStream) null, (AtomRequestContext) atomRequestContextImpl0);
        fail("Expecting exception: AtomException");
      } catch(AtomException e) {
        /*
         * 500
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      UserAtomCollectionAdapter userAtomCollectionAdapter0 = new UserAtomCollectionAdapter();
      UserWrapper userWrapper0 = new UserWrapper((User) null);
      AtomRequestContextImpl atomRequestContextImpl0 = new AtomRequestContextImpl((RequestContext) null);
      DateMidnight dateMidnight0 = new DateMidnight();
      Instant instant0 = dateMidnight0.toInstant();
      GJChronology gJChronology0 = GJChronology.getInstance();
      MutableDateTime mutableDateTime0 = instant0.toMutableDateTime((Chronology) gJChronology0);
      Date date0 = mutableDateTime0.toDate();
      try {
        userAtomCollectionAdapter0.doPutEntry((User) userWrapper0, "java.l", "java.l", "java.l", date0, (AtomRequestContext) atomRequestContextImpl0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      BlogsEntryAtomCollectionAdapter blogsEntryAtomCollectionAdapter0 = new BlogsEntryAtomCollectionAdapter();
      AtomRequestContextImpl atomRequestContextImpl0 = new AtomRequestContextImpl((RequestContext) null);
      try {
        blogsEntryAtomCollectionAdapter0.postMedia("c@mh@M'< rX1,.F", "c@mh@M'< rX1,.F", (InputStream) null, (AtomRequestContext) atomRequestContextImpl0);
        fail("Expecting exception: AtomException");
      } catch(AtomException e) {
        /*
         * 500
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      UserAtomCollectionAdapter userAtomCollectionAdapter0 = new UserAtomCollectionAdapter();
      // Undeclared exception!
      try {
        userAtomCollectionAdapter0.getMediaStream((User) null);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      AtomRequestContextImpl atomRequestContextImpl0 = new AtomRequestContextImpl((RequestContext) null);
      UserAtomCollectionAdapter userAtomCollectionAdapter0 = new UserAtomCollectionAdapter();
      try {
        userAtomCollectionAdapter0.doPostEntry("", "", "", (Date) null, (AtomRequestContext) atomRequestContextImpl0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      UserAtomCollectionAdapter userAtomCollectionAdapter0 = new UserAtomCollectionAdapter();
      try {
        userAtomCollectionAdapter0.doDeleteEntry((String) null, (AtomRequestContext) null);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      UserAtomCollectionAdapter userAtomCollectionAdapter0 = new UserAtomCollectionAdapter();
      // Undeclared exception!
      try {
        userAtomCollectionAdapter0.getMediaName((User) null);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      FileEntryAtomCollectionAdapter fileEntryAtomCollectionAdapter0 = new FileEntryAtomCollectionAdapter();
      try {
        fileEntryAtomCollectionAdapter0.deleteEntry("", (AtomRequestContext) null);
        fail("Expecting exception: AtomException");
      } catch(AtomException e) {
        /*
         * 500
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      FileEntryAtomCollectionAdapter fileEntryAtomCollectionAdapter0 = new FileEntryAtomCollectionAdapter();
      try {
        fileEntryAtomCollectionAdapter0.getEntry("can't determine class name for collection field ", (AtomRequestContext) null);
        fail("Expecting exception: AtomException");
      } catch(AtomException e) {
        /*
         * 500
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      FileEntryAtomCollectionAdapter fileEntryAtomCollectionAdapter0 = new FileEntryAtomCollectionAdapter();
      try {
        fileEntryAtomCollectionAdapter0.getFeedEntries((AtomRequestContext) null);
        fail("Expecting exception: AtomException");
      } catch(AtomException e) {
        /*
         * 500
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      FolderAtomCollectionAdapter folderAtomCollectionAdapter0 = new FolderAtomCollectionAdapter();
      AtomRequestContextImpl atomRequestContextImpl0 = new AtomRequestContextImpl((RequestContext) null);
      try {
        folderAtomCollectionAdapter0.postEntry("N0W]/kL\"~tQVI", "N0W]/kL\"~tQVI", "N0W]/kL\"~tQVI", (Date) null, (AtomRequestContext) atomRequestContextImpl0);
        fail("Expecting exception: AtomException");
      } catch(AtomException e) {
        /*
         * 500
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      BlogsEntryAtomCollectionAdapter blogsEntryAtomCollectionAdapter0 = new BlogsEntryAtomCollectionAdapter();
      BlogsEntryWrapper blogsEntryWrapper0 = new BlogsEntryWrapper((BlogsEntry) null);
      try {
        blogsEntryAtomCollectionAdapter0.putEntry((BlogsEntry) blogsEntryWrapper0, "", "", "", (Date) null, (AtomRequestContext) null);
        fail("Expecting exception: AtomException");
      } catch(AtomException e) {
        /*
         * 500
         */
      }
  }
}
