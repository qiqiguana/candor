/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.bi.rules;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.bi.rules.Query;
import com.liferay.portal.kernel.bi.rules.QueryType;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class QueryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Query query0 = Query.createCustomQuery("Bm:YUmxsqL) ", "Bm:YUmxsqL) ");
      String string0 = query0.getQueryName();
      assertEquals("Bm:YUmxsqL) ", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      Query query0 = Query.createCustomQuery("4#;qKiS@PR0p!U%k2=", "4#;qKiS@PR0p!U%k2=");
      Object[] objectArray0 = query0.getArguments();
      query0.addArguments(objectArray0);
      assertEquals("4#;qKiS@PR0p!U%k2=", query0.getIdentifier());
  }

  @Test
  public void test2()  throws Throwable  {
      Query query0 = Query.createStandardQuery();
      QueryType queryType0 = query0.getQueryType();
      assertEquals("STANDARD", queryType0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      Query query0 = Query.createCustomQuery("4#;qKiS@PR0p!U%k2=", "4#;qKiS@PR0p!U%k2=");
      String string0 = query0.getIdentifier();
      assertEquals("4#;qKiS@PR0p!U%k2=", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try {
        Query.createCustomQuery("", "");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Query idenfier is null.
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try {
        Query.createCustomQuery("(oAot1uoC", "");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Query string is null.
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Query query0 = Query.createCustomQuery("4#;qKiS@PR0p!U%k2=", "4#;qKiS@PR0p!U%k2=");
      query0.addArgument((Object) null);
      assertEquals("4#;qKiS@PR0p!U%k2=", query0.getIdentifier());
  }

  @Test
  public void test7()  throws Throwable  {
      Query query0 = Query.createStandardQuery();
      // Undeclared exception!
      try {
        query0.addArgument((Object) null);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Standard queries cannot accept query arguments
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      Query query0 = Query.createCustomQuery("4#;qKiS@PR0p!U%k2=", "4#;qKiS@PR0p!U%k2=");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      query0.addArguments((List<?>) linkedList0);
      assertEquals("4#;qKiS@PR0p!U%k2=", query0.getIdentifier());
  }

  @Test
  public void test9()  throws Throwable  {
      Query query0 = Query.createStandardQuery();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      // Undeclared exception!
      try {
        query0.addArguments((List<?>) linkedList0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Standard queries cannot accept query arguments
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      Query query0 = Query.createCustomQuery("4#;qKiS@PR0p!U%k2=", "4#;qKiS@PR0p!U%k2=");
      Object[] objectArray0 = new Object[25];
      query0.addArguments(objectArray0);
      assertEquals("4#;qKiS@PR0p!U%k2=", query0.getIdentifier());
  }

  @Test
  public void test11()  throws Throwable  {
      Query query0 = Query.createStandardQuery();
      Object[] objectArray0 = new Object[5];
      // Undeclared exception!
      try {
        query0.addArguments(objectArray0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Standard queries cannot accept query arguments
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      Query query0 = Query.createCustomQuery("4#;qKiS@PR0p!U%k2=", "4#;qKiS@PR0p!U%k2=");
      query0.addArguments((Object[]) null);
      assertEquals("4#;qKiS@PR0p!U%k2=", query0.getQueryName());
  }
}
