/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.concurrent;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.concurrent.BatchablePipe;
import com.liferay.portal.kernel.concurrent.IncreasableEntry;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BatchablePipeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BatchablePipe<Object, Object> batchablePipe0 = new BatchablePipe<Object, Object>();
      batchablePipe0.put((IncreasableEntry<Object, Object>) null);
      batchablePipe0.take();
      IncreasableEntry<Object, Object> increasableEntry0 = batchablePipe0.take();
      assertNull(increasableEntry0);
  }

  @Test
  public void test1()  throws Throwable  {
      BatchablePipe<Object, Object> batchablePipe0 = new BatchablePipe<Object, Object>();
      IncreasableEntry<Object, Object> increasableEntry0 = batchablePipe0.take();
      assertNull(increasableEntry0);
  }

  @Test
  public void test2()  throws Throwable  {
      BatchablePipe<Object, Object> batchablePipe0 = new BatchablePipe<Object, Object>();
      batchablePipe0.put((IncreasableEntry<Object, Object>) null);
      // Undeclared exception!
      try {
        batchablePipe0.put((IncreasableEntry<Object, Object>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      BatchablePipe<Object, Object> batchablePipe0 = new BatchablePipe<Object, Object>();
      batchablePipe0.put((IncreasableEntry<Object, Object>) null);
      batchablePipe0.take();
      boolean boolean0 = batchablePipe0.put((IncreasableEntry<Object, Object>) null);
      assertEquals(true, boolean0);
  }
}
