/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.io.unsync;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.io.unsync.UnsyncTeeWriter;
import de.schlichtherle.nio.charset.IBM437Charset;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Writer;
import java.nio.charset.Charset;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UnsyncTeeWriterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(1);
      UnsyncTeeWriter unsyncTeeWriter0 = new UnsyncTeeWriter((Writer) charArrayWriter0, (Writer) charArrayWriter0);
      unsyncTeeWriter0.append('=');
      assertEquals(2, charArrayWriter0.size());
      assertEquals("==", charArrayWriter0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(1912);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      IBM437Charset iBM437Charset0 = new IBM437Charset();
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter((OutputStream) pipedOutputStream0, (Charset) iBM437Charset0);
      UnsyncTeeWriter unsyncTeeWriter0 = new UnsyncTeeWriter((Writer) outputStreamWriter0, (Writer) outputStreamWriter0);
      unsyncTeeWriter0.close();
  }

  @Test
  public void test2()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(0);
      UnsyncTeeWriter unsyncTeeWriter0 = new UnsyncTeeWriter((Writer) charArrayWriter0, (Writer) charArrayWriter0);
      unsyncTeeWriter0.write(".zip", 0, 0);
      assertEquals(0, charArrayWriter0.size());
      assertEquals("", charArrayWriter0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(0);
      UnsyncTeeWriter unsyncTeeWriter0 = new UnsyncTeeWriter((Writer) charArrayWriter0, (Writer) charArrayWriter0);
      char[] charArray0 = new char[3];
      unsyncTeeWriter0.write(charArray0);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000", charArrayWriter0.toString());
      assertEquals(6, charArrayWriter0.size());
  }

  @Test
  public void test4()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(1);
      UnsyncTeeWriter unsyncTeeWriter0 = new UnsyncTeeWriter((Writer) charArrayWriter0, (Writer) charArrayWriter0);
      unsyncTeeWriter0.flush();
  }

  @Test
  public void test5()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(1);
      UnsyncTeeWriter unsyncTeeWriter0 = new UnsyncTeeWriter((Writer) charArrayWriter0, (Writer) charArrayWriter0);
      // Undeclared exception!
      try {
        unsyncTeeWriter0.append((CharSequence) ".zip", (int) '2', (int) '@');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: 64
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(0);
      UnsyncTeeWriter unsyncTeeWriter0 = new UnsyncTeeWriter((Writer) charArrayWriter0, (Writer) charArrayWriter0);
      unsyncTeeWriter0.append((CharSequence) ".zip");
      assertEquals(".zip.zip", charArrayWriter0.toString());
      assertEquals(8, charArrayWriter0.size());
  }

  @Test
  public void test7()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(0);
      UnsyncTeeWriter unsyncTeeWriter0 = new UnsyncTeeWriter((Writer) charArrayWriter0, (Writer) charArrayWriter0);
      unsyncTeeWriter0.write((int) '2');
      assertEquals(2, charArrayWriter0.size());
      assertEquals("22", charArrayWriter0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(1);
      UnsyncTeeWriter unsyncTeeWriter0 = new UnsyncTeeWriter((Writer) charArrayWriter0, (Writer) charArrayWriter0);
      unsyncTeeWriter0.write(".zip");
      assertEquals(".zip.zip", charArrayWriter0.toString());
      assertEquals(8, charArrayWriter0.size());
  }

  @Test
  public void test9()  throws Throwable  {
      UnsyncTeeWriter unsyncTeeWriter0 = new UnsyncTeeWriter((Writer) null, (Writer) null);
      char[] charArray0 = new char[8];
      // Undeclared exception!
      try {
        unsyncTeeWriter0.write(charArray0, (int) '@', (int) 'G');
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
