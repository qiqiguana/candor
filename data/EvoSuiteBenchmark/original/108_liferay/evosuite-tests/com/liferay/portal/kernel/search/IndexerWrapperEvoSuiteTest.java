/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.search;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.search.BaseIndexerPostProcessor;
import com.liferay.portal.kernel.search.BooleanQuery;
import com.liferay.portal.kernel.search.Document;
import com.liferay.portal.kernel.search.DummyIndexer;
import com.liferay.portal.kernel.search.Hits;
import com.liferay.portal.kernel.search.Indexer;
import com.liferay.portal.kernel.search.IndexerPostProcessor;
import com.liferay.portal.kernel.search.IndexerWrapper;
import com.liferay.portal.kernel.search.SearchContext;
import com.liferay.portal.kernel.search.SearchException;
import com.liferay.portal.kernel.search.Summary;
import com.liferay.portal.search.lucene.BooleanQueryImpl;
import com.liferay.portal.security.permission.PermissionChecker;
import java.util.Locale;
import javax.portlet.PortletURL;
import javax.swing.JComponent;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class IndexerWrapperEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DummyIndexer dummyIndexer0 = new DummyIndexer();
      IndexerWrapper indexerWrapper0 = new IndexerWrapper((Indexer) dummyIndexer0);
      BaseIndexerPostProcessor baseIndexerPostProcessor0 = new BaseIndexerPostProcessor();
      indexerWrapper0.registerIndexerPostProcessor((IndexerPostProcessor) baseIndexerPostProcessor0);
      assertEquals(false, indexerWrapper0.isPermissionAware());
  }

  @Test
  public void test1()  throws Throwable  {
      DummyIndexer dummyIndexer0 = new DummyIndexer();
      IndexerWrapper indexerWrapper0 = new IndexerWrapper((Indexer) dummyIndexer0);
      boolean boolean0 = indexerWrapper0.isPermissionAware();
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      DummyIndexer dummyIndexer0 = new DummyIndexer();
      IndexerWrapper indexerWrapper0 = new IndexerWrapper((Indexer) dummyIndexer0);
      indexerWrapper0.delete((Object) "");
      assertEquals("", indexerWrapper0.getPortletId());
  }

  @Test
  public void test3()  throws Throwable  {
      DummyIndexer dummyIndexer0 = new DummyIndexer();
      IndexerWrapper indexerWrapper0 = new IndexerWrapper((Indexer) dummyIndexer0);
      Locale locale0 = JComponent.getDefaultLocale();
      Summary summary0 = indexerWrapper0.getSummary((Document) null, locale0, "0k0T;6miI$keEt", (PortletURL) null);
      assertNull(summary0);
  }

  @Test
  public void test4()  throws Throwable  {
      DummyIndexer dummyIndexer0 = new DummyIndexer();
      IndexerWrapper indexerWrapper0 = new IndexerWrapper((Indexer) dummyIndexer0);
      String string0 = indexerWrapper0.getPortletId();
      assertEquals("", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      DummyIndexer dummyIndexer0 = new DummyIndexer();
      IndexerWrapper indexerWrapper0 = new IndexerWrapper((Indexer) dummyIndexer0);
      boolean boolean0 = indexerWrapper0.isStagingAware();
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      DummyIndexer dummyIndexer0 = new DummyIndexer();
      IndexerWrapper indexerWrapper0 = new IndexerWrapper((Indexer) dummyIndexer0);
      SearchContext searchContext0 = new SearchContext();
      Hits hits0 = indexerWrapper0.search(searchContext0);
      assertNull(hits0);
  }

  @Test
  public void test7()  throws Throwable  {
      DummyIndexer dummyIndexer0 = new DummyIndexer();
      IndexerWrapper indexerWrapper0 = new IndexerWrapper((Indexer) dummyIndexer0);
      indexerWrapper0.delete((-1251L), (String) null);
      assertEquals(false, indexerWrapper0.isFilterSearch());
  }

  @Test
  public void test8()  throws Throwable  {
      DummyIndexer dummyIndexer0 = new DummyIndexer();
      IndexerWrapper indexerWrapper0 = new IndexerWrapper((Indexer) dummyIndexer0);
      indexerWrapper0.reindex("Popped element stack to ", 1428L);
      assertEquals(false, indexerWrapper0.isStagingAware());
  }

  @Test
  public void test9()  throws Throwable  {
      DummyIndexer dummyIndexer0 = new DummyIndexer();
      IndexerWrapper indexerWrapper0 = new IndexerWrapper((Indexer) dummyIndexer0);
      SearchContext searchContext0 = new SearchContext();
      BooleanQuery booleanQuery0 = indexerWrapper0.getFacetQuery("Popped element stack to ", searchContext0);
      assertNull(booleanQuery0);
  }

  @Test
  public void test10()  throws Throwable  {
      IndexerWrapper indexerWrapper0 = new IndexerWrapper((Indexer) null);
      // Undeclared exception!
      try {
        indexerWrapper0.getClassNames();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      DummyIndexer dummyIndexer0 = new DummyIndexer();
      IndexerWrapper indexerWrapper0 = new IndexerWrapper((Indexer) dummyIndexer0);
      Document document0 = indexerWrapper0.getDocument((Object) null);
      assertNull(document0);
  }

  @Test
  public void test12()  throws Throwable  {
      DummyIndexer dummyIndexer0 = new DummyIndexer();
      IndexerWrapper indexerWrapper0 = new IndexerWrapper((Indexer) dummyIndexer0);
      String[] stringArray0 = new String[4];
      indexerWrapper0.reindex(stringArray0);
      assertEquals(false, indexerWrapper0.isStagingAware());
  }

  @Test
  public void test13()  throws Throwable  {
      DummyIndexer dummyIndexer0 = new DummyIndexer();
      IndexerWrapper indexerWrapper0 = new IndexerWrapper((Indexer) dummyIndexer0);
      String string0 = indexerWrapper0.getSearchEngineId();
      assertEquals("", string0);
  }

  @Test
  public void test14()  throws Throwable  {
      IndexerWrapper indexerWrapper0 = new IndexerWrapper((Indexer) null);
      // Undeclared exception!
      try {
        indexerWrapper0.reindex((Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      DummyIndexer dummyIndexer0 = new DummyIndexer();
      IndexerWrapper indexerWrapper0 = new IndexerWrapper((Indexer) dummyIndexer0);
      SearchContext searchContext0 = new SearchContext();
      BooleanQueryImpl booleanQueryImpl0 = new BooleanQueryImpl();
      indexerWrapper0.postProcessContextQuery((BooleanQuery) booleanQueryImpl0, searchContext0);
      assertEquals(0L, searchContext0.getUserId());
  }

  @Test
  public void test16()  throws Throwable  {
      DummyIndexer dummyIndexer0 = new DummyIndexer();
      IndexerWrapper indexerWrapper0 = new IndexerWrapper((Indexer) dummyIndexer0);
      BooleanQuery booleanQuery0 = indexerWrapper0.getFullQuery((SearchContext) null);
      assertNull(booleanQuery0);
  }

  @Test
  public void test17()  throws Throwable  {
      DummyIndexer dummyIndexer0 = new DummyIndexer();
      IndexerWrapper indexerWrapper0 = new IndexerWrapper((Indexer) dummyIndexer0);
      String string0 = indexerWrapper0.getSortField("");
      assertEquals("", string0);
  }

  @Test
  public void test18()  throws Throwable  {
      DummyIndexer dummyIndexer0 = new DummyIndexer();
      IndexerWrapper indexerWrapper0 = new IndexerWrapper((Indexer) dummyIndexer0);
      boolean boolean0 = indexerWrapper0.isFilterSearch();
      assertEquals(false, boolean0);
  }

  @Test
  public void test19()  throws Throwable  {
      DummyIndexer dummyIndexer0 = new DummyIndexer();
      IndexerWrapper indexerWrapper0 = new IndexerWrapper((Indexer) dummyIndexer0);
      boolean boolean0 = indexerWrapper0.hasPermission((PermissionChecker) null, ":wt", 0L, ":wt");
      assertEquals(false, boolean0);
  }

  @Test
  public void test20()  throws Throwable  {
      DummyIndexer dummyIndexer0 = new DummyIndexer();
      IndexerWrapper indexerWrapper0 = new IndexerWrapper((Indexer) dummyIndexer0);
      BaseIndexerPostProcessor baseIndexerPostProcessor0 = new BaseIndexerPostProcessor();
      indexerWrapper0.unregisterIndexerPostProcessor((IndexerPostProcessor) baseIndexerPostProcessor0);
      assertEquals(false, indexerWrapper0.isFilterSearch());
  }

  @Test
  public void test21()  throws Throwable  {
      DummyIndexer dummyIndexer0 = new DummyIndexer();
      IndexerWrapper indexerWrapper0 = new IndexerWrapper((Indexer) dummyIndexer0);
      SearchContext searchContext0 = new SearchContext();
      BooleanQueryImpl booleanQueryImpl0 = new BooleanQueryImpl();
      indexerWrapper0.postProcessSearchQuery((BooleanQuery) booleanQueryImpl0, searchContext0);
      assertEquals(false, indexerWrapper0.isFilterSearch());
  }

  @Test
  public void test22()  throws Throwable  {
      DummyIndexer dummyIndexer0 = new DummyIndexer();
      IndexerWrapper indexerWrapper0 = new IndexerWrapper((Indexer) dummyIndexer0);
      IndexerPostProcessor[] indexerPostProcessorArray0 = indexerWrapper0.getIndexerPostProcessors();
      assertNotNull(indexerPostProcessorArray0);
  }
}
