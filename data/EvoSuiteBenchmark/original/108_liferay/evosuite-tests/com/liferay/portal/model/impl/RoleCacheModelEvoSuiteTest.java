/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.impl.RoleCacheModel;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RoleCacheModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RoleCacheModel roleCacheModel0 = new RoleCacheModel();
      // Undeclared exception!
      try {
        roleCacheModel0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      RoleCacheModel roleCacheModel0 = new RoleCacheModel();
      String string0 = roleCacheModel0.toString();
      assertEquals("{roleId=0, companyId=0, classNameId=0, classPK=0, name=null, title=null, description=null, type=0, subtype=null}", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      RoleCacheModel roleCacheModel0 = new RoleCacheModel();
      roleCacheModel0.name = "{roleId=0, companyId=0, classNameId=0, classPK=0, name=null, title=null, description=null, type=0, subtype=null}";
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      roleCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0L, roleCacheModel0.roleId);
  }

  @Test
  public void test3()  throws Throwable  {
      RoleCacheModel roleCacheModel0 = new RoleCacheModel();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) pipedOutputStream0);
      roleCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
  }

  @Test
  public void test4()  throws Throwable  {
      RoleCacheModel roleCacheModel0 = new RoleCacheModel();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      roleCacheModel0.description = "acceptDrag";
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) pipedOutputStream0);
      roleCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
  }
}
