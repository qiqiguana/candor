/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.Country;
import com.liferay.portal.model.CountrySoap;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CountrySoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CountrySoap countrySoap0 = new CountrySoap();
      countrySoap0.setName("Q(Um|F");
      assertEquals(false, countrySoap0.getActive());
  }

  @Test
  public void test1()  throws Throwable  {
      CountrySoap countrySoap0 = new CountrySoap();
      countrySoap0.setZipRequired(false);
      assertEquals(false, countrySoap0.isZipRequired());
      assertEquals(false, countrySoap0.getZipRequired());
  }

  @Test
  public void test2()  throws Throwable  {
      CountrySoap countrySoap0 = new CountrySoap();
      long long0 = countrySoap0.getCountryId();
      assertEquals(0L, long0);
  }

  @Test
  public void test3()  throws Throwable  {
      CountrySoap countrySoap0 = new CountrySoap();
      String string0 = countrySoap0.getIdd();
      assertNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      CountrySoap countrySoap0 = new CountrySoap();
      boolean boolean0 = countrySoap0.isActive();
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      CountrySoap countrySoap0 = new CountrySoap();
      boolean boolean0 = countrySoap0.isZipRequired();
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      CountrySoap countrySoap0 = new CountrySoap();
      countrySoap0.setNumber("Q(Um|F");
      assertEquals("Q(Um|F", countrySoap0.getNumber());
  }

  @Test
  public void test7()  throws Throwable  {
      CountrySoap countrySoap0 = new CountrySoap();
      String string0 = countrySoap0.getA3();
      assertNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      CountrySoap countrySoap0 = new CountrySoap();
      countrySoap0.setPrimaryKey(0L);
      assertEquals(false, countrySoap0.getZipRequired());
  }

  @Test
  public void test9()  throws Throwable  {
      CountrySoap countrySoap0 = new CountrySoap();
      long long0 = countrySoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test10()  throws Throwable  {
      CountrySoap countrySoap0 = new CountrySoap();
      String string0 = countrySoap0.getA2();
      assertNull(string0);
  }

  @Test
  public void test11()  throws Throwable  {
      CountrySoap countrySoap0 = new CountrySoap();
      String string0 = countrySoap0.getNumber();
      assertNull(string0);
  }

  @Test
  public void test12()  throws Throwable  {
      CountrySoap countrySoap0 = new CountrySoap();
      String string0 = countrySoap0.getName();
      assertNull(string0);
  }

  @Test
  public void test13()  throws Throwable  {
      Country[][] countryArray0 = new Country[10][6];
      // Undeclared exception!
      try {
        CountrySoap.toSoapModels(countryArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      CountrySoap countrySoap0 = new CountrySoap();
      countrySoap0.setA2("");
      assertNull(countrySoap0.getNumber());
  }

  @Test
  public void test15()  throws Throwable  {
      CountrySoap countrySoap0 = new CountrySoap();
      countrySoap0.setA3("");
      assertEquals("", countrySoap0.getA3());
  }

  @Test
  public void test16()  throws Throwable  {
      CountrySoap countrySoap0 = new CountrySoap();
      boolean boolean0 = countrySoap0.getZipRequired();
      assertEquals(false, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      CountrySoap countrySoap0 = new CountrySoap();
      countrySoap0.setActive(false);
      assertEquals(false, countrySoap0.isActive());
      assertEquals(false, countrySoap0.getActive());
  }

  @Test
  public void test18()  throws Throwable  {
      CountrySoap countrySoap0 = new CountrySoap();
      boolean boolean0 = countrySoap0.getActive();
      assertEquals(false, boolean0);
  }

  @Test
  public void test19()  throws Throwable  {
      CountrySoap countrySoap0 = new CountrySoap();
      countrySoap0.setIdd((String) null);
      assertEquals(false, countrySoap0.isZipRequired());
  }

  @Test
  public void test20()  throws Throwable  {
      LinkedList<Country> linkedList0 = new LinkedList<Country>();
      CountrySoap[] countrySoapArray0 = CountrySoap.toSoapModels((List<Country>) linkedList0);
      assertNotNull(countrySoapArray0);
  }

  @Test
  public void test21()  throws Throwable  {
      LinkedList<Country> linkedList0 = new LinkedList<Country>();
      linkedList0.add((Country) null);
      // Undeclared exception!
      try {
        CountrySoap.toSoapModels((List<Country>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
