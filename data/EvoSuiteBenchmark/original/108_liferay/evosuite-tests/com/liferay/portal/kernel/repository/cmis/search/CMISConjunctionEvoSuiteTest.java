/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.repository.cmis.search;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.repository.cmis.search.CMISConjunction;
import com.liferay.portal.kernel.repository.cmis.search.CMISContainsExpression;
import com.liferay.portal.kernel.repository.cmis.search.CMISCriterion;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CMISConjunctionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CMISConjunction cMISConjunction0 = new CMISConjunction();
      CMISContainsExpression cMISContainsExpression0 = new CMISContainsExpression("");
      cMISConjunction0.add((CMISCriterion) cMISContainsExpression0);
      String string0 = cMISConjunction0.toQueryFragment();
      assertEquals("CONTAINS('')", cMISConjunction0.toQueryFragment());
      assertEquals("CONTAINS('')", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      CMISConjunction cMISConjunction0 = new CMISConjunction();
      String string0 = cMISConjunction0.toQueryFragment();
      assertEquals("", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      CMISConjunction cMISConjunction0 = new CMISConjunction();
      CMISContainsExpression cMISContainsExpression0 = new CMISContainsExpression("");
      cMISConjunction0.add((CMISCriterion) cMISContainsExpression0);
      cMISConjunction0.add((CMISCriterion) cMISContainsExpression0);
      String string0 = cMISConjunction0.toQueryFragment();
      assertEquals("(CONTAINS('') AND CONTAINS(''))", cMISConjunction0.toQueryFragment());
      assertEquals("(CONTAINS('') AND CONTAINS(''))", string0);
  }
}
