/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.Time;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TimeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try {
        Time.getDuration((-1988L));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try {
        Time.getShortTimestamp();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      String string0 = Time.getDescription(60000L);
      assertEquals("1 Minute", string0);
      assertNotNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try {
        Time.getDate((Calendar) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try {
        Time.getRFC822();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try {
        Time.getTimestamp();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(801, "-^R`fEhFg8Gqa*f");
      // Undeclared exception!
      try {
        Time.getDate((TimeZone) simpleTimeZone0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar(locale0);
      Date date0 = gregorianCalendar0.getGregorianChange();
      TimeZone timeZone0 = gregorianCalendar0.getTimeZone();
      // Undeclared exception!
      try {
        Time.getDate(date0, timeZone0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      Time time0 = new Time();
      assertNotNull(time0);
  }

  @Test
  public void test9()  throws Throwable  {
      String string0 = Time.getDescription(60000L, true);
      assertEquals("1 Minute", string0);
      assertNotNull(string0);
  }

  @Test
  public void test10()  throws Throwable  {
      String string0 = Time.getDescription((-487L), true);
      assertEquals("0 Seconds", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      String string0 = Time.getDescription((long) 1693, true);
      assertNotNull(string0);
      assertEquals("1 Second", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      String string0 = Time.getDescription(2592000006L, true);
      assertEquals("1 Month", string0);
  }

  @Test
  public void test13()  throws Throwable  {
      String string0 = Time.getDescription(3600000L, true);
      assertNotNull(string0);
      assertEquals("1 Hour", string0);
  }

  @Test
  public void test14()  throws Throwable  {
      String string0 = Time.getDescription(86400000L, true);
      assertEquals("1 Day", string0);
  }

  @Test
  public void test15()  throws Throwable  {
      String string0 = Time.getDescription(31536000000L, true);
      assertEquals("1 Year", string0);
  }

  @Test
  public void test16()  throws Throwable  {
      String string0 = Time.getDescription(0L);
      assertEquals("0 Week", string0);
      assertNotNull(string0);
  }

  @Test
  public void test17()  throws Throwable  {
      String string0 = Time.getDescription(86400000L);
      assertNotNull(string0);
      assertEquals("1 Day", string0);
  }

  @Test
  public void test18()  throws Throwable  {
      String string0 = Time.getDescription(3600000L);
      assertEquals("1 Hour", string0);
      assertNotNull(string0);
  }

  @Test
  public void test19()  throws Throwable  {
      String string0 = Time.getDescription((long) 1693);
      assertNotNull(string0);
      assertEquals("1693 Milliseconds", string0);
  }

  @Test
  public void test20()  throws Throwable  {
      String string0 = Time.getDescription(1000L);
      assertNotNull(string0);
      assertEquals("1 Second", string0);
  }

  @Test
  public void test21()  throws Throwable  {
      String string0 = Time.getShortTimestamp((Date) null);
      assertEquals("", string0);
      assertNotNull(string0);
  }
}
