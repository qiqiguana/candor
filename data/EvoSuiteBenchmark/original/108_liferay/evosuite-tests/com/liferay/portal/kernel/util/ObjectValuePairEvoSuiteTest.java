/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.ObjectValuePair;
import java.io.Serializable;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ObjectValuePairEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ObjectValuePair<ObjectValuePair<Serializable, Integer>, Serializable> objectValuePair0 = new ObjectValuePair<ObjectValuePair<Serializable, Integer>, Serializable>();
      Object object0 = new Object();
      ObjectValuePair<Object, Serializable> objectValuePair1 = new ObjectValuePair<Object, Serializable>(object0, (Serializable) objectValuePair0);
      ObjectValuePair<Object, Object> objectValuePair2 = new ObjectValuePair<Object, Object>((Object) objectValuePair0, (Object) objectValuePair1);
      objectValuePair2.setValue(object0);
  }

  @Test
  public void test1()  throws Throwable  {
      ObjectValuePair<Integer, ObjectValuePair<Serializable, Object>> objectValuePair0 = new ObjectValuePair<Integer, ObjectValuePair<Serializable, Object>>();
      objectValuePair0.getKey();
  }

  @Test
  public void test2()  throws Throwable  {
      ObjectValuePair<Object, Serializable> objectValuePair0 = new ObjectValuePair<Object, Serializable>();
      ObjectValuePair<ObjectValuePair<Serializable, Object>, Integer> objectValuePair1 = new ObjectValuePair<ObjectValuePair<Serializable, Object>, Integer>();
      objectValuePair0.setKey((Object) objectValuePair1);
  }

  @Test
  public void test3()  throws Throwable  {
      ObjectValuePair<ObjectValuePair<Object, Object>, Integer> objectValuePair0 = new ObjectValuePair<ObjectValuePair<Object, Object>, Integer>();
      ObjectValuePair<Serializable, Serializable> objectValuePair1 = new ObjectValuePair<Serializable, Serializable>((Serializable) objectValuePair0, (Serializable) objectValuePair0);
      ObjectValuePair<Object, Object> objectValuePair2 = (ObjectValuePair<Object, Object>)objectValuePair1.getValue();
      assertNotNull(objectValuePair2);
  }

  @Test
  public void test4()  throws Throwable  {
      ObjectValuePair<Object, Object> objectValuePair0 = new ObjectValuePair<Object, Object>();
      ObjectValuePair<Object, ObjectValuePair<Object, Object>> objectValuePair1 = new ObjectValuePair<Object, ObjectValuePair<Object, Object>>((Object) "c}=*2IHCG", objectValuePair0);
      ObjectValuePair<ObjectValuePair<Integer, ObjectValuePair<String, Serializable>>, ObjectValuePair<ObjectValuePair<Integer, String>, Serializable>> objectValuePair2 = new ObjectValuePair<ObjectValuePair<Integer, ObjectValuePair<String, Serializable>>, ObjectValuePair<ObjectValuePair<Integer, String>, Serializable>>();
      boolean boolean0 = objectValuePair1.equals((Object) objectValuePair2);
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      ObjectValuePair<Integer, ObjectValuePair<Integer, Serializable>> objectValuePair0 = new ObjectValuePair<Integer, ObjectValuePair<Integer, Serializable>>();
      ObjectValuePair<String, ObjectValuePair<Object, Serializable>> objectValuePair1 = new ObjectValuePair<String, ObjectValuePair<Object, Serializable>>();
      boolean boolean0 = objectValuePair0.equals((Object) objectValuePair1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      ObjectValuePair<String, Serializable> objectValuePair0 = new ObjectValuePair<String, Serializable>();
      boolean boolean0 = objectValuePair0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      ObjectValuePair<ObjectValuePair<Object, Object>, Integer> objectValuePair0 = new ObjectValuePair<ObjectValuePair<Object, Object>, Integer>();
      ObjectValuePair<Serializable, Serializable> objectValuePair1 = new ObjectValuePair<Serializable, Serializable>((Serializable) objectValuePair0, (Serializable) objectValuePair0);
      int int0 = objectValuePair1.hashCode();
      assertEquals(0, int0);
  }
}
