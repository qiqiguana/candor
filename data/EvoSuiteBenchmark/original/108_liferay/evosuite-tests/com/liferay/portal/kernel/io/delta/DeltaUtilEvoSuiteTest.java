/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.io.delta;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.io.delta.ByteChannelReader;
import com.liferay.portal.kernel.io.delta.ByteChannelWriter;
import com.liferay.portal.kernel.io.delta.DeltaUtil;
import java.io.FileDescriptor;
import java.io.FileInputStream;
import java.io.IOException;
import java.nio.channels.FileChannel;
import java.nio.channels.ReadableByteChannel;
import java.nio.channels.WritableByteChannel;
import org.jruby.util.io.NullChannel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DeltaUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileInputStream fileInputStream0 = new FileInputStream(fileDescriptor0);
      FileChannel fileChannel0 = fileInputStream0.getChannel();
      ByteChannelWriter byteChannelWriter0 = new ByteChannelWriter((WritableByteChannel) fileChannel0, 16);
      try {
        DeltaUtil.checksums(fileChannel0, byteChannelWriter0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * Bad file descriptor
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      DeltaUtil deltaUtil0 = new DeltaUtil();
      assertNotNull(deltaUtil0);
  }

  @Test
  public void test2()  throws Throwable  {
      NullChannel nullChannel0 = new NullChannel();
      ByteChannelWriter byteChannelWriter0 = new ByteChannelWriter((WritableByteChannel) nullChannel0);
      // Undeclared exception!
      try {
        DeltaUtil.delta((ReadableByteChannel) nullChannel0, (ByteChannelReader) null, byteChannelWriter0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
