/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.json;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.json.JSONSerializerImpl;
import com.liferay.portal.json.transformer.RepositoryModelJSONTransformer;
import com.liferay.portal.kernel.json.JSONTransformer;
import flexjson.JSONException;
import flexjson.transformer.CharacterTransformer;
import java.lang.reflect.Array;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JSONSerializerImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JSONSerializerImpl jSONSerializerImpl0 = new JSONSerializerImpl();
      String[] stringArray0 = new String[9];
      // Undeclared exception!
      try {
        jSONSerializerImpl0.exclude(stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      JSONSerializerImpl jSONSerializerImpl0 = new JSONSerializerImpl();
      String string0 = jSONSerializerImpl0.serializeDeep((Object) null);
      assertEquals("null", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      JSONSerializerImpl jSONSerializerImpl0 = new JSONSerializerImpl();
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try {
        jSONSerializerImpl0.include(stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      JSONSerializerImpl jSONSerializerImpl0 = new JSONSerializerImpl();
      CharacterTransformer characterTransformer0 = new CharacterTransformer();
      // Undeclared exception!
      try {
        jSONSerializerImpl0.serialize((Object) characterTransformer0);
        fail("Expecting exception: JSONException");
      } catch(JSONException e) {
        /*
         * Error trying to deepSerialize
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      JSONSerializerImpl jSONSerializerImpl0 = new JSONSerializerImpl();
      Class<?>[] classArray0 = (Class<?>[]) Array.newInstance(Class.class, 8);
      JSONSerializerImpl jSONSerializerImpl1 = jSONSerializerImpl0.transform((JSONTransformer) null, classArray0);
      assertSame(jSONSerializerImpl0, jSONSerializerImpl1);
  }

  @Test
  public void test5()  throws Throwable  {
      JSONSerializerImpl jSONSerializerImpl0 = new JSONSerializerImpl();
      RepositoryModelJSONTransformer repositoryModelJSONTransformer0 = new RepositoryModelJSONTransformer();
      Class<?>[] classArray0 = (Class<?>[]) Array.newInstance(Class.class, 1);
      JSONSerializerImpl jSONSerializerImpl1 = jSONSerializerImpl0.transform((JSONTransformer) repositoryModelJSONTransformer0, classArray0);
      assertSame(jSONSerializerImpl1, jSONSerializerImpl0);
  }

  @Test
  public void test6()  throws Throwable  {
      JSONSerializerImpl jSONSerializerImpl0 = new JSONSerializerImpl();
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try {
        jSONSerializerImpl0.transform((JSONTransformer) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      JSONSerializerImpl jSONSerializerImpl0 = new JSONSerializerImpl();
      String[] stringArray0 = new String[9];
      RepositoryModelJSONTransformer repositoryModelJSONTransformer0 = new RepositoryModelJSONTransformer();
      // Undeclared exception!
      try {
        jSONSerializerImpl0.transform((JSONTransformer) repositoryModelJSONTransformer0, stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
