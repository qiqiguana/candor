/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.jmx.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.jmx.model.Domain;
import com.liferay.portal.kernel.jmx.model.MBean;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DomainEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Domain domain0 = new Domain("+^`v6djo~mMUxFp8");
      // Undeclared exception!
      try {
        domain0.hashCode();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Domain domain0 = new Domain("JMX.mbean.registered", (List<MBean>) null);
      domain0.getMBeans();
      assertEquals(true, domain0.isLoaded());
  }

  @Test
  public void test2()  throws Throwable  {
      Domain domain0 = new Domain("JMX.mbean.registered", (List<MBean>) null);
      boolean boolean0 = domain0.isLoaded();
      assertEquals(true, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      Domain domain0 = new Domain("+^`v6djo~mMUxFp8");
      String string0 = domain0.getDomainName();
      assertEquals("+^`v6djo~mMUxFp8", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      Domain domain0 = new Domain("+^`v6djo~mMUxFp8");
      boolean boolean0 = domain0.equals((Object) "+^`v6djo~mMUxFp8");
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      Domain domain0 = new Domain("JMX.mbean.registered", (List<MBean>) null);
      Domain domain1 = new Domain((String) null);
      boolean boolean0 = domain0.equals((Object) domain1);
      assertEquals(true, domain0.isLoaded());
      assertEquals(false, boolean0);
      assertFalse(domain1.equals(domain0));
  }

  @Test
  public void test6()  throws Throwable  {
      Domain domain0 = new Domain("JMX.mbean.registered", (List<MBean>) null);
      Domain domain1 = new Domain("JMX.mbean.registered");
      boolean boolean0 = domain0.equals((Object) domain1);
      assertEquals(true, boolean0);
      assertEquals(true, domain0.isLoaded());
  }
}
