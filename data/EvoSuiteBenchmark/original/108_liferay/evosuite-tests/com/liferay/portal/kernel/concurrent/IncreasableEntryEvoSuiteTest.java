/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.concurrent;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.increment.BufferedIncreasableEntry;
import com.liferay.portal.kernel.concurrent.IncreasableEntry;
import com.liferay.portal.kernel.increment.Increment;
import org.aopalliance.intercept.MethodInvocation;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class IncreasableEntryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BufferedIncreasableEntry<Integer, IncreasableEntry<Object, Object>> bufferedIncreasableEntry0 = new BufferedIncreasableEntry<Integer, IncreasableEntry<Object, Object>>((MethodInvocation) null, (Integer) null, (Increment<IncreasableEntry<Object, Object>>) null);
      bufferedIncreasableEntry0.getKey();
  }

  @Test
  public void test1()  throws Throwable  {
      BufferedIncreasableEntry<Integer, IncreasableEntry<Object, Object>> bufferedIncreasableEntry0 = new BufferedIncreasableEntry<Integer, IncreasableEntry<Object, Object>>((MethodInvocation) null, (Integer) null, (Increment<IncreasableEntry<Object, Object>>) null);
      BufferedIncreasableEntry<String, IncreasableEntry<Object, Object>> bufferedIncreasableEntry1 = new BufferedIncreasableEntry<String, IncreasableEntry<Object, Object>>((MethodInvocation) null, "", (Increment<IncreasableEntry<Object, Object>>) null);
      boolean boolean0 = bufferedIncreasableEntry1.equals((Object) bufferedIncreasableEntry0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      BufferedIncreasableEntry<Integer, IncreasableEntry<Object, Object>> bufferedIncreasableEntry0 = new BufferedIncreasableEntry<Integer, IncreasableEntry<Object, Object>>((MethodInvocation) null, (Integer) null, (Increment<IncreasableEntry<Object, Object>>) null);
      BufferedIncreasableEntry<Integer, Object> bufferedIncreasableEntry1 = new BufferedIncreasableEntry<Integer, Object>((MethodInvocation) null, (Integer) null, (Increment<Object>) null);
      boolean boolean0 = bufferedIncreasableEntry1.equals((Object) bufferedIncreasableEntry0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      Object object0 = new Object();
      BufferedIncreasableEntry<String, IncreasableEntry<Object, Object>> bufferedIncreasableEntry0 = new BufferedIncreasableEntry<String, IncreasableEntry<Object, Object>>((MethodInvocation) null, "", (Increment<IncreasableEntry<Object, Object>>) null);
      boolean boolean0 = bufferedIncreasableEntry0.equals(object0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      BufferedIncreasableEntry<Integer, IncreasableEntry<Object, Object>> bufferedIncreasableEntry0 = new BufferedIncreasableEntry<Integer, IncreasableEntry<Object, Object>>((MethodInvocation) null, (Integer) null, (Increment<IncreasableEntry<Object, Object>>) null);
      bufferedIncreasableEntry0.getValue();
      boolean boolean0 = bufferedIncreasableEntry0.increase((Increment<IncreasableEntry<Object, Object>>) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      BufferedIncreasableEntry<Integer, Object> bufferedIncreasableEntry0 = new BufferedIncreasableEntry<Integer, Object>((MethodInvocation) null, (Integer) null, (Increment<Object>) null);
      int int0 = bufferedIncreasableEntry0.hashCode();
      assertEquals(847, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      Object object0 = new Object();
      BufferedIncreasableEntry<Object, Integer> bufferedIncreasableEntry0 = new BufferedIncreasableEntry<Object, Integer>((MethodInvocation) null, object0, (Increment<Integer>) null);
      int int0 = bufferedIncreasableEntry0.hashCode();
      assertEquals((-2036583906), int0);
  }

  @Test
  public void test7()  throws Throwable  {
      BufferedIncreasableEntry<Integer, Integer> bufferedIncreasableEntry0 = new BufferedIncreasableEntry<Integer, Integer>((MethodInvocation) null, (Integer) (-1625750581), (Increment<Integer>) null);
      // Undeclared exception!
      try {
        bufferedIncreasableEntry0.increase((Increment<Integer>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
