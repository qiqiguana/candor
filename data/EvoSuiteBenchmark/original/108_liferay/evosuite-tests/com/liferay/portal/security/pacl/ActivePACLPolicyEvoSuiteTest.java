/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.security.pacl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.security.pacl.ActivePACLPolicy;
import java.io.ObjectStreamConstants;
import java.io.SerializablePermission;
import java.lang.reflect.Method;
import java.security.Permission;
import java.util.Properties;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ActivePACLPolicyEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ActivePACLPolicy activePACLPolicy0 = new ActivePACLPolicy("", classLoader0, (Properties) null);
      assertNotNull(activePACLPolicy0);
      
      SerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;
      // Undeclared exception!
      try {
        activePACLPolicy0.checkPermission((Permission) serializablePermission0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Properties properties0 = new Properties();
      ActivePACLPolicy activePACLPolicy0 = new ActivePACLPolicy("4*U#`<voF\"|J\"(5", classLoader0, properties0);
      activePACLPolicy0.hasSQL("4*U#`<voF\"|J\"(5");
      assertEquals("{active=true, hashCode=50354697, servletContextName=4*U#`<voF\"|J\"(5}", activePACLPolicy0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ActivePACLPolicy activePACLPolicy0 = new ActivePACLPolicy("KX/7CXiq4*&n1>d)'", classLoader0, (Properties) null);
      assertNotNull(activePACLPolicy0);
      
      // Undeclared exception!
      try {
        activePACLPolicy0.hasJNDI("KX/7CXiq4*&n1>d)'");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Properties properties0 = new Properties();
      ActivePACLPolicy activePACLPolicy0 = new ActivePACLPolicy("4*U#`<voF\"|J\"(5", classLoader0, properties0);
      boolean boolean0 = activePACLPolicy0.isActive();
      assertEquals("{active=true, hashCode=1449627013, servletContextName=4*U#`<voF\"|J\"(5}", activePACLPolicy0.toString());
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Properties properties0 = new Properties();
      ActivePACLPolicy activePACLPolicy0 = new ActivePACLPolicy("edt", classLoader0, properties0);
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try {
        activePACLPolicy0.hasPortalService((Object) "LongDescription", (Method) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
