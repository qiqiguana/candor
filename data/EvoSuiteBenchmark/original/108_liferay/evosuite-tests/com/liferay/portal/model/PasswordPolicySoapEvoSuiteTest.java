/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.PasswordPolicy;
import com.liferay.portal.model.PasswordPolicySoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PasswordPolicySoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setMinNumbers(869);
      assertEquals(869, passwordPolicySoap0.getMinNumbers());
  }

  @Test
  public void test1()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setMinLowerCase((-573));
      assertEquals(-573, passwordPolicySoap0.getMinLowerCase());
  }

  @Test
  public void test2()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setMinLength(869);
      assertEquals(869, passwordPolicySoap0.getMinLength());
  }

  @Test
  public void test3()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      boolean boolean0 = passwordPolicySoap0.isDefaultPolicy();
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setMinSymbols(0);
      assertEquals(0, passwordPolicySoap0.getMinSymbols());
  }

  @Test
  public void test5()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      long long0 = passwordPolicySoap0.getResetTicketMaxAge();
      assertEquals(0L, long0);
  }

  @Test
  public void test6()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      boolean boolean0 = passwordPolicySoap0.isRequireUnlock();
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      int int0 = passwordPolicySoap0.getHistoryCount();
      assertEquals(0, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      boolean boolean0 = passwordPolicySoap0.isLockout();
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setUserId(0L);
      assertEquals(0L, passwordPolicySoap0.getPasswordPolicyId());
  }

  @Test
  public void test10()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setHistory(false);
      assertEquals(false, passwordPolicySoap0.getHistory());
      assertEquals(false, passwordPolicySoap0.isHistory());
  }

  @Test
  public void test11()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setMinUpperCase((-573));
      assertEquals(-573, passwordPolicySoap0.getMinUpperCase());
  }

  @Test
  public void test12()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setMinAge(13L);
      assertEquals(13L, passwordPolicySoap0.getMinAge());
  }

  @Test
  public void test13()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setExpireable(false);
      assertEquals(false, passwordPolicySoap0.getExpireable());
      assertEquals(false, passwordPolicySoap0.isExpireable());
  }

  @Test
  public void test14()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      boolean boolean0 = passwordPolicySoap0.isChangeable();
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      boolean boolean0 = passwordPolicySoap0.getChangeable();
      assertEquals(false, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      long long0 = passwordPolicySoap0.getMinAge();
      assertEquals(0L, long0);
  }

  @Test
  public void test17()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      boolean boolean0 = passwordPolicySoap0.getChangeRequired();
      assertEquals(false, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setPrimaryKey(0L);
      assertEquals(0L, passwordPolicySoap0.getResetFailureCount());
  }

  @Test
  public void test19()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      String string0 = passwordPolicySoap0.getDescription();
      assertNull(string0);
  }

  @Test
  public void test20()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      boolean boolean0 = passwordPolicySoap0.getHistory();
      assertEquals(false, boolean0);
  }

  @Test
  public void test21()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      String string0 = passwordPolicySoap0.getUserName();
      assertNull(string0);
  }

  @Test
  public void test22()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setCheckSyntax(false);
      assertEquals(false, passwordPolicySoap0.isCheckSyntax());
      assertEquals(false, passwordPolicySoap0.getCheckSyntax());
  }

  @Test
  public void test23()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setLockoutDuration(305L);
      assertEquals(305L, passwordPolicySoap0.getLockoutDuration());
  }

  @Test
  public void test24()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setGraceLimit(136);
      assertEquals(136, passwordPolicySoap0.getGraceLimit());
  }

  @Test
  public void test25()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      long long0 = passwordPolicySoap0.getPasswordPolicyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test26()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setMaxFailure((-1));
      assertEquals(-1, passwordPolicySoap0.getMaxFailure());
  }

  @Test
  public void test27()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      boolean boolean0 = passwordPolicySoap0.getExpireable();
      assertEquals(false, boolean0);
  }

  @Test
  public void test28()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      int int0 = passwordPolicySoap0.getGraceLimit();
      assertEquals(0, int0);
  }

  @Test
  public void test29()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      long long0 = passwordPolicySoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test30()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      boolean boolean0 = passwordPolicySoap0.isChangeRequired();
      assertEquals(false, boolean0);
  }

  @Test
  public void test31()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setCreateDate((Date) null);
      assertEquals(false, passwordPolicySoap0.isCheckSyntax());
  }

  @Test
  public void test32()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setCompanyId((long) (-1));
      assertEquals((-1L), passwordPolicySoap0.getCompanyId());
  }

  @Test
  public void test33()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      long long0 = passwordPolicySoap0.getResetFailureCount();
      assertEquals(0L, long0);
  }

  @Test
  public void test34()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setDefaultPolicy(false);
      assertEquals(false, passwordPolicySoap0.isDefaultPolicy());
      assertEquals(false, passwordPolicySoap0.getDefaultPolicy());
  }

  @Test
  public void test35()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      Date date0 = passwordPolicySoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test36()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setMinAlphanumeric((-573));
      assertEquals(-573, passwordPolicySoap0.getMinAlphanumeric());
  }

  @Test
  public void test37()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setWarningTime((long) 869);
      assertEquals(869L, passwordPolicySoap0.getWarningTime());
  }

  @Test
  public void test38()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      int int0 = passwordPolicySoap0.getMinLength();
      assertEquals(0, int0);
  }

  @Test
  public void test39()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      boolean boolean0 = passwordPolicySoap0.isAllowDictionaryWords();
      assertEquals(false, boolean0);
  }

  @Test
  public void test40()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      int int0 = passwordPolicySoap0.getMinAlphanumeric();
      assertEquals(0, int0);
  }

  @Test
  public void test41()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      long long0 = passwordPolicySoap0.getLockoutDuration();
      assertEquals(0L, long0);
  }

  @Test
  public void test42()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      int int0 = passwordPolicySoap0.getMinNumbers();
      assertEquals(0, int0);
  }

  @Test
  public void test43()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setResetFailureCount(0L);
      assertEquals(false, passwordPolicySoap0.getHistory());
  }

  @Test
  public void test44()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      long long0 = passwordPolicySoap0.getMaxAge();
      assertEquals(0L, long0);
  }

  @Test
  public void test45()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setUserName((String) null);
      assertEquals(0, passwordPolicySoap0.getHistoryCount());
  }

  @Test
  public void test46()  throws Throwable  {
      LinkedList<PasswordPolicy> linkedList0 = new LinkedList<PasswordPolicy>();
      linkedList0.add((PasswordPolicy) null);
      // Undeclared exception!
      try {
        PasswordPolicySoap.toSoapModels((List<PasswordPolicy>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test47()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setChangeable(false);
      assertEquals(false, passwordPolicySoap0.isChangeable());
      assertEquals(false, passwordPolicySoap0.getChangeable());
  }

  @Test
  public void test48()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setAllowDictionaryWords(true);
      assertEquals(true, passwordPolicySoap0.getAllowDictionaryWords());
      assertEquals(true, passwordPolicySoap0.isAllowDictionaryWords());
  }

  @Test
  public void test49()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      int int0 = passwordPolicySoap0.getMinUpperCase();
      assertEquals(0, int0);
  }

  @Test
  public void test50()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setResetTicketMaxAge((long) (-573));
      assertEquals((-573L), passwordPolicySoap0.getResetTicketMaxAge());
  }

  @Test
  public void test51()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      String string0 = passwordPolicySoap0.getName();
      assertNull(string0);
  }

  @Test
  public void test52()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      boolean boolean0 = passwordPolicySoap0.getDefaultPolicy();
      assertEquals(false, boolean0);
  }

  @Test
  public void test53()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      int int0 = passwordPolicySoap0.getMinLowerCase();
      assertEquals(0, int0);
  }

  @Test
  public void test54()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      boolean boolean0 = passwordPolicySoap0.getLockout();
      assertEquals(false, boolean0);
  }

  @Test
  public void test55()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setHistoryCount(869);
      assertEquals(869, passwordPolicySoap0.getHistoryCount());
  }

  @Test
  public void test56()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      boolean boolean0 = passwordPolicySoap0.isCheckSyntax();
      assertEquals(false, boolean0);
  }

  @Test
  public void test57()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      int int0 = passwordPolicySoap0.getMinSymbols();
      assertEquals(0, int0);
  }

  @Test
  public void test58()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setRequireUnlock(false);
      assertEquals(false, passwordPolicySoap0.getRequireUnlock());
      assertEquals(false, passwordPolicySoap0.isRequireUnlock());
  }

  @Test
  public void test59()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      boolean boolean0 = passwordPolicySoap0.isExpireable();
      assertEquals(false, boolean0);
  }

  @Test
  public void test60()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setChangeRequired(false);
      assertEquals(false, passwordPolicySoap0.getChangeRequired());
      assertEquals(false, passwordPolicySoap0.isChangeRequired());
  }

  @Test
  public void test61()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      long long0 = passwordPolicySoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test62()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setMaxAge(0L);
      assertEquals(false, passwordPolicySoap0.isLockout());
  }

  @Test
  public void test63()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setName(">SeUAmj#`,r0 Q");
      assertEquals(0L, passwordPolicySoap0.getPrimaryKey());
  }

  @Test
  public void test64()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setModifiedDate((Date) null);
      assertEquals(false, passwordPolicySoap0.isDefaultPolicy());
  }

  @Test
  public void test65()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      long long0 = passwordPolicySoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test66()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      boolean boolean0 = passwordPolicySoap0.getCheckSyntax();
      assertEquals(false, boolean0);
  }

  @Test
  public void test67()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      boolean boolean0 = passwordPolicySoap0.isHistory();
      assertEquals(false, boolean0);
  }

  @Test
  public void test68()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setLockout(false);
      assertEquals(false, passwordPolicySoap0.isLockout());
      assertEquals(false, passwordPolicySoap0.getLockout());
  }

  @Test
  public void test69()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      Date date0 = passwordPolicySoap0.getModifiedDate();
      assertNull(date0);
  }

  @Test
  public void test70()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      long long0 = passwordPolicySoap0.getWarningTime();
      assertEquals(0L, long0);
  }

  @Test
  public void test71()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      passwordPolicySoap0.setDescription((String) null);
      assertEquals(false, passwordPolicySoap0.getAllowDictionaryWords());
  }

  @Test
  public void test72()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      boolean boolean0 = passwordPolicySoap0.getAllowDictionaryWords();
      assertEquals(false, boolean0);
  }

  @Test
  public void test73()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      boolean boolean0 = passwordPolicySoap0.getRequireUnlock();
      assertEquals(false, boolean0);
  }

  @Test
  public void test74()  throws Throwable  {
      PasswordPolicySoap passwordPolicySoap0 = new PasswordPolicySoap();
      int int0 = passwordPolicySoap0.getMaxFailure();
      assertEquals(0, int0);
  }

  @Test
  public void test75()  throws Throwable  {
      PasswordPolicy[][] passwordPolicyArray0 = new PasswordPolicy[1][2];
      // Undeclared exception!
      try {
        PasswordPolicySoap.toSoapModels(passwordPolicyArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test76()  throws Throwable  {
      LinkedList<PasswordPolicy> linkedList0 = new LinkedList<PasswordPolicy>();
      PasswordPolicySoap[] passwordPolicySoapArray0 = PasswordPolicySoap.toSoapModels((List<PasswordPolicy>) linkedList0);
      assertNotNull(passwordPolicySoapArray0);
  }
}
