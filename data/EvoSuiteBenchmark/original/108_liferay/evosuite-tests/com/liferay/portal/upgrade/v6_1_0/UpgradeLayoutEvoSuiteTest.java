/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.upgrade.v6_1_0;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.UnicodeProperties;
import com.liferay.portal.upgrade.v6_1_0.UpgradeLayout;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UpgradeLayoutEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UpgradeLayout upgradeLayout0 = new UpgradeLayout();
      try {
        upgradeLayout0.updateLayout((-18L), "", "", "[OwIcn$1[U-af");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      UpgradeLayout upgradeLayout0 = new UpgradeLayout();
      try {
        upgradeLayout0.updateLayout(12L, "X%k T;a!OPzi[(v&&1u", "X%k T;a!OPzi[(v&&1u", "X%k T;a!OPzi[(v&&1u");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      UpgradeLayout upgradeLayout0 = new UpgradeLayout();
      try {
        upgradeLayout0.updateLayout((-108L), (String) null, "U3s", (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      UpgradeLayout upgradeLayout0 = new UpgradeLayout();
      UnicodeProperties unicodeProperties0 = new UnicodeProperties(false);
      upgradeLayout0.updateJavaScript(unicodeProperties0, "", "", "");
      assertEquals(0, unicodeProperties0.size());
      assertEquals(true, unicodeProperties0.isEmpty());
  }

  @Test
  public void test4()  throws Throwable  {
      UpgradeLayout upgradeLayout0 = new UpgradeLayout();
      UnicodeProperties unicodeProperties0 = new UnicodeProperties(false);
      upgradeLayout0.updateJavaScript(unicodeProperties0, "_]Rx7)wC5K$Y>>KT", "_]Rx7)wC5K$Y>>KT", "_]Rx7)wC5K$Y>>KT");
      assertEquals(false, unicodeProperties0.isEmpty());
      assertEquals("javascript=// Custom JavaScript 1\n\n_]Rx7)wC5K$Y>>KT\n\n\n // Custom JavaScript 2\n\n_]Rx7)wC5K$Y>>KT\n\n\n // Custom JavaScript 3\n\n_]Rx7)wC5K$Y>>KT\n", unicodeProperties0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      UpgradeLayout upgradeLayout0 = new UpgradeLayout();
      upgradeLayout0.updateLayout(25L, "", "", "");
      assertEquals(0, upgradeLayout0.getThreshold());
  }
}
