/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.SortedProperties;
import java.io.CharArrayWriter;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.Writer;
import java.util.Properties;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SortedPropertiesEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SortedProperties sortedProperties0 = new SortedProperties();
      Object object0 = sortedProperties0.remove((Object) "IBM437");
      assertNull(object0);
  }

  @Test
  public void test1()  throws Throwable  {
      SortedProperties sortedProperties0 = new SortedProperties();
      sortedProperties0.clear();
      assertEquals("{}", sortedProperties0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      SortedProperties sortedProperties0 = new SortedProperties();
      sortedProperties0.put("", "");
      assertEquals("{=}", sortedProperties0.toString());
      
      SortedProperties sortedProperties1 = new SortedProperties((Properties) sortedProperties0);
      assertTrue(sortedProperties1.equals(sortedProperties0));
  }

  @Test
  public void test3()  throws Throwable  {
      SortedProperties sortedProperties0 = new SortedProperties();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      sortedProperties0.put("bx\\cDF", "bx\\cDF");
      assertEquals(false, sortedProperties0.isEmpty());
      
      PrintStream printStream0 = new PrintStream((OutputStream) pipedOutputStream0, true);
      sortedProperties0.list(printStream0);
      assertEquals(true, printStream0.checkError());
  }

  @Test
  public void test4()  throws Throwable  {
      SortedProperties sortedProperties0 = new SortedProperties();
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      sortedProperties0.put("_LcYWnY`anU>,Mh`?U", "_LcYWnY`anU>,Mh`?U");
      PrintWriter printWriter0 = new PrintWriter((Writer) charArrayWriter0, true);
      sortedProperties0.list(printWriter0);
      assertEquals("_LcYWnY`anU>,Mh`?U=_LcYWnY`anU>,Mh`?U\n", charArrayWriter0.toString());
      assertEquals(38, charArrayWriter0.size());
  }

  @Test
  public void test5()  throws Throwable  {
      SortedProperties sortedProperties0 = new SortedProperties();
      sortedProperties0.put("lzF`OygPz_=2", "lzF`OygPz_=2");
      sortedProperties0.put("lzF`OygPz_=2", "{lzF`OygPz_=2=lzF`OygPz_=2}");
      assertEquals(1, sortedProperties0.size());
      assertEquals("{lzF`OygPz_=2={lzF`OygPz_=2=lzF`OygPz_=2}}", sortedProperties0.toString());
  }
}
