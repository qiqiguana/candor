/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.search;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.search.Sort;
import com.liferay.portal.kernel.search.SortFactoryImpl;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SortFactoryImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SortFactoryImpl sortFactoryImpl0 = new SortFactoryImpl();
      Sort sort0 = sortFactoryImpl0.create("(9'N@k.1d", false);
      assertEquals("{fieldName=(9'N@k.1d, type=3, reverse=false}", sort0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      SortFactoryImpl sortFactoryImpl0 = new SortFactoryImpl();
      Sort[] sortArray0 = sortFactoryImpl0.getDefaultSorts();
      assertNotNull(sortArray0);
  }

  @Test
  public void test2()  throws Throwable  {
      SortFactoryImpl sortFactoryImpl0 = new SortFactoryImpl();
      Sort sort0 = sortFactoryImpl0.create("(9'N@k.1d", 15, false);
      assertEquals("{fieldName=(9'N@k.1d, type=15, reverse=false}", sort0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      SortFactoryImpl sortFactoryImpl0 = new SortFactoryImpl();
      Sort[] sortArray0 = sortFactoryImpl0.toArray((List<Sort>) null);
      assertNotNull(sortArray0);
  }

  @Test
  public void test4()  throws Throwable  {
      SortFactoryImpl sortFactoryImpl0 = new SortFactoryImpl();
      LinkedList<Sort> linkedList0 = new LinkedList<Sort>();
      Sort[] sortArray0 = sortFactoryImpl0.toArray((List<Sort>) linkedList0);
      assertNotNull(sortArray0);
  }

  @Test
  public void test5()  throws Throwable  {
      SortFactoryImpl sortFactoryImpl0 = new SortFactoryImpl();
      LinkedList<Sort> linkedList0 = new LinkedList<Sort>();
      linkedList0.add((Sort) null);
      Sort[] sortArray0 = sortFactoryImpl0.toArray((List<Sort>) linkedList0);
      assertNotNull(sortArray0);
  }
}
