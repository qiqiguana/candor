/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.search.lucene;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.search.lucene.LuceneQueryImpl;
import org.apache.lucene.search.BooleanQuery;
import org.apache.lucene.search.NGramPhraseQuery;
import org.apache.lucene.search.Query;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LuceneQueryImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BooleanQuery booleanQuery0 = new BooleanQuery(true);
      LuceneQueryImpl luceneQueryImpl0 = new LuceneQueryImpl((Query) booleanQuery0);
      BooleanQuery booleanQuery1 = (BooleanQuery)luceneQueryImpl0.getWrappedQuery();
      assertEquals(true, booleanQuery1.isCoordDisabled());
  }

  @Test
  public void test1()  throws Throwable  {
      BooleanQuery booleanQuery0 = new BooleanQuery(true);
      LuceneQueryImpl luceneQueryImpl0 = new LuceneQueryImpl((Query) booleanQuery0);
      BooleanQuery booleanQuery1 = (BooleanQuery)luceneQueryImpl0.getQuery();
      assertEquals(0, booleanQuery1.getMinimumNumberShouldMatch());
  }

  @Test
  public void test2()  throws Throwable  {
      NGramPhraseQuery nGramPhraseQuery0 = new NGramPhraseQuery(0);
      LuceneQueryImpl luceneQueryImpl0 = new LuceneQueryImpl((Query) nGramPhraseQuery0);
      String string0 = luceneQueryImpl0.toString();
      assertEquals("\"?\"", string0);
  }
}
