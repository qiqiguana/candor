/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.servlet;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.servlet.Header;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletResponse;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class HeaderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Header header0 = new Header((long) 98623202);
      String string0 = header0.toString();
      assertEquals("98623202", string0);
      assertNotNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      Cookie cookie0 = new Cookie("INTEGEx", "INTEGEx");
      Header header0 = new Header(cookie0);
      assertNotNull(header0);
      
      int int0 = header0.hashCode();
      assertEquals(506514133, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      Header header0 = new Header((-323));
      // Undeclared exception!
      try {
        header0.setToResponse("-323", (HttpServletResponse) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Header header0 = null;
      try {
        header0 = new Header((Cookie) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Cookie is null
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Header header0 = new Header("on");
      String string0 = header0.toString();
      assertEquals("on", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      Header header0 = null;
      try {
        header0 = new Header((String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * String is null
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Header header0 = new Header(", euEDre");
      // Undeclared exception!
      try {
        header0.addToResponse(", euEDre", (HttpServletResponse) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Cookie cookie0 = new Cookie("wB.75I_%%dmq%0SY", "wB.75I_%%dmq%0SY");
      Header header0 = new Header(cookie0);
      // Undeclared exception!
      try {
        header0.addToResponse("wB.75I_%%dmq%0SY", (HttpServletResponse) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      Header header0 = new Header((long) 3);
      // Undeclared exception!
      try {
        header0.addToResponse((String) null, (HttpServletResponse) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      Header header0 = new Header(772);
      // Undeclared exception!
      try {
        header0.addToResponse("X1I!BSe?S*Qm=r(I", (HttpServletResponse) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      Cookie cookie0 = new Cookie("INTEGEx", "INTEGEx");
      Header header0 = new Header(cookie0);
      assertNotNull(header0);
      
      boolean boolean0 = header0.equals((Object) header0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      Cookie cookie0 = new Cookie("on", "on");
      Header header0 = new Header(cookie0);
      assertNotNull(header0);
      
      boolean boolean0 = header0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      Header header0 = new Header("i5KMp");
      assertNotNull(header0);
      
      boolean boolean0 = header0.equals((Object) "I5KMP");
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      Header header0 = new Header("i5KMp");
      assertNotNull(header0);
      
      Header header1 = new Header((long) 98623202);
      boolean boolean0 = header0.equals((Object) header1);
      assertEquals("98623202", header1.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      Header header0 = new Header("~/+cz|ViV_XO");
      assertNotNull(header0);
      
      boolean boolean0 = header0.equals((Object) header0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      Header header0 = new Header((-2L));
      boolean boolean0 = header0.equals((Object) header0);
      assertEquals(true, boolean0);
      assertEquals("-2", header0.toString());
  }

  @Test
  public void test16()  throws Throwable  {
      Header header0 = new Header((-2L));
      Header header1 = new Header((long) (-986));
      boolean boolean0 = header0.equals((Object) header1);
      assertFalse(header1.equals(header0));
      assertEquals(false, boolean0);
      assertEquals("-986", header1.toString());
  }

  @Test
  public void test17()  throws Throwable  {
      Header header0 = new Header(7);
      boolean boolean0 = header0.equals((Object) header0);
      assertEquals("7", header0.toString());
      assertEquals(true, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      Header header0 = new Header(7);
      Header header1 = new Header(144);
      boolean boolean0 = header0.equals((Object) header1);
      assertEquals("144", header1.toString());
      assertEquals(false, boolean0);
      assertFalse(header1.equals(header0));
  }

  @Test
  public void test19()  throws Throwable  {
      Header header0 = new Header("i5KMp");
      assertNotNull(header0);
      
      int int0 = header0.hashCode();
      assertEquals(98623202, int0);
  }

  @Test
  public void test20()  throws Throwable  {
      Header header0 = new Header((-2L));
      int int0 = header0.hashCode();
      assertEquals(1, int0);
  }

  @Test
  public void test21()  throws Throwable  {
      Header header0 = new Header(7);
      int int0 = header0.hashCode();
      assertEquals(7, int0);
  }

  @Test
  public void test22()  throws Throwable  {
      Header header0 = new Header("..");
      // Undeclared exception!
      try {
        header0.setToResponse("..", (HttpServletResponse) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test23()  throws Throwable  {
      Cookie cookie0 = new Cookie("INTEGEx", "INTEGEx");
      Header header0 = new Header(cookie0);
      // Undeclared exception!
      try {
        header0.setToResponse("INTEGEx", (HttpServletResponse) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test24()  throws Throwable  {
      Header header0 = new Header((-1655L));
      // Undeclared exception!
      try {
        header0.setToResponse("", (HttpServletResponse) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test25()  throws Throwable  {
      Cookie cookie0 = new Cookie("rU", "rU");
      Header header0 = new Header(cookie0);
      assertNotNull(header0);
      
      String string0 = header0.toString();
      assertEquals("{comment=null, domain=null, maxAge=-1, name=rU, path=null, secure=false, value=rU, version=0}", string0);
      assertNotNull(string0);
  }

  @Test
  public void test26()  throws Throwable  {
      Header header0 = new Header((-323));
      String string0 = header0.toString();
      assertNotNull(string0);
      assertEquals("-323", string0);
  }

  @Test
  public void test27()  throws Throwable  {
      Cookie cookie0 = new Cookie("on", "on");
      Header header0 = new Header(cookie0);
      assertNotNull(header0);
      
      Cookie cookie1 = new Cookie("on", "on");
      Header header1 = new Header(cookie1);
      boolean boolean0 = header0.equals((Object) header1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test28()  throws Throwable  {
      Cookie cookie0 = new Cookie("on", "on");
      Header header0 = new Header(cookie0);
      assertNotNull(header0);
      
      cookie0.setVersion(22);
      Cookie cookie1 = new Cookie("on", "on");
      Header header1 = new Header(cookie1);
      boolean boolean0 = header0.equals((Object) header1);
      assertEquals(false, boolean0);
      assertFalse(header1.equals(header0));
  }
}
