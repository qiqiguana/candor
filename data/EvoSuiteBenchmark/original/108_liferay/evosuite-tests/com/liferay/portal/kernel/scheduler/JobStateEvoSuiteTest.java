/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.scheduler;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.scheduler.JobState;
import com.liferay.portal.kernel.scheduler.TriggerState;
import com.liferay.portal.kernel.util.ObjectValuePair;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JobStateEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TriggerState triggerState0 = TriggerState.PAUSED;
      JobState jobState0 = new JobState(triggerState0);
      jobState0.getTriggerState();
      assertEquals(10, jobState0.getExceptionsMaxSize());
  }

  @Test
  public void test1()  throws Throwable  {
      TriggerState triggerState0 = TriggerState.PAUSED;
      JobState jobState0 = new JobState(triggerState0);
      jobState0.setTriggerState(triggerState0);
      assertEquals(10, jobState0.getExceptionsMaxSize());
  }

  @Test
  public void test2()  throws Throwable  {
      TriggerState triggerState0 = TriggerState.EXPIRED;
      JobState jobState0 = new JobState(triggerState0);
      int int0 = jobState0.getExceptionsMaxSize();
      assertEquals(10, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      TriggerState triggerState0 = TriggerState.NORMAL;
      HashMap<String, Date> hashMap0 = new HashMap<String, Date>();
      JobState jobState0 = new JobState(triggerState0, (-1643), (Map<String, Date>) hashMap0);
      jobState0.getExceptions();
      assertEquals(10, jobState0.getExceptionsMaxSize());
  }

  @Test
  public void test4()  throws Throwable  {
      TriggerState triggerState0 = TriggerState.PAUSED;
      HashMap<String, Date> hashMap0 = new HashMap<String, Date>();
      JobState jobState0 = new JobState(triggerState0, 1, (Map<String, Date>) hashMap0);
      Date date0 = new Date((long) 1);
      jobState0.addException((Exception) null, date0);
      jobState0.addException((Exception) null, date0);
      assertEquals(1, jobState0.getExceptionsMaxSize());
  }

  @Test
  public void test5()  throws Throwable  {
      TriggerState triggerState0 = TriggerState.PAUSED;
      HashMap<String, Date> hashMap0 = new HashMap<String, Date>();
      JobState jobState0 = new JobState(triggerState0, 1, (Map<String, Date>) hashMap0);
      jobState0.clearExceptions();
      assertEquals(1, jobState0.getExceptionsMaxSize());
  }

  @Test
  public void test6()  throws Throwable  {
      TriggerState triggerState0 = TriggerState.PAUSED;
      HashMap<String, Date> hashMap0 = new HashMap<String, Date>();
      JobState jobState0 = new JobState(triggerState0, 1, (Map<String, Date>) hashMap0);
      Date date0 = new Date((long) 1);
      jobState0.addException((Exception) null, date0);
      jobState0.clearExceptions();
      jobState0.clearExceptions();
      assertEquals(1, jobState0.getExceptionsMaxSize());
  }

  @Test
  public void test7()  throws Throwable  {
      TriggerState triggerState0 = TriggerState.PAUSED;
      JobState jobState0 = new JobState(triggerState0);
      Date date0 = new Date((-1445L));
      jobState0.addException((Exception) null, date0);
      JobState jobState1 = (JobState)jobState0.clone();
      assertNotNull(jobState1);
      assertNotSame(jobState0, jobState1);
      assertEquals(10, jobState1.getExceptionsMaxSize());
      assertEquals(10, jobState0.getExceptionsMaxSize());
  }

  @Test
  public void test8()  throws Throwable  {
      TriggerState triggerState0 = TriggerState.PAUSED;
      JobState jobState0 = new JobState(triggerState0);
      Date date0 = new Date((-1445L));
      jobState0.setTriggerDate("0?}=W", date0);
      JobState jobState1 = (JobState)jobState0.clone();
      assertNotSame(jobState1, jobState0);
      assertNotNull(jobState1);
      assertEquals(10, jobState1.getExceptionsMaxSize());
  }

  @Test
  public void test9()  throws Throwable  {
      TriggerState triggerState0 = TriggerState.PAUSED;
      JobState jobState0 = new JobState(triggerState0);
      Date date0 = new Date((-1445L));
      jobState0.addException((Exception) null, date0);
      ObjectValuePair<Exception, Date>[] objectValuePairArray0 = jobState0.getExceptions();
      assertNotNull(objectValuePairArray0);
      assertEquals(10, jobState0.getExceptionsMaxSize());
  }

  @Test
  public void test10()  throws Throwable  {
      TriggerState triggerState0 = TriggerState.NORMAL;
      HashMap<String, Date> hashMap0 = new HashMap<String, Date>();
      JobState jobState0 = new JobState(triggerState0, (-1643), (Map<String, Date>) hashMap0);
      jobState0.getTriggerDate("3G");
      assertEquals(10, jobState0.getExceptionsMaxSize());
  }

  @Test
  public void test11()  throws Throwable  {
      TriggerState triggerState0 = TriggerState.EXPIRED;
      JobState jobState0 = new JobState(triggerState0);
      jobState0.getTriggerDate("k!#26j`#");
      assertEquals(10, jobState0.getExceptionsMaxSize());
  }

  @Test
  public void test12()  throws Throwable  {
      TriggerState triggerState0 = TriggerState.NORMAL;
      HashMap<String, Date> hashMap0 = new HashMap<String, Date>();
      JobState jobState0 = new JobState(triggerState0, (-1643), (Map<String, Date>) hashMap0);
      Map<String, Date> map0 = jobState0.getTriggerDates();
      assertNotNull(map0);
      assertEquals(10, jobState0.getExceptionsMaxSize());
  }

  @Test
  public void test13()  throws Throwable  {
      TriggerState triggerState0 = TriggerState.PAUSED;
      JobState jobState0 = new JobState(triggerState0);
      Map<String, Date> map0 = jobState0.getTriggerDates();
      assertNotNull(map0);
      assertEquals(10, jobState0.getExceptionsMaxSize());
  }

  @Test
  public void test14()  throws Throwable  {
      TriggerState triggerState0 = TriggerState.PAUSED;
      JobState jobState0 = new JobState(triggerState0);
      Date date0 = new Date((-1445L));
      jobState0.setTriggerDate("0?}=W", date0);
      jobState0.setTriggerDate("0?}=W", date0);
      assertEquals(10, jobState0.getExceptionsMaxSize());
  }
}
