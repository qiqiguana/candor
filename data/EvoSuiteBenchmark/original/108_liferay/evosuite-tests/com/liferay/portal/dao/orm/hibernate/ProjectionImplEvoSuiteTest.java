/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.dao.orm.hibernate;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.dao.orm.hibernate.ProjectionImpl;
import org.hibernate.criterion.AggregateProjection;
import org.hibernate.criterion.Projection;
import org.hibernate.criterion.Property;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ProjectionImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Property property0 = Property.forName((String) null);
      AggregateProjection aggregateProjection0 = property0.max();
      ProjectionImpl projectionImpl0 = new ProjectionImpl((Projection) aggregateProjection0);
      String string0 = projectionImpl0.toString();
      assertEquals("max(null)", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      Property property0 = Property.forName((String) null);
      AggregateProjection aggregateProjection0 = property0.max();
      ProjectionImpl projectionImpl0 = new ProjectionImpl((Projection) aggregateProjection0);
      AggregateProjection aggregateProjection1 = (AggregateProjection)projectionImpl0.getWrappedProjection();
      assertSame(aggregateProjection1, aggregateProjection0);
  }
}
