/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.service.permission;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.bean.BeanLocatorException;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.Group;
import com.liferay.portal.model.Layout;
import com.liferay.portal.model.LayoutWrapper;
import com.liferay.portal.model.impl.VirtualLayout;
import com.liferay.portal.security.permission.PermissionChecker;
import com.liferay.portal.service.permission.LayoutPermissionImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LayoutPermissionImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LayoutPermissionImpl layoutPermissionImpl0 = new LayoutPermissionImpl();
      VirtualLayout virtualLayout0 = new VirtualLayout((Layout) null, (Group) null);
      // Undeclared exception!
      try {
        layoutPermissionImpl0.check((PermissionChecker) null, (Layout) virtualLayout0, "VIEW");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      LayoutPermissionImpl layoutPermissionImpl0 = new LayoutPermissionImpl();
      LayoutWrapper layoutWrapper0 = new LayoutWrapper((Layout) null);
      VirtualLayout virtualLayout0 = new VirtualLayout((Layout) layoutWrapper0, (Group) null);
      boolean boolean0 = layoutPermissionImpl0.contains((PermissionChecker) null, (Layout) virtualLayout0, false, "CUSTOMZZE");
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      LayoutPermissionImpl layoutPermissionImpl0 = new LayoutPermissionImpl();
      // Undeclared exception!
      try {
        layoutPermissionImpl0.check((PermissionChecker) null, (-59L), "CUSTOMZZE");
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      LayoutPermissionImpl layoutPermissionImpl0 = new LayoutPermissionImpl();
      // Undeclared exception!
      try {
        layoutPermissionImpl0.check((PermissionChecker) null, (-12L), false, (-12L), "dx<Z");
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      LayoutPermissionImpl layoutPermissionImpl0 = new LayoutPermissionImpl();
      VirtualLayout virtualLayout0 = new VirtualLayout((Layout) null, (Group) null);
      // Undeclared exception!
      try {
        layoutPermissionImpl0.containsWithoutViewableGroup((PermissionChecker) null, (Layout) virtualLayout0, "M,D", false, "M,D");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      LayoutPermissionImpl layoutPermissionImpl0 = new LayoutPermissionImpl();
      // Undeclared exception!
      try {
        layoutPermissionImpl0.check((PermissionChecker) null, (Layout) null, "CUSTOMIZE");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      LayoutPermissionImpl layoutPermissionImpl0 = new LayoutPermissionImpl();
      // Undeclared exception!
      try {
        layoutPermissionImpl0.containsWithoutViewableGroup((PermissionChecker) null, (Layout) null, "DELETE", "DELETE");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      LayoutPermissionImpl layoutPermissionImpl0 = new LayoutPermissionImpl();
      // Undeclared exception!
      try {
        layoutPermissionImpl0.contains((PermissionChecker) null, (Layout) null, "VIEW", true, "VIEW");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      LayoutPermissionImpl layoutPermissionImpl0 = new LayoutPermissionImpl();
      boolean boolean0 = layoutPermissionImpl0.isAttemptToModifyLockedLayout((Layout) null, "sCte.fr0.add.`seo");
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      LayoutPermissionImpl layoutPermissionImpl0 = new LayoutPermissionImpl();
      VirtualLayout virtualLayout0 = new VirtualLayout((Layout) null, (Group) null);
      boolean boolean0 = layoutPermissionImpl0.isAttemptToModifyLockedLayout((Layout) virtualLayout0, "M,D");
      assertEquals(false, boolean0);
  }
}
