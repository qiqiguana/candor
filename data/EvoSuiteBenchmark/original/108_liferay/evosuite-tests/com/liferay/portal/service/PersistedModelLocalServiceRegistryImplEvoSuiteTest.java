/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.service;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.service.PasswordPolicyLocalService;
import com.liferay.portal.service.PasswordPolicyLocalServiceWrapper;
import com.liferay.portal.service.PersistedModelLocalService;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryImpl;
import com.liferay.portal.service.ResourceBlockPermissionLocalService;
import com.liferay.portal.service.ResourceBlockPermissionLocalServiceWrapper;
import com.liferay.portal.service.UserTrackerLocalService;
import com.liferay.portal.service.UserTrackerLocalServiceWrapper;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PersistedModelLocalServiceRegistryImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PersistedModelLocalServiceRegistryImpl persistedModelLocalServiceRegistryImpl0 = new PersistedModelLocalServiceRegistryImpl();
      persistedModelLocalServiceRegistryImpl0.unregister("i");
  }

  @Test
  public void test1()  throws Throwable  {
      PersistedModelLocalServiceRegistryImpl persistedModelLocalServiceRegistryImpl0 = new PersistedModelLocalServiceRegistryImpl();
      boolean boolean0 = persistedModelLocalServiceRegistryImpl0.isPermissionedModelLocalService("i");
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      PersistedModelLocalServiceRegistryImpl persistedModelLocalServiceRegistryImpl0 = new PersistedModelLocalServiceRegistryImpl();
      List<PersistedModelLocalService> list0 = persistedModelLocalServiceRegistryImpl0.getPersistedModelLocalServices();
      assertEquals(true, list0.isEmpty());
  }

  @Test
  public void test3()  throws Throwable  {
      PersistedModelLocalServiceRegistryImpl persistedModelLocalServiceRegistryImpl0 = new PersistedModelLocalServiceRegistryImpl();
      UserTrackerLocalServiceWrapper userTrackerLocalServiceWrapper0 = new UserTrackerLocalServiceWrapper((UserTrackerLocalService) null);
      persistedModelLocalServiceRegistryImpl0.register("i", (PersistedModelLocalService) userTrackerLocalServiceWrapper0);
      boolean boolean0 = persistedModelLocalServiceRegistryImpl0.isPermissionedModelLocalService("i");
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      PersistedModelLocalServiceRegistryImpl persistedModelLocalServiceRegistryImpl0 = new PersistedModelLocalServiceRegistryImpl();
      ResourceBlockPermissionLocalServiceWrapper resourceBlockPermissionLocalServiceWrapper0 = new ResourceBlockPermissionLocalServiceWrapper((ResourceBlockPermissionLocalService) null);
      persistedModelLocalServiceRegistryImpl0.register("", (PersistedModelLocalService) resourceBlockPermissionLocalServiceWrapper0);
      boolean boolean0 = persistedModelLocalServiceRegistryImpl0.isPermissionedModelLocalService("");
      assertEquals(true, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      PersistedModelLocalServiceRegistryImpl persistedModelLocalServiceRegistryImpl0 = new PersistedModelLocalServiceRegistryImpl();
      PasswordPolicyLocalServiceWrapper passwordPolicyLocalServiceWrapper0 = new PasswordPolicyLocalServiceWrapper((PasswordPolicyLocalService) null);
      persistedModelLocalServiceRegistryImpl0.register("A`Z\"RAW|&c]M(", (PersistedModelLocalService) passwordPolicyLocalServiceWrapper0);
      persistedModelLocalServiceRegistryImpl0.register("A`Z\"RAW|&c]M(", (PersistedModelLocalService) passwordPolicyLocalServiceWrapper0);
  }
}
