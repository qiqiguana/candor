/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.xml;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.xml.Branch;
import com.liferay.portal.kernel.xml.Node;
import com.liferay.portal.kernel.xml.ProcessingInstruction;
import com.liferay.portal.xml.BranchImpl;
import com.liferay.portal.xml.CommentImpl;
import com.liferay.portal.xml.DocumentImpl;
import com.liferay.portal.xml.ElementImpl;
import com.liferay.portal.xml.NodeImpl;
import com.liferay.portal.xml.ProcessingInstructionImpl;
import com.liferay.portal.xml.QNameImpl;
import java.util.Iterator;
import java.util.List;
import org.dom4j.Comment;
import org.dom4j.Document;
import org.dom4j.DocumentFactory;
import org.dom4j.Element;
import org.dom4j.Namespace;
import org.dom4j.QName;
import org.dom4j.bean.BeanDocumentFactory;
import org.dom4j.bean.BeanElement;
import org.dom4j.dom.DOMDocument;
import org.dom4j.dom.DOMElement;
import org.dom4j.tree.BaseElement;
import org.dom4j.tree.DefaultComment;
import org.dom4j.tree.DefaultDocument;
import org.dom4j.tree.DefaultElement;
import org.dom4j.util.IndexedElement;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BranchImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl((Document) null);
      DefaultElement defaultElement0 = new DefaultElement("UnR#y;)/QYqy", (Namespace) null);
      ElementImpl elementImpl0 = new ElementImpl((Element) defaultElement0);
      // Undeclared exception!
      try {
        documentImpl0.appendContent((Branch) elementImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      BranchImpl branchImpl0 = new BranchImpl((org.dom4j.Branch) dOMDocument0);
      Iterator<Node> iterator0 = branchImpl0.nodeIterator();
      assertEquals(false, iterator0.hasNext());
  }

  @Test
  public void test2()  throws Throwable  {
      ElementImpl elementImpl0 = new ElementImpl((Element) null);
      // Undeclared exception!
      try {
        elementImpl0.remove((ProcessingInstruction) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      DOMElement dOMElement0 = new DOMElement("viyv)$|xB,");
      ElementImpl elementImpl0 = new ElementImpl((Element) dOMElement0);
      elementImpl0.add((Node) elementImpl0);
      assertEquals(1, dOMElement0.nodeCount());
      assertEquals(false, elementImpl0.isTextOnly());
  }

  @Test
  public void test4()  throws Throwable  {
      Namespace namespace0 = new Namespace("Week ", "Week ");
      BaseElement baseElement0 = new BaseElement("Week ", namespace0);
      ElementImpl elementImpl0 = new ElementImpl((Element) baseElement0);
      ElementImpl elementImpl1 = (ElementImpl)elementImpl0.elementByID("Week ");
      assertFalse(elementImpl0.equals(elementImpl1));
  }

  @Test
  public void test5()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      DOMElement dOMElement0 = (DOMElement)dOMDocument0.addElement("", "", ">3sy=.=Pwz('jP )");
      ElementImpl elementImpl0 = new ElementImpl((Element) dOMElement0);
      int int0 = elementImpl0.nodeCount();
      assertEquals(0, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      DOMElement dOMElement0 = new DOMElement("viyv)$|xB,");
      BranchImpl branchImpl0 = new BranchImpl((org.dom4j.Branch) dOMElement0);
      // Undeclared exception!
      try {
        branchImpl0.setProcessingInstructions((List<ProcessingInstruction>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      BeanElement beanElement0 = new BeanElement("wpJL@A b", "focusPainted");
      QName qName0 = beanElement0.getQName();
      DOMElement dOMElement0 = new DOMElement(qName0);
      ElementImpl elementImpl0 = new ElementImpl((Element) dOMElement0);
      BeanDocumentFactory beanDocumentFactory0 = (BeanDocumentFactory)qName0.getDocumentFactory();
      DefaultComment defaultComment0 = (DefaultComment)beanDocumentFactory0.createComment("wpJL@A b");
      CommentImpl commentImpl0 = new CommentImpl((Comment) defaultComment0);
      boolean boolean0 = elementImpl0.remove((com.liferay.portal.kernel.xml.Comment) commentImpl0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      BranchImpl branchImpl0 = new BranchImpl((org.dom4j.Branch) dOMDocument0);
      String string0 = branchImpl0.toString();
      assertNotNull(string0);
  }

  @Test
  public void test9()  throws Throwable  {
      BranchImpl branchImpl0 = new BranchImpl((org.dom4j.Branch) null);
      // Undeclared exception!
      try {
        branchImpl0.setContent((List<Node>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      DOMElement dOMElement0 = new DOMElement("");
      ElementImpl elementImpl0 = new ElementImpl((Element) dOMElement0);
      elementImpl0.addElement("");
      assertEquals("<></></>", elementImpl0.asXML());
      assertEquals(false, dOMElement0.isTextOnly());
  }

  @Test
  public void test11()  throws Throwable  {
      BeanElement beanElement0 = new BeanElement("wpJL@A b", "focusPainted");
      QName qName0 = beanElement0.getQName();
      DOMElement dOMElement0 = new DOMElement(qName0);
      ElementImpl elementImpl0 = new ElementImpl((Element) dOMElement0);
      BeanDocumentFactory beanDocumentFactory0 = (BeanDocumentFactory)qName0.getDocumentFactory();
      DefaultComment defaultComment0 = (DefaultComment)beanDocumentFactory0.createComment("wpJL@A b");
      CommentImpl commentImpl0 = new CommentImpl((Comment) defaultComment0);
      elementImpl0.add((com.liferay.portal.kernel.xml.Comment) commentImpl0);
      assertEquals("<wpJL@A b><!--wpJL@A b--></wpJL@A b>", elementImpl0.asXML());
      assertEquals("/wpJL@A b/comment()", defaultComment0.getUniquePath());
  }

  @Test
  public void test12()  throws Throwable  {
      DOMElement dOMElement0 = new DOMElement("Cause cannot be reset");
      ElementImpl elementImpl0 = new ElementImpl((Element) dOMElement0);
      List<ProcessingInstruction> list0 = elementImpl0.processingInstructions("Cause cannot be reset");
      assertEquals(0, list0.size());
  }

  @Test
  public void test13()  throws Throwable  {
      DOMElement dOMElement0 = new DOMElement("viyv)$|xB,");
      BranchImpl branchImpl0 = new BranchImpl((org.dom4j.Branch) dOMElement0);
      int int0 = branchImpl0.hashCode();
      assertEquals(1957301071, int0);
  }

  @Test
  public void test14()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl((Document) null);
      // Undeclared exception!
      try {
        documentImpl0.clearContent();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      DOMElement dOMElement0 = new DOMElement("Cause cannot be reset");
      ElementImpl elementImpl0 = new ElementImpl((Element) dOMElement0);
      // Undeclared exception!
      try {
        elementImpl0.add((ProcessingInstruction) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      DOMElement dOMElement0 = new DOMElement("");
      ElementImpl elementImpl0 = new ElementImpl((Element) dOMElement0);
      elementImpl0.normalize();
      assertEquals(false, elementImpl0.isReadOnly());
  }

  @Test
  public void test17()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl((Document) null);
      // Undeclared exception!
      try {
        documentImpl0.indexOf((Node) documentImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test18()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl((Document) null);
      // Undeclared exception!
      try {
        documentImpl0.addElement("jcifs.smb.client.attrExpirationPeriod", "jcifs.smb.client.attrExpirationPeriod");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test19()  throws Throwable  {
      DocumentFactory documentFactory0 = new DocumentFactory();
      QName qName0 = documentFactory0.createQName("", "", "");
      IndexedElement indexedElement0 = new IndexedElement(qName0, 143);
      ElementImpl elementImpl0 = new ElementImpl((Element) indexedElement0);
      QNameImpl qNameImpl0 = (QNameImpl)elementImpl0.getQName("");
      elementImpl0.addElement((com.liferay.portal.kernel.xml.QName) qNameImpl0);
      assertEquals("\n<>\n\t</>\n</>", elementImpl0.formattedString());
      assertEquals(true, indexedElement0.hasContent());
  }

  @Test
  public void test20()  throws Throwable  {
      DOMElement dOMElement0 = new DOMElement("viyv)$|xB,");
      BranchImpl branchImpl0 = new BranchImpl((org.dom4j.Branch) dOMElement0);
      ElementImpl elementImpl0 = new ElementImpl((Element) dOMElement0);
      boolean boolean0 = branchImpl0.remove((com.liferay.portal.kernel.xml.Element) elementImpl0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test21()  throws Throwable  {
      BeanElement beanElement0 = new BeanElement("wpJL@A b", "focusPainted");
      BranchImpl branchImpl0 = new BranchImpl((org.dom4j.Branch) beanElement0);
      // Undeclared exception!
      try {
        branchImpl0.equals((Object) "focusPainted");
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * java.lang.String cannot be cast to com.liferay.portal.xml.BranchImpl
         */
      }
  }

  @Test
  public void test22()  throws Throwable  {
      DOMElement dOMElement0 = new DOMElement("Cause cannot be reset");
      ElementImpl elementImpl0 = new ElementImpl((Element) dOMElement0);
      boolean boolean0 = elementImpl0.removeProcessingInstruction("Cause cannot be reset");
      assertEquals(false, boolean0);
  }

  @Test
  public void test23()  throws Throwable  {
      DOMElement dOMElement0 = new DOMElement("");
      ElementImpl elementImpl0 = new ElementImpl((Element) dOMElement0);
      elementImpl0.add((com.liferay.portal.kernel.xml.Element) elementImpl0);
      assertEquals(false, elementImpl0.isTextOnly());
      assertEquals(true, dOMElement0.hasChildNodes());
  }

  @Test
  public void test24()  throws Throwable  {
      DocumentFactory documentFactory0 = new DocumentFactory();
      QName qName0 = documentFactory0.createQName("", "", "");
      IndexedElement indexedElement0 = new IndexedElement(qName0, 143);
      ElementImpl elementImpl0 = new ElementImpl((Element) indexedElement0);
      boolean boolean0 = elementImpl0.remove((Node) elementImpl0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test25()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      DOMElement dOMElement0 = (DOMElement)dOMDocument0.addElement("", "", ">3sy=.=Pwz('jP )");
      ElementImpl elementImpl0 = new ElementImpl((Element) dOMElement0);
      List<ProcessingInstruction> list0 = elementImpl0.processingInstructions();
      assertEquals(true, list0.isEmpty());
  }

  @Test
  public void test26()  throws Throwable  {
      DocumentFactory documentFactory0 = DocumentFactory.getInstance();
      IndexedElement indexedElement0 = new IndexedElement("P");
      DefaultDocument defaultDocument0 = (DefaultDocument)documentFactory0.createDocument((Element) indexedElement0);
      DocumentImpl documentImpl0 = new DocumentImpl((Document) defaultDocument0);
      ElementImpl elementImpl0 = (ElementImpl)documentImpl0.node(0);
      assertEquals("", elementImpl0.getStringValue());
  }

  @Test
  public void test27()  throws Throwable  {
      BeanElement beanElement0 = new BeanElement("wpJL@A b", "focusPainted");
      QName qName0 = beanElement0.getQName();
      DOMElement dOMElement0 = new DOMElement(qName0);
      ElementImpl elementImpl0 = new ElementImpl((Element) dOMElement0);
      NodeImpl nodeImpl0 = (NodeImpl)elementImpl0.node(2738);
      assertNull(nodeImpl0);
  }

  @Test
  public void test28()  throws Throwable  {
      Namespace namespace0 = new Namespace("Week ", "Week ");
      BaseElement baseElement0 = new BaseElement("Week ", namespace0);
      BaseElement baseElement1 = (BaseElement)baseElement0.addProcessingInstruction("Week ", "Week ");
      ElementImpl elementImpl0 = new ElementImpl((Element) baseElement1);
      NodeImpl nodeImpl0 = (NodeImpl)elementImpl0.node(0);
      assertEquals("Week ", nodeImpl0.getText());
  }

  @Test
  public void test29()  throws Throwable  {
      DOMElement dOMElement0 = new DOMElement("viyv)$|xB,");
      BranchImpl branchImpl0 = new BranchImpl((org.dom4j.Branch) dOMElement0);
      ElementImpl elementImpl0 = new ElementImpl((Element) dOMElement0);
      elementImpl0.addProcessingInstruction("viyv)$|xB,", "viyv)$|xB,");
      ProcessingInstructionImpl processingInstructionImpl0 = (ProcessingInstructionImpl)branchImpl0.processingInstruction("viyv)$|xB,");
      assertEquals("/viyv)$|xB,/processing-instruction()", processingInstructionImpl0.getPath());
  }

  @Test
  public void test30()  throws Throwable  {
      DOMElement dOMElement0 = new DOMElement("");
      ElementImpl elementImpl0 = new ElementImpl((Element) dOMElement0);
      ProcessingInstructionImpl processingInstructionImpl0 = (ProcessingInstructionImpl)elementImpl0.processingInstruction("");
      assertNull(processingInstructionImpl0);
  }
}
