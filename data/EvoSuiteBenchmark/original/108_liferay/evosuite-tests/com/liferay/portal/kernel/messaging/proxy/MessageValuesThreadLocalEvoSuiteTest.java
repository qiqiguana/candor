/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.messaging.proxy;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.messaging.proxy.MessageValuesThreadLocal;
import java.util.HashMap;
import java.util.Map;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MessageValuesThreadLocalEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MessageValuesThreadLocal messageValuesThreadLocal0 = new MessageValuesThreadLocal();
      assertNotNull(messageValuesThreadLocal0);
  }

  @Test
  public void test1()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = (HashMap<Object, Object>)MessageValuesThreadLocal.getValue((String) null);
      assertNull(hashMap0);
  }

  @Test
  public void test2()  throws Throwable  {
      Map<String, Object> map0 = MessageValuesThreadLocal.getValues();
      assertEquals(true, map0.isEmpty());
  }

  @Test
  public void test3()  throws Throwable  {
      HashMap<MessageValuesThreadLocal, Map<Integer, Map<Object, String>>> hashMap0 = new HashMap<MessageValuesThreadLocal, Map<Integer, Map<Object, String>>>();
      MessageValuesThreadLocal.setValue((String) null, (Object) hashMap0);
      assertEquals("{}", hashMap0.toString());
  }
}
