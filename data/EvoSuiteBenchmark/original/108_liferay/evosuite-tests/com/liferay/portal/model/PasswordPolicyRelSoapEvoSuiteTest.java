/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.PasswordPolicyRel;
import com.liferay.portal.model.PasswordPolicyRelSoap;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PasswordPolicyRelSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PasswordPolicyRelSoap passwordPolicyRelSoap0 = new PasswordPolicyRelSoap();
      long long0 = passwordPolicyRelSoap0.getClassPK();
      assertEquals(0L, long0);
  }

  @Test
  public void test1()  throws Throwable  {
      PasswordPolicyRelSoap passwordPolicyRelSoap0 = new PasswordPolicyRelSoap();
      long long0 = passwordPolicyRelSoap0.getClassNameId();
      assertEquals(0L, long0);
  }

  @Test
  public void test2()  throws Throwable  {
      PasswordPolicyRelSoap passwordPolicyRelSoap0 = new PasswordPolicyRelSoap();
      long long0 = passwordPolicyRelSoap0.getPasswordPolicyRelId();
      assertEquals(0L, long0);
  }

  @Test
  public void test3()  throws Throwable  {
      PasswordPolicyRelSoap passwordPolicyRelSoap0 = new PasswordPolicyRelSoap();
      passwordPolicyRelSoap0.setPrimaryKey(0L);
      assertEquals(0L, passwordPolicyRelSoap0.getPasswordPolicyRelId());
  }

  @Test
  public void test4()  throws Throwable  {
      PasswordPolicyRelSoap passwordPolicyRelSoap0 = new PasswordPolicyRelSoap();
      long long0 = passwordPolicyRelSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test5()  throws Throwable  {
      PasswordPolicyRelSoap passwordPolicyRelSoap0 = new PasswordPolicyRelSoap();
      long long0 = passwordPolicyRelSoap0.getPasswordPolicyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test6()  throws Throwable  {
      LinkedList<PasswordPolicyRel> linkedList0 = new LinkedList<PasswordPolicyRel>();
      linkedList0.add((PasswordPolicyRel) null);
      // Undeclared exception!
      try {
        PasswordPolicyRelSoap.toSoapModels((List<PasswordPolicyRel>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      PasswordPolicyRelSoap passwordPolicyRelSoap0 = new PasswordPolicyRelSoap();
      passwordPolicyRelSoap0.setClassPK(0L);
      assertEquals(0L, passwordPolicyRelSoap0.getClassPK());
  }

  @Test
  public void test8()  throws Throwable  {
      PasswordPolicyRelSoap passwordPolicyRelSoap0 = new PasswordPolicyRelSoap();
      passwordPolicyRelSoap0.setPasswordPolicyId(0L);
      assertEquals(0L, passwordPolicyRelSoap0.getPasswordPolicyRelId());
  }

  @Test
  public void test9()  throws Throwable  {
      PasswordPolicyRelSoap passwordPolicyRelSoap0 = new PasswordPolicyRelSoap();
      passwordPolicyRelSoap0.setClassNameId(0L);
      assertEquals(0L, passwordPolicyRelSoap0.getClassPK());
  }

  @Test
  public void test10()  throws Throwable  {
      PasswordPolicyRel[][] passwordPolicyRelArray0 = new PasswordPolicyRel[1][9];
      // Undeclared exception!
      try {
        PasswordPolicyRelSoap.toSoapModels(passwordPolicyRelArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      LinkedList<PasswordPolicyRel> linkedList0 = new LinkedList<PasswordPolicyRel>();
      PasswordPolicyRelSoap[] passwordPolicyRelSoapArray0 = PasswordPolicyRelSoap.toSoapModels((List<PasswordPolicyRel>) linkedList0);
      assertNotNull(passwordPolicyRelSoapArray0);
  }
}
