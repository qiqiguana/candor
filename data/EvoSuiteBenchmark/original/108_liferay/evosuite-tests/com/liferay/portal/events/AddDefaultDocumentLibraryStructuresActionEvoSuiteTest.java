/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.events;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.events.AddDefaultDocumentLibraryStructuresAction;
import com.liferay.portal.kernel.events.ActionException;
import com.liferay.portal.service.ServiceContext;
import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.dom4j.bean.BeanAttributeList;
import org.dom4j.bean.BeanElement;
import org.dom4j.bean.BeanMetaData;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AddDefaultDocumentLibraryStructuresActionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AddDefaultDocumentLibraryStructuresAction addDefaultDocumentLibraryStructuresAction0 = new AddDefaultDocumentLibraryStructuresAction();
      String[] stringArray0 = new String[8];
      try {
        addDefaultDocumentLibraryStructuresAction0.run(stringArray0);
        fail("Expecting exception: ActionException");
      } catch(ActionException e) {
        /*
         * com.liferay.portal.kernel.bean.BeanLocatorException: BeanLocator has not been set
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      AddDefaultDocumentLibraryStructuresAction addDefaultDocumentLibraryStructuresAction0 = new AddDefaultDocumentLibraryStructuresAction();
      Field[] fieldArray0 = new Field[1];
      // Undeclared exception!
      try {
        addDefaultDocumentLibraryStructuresAction0.buildDLRawMetadataStructureXML("$|'z;<U1ALz/#-Lrr", fieldArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      AddDefaultDocumentLibraryStructuresAction addDefaultDocumentLibraryStructuresAction0 = new AddDefaultDocumentLibraryStructuresAction();
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        addDefaultDocumentLibraryStructuresAction0.addDLFileEntryTypes(7L, 7L, serviceContext0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      AddDefaultDocumentLibraryStructuresAction addDefaultDocumentLibraryStructuresAction0 = new AddDefaultDocumentLibraryStructuresAction();
      Class<?> class0 = AddDefaultDocumentLibraryStructuresAction.class;
      BeanMetaData beanMetaData0 = new BeanMetaData(class0);
      BeanElement beanElement0 = new BeanElement("%bd:-,TC}Mo8Mnep?", "%bd:-,TC}Mo8Mnep?");
      BeanAttributeList beanAttributeList0 = beanMetaData0.createAttributeList(beanElement0);
      try {
        addDefaultDocumentLibraryStructuresAction0.addDLFileEntryType((-479L), (-479L), "%bd:-,TC}Mo8Mnep?", "%bd:-,TC}Mo8Mnep?", "%bd:-,TC}Mo8Mnep?", (List<String>) beanAttributeList0, (ServiceContext) null);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * org.dom4j.bean.BeanAttribute cannot be cast to java.lang.String
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      AddDefaultDocumentLibraryStructuresAction addDefaultDocumentLibraryStructuresAction0 = new AddDefaultDocumentLibraryStructuresAction();
      HashMap<String, Field[]> hashMap0 = new HashMap<String, Field[]>();
      String string0 = addDefaultDocumentLibraryStructuresAction0.buildDLRawMetadataXML((Map<String, Field[]>) hashMap0);
      assertEquals("<?xml version=\"1.0\"?><root></root>", string0);
      assertNotNull(string0);
  }
}
