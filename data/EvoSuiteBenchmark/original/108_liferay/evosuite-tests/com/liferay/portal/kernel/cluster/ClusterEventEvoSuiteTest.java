/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.cluster;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.cluster.ClusterEvent;
import com.liferay.portal.kernel.cluster.ClusterEventType;
import com.liferay.portal.kernel.cluster.ClusterNode;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ClusterEventEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ClusterEvent clusterEvent0 = ClusterEvent.depart((List<ClusterNode>) null);
      assertEquals(ClusterEventType.DEPART, clusterEvent0.getClusterEventType());
  }

  @Test
  public void test1()  throws Throwable  {
      ClusterEventType clusterEventType0 = ClusterEventType.DEPART;
      ClusterEvent clusterEvent0 = new ClusterEvent(clusterEventType0);
      List<ClusterNode> list0 = clusterEvent0.getClusterNodes();
      assertNull(list0);
  }

  @Test
  public void test2()  throws Throwable  {
      LinkedList<ClusterNode> linkedList0 = new LinkedList<ClusterNode>();
      ClusterEventType clusterEventType0 = ClusterEventType.JOIN;
      ClusterEvent clusterEvent0 = new ClusterEvent(clusterEventType0);
      clusterEvent0.setClusterNodes((List<ClusterNode>) linkedList0);
      assertEquals("[]", linkedList0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      LinkedList<ClusterNode> linkedList0 = new LinkedList<ClusterNode>();
      ClusterEvent clusterEvent0 = ClusterEvent.join((List<ClusterNode>) linkedList0);
      assertEquals(ClusterEventType.JOIN, clusterEvent0.getClusterEventType());
  }

  @Test
  public void test4()  throws Throwable  {
      ClusterNode[] clusterNodeArray0 = new ClusterNode[8];
      ClusterEvent clusterEvent0 = ClusterEvent.depart(clusterNodeArray0);
      assertEquals(ClusterEventType.DEPART, clusterEvent0.getClusterEventType());
  }

  @Test
  public void test5()  throws Throwable  {
      ClusterNode[] clusterNodeArray0 = new ClusterNode[2];
      ClusterEvent clusterEvent0 = ClusterEvent.join(clusterNodeArray0);
      assertEquals(ClusterEventType.JOIN, clusterEvent0.getClusterEventType());
  }

  @Test
  public void test6()  throws Throwable  {
      ClusterEventType clusterEventType0 = ClusterEventType.DEPART;
      ClusterEvent clusterEvent0 = new ClusterEvent(clusterEventType0);
      ClusterEventType clusterEventType1 = clusterEvent0.getClusterEventType();
      assertEquals(ClusterEventType.DEPART, clusterEventType1);
  }
}
