/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.MethodTargetClassKey;
import java.lang.reflect.Method;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MethodTargetClassKeyEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MethodTargetClassKey methodTargetClassKey0 = new MethodTargetClassKey((Method) null, (Class<?>) null);
      Class<?> class0 = methodTargetClassKey0.getTargetClass();
      assertNull(class0);
  }

  @Test
  public void test1()  throws Throwable  {
      Class<?> class0 = Object.class;
      MethodTargetClassKey methodTargetClassKey0 = new MethodTargetClassKey((Method) null, class0);
      Method method0 = methodTargetClassKey0.getMethod();
      assertNull(method0);
  }

  @Test
  public void test2()  throws Throwable  {
      Class<?> class0 = Object.class;
      MethodTargetClassKey methodTargetClassKey0 = new MethodTargetClassKey((Method) null, class0);
      Class<?> class1 = Class.class;
      MethodTargetClassKey methodTargetClassKey1 = new MethodTargetClassKey((Method) null, class1);
      boolean boolean0 = methodTargetClassKey0.equals((Object) methodTargetClassKey1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      MethodTargetClassKey methodTargetClassKey0 = new MethodTargetClassKey((Method) null, (Class<?>) null);
      boolean boolean0 = methodTargetClassKey0.equals((Object) "");
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      Class<?> class0 = MethodTargetClassKey.class;
      MethodTargetClassKey methodTargetClassKey0 = new MethodTargetClassKey((Method) null, class0);
      MethodTargetClassKey methodTargetClassKey1 = new MethodTargetClassKey((Method) null, class0);
      boolean boolean0 = methodTargetClassKey0.equals((Object) methodTargetClassKey1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      Class<?> class0 = MethodTargetClassKey.class;
      MethodTargetClassKey methodTargetClassKey0 = new MethodTargetClassKey((Method) null, class0);
      Method method0 = methodTargetClassKey0.getTargetMethod();
      assertNull(method0);
  }

  @Test
  public void test6()  throws Throwable  {
      MethodTargetClassKey methodTargetClassKey0 = new MethodTargetClassKey((Method) null, (Class<?>) null);
      Method method0 = methodTargetClassKey0.getTargetMethod();
      assertNull(method0);
  }

  @Test
  public void test7()  throws Throwable  {
      Class<?> class0 = Object.class;
      MethodTargetClassKey methodTargetClassKey0 = new MethodTargetClassKey((Method) null, class0);
      methodTargetClassKey0.hashCode();
      int int0 = methodTargetClassKey0.hashCode();
      assertEquals(1063877858, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      MethodTargetClassKey methodTargetClassKey0 = new MethodTargetClassKey((Method) null, (Class<?>) null);
      int int0 = methodTargetClassKey0.hashCode();
      assertEquals(847, int0);
  }

  @Test
  public void test9()  throws Throwable  {
      Class<?> class0 = MethodTargetClassKey.class;
      MethodTargetClassKey methodTargetClassKey0 = new MethodTargetClassKey((Method) null, class0);
      // Undeclared exception!
      try {
        methodTargetClassKey0.toString();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
