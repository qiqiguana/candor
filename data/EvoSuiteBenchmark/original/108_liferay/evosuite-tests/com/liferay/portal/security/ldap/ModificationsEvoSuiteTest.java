/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.security.ldap;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.security.ldap.Modifications;
import javax.naming.directory.BasicAttribute;
import javax.naming.directory.ModificationItem;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ModificationsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Modifications modifications0 = Modifications.getInstance();
      BasicAttribute basicAttribute0 = new BasicAttribute("P", (Object) null);
      ModificationItem modificationItem0 = modifications0.addItem(basicAttribute0);
      assertNotNull(modificationItem0);
      assertEquals("Replace attribute: P: null", modificationItem0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      Modifications modifications0 = Modifications.getInstance();
      ModificationItem modificationItem0 = modifications0.addItem("s(!n|M'Jp{L%G'6v", "s(!n|M'Jp{L%G'6v");
      assertEquals("Replace attribute: s(!n|M'Jp{L%G'6v: s(!n|M'Jp{L%G'6v", modificationItem0.toString());
      assertNotNull(modificationItem0);
  }

  @Test
  public void test2()  throws Throwable  {
      Modifications modifications0 = Modifications.getInstance();
      ModificationItem modificationItem0 = modifications0.addItem("", "");
      assertNotNull(modificationItem0);
      assertEquals("Replace attribute: : ", modificationItem0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      Modifications modifications0 = Modifications.getInstance();
      ModificationItem[] modificationItemArray0 = modifications0.getItems();
      assertNotNull(modificationItemArray0);
  }

  @Test
  public void test4()  throws Throwable  {
      Modifications modifications0 = Modifications.getInstance();
      ModificationItem modificationItem0 = modifications0.addItem("s(!n|M'Jp{L%G'6v", (Object) null);
      assertNotNull(modificationItem0);
      assertEquals("Replace attribute: s(!n|M'Jp{L%G'6v: No values", modificationItem0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      Modifications modifications0 = Modifications.getInstance();
      // Undeclared exception!
      try {
        modifications0.addItem(0, "", "");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Invalid modification code 0
         */
      }
  }
}
