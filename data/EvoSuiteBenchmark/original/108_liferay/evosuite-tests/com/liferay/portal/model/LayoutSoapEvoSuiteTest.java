/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.Layout;
import com.liferay.portal.model.LayoutSoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LayoutSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      long long0 = layoutSoap0.getIconImageId();
      assertEquals(0L, long0);
  }

  @Test
  public void test1()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      String string0 = layoutSoap0.getType();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      String string0 = layoutSoap0.getTypeSettings();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      String string0 = layoutSoap0.getCss();
      assertNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setColorSchemeId("PKCOLUMN_NAME");
      assertNull(layoutSoap0.getWapColorSchemeId());
  }

  @Test
  public void test5()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      String string0 = layoutSoap0.getFriendlyURL();
      assertNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      String string0 = layoutSoap0.getColorSchemeId();
      assertNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      String string0 = layoutSoap0.getThemeId();
      assertNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      long long0 = layoutSoap0.getLayoutId();
      assertEquals(0L, long0);
  }

  @Test
  public void test9()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      String string0 = layoutSoap0.getTitle();
      assertNull(string0);
  }

  @Test
  public void test10()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setGroupId((-1257L));
      assertEquals((-1257L), layoutSoap0.getGroupId());
  }

  @Test
  public void test11()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setPrimaryKey(0L);
      assertNull(layoutSoap0.getColorSchemeId());
  }

  @Test
  public void test12()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setCss("");
      assertNull(layoutSoap0.getThemeId());
  }

  @Test
  public void test13()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setLayoutPrototypeLinkEnabled(true);
      assertEquals(true, layoutSoap0.getLayoutPrototypeLinkEnabled());
      assertEquals(true, layoutSoap0.isLayoutPrototypeLinkEnabled());
  }

  @Test
  public void test14()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      boolean boolean0 = layoutSoap0.isLayoutPrototypeLinkEnabled();
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setName("PKCOLUMN_NAME");
      assertEquals(false, layoutSoap0.isIconImage());
  }

  @Test
  public void test16()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      boolean boolean0 = layoutSoap0.getIconImage();
      assertEquals(false, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      String string0 = layoutSoap0.getUuid();
      assertNull(string0);
  }

  @Test
  public void test18()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setCompanyId(0L);
      assertNull(layoutSoap0.getColorSchemeId());
  }

  @Test
  public void test19()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setRobots((String) null);
      assertNull(layoutSoap0.getName());
  }

  @Test
  public void test20()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setThemeId((String) null);
      assertEquals(false, layoutSoap0.getPrivateLayout());
  }

  @Test
  public void test21()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setCreateDate((Date) null);
      assertNull(layoutSoap0.getSourcePrototypeLayoutUuid());
  }

  @Test
  public void test22()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      String string0 = layoutSoap0.getWapColorSchemeId();
      assertNull(string0);
  }

  @Test
  public void test23()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      String string0 = layoutSoap0.getRobots();
      assertNull(string0);
  }

  @Test
  public void test24()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setKeywords((String) null);
      assertEquals(0, layoutSoap0.getPriority());
  }

  @Test
  public void test25()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      String string0 = layoutSoap0.getLayoutPrototypeUuid();
      assertNull(string0);
  }

  @Test
  public void test26()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      Date date0 = layoutSoap0.getModifiedDate();
      assertNull(date0);
  }

  @Test
  public void test27()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      int int0 = layoutSoap0.getPriority();
      assertEquals(0, int0);
  }

  @Test
  public void test28()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setIconImage(false);
      assertEquals(false, layoutSoap0.isIconImage());
      assertEquals(false, layoutSoap0.getIconImage());
  }

  @Test
  public void test29()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setType((String) null);
      assertNull(layoutSoap0.getDescription());
  }

  @Test
  public void test30()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      long long0 = layoutSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test31()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      long long0 = layoutSoap0.getPlid();
      assertEquals(0L, long0);
  }

  @Test
  public void test32()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      String string0 = layoutSoap0.getWapThemeId();
      assertNull(string0);
  }

  @Test
  public void test33()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setFriendlyURL("PKCOLUMN_NAME");
      assertNull(layoutSoap0.getColorSchemeId());
  }

  @Test
  public void test34()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      String string0 = layoutSoap0.getSourcePrototypeLayoutUuid();
      assertNull(string0);
  }

  @Test
  public void test35()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setPriority(1427);
      assertEquals(1427, layoutSoap0.getPriority());
  }

  @Test
  public void test36()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      boolean boolean0 = layoutSoap0.getPrivateLayout();
      assertEquals(false, boolean0);
  }

  @Test
  public void test37()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setTypeSettings((String) null);
      assertEquals(false, layoutSoap0.isIconImage());
  }

  @Test
  public void test38()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      long long0 = layoutSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test39()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      boolean boolean0 = layoutSoap0.getHidden();
      assertEquals(false, boolean0);
  }

  @Test
  public void test40()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setParentLayoutId((-99L));
      assertEquals((-99L), layoutSoap0.getParentLayoutId());
  }

  @Test
  public void test41()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setIconImageId(0L);
      assertNull(layoutSoap0.getLayoutPrototypeUuid());
  }

  @Test
  public void test42()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      String string0 = layoutSoap0.getName();
      assertNull(string0);
  }

  @Test
  public void test43()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setDescription((String) null);
      assertEquals(false, layoutSoap0.isIconImage());
  }

  @Test
  public void test44()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      long long0 = layoutSoap0.getParentLayoutId();
      assertEquals(0L, long0);
  }

  @Test
  public void test45()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setHidden(false);
      assertEquals(false, layoutSoap0.isHidden());
      assertEquals(false, layoutSoap0.getHidden());
  }

  @Test
  public void test46()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      String string0 = layoutSoap0.getDescription();
      assertNull(string0);
  }

  @Test
  public void test47()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setSourcePrototypeLayoutUuid((String) null);
      assertEquals(0L, layoutSoap0.getCompanyId());
  }

  @Test
  public void test48()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      String string0 = layoutSoap0.getKeywords();
      assertNull(string0);
  }

  @Test
  public void test49()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      Date date0 = layoutSoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test50()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      boolean boolean0 = layoutSoap0.isPrivateLayout();
      assertEquals(false, boolean0);
  }

  @Test
  public void test51()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      boolean boolean0 = layoutSoap0.getLayoutPrototypeLinkEnabled();
      assertEquals(false, boolean0);
  }

  @Test
  public void test52()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      boolean boolean0 = layoutSoap0.isHidden();
      assertEquals(false, boolean0);
  }

  @Test
  public void test53()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setLayoutId(0L);
      assertNull(layoutSoap0.getKeywords());
  }

  @Test
  public void test54()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setTitle("BA*/XI,E#Q5e|#o=");
      assertNull(layoutSoap0.getFriendlyURL());
  }

  @Test
  public void test55()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      long long0 = layoutSoap0.getGroupId();
      assertEquals(0L, long0);
  }

  @Test
  public void test56()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setLayoutPrototypeUuid("PKCOLUMN_NAME");
      assertEquals("PKCOLUMN_NAME", layoutSoap0.getLayoutPrototypeUuid());
  }

  @Test
  public void test57()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setPrivateLayout(true);
      assertEquals(true, layoutSoap0.getPrivateLayout());
      assertEquals(true, layoutSoap0.isPrivateLayout());
  }

  @Test
  public void test58()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setWapThemeId((String) null);
      assertEquals(false, layoutSoap0.isIconImage());
  }

  @Test
  public void test59()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      boolean boolean0 = layoutSoap0.isIconImage();
      assertEquals(false, boolean0);
  }

  @Test
  public void test60()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setWapColorSchemeId((String) null);
      assertEquals(false, layoutSoap0.getHidden());
  }

  @Test
  public void test61()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setModifiedDate((Date) null);
      assertEquals(0, layoutSoap0.getPriority());
  }

  @Test
  public void test62()  throws Throwable  {
      LayoutSoap layoutSoap0 = new LayoutSoap();
      layoutSoap0.setUuid((String) null);
      assertNull(layoutSoap0.getName());
  }

  @Test
  public void test63()  throws Throwable  {
      Layout[][] layoutArray0 = new Layout[1][9];
      // Undeclared exception!
      try {
        LayoutSoap.toSoapModels(layoutArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test64()  throws Throwable  {
      LinkedList<Layout> linkedList0 = new LinkedList<Layout>();
      LayoutSoap[] layoutSoapArray0 = LayoutSoap.toSoapModels((List<Layout>) linkedList0);
      assertNotNull(layoutSoapArray0);
  }
}
