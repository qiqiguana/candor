/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.service.permission;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.Organization;
import com.liferay.portal.security.permission.PermissionChecker;
import com.liferay.portal.service.permission.OrganizationPermission;
import com.liferay.portal.service.permission.OrganizationPermissionUtil;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class OrganizationPermissionUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try {
        OrganizationPermissionUtil.check((PermissionChecker) null, (Organization) null, "R4/MYTA14&");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try {
        OrganizationPermissionUtil.contains((PermissionChecker) null, (Organization) null, "different class registered as ");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      OrganizationPermissionUtil organizationPermissionUtil0 = new OrganizationPermissionUtil();
      organizationPermissionUtil0.setOrganizationPermission((OrganizationPermission) null);
  }

  @Test
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try {
        OrganizationPermissionUtil.check((PermissionChecker) null, 0L, "M>E|4#^zP-c[*");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try {
        OrganizationPermissionUtil.contains((PermissionChecker) null, 0L, "4u2ipB>.G/'ChcT");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      long[] longArray0 = new long[10];
      // Undeclared exception!
      try {
        OrganizationPermissionUtil.contains((PermissionChecker) null, longArray0, "(so7n{ r@K&D*:i(fD#");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
