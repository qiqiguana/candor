/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.service.http;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.model.UserGroupRoleSoap;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.service.http.UserServiceSoap;
import java.rmi.RemoteException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UserServiceSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      long[] longArray0 = new long[4];
      try {
        UserServiceSoap.addUserWithWorkflow(1761L, false, (String) null, (String) null, false, (String) null, (String) null, 1761L, (String) null, (String) null, (String) null, (String) null, (String) null, (-21), (-21), false, (-21), (-21), (-21), (String) null, longArray0, longArray0, longArray0, longArray0, false, (ServiceContext) null);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      try {
        UserServiceSoap.updateOpenId(1L, "&gq");
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      long[] longArray0 = new long[10];
      try {
        UserServiceSoap.addGroupUsers((-4L), longArray0, (ServiceContext) null);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      long[] longArray0 = new long[5];
      try {
        UserServiceSoap.setUserGroupUsers((-9L), longArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      try {
        UserServiceSoap.getCompanyUsers((-20L), 1701, 1701);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      try {
        UserServiceSoap.updatePassword((-10L), "Qwk^[|@{d':.E", "Qwk^[|@{d':.E", true);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      long[] longArray0 = new long[8];
      try {
        UserServiceSoap.addTeamUsers(1519L, longArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      try {
        UserServiceSoap.getGroupUserIds(0L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      try {
        UserServiceSoap.getUserByEmailAddress(843L, "/data/ehcache");
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      try {
        UserServiceSoap.updateIncompleteUser((-352L), false, "Tying oind [", "Tying oind [", false, "Tying oind [", "Tying oind [", (-352L), "Tying oind [", "Tying oind [", "Tying oind [", "Tying oind [", "Tying oind [", 0, 0, false, 0, 0, 0, "Tying oind [", false, false, (ServiceContext) null);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      try {
        UserServiceSoap.updateReminderQuery(24L, "%", "%");
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      try {
        UserServiceSoap.updateAgreedToTermsOfUse(3L, false);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      try {
        UserServiceSoap.deleteUser((-204L));
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      long[] longArray0 = new long[2];
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        UserServiceSoap.unsetGroupUsers((-9223372036854775801L), longArray0, serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      try {
        UserServiceSoap.updatePortrait((-39L), byteArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test15()  throws Throwable  {
      long[] longArray0 = new long[4];
      try {
        UserServiceSoap.addRoleUsers(13L, longArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test16()  throws Throwable  {
      try {
        UserServiceSoap.hasRoleUser(28L, 28L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test17()  throws Throwable  {
      long[] longArray0 = new long[8];
      UserGroupRoleSoap[] userGroupRoleSoapArray0 = new UserGroupRoleSoap[1];
      ServiceContext serviceContext0 = new ServiceContext();
      // Undeclared exception!
      try {
        UserServiceSoap.updateUser(1251L, "{C4/h60+ULPPEM)%5{Q", "{C4/h60+ULPPEM)%5{Q", "{C4/h60+ULPPEM)%5{Q", false, "{C4/h60+ULPPEM)%5{Q", "{C4/h60+ULPPEM)%5{Q", "{C4/h60+ULPPEM)%5{Q", "{C4/h60+ULPPEM)%5{Q", 1251L, "{C4/h60+ULPPEM)%5{Q", "{C4/h60+ULPPEM)%5{Q", "{C4/h60+ULPPEM)%5{Q", "{C4/h60+ULPPEM)%5{Q", "{C4/h60+ULPPEM)%5{Q", "{C4/h60+ULPPEM)%5{Q", "{C4/h60+ULPPEM)%5{Q", "{C4/h60+ULPPEM)%5{Q", (-4), (-4), false, (-4), (-4), (-4), "{C4/h60+ULPPEM)%5{Q", "{C4/h60+ULPPEM)%5{Q", "{C4/h60+ULPPEM)%5{Q", "{C4/h60+ULPPEM)%5{Q", "{C4/h60+ULPPEM)%5{Q", "{C4/h60+ULPPEM)%5{Q", "{C4/h60+ULPPEM)%5{Q", "{C4/h60+ULPPEM)%5{Q", "{C4/h60+ULPPEM)%5{Q", "{C4/h60+ULPPEM)%5{Q", "{C4/h60+ULPPEM)%5{Q", longArray0, longArray0, longArray0, userGroupRoleSoapArray0, longArray0, serviceContext0);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.model.impl.UserGroupRoleModelImpl
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      try {
        UserServiceSoap.getOrganizationUsers((-954L));
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test19()  throws Throwable  {
      try {
        UserServiceSoap.updateLockoutById(287L, true);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test20()  throws Throwable  {
      try {
        UserServiceSoap.getRoleUserIds(85L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test21()  throws Throwable  {
      long[] longArray0 = new long[8];
      try {
        UserServiceSoap.unsetOrganizationUsers((-322L), longArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test22()  throws Throwable  {
      long[] longArray0 = new long[6];
      try {
        UserServiceSoap.addOrganizationUsers((-1492L), longArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test23()  throws Throwable  {
      long[] longArray0 = new long[2];
      long[] longArray1 = new long[2];
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        UserServiceSoap.addUser(251L, false, "c8+yYEpGB`", "c8+yYEpGB`", false, "c8+yYEpGB`", "c8+yYEpGB`", 251L, "c8+yYEpGB`", "c8+yYEpGB`", "c8+yYEpGB`", "c8+yYEpGB`", "c8+yYEpGB`", 19, 19, false, 19, 19, 19, "c8+yYEpGB`", longArray0, longArray0, longArray1, longArray0, false, serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test24()  throws Throwable  {
      try {
        UserServiceSoap.hasRoleUser(0L, (String) null, 0L, true);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test25()  throws Throwable  {
      long[] longArray0 = new long[7];
      try {
        UserServiceSoap.setRoleUsers(488L, longArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test26()  throws Throwable  {
      long[] longArray0 = new long[8];
      try {
        UserServiceSoap.unsetRoleUsers((-1084L), longArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test27()  throws Throwable  {
      try {
        UserServiceSoap.getUserById(1073741824L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test28()  throws Throwable  {
      try {
        UserServiceSoap.hasGroupUser(144L, 144L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test29()  throws Throwable  {
      long[] longArray0 = new long[9];
      try {
        UserServiceSoap.updateOrganizations((-931L), longArray0, (ServiceContext) null);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test30()  throws Throwable  {
      long[] longArray0 = new long[1];
      try {
        UserServiceSoap.unsetPasswordPolicyUsers((long) (byte) (-6), longArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test31()  throws Throwable  {
      try {
        UserServiceSoap.getCompanyUsersCount((-164L));
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test32()  throws Throwable  {
      try {
        UserServiceSoap.getOrganizationUserIds(15L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test33()  throws Throwable  {
      long[] longArray0 = new long[10];
      try {
        UserServiceSoap.addPasswordPolicyUsers((long) 1469, longArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test34()  throws Throwable  {
      try {
        UserServiceSoap.getUserIdByEmailAddress(12L, "");
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test35()  throws Throwable  {
      try {
        UserServiceSoap.getUserIdByScreenName((-990L), "d}oBVp0Ga~Th");
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test36()  throws Throwable  {
      try {
        UserServiceSoap.deletePortrait((-1283L));
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test37()  throws Throwable  {
      long[] longArray0 = new long[4];
      try {
        UserServiceSoap.unsetUserGroupUsers(1231L, longArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test38()  throws Throwable  {
      long[] longArray0 = new long[7];
      try {
        UserServiceSoap.unsetGroupTeamsUsers(1567L, longArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test39()  throws Throwable  {
      try {
        UserServiceSoap.getUserGroupUsers((-865L));
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test40()  throws Throwable  {
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        UserServiceSoap.updateEmailAddress(19L, "Slb%/l~ZW", "Slb%/l~ZW", "Slb%/l~ZW", serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test41()  throws Throwable  {
      try {
        UserServiceSoap.updateStatus(1211L, 501);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test42()  throws Throwable  {
      try {
        UserServiceSoap.deleteRoleUser((-16L), (-16L));
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test43()  throws Throwable  {
      long[] longArray0 = new long[14];
      try {
        UserServiceSoap.unsetTeamUsers(1L, longArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test44()  throws Throwable  {
      UserServiceSoap userServiceSoap0 = new UserServiceSoap();
      assertNotNull(userServiceSoap0);
  }

  @Test
  public void test45()  throws Throwable  {
      try {
        UserServiceSoap.updateScreenName(0L, "<eX-ITTMO~UwmVhU`");
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test46()  throws Throwable  {
      try {
        UserServiceSoap.getGroupUsers(4L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test47()  throws Throwable  {
      try {
        UserServiceSoap.getUserByScreenName(1041L, "1'IV[{gf^UwHUr{ ");
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test48()  throws Throwable  {
      long[] longArray0 = new long[4];
      try {
        UserServiceSoap.addUserGroupUsers(19L, longArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }
}
