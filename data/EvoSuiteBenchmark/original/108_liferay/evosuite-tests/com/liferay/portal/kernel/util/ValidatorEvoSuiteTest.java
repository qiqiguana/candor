/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.Validator;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ValidatorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      boolean boolean0 = Validator.isDate((int) (byte)1, (int) (byte)0, 1377);
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      boolean boolean0 = Validator.isIPAddress("</HTML>");
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      boolean boolean0 = Validator.equalsSorted(doubleArray0, doubleArray0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      int[] intArray0 = new int[7];
      boolean boolean0 = Validator.equalsSorted(intArray0, intArray0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      // Undeclared exception!
      try {
        Validator.equalsSorted(objectArray0, objectArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      boolean boolean0 = Validator.isEmailAddress("");
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      Validator validator0 = new Validator();
      assertNotNull(validator0);
  }

  @Test
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      boolean boolean0 = Validator.equalsSorted(byteArray0, byteArray0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      char[] charArray0 = new char[7];
      boolean boolean0 = Validator.equalsSorted(charArray0, charArray0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[7];
      boolean boolean0 = Validator.equalsSorted(booleanArray0, booleanArray0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      short[] shortArray0 = new short[3];
      boolean boolean0 = Validator.equalsSorted(shortArray0, shortArray0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      long[] longArray0 = new long[7];
      boolean boolean0 = Validator.equalsSorted(longArray0, longArray0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      float[] floatArray0 = new float[3];
      boolean boolean0 = Validator.equalsSorted(floatArray0, floatArray0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      boolean boolean0 = Validator.isPhoneNumber("");
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      boolean boolean0 = Validator.equals(false, true);
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      boolean boolean0 = Validator.equals(true, true);
      assertEquals(true, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      boolean boolean0 = Validator.equals((byte)0, (byte) (-1));
      assertEquals(false, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      boolean boolean0 = Validator.equals((byte)0, (byte)0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      boolean boolean0 = Validator.equals('Z', '9');
      assertEquals(false, boolean0);
  }

  @Test
  public void test19()  throws Throwable  {
      boolean boolean0 = Validator.equals('*', '*');
      assertEquals(true, boolean0);
  }

  @Test
  public void test20()  throws Throwable  {
      boolean boolean0 = Validator.equals((-873.8401674539982), 416.7374184736499);
      assertEquals(false, boolean0);
  }

  @Test
  public void test21()  throws Throwable  {
      boolean boolean0 = Validator.equals((-122.95106508498145), (-122.95106508498145));
      assertEquals(true, boolean0);
  }

  @Test
  public void test22()  throws Throwable  {
      boolean boolean0 = Validator.equals(0.0F, (-17.07835F));
      assertEquals(false, boolean0);
  }

  @Test
  public void test23()  throws Throwable  {
      boolean boolean0 = Validator.equals(0.0F, 0.0F);
      assertEquals(true, boolean0);
  }

  @Test
  public void test24()  throws Throwable  {
      boolean boolean0 = Validator.equals(0, 1596);
      assertEquals(false, boolean0);
  }

  @Test
  public void test25()  throws Throwable  {
      boolean boolean0 = Validator.equals(134, 134);
      assertEquals(true, boolean0);
  }

  @Test
  public void test26()  throws Throwable  {
      boolean boolean0 = Validator.equals(0L, 774L);
      assertEquals(false, boolean0);
  }

  @Test
  public void test27()  throws Throwable  {
      boolean boolean0 = Validator.equals((long) '\\', (long) '\\');
      assertEquals(true, boolean0);
  }

  @Test
  public void test28()  throws Throwable  {
      boolean boolean0 = Validator.equals((Object) "1016", (Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test29()  throws Throwable  {
      boolean boolean0 = Validator.equals((Object) null, (Object) null);
      assertEquals(true, boolean0);
  }

  @Test
  public void test30()  throws Throwable  {
      Object object0 = new Object();
      boolean boolean0 = Validator.equals((Object) null, object0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test31()  throws Throwable  {
      boolean boolean0 = Validator.equals((Object) "98", (Object) "98");
      assertEquals(true, boolean0);
  }

  @Test
  public void test32()  throws Throwable  {
      boolean boolean0 = Validator.equals((short) (byte) (-1), (short)0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test33()  throws Throwable  {
      boolean boolean0 = Validator.equals((short) (-601), (short) (-601));
      assertEquals(true, boolean0);
  }

  @Test
  public void test34()  throws Throwable  {
      boolean boolean0 = Validator.isAddress("</HTML>");
      assertEquals(false, boolean0);
  }

  @Test
  public void test35()  throws Throwable  {
      boolean boolean0 = Validator.isAddress("");
      assertEquals(false, boolean0);
  }

  @Test
  public void test36()  throws Throwable  {
      boolean boolean0 = Validator.isAddress("U/DiCjR.d5W@tY3l%");
      assertEquals(true, boolean0);
  }

  @Test
  public void test37()  throws Throwable  {
      boolean boolean0 = Validator.isAlphanumericName("9");
      assertEquals(true, boolean0);
  }

  @Test
  public void test38()  throws Throwable  {
      boolean boolean0 = Validator.isAlphanumericName((String) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test39()  throws Throwable  {
      boolean boolean0 = Validator.isAlphanumericName("PLRW (");
      assertEquals(false, boolean0);
  }

  @Test
  public void test40()  throws Throwable  {
      boolean boolean0 = Validator.isAscii('\u0017');
      assertEquals(false, boolean0);
  }

  @Test
  public void test41()  throws Throwable  {
      boolean boolean0 = Validator.isAscii('H');
      assertEquals(true, boolean0);
  }

  @Test
  public void test42()  throws Throwable  {
      boolean boolean0 = Validator.isAscii('\u0084');
      assertEquals(false, boolean0);
  }

  @Test
  public void test43()  throws Throwable  {
      boolean boolean0 = Validator.isBlank("|");
      assertEquals(false, boolean0);
  }

  @Test
  public void test44()  throws Throwable  {
      boolean boolean0 = Validator.isBlank((String) null);
      assertEquals(true, boolean0);
  }

  @Test
  public void test45()  throws Throwable  {
      boolean boolean0 = Validator.isBlank("");
      assertEquals(true, boolean0);
  }

  @Test
  public void test46()  throws Throwable  {
      boolean boolean0 = Validator.isName("|");
      assertEquals(false, boolean0);
  }

  @Test
  public void test47()  throws Throwable  {
      boolean boolean0 = Validator.isChar("]1!#m9A?x#E6?}x");
      assertEquals(false, boolean0);
  }

  @Test
  public void test48()  throws Throwable  {
      boolean boolean0 = Validator.isChar("");
      assertEquals(false, boolean0);
  }

  @Test
  public void test49()  throws Throwable  {
      boolean boolean0 = Validator.isChar("true");
      assertEquals(true, boolean0);
  }

  @Test
  public void test50()  throws Throwable  {
      boolean boolean0 = Validator.isHostName("|");
      assertEquals(false, boolean0);
  }

  @Test
  public void test51()  throws Throwable  {
      boolean boolean0 = Validator.isDigit("9");
      assertEquals(true, boolean0);
  }

  @Test
  public void test52()  throws Throwable  {
      boolean boolean0 = Validator.isDigit((String) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test53()  throws Throwable  {
      boolean boolean0 = Validator.isDigit("4>25CNSh");
      assertEquals(false, boolean0);
  }

  @Test
  public void test54()  throws Throwable  {
      boolean boolean0 = Validator.isDomain("1111111111111111111111111111111111111111111111111111110010100000");
      assertEquals(false, boolean0);
  }

  @Test
  public void test55()  throws Throwable  {
      boolean boolean0 = Validator.isDomain((String) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test56()  throws Throwable  {
      boolean boolean0 = Validator.isDomain("..");
      assertEquals(false, boolean0);
  }

  @Test
  public void test57()  throws Throwable  {
      boolean boolean0 = Validator.isDomain("/..");
      assertEquals(false, boolean0);
  }

  @Test
  public void test58()  throws Throwable  {
      boolean boolean0 = Validator.isDomain("localhost");
      assertEquals(true, boolean0);
  }

  @Test
  public void test59()  throws Throwable  {
      boolean boolean0 = Validator.isDomain("TJ-6$jTX.tc");
      assertEquals(false, boolean0);
  }

  @Test
  public void test60()  throws Throwable  {
      boolean boolean0 = Validator.isEmailAddressSpecialChar('j');
      assertEquals(false, boolean0);
  }

  @Test
  public void test61()  throws Throwable  {
      boolean boolean0 = Validator.isEmailAddressSpecialChar('`');
      assertEquals(true, boolean0);
  }

  @Test
  public void test62()  throws Throwable  {
      boolean boolean0 = Validator.isFileExtension("");
      assertEquals(false, boolean0);
  }

  @Test
  public void test63()  throws Throwable  {
      boolean boolean0 = Validator.isFileExtension("BZ1\"Q-oRv@0?9=G.jI\"");
      assertEquals(true, boolean0);
  }

  @Test
  public void test64()  throws Throwable  {
      boolean boolean0 = Validator.isFileExtension("\u0000");
      assertEquals(false, boolean0);
  }

  @Test
  public void test65()  throws Throwable  {
      boolean boolean0 = Validator.isFileExtension("/..");
      assertEquals(false, boolean0);
  }

  @Test
  public void test66()  throws Throwable  {
      boolean boolean0 = Validator.isFileName((String) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test67()  throws Throwable  {
      boolean boolean0 = Validator.isFileName("\u0000");
      assertEquals(false, boolean0);
  }

  @Test
  public void test68()  throws Throwable  {
      boolean boolean0 = Validator.isFileName("..");
      assertEquals(false, boolean0);
  }

  @Test
  public void test69()  throws Throwable  {
      boolean boolean0 = Validator.isFileName("</HTML>");
      assertEquals(false, boolean0);
  }

  @Test
  public void test70()  throws Throwable  {
      boolean boolean0 = Validator.isFileName("i.JRe5");
      assertEquals(true, boolean0);
  }

  @Test
  public void test71()  throws Throwable  {
      boolean boolean0 = Validator.isFilePath("BR", true);
      assertEquals(true, boolean0);
  }

  @Test
  public void test72()  throws Throwable  {
      boolean boolean0 = Validator.isFilePath("null", true);
      assertEquals(false, boolean0);
  }

  @Test
  public void test73()  throws Throwable  {
      boolean boolean0 = Validator.isFilePath("\u0000", true);
      assertEquals(false, boolean0);
  }

  @Test
  public void test74()  throws Throwable  {
      boolean boolean0 = Validator.isFilePath("<root />A", false);
      assertEquals(true, boolean0);
  }

  @Test
  public void test75()  throws Throwable  {
      boolean boolean0 = Validator.isFilePath("/..", false);
      assertEquals(false, boolean0);
  }

  @Test
  public void test76()  throws Throwable  {
      boolean boolean0 = Validator.isGregorianDate((-1516), (int) (byte)0, (-622));
      assertEquals(false, boolean0);
  }

  @Test
  public void test77()  throws Throwable  {
      boolean boolean0 = Validator.isGregorianDate(602, 602, Integer.MAX_VALUE);
      assertEquals(false, boolean0);
  }

  @Test
  public void test78()  throws Throwable  {
      boolean boolean0 = Validator.isDate(0, 1676, 0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test79()  throws Throwable  {
      boolean boolean0 = Validator.isDate(1, 1, 0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test80()  throws Throwable  {
      boolean boolean0 = Validator.isGregorianDate(1, (int) (short)107, (int) 'h');
      assertEquals(false, boolean0);
  }

  @Test
  public void test81()  throws Throwable  {
      boolean boolean0 = Validator.isGregorianDate(0, (-1), 0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test82()  throws Throwable  {
      boolean boolean0 = Validator.isDate(0, 1, 123);
      assertEquals(true, boolean0);
  }

  @Test
  public void test83()  throws Throwable  {
      boolean boolean0 = Validator.isHex((String) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test84()  throws Throwable  {
      boolean boolean0 = Validator.isHostName("");
      assertEquals(false, boolean0);
  }

  @Test
  public void test85()  throws Throwable  {
      boolean boolean0 = Validator.isHostName("-rqO=");
      assertEquals(false, boolean0);
  }

  @Test
  public void test86()  throws Throwable  {
      boolean boolean0 = Validator.isHostName(".</sp");
      assertEquals(false, boolean0);
  }

  @Test
  public void test87()  throws Throwable  {
      boolean boolean0 = Validator.isHostName("]1!#m9A?x#E6?}x");
      assertEquals(false, boolean0);
  }

  @Test
  public void test88()  throws Throwable  {
      boolean boolean0 = Validator.isHostName(":86+Zp35");
      assertEquals(false, boolean0);
  }

  @Test
  public void test89()  throws Throwable  {
      boolean boolean0 = Validator.isHostName("TJ-6$jTtc*.");
      assertEquals(false, boolean0);
  }

  @Test
  public void test90()  throws Throwable  {
      boolean boolean0 = Validator.isHostName("[$");
      assertEquals(false, boolean0);
  }

  @Test
  public void test91()  throws Throwable  {
      boolean boolean0 = Validator.isHostName("i.JRe5");
      assertEquals(true, boolean0);
  }

  @Test
  public void test92()  throws Throwable  {
      boolean boolean0 = Validator.isHTML("<HTML>");
      assertEquals(false, boolean0);
  }

  @Test
  public void test93()  throws Throwable  {
      boolean boolean0 = Validator.isHTML("");
      assertEquals(false, boolean0);
  }

  @Test
  public void test94()  throws Throwable  {
      boolean boolean0 = Validator.isHTML("A");
      assertEquals(false, boolean0);
  }

  @Test
  public void test95()  throws Throwable  {
      boolean boolean0 = Validator.isJulianDate((-1), (-1015), (-1));
      assertEquals(false, boolean0);
  }

  @Test
  public void test96()  throws Throwable  {
      boolean boolean0 = Validator.isJulianDate(6, 6, 6);
      assertEquals(true, boolean0);
  }

  @Test
  public void test97()  throws Throwable  {
      boolean boolean0 = Validator.isJulianDate((int) (short)42, (int) (short)42, (int) (short)42);
      assertEquals(false, boolean0);
  }

  @Test
  public void test98()  throws Throwable  {
      boolean boolean0 = Validator.isJulianDate(1, 1, 1833);
      assertEquals(true, boolean0);
  }

  @Test
  public void test99()  throws Throwable  {
      boolean boolean0 = Validator.isJulianDate(1, (int) '`', (-16));
      assertEquals(false, boolean0);
  }

  @Test
  public void test100()  throws Throwable  {
      boolean boolean0 = Validator.isJulianDate(1, 0, 15);
      assertEquals(false, boolean0);
  }

  @Test
  public void test101()  throws Throwable  {
      boolean boolean0 = Validator.isJulianDate(0, 0, 0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test102()  throws Throwable  {
      boolean boolean0 = Validator.isJulianDate(0, 1676, 1676);
      assertEquals(false, boolean0);
  }

  @Test
  public void test103()  throws Throwable  {
      boolean boolean0 = Validator.isLUHN((String) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test104()  throws Throwable  {
      boolean boolean0 = Validator.isLUHN("E4GaUj8R5#V&Zc");
      assertEquals(false, boolean0);
  }

  @Test
  public void test105()  throws Throwable  {
      boolean boolean0 = Validator.isLUHN("@");
      assertEquals(true, boolean0);
  }

  @Test
  public void test106()  throws Throwable  {
      boolean boolean0 = Validator.isName("null");
      assertEquals(false, boolean0);
  }

  @Test
  public void test107()  throws Throwable  {
      boolean boolean0 = Validator.isName("true");
      assertEquals(true, boolean0);
  }

  @Test
  public void test108()  throws Throwable  {
      Long long0 = new Long(0L);
      boolean boolean0 = Validator.isNotNull(long0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test109()  throws Throwable  {
      Long long0 = new Long((long) 134);
      boolean boolean0 = Validator.isNotNull(long0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test110()  throws Throwable  {
      boolean boolean0 = Validator.isNotNull((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test111()  throws Throwable  {
      boolean boolean0 = Validator.isNotNull((Object) "146");
      assertEquals(true, boolean0);
  }

  @Test
  public void test112()  throws Throwable  {
      boolean boolean0 = Validator.isNotNull((Object[]) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test113()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      boolean boolean0 = Validator.isNotNull(objectArray0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test114()  throws Throwable  {
      boolean boolean0 = Validator.isUrl((String) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test115()  throws Throwable  {
      boolean boolean0 = Validator.isNull((Long) null);
      assertEquals(true, boolean0);
  }

  @Test
  public void test116()  throws Throwable  {
      Long long0 = new Long((long) '9');
      boolean boolean0 = Validator.isNotNull((Object) long0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test117()  throws Throwable  {
      Object object0 = new Object();
      boolean boolean0 = Validator.isNotNull(object0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test118()  throws Throwable  {
      boolean boolean0 = Validator.isNotNull(" }");
      assertEquals(true, boolean0);
  }

  @Test
  public void test119()  throws Throwable  {
      boolean boolean0 = Validator.isHex("nag)N7Q1p?^");
      assertEquals(true, boolean0);
  }

  @Test
  public void test120()  throws Throwable  {
      boolean boolean0 = Validator.isNumber("t)%oTA3S+9TN()rod$");
      assertEquals(false, boolean0);
  }

  @Test
  public void test121()  throws Throwable  {
      boolean boolean0 = Validator.isPhoneNumber("i.JRe5");
      assertEquals(true, boolean0);
  }

  @Test
  public void test122()  throws Throwable  {
      boolean boolean0 = Validator.isPassword("$]");
      assertEquals(false, boolean0);
  }

  @Test
  public void test123()  throws Throwable  {
      boolean boolean0 = Validator.isPassword((String) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test124()  throws Throwable  {
      boolean boolean0 = Validator.isPassword("TJ-6$jTtc*.");
      assertEquals(false, boolean0);
  }

  @Test
  public void test125()  throws Throwable  {
      boolean boolean0 = Validator.isPassword("KkmU");
      assertEquals(true, boolean0);
  }

  @Test
  public void test126()  throws Throwable  {
      boolean boolean0 = Validator.isPassword("4>25CNSh");
      assertEquals(false, boolean0);
  }

  @Test
  public void test127()  throws Throwable  {
      boolean boolean0 = Validator.isUrl("<root />A");
      assertEquals(false, boolean0);
  }

  @Test
  public void test128()  throws Throwable  {
      boolean boolean0 = Validator.isUrl("wZ\"\"G,:");
      assertEquals(false, boolean0);
  }

  @Test
  public void test129()  throws Throwable  {
      boolean boolean0 = Validator.isVariableName("-rqO=");
      assertEquals(false, boolean0);
  }

  @Test
  public void test130()  throws Throwable  {
      boolean boolean0 = Validator.isVariableName("");
      assertEquals(false, boolean0);
  }

  @Test
  public void test131()  throws Throwable  {
      boolean boolean0 = Validator.isVariableName("true");
      assertEquals(true, boolean0);
  }

  @Test
  public void test132()  throws Throwable  {
      boolean boolean0 = Validator.isVariableTerm("98");
      assertEquals(false, boolean0);
  }

  @Test
  public void test133()  throws Throwable  {
      boolean boolean0 = Validator.isVariableTerm("[$");
      assertEquals(false, boolean0);
  }

  @Test
  public void test134()  throws Throwable  {
      boolean boolean0 = Validator.isWhitespace('\"');
      assertEquals(false, boolean0);
  }

  @Test
  public void test135()  throws Throwable  {
      boolean boolean0 = Validator.isWhitespace('\u001D');
      assertEquals(true, boolean0);
  }

  @Test
  public void test136()  throws Throwable  {
      boolean boolean0 = Validator.isXml("<?xml)");
      assertEquals(true, boolean0);
  }

  @Test
  public void test137()  throws Throwable  {
      boolean boolean0 = Validator.isXml("\u0000");
      assertEquals(false, boolean0);
  }

  @Test
  public void test138()  throws Throwable  {
      boolean boolean0 = Validator.isXml("<root />A");
      assertEquals(true, boolean0);
  }
}
