/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.servlet.filters.sso.opensso;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.servlet.filters.sso.opensso.OpenSSOUtil;
import java.io.IOException;
import java.util.Map;
import javax.servlet.http.HttpServletRequest;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class OpenSSOUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      boolean boolean0 = OpenSSOUtil.isValidUrl("fh_E/Lh*;{p.*jF#*!");
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[1];
      boolean boolean0 = OpenSSOUtil.isValidUrls(stringArray0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try {
        OpenSSOUtil.getSubjectId((HttpServletRequest) null, "fh_E/Lh*;{p.*jF#*!");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 0
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      boolean boolean0 = OpenSSOUtil.isValidServiceUrl("");
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      Map<String, String> map0 = OpenSSOUtil.getAttributes((HttpServletRequest) null, "fh_E/Lh*;{p.*jF#*!");
      assertEquals(0, map0.size());
  }

  @Test
  public void test5()  throws Throwable  {
      boolean boolean0 = OpenSSOUtil.isAuthenticated((HttpServletRequest) null, "fh_E/Lh*;{p.*jF#*!");
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      boolean boolean0 = OpenSSOUtil.isValidServiceUrl("j");
      assertEquals(false, boolean0);
  }
}
