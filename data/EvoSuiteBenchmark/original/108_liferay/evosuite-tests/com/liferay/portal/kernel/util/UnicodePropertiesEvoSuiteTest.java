/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.UnicodeProperties;
import java.io.IOException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UnicodePropertiesEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UnicodeProperties unicodeProperties0 = new UnicodeProperties();
      boolean boolean0 = unicodeProperties0.isSafe();
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      UnicodeProperties unicodeProperties0 = new UnicodeProperties(true);
      String string0 = unicodeProperties0.getProperty("f5", "f5");
      assertEquals(true, unicodeProperties0.isSafe());
      assertNotNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      UnicodeProperties unicodeProperties0 = new UnicodeProperties(true);
      int int0 = unicodeProperties0.getToStringLength();
      assertEquals(0, int0);
      assertEquals(true, unicodeProperties0.isSafe());
  }

  @Test
  public void test3()  throws Throwable  {
      UnicodeProperties unicodeProperties0 = new UnicodeProperties();
      unicodeProperties0.fastLoad("y=");
      assertEquals(false, unicodeProperties0.isEmpty());
      assertEquals("", unicodeProperties0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      UnicodeProperties unicodeProperties0 = new UnicodeProperties(true);
      unicodeProperties0.put("=`!U>:IPtrGrQN");
      String string0 = unicodeProperties0.toString();
      assertEquals(1, unicodeProperties0.size());
      assertEquals("=`!U>:IPtrGrQN\n", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      UnicodeProperties unicodeProperties0 = new UnicodeProperties();
      unicodeProperties0.fastLoad("");
      assertEquals(false, unicodeProperties0.isSafe());
  }

  @Test
  public void test6()  throws Throwable  {
      UnicodeProperties unicodeProperties0 = new UnicodeProperties();
      unicodeProperties0.fastLoad("#9Jc/Fsyp|0!LYQ*'AE=#9Jc/Fsyp|0!LYQ*'AE\n");
      assertEquals(false, unicodeProperties0.isSafe());
      assertEquals(true, unicodeProperties0.isEmpty());
      assertEquals(0, unicodeProperties0.size());
  }

  @Test
  public void test7()  throws Throwable  {
      UnicodeProperties unicodeProperties0 = new UnicodeProperties(true);
      unicodeProperties0.put("f5", "f5");
      unicodeProperties0.getProperty("f5", "f5");
      assertEquals(false, unicodeProperties0.isEmpty());
      assertEquals(6, unicodeProperties0.getToStringLength());
  }

  @Test
  public void test8()  throws Throwable  {
      UnicodeProperties unicodeProperties0 = new UnicodeProperties();
      unicodeProperties0.load("#9Jc/Fsyp|0!LYQ*'AE=#9Jc/Fsyp|0!LYQ*'AE\n");
      assertEquals(false, unicodeProperties0.isSafe());
      assertEquals("", unicodeProperties0.toString());
      assertEquals(0, unicodeProperties0.getToStringLength());
  }

  @Test
  public void test9()  throws Throwable  {
      UnicodeProperties unicodeProperties0 = new UnicodeProperties();
      unicodeProperties0.load((String) null);
      assertEquals(false, unicodeProperties0.isSafe());
  }

  @Test
  public void test10()  throws Throwable  {
      UnicodeProperties unicodeProperties0 = new UnicodeProperties();
      unicodeProperties0.load("r%6&\"D");
      assertEquals(false, unicodeProperties0.isSafe());
      assertEquals(0, unicodeProperties0.size());
  }

  @Test
  public void test11()  throws Throwable  {
      UnicodeProperties unicodeProperties0 = new UnicodeProperties();
      unicodeProperties0.setProperty((String) null, "#9Jc/Fsyp|0!LYQ*'AE");
      assertEquals(false, unicodeProperties0.isSafe());
      assertEquals(true, unicodeProperties0.isEmpty());
  }

  @Test
  public void test12()  throws Throwable  {
      UnicodeProperties unicodeProperties0 = new UnicodeProperties();
      unicodeProperties0.setProperty("F&@", (String) null);
      assertEquals(false, unicodeProperties0.isSafe());
      assertEquals(0, unicodeProperties0.getToStringLength());
      assertEquals("", unicodeProperties0.toString());
  }

  @Test
  public void test13()  throws Throwable  {
      UnicodeProperties unicodeProperties0 = new UnicodeProperties();
      unicodeProperties0.remove((Object) null);
      assertEquals(false, unicodeProperties0.isSafe());
  }

  @Test
  public void test14()  throws Throwable  {
      UnicodeProperties unicodeProperties0 = new UnicodeProperties();
      unicodeProperties0.put("F&@", "F&@");
      assertEquals("F&@=F&@\n", unicodeProperties0.toString());
      
      unicodeProperties0.setProperty("F&@", (String) null);
      assertEquals(0, unicodeProperties0.getToStringLength());
  }

  @Test
  public void test15()  throws Throwable  {
      UnicodeProperties unicodeProperties0 = new UnicodeProperties();
      unicodeProperties0.put("", "");
      String string0 = unicodeProperties0.toSortedString();
      assertEquals(false, unicodeProperties0.isEmpty());
      assertEquals("", string0);
  }

  @Test
  public void test16()  throws Throwable  {
      UnicodeProperties unicodeProperties0 = new UnicodeProperties();
      unicodeProperties0.put("#9Jc/Fsyp|0!LYQ*'AE", "#9Jc/Fsyp|0!LYQ*'AE");
      String string0 = unicodeProperties0.toSortedString();
      assertEquals(false, unicodeProperties0.isEmpty());
      assertEquals("#9Jc/Fsyp|0!LYQ*'AE=#9Jc/Fsyp|0!LYQ*'AE\n", string0);
  }

  @Test
  public void test17()  throws Throwable  {
      UnicodeProperties unicodeProperties0 = new UnicodeProperties(true);
      unicodeProperties0.put("f5", "f5");
      String string0 = unicodeProperties0.toSortedString();
      assertEquals(1, unicodeProperties0.size());
      assertEquals("f5=f5\n", string0);
  }

  @Test
  public void test18()  throws Throwable  {
      UnicodeProperties unicodeProperties0 = new UnicodeProperties();
      unicodeProperties0.put("", "");
      String string0 = unicodeProperties0.toString();
      assertEquals(false, unicodeProperties0.isEmpty());
      assertEquals("", string0);
  }

  @Test
  public void test19()  throws Throwable  {
      UnicodeProperties unicodeProperties0 = new UnicodeProperties();
      unicodeProperties0.put("#9Jc/Fsyp|0!LYQ*'AE", "#9Jc/Fsyp|0!LYQ*'AE");
      String string0 = unicodeProperties0.toString();
      assertEquals(1, unicodeProperties0.size());
      assertEquals("#9Jc/Fsyp|0!LYQ*'AE=#9Jc/Fsyp|0!LYQ*'AE\n", string0);
  }
}
