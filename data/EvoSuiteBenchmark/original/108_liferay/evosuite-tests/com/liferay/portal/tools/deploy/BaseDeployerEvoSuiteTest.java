/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.tools.deploy;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.caucho.vfs.FilePath;
import com.liferay.portal.kernel.deploy.auto.AutoDeployException;
import com.liferay.portal.kernel.deploy.auto.context.AutoDeploymentContext;
import com.liferay.portal.kernel.plugin.PluginPackage;
import com.liferay.portal.plugin.PluginPackageImpl;
import com.liferay.portal.tools.deploy.BaseDeployer;
import java.io.File;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BaseDeployerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      baseDeployer0.setBaseDir("T>9I:");
      // Undeclared exception!
      try {
        baseDeployer0.checkArguments();
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * The system property deployer.dest.dir is not set
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      // Undeclared exception!
      try {
        baseDeployer0.getExtraFiltersContent((double) (-1373L), (File) null);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * com/liferay/portal/deploy/DeployUtil
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      // Undeclared exception!
      try {
        baseDeployer0.autoDeploy((AutoDeploymentContext) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      baseDeployer0.setPortletTaglibDTD("anCtlr.jar");
      assertNull(baseDeployer0.getPluginType());
  }

  @Test
  public void test4()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      baseDeployer0.setTomcatLibDir("T>9I:");
      assertNull(baseDeployer0.getPluginType());
  }

  @Test
  public void test5()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      baseDeployer0.setPortletExtTaglibDTD("/");
      File file0 = new File("antr.jar");
      // Undeclared exception!
      try {
        baseDeployer0.getExtraContent(3.2, file0, "antr.jar");
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * com/liferay/portal/kernel/servlet/PortalClassLoaderServlet
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      String string0 = baseDeployer0.getPluginType();
      assertNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      // Undeclared exception!
      try {
        baseDeployer0.copyProperties((File) null, (PluginPackage) null);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsValues
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      // Undeclared exception!
      try {
        baseDeployer0.getInvokerFilterContent();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * com/liferay/portal/kernel/servlet/filters/invoker/InvokerFilter
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      baseDeployer0.setSecurityTaglibDTD("xb~D$hus7Kvz");
      assertNull(baseDeployer0.getPluginType());
  }

  @Test
  public void test10()  throws Throwable  {
      BaseDeployer baseDeployer0 = null;
      try {
        baseDeployer0 = new BaseDeployer((List<String>) null, (List<String>) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * The system property deployer.base.dir is not set
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      try {
        baseDeployer0.postDeployGlassfish("org.apache.axis.message.PCHandler", "org.apache.axis.message.PCHandler");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      baseDeployer0.updateDeployDirectory((File) null);
      assertNull(baseDeployer0.getPluginType());
  }

  @Test
  public void test13()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      baseDeployer0.setJbossPrefix((String) null);
      assertNull(baseDeployer0.getPluginType());
  }

  @Test
  public void test14()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      baseDeployer0.setUnpackWar(true);
      assertNull(baseDeployer0.getPluginType());
  }

  @Test
  public void test15()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      baseDeployer0.setAppServerType("jboss");
      try {
        baseDeployer0.postDeploy((String) null, "jboss");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      // Undeclared exception!
      try {
        baseDeployer0.isJEEDeploymentEnabled();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsUtil
         */
      }
  }

  @Test
  public void test17()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      baseDeployer0.setThemeTaglibDTD("anCtlr.jar");
      File file0 = new File("anCtlr.jar", "anCtlr.jar");
      // Undeclared exception!
      try {
        baseDeployer0.getExtraContent(48.0, file0, "anCtlr.jar");
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * com/liferay/portal/kernel/servlet/PortalClassLoaderServlet
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      File file0 = new File((String) null, "}");
      try {
        baseDeployer0.deployDirectory(file0, (String) null, true, (PluginPackage) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test19()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      // Undeclared exception!
      try {
        baseDeployer0.getDeploymentHandler();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsUtil
         */
      }
  }

  @Test
  public void test20()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      baseDeployer0.setWars((List<String>) null);
      assertNull(baseDeployer0.getPluginType());
  }

  @Test
  public void test21()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      baseDeployer0.setJars((List<String>) null);
      assertNull(baseDeployer0.getPluginType());
  }

  @Test
  public void test22()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      baseDeployer0.setAuiTaglibDTD("T");
      FilePath filePath0 = new FilePath("CZantlr.jar");
      File file0 = filePath0.getFile();
      // Undeclared exception!
      try {
        baseDeployer0.getExtraContent((-335.12018123497916), file0, "antlr.jar");
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * com/liferay/portal/kernel/servlet/PortalClassLoaderServlet
         */
      }
  }

  @Test
  public void test23()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      baseDeployer0.setFilePattern("N");
      assertNull(baseDeployer0.getPluginType());
  }

  @Test
  public void test24()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      baseDeployer0.addExtJar((List<String>) linkedList0, "/");
      assertNull(baseDeployer0.getPluginType());
  }

  @Test
  public void test25()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      // Undeclared exception!
      try {
        baseDeployer0.addRequiredJar((List<String>) null, "antlr.jar");
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * com/liferay/portal/deploy/DeployUtil
         */
      }
  }

  @Test
  public void test26()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      baseDeployer0.setDestDir("T>9I:");
      baseDeployer0.setBaseDir("T>9I:");
      // Undeclared exception!
      try {
        baseDeployer0.checkArguments();
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * The system property deployer.app.server.type is not set
         */
      }
  }

  @Test
  public void test27()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      File file0 = new File("", "");
      baseDeployer0.copyDtds(file0, (PluginPackage) null);
      assertEquals("/", file0.getPath());
  }

  @Test
  public void test28()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      File file0 = new File((String) null, "");
      baseDeployer0.copyPortalDependencies(file0);
      assertEquals("/mnt/fastdata/ac1gf/SF110/dist/108_liferay", file0.getCanonicalPath());
  }

  @Test
  public void test29()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      File file0 = new File((String) null, "");
      baseDeployer0.copyTlds(file0, (PluginPackage) null);
      assertEquals("", file0.toString());
  }

  @Test
  public void test30()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      baseDeployer0.setAppServerType("anCtlr.jar");
      File file0 = new File("anCtlr.jar", "anCtlr.jar");
      baseDeployer0.copyTomcatContextXml(file0);
      assertEquals(false, file0.exists());
  }

  @Test
  public void test31()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      baseDeployer0.setAppServerType("anCtlr.jar");
      File file0 = new File("anCtlr.jar", "anCtlr.jar");
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("<filter><filter-name>Invoker Filter - anCtlr.jar</filter-name><filter-class>com.liferay.portal.kernel.servlet.filters.invoker.InvokerFilter</filter-class><init-param><param-name>dispatcher</param-name><param-value>anCtlr.jar</param-value></init-param></filter><filter-mapping><filter-name>Invoker Filter - anCtlr.jar</filter-name><url-pattern>/*</url-pattern><dispatcher>anCtlr.jar</dispatcher></filter-mapping>");
      // Undeclared exception!
      try {
        baseDeployer0.copyXmls(file0, "anCtlr.jar", (PluginPackage) pluginPackageImpl0);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * com/liferay/portal/deploy/DeployUtil
         */
      }
  }

  @Test
  public void test32()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      // Undeclared exception!
      try {
        baseDeployer0.deployFile((File) null, (File) null, (File) null, "xb~D$hus7Kvz", true, (PluginPackage) null);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsValues
         */
      }
  }

  @Test
  public void test33()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      File file0 = new File("", "");
      // Undeclared exception!
      try {
        baseDeployer0.deployFile(file0, file0, file0, "", false, (PluginPackage) null);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsValues
         */
      }
  }

  @Test
  public void test34()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      File file0 = new File("K]Z!hd;8V1H2YqR", "K]Z!hd;8V1H2YqR");
      // Undeclared exception!
      try {
        baseDeployer0.deployFile(file0, file0, file0, "K]Z!hd;8V1H2YqR", false, (PluginPackage) null);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsValues
         */
      }
  }

  @Test
  public void test35()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      // Undeclared exception!
      try {
        baseDeployer0.downloadJar("tpN<0ql]2PWm8B");
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsUtil
         */
      }
  }

  @Test
  public void test36()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      String string0 = baseDeployer0.fixPortalDependencyJar("N");
      assertEquals("N", string0);
  }

  @Test
  public void test37()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      String string0 = baseDeployer0.fixPortalDependencyJar("antlr.jar");
      assertEquals("antlr2.jar", string0);
  }

  @Test
  public void test38()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      File file0 = new File("tpN<0ql]2PWm8B");
      baseDeployer0.setAppServerType("tpN<0ql]2PWm8B");
      String string0 = baseDeployer0.getDisplayName(file0);
      assertEquals("tpN<0ql]2PWm8B", string0);
      assertNotNull(string0);
  }

  @Test
  public void test39()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      File file0 = new File("tpN<0q]2PWm8B");
      // Undeclared exception!
      try {
        baseDeployer0.getExtraContent((double) 0L, file0, "tpN<0q]2PWm8B");
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * com/liferay/portal/kernel/servlet/PortalClassLoaderServlet
         */
      }
  }

  @Test
  public void test40()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      baseDeployer0.setUtilTaglibDTD("Xb2");
      File file0 = new File("pN<0l]2PW8B");
      // Undeclared exception!
      try {
        baseDeployer0.getExtraContent(3.2, file0, "pN<0l]2PW8B");
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * com/liferay/portal/kernel/servlet/PortalClassLoaderServlet
         */
      }
  }

  @Test
  public void test41()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      FilePath filePath0 = new FilePath("CZantlr.jar");
      File file0 = filePath0.getFile();
      baseDeployer0.setUiTaglibDTD("antlr.jar");
      // Undeclared exception!
      try {
        baseDeployer0.getExtraContent((-335.12018123497916), file0, "antlr.jar");
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * com/liferay/portal/kernel/servlet/PortalClassLoaderServlet
         */
      }
  }

  @Test
  public void test42()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      File file0 = new File("tpN<0ql]2PWm8B");
      // Undeclared exception!
      try {
        baseDeployer0.getIgnoreFiltersContent(file0);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * com/liferay/portal/deploy/DeployUtil
         */
      }
  }

  @Test
  public void test43()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      File file0 = new File("anCtlr.jar", "anCtlr.jar");
      String string0 = baseDeployer0.getServletContextIncludeFiltersContent(33.095971273377856, file0);
      assertEquals("", string0);
  }

  @Test
  public void test44()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      File file0 = new File((String) null, "");
      String string0 = baseDeployer0.getServletContextIncludeFiltersContent((-1.7976931348623157E308), file0);
      assertEquals("", string0);
  }

  @Test
  public void test45()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      File file0 = new File("ntlr.ar");
      // Undeclared exception!
      try {
        baseDeployer0.getSpeedFiltersContent(file0);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * com/liferay/portal/deploy/DeployUtil
         */
      }
  }

  @Test
  public void test46()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      baseDeployer0.mergeDirectory((File) null, (File) null);
      assertNull(baseDeployer0.getPluginType());
  }

  @Test
  public void test47()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      File file0 = new File("antr.jar");
      baseDeployer0.mergeDirectory(file0, file0);
      assertEquals(false, file0.isAbsolute());
  }

  @Test
  public void test48()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      baseDeployer0.setAppServerType("anCtlr.jar");
      baseDeployer0.postDeploy((String) null, "anCtlr.jar");
      assertNull(baseDeployer0.getPluginType());
  }

  @Test
  public void test49()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      // Undeclared exception!
      try {
        baseDeployer0.postDeployWebSphere("", "");
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsValues
         */
      }
  }

  @Test
  public void test50()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      File file0 = new File("T>9I:");
      Map<String, String> map0 = baseDeployer0.processPluginPackageProperties(file0, "T>9I:", (PluginPackage) null);
      assertNull(map0);
  }

  @Test
  public void test51()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      File file0 = new File("", "");
      PluginPackage pluginPackage0 = baseDeployer0.readPluginPackage(file0);
      assertNull(pluginPackage0);
  }

  @Test
  public void test52()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      File file0 = new File((String) null, "");
      PluginPackage pluginPackage0 = baseDeployer0.readPluginPackage(file0);
      assertNull(pluginPackage0);
  }

  @Test
  public void test53()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      try {
        baseDeployer0.secureWebXml((String) null, true, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test54()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      String string0 = baseDeployer0.secureWebXml("xb~D$hus7Kvz", false, false);
      assertNotNull(string0);
      assertEquals("xb~D$hus7Kvz", string0);
  }

  @Test
  public void test55()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      baseDeployer0.setAppServerType("anCtlr.jar");
      File file0 = new File("anCtlr.jar", "anCtlr.jar");
      PluginPackageImpl pluginPackageImpl0 = new PluginPackageImpl("<filter><filter-name>Invoker Filter - anCtlr.jar</filter-name><filter-class>com.liferay.portal.kernel.servlet.filters.invoker.InvokerFilter</filter-class><init-param><param-name>dispatcher</param-name><param-value>anCtlr.jar</param-value></init-param></filter><filter-mapping><filter-name>Invoker Filter - anCtlr.jar</filter-name><url-pattern>/*</url-pattern><dispatcher>anCtlr.jar</dispatcher></filter-mapping>");
      baseDeployer0.updateGeronimoWebXml(file0, "", (PluginPackage) pluginPackageImpl0);
      assertEquals("anCtlr.jar", file0.getParent());
  }

  @Test
  public void test56()  throws Throwable  {
      BaseDeployer baseDeployer0 = new BaseDeployer();
      try {
        baseDeployer0.updateLiferayWebXml((-1288.186016471071), (File) null, "<servlet><servlet-name>Dynamic Resource Servlet</servlet-name><servlet-class>com.liferay.portal.kernel.servlet.PortalClassLoaderServlet</servlet-class><init-param><param-name>servlet-class</param-name><param-value>com.liferay.portal.webserver.DynamicResourceServlet</param-value></init-param><load-on-startup>1</load-on-startup></servlet><servlet-mapping><servlet-name>Dynamic Resource Servlet</servlet-name><url-pattern>/sprite/*</url-pattern></servlet-mapping>");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
