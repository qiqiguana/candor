/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.bi.reporting;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.bi.reporting.ReportDataSourceType;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ReportDataSourceTypeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ReportDataSourceType reportDataSourceType0 = ReportDataSourceType.parse("csv");
      assertEquals(ReportDataSourceType.CSV, reportDataSourceType0);
  }

  @Test
  public void test1()  throws Throwable  {
      ReportDataSourceType reportDataSourceType0 = ReportDataSourceType.CSV;
      String string0 = reportDataSourceType0.toString();
      assertEquals("csv", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      ReportDataSourceType reportDataSourceType0 = ReportDataSourceType.parse("empty");
      assertEquals(ReportDataSourceType.EMPTY, reportDataSourceType0);
  }

  @Test
  public void test3()  throws Throwable  {
      ReportDataSourceType reportDataSourceType0 = ReportDataSourceType.parse("portal");
      assertEquals(ReportDataSourceType.PORTAL, reportDataSourceType0);
  }

  @Test
  public void test4()  throws Throwable  {
      ReportDataSourceType reportDataSourceType0 = ReportDataSourceType.parse("jdbc");
      assertEquals(ReportDataSourceType.JDBC, reportDataSourceType0);
  }

  @Test
  public void test5()  throws Throwable  {
      ReportDataSourceType reportDataSourceType0 = ReportDataSourceType.parse("xml");
      assertEquals(ReportDataSourceType.XML, reportDataSourceType0);
  }

  @Test
  public void test6()  throws Throwable  {
      ReportDataSourceType reportDataSourceType0 = ReportDataSourceType.parse("xls");
      assertEquals(ReportDataSourceType.XLS, reportDataSourceType0);
  }

  @Test
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try {
        ReportDataSourceType.parse((String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Invalid value null
         */
      }
  }
}
