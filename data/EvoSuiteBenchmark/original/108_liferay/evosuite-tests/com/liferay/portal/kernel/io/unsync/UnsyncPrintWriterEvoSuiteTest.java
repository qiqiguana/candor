/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portal.kernel.io.unsync;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.io.unsync.UnsyncPrintWriter;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Locale;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UnsyncPrintWriterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((OutputStream) byteArrayOutputStream0);
      unsyncPrintWriter0.println(383L);
      assertEquals(4, byteArrayOutputStream0.size());
      assertEquals(false, unsyncPrintWriter0.checkError());
  }

  @Test
  public void test1()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((OutputStream) byteArrayOutputStream0);
      unsyncPrintWriter0.println((double) '(');
      assertEquals(5, byteArrayOutputStream0.size());
      assertEquals("40.0\n", byteArrayOutputStream0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((OutputStream) byteArrayOutputStream0);
      char[] charArray0 = new char[5];
      unsyncPrintWriter0.println(charArray0);
      assertEquals(6, byteArrayOutputStream0.size());
      assertEquals("\u0000\u0000\u0000\u0000\u0000\n", byteArrayOutputStream0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(0);
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((Writer) stringWriter0);
      unsyncPrintWriter0.println(0);
      assertEquals("0\n", stringWriter0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((OutputStream) byteArrayOutputStream0);
      unsyncPrintWriter0.println('(');
      assertEquals(2, byteArrayOutputStream0.size());
      assertEquals("(\n", byteArrayOutputStream0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(0);
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((Writer) stringWriter0);
      unsyncPrintWriter0.append('3');
      assertEquals("3", stringWriter0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((OutputStream) null);
      // Undeclared exception!
      try {
        unsyncPrintWriter0.println(true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(0);
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((Writer) stringWriter0);
      unsyncPrintWriter0.println((float) '3');
      assertEquals("51.0\n", stringWriter0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) byteArrayOutputStream0);
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((OutputStream) dataOutputStream0);
      unsyncPrintWriter0.reset((Writer) unsyncPrintWriter0);
  }

  @Test
  public void test9()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(0);
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((Writer) stringWriter0);
      unsyncPrintWriter0.println((Object) "/mnt/fastdata/ac1gf/SF110/dist/108_liferay/Xu");
      assertEquals("/mnt/fastdata/ac1gf/SF110/dist/108_liferay/Xu\n", stringWriter0.toString());
      assertEquals(false, unsyncPrintWriter0.checkError());
  }

  @Test
  public void test10()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((OutputStream) byteArrayOutputStream0);
      Locale locale0 = new Locale("7^*");
      Object[] objectArray0 = new Object[2];
      unsyncPrintWriter0.printf(locale0, "7^*", objectArray0);
      assertEquals(3, byteArrayOutputStream0.size());
      assertEquals("7^*", byteArrayOutputStream0.toString());
  }

  @Test
  public void test11()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((OutputStream) byteArrayOutputStream0);
      unsyncPrintWriter0.append((CharSequence) null);
      assertEquals("null", byteArrayOutputStream0.toString());
      assertEquals(false, unsyncPrintWriter0.checkError());
  }

  @Test
  public void test12()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((OutputStream) byteArrayOutputStream0);
      // Undeclared exception!
      try {
        unsyncPrintWriter0.append((CharSequence) "\u4E2D\u6587 (\u4E2D\u56FD)", (int) '(', (int) '(');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: 40
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((OutputStream) pipedOutputStream0);
      // Undeclared exception!
      try {
        unsyncPrintWriter0.append((CharSequence) null, (-502), 1561);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: -502
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((OutputStream) byteArrayOutputStream0);
      unsyncPrintWriter0.close();
      boolean boolean0 = unsyncPrintWriter0.checkError();
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((OutputStream) byteArrayOutputStream0);
      boolean boolean0 = unsyncPrintWriter0.checkError();
      assertEquals(false, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(0);
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((Writer) stringWriter0);
      unsyncPrintWriter0.close();
      unsyncPrintWriter0.close();
      assertEquals(false, unsyncPrintWriter0.checkError());
  }

  @Test
  public void test17()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((OutputStream) byteArrayOutputStream0);
      unsyncPrintWriter0.close();
      assertEquals(false, unsyncPrintWriter0.checkError());
      
      unsyncPrintWriter0.flush();
      assertEquals(true, unsyncPrintWriter0.checkError());
  }

  @Test
  public void test18()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((OutputStream) byteArrayOutputStream0);
      unsyncPrintWriter0.close();
      Object[] objectArray0 = new Object[3];
      unsyncPrintWriter0.printf("s&,7", objectArray0);
      assertEquals(true, unsyncPrintWriter0.checkError());
  }

  @Test
  public void test19()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) byteArrayOutputStream0);
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((OutputStream) dataOutputStream0);
      Locale locale0 = Locale.UK;
      Object[] objectArray0 = new Object[10];
      unsyncPrintWriter0.format(")", objectArray0);
      unsyncPrintWriter0.format(locale0, ")", objectArray0);
      assertEquals(2, dataOutputStream0.size());
      assertEquals(false, unsyncPrintWriter0.checkError());
  }

  @Test
  public void test20()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((OutputStream) byteArrayOutputStream0);
      unsyncPrintWriter0.print(false);
      assertEquals(5, byteArrayOutputStream0.size());
      assertEquals(false, unsyncPrintWriter0.checkError());
  }

  @Test
  public void test21()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((OutputStream) pipedOutputStream0);
      unsyncPrintWriter0.print((String) null);
      assertEquals(true, unsyncPrintWriter0.checkError());
  }

  @Test
  public void test22()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((OutputStream) byteArrayOutputStream0);
      unsyncPrintWriter0.close();
      unsyncPrintWriter0.println("s&,7");
      assertEquals(true, unsyncPrintWriter0.checkError());
  }

  @Test
  public void test23()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((OutputStream) byteArrayOutputStream0);
      unsyncPrintWriter0.close();
      char[] charArray0 = new char[5];
      unsyncPrintWriter0.println(charArray0);
      assertEquals(true, unsyncPrintWriter0.checkError());
  }

  @Test
  public void test24()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(0);
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((Writer) stringWriter0);
      unsyncPrintWriter0.close();
      unsyncPrintWriter0.append('3');
      assertEquals(true, unsyncPrintWriter0.checkError());
      assertEquals("", stringWriter0.toString());
  }

  @Test
  public void test25()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((OutputStream) byteArrayOutputStream0);
      // Undeclared exception!
      try {
        unsyncPrintWriter0.write("s&,7", 883, (-1351));
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test26()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      UnsyncPrintWriter unsyncPrintWriter0 = new UnsyncPrintWriter((OutputStream) byteArrayOutputStream0);
      unsyncPrintWriter0.close();
      unsyncPrintWriter0.write("s&,7", 0, (-1351));
      assertEquals(true, unsyncPrintWriter0.checkError());
  }
}
