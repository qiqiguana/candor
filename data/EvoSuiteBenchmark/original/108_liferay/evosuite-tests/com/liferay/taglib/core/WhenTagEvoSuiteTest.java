/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.taglib.core;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.taglib.core.ChooseTag;
import com.liferay.taglib.core.WhenTag;
import javax.servlet.jsp.JspTagException;
import javax.servlet.jsp.tagext.Tag;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class WhenTagEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      WhenTag whenTag0 = new WhenTag();
      whenTag0.release();
      assertEquals(false, whenTag0.condition());
  }

  @Test
  public void test1()  throws Throwable  {
      WhenTag whenTag0 = new WhenTag();
      ChooseTag chooseTag0 = new ChooseTag();
      whenTag0.setParent((Tag) chooseTag0);
      int int0 = whenTag0.doStartTag();
      assertEquals(0, whenTag0.doStartTag());
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      WhenTag whenTag0 = new WhenTag();
      try {
        whenTag0.doStartTag();
        fail("Expecting exception: JspTagException");
      } catch(JspTagException e) {
        /*
         * The when tag must exist under a choose tag
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      WhenTag whenTag0 = new WhenTag();
      ChooseTag chooseTag0 = new ChooseTag();
      whenTag0.setParent((Tag) chooseTag0);
      chooseTag0.markRan();
      int int0 = whenTag0.doStartTag();
      assertEquals(0, whenTag0.doStartTag());
      assertEquals(0, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      WhenTag whenTag0 = new WhenTag();
      whenTag0.setTest(true);
      ChooseTag chooseTag0 = new ChooseTag();
      whenTag0.setParent((Tag) chooseTag0);
      int int0 = whenTag0.doStartTag();
      assertEquals(true, whenTag0.condition());
      assertEquals(0, int0);
  }
}
