/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.taglib.aui.base;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.taglib.aui.base.BaseToolTag;
import javax.servlet.jsp.JspException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BaseToolTagEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BaseToolTag baseToolTag0 = new BaseToolTag();
      String string0 = baseToolTag0.getPage();
      assertEquals("/html/taglib/aui/tool/page.jsp", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      BaseToolTag baseToolTag0 = new BaseToolTag();
      String string0 = baseToolTag0.getId();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      BaseToolTag baseToolTag0 = new BaseToolTag();
      baseToolTag0.cleanUp();
      assertNull(baseToolTag0.getIcon());
  }

  @Test
  public void test3()  throws Throwable  {
      BaseToolTag baseToolTag0 = new BaseToolTag();
      baseToolTag0.setHandler("KB^ksh_ddz@^OG(BC");
      assertEquals(6, baseToolTag0.doEndTag());
  }

  @Test
  public void test4()  throws Throwable  {
      BaseToolTag baseToolTag0 = new BaseToolTag();
      int int0 = baseToolTag0.doStartTag();
      assertEquals(0, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      BaseToolTag baseToolTag0 = new BaseToolTag();
      String string0 = baseToolTag0.getIcon();
      assertNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      BaseToolTag baseToolTag0 = new BaseToolTag();
      String string0 = baseToolTag0.getHandler();
      assertNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      BaseToolTag baseToolTag0 = new BaseToolTag();
      baseToolTag0.setId("KB^ksh_ddz@^OG(BC");
      assertEquals(0, baseToolTag0.doAfterBody());
  }

  @Test
  public void test8()  throws Throwable  {
      BaseToolTag baseToolTag0 = new BaseToolTag();
      baseToolTag0.setIcon("KB^ksh_ddz@^OG(BC");
      assertEquals("KB^ksh_ddz@^OG(BC", baseToolTag0.getIcon());
  }
}
