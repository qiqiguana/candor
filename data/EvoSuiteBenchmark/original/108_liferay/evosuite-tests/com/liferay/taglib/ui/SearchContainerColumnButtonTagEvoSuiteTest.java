/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.taglib.ui;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.taglib.ui.SearchContainerColumnButtonTag;
import com.liferay.taglib.ui.SearchContainerColumnTag;
import com.liferay.taglib.ui.SearchContainerRowTag;
import javax.servlet.jsp.JspException;
import javax.servlet.jsp.JspTagException;
import javax.servlet.jsp.tagext.Tag;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SearchContainerColumnButtonTagEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SearchContainerColumnButtonTag<SearchContainerColumnTag> searchContainerColumnButtonTag0 = new SearchContainerColumnButtonTag<SearchContainerColumnTag>();
      SearchContainerRowTag<String> searchContainerRowTag0 = new SearchContainerRowTag<String>();
      searchContainerColumnButtonTag0.setParent((Tag) searchContainerRowTag0);
      searchContainerColumnButtonTag0.setIndex(13);
      // Undeclared exception!
      try {
        searchContainerColumnButtonTag0.doEndTag();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      SearchContainerColumnButtonTag<SearchContainerColumnTag> searchContainerColumnButtonTag0 = new SearchContainerColumnButtonTag<SearchContainerColumnTag>();
      SearchContainerRowTag<String> searchContainerRowTag0 = new SearchContainerRowTag<String>();
      searchContainerColumnButtonTag0.setParent((Tag) searchContainerRowTag0);
      // Undeclared exception!
      try {
        searchContainerColumnButtonTag0.doEndTag();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      SearchContainerColumnButtonTag<SearchContainerColumnTag> searchContainerColumnButtonTag0 = new SearchContainerColumnButtonTag<SearchContainerColumnTag>();
      SearchContainerRowTag<String> searchContainerRowTag0 = new SearchContainerRowTag<String>();
      searchContainerColumnButtonTag0.setParent((Tag) searchContainerRowTag0);
      int int0 = searchContainerColumnButtonTag0.doStartTag();
      assertEquals(1, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      SearchContainerColumnButtonTag<Object> searchContainerColumnButtonTag0 = new SearchContainerColumnButtonTag<Object>();
      try {
        searchContainerColumnButtonTag0.doStartTag();
        fail("Expecting exception: JspTagException");
      } catch(JspTagException e) {
        /*
         * Requires liferay-ui:search-container-row
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      SearchContainerColumnButtonTag<SearchContainerColumnTag> searchContainerColumnButtonTag0 = new SearchContainerColumnButtonTag<SearchContainerColumnTag>();
      SearchContainerRowTag<String> searchContainerRowTag0 = new SearchContainerRowTag<String>();
      searchContainerColumnButtonTag0.setParent((Tag) searchContainerRowTag0);
      searchContainerRowTag0.setHeaderNamesAssigned(true);
      int int0 = searchContainerColumnButtonTag0.doStartTag();
      assertEquals(1, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      SearchContainerColumnButtonTag<SearchContainerColumnTag> searchContainerColumnButtonTag0 = new SearchContainerColumnButtonTag<SearchContainerColumnTag>();
      SearchContainerRowTag<String> searchContainerRowTag0 = new SearchContainerRowTag<String>();
      searchContainerColumnButtonTag0.setParent((Tag) searchContainerRowTag0);
      searchContainerColumnButtonTag0.setIndex(13);
      searchContainerColumnButtonTag0.setHref((Object) "chain");
      // Undeclared exception!
      try {
        searchContainerColumnButtonTag0.doEndTag();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
