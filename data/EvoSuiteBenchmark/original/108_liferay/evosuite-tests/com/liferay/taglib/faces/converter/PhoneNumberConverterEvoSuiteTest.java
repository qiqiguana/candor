/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.taglib.faces.converter;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.taglib.faces.converter.PhoneNumberConverter;
import com.sun.faces.context.FacesContextImpl;
import javax.faces.component.UIComponent;
import javax.faces.component.UIData;
import javax.faces.component.UIMessage;
import javax.faces.component.UIPanel;
import javax.faces.component.UISelectOne;
import javax.faces.context.FacesContext;
import javax.faces.convert.ConverterException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PhoneNumberConverterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PhoneNumberConverter phoneNumberConverter0 = new PhoneNumberConverter();
      Object object0 = phoneNumberConverter0.saveState((FacesContext) null);
      assertNotNull(object0);
  }

  @Test
  public void test1()  throws Throwable  {
      PhoneNumberConverter phoneNumberConverter0 = new PhoneNumberConverter();
      FacesContextImpl facesContextImpl0 = new FacesContextImpl();
      // Undeclared exception!
      try {
        phoneNumberConverter0.restoreState((FacesContext) facesContextImpl0, (Object) "208");
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * java.lang.String cannot be cast to [Ljava.lang.Object;
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      PhoneNumberConverter phoneNumberConverter0 = new PhoneNumberConverter();
      phoneNumberConverter0.setUnitedStatesFormat("adq.dda(dD-[k>:-}--`");
      assertEquals("adq.dda(dD-[k>:-}--`", phoneNumberConverter0.getUnitedStatesFormat());
  }

  @Test
  public void test3()  throws Throwable  {
      PhoneNumberConverter phoneNumberConverter0 = new PhoneNumberConverter();
      phoneNumberConverter0.setTransient(true);
      assertEquals(true, phoneNumberConverter0.isTransient());
  }

  @Test
  public void test4()  throws Throwable  {
      PhoneNumberConverter phoneNumberConverter0 = new PhoneNumberConverter();
      boolean boolean0 = phoneNumberConverter0.isTransient();
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      PhoneNumberConverter phoneNumberConverter0 = new PhoneNumberConverter();
      String string0 = phoneNumberConverter0.getUnitedStatesFormat();
      assertNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      PhoneNumberConverter phoneNumberConverter0 = new PhoneNumberConverter();
      UISelectOne uISelectOne0 = new UISelectOne();
      String string0 = phoneNumberConverter0.getAsString((FacesContext) null, (UIComponent) uISelectOne0, (Object) "type");
      assertEquals("type", string0);
  }

  @Test
  public void test7()  throws Throwable  {
      PhoneNumberConverter phoneNumberConverter0 = new PhoneNumberConverter();
      FacesContextImpl facesContextImpl0 = new FacesContextImpl();
      UIMessage uIMessage0 = new UIMessage();
      Object object0 = phoneNumberConverter0.getAsObject((FacesContext) facesContextImpl0, (UIComponent) uIMessage0, (String) null);
      assertNull(object0);
  }

  @Test
  public void test8()  throws Throwable  {
      PhoneNumberConverter phoneNumberConverter0 = new PhoneNumberConverter();
      String string0 = (String)phoneNumberConverter0.getAsObject((FacesContext) null, (UIComponent) null, "208");
      assertEquals("208", string0);
  }

  @Test
  public void test9()  throws Throwable  {
      PhoneNumberConverter phoneNumberConverter0 = new PhoneNumberConverter();
      UIPanel uIPanel0 = new UIPanel();
      // Undeclared exception!
      try {
        phoneNumberConverter0.getAsObject((FacesContext) null, (UIComponent) uIPanel0, "-e. C");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      PhoneNumberConverter phoneNumberConverter0 = new PhoneNumberConverter();
      UIData uIData0 = new UIData();
      // Undeclared exception!
      try {
        phoneNumberConverter0.getAsObject((FacesContext) null, (UIComponent) uIData0, "adq.dda(dD-[k>:-}--`");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      PhoneNumberConverter phoneNumberConverter0 = new PhoneNumberConverter();
      UISelectOne uISelectOne0 = new UISelectOne();
      // Undeclared exception!
      try {
        phoneNumberConverter0.getAsObject((FacesContext) null, (UIComponent) uISelectOne0, "H;0)RS}4oaqr{i$9+u");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
