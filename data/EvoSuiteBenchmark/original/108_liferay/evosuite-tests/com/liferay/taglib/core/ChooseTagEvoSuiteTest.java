/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.taglib.core;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.taglib.core.ChooseTag;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ChooseTagEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ChooseTag chooseTag0 = new ChooseTag();
      int int0 = chooseTag0.doStartTag();
      assertEquals(true, chooseTag0.canRun());
      assertEquals(1, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      ChooseTag chooseTag0 = new ChooseTag();
      chooseTag0.release();
      assertEquals(true, chooseTag0.canRun());
  }

  @Test
  public void test2()  throws Throwable  {
      ChooseTag chooseTag0 = new ChooseTag();
      chooseTag0.markRan();
      assertEquals(false, chooseTag0.canRun());
      
      boolean boolean0 = chooseTag0.canRun();
      assertEquals(true, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      ChooseTag chooseTag0 = new ChooseTag();
      boolean boolean0 = chooseTag0.canRun();
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      ChooseTag chooseTag0 = new ChooseTag();
      chooseTag0.markRan();
      // Undeclared exception!
      try {
        chooseTag0.markRan();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Another subtag has already run
         */
      }
      assertEquals(false, chooseTag0.canRun());
  }
}
