/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.taglib.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.taglib.util.PositionTagSupport;
import javax.servlet.jsp.PageContext;
import org.junit.BeforeClass;
import org.springframework.mock.web.MockPageContext;

@RunWith(EvoSuiteRunner.class)
public class PositionTagSupportEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PositionTagSupport positionTagSupport0 = new PositionTagSupport();
      positionTagSupport0.cleanUp();
      assertEquals(6, positionTagSupport0.doEndTag());
  }

  @Test
  public void test1()  throws Throwable  {
      PositionTagSupport positionTagSupport0 = new PositionTagSupport();
      MockPageContext mockPageContext0 = new MockPageContext();
      positionTagSupport0.setPageContext((PageContext) mockPageContext0);
      positionTagSupport0.setPosition("inline");
      positionTagSupport0.isPositionAuto();
  }

  @Test
  public void test2()  throws Throwable  {
      PositionTagSupport positionTagSupport0 = new PositionTagSupport();
      MockPageContext mockPageContext0 = new MockPageContext();
      positionTagSupport0.setPageContext((PageContext) mockPageContext0);
      positionTagSupport0.setPosition("auto");
      boolean boolean0 = positionTagSupport0.isPositionAuto();
      assertEquals(true, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      PositionTagSupport positionTagSupport0 = new PositionTagSupport();
      MockPageContext mockPageContext0 = new MockPageContext();
      positionTagSupport0.setPageContext((PageContext) mockPageContext0);
      positionTagSupport0.setPosition("auto");
      boolean boolean0 = positionTagSupport0.isPositionInLine();
      assertEquals("auto", positionTagSupport0.getPosition());
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      PositionTagSupport positionTagSupport0 = new PositionTagSupport();
      MockPageContext mockPageContext0 = new MockPageContext();
      positionTagSupport0.setPageContext((PageContext) mockPageContext0);
      positionTagSupport0.setPosition("inline");
      boolean boolean0 = positionTagSupport0.isPositionInLine();
      assertEquals(true, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      PositionTagSupport positionTagSupport0 = new PositionTagSupport();
      MockPageContext mockPageContext0 = new MockPageContext();
      positionTagSupport0.setPageContext((PageContext) mockPageContext0);
      // Undeclared exception!
      try {
        positionTagSupport0.isPositionInLine();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
