/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.taglib.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.taglib.util.ParamAndPropertyAncestorTagImpl;
import java.util.Map;
import java.util.Set;
import javax.servlet.ServletContext;
import javax.servlet.jsp.PageContext;
import org.junit.BeforeClass;
import org.springframework.mock.web.MockPageContext;

@RunWith(EvoSuiteRunner.class)
public class ParamAndPropertyAncestorTagImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ParamAndPropertyAncestorTagImpl paramAndPropertyAncestorTagImpl0 = new ParamAndPropertyAncestorTagImpl();
      boolean boolean0 = paramAndPropertyAncestorTagImpl0.isAllowEmptyParam();
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      ParamAndPropertyAncestorTagImpl paramAndPropertyAncestorTagImpl0 = new ParamAndPropertyAncestorTagImpl();
      Set<String> set0 = paramAndPropertyAncestorTagImpl0.getRemovedParameterNames();
      assertNull(set0);
  }

  @Test
  public void test2()  throws Throwable  {
      ParamAndPropertyAncestorTagImpl paramAndPropertyAncestorTagImpl0 = new ParamAndPropertyAncestorTagImpl();
      paramAndPropertyAncestorTagImpl0.setServletContext((ServletContext) null);
      assertEquals(0, paramAndPropertyAncestorTagImpl0.doAfterBody());
  }

  @Test
  public void test3()  throws Throwable  {
      ParamAndPropertyAncestorTagImpl paramAndPropertyAncestorTagImpl0 = new ParamAndPropertyAncestorTagImpl();
      paramAndPropertyAncestorTagImpl0.release();
      assertEquals(false, paramAndPropertyAncestorTagImpl0.isAllowEmptyParam());
  }

  @Test
  public void test4()  throws Throwable  {
      ParamAndPropertyAncestorTagImpl paramAndPropertyAncestorTagImpl0 = new ParamAndPropertyAncestorTagImpl();
      Map<String, String[]> map0 = paramAndPropertyAncestorTagImpl0.getProperties();
      assertNull(map0);
  }

  @Test
  public void test5()  throws Throwable  {
      ParamAndPropertyAncestorTagImpl paramAndPropertyAncestorTagImpl0 = new ParamAndPropertyAncestorTagImpl();
      MockPageContext mockPageContext0 = new MockPageContext();
      paramAndPropertyAncestorTagImpl0.setPageContext((PageContext) mockPageContext0);
      paramAndPropertyAncestorTagImpl0.addParam("", "");
      paramAndPropertyAncestorTagImpl0.addParam("", "");
  }

  @Test
  public void test6()  throws Throwable  {
      ParamAndPropertyAncestorTagImpl paramAndPropertyAncestorTagImpl0 = new ParamAndPropertyAncestorTagImpl();
      MockPageContext mockPageContext0 = new MockPageContext();
      paramAndPropertyAncestorTagImpl0.setPageContext((PageContext) mockPageContext0);
      paramAndPropertyAncestorTagImpl0.setAllowEmptyParam(true);
      paramAndPropertyAncestorTagImpl0.addParam("qEQbR+0iovoV!J)q?", "qEQbR+0iovoV!J)q?");
      assertEquals(true, paramAndPropertyAncestorTagImpl0.isAllowEmptyParam());
  }

  @Test
  public void test7()  throws Throwable  {
      ParamAndPropertyAncestorTagImpl paramAndPropertyAncestorTagImpl0 = new ParamAndPropertyAncestorTagImpl();
      MockPageContext mockPageContext0 = new MockPageContext();
      paramAndPropertyAncestorTagImpl0.setPageContext((PageContext) mockPageContext0);
      paramAndPropertyAncestorTagImpl0.addParam("qEQbR+0i@ovoV!J)(q?", (String) null);
      paramAndPropertyAncestorTagImpl0.clearParams();
      assertEquals(0, paramAndPropertyAncestorTagImpl0.doAfterBody());
  }

  @Test
  public void test8()  throws Throwable  {
      ParamAndPropertyAncestorTagImpl paramAndPropertyAncestorTagImpl0 = new ParamAndPropertyAncestorTagImpl();
      MockPageContext mockPageContext0 = new MockPageContext();
      paramAndPropertyAncestorTagImpl0.setPageContext((PageContext) mockPageContext0);
      paramAndPropertyAncestorTagImpl0.addParam("qEQbR+0iovoV!J)q?", "qEQbR+0iovoV!J)q?");
      paramAndPropertyAncestorTagImpl0.addParam("qEQbR+0iovoV!J)q?", "qEQbR+0iovoV!J)q?");
      assertEquals(6, paramAndPropertyAncestorTagImpl0.doEndTag());
  }

  @Test
  public void test9()  throws Throwable  {
      ParamAndPropertyAncestorTagImpl paramAndPropertyAncestorTagImpl0 = new ParamAndPropertyAncestorTagImpl();
      paramAndPropertyAncestorTagImpl0.addProperty(" yK:\"-;(k9dLA2Hf+", " yK:\"-;(k9dLA2Hf+");
      paramAndPropertyAncestorTagImpl0.addProperty(" yK:\"-;(k9dLA2Hf+", " yK:\"-;(k9dLA2Hf+");
      assertEquals(false, paramAndPropertyAncestorTagImpl0.isAllowEmptyParam());
  }

  @Test
  public void test10()  throws Throwable  {
      ParamAndPropertyAncestorTagImpl paramAndPropertyAncestorTagImpl0 = new ParamAndPropertyAncestorTagImpl();
      paramAndPropertyAncestorTagImpl0.clearParams();
      assertEquals(6, paramAndPropertyAncestorTagImpl0.doEndTag());
  }

  @Test
  public void test11()  throws Throwable  {
      ParamAndPropertyAncestorTagImpl paramAndPropertyAncestorTagImpl0 = new ParamAndPropertyAncestorTagImpl();
      paramAndPropertyAncestorTagImpl0.clearProperties();
      assertEquals(6, paramAndPropertyAncestorTagImpl0.doEndTag());
  }

  @Test
  public void test12()  throws Throwable  {
      ParamAndPropertyAncestorTagImpl paramAndPropertyAncestorTagImpl0 = new ParamAndPropertyAncestorTagImpl();
      paramAndPropertyAncestorTagImpl0.addProperty(" yK:\"-;(k9dLA2Hf+", " yK:\"-;(k9dLA2Hf+");
      paramAndPropertyAncestorTagImpl0.clearProperties();
      assertEquals(2, paramAndPropertyAncestorTagImpl0.doStartTag());
  }

  @Test
  public void test13()  throws Throwable  {
      ParamAndPropertyAncestorTagImpl paramAndPropertyAncestorTagImpl0 = new ParamAndPropertyAncestorTagImpl();
      Map<String, String[]> map0 = paramAndPropertyAncestorTagImpl0.getParams();
      assertNull(map0);
  }

  @Test
  public void test14()  throws Throwable  {
      ParamAndPropertyAncestorTagImpl paramAndPropertyAncestorTagImpl0 = new ParamAndPropertyAncestorTagImpl();
      MockPageContext mockPageContext0 = new MockPageContext();
      paramAndPropertyAncestorTagImpl0.setPageContext((PageContext) mockPageContext0);
      paramAndPropertyAncestorTagImpl0.addParam("qEQbR+0iovoV!J)q?", "qEQbR+0iovoV!J)q?");
      Map<String, String[]> map0 = paramAndPropertyAncestorTagImpl0.getParams();
      assertEquals(1, map0.size());
      assertNotNull(map0);
  }
}
