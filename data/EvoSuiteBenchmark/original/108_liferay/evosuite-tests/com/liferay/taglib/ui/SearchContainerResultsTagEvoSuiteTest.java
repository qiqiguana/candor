/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.taglib.ui;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.taglib.ui.SearchContainerResultsTag;
import com.liferay.taglib.ui.SearchContainerTag;
import java.util.LinkedList;
import java.util.List;
import javax.servlet.jsp.JspException;
import javax.servlet.jsp.JspTagException;
import javax.servlet.jsp.tagext.TagSupport;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SearchContainerResultsTagEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SearchContainerResultsTag<List<TagSupport>> searchContainerResultsTag0 = new SearchContainerResultsTag<List<TagSupport>>();
      int int0 = searchContainerResultsTag0.getTotal();
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      SearchContainerResultsTag<SearchContainerTag<String>> searchContainerResultsTag0 = new SearchContainerResultsTag<SearchContainerTag<String>>();
      searchContainerResultsTag0.setResultsVar("7");
      assertNull(searchContainerResultsTag0.getId());
  }

  @Test
  public void test2()  throws Throwable  {
      SearchContainerResultsTag<List<TagSupport>> searchContainerResultsTag0 = new SearchContainerResultsTag<List<TagSupport>>();
      searchContainerResultsTag0.setTotalVar("Requires lw' > 0.0.");
      assertEquals("results", searchContainerResultsTag0.getResultsVar());
  }

  @Test
  public void test3()  throws Throwable  {
      SearchContainerResultsTag<List<Object>> searchContainerResultsTag0 = new SearchContainerResultsTag<List<Object>>();
      String string0 = searchContainerResultsTag0.getTotalVar();
      assertNotNull(string0);
      assertEquals("total", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      SearchContainerResultsTag<List<TagSupport>> searchContainerResultsTag0 = new SearchContainerResultsTag<List<TagSupport>>();
      String string0 = searchContainerResultsTag0.getResultsVar();
      assertEquals("results", string0);
      assertNotNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      SearchContainerResultsTag<String> searchContainerResultsTag0 = new SearchContainerResultsTag<String>();
      List<String> list0 = searchContainerResultsTag0.getResults();
      assertNull(list0);
  }

  @Test
  public void test6()  throws Throwable  {
      SearchContainerResultsTag<String> searchContainerResultsTag0 = new SearchContainerResultsTag<String>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      searchContainerResultsTag0.setResults((List<String>) linkedList0);
      try {
        searchContainerResultsTag0.doEndTag();
        fail("Expecting exception: JspException");
      } catch(JspException e) {
        /*
         * java.lang.NullPointerException
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      SearchContainerResultsTag<List<Object>> searchContainerResultsTag0 = new SearchContainerResultsTag<List<Object>>();
      searchContainerResultsTag0.setTotal((-9));
      assertEquals(-9, searchContainerResultsTag0.getTotal());
  }

  @Test
  public void test8()  throws Throwable  {
      SearchContainerResultsTag<List<TagSupport>> searchContainerResultsTag0 = new SearchContainerResultsTag<List<TagSupport>>();
      try {
        searchContainerResultsTag0.doEndTag();
        fail("Expecting exception: JspException");
      } catch(JspException e) {
        /*
         * java.lang.NullPointerException
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      SearchContainerResultsTag<String> searchContainerResultsTag0 = new SearchContainerResultsTag<String>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      searchContainerResultsTag0.setResults((List<String>) linkedList0);
      linkedList0.add("The format of the specified computer name is invalid.");
      try {
        searchContainerResultsTag0.doEndTag();
        fail("Expecting exception: JspException");
      } catch(JspException e) {
        /*
         * java.lang.NullPointerException
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      SearchContainerResultsTag<SearchContainerTag<Object>> searchContainerResultsTag0 = new SearchContainerResultsTag<SearchContainerTag<Object>>();
      try {
        searchContainerResultsTag0.doStartTag();
        fail("Expecting exception: JspTagException");
      } catch(JspTagException e) {
        /*
         * Requires liferay-ui:search-container
         */
      }
  }
}
