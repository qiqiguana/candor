/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.taglib.aui;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.taglib.aui.AUIUtil;
import java.util.HashMap;
import java.util.Map;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AUIUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AUIUtil aUIUtil0 = new AUIUtil();
      assertNotNull(aUIUtil0);
  }

  @Test
  public void test1()  throws Throwable  {
      String string0 = AUIUtil.buildCss("textarea", "textarea", false, false, false, true, true, "d!Iwo0{@sW)|3Y");
      assertEquals("textarea textarea-text textarea-first d!Iwo0{@sW)|3Y", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      String string0 = AUIUtil.buildCss("button", "button", false, true, false, true, false, "button");
      assertEquals("button button-disabled button-first button", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      String string0 = AUIUtil.buildCss((String) null, "password", false, false, false, false, false, (String) null);
      assertNotNull(string0);
      assertEquals("null null-text", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      String string0 = AUIUtil.buildCss("string", "string", false, false, false, true, true, "string");
      assertEquals("string string-text string-first string", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      String string0 = AUIUtil.buildCss("8ulk", "8ulk", true, true, false, true, true, "8ulk");
      assertEquals("8ulk 8ulk-8ulk 8ulk-inline 8ulk-disabled 8ulk-first 8ulk", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      String string0 = AUIUtil.buildCss("", "select", false, true, false, false, false, "");
      assertEquals(" -select -menu -disabled", string0);
  }

  @Test
  public void test7()  throws Throwable  {
      String string0 = AUIUtil.buildCss(":s@bG:ki:;Dk4H", "class=\"aui-choice-label\" for=\":s@bG:ki:;Dk4H\"", true, false, true, false, true, "class=\"aui-choice-label\" for=\":s@bG:ki:;Dk4H\"");
      assertNotNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      String string0 = AUIUtil.buildData((Map<String, Object>) null);
      assertEquals("", string0);
  }

  @Test
  public void test9()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      String string0 = AUIUtil.buildData((Map<String, Object>) hashMap0);
      assertEquals("", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("", (Object) "class=\"aui-field-label\"");
      String string0 = AUIUtil.buildData((Map<String, Object>) hashMap0);
      assertNotNull(string0);
      assertEquals("data-=\"class=\"aui-field-label\"\" ", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      String string0 = AUIUtil.buildLabel("", false, "");
      assertNotNull(string0);
      assertEquals("class=\"aui-field-label\"", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      String string0 = AUIUtil.buildLabel("textarea", true, "textarea", true);
      assertNotNull(string0);
      assertEquals("class=\"aui-choice-label\" for=\"textarea\"", string0);
  }

  @Test
  public void test13()  throws Throwable  {
      String string0 = AUIUtil.buildLabel("4?(M6&'Vg", false, "4?(M6&'Vg");
      assertNotNull(string0);
      assertEquals("class=\"aui-field-label-inline-label\"", string0);
  }
}
