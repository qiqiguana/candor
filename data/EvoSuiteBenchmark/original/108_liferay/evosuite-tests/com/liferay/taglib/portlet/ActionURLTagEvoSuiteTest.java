/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.taglib.portlet;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.taglib.portlet.ActionURLTag;
import java.util.Map;
import java.util.Set;
import javax.servlet.ServletContext;
import javax.servlet.jsp.JspException;
import javax.servlet.jsp.PageContext;
import org.junit.BeforeClass;
import org.springframework.mock.web.MockPageContext;

@RunWith(EvoSuiteRunner.class)
public class ActionURLTagEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ActionURLTag actionURLTag0 = new ActionURLTag();
      actionURLTag0.setPortletMode("L");
      assertEquals(0, actionURLTag0.doAfterBody());
  }

  @Test
  public void test1()  throws Throwable  {
      ActionURLTag actionURLTag0 = new ActionURLTag();
      actionURLTag0.setCopyCurrentRenderParameters(false);
      assertEquals(1, actionURLTag0.doStartTag());
  }

  @Test
  public void test2()  throws Throwable  {
      ActionURLTag actionURLTag0 = new ActionURLTag();
      actionURLTag0.setSecure(true);
      assertEquals(1, actionURLTag0.doStartTag());
  }

  @Test
  public void test3()  throws Throwable  {
      ActionURLTag actionURLTag0 = new ActionURLTag();
      actionURLTag0.setCacheability("iconImage");
      assertEquals(1, actionURLTag0.doStartTag());
  }

  @Test
  public void test4()  throws Throwable  {
      ActionURLTag actionURLTag0 = new ActionURLTag();
      actionURLTag0.setId("iconImage");
      assertEquals(1, actionURLTag0.doStartTag());
  }

  @Test
  public void test5()  throws Throwable  {
      ActionURLTag actionURLTag0 = new ActionURLTag();
      actionURLTag0.setDoAsUserId(0L);
      assertEquals(1, actionURLTag0.doStartTag());
  }

  @Test
  public void test6()  throws Throwable  {
      ActionURLTag actionURLTag0 = new ActionURLTag();
      actionURLTag0.setPortletName((String) null);
      assertEquals(1, actionURLTag0.doStartTag());
  }

  @Test
  public void test7()  throws Throwable  {
      ActionURLTag actionURLTag0 = new ActionURLTag();
      actionURLTag0.setPortletConfiguration(false);
      assertEquals("ACTION_PHASE", actionURLTag0.getLifecycle());
  }

  @Test
  public void test8()  throws Throwable  {
      ActionURLTag actionURLTag0 = new ActionURLTag();
      actionURLTag0.setDoAsGroupId((-353L));
      assertEquals("ACTION_PHASE", actionURLTag0.getLifecycle());
  }

  @Test
  public void test9()  throws Throwable  {
      ActionURLTag actionURLTag0 = new ActionURLTag();
      actionURLTag0.setAnchor(true);
      assertEquals(0, actionURLTag0.doAfterBody());
  }

  @Test
  public void test10()  throws Throwable  {
      ActionURLTag actionURLTag0 = new ActionURLTag();
      actionURLTag0.setRefererPlid((-353L));
      assertEquals("ACTION_PHASE", actionURLTag0.getLifecycle());
  }

  @Test
  public void test11()  throws Throwable  {
      ActionURLTag actionURLTag0 = new ActionURLTag();
      actionURLTag0.setWindowState("pB%:_");
      assertEquals("ACTION_PHASE", actionURLTag0.getLifecycle());
  }

  @Test
  public void test12()  throws Throwable  {
      ActionURLTag actionURLTag0 = new ActionURLTag();
      actionURLTag0.setEncrypt(false);
      assertEquals("ACTION_PHASE", actionURLTag0.getLifecycle());
  }

  @Test
  public void test13()  throws Throwable  {
      ActionURLTag actionURLTag0 = new ActionURLTag();
      actionURLTag0.setVar("|");
      assertEquals(0, actionURLTag0.doAfterBody());
  }

  @Test
  public void test14()  throws Throwable  {
      ActionURLTag actionURLTag0 = new ActionURLTag();
      actionURLTag0.setName("iconImage");
      assertEquals("ACTION_PHASE", actionURLTag0.getLifecycle());
  }

  @Test
  public void test15()  throws Throwable  {
      ActionURLTag actionURLTag0 = new ActionURLTag();
      actionURLTag0.setVarImpl("iconImage");
      assertEquals(1, actionURLTag0.doStartTag());
  }

  @Test
  public void test16()  throws Throwable  {
      ActionURLTag actionURLTag0 = new ActionURLTag();
      int int0 = actionURLTag0.doStartTag();
      assertEquals(1, int0);
  }

  @Test
  public void test17()  throws Throwable  {
      ActionURLTag actionURLTag0 = new ActionURLTag();
      actionURLTag0.setEscapeXml(true);
      assertEquals("ACTION_PHASE", actionURLTag0.getLifecycle());
  }

  @Test
  public void test18()  throws Throwable  {
      ActionURLTag actionURLTag0 = new ActionURLTag();
      actionURLTag0.setPlid(0L);
      assertEquals(false, actionURLTag0.isAllowEmptyParam());
  }

  @Test
  public void test19()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      MockPageContext mockPageContext0 = new MockPageContext((ServletContext) null);
      ActionURLTag.doTag(">9~+[Q", ">9~+[Q", ">9~+[Q", "ACTION_PHASE", ">9~+[Q", boolean0, boolean0, boolean0, "ACTION_PHASE", ">9~+[Q", "ACTION_PHASE", 0L, 0L, ">9~+[Q", boolean0, boolean0, 0L, 0L, boolean0, (Map<String, String[]>) null, (Set<String>) null, (PageContext) mockPageContext0);
  }

  @Test
  public void test20()  throws Throwable  {
      ActionURLTag actionURLTag0 = new ActionURLTag();
      MockPageContext mockPageContext0 = new MockPageContext((ServletContext) null);
      actionURLTag0.setPageContext((PageContext) mockPageContext0);
      int int0 = actionURLTag0.doEndTag();
      assertEquals(6, int0);
      assertEquals("ACTION_PHASE", actionURLTag0.getLifecycle());
  }
}
