/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.taglib.ui;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import ch.qos.logback.classic.encoder.PatternLayoutEncoder;
import com.liferay.taglib.ui.ErrorTag;
import javax.servlet.jsp.JspException;
import javax.servlet.jsp.PageContext;
import org.junit.BeforeClass;
import org.springframework.mock.web.MockPageContext;

@RunWith(EvoSuiteRunner.class)
public class ErrorTagEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ErrorTag errorTag0 = new ErrorTag();
      errorTag0.setStartPage("Wl_k<[Y1N&6}^");
      String string0 = errorTag0.getStartPage();
      assertEquals("Wl_k<[Y1N&6}^", errorTag0.getStartPage());
      assertEquals("Wl_k<[Y1N&6}^", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      ErrorTag errorTag0 = new ErrorTag();
      // Undeclared exception!
      try {
        errorTag0.setRowBreak("/html/taglib/ui/error/start.jsp");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ErrorTag errorTag0 = new ErrorTag();
      errorTag0.setEndPage("e/,e<n&:9$B");
      String string0 = errorTag0.getEndPage();
      assertEquals("e/,e<n&:9$B", errorTag0.getEndPage());
      assertEquals("e/,e<n&:9$B", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      ErrorTag errorTag0 = new ErrorTag();
      errorTag0.setTranslateMessage(true);
      assertEquals("/html/taglib/ui/error/end.jsp", errorTag0.getEndPage());
  }

  @Test
  public void test4()  throws Throwable  {
      ErrorTag errorTag0 = new ErrorTag();
      MockPageContext mockPageContext0 = new MockPageContext();
      errorTag0.setPageContext((PageContext) mockPageContext0);
      errorTag0.setKey("/html/taglib/ui/error/end.jsp");
      try {
        errorTag0.doEndTag();
        fail("Expecting exception: JspException");
      } catch(JspException e) {
        /*
         * java.lang.NullPointerException
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      ErrorTag errorTag0 = new ErrorTag();
      MockPageContext mockPageContext0 = new MockPageContext();
      errorTag0.setPageContext((PageContext) mockPageContext0);
      try {
        errorTag0.doEndTag();
        fail("Expecting exception: JspException");
      } catch(JspException e) {
        /*
         * java.lang.NullPointerException
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      ErrorTag errorTag0 = new ErrorTag();
      MockPageContext mockPageContext0 = new MockPageContext();
      errorTag0.setPageContext((PageContext) mockPageContext0);
      try {
        errorTag0.doStartTag();
        fail("Expecting exception: JspException");
      } catch(JspException e) {
        /*
         * java.lang.NullPointerException
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      ErrorTag errorTag0 = new ErrorTag();
      MockPageContext mockPageContext0 = new MockPageContext();
      errorTag0.setMessage("voundF");
      errorTag0.setPageContext((PageContext) mockPageContext0);
      int int0 = errorTag0.doStartTag();
      assertEquals(0, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      ErrorTag errorTag0 = new ErrorTag();
      errorTag0.setException((Class<?>) null);
      assertEquals("/html/taglib/ui/error/start.jsp", errorTag0.getStartPage());
  }

  @Test
  public void test9()  throws Throwable  {
      ErrorTag errorTag0 = new ErrorTag();
      Class<?> class0 = PatternLayoutEncoder.class;
      errorTag0.setException(class0);
      assertEquals(0, errorTag0.doAfterBody());
  }

  @Test
  public void test10()  throws Throwable  {
      ErrorTag errorTag0 = new ErrorTag();
      String string0 = errorTag0.getEndPage();
      assertNotNull(string0);
      assertEquals("/html/taglib/ui/error/end.jsp", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      ErrorTag errorTag0 = new ErrorTag();
      String string0 = errorTag0.getStartPage();
      assertEquals("/html/taglib/ui/error/start.jsp", string0);
      assertNotNull(string0);
  }
}
