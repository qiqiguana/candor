/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.taglib.portletext;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.taglib.portletext.RuntimeTag;
import groovy.servlet.GroovyServlet;
import javax.servlet.ServletConfig;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.jsp.JspException;
import javax.servlet.jsp.PageContext;
import org.junit.BeforeClass;
import org.springframework.mock.web.MockPageContext;

@RunWith(EvoSuiteRunner.class)
public class RuntimeTagEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try {
        RuntimeTag.doTag("T,Lzi(9|* [K&ebAN", (PageContext) null, (HttpServletRequest) null, (HttpServletResponse) null);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.kernel.portlet.RestrictPortletServletRequest
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      RuntimeTag runtimeTag0 = new RuntimeTag();
      runtimeTag0.setDefaultPreferences("T,Lzi(9|* [K&ebAN");
      assertEquals(0, runtimeTag0.doStartTag());
  }

  @Test
  public void test2()  throws Throwable  {
      RuntimeTag runtimeTag0 = new RuntimeTag();
      runtimeTag0.setQueryString("");
      assertEquals(0, runtimeTag0.doStartTag());
  }

  @Test
  public void test3()  throws Throwable  {
      RuntimeTag runtimeTag0 = new RuntimeTag();
      runtimeTag0.setPortletName("");
      assertEquals(0, runtimeTag0.doAfterBody());
  }

  @Test
  public void test4()  throws Throwable  {
      GroovyServlet groovyServlet0 = new GroovyServlet();
      MockPageContext mockPageContext0 = new MockPageContext((ServletContext) null, (HttpServletRequest) null, (HttpServletResponse) null, (ServletConfig) groovyServlet0);
      try {
        RuntimeTag.doTag("", "", (PageContext) mockPageContext0, (HttpServletRequest) null, (HttpServletResponse) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Response cannot be null
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      RuntimeTag runtimeTag0 = new RuntimeTag();
      MockPageContext mockPageContext0 = new MockPageContext();
      runtimeTag0.setPageContext((PageContext) mockPageContext0);
      int int0 = runtimeTag0.doEndTag();
      assertEquals(6, int0);
  }
}
