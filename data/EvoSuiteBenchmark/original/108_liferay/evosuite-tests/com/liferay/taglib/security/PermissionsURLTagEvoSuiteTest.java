/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.taglib.security;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.taglib.security.PermissionsURLTag;
import javax.servlet.jsp.JspException;
import javax.servlet.jsp.PageContext;
import org.junit.BeforeClass;
import org.springframework.mock.web.MockPageContext;

@RunWith(EvoSuiteRunner.class)
public class PermissionsURLTagEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PermissionsURLTag permissionsURLTag0 = new PermissionsURLTag();
      permissionsURLTag0.setModelResourceDescription("s;UyZ@BF");
      assertEquals(0, permissionsURLTag0.doStartTag());
  }

  @Test
  public void test1()  throws Throwable  {
      PermissionsURLTag permissionsURLTag0 = new PermissionsURLTag();
      permissionsURLTag0.setWindowState("7eh=hnRZ3Cm{59l1,");
      assertEquals(0, permissionsURLTag0.doAfterBody());
  }

  @Test
  public void test2()  throws Throwable  {
      PermissionsURLTag permissionsURLTag0 = new PermissionsURLTag();
      permissionsURLTag0.setVar("s;UyZ@BF");
      assertEquals(0, permissionsURLTag0.doStartTag());
  }

  @Test
  public void test3()  throws Throwable  {
      PermissionsURLTag permissionsURLTag0 = new PermissionsURLTag();
      permissionsURLTag0.setResourceGroupId((-1966L));
      assertEquals(0, permissionsURLTag0.doStartTag());
  }

  @Test
  public void test4()  throws Throwable  {
      PermissionsURLTag permissionsURLTag0 = new PermissionsURLTag();
      permissionsURLTag0.setRedirect("s;UyZ@BF");
      assertNull(permissionsURLTag0.getId());
  }

  @Test
  public void test5()  throws Throwable  {
      PermissionsURLTag permissionsURLTag0 = new PermissionsURLTag();
      permissionsURLTag0.setResourcePrimKey("7eh=hnRZ3Cm{59l1,");
      assertEquals(0, permissionsURLTag0.doAfterBody());
  }

  @Test
  public void test6()  throws Throwable  {
      PermissionsURLTag permissionsURLTag0 = new PermissionsURLTag();
      int[] intArray0 = new int[4];
      permissionsURLTag0.setRoleTypes(intArray0);
      assertEquals(0, permissionsURLTag0.doStartTag());
  }

  @Test
  public void test7()  throws Throwable  {
      PermissionsURLTag permissionsURLTag0 = new PermissionsURLTag();
      permissionsURLTag0.setModelResource("7eh=hnRZ3Cm{59l1,");
      assertNull(permissionsURLTag0.getId());
  }

  @Test
  public void test8()  throws Throwable  {
      int[] intArray0 = new int[1];
      MockPageContext mockPageContext0 = new MockPageContext();
      try {
        PermissionsURLTag.doTag((String) null, (String) null, (String) null, 1945L, (String) null, (String) null, (String) null, intArray0, (PageContext) mockPageContext0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      PermissionsURLTag permissionsURLTag0 = new PermissionsURLTag();
      MockPageContext mockPageContext0 = new MockPageContext();
      permissionsURLTag0.setPageContext((PageContext) mockPageContext0);
      try {
        permissionsURLTag0.doEndTag();
        fail("Expecting exception: JspException");
      } catch(JspException e) {
        /*
         * java.lang.NullPointerException
         */
      }
  }
}
