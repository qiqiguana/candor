/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.mobiledevicerules.service.http;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portlet.mobiledevicerules.service.http.MDRRuleServiceSoap;
import java.rmi.RemoteException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MDRRuleServiceSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String[] stringArray1 = new String[3];
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        MDRRuleServiceSoap.updateRule((-1797L), stringArray0, stringArray0, stringArray1, stringArray0, "_o<jQ{T 5e$", "_o<jQ{T 5e$", serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      try {
        MDRRuleServiceSoap.deleteRule((-123L));
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[4];
      try {
        MDRRuleServiceSoap.addRule((-778L), stringArray0, stringArray0, stringArray0, stringArray0, "", "", (ServiceContext) null);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      try {
        MDRRuleServiceSoap.getRule((-255L));
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      try {
        MDRRuleServiceSoap.fetchRule((-1675L));
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      MDRRuleServiceSoap mDRRuleServiceSoap0 = new MDRRuleServiceSoap();
      assertNotNull(mDRRuleServiceSoap0);
  }
}
