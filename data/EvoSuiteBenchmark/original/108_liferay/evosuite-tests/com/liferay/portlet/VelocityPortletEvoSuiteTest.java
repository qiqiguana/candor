/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.template.Template;
import com.liferay.portlet.ActionRequestImpl;
import com.liferay.portlet.RenderRequestImpl;
import com.liferay.portlet.ResourceRequestImpl;
import com.liferay.portlet.VelocityPortlet;
import java.io.IOException;
import javax.portlet.ActionRequest;
import javax.portlet.ActionResponse;
import javax.portlet.PortletConfig;
import javax.portlet.PortletException;
import javax.portlet.PortletRequest;
import javax.portlet.PortletResponse;
import javax.portlet.RenderRequest;
import javax.portlet.RenderResponse;
import javax.portlet.ResourceRequest;
import javax.portlet.ResourceResponse;
import javax.portlet.filter.ResourceRequestWrapper;
import org.junit.BeforeClass;
import org.portletbridge.portlet.BridgeViewPortlet;

@RunWith(EvoSuiteRunner.class)
public class VelocityPortletEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      VelocityPortlet velocityPortlet0 = new VelocityPortlet();
      BridgeViewPortlet bridgeViewPortlet0 = null;
      try {
        bridgeViewPortlet0 = new BridgeViewPortlet();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class org.portletbridge.portlet.BridgeViewPortlet
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      VelocityPortlet velocityPortlet0 = new VelocityPortlet();
      try {
        velocityPortlet0.doView((RenderRequest) null, (RenderResponse) null);
        fail("Expecting exception: PortletException");
      } catch(PortletException e) {
        /*
         * com.liferay.portal.kernel.template.TemplateException: Unsupported template resource loader VELOCITY
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      VelocityPortlet velocityPortlet0 = new VelocityPortlet();
      RenderRequestImpl renderRequestImpl0 = new RenderRequestImpl();
      try {
        velocityPortlet0.doHelp((RenderRequest) renderRequestImpl0, (RenderResponse) null);
        fail("Expecting exception: PortletException");
      } catch(PortletException e) {
        /*
         * com.liferay.portal.kernel.template.TemplateException: Unsupported template resource loader VELOCITY
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      VelocityPortlet velocityPortlet0 = new VelocityPortlet();
      RenderRequestImpl renderRequestImpl0 = new RenderRequestImpl();
      try {
        velocityPortlet0.doEdit((RenderRequest) renderRequestImpl0, (RenderResponse) null);
        fail("Expecting exception: PortletException");
      } catch(PortletException e) {
        /*
         * com.liferay.portal.kernel.template.TemplateException: Unsupported template resource loader VELOCITY
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      VelocityPortlet velocityPortlet0 = new VelocityPortlet();
      ActionRequestImpl actionRequestImpl0 = new ActionRequestImpl();
      velocityPortlet0.processAction((ActionRequest) actionRequestImpl0, (ActionResponse) null);
      assertEquals("text/html", actionRequestImpl0.getResponseContentType());
  }

  @Test
  public void test5()  throws Throwable  {
      VelocityPortlet velocityPortlet0 = new VelocityPortlet();
      ResourceRequestImpl resourceRequestImpl0 = new ResourceRequestImpl();
      ResourceRequestWrapper resourceRequestWrapper0 = new ResourceRequestWrapper((ResourceRequest) resourceRequestImpl0);
      velocityPortlet0.serveResource((ResourceRequest) resourceRequestWrapper0, (ResourceResponse) null);
      assertNull(resourceRequestWrapper0.getResourceID());
  }

  @Test
  public void test6()  throws Throwable  {
      VelocityPortlet velocityPortlet0 = new VelocityPortlet();
      String string0 = velocityPortlet0.getTemplateId("InvaliKdCo/mentStart");
      assertNotNull(string0);
      assertEquals("null_SERVLET_CONTEXT_/htmlInvaliKdCo/mentStart", string0);
  }

  @Test
  public void test7()  throws Throwable  {
      VelocityPortlet velocityPortlet0 = new VelocityPortlet();
      String string0 = velocityPortlet0.getTemplateId("");
      assertEquals("", string0);
  }

  @Test
  public void test8()  throws Throwable  {
      VelocityPortlet velocityPortlet0 = new VelocityPortlet();
      ResourceRequestImpl resourceRequestImpl0 = new ResourceRequestImpl();
      try {
        velocityPortlet0.mergeTemplate("InvaliKdCo/mentStart", (Template) null, (PortletRequest) resourceRequestImpl0, (PortletResponse) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
