/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.expando.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.expando.model.ExpandoTable;
import com.liferay.portlet.expando.model.ExpandoTableSoap;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ExpandoTableSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ExpandoTableSoap expandoTableSoap0 = new ExpandoTableSoap();
      expandoTableSoap0.setCompanyId(890L);
      assertEquals(890L, expandoTableSoap0.getCompanyId());
  }

  @Test
  public void test1()  throws Throwable  {
      ExpandoTableSoap expandoTableSoap0 = new ExpandoTableSoap();
      long long0 = expandoTableSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test2()  throws Throwable  {
      ExpandoTableSoap expandoTableSoap0 = new ExpandoTableSoap();
      long long0 = expandoTableSoap0.getClassNameId();
      assertEquals(0L, long0);
  }

  @Test
  public void test3()  throws Throwable  {
      ExpandoTableSoap expandoTableSoap0 = new ExpandoTableSoap();
      expandoTableSoap0.setPrimaryKey(890L);
      assertEquals(890L, expandoTableSoap0.getPrimaryKey());
      assertEquals(890L, expandoTableSoap0.getTableId());
  }

  @Test
  public void test4()  throws Throwable  {
      ExpandoTableSoap expandoTableSoap0 = new ExpandoTableSoap();
      String string0 = expandoTableSoap0.getName();
      assertNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      ExpandoTableSoap expandoTableSoap0 = new ExpandoTableSoap();
      expandoTableSoap0.setClassNameId(890L);
      assertEquals(890L, expandoTableSoap0.getClassNameId());
  }

  @Test
  public void test6()  throws Throwable  {
      ExpandoTableSoap expandoTableSoap0 = new ExpandoTableSoap();
      long long0 = expandoTableSoap0.getTableId();
      assertEquals(0L, long0);
  }

  @Test
  public void test7()  throws Throwable  {
      LinkedList<ExpandoTable> linkedList0 = new LinkedList<ExpandoTable>();
      linkedList0.offerLast((ExpandoTable) null);
      // Undeclared exception!
      try {
        ExpandoTableSoap.toSoapModels((List<ExpandoTable>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      ExpandoTableSoap expandoTableSoap0 = new ExpandoTableSoap();
      expandoTableSoap0.setName((String) null);
      assertEquals(0L, expandoTableSoap0.getPrimaryKey());
  }

  @Test
  public void test9()  throws Throwable  {
      ExpandoTableSoap expandoTableSoap0 = new ExpandoTableSoap();
      long long0 = expandoTableSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test10()  throws Throwable  {
      ExpandoTable[][] expandoTableArray0 = new ExpandoTable[10][1];
      // Undeclared exception!
      try {
        ExpandoTableSoap.toSoapModels(expandoTableArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      LinkedList<ExpandoTable> linkedList0 = new LinkedList<ExpandoTable>();
      ExpandoTableSoap[] expandoTableSoapArray0 = ExpandoTableSoap.toSoapModels((List<ExpandoTable>) linkedList0);
      assertNotNull(expandoTableSoapArray0);
  }
}
