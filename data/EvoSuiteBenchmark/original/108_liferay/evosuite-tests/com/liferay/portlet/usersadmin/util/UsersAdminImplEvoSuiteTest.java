/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.usersadmin.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.bean.BeanLocatorException;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.Organization;
import com.liferay.portal.model.Role;
import com.liferay.portal.model.User;
import com.liferay.portal.model.UserGroup;
import com.liferay.portal.model.UserWrapper;
import com.liferay.portal.model.Website;
import com.liferay.portal.security.permission.AdvancedPermissionChecker;
import com.liferay.portal.security.permission.PermissionChecker;
import com.liferay.portal.security.permission.SimplePermissionChecker;
import com.liferay.portal.util.comparator.GroupNameComparator;
import com.liferay.portal.util.comparator.OrganizationNameComparator;
import com.liferay.portal.util.comparator.OrganizationTypeComparator;
import com.liferay.portal.util.comparator.RoleNameComparator;
import com.liferay.portal.util.comparator.UserEmailAddressComparator;
import com.liferay.portal.util.comparator.UserGroupDescriptionComparator;
import com.liferay.portal.util.comparator.UserGroupNameComparator;
import com.liferay.portal.util.comparator.UserJobTitleComparator;
import com.liferay.portal.util.comparator.UserLastNameComparator;
import com.liferay.portal.util.comparator.UserScreenNameComparator;
import com.liferay.portlet.usersadmin.util.UsersAdminImpl;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import javax.portlet.ActionRequest;
import javax.swing.SpinnerListModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UsersAdminImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      // Undeclared exception!
      try {
        usersAdminImpl0.getWebsites((ActionRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      long[] longArray0 = new long[10];
      // Undeclared exception!
      try {
        usersAdminImpl0.removeRequiredRoles((User) null, longArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      // Undeclared exception!
      try {
        usersAdminImpl0.getAddresses((ActionRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      long[] longArray0 = new long[8];
      // Undeclared exception!
      try {
        usersAdminImpl0.addRequiredRoles(400L, longArray0);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      // Undeclared exception!
      try {
        usersAdminImpl0.getEmailAddresses((ActionRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      long[] longArray0 = new long[3];
      // Undeclared exception!
      try {
        usersAdminImpl0.removeRequiredRoles((-907L), longArray0);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      // Undeclared exception!
      try {
        usersAdminImpl0.getPhones((ActionRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      TableRowSorter<DefaultTableModel> tableRowSorter0 = new TableRowSorter<DefaultTableModel>();
      tableRowSorter0.getSortKeys();
      SimplePermissionChecker simplePermissionChecker0 = null;
      try {
        simplePermissionChecker0 = new SimplePermissionChecker();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsValues
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      AdvancedPermissionChecker advancedPermissionChecker0 = null;
      try {
        advancedPermissionChecker0 = new AdvancedPermissionChecker();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsValues
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      SimplePermissionChecker simplePermissionChecker0 = null;
      try {
        simplePermissionChecker0 = new SimplePermissionChecker();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsValues
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      SimplePermissionChecker simplePermissionChecker0 = null;
      try {
        simplePermissionChecker0 = new SimplePermissionChecker();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsValues
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      AdvancedPermissionChecker advancedPermissionChecker0 = null;
      try {
        advancedPermissionChecker0 = new AdvancedPermissionChecker();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsValues
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      AdvancedPermissionChecker advancedPermissionChecker0 = null;
      try {
        advancedPermissionChecker0 = new AdvancedPermissionChecker();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsValues
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      AdvancedPermissionChecker advancedPermissionChecker0 = null;
      try {
        advancedPermissionChecker0 = new AdvancedPermissionChecker();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsValues
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      GroupNameComparator groupNameComparator0 = (GroupNameComparator)usersAdminImpl0.getGroupOrderByComparator("screen-name", "screen-name");
      assertEquals(false, groupNameComparator0.isAscending());
  }

  @Test
  public void test15()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      Long[] longArray0 = usersAdminImpl0.getOrganizationIds((List<Organization>) null);
      assertNotNull(longArray0);
  }

  @Test
  public void test16()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      Vector<Organization> vector0 = new Vector<Organization>();
      Long[] longArray0 = usersAdminImpl0.getOrganizationIds((List<Organization>) vector0);
      assertNotNull(longArray0);
  }

  @Test
  public void test17()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      OrganizationNameComparator organizationNameComparator0 = (OrganizationNameComparator)usersAdminImpl0.getOrganizationOrderByComparator("asc", "asc");
      assertEquals(true, organizationNameComparator0.isAscending());
  }

  @Test
  public void test18()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      OrganizationNameComparator organizationNameComparator0 = (OrganizationNameComparator)usersAdminImpl0.getOrganizationOrderByComparator("name", "name");
      assertEquals("orgName DESC", organizationNameComparator0.getOrderBy());
  }

  @Test
  public void test19()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      OrganizationTypeComparator organizationTypeComparator0 = (OrganizationTypeComparator)usersAdminImpl0.getOrganizationOrderByComparator("type", ";(eT>.@}CEFs");
      assertEquals("orgType DESC, orgName DESC", organizationTypeComparator0.toString());
  }

  @Test
  public void test20()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      RoleNameComparator roleNameComparator0 = (RoleNameComparator)usersAdminImpl0.getRoleOrderByComparator("name", "name");
      assertEquals("Role_.name DESC", roleNameComparator0.getOrderBy());
  }

  @Test
  public void test21()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      RoleNameComparator roleNameComparator0 = (RoleNameComparator)usersAdminImpl0.getRoleOrderByComparator("r_p_r_p", "r_p_r_p");
      assertEquals(false, roleNameComparator0.isAscending());
  }

  @Test
  public void test22()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      UserGroupDescriptionComparator userGroupDescriptionComparator0 = (UserGroupDescriptionComparator)usersAdminImpl0.getUserGroupOrderByComparator("description", "description");
      assertEquals("UserGroup.description DESC, UserGroup.name DESC", userGroupDescriptionComparator0.toString());
  }

  @Test
  public void test23()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      UserGroupNameComparator userGroupNameComparator0 = (UserGroupNameComparator)usersAdminImpl0.getUserGroupOrderByComparator("asc", "asc");
      assertEquals(true, userGroupNameComparator0.isAscending());
  }

  @Test
  public void test24()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      UserLastNameComparator userLastNameComparator0 = (UserLastNameComparator)usersAdminImpl0.getUserOrderByComparator("asc", "asc");
      assertEquals("lastName ASC, firstName ASC, middleName ASC", userLastNameComparator0.getOrderBy());
  }

  @Test
  public void test25()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      UserEmailAddressComparator userEmailAddressComparator0 = (UserEmailAddressComparator)usersAdminImpl0.getUserOrderByComparator("email-address", "email-address");
      assertEquals(false, userEmailAddressComparator0.isAscending());
  }

  @Test
  public void test26()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      UserJobTitleComparator userJobTitleComparator0 = (UserJobTitleComparator)usersAdminImpl0.getUserOrderByComparator("job-title", "job-title");
      assertEquals("jobTitle DESC, lastName DESC, firstName DESC, middleName DESC", userJobTitleComparator0.getOrderBy());
  }

  @Test
  public void test27()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      UserScreenNameComparator userScreenNameComparator0 = (UserScreenNameComparator)usersAdminImpl0.getUserOrderByComparator("screen-name", "screen-name");
      assertEquals(false, userScreenNameComparator0.isAscending());
  }

  @Test
  public void test28()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      AdvancedPermissionChecker advancedPermissionChecker0 = null;
      try {
        advancedPermissionChecker0 = new AdvancedPermissionChecker();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsValues
         */
      }
  }

  @Test
  public void test29()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      AdvancedPermissionChecker advancedPermissionChecker0 = null;
      try {
        advancedPermissionChecker0 = new AdvancedPermissionChecker();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsValues
         */
      }
  }

  @Test
  public void test30()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      TableRowSorter<DefaultTableModel> tableRowSorter0 = new TableRowSorter<DefaultTableModel>();
      List<?> list0 = tableRowSorter0.getSortKeys();
      // Undeclared exception!
      try {
        usersAdminImpl0.updateEmailAddresses("feFs6\"jw", 250L, list0);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test31()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      Object[] objectArray0 = new Object[6];
      SpinnerListModel spinnerListModel0 = new SpinnerListModel(objectArray0);
      List<?> list0 = spinnerListModel0.getList();
      // Undeclared exception!
      try {
        usersAdminImpl0.updatePhones("m", 0L, list0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test32()  throws Throwable  {
      UsersAdminImpl usersAdminImpl0 = new UsersAdminImpl();
      ArrayList<Website> arrayList0 = new ArrayList<Website>();
      // Undeclared exception!
      try {
        usersAdminImpl0.updateWebsites("", 9223372036854775807L, (List<Website>) arrayList0);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }
}
