/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.asset.service.http;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.kernel.workflow.comparator.BaseWorkflowTaskDueDateComparator;
import com.liferay.portal.kernel.workflow.comparator.BaseWorkflowTaskNameComparator;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portlet.asset.service.http.AssetVocabularyServiceSoap;
import java.rmi.RemoteException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AssetVocabularyServiceSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      long[] longArray0 = new long[5];
      try {
        AssetVocabularyServiceSoap.getGroupsVocabularies(longArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      try {
        AssetVocabularyServiceSoap.getGroupVocabulariesCount((-1007L), "pW* ");
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      BaseWorkflowTaskDueDateComparator baseWorkflowTaskDueDateComparator0 = new BaseWorkflowTaskDueDateComparator(true);
      try {
        AssetVocabularyServiceSoap.getJSONGroupVocabularies((-1L), "f[7B9~_)PY R**", 61, 61, (OrderByComparator) baseWorkflowTaskDueDateComparator0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      long[] longArray0 = new long[4];
      try {
        AssetVocabularyServiceSoap.deleteVocabularies(longArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      long[] longArray0 = new long[4];
      try {
        AssetVocabularyServiceSoap.getGroupsVocabularies(longArray0, "");
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      long[] longArray0 = new long[6];
      try {
        AssetVocabularyServiceSoap.getVocabularies(longArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      BaseWorkflowTaskNameComparator baseWorkflowTaskNameComparator0 = new BaseWorkflowTaskNameComparator();
      try {
        AssetVocabularyServiceSoap.getGroupVocabularies(1355L, 493, 493, (OrderByComparator) baseWorkflowTaskNameComparator0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      try {
        AssetVocabularyServiceSoap.getCompanyVocabularies(0L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      try {
        AssetVocabularyServiceSoap.getGroupVocabularies(0L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      try {
        AssetVocabularyServiceSoap.getVocabulary(1840L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      BaseWorkflowTaskDueDateComparator baseWorkflowTaskDueDateComparator0 = new BaseWorkflowTaskDueDateComparator(true);
      try {
        AssetVocabularyServiceSoap.getGroupVocabularies(577L, "~^L\"Dl~xA9JxyV$:o", (-1), (-1967), (OrderByComparator) baseWorkflowTaskDueDateComparator0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      try {
        AssetVocabularyServiceSoap.deleteVocabulary(476L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[3];
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        AssetVocabularyServiceSoap.updateVocabulary(0L, "", stringArray0, stringArray0, stringArray0, stringArray0, "", serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      try {
        AssetVocabularyServiceSoap.getGroupVocabulariesCount(644L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      AssetVocabularyServiceSoap assetVocabularyServiceSoap0 = new AssetVocabularyServiceSoap();
      assertNotNull(assetVocabularyServiceSoap0);
  }

  @Test
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[7];
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        AssetVocabularyServiceSoap.addVocabulary("?[5)E]=S?@P", stringArray0, stringArray0, stringArray0, stringArray0, "?[5)E]=S?@P", serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
      }
  }
}
