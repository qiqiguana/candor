/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.wiki.engines.antlrwiki.translator;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.TreeNode;
import com.liferay.portal.parsers.creole.ast.CollectionNode;
import com.liferay.portal.parsers.creole.ast.HeadingNode;
import com.liferay.portal.parsers.creole.ast.WikiPageNode;
import com.liferay.portal.parsers.creole.visitor.ASTVisitor;
import com.liferay.portlet.wiki.engines.antlrwiki.translator.TableOfContentsVisitor;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TableOfContentsVisitorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TableOfContentsVisitor tableOfContentsVisitor0 = new TableOfContentsVisitor();
      WikiPageNode wikiPageNode0 = new WikiPageNode((-878));
      TreeNode<HeadingNode> treeNode0 = tableOfContentsVisitor0.compose(wikiPageNode0);
      assertNotNull(treeNode0);
      
      HeadingNode headingNode0 = new HeadingNode((-878));
      headingNode0.accept((ASTVisitor) tableOfContentsVisitor0);
      boolean boolean0 = tableOfContentsVisitor0.addHeadingNode(treeNode0, headingNode0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      TableOfContentsVisitor tableOfContentsVisitor0 = new TableOfContentsVisitor();
      HeadingNode headingNode0 = new HeadingNode((CollectionNode) null, 99);
      TreeNode<HeadingNode> treeNode0 = new TreeNode<HeadingNode>(headingNode0, (TreeNode<HeadingNode>) null, (List<TreeNode<HeadingNode>>) null);
      HeadingNode headingNode1 = new HeadingNode(216);
      // Undeclared exception!
      try {
        tableOfContentsVisitor0.addHeadingNode(treeNode0, headingNode1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
