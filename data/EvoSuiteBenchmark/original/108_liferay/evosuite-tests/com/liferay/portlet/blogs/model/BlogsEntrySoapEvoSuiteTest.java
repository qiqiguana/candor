/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.blogs.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.blogs.model.BlogsEntry;
import com.liferay.portlet.blogs.model.BlogsEntrySoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BlogsEntrySoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      blogsEntrySoap0.setAllowPingbacks(false);
      assertEquals(false, blogsEntrySoap0.getAllowPingbacks());
      assertEquals(false, blogsEntrySoap0.isAllowPingbacks());
  }

  @Test
  public void test1()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      Date date0 = blogsEntrySoap0.getStatusDate();
      assertNull(date0);
  }

  @Test
  public void test2()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      blogsEntrySoap0.setUrlTitle("HutLB'!U?c;_UH8");
      assertEquals(false, blogsEntrySoap0.getSmallImage());
  }

  @Test
  public void test3()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      blogsEntrySoap0.setPrimaryKey(18L);
      assertEquals(18L, blogsEntrySoap0.getEntryId());
      assertEquals(18L, blogsEntrySoap0.getPrimaryKey());
  }

  @Test
  public void test4()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      blogsEntrySoap0.setSmallImageId(19L);
      assertEquals(19L, blogsEntrySoap0.getSmallImageId());
  }

  @Test
  public void test5()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      String string0 = blogsEntrySoap0.getUserName();
      assertNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      boolean boolean0 = blogsEntrySoap0.getSmallImage();
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      blogsEntrySoap0.setStatusByUserName((String) null);
      assertNull(blogsEntrySoap0.getTitle());
  }

  @Test
  public void test8()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      long long0 = blogsEntrySoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test9()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      blogsEntrySoap0.setContent("msdr");
      assertEquals(0L, blogsEntrySoap0.getSmallImageId());
  }

  @Test
  public void test10()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      blogsEntrySoap0.setSmallImage(false);
      assertEquals(false, blogsEntrySoap0.getSmallImage());
      assertEquals(false, blogsEntrySoap0.isSmallImage());
  }

  @Test
  public void test11()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      String string0 = blogsEntrySoap0.getContent();
      assertNull(string0);
  }

  @Test
  public void test12()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      blogsEntrySoap0.setDisplayDate((Date) null);
      assertNull(blogsEntrySoap0.getContent());
  }

  @Test
  public void test13()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      Date date0 = blogsEntrySoap0.getModifiedDate();
      assertNull(date0);
  }

  @Test
  public void test14()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      long long0 = blogsEntrySoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test15()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      boolean boolean0 = blogsEntrySoap0.getAllowPingbacks();
      assertEquals(false, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      blogsEntrySoap0.setSmallImageURL((String) null);
      assertNull(blogsEntrySoap0.getStatusByUserName());
  }

  @Test
  public void test17()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      boolean boolean0 = blogsEntrySoap0.isAllowTrackbacks();
      assertEquals(false, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      String string0 = blogsEntrySoap0.getTrackbacks();
      assertNull(string0);
  }

  @Test
  public void test19()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      long long0 = blogsEntrySoap0.getSmallImageId();
      assertEquals(0L, long0);
  }

  @Test
  public void test20()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      String string0 = blogsEntrySoap0.getSmallImageURL();
      assertNull(string0);
  }

  @Test
  public void test21()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      long long0 = blogsEntrySoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test22()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      long long0 = blogsEntrySoap0.getEntryId();
      assertEquals(0L, long0);
  }

  @Test
  public void test23()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      blogsEntrySoap0.setUserName((String) null);
      assertNull(blogsEntrySoap0.getDescription());
  }

  @Test
  public void test24()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      boolean boolean0 = blogsEntrySoap0.isAllowPingbacks();
      assertEquals(false, boolean0);
  }

  @Test
  public void test25()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      blogsEntrySoap0.setCreateDate((Date) null);
      assertEquals(0L, blogsEntrySoap0.getUserId());
  }

  @Test
  public void test26()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      blogsEntrySoap0.setAllowTrackbacks(false);
      assertEquals(false, blogsEntrySoap0.isAllowTrackbacks());
      assertEquals(false, blogsEntrySoap0.getAllowTrackbacks());
  }

  @Test
  public void test27()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      blogsEntrySoap0.setStatus(911);
      assertEquals(911, blogsEntrySoap0.getStatus());
  }

  @Test
  public void test28()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      String string0 = blogsEntrySoap0.getUuid();
      assertNull(string0);
  }

  @Test
  public void test29()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      blogsEntrySoap0.setUserId(18L);
      assertEquals(18L, blogsEntrySoap0.getUserId());
  }

  @Test
  public void test30()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      blogsEntrySoap0.setTrackbacks(".mlrafZ[qj");
      assertEquals(0L, blogsEntrySoap0.getGroupId());
  }

  @Test
  public void test31()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      String string0 = blogsEntrySoap0.getUrlTitle();
      assertNull(string0);
  }

  @Test
  public void test32()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      blogsEntrySoap0.setCompanyId(1845L);
      assertEquals(1845L, blogsEntrySoap0.getCompanyId());
  }

  @Test
  public void test33()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      blogsEntrySoap0.setGroupId(2028L);
      assertEquals(2028L, blogsEntrySoap0.getGroupId());
  }

  @Test
  public void test34()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      Date date0 = blogsEntrySoap0.getDisplayDate();
      assertNull(date0);
  }

  @Test
  public void test35()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      String string0 = blogsEntrySoap0.getDescription();
      assertNull(string0);
  }

  @Test
  public void test36()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      boolean boolean0 = blogsEntrySoap0.isSmallImage();
      assertEquals(false, boolean0);
  }

  @Test
  public void test37()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      long long0 = blogsEntrySoap0.getGroupId();
      assertEquals(0L, long0);
  }

  @Test
  public void test38()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      blogsEntrySoap0.setUuid((String) null);
      assertNull(blogsEntrySoap0.getUuid());
  }

  @Test
  public void test39()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      String string0 = blogsEntrySoap0.getStatusByUserName();
      assertNull(string0);
  }

  @Test
  public void test40()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      boolean boolean0 = blogsEntrySoap0.getAllowTrackbacks();
      assertEquals(false, boolean0);
  }

  @Test
  public void test41()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      long long0 = blogsEntrySoap0.getStatusByUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test42()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      blogsEntrySoap0.setDescription((String) null);
      assertEquals(false, blogsEntrySoap0.getAllowTrackbacks());
  }

  @Test
  public void test43()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      String string0 = blogsEntrySoap0.getTitle();
      assertNull(string0);
  }

  @Test
  public void test44()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      blogsEntrySoap0.setTitle((String) null);
      assertEquals(0L, blogsEntrySoap0.getPrimaryKey());
  }

  @Test
  public void test45()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      blogsEntrySoap0.setStatusByUserId(0L);
      assertEquals(false, blogsEntrySoap0.isAllowTrackbacks());
  }

  @Test
  public void test46()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      blogsEntrySoap0.setModifiedDate((Date) null);
      assertNull(blogsEntrySoap0.getTrackbacks());
  }

  @Test
  public void test47()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      blogsEntrySoap0.setStatusDate((Date) null);
      assertNull(blogsEntrySoap0.getStatusByUserName());
  }

  @Test
  public void test48()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      int int0 = blogsEntrySoap0.getStatus();
      assertEquals(0, int0);
  }

  @Test
  public void test49()  throws Throwable  {
      BlogsEntry[][] blogsEntryArray0 = new BlogsEntry[1][1];
      // Undeclared exception!
      try {
        BlogsEntrySoap.toSoapModels(blogsEntryArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test50()  throws Throwable  {
      BlogsEntrySoap blogsEntrySoap0 = new BlogsEntrySoap();
      Date date0 = blogsEntrySoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test51()  throws Throwable  {
      LinkedList<BlogsEntry> linkedList0 = new LinkedList<BlogsEntry>();
      BlogsEntrySoap[] blogsEntrySoapArray0 = BlogsEntrySoap.toSoapModels((List<BlogsEntry>) linkedList0);
      assertNotNull(blogsEntrySoapArray0);
  }

  @Test
  public void test52()  throws Throwable  {
      LinkedList<BlogsEntry> linkedList0 = new LinkedList<BlogsEntry>();
      linkedList0.add((BlogsEntry) null);
      // Undeclared exception!
      try {
        BlogsEntrySoap.toSoapModels((List<BlogsEntry>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
