/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.softwarecatalog.service;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portlet.softwarecatalog.service.SCFrameworkVersionService;
import com.liferay.portlet.softwarecatalog.service.SCFrameworkVersionServiceWrapper;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SCFrameworkVersionServiceWrapperEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SCFrameworkVersionServiceWrapper sCFrameworkVersionServiceWrapper0 = new SCFrameworkVersionServiceWrapper((SCFrameworkVersionService) null);
      // Undeclared exception!
      try {
        sCFrameworkVersionServiceWrapper0.updateFrameworkVersion((-231L), "", "", true, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      SCFrameworkVersionServiceWrapper sCFrameworkVersionServiceWrapper0 = new SCFrameworkVersionServiceWrapper((SCFrameworkVersionService) null);
      // Undeclared exception!
      try {
        sCFrameworkVersionServiceWrapper0.getFrameworkVersion(173L);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      SCFrameworkVersionServiceWrapper sCFrameworkVersionServiceWrapper0 = new SCFrameworkVersionServiceWrapper((SCFrameworkVersionService) null);
      sCFrameworkVersionServiceWrapper0.setWrappedService((SCFrameworkVersionService) null);
  }

  @Test
  public void test3()  throws Throwable  {
      SCFrameworkVersionServiceWrapper sCFrameworkVersionServiceWrapper0 = new SCFrameworkVersionServiceWrapper((SCFrameworkVersionService) null);
      ServiceContext serviceContext0 = new ServiceContext();
      // Undeclared exception!
      try {
        sCFrameworkVersionServiceWrapper0.addFrameworkVersion("D  ZC?,<g%)zK", "D  ZC?,<g%)zK", false, (-256), serviceContext0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      SCFrameworkVersionServiceWrapper sCFrameworkVersionServiceWrapper0 = new SCFrameworkVersionServiceWrapper((SCFrameworkVersionService) null);
      // Undeclared exception!
      try {
        sCFrameworkVersionServiceWrapper0.setBeanIdentifier("q(?sn`^}");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      SCFrameworkVersionServiceWrapper sCFrameworkVersionServiceWrapper0 = new SCFrameworkVersionServiceWrapper((SCFrameworkVersionService) null);
      // Undeclared exception!
      try {
        sCFrameworkVersionServiceWrapper0.getBeanIdentifier();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      SCFrameworkVersionServiceWrapper sCFrameworkVersionServiceWrapper0 = new SCFrameworkVersionServiceWrapper((SCFrameworkVersionService) null);
      // Undeclared exception!
      try {
        sCFrameworkVersionServiceWrapper0.getFrameworkVersions(345600000L, true, 374, (-66));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      SCFrameworkVersionServiceWrapper sCFrameworkVersionServiceWrapper0 = new SCFrameworkVersionServiceWrapper((SCFrameworkVersionService) null);
      // Undeclared exception!
      try {
        sCFrameworkVersionServiceWrapper0.getFrameworkVersions(1284652111297L, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      SCFrameworkVersionServiceWrapper sCFrameworkVersionServiceWrapper0 = new SCFrameworkVersionServiceWrapper((SCFrameworkVersionService) null);
      SCFrameworkVersionService sCFrameworkVersionService0 = sCFrameworkVersionServiceWrapper0.getWrappedService();
      assertNull(sCFrameworkVersionService0);
  }

  @Test
  public void test9()  throws Throwable  {
      SCFrameworkVersionServiceWrapper sCFrameworkVersionServiceWrapper0 = new SCFrameworkVersionServiceWrapper((SCFrameworkVersionService) null);
      // Undeclared exception!
      try {
        sCFrameworkVersionServiceWrapper0.deleteFrameworkVersion(1284652111727L);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
