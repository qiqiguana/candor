/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.asset.model.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.asset.model.impl.AssetEntryCacheModel;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AssetEntryCacheModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AssetEntryCacheModel assetEntryCacheModel0 = new AssetEntryCacheModel();
      // Undeclared exception!
      try {
        assetEntryCacheModel0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      AssetEntryCacheModel assetEntryCacheModel0 = new AssetEntryCacheModel();
      String string0 = assetEntryCacheModel0.toString();
      assertEquals("{entryId=0, groupId=0, companyId=0, userId=0, userName=null, createDate=0, modifiedDate=0, classNameId=0, classPK=0, classUuid=null, classTypeId=0, visible=false, startDate=0, endDate=0, publishDate=0, expirationDate=0, mimeType=null, title=null, description=null, summary=null, url=null, layoutUuid=null, height=0, width=0, priority=0.0, viewCount=0}", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      AssetEntryCacheModel assetEntryCacheModel0 = new AssetEntryCacheModel();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      assetEntryCacheModel0.userName = "";
      assetEntryCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0, assetEntryCacheModel0.width);
  }

  @Test
  public void test3()  throws Throwable  {
      AssetEntryCacheModel assetEntryCacheModel0 = new AssetEntryCacheModel();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      assetEntryCacheModel0.classUuid = "";
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      assetEntryCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0, assetEntryCacheModel0.height);
  }

  @Test
  public void test4()  throws Throwable  {
      AssetEntryCacheModel assetEntryCacheModel0 = new AssetEntryCacheModel();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      assetEntryCacheModel0.description = "{entryId=0, groupId=0, companyId=0, userId=0, userName=null, createDate=0, modifiedDate=0, classNameId=0, classPK=0, classUuid=null, classTypeId=0, visible=false, startDate=0, endDate=0, publishDate=0, expirationDate=0, mimeType=null, title=null, description=null, summary=y, url=null, layoutUuid=null, height=0, width=0, priority=0.0, viewCount=0}";
      assetEntryCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0, assetEntryCacheModel0.height);
  }

  @Test
  public void test5()  throws Throwable  {
      AssetEntryCacheModel assetEntryCacheModel0 = new AssetEntryCacheModel();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      assetEntryCacheModel0.summary = "y";
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      assetEntryCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0, assetEntryCacheModel0.viewCount);
  }

  @Test
  public void test6()  throws Throwable  {
      AssetEntryCacheModel assetEntryCacheModel0 = new AssetEntryCacheModel();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      assetEntryCacheModel0.url = "-6bTQ^rPP~F3` Zh0";
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      assetEntryCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0, assetEntryCacheModel0.width);
  }
}
