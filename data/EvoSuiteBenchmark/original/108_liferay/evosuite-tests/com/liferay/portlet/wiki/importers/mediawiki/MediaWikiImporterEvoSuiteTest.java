/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.wiki.importers.mediawiki;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.bean.BeanLocatorException;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.xml.ElementImpl;
import com.liferay.portlet.wiki.ImportFilesException;
import com.liferay.portlet.wiki.importers.mediawiki.MediaWikiImporter;
import com.liferay.portlet.wiki.model.WikiNode;
import com.liferay.portlet.wiki.model.WikiNodeWrapper;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.List;
import java.util.Map;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.dom4j.Element;
import org.dom4j.QName;
import org.dom4j.tree.BaseElement;
import org.dom4j.util.NonLazyElement;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MediaWikiImporterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MediaWikiImporter mediaWikiImporter0 = new MediaWikiImporter();
      // Undeclared exception!
      try {
        mediaWikiImporter0.normalizeTitle("unsignedShort");
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portal.util.PropsValues
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      MediaWikiImporter mediaWikiImporter0 = new MediaWikiImporter();
      String string0 = mediaWikiImporter0.normalizeDescription("{C9}QC0La,Htw");
      assertNotNull(string0);
      assertEquals(" C9 QC0La Htw", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      MediaWikiImporter mediaWikiImporter0 = new MediaWikiImporter();
      TableRowSorter<DefaultTableModel> tableRowSorter0 = new TableRowSorter<DefaultTableModel>();
      List<?> list0 = tableRowSorter0.getSortKeys();
      boolean boolean0 = mediaWikiImporter0.isSpecialMediaWikiPage((String) null, list0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      MediaWikiImporter mediaWikiImporter0 = new MediaWikiImporter();
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try {
        mediaWikiImporter0.isValidImage(stringArray0, (InputStream) null);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      MediaWikiImporter mediaWikiImporter0 = new MediaWikiImporter();
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try {
        mediaWikiImporter0.isValidImage(stringArray0, (InputStream) null);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      MediaWikiImporter mediaWikiImporter0 = new MediaWikiImporter();
      WikiNodeWrapper wikiNodeWrapper0 = new WikiNodeWrapper((WikiNode) null);
      byte[] byteArray0 = new byte[10];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try {
        mediaWikiImporter0.processImages((-1L), (WikiNode) wikiNodeWrapper0, (InputStream) byteArrayInputStream0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      MediaWikiImporter mediaWikiImporter0 = new MediaWikiImporter();
      WikiNodeWrapper wikiNodeWrapper0 = new WikiNodeWrapper((WikiNode) null);
      mediaWikiImporter0.processImages((-445L), (WikiNode) wikiNodeWrapper0, (InputStream) null);
      assertEquals("com.liferay.portlet.wiki.model.WikiNode", wikiNodeWrapper0.getModelClassName());
  }

  @Test
  public void test7()  throws Throwable  {
      MediaWikiImporter mediaWikiImporter0 = new MediaWikiImporter();
      BaseElement baseElement0 = new BaseElement((QName) null);
      ElementImpl elementImpl0 = new ElementImpl((Element) baseElement0);
      mediaWikiImporter0.processSpecialPages((-1526L), (WikiNode) null, (com.liferay.portal.kernel.xml.Element) elementImpl0, (List<String>) null);
      assertEquals(true, elementImpl0.supportsParent());
  }

  @Test
  public void test8()  throws Throwable  {
      MediaWikiImporter mediaWikiImporter0 = new MediaWikiImporter();
      String[] stringArray0 = mediaWikiImporter0.readAssetTagNames((-1997L), (WikiNode) null, "P,@DM*F(,%]]BEn");
      assertNotNull(stringArray0);
  }

  @Test
  public void test9()  throws Throwable  {
      MediaWikiImporter mediaWikiImporter0 = new MediaWikiImporter();
      String string0 = mediaWikiImporter0.readParentTitle("");
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      MediaWikiImporter mediaWikiImporter0 = new MediaWikiImporter();
      String string0 = mediaWikiImporter0.readRedirectTitle("vJJ^7*1;,>s8p");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test
  public void test11()  throws Throwable  {
      MediaWikiImporter mediaWikiImporter0 = new MediaWikiImporter();
      QName qName0 = QName.get("$Y%PM;rop80>}b_4", "$Y%PM;rop80>}b_4", "$Y%PM;rop80>}b_4");
      NonLazyElement nonLazyElement0 = new NonLazyElement(qName0, 0);
      ElementImpl elementImpl0 = new ElementImpl((Element) nonLazyElement0);
      try {
        mediaWikiImporter0.readSpecialNamespaces((com.liferay.portal.kernel.xml.Element) elementImpl0);
        fail("Expecting exception: ImportFilesException");
      } catch(ImportFilesException e) {
        /*
         * Invalid pages XML file
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      MediaWikiImporter mediaWikiImporter0 = new MediaWikiImporter();
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      mediaWikiImporter0.readUsersFile((InputStream) byteArrayInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(-1, byteArrayInputStream0.read());
  }

  @Test
  public void test13()  throws Throwable  {
      MediaWikiImporter mediaWikiImporter0 = new MediaWikiImporter();
      Map<String, String> map0 = mediaWikiImporter0.readUsersFile((InputStream) null);
      assertEquals(true, map0.isEmpty());
  }
}
