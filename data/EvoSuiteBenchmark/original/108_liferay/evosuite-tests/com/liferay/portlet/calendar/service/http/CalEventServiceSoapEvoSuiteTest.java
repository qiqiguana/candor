/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.calendar.service.http;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.cal.Duration;
import com.liferay.portal.kernel.cal.TZSRecurrence;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portlet.calendar.service.http.CalEventServiceSoap;
import java.rmi.RemoteException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.TimeZone;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CalEventServiceSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      try {
        CalEventServiceSoap.getEventsCount(603L, "");
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      try {
        CalEventServiceSoap.deleteEvent(604800000L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[2];
      try {
        CalEventServiceSoap.getEvents(0L, stringArray0, 10, 0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar(0, 0, 0, 14, 5, 0);
      try {
        CalEventServiceSoap.hasEvents((-48L), (Calendar) gregorianCalendar0, "");
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar(locale0);
      String[] stringArray0 = new String[8];
      try {
        CalEventServiceSoap.hasEvents((-1L), (Calendar) gregorianCalendar0, stringArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      String[] stringArray0 = new String[5];
      try {
        CalEventServiceSoap.getEventsCount(0L, stringArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getDefault();
      GregorianCalendar gregorianCalendar0 = (GregorianCalendar)Calendar.getInstance(timeZone0);
      try {
        CalEventServiceSoap.hasEvents(0L, (Calendar) gregorianCalendar0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      GregorianCalendar gregorianCalendar0 = (GregorianCalendar)Calendar.getInstance(locale0);
      String[] stringArray0 = new String[5];
      try {
        CalEventServiceSoap.getEvents((-1L), (Calendar) gregorianCalendar0, stringArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar();
      try {
        CalEventServiceSoap.getEvents((long) (-1), (Calendar) gregorianCalendar0, "");
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      try {
        CalEventServiceSoap.getEvents(1202L, "FV-j=", (-997), 0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        CalEventServiceSoap.addEvent("a//", "Day value out of range", "a//", 0, (-1324), 0, 0, 1, 0, 1696, true, true, "a//", true, (TZSRecurrence) null, (-1324), 0, 762, serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar(0, (-89), 758);
      Duration duration0 = new Duration();
      TZSRecurrence tZSRecurrence0 = new TZSRecurrence((Calendar) gregorianCalendar0, duration0, 758);
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        CalEventServiceSoap.updateEvent(0L, ",byWeekNo=", ",byWeekNo=", ",byWeekNo=", (-1), (-1), (-1), 0, 0, (-89), (-89), false, false, ",byWeekNo=", true, tZSRecurrence0, 0, (-1), (-1), serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      CalEventServiceSoap calEventServiceSoap0 = new CalEventServiceSoap();
      assertNotNull(calEventServiceSoap0);
  }

  @Test
  public void test13()  throws Throwable  {
      try {
        CalEventServiceSoap.getEvent(0L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }
}
