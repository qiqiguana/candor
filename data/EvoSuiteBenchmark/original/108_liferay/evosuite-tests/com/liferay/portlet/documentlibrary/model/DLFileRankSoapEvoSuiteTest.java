/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.documentlibrary.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.documentlibrary.model.DLFileRank;
import com.liferay.portlet.documentlibrary.model.DLFileRankSoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DLFileRankSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DLFileRankSoap dLFileRankSoap0 = new DLFileRankSoap();
      long long0 = dLFileRankSoap0.getGroupId();
      assertEquals(0L, long0);
  }

  @Test
  public void test1()  throws Throwable  {
      DLFileRankSoap dLFileRankSoap0 = new DLFileRankSoap();
      Date date0 = dLFileRankSoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test2()  throws Throwable  {
      DLFileRankSoap dLFileRankSoap0 = new DLFileRankSoap();
      dLFileRankSoap0.setPrimaryKey(0L);
      assertEquals(0L, dLFileRankSoap0.getPrimaryKey());
  }

  @Test
  public void test3()  throws Throwable  {
      DLFileRankSoap dLFileRankSoap0 = new DLFileRankSoap();
      dLFileRankSoap0.setCompanyId(0L);
      assertEquals(0L, dLFileRankSoap0.getFileEntryId());
  }

  @Test
  public void test4()  throws Throwable  {
      DLFileRankSoap dLFileRankSoap0 = new DLFileRankSoap();
      dLFileRankSoap0.setActive(false);
      assertEquals(false, dLFileRankSoap0.isActive());
      assertEquals(false, dLFileRankSoap0.getActive());
  }

  @Test
  public void test5()  throws Throwable  {
      DLFileRankSoap dLFileRankSoap0 = new DLFileRankSoap();
      dLFileRankSoap0.setFileEntryId(502L);
      assertEquals(502L, dLFileRankSoap0.getFileEntryId());
  }

  @Test
  public void test6()  throws Throwable  {
      DLFileRankSoap dLFileRankSoap0 = new DLFileRankSoap();
      long long0 = dLFileRankSoap0.getFileRankId();
      assertEquals(0L, long0);
  }

  @Test
  public void test7()  throws Throwable  {
      DLFileRank[][] dLFileRankArray0 = new DLFileRank[10][1];
      // Undeclared exception!
      try {
        DLFileRankSoap.toSoapModels(dLFileRankArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      DLFileRankSoap dLFileRankSoap0 = new DLFileRankSoap();
      boolean boolean0 = dLFileRankSoap0.isActive();
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      DLFileRankSoap dLFileRankSoap0 = new DLFileRankSoap();
      boolean boolean0 = dLFileRankSoap0.getActive();
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      DLFileRankSoap dLFileRankSoap0 = new DLFileRankSoap();
      long long0 = dLFileRankSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test11()  throws Throwable  {
      DLFileRankSoap dLFileRankSoap0 = new DLFileRankSoap();
      long long0 = dLFileRankSoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test12()  throws Throwable  {
      DLFileRankSoap dLFileRankSoap0 = new DLFileRankSoap();
      dLFileRankSoap0.setUserId(502L);
      assertEquals(502L, dLFileRankSoap0.getUserId());
  }

  @Test
  public void test13()  throws Throwable  {
      DLFileRankSoap dLFileRankSoap0 = new DLFileRankSoap();
      dLFileRankSoap0.setGroupId(502L);
      assertEquals(502L, dLFileRankSoap0.getGroupId());
  }

  @Test
  public void test14()  throws Throwable  {
      DLFileRankSoap dLFileRankSoap0 = new DLFileRankSoap();
      long long0 = dLFileRankSoap0.getFileEntryId();
      assertEquals(0L, long0);
  }

  @Test
  public void test15()  throws Throwable  {
      DLFileRankSoap dLFileRankSoap0 = new DLFileRankSoap();
      dLFileRankSoap0.setCreateDate((Date) null);
      assertEquals(0L, dLFileRankSoap0.getPrimaryKey());
  }

  @Test
  public void test16()  throws Throwable  {
      DLFileRankSoap dLFileRankSoap0 = new DLFileRankSoap();
      long long0 = dLFileRankSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test17()  throws Throwable  {
      LinkedList<DLFileRank> linkedList0 = new LinkedList<DLFileRank>();
      DLFileRankSoap[] dLFileRankSoapArray0 = DLFileRankSoap.toSoapModels((List<DLFileRank>) linkedList0);
      assertNotNull(dLFileRankSoapArray0);
  }

  @Test
  public void test18()  throws Throwable  {
      LinkedList<DLFileRank> linkedList0 = new LinkedList<DLFileRank>();
      linkedList0.add((DLFileRank) null);
      // Undeclared exception!
      try {
        DLFileRankSoap.toSoapModels((List<DLFileRank>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
