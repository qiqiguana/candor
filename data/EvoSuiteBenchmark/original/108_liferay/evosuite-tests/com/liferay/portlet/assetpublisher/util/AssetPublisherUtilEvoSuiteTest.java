/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.assetpublisher.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.bean.BeanLocatorException;
import com.liferay.portal.model.Layout;
import com.liferay.portal.model.User;
import com.liferay.portal.model.UserWrapper;
import com.liferay.portlet.PortalPreferencesImpl;
import com.liferay.portlet.PortalPreferencesWrapper;
import com.liferay.portlet.PortletPreferencesImpl;
import com.liferay.portlet.Preference;
import com.liferay.portlet.RenderRequestImpl;
import com.liferay.portlet.asset.model.AssetRendererFactory;
import com.liferay.portlet.asset.service.persistence.AssetEntryQuery;
import com.liferay.portlet.assetpublisher.util.AssetPublisherUtil;
import com.liferay.portlet.calendar.asset.CalEventAssetRendererFactory;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import javax.portlet.PortletPreferences;
import javax.portlet.PortletRequest;
import javax.portlet.RenderRequest;
import javax.portlet.filter.RenderRequestWrapper;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AssetPublisherUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CalEventAssetRendererFactory calEventAssetRendererFactory0 = new CalEventAssetRendererFactory();
      String string0 = AssetPublisherUtil.getClassName((AssetRendererFactory) calEventAssetRendererFactory0);
      assertNotNull(string0);
      assertEquals("CalEventAssetRendererFactory", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      PortletPreferencesImpl portletPreferencesImpl0 = new PortletPreferencesImpl();
      RenderRequestImpl renderRequestImpl0 = new RenderRequestImpl();
      try {
        AssetPublisherUtil.addSelection((PortletRequest) renderRequestImpl0, (PortletPreferences) portletPreferencesImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      RenderRequestImpl renderRequestImpl0 = new RenderRequestImpl();
      RenderRequestWrapper renderRequestWrapper0 = new RenderRequestWrapper((RenderRequest) renderRequestImpl0);
      Long long0 = new Long(15L);
      // Undeclared exception!
      try {
        AssetPublisherUtil.addRecentFolderId((PortletRequest) renderRequestWrapper0, "Can't evaluate the month.", (long) long0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      AssetPublisherUtil assetPublisherUtil0 = new AssetPublisherUtil();
      assertNotNull(assetPublisherUtil0);
  }

  @Test
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[10];
      AssetPublisherUtil.addUserAttributes((User) null, stringArray0, (AssetEntryQuery) null);
  }

  @Test
  public void test5()  throws Throwable  {
      UserWrapper userWrapper0 = new UserWrapper((User) null);
      String[] stringArray0 = new String[1];
      AssetEntryQuery assetEntryQuery0 = new AssetEntryQuery();
      try {
        AssetPublisherUtil.addUserAttributes((User) userWrapper0, stringArray0, assetEntryQuery0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      PortletPreferencesImpl portletPreferencesImpl0 = new PortletPreferencesImpl();
      long[] longArray0 = new long[8];
      try {
        AssetPublisherUtil.getAssetEntryQuery((PortletPreferences) portletPreferencesImpl0, longArray0);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      PortalPreferencesWrapper portalPreferencesWrapper0 = new PortalPreferencesWrapper(portalPreferencesImpl0);
      Long[] longArray0 = new Long[10];
      longArray0[2] = (Long) (-868L);
      String[] stringArray0 = AssetPublisherUtil.getAssetTagNames((PortletPreferences) portalPreferencesWrapper0, (long) longArray0[2]);
      assertNotNull(stringArray0);
  }

  @Test
  public void test8()  throws Throwable  {
      PortletPreferencesImpl portletPreferencesImpl0 = new PortletPreferencesImpl();
      long[] longArray0 = new long[8];
      long[] longArray1 = AssetPublisherUtil.getClassNameIds((PortletPreferences) portletPreferencesImpl0, longArray0);
      assertNotNull(longArray1);
      assertSame(longArray1, longArray0);
  }

  @Test
  public void test9()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      PortalPreferencesWrapper portalPreferencesWrapper0 = new PortalPreferencesWrapper(portalPreferencesImpl0);
      Long[] longArray0 = new Long[10];
      Long[] longArray1 = AssetPublisherUtil.getClassTypeIds((PortletPreferences) portalPreferencesWrapper0, "", longArray0);
      assertSame(longArray0, longArray1);
      assertNotNull(longArray1);
  }

  @Test
  public void test10()  throws Throwable  {
      PortletPreferencesImpl portletPreferencesImpl0 = new PortletPreferencesImpl();
      long[] longArray0 = AssetPublisherUtil.getGroupIds((PortletPreferences) portletPreferencesImpl0, 0L, (Layout) null);
      assertNotNull(longArray0);
  }

  @Test
  public void test11()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      PortletPreferencesImpl portletPreferencesImpl0 = new PortletPreferencesImpl("GHGA8/YM[YY", (Map<String, Preference>) null);
      AssetPublisherUtil.removeAndStoreSelection((List<String>) linkedList0, (PortletPreferences) portletPreferencesImpl0);
      assertEquals(0L, portletPreferencesImpl0.getPlid());
  }

  @Test
  public void test12()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      PortletPreferencesImpl portletPreferencesImpl0 = new PortletPreferencesImpl("GHGA8/YM[YY", (Map<String, Preference>) null);
      portletPreferencesImpl0.reset();
      linkedList0.add("GHGA8/YM[YY");
      try {
        AssetPublisherUtil.removeAndStoreSelection((List<String>) linkedList0, (PortletPreferences) portletPreferencesImpl0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }
}
