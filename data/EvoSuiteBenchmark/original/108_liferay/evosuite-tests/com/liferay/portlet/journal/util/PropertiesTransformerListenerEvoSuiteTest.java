/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.journal.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.journal.util.PropertiesTransformerListener;
import java.util.HashMap;
import java.util.Map;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PropertiesTransformerListenerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PropertiesTransformerListener propertiesTransformerListener0 = new PropertiesTransformerListener();
      String string0 = propertiesTransformerListener0.onXml("GLOBAL-PROPERTIES");
      assertEquals("GLOBAL-PROPERTIES", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      PropertiesTransformerListener propertiesTransformerListener0 = new PropertiesTransformerListener();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      propertiesTransformerListener0.setTokens((Map<String, String>) hashMap0);
      String string0 = propertiesTransformerListener0.onOutput("ema.lArticleppoRequested6ody");
      assertEquals("ema.lArticleppoRequested6ody", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      PropertiesTransformerListener propertiesTransformerListener0 = new PropertiesTransformerListener();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("template_id", "GLOBAL-PROPERTIES");
      propertiesTransformerListener0.setTokens((Map<String, String>) hashMap0);
      String string0 = propertiesTransformerListener0.onOutput((String) null);
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      PropertiesTransformerListener propertiesTransformerListener0 = new PropertiesTransformerListener();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      propertiesTransformerListener0.setTokens((Map<String, String>) hashMap0);
      hashMap0.put("template_id", "template_id");
      String string0 = propertiesTransformerListener0.onScript((String) null);
      assertNull(string0);
  }
}
