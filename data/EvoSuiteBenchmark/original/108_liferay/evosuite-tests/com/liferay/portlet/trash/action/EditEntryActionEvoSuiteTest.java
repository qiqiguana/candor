/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.trash.action;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.bean.BeanLocatorException;
import com.liferay.portal.kernel.portlet.LiferayPortletConfig;
import com.liferay.portlet.ActionRequestImpl;
import com.liferay.portlet.ActionResponseImpl;
import com.liferay.portlet.trash.action.EditEntryAction;
import com.liferay.portlet.trash.model.TrashEntry;
import javax.portlet.ActionRequest;
import javax.portlet.ActionResponse;
import javax.portlet.PortletConfig;
import javax.portlet.RenderRequest;
import javax.portlet.RenderResponse;
import javax.portlet.filter.ActionRequestWrapper;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.DynaActionForm;
import org.junit.BeforeClass;
import org.portletbridge.portlet.BridgeEditPortlet;

@RunWith(EvoSuiteRunner.class)
public class EditEntryActionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      EditEntryAction editEntryAction0 = new EditEntryAction();
      ActionRequestImpl actionRequestImpl0 = new ActionRequestImpl();
      ActionRequestWrapper actionRequestWrapper0 = new ActionRequestWrapper((ActionRequest) actionRequestImpl0);
      try {
        editEntryAction0.restoreOverride((ActionRequest) actionRequestWrapper0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      EditEntryAction editEntryAction0 = new EditEntryAction();
      try {
        editEntryAction0.deleteEntry(14L);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      EditEntryAction editEntryAction0 = new EditEntryAction();
      try {
        editEntryAction0.restoreEntry(0L);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      EditEntryAction editEntryAction0 = new EditEntryAction();
      ActionResponseImpl actionResponseImpl0 = new ActionResponseImpl();
      try {
        editEntryAction0.checkEntry((ActionRequest) null, (ActionResponse) actionResponseImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      EditEntryAction editEntryAction0 = new EditEntryAction();
      ActionRequestImpl actionRequestImpl0 = new ActionRequestImpl();
      try {
        editEntryAction0.emptyTrash((ActionRequest) actionRequestImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      EditEntryAction editEntryAction0 = new EditEntryAction();
      DynaActionForm dynaActionForm0 = new DynaActionForm();
      BridgeEditPortlet bridgeEditPortlet0 = new BridgeEditPortlet();
      try {
        editEntryAction0.render((ActionMapping) null, (ActionForm) dynaActionForm0, (PortletConfig) bridgeEditPortlet0, (RenderRequest) null, (RenderResponse) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      EditEntryAction editEntryAction0 = new EditEntryAction();
      ActionRequestImpl actionRequestImpl0 = new ActionRequestImpl();
      TrashEntry[] trashEntryArray0 = new TrashEntry[1];
      try {
        editEntryAction0.addRestoreData((LiferayPortletConfig) null, (ActionRequest) actionRequestImpl0, trashEntryArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
