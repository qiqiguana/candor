/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.messageboards.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.messageboards.model.MBThreadFlag;
import com.liferay.portlet.messageboards.model.MBThreadFlagSoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MBThreadFlagSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MBThreadFlagSoap mBThreadFlagSoap0 = new MBThreadFlagSoap();
      long long0 = mBThreadFlagSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test1()  throws Throwable  {
      MBThreadFlagSoap mBThreadFlagSoap0 = new MBThreadFlagSoap();
      mBThreadFlagSoap0.setPrimaryKey(0L);
      assertEquals(0L, mBThreadFlagSoap0.getPrimaryKey());
  }

  @Test
  public void test2()  throws Throwable  {
      MBThreadFlagSoap mBThreadFlagSoap0 = new MBThreadFlagSoap();
      mBThreadFlagSoap0.setUserId(0L);
      assertEquals(0L, mBThreadFlagSoap0.getThreadId());
  }

  @Test
  public void test3()  throws Throwable  {
      MBThreadFlagSoap mBThreadFlagSoap0 = new MBThreadFlagSoap();
      long long0 = mBThreadFlagSoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test4()  throws Throwable  {
      MBThreadFlagSoap mBThreadFlagSoap0 = new MBThreadFlagSoap();
      mBThreadFlagSoap0.setModifiedDate((Date) null);
      assertEquals(0L, mBThreadFlagSoap0.getPrimaryKey());
  }

  @Test
  public void test5()  throws Throwable  {
      MBThreadFlagSoap mBThreadFlagSoap0 = new MBThreadFlagSoap();
      Date date0 = mBThreadFlagSoap0.getModifiedDate();
      assertNull(date0);
  }

  @Test
  public void test6()  throws Throwable  {
      MBThreadFlagSoap mBThreadFlagSoap0 = new MBThreadFlagSoap();
      long long0 = mBThreadFlagSoap0.getThreadFlagId();
      assertEquals(0L, long0);
  }

  @Test
  public void test7()  throws Throwable  {
      MBThreadFlagSoap mBThreadFlagSoap0 = new MBThreadFlagSoap();
      mBThreadFlagSoap0.setThreadId(0L);
      assertEquals(0L, mBThreadFlagSoap0.getThreadId());
  }

  @Test
  public void test8()  throws Throwable  {
      MBThreadFlagSoap mBThreadFlagSoap0 = new MBThreadFlagSoap();
      long long0 = mBThreadFlagSoap0.getThreadId();
      assertEquals(0L, long0);
  }

  @Test
  public void test9()  throws Throwable  {
      LinkedList<MBThreadFlag> linkedList0 = new LinkedList<MBThreadFlag>();
      linkedList0.add((MBThreadFlag) null);
      // Undeclared exception!
      try {
        MBThreadFlagSoap.toSoapModels((List<MBThreadFlag>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      MBThreadFlag[][] mBThreadFlagArray0 = new MBThreadFlag[1][7];
      // Undeclared exception!
      try {
        MBThreadFlagSoap.toSoapModels(mBThreadFlagArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      LinkedList<MBThreadFlag> linkedList0 = new LinkedList<MBThreadFlag>();
      MBThreadFlagSoap[] mBThreadFlagSoapArray0 = MBThreadFlagSoap.toSoapModels((List<MBThreadFlag>) linkedList0);
      assertNotNull(mBThreadFlagSoapArray0);
  }
}
