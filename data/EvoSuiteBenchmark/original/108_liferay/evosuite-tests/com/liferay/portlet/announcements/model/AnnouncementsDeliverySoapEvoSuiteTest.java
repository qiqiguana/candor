/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.announcements.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.announcements.model.AnnouncementsDelivery;
import com.liferay.portlet.announcements.model.AnnouncementsDeliverySoap;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AnnouncementsDeliverySoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AnnouncementsDeliverySoap announcementsDeliverySoap0 = new AnnouncementsDeliverySoap();
      boolean boolean0 = announcementsDeliverySoap0.getEmail();
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      AnnouncementsDeliverySoap announcementsDeliverySoap0 = new AnnouncementsDeliverySoap();
      announcementsDeliverySoap0.setWebsite(true);
      assertEquals(true, announcementsDeliverySoap0.isWebsite());
      assertEquals(true, announcementsDeliverySoap0.getWebsite());
  }

  @Test
  public void test2()  throws Throwable  {
      AnnouncementsDeliverySoap announcementsDeliverySoap0 = new AnnouncementsDeliverySoap();
      announcementsDeliverySoap0.setEmail(true);
      assertEquals(true, announcementsDeliverySoap0.isEmail());
      assertEquals(true, announcementsDeliverySoap0.getEmail());
  }

  @Test
  public void test3()  throws Throwable  {
      AnnouncementsDeliverySoap announcementsDeliverySoap0 = new AnnouncementsDeliverySoap();
      long long0 = announcementsDeliverySoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test4()  throws Throwable  {
      AnnouncementsDeliverySoap announcementsDeliverySoap0 = new AnnouncementsDeliverySoap();
      announcementsDeliverySoap0.setPrimaryKey(0L);
      assertEquals(0L, announcementsDeliverySoap0.getUserId());
  }

  @Test
  public void test5()  throws Throwable  {
      AnnouncementsDeliverySoap announcementsDeliverySoap0 = new AnnouncementsDeliverySoap();
      announcementsDeliverySoap0.setCompanyId(8L);
      assertEquals(8L, announcementsDeliverySoap0.getCompanyId());
  }

  @Test
  public void test6()  throws Throwable  {
      AnnouncementsDeliverySoap announcementsDeliverySoap0 = new AnnouncementsDeliverySoap();
      String string0 = announcementsDeliverySoap0.getType();
      assertNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      AnnouncementsDeliverySoap announcementsDeliverySoap0 = new AnnouncementsDeliverySoap();
      boolean boolean0 = announcementsDeliverySoap0.getWebsite();
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      AnnouncementsDeliverySoap announcementsDeliverySoap0 = new AnnouncementsDeliverySoap();
      boolean boolean0 = announcementsDeliverySoap0.isSms();
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      AnnouncementsDeliverySoap announcementsDeliverySoap0 = new AnnouncementsDeliverySoap();
      announcementsDeliverySoap0.setType("cd/");
      assertEquals(false, announcementsDeliverySoap0.isEmail());
  }

  @Test
  public void test10()  throws Throwable  {
      AnnouncementsDeliverySoap announcementsDeliverySoap0 = new AnnouncementsDeliverySoap();
      boolean boolean0 = announcementsDeliverySoap0.getSms();
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      AnnouncementsDeliverySoap announcementsDeliverySoap0 = new AnnouncementsDeliverySoap();
      boolean boolean0 = announcementsDeliverySoap0.isEmail();
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      AnnouncementsDeliverySoap announcementsDeliverySoap0 = new AnnouncementsDeliverySoap();
      boolean boolean0 = announcementsDeliverySoap0.isWebsite();
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      AnnouncementsDeliverySoap announcementsDeliverySoap0 = new AnnouncementsDeliverySoap();
      long long0 = announcementsDeliverySoap0.getDeliveryId();
      assertEquals(0L, long0);
  }

  @Test
  public void test14()  throws Throwable  {
      AnnouncementsDeliverySoap announcementsDeliverySoap0 = new AnnouncementsDeliverySoap();
      announcementsDeliverySoap0.setUserId(0L);
      assertEquals(0L, announcementsDeliverySoap0.getDeliveryId());
  }

  @Test
  public void test15()  throws Throwable  {
      AnnouncementsDeliverySoap announcementsDeliverySoap0 = new AnnouncementsDeliverySoap();
      announcementsDeliverySoap0.setSms(false);
      assertEquals(false, announcementsDeliverySoap0.isSms());
      assertEquals(false, announcementsDeliverySoap0.getSms());
  }

  @Test
  public void test16()  throws Throwable  {
      AnnouncementsDeliverySoap announcementsDeliverySoap0 = new AnnouncementsDeliverySoap();
      long long0 = announcementsDeliverySoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test17()  throws Throwable  {
      AnnouncementsDeliverySoap announcementsDeliverySoap0 = new AnnouncementsDeliverySoap();
      long long0 = announcementsDeliverySoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test18()  throws Throwable  {
      AnnouncementsDelivery[][] announcementsDeliveryArray0 = new AnnouncementsDelivery[1][4];
      // Undeclared exception!
      try {
        AnnouncementsDeliverySoap.toSoapModels(announcementsDeliveryArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test19()  throws Throwable  {
      LinkedList<AnnouncementsDelivery> linkedList0 = new LinkedList<AnnouncementsDelivery>();
      AnnouncementsDeliverySoap[] announcementsDeliverySoapArray0 = AnnouncementsDeliverySoap.toSoapModels((List<AnnouncementsDelivery>) linkedList0);
      assertNotNull(announcementsDeliverySoapArray0);
  }

  @Test
  public void test20()  throws Throwable  {
      LinkedList<AnnouncementsDelivery> linkedList0 = new LinkedList<AnnouncementsDelivery>();
      linkedList0.add((AnnouncementsDelivery) null);
      // Undeclared exception!
      try {
        AnnouncementsDeliverySoap.toSoapModels((List<AnnouncementsDelivery>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
