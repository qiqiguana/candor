/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.asset.service.http;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.kernel.workflow.comparator.BaseWorkflowTaskDueDateComparator;
import com.liferay.portal.kernel.workflow.comparator.BaseWorkflowTaskNameComparator;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portlet.asset.service.http.AssetCategoryServiceSoap;
import java.rmi.RemoteException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AssetCategoryServiceSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BaseWorkflowTaskNameComparator baseWorkflowTaskNameComparator0 = new BaseWorkflowTaskNameComparator();
      try {
        AssetCategoryServiceSoap.getVocabularyCategories(580L, "", 434L, 0, 0, (OrderByComparator) baseWorkflowTaskNameComparator0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      BaseWorkflowTaskDueDateComparator baseWorkflowTaskDueDateComparator0 = new BaseWorkflowTaskDueDateComparator();
      try {
        AssetCategoryServiceSoap.getVocabularyCategories((-1286L), (-198), 0, (OrderByComparator) baseWorkflowTaskDueDateComparator0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      AssetCategoryServiceSoap assetCategoryServiceSoap0 = new AssetCategoryServiceSoap();
      assertNotNull(assetCategoryServiceSoap0);
  }

  @Test
  public void test3()  throws Throwable  {
      BaseWorkflowTaskNameComparator baseWorkflowTaskNameComparator0 = new BaseWorkflowTaskNameComparator(false);
      try {
        AssetCategoryServiceSoap.getVocabularyCategories(1569L, (-1L), 1, (-726), (OrderByComparator) baseWorkflowTaskNameComparator0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[4];
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        AssetCategoryServiceSoap.updateCategory((-1L), 1136L, stringArray0, stringArray0, stringArray0, stringArray0, 0L, stringArray0, serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      try {
        AssetCategoryServiceSoap.getJSONVocabularyCategories((-1209L), 0, 0, (OrderByComparator) null);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      BaseWorkflowTaskNameComparator baseWorkflowTaskNameComparator0 = new BaseWorkflowTaskNameComparator();
      try {
        AssetCategoryServiceSoap.getVocabularyRootCategories((-1L), (-223), (-223), (OrderByComparator) baseWorkflowTaskNameComparator0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      long[] longArray0 = new long[1];
      try {
        AssetCategoryServiceSoap.deleteCategories(longArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      try {
        AssetCategoryServiceSoap.getCategories((String) null, (-244L));
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      try {
        AssetCategoryServiceSoap.getVocabularyCategoriesCount((-1008L), "tickerSymbol", (-1008L));
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      long[] longArray0 = new long[8];
      try {
        AssetCategoryServiceSoap.getJSONSearch((long) (-1733), "Qh", longArray0, (-1733), 105);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      try {
        AssetCategoryServiceSoap.deleteCategory(0L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      BaseWorkflowTaskDueDateComparator baseWorkflowTaskDueDateComparator0 = new BaseWorkflowTaskDueDateComparator();
      try {
        AssetCategoryServiceSoap.getJSONVocabularyCategories(0L, (String) null, 1374L, 1, 1, (OrderByComparator) baseWorkflowTaskDueDateComparator0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      try {
        AssetCategoryServiceSoap.getCategory(0L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      try {
        AssetCategoryServiceSoap.getVocabularyCategoriesCount((-1L), 590L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test15()  throws Throwable  {
      BaseWorkflowTaskDueDateComparator baseWorkflowTaskDueDateComparator0 = new BaseWorkflowTaskDueDateComparator(false);
      try {
        AssetCategoryServiceSoap.getChildCategories((-1072L), 0, 0, (OrderByComparator) baseWorkflowTaskDueDateComparator0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test16()  throws Throwable  {
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        AssetCategoryServiceSoap.moveCategory(1L, 0L, (-1751L), serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[9];
      try {
        AssetCategoryServiceSoap.search(471L, "addressId", stringArray0, 234, 1);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      try {
        AssetCategoryServiceSoap.search(171L, "", 1L, 0, 0, (OrderByComparator) null);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test19()  throws Throwable  {
      try {
        AssetCategoryServiceSoap.getChildCategories(0L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test20()  throws Throwable  {
      String[] stringArray0 = new String[9];
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        AssetCategoryServiceSoap.addCategory(0L, stringArray0, stringArray0, stringArray0, stringArray0, 989L, stringArray0, serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
      }
  }
}
