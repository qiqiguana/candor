/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.shopping.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.shopping.model.ShoppingItem;
import com.liferay.portlet.shopping.model.ShoppingItemSoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ShoppingItemSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setDiscount((double) 0L);
      assertEquals(0.0, shoppingItemSoap0.getDiscount(), 0.01D);
  }

  @Test
  public void test1()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      boolean boolean0 = shoppingItemSoap0.isFeatured();
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      boolean boolean0 = shoppingItemSoap0.isLargeImage();
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      long long0 = shoppingItemSoap0.getSmallImageId();
      assertEquals(0L, long0);
  }

  @Test
  public void test4()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      String string0 = shoppingItemSoap0.getFieldsQuantities();
      assertNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setStockQuantity(0);
      assertEquals(0, shoppingItemSoap0.getStockQuantity());
  }

  @Test
  public void test6()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      int int0 = shoppingItemSoap0.getMinQuantity();
      assertEquals(0, int0);
  }

  @Test
  public void test7()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setMediumImageURL((String) null);
      assertEquals(0.0, shoppingItemSoap0.getPrice(), 0.01D);
  }

  @Test
  public void test8()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setMediumImage(false);
      assertEquals(false, shoppingItemSoap0.isMediumImage());
      assertEquals(false, shoppingItemSoap0.getMediumImage());
  }

  @Test
  public void test9()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      String string0 = shoppingItemSoap0.getLargeImageURL();
      assertNull(string0);
  }

  @Test
  public void test10()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setSale(false);
      assertEquals(false, shoppingItemSoap0.getSale());
      assertEquals(false, shoppingItemSoap0.isSale());
  }

  @Test
  public void test11()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setSmallImageURL((String) null);
      assertEquals(false, shoppingItemSoap0.isLargeImage());
  }

  @Test
  public void test12()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      double double0 = shoppingItemSoap0.getShipping();
      assertEquals(0.0, double0, 0.01D);
  }

  @Test
  public void test13()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      int int0 = shoppingItemSoap0.getMaxQuantity();
      assertEquals(0, int0);
  }

  @Test
  public void test14()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      boolean boolean0 = shoppingItemSoap0.isUseShippingFormula();
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      double double0 = shoppingItemSoap0.getPrice();
      assertEquals(0.0, double0, 0.01D);
  }

  @Test
  public void test16()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setMediumImageId((-1276L));
      assertEquals((-1276L), shoppingItemSoap0.getMediumImageId());
  }

  @Test
  public void test17()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      boolean boolean0 = shoppingItemSoap0.isSale();
      assertEquals(false, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      boolean boolean0 = shoppingItemSoap0.getFeatured();
      assertEquals(false, boolean0);
  }

  @Test
  public void test19()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setMaxQuantity(573);
      assertEquals(573, shoppingItemSoap0.getMaxQuantity());
  }

  @Test
  public void test20()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setFields(false);
      assertEquals(false, shoppingItemSoap0.getFields());
      assertEquals(false, shoppingItemSoap0.isFields());
  }

  @Test
  public void test21()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setRequiresShipping(false);
      assertEquals(false, shoppingItemSoap0.getRequiresShipping());
      assertEquals(false, shoppingItemSoap0.isRequiresShipping());
  }

  @Test
  public void test22()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      boolean boolean0 = shoppingItemSoap0.getRequiresShipping();
      assertEquals(false, boolean0);
  }

  @Test
  public void test23()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      Date date0 = shoppingItemSoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test24()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      long long0 = shoppingItemSoap0.getItemId();
      assertEquals(0L, long0);
  }

  @Test
  public void test25()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      long long0 = shoppingItemSoap0.getLargeImageId();
      assertEquals(0L, long0);
  }

  @Test
  public void test26()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setDescription("gZd");
      assertEquals(false, shoppingItemSoap0.isFields());
  }

  @Test
  public void test27()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setUseShippingFormula(false);
      assertEquals(false, shoppingItemSoap0.isUseShippingFormula());
      assertEquals(false, shoppingItemSoap0.getUseShippingFormula());
  }

  @Test
  public void test28()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      String string0 = shoppingItemSoap0.getSmallImageURL();
      assertNull(string0);
  }

  @Test
  public void test29()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setTaxable(false);
      assertEquals(false, shoppingItemSoap0.getTaxable());
      assertEquals(false, shoppingItemSoap0.isTaxable());
  }

  @Test
  public void test30()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      long long0 = shoppingItemSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test31()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setMinQuantity((-804));
      assertEquals(-804, shoppingItemSoap0.getMinQuantity());
  }

  @Test
  public void test32()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      boolean boolean0 = shoppingItemSoap0.getUseShippingFormula();
      assertEquals(false, boolean0);
  }

  @Test
  public void test33()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setPrimaryKey(0L);
      assertNull(shoppingItemSoap0.getSku());
  }

  @Test
  public void test34()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      long long0 = shoppingItemSoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test35()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      String string0 = shoppingItemSoap0.getMediumImageURL();
      assertNull(string0);
  }

  @Test
  public void test36()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      boolean boolean0 = shoppingItemSoap0.getLargeImage();
      assertEquals(false, boolean0);
  }

  @Test
  public void test37()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      long long0 = shoppingItemSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test38()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      String string0 = shoppingItemSoap0.getSku();
      assertNull(string0);
  }

  @Test
  public void test39()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      String string0 = shoppingItemSoap0.getProperties();
      assertNull(string0);
  }

  @Test
  public void test40()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      boolean boolean0 = shoppingItemSoap0.isMediumImage();
      assertEquals(false, boolean0);
  }

  @Test
  public void test41()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setUserId(0L);
      assertEquals(false, shoppingItemSoap0.getSale());
  }

  @Test
  public void test42()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      double double0 = shoppingItemSoap0.getDiscount();
      assertEquals(0.0, double0, 0.01D);
  }

  @Test
  public void test43()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      int int0 = shoppingItemSoap0.getStockQuantity();
      assertEquals(0, int0);
  }

  @Test
  public void test44()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      String string0 = shoppingItemSoap0.getDescription();
      assertNull(string0);
  }

  @Test
  public void test45()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setLargeImageId(21L);
      assertEquals(21L, shoppingItemSoap0.getLargeImageId());
  }

  @Test
  public void test46()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      boolean boolean0 = shoppingItemSoap0.isSmallImage();
      assertEquals(false, boolean0);
  }

  @Test
  public void test47()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      boolean boolean0 = shoppingItemSoap0.getSmallImage();
      assertEquals(false, boolean0);
  }

  @Test
  public void test48()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setName("gZd");
      assertEquals(0L, shoppingItemSoap0.getSmallImageId());
  }

  @Test
  public void test49()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      boolean boolean0 = shoppingItemSoap0.getFields();
      assertEquals(false, boolean0);
  }

  @Test
  public void test50()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setFieldsQuantities((String) null);
      assertEquals(false, shoppingItemSoap0.getSmallImage());
  }

  @Test
  public void test51()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setUserName(";-H+w^SG");
      assertEquals(0, shoppingItemSoap0.getStockQuantity());
  }

  @Test
  public void test52()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      boolean boolean0 = shoppingItemSoap0.isRequiresShipping();
      assertEquals(false, boolean0);
  }

  @Test
  public void test53()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setModifiedDate((Date) null);
      assertEquals(0.0, shoppingItemSoap0.getPrice(), 0.01D);
  }

  @Test
  public void test54()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      boolean boolean0 = shoppingItemSoap0.getTaxable();
      assertEquals(false, boolean0);
  }

  @Test
  public void test55()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setProperties((String) null);
      assertEquals(false, shoppingItemSoap0.isSmallImage());
  }

  @Test
  public void test56()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setSmallImageId((long) 0);
      assertNull(shoppingItemSoap0.getLargeImageURL());
  }

  @Test
  public void test57()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setPrice((double) 0L);
      assertEquals(0.0, shoppingItemSoap0.getPrice(), 0.01D);
  }

  @Test
  public void test58()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      boolean boolean0 = shoppingItemSoap0.isFields();
      assertEquals(false, boolean0);
  }

  @Test
  public void test59()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setShipping((double) 0);
      assertEquals(0.0, shoppingItemSoap0.getShipping(), 0.01D);
  }

  @Test
  public void test60()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setSku((String) null);
      assertNull(shoppingItemSoap0.getName());
  }

  @Test
  public void test61()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setFeatured(false);
      assertEquals(false, shoppingItemSoap0.getFeatured());
      assertEquals(false, shoppingItemSoap0.isFeatured());
  }

  @Test
  public void test62()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setSmallImage(false);
      assertEquals(false, shoppingItemSoap0.getSmallImage());
      assertEquals(false, shoppingItemSoap0.isSmallImage());
  }

  @Test
  public void test63()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      long long0 = shoppingItemSoap0.getCategoryId();
      assertEquals(0L, long0);
  }

  @Test
  public void test64()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      boolean boolean0 = shoppingItemSoap0.getSale();
      assertEquals(false, boolean0);
  }

  @Test
  public void test65()  throws Throwable  {
      LinkedList<ShoppingItem> linkedList0 = new LinkedList<ShoppingItem>();
      linkedList0.add((ShoppingItem) null);
      // Undeclared exception!
      try {
        ShoppingItemSoap.toSoapModels((List<ShoppingItem>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test66()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      String string0 = shoppingItemSoap0.getName();
      assertNull(string0);
  }

  @Test
  public void test67()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      Date date0 = shoppingItemSoap0.getModifiedDate();
      assertNull(date0);
  }

  @Test
  public void test68()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setLargeImageURL("gZd");
      assertEquals(0L, shoppingItemSoap0.getGroupId());
  }

  @Test
  public void test69()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      String string0 = shoppingItemSoap0.getUserName();
      assertNull(string0);
  }

  @Test
  public void test70()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setLargeImage(false);
      assertEquals(false, shoppingItemSoap0.isLargeImage());
      assertEquals(false, shoppingItemSoap0.getLargeImage());
  }

  @Test
  public void test71()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      boolean boolean0 = shoppingItemSoap0.isTaxable();
      assertEquals(false, boolean0);
  }

  @Test
  public void test72()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      long long0 = shoppingItemSoap0.getMediumImageId();
      assertEquals(0L, long0);
  }

  @Test
  public void test73()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      Date date0 = new Date();
      shoppingItemSoap0.setCreateDate(date0);
      assertEquals(false, shoppingItemSoap0.isTaxable());
  }

  @Test
  public void test74()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setCompanyId(0L);
      assertEquals(0L, shoppingItemSoap0.getLargeImageId());
  }

  @Test
  public void test75()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setCategoryId(0L);
      assertNull(shoppingItemSoap0.getDescription());
  }

  @Test
  public void test76()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      boolean boolean0 = shoppingItemSoap0.getMediumImage();
      assertEquals(false, boolean0);
  }

  @Test
  public void test77()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      long long0 = shoppingItemSoap0.getGroupId();
      assertEquals(0L, long0);
  }

  @Test
  public void test78()  throws Throwable  {
      ShoppingItemSoap shoppingItemSoap0 = new ShoppingItemSoap();
      shoppingItemSoap0.setGroupId((-1276L));
      assertEquals((-1276L), shoppingItemSoap0.getGroupId());
  }

  @Test
  public void test79()  throws Throwable  {
      ShoppingItem[][] shoppingItemArray0 = new ShoppingItem[1][1];
      // Undeclared exception!
      try {
        ShoppingItemSoap.toSoapModels(shoppingItemArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test80()  throws Throwable  {
      LinkedList<ShoppingItem> linkedList0 = new LinkedList<ShoppingItem>();
      ShoppingItemSoap[] shoppingItemSoapArray0 = ShoppingItemSoap.toSoapModels((List<ShoppingItem>) linkedList0);
      assertNotNull(shoppingItemSoapArray0);
  }
}
