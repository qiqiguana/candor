/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.trash.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.bean.BeanLocatorException;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.theme.ThemeDisplay;
import com.liferay.portlet.trash.util.TrashImpl;
import com.liferay.portlet.trash.util.comparator.EntryCreateDateComparator;
import com.liferay.portlet.trash.util.comparator.EntryTypeComparator;
import com.liferay.portlet.trash.util.comparator.EntryUserNameComparator;
import java.util.Date;
import org.jfree.data.time.Millisecond;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TrashImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TrashImpl trashImpl0 = new TrashImpl();
      String string0 = trashImpl0.stripTrashNamespace("nodeId");
      assertEquals("nodeId", string0);
      assertNotNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      TrashImpl trashImpl0 = new TrashImpl();
      String string0 = trashImpl0.appendTrashNamespace("groovy.util.ConfigSlurper$_parse_closure4");
      assertEquals("groovy.util.ConfigSlurper$_parse_closure4/0", string0);
      assertNotNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      TrashImpl trashImpl0 = new TrashImpl();
      trashImpl0.moveAttachmentFromTrash(0L, 0L, "", "");
  }

  @Test
  public void test3()  throws Throwable  {
      TrashImpl trashImpl0 = new TrashImpl();
      // Undeclared exception!
      try {
        trashImpl0.moveAttachmentToTrash(862L, 862L, "groovy.util.ConfigSlurper$_parse_closure4", "groovy.util.ConfigSlurper$_parse_closure4");
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TrashImpl trashImpl0 = new TrashImpl();
      ThemeDisplay themeDisplay0 = new ThemeDisplay();
      // Undeclared exception!
      try {
        trashImpl0.getNewName(themeDisplay0, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TrashImpl trashImpl0 = new TrashImpl();
      Millisecond millisecond0 = new Millisecond();
      Date date0 = millisecond0.getEnd();
      String[] stringArray0 = new String[14];
      // Undeclared exception!
      try {
        trashImpl0.deleteEntriesAttachments(45L, 45L, date0, stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TrashImpl trashImpl0 = new TrashImpl();
      EntryCreateDateComparator entryCreateDateComparator0 = (EntryCreateDateComparator)trashImpl0.getEntryOrderByComparator("removed-date", "removed-date");
      assertNotNull(entryCreateDateComparator0);
      assertEquals(false, entryCreateDateComparator0.isAscending());
  }

  @Test
  public void test7()  throws Throwable  {
      TrashImpl trashImpl0 = new TrashImpl();
      EntryCreateDateComparator entryCreateDateComparator0 = (EntryCreateDateComparator)trashImpl0.getEntryOrderByComparator("a0\"k", "asc");
      assertNull(entryCreateDateComparator0);
  }

  @Test
  public void test8()  throws Throwable  {
      TrashImpl trashImpl0 = new TrashImpl();
      EntryUserNameComparator entryUserNameComparator0 = (EntryUserNameComparator)trashImpl0.getEntryOrderByComparator("removed-by", "removed-by");
      assertEquals(false, entryUserNameComparator0.isAscending());
      assertNotNull(entryUserNameComparator0);
  }

  @Test
  public void test9()  throws Throwable  {
      TrashImpl trashImpl0 = new TrashImpl();
      EntryTypeComparator entryTypeComparator0 = (EntryTypeComparator)trashImpl0.getEntryOrderByComparator("type", "type");
      assertEquals("classNameId DESC", entryTypeComparator0.getOrderBy());
      assertNotNull(entryTypeComparator0);
  }

  @Test
  public void test10()  throws Throwable  {
      TrashImpl trashImpl0 = new TrashImpl();
      String string0 = trashImpl0.getTrashTime("$CqavA,5[q", "$CqavA,5[q");
      assertNotNull(string0);
      assertEquals("$CqavA,5[q", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      TrashImpl trashImpl0 = new TrashImpl();
      String string0 = trashImpl0.getTrashTime("", "$CqavA,5[q");
      assertEquals("", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      TrashImpl trashImpl0 = new TrashImpl();
      // Undeclared exception!
      try {
        trashImpl0.moveAttachmentFromTrash(1853L, 1853L, "$CqavA,5[q", "$CqavA,5[q", "$CqavA,5[q");
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TrashImpl trashImpl0 = new TrashImpl();
      String string0 = trashImpl0.moveAttachmentToTrash(1853L, 1853L, (String) null, (String) null, (String) null);
      assertEquals("", string0);
  }

  @Test
  public void test14()  throws Throwable  {
      TrashImpl trashImpl0 = new TrashImpl();
      String string0 = trashImpl0.stripTrashNamespace("", "");
      assertEquals("", string0);
  }
}
