/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.StringParser;
import com.liferay.portlet.RouteImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RouteImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RouteImpl routeImpl0 = new RouteImpl("32OY)");
      routeImpl0.addOverriddenParameter("32OY)", "32OY)");
  }

  @Test
  public void test1()  throws Throwable  {
      RouteImpl routeImpl0 = new RouteImpl("");
      Set<String> set0 = routeImpl0.getIgnoredParameters();
      assertEquals(0, set0.size());
  }

  @Test
  public void test2()  throws Throwable  {
      RouteImpl routeImpl0 = new RouteImpl("");
      Map<String, StringParser> map0 = routeImpl0.getGeneratedParameters();
      assertEquals(0, map0.size());
  }

  @Test
  public void test3()  throws Throwable  {
      RouteImpl routeImpl0 = new RouteImpl("");
      assertNotNull(routeImpl0);
      
      Map<String, String> map0 = routeImpl0.getImplicitParameters();
      assertNotNull(map0);
      
      routeImpl0.addGeneratedParameter("[w!#$%&'*+/=?^_`{|}~-]+(?:.[w!#$%&'*+/=?^_`{|}~-]+)*@(?:[w](?:[w-]*[w])?.)+[w](?:[w-]*[w])?", "[w!#$%&'*+/=?^_`{|}~-]+(?:.[w!#$%&'*+/=?^_`{|}~-]+)*@(?:[w](?:[w-]*[w])?.)+[w](?:[w-]*[w])?");
      boolean boolean0 = routeImpl0.urlToParameters("", map0);
      assertEquals(true, boolean0);
      assertEquals(true, map0.isEmpty());
  }

  @Test
  public void test4()  throws Throwable  {
      RouteImpl routeImpl0 = new RouteImpl("J6nf");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      routeImpl0.addGeneratedParameter("", "J6nf");
      String string0 = routeImpl0.parametersToUrl((Map<String, String>) hashMap0);
      assertNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      RouteImpl routeImpl0 = new RouteImpl("");
      assertNotNull(routeImpl0);
      
      Map<String, String> map0 = routeImpl0.getImplicitParameters();
      assertNotNull(map0);
      
      routeImpl0.addImplicitParameter("Nh}\"I8HpM+5yhJvvj", "Nh}\"I8HpM+5yhJvvj");
      routeImpl0.parametersToUrl(map0);
      assertEquals(false, map0.isEmpty());
      assertEquals(1, map0.size());
  }

  @Test
  public void test6()  throws Throwable  {
      RouteImpl routeImpl0 = new RouteImpl("LEw[Y?R9~izFG");
      Map<String, String> map0 = routeImpl0.getOverriddenParameters();
      routeImpl0.addImplicitParameter(")z^x9TF^T<>i", "LEw[Y?R9~izFG");
      String string0 = routeImpl0.parametersToUrl(map0);
      assertNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      RouteImpl routeImpl0 = new RouteImpl("Nh}\"I8HpM+5yhJvvj");
      Map<String, String> map0 = routeImpl0.getImplicitParameters();
      routeImpl0.addGeneratedParameter("", "");
      String string0 = routeImpl0.parametersToUrl(map0);
      assertEquals("Nh}\"I8HpM+5yhJvvj", string0);
  }

  @Test
  public void test8()  throws Throwable  {
      RouteImpl routeImpl0 = new RouteImpl("Nh}\"I8HpM+5yhJvvj");
      assertNotNull(routeImpl0);
      
      Map<String, String> map0 = routeImpl0.getImplicitParameters();
      routeImpl0.addImplicitParameter("Nh}\"I8HpM+5yhJvvj", "Nh}\"I8HpM+5yhJvvj");
      String string0 = routeImpl0.parametersToUrl(map0);
      assertNotNull(string0);
      assertEquals(0, map0.size());
  }

  @Test
  public void test9()  throws Throwable  {
      RouteImpl routeImpl0 = new RouteImpl("Nh}\"I8HpM+5yhJvvj");
      Map<String, String> map0 = routeImpl0.getImplicitParameters();
      routeImpl0.addIgnoredParameter("Nh}\"I8HpM+5yhJvvj");
      String string0 = routeImpl0.parametersToUrl(map0);
      assertEquals("Nh}\"I8HpM+5yhJvvj", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      RouteImpl routeImpl0 = new RouteImpl("Nh}\"I8HpM+5yhJvvj");
      assertNotNull(routeImpl0);
      
      Map<String, String> map0 = routeImpl0.getImplicitParameters();
      assertNotNull(map0);
      
      boolean boolean0 = routeImpl0.urlToParameters("", map0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      RouteImpl routeImpl0 = new RouteImpl("");
      assertNotNull(routeImpl0);
      
      routeImpl0.addGeneratedParameter("", "");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      boolean boolean0 = routeImpl0.urlToParameters("", (Map<String, String>) hashMap0);
      assertEquals(1, hashMap0.size());
      assertEquals(true, boolean0);
  }
}
