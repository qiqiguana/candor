/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.announcements.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.announcements.model.AnnouncementsFlag;
import com.liferay.portlet.announcements.model.AnnouncementsFlagSoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AnnouncementsFlagSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AnnouncementsFlagSoap announcementsFlagSoap0 = new AnnouncementsFlagSoap();
      announcementsFlagSoap0.setPrimaryKey(0L);
      assertEquals(0L, announcementsFlagSoap0.getUserId());
  }

  @Test
  public void test1()  throws Throwable  {
      AnnouncementsFlagSoap announcementsFlagSoap0 = new AnnouncementsFlagSoap();
      announcementsFlagSoap0.setUserId(0L);
      assertEquals(0, announcementsFlagSoap0.getValue());
  }

  @Test
  public void test2()  throws Throwable  {
      AnnouncementsFlagSoap announcementsFlagSoap0 = new AnnouncementsFlagSoap();
      announcementsFlagSoap0.setValue((-9));
      assertEquals(-9, announcementsFlagSoap0.getValue());
  }

  @Test
  public void test3()  throws Throwable  {
      AnnouncementsFlagSoap announcementsFlagSoap0 = new AnnouncementsFlagSoap();
      long long0 = announcementsFlagSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test4()  throws Throwable  {
      AnnouncementsFlagSoap announcementsFlagSoap0 = new AnnouncementsFlagSoap();
      long long0 = announcementsFlagSoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test5()  throws Throwable  {
      AnnouncementsFlagSoap announcementsFlagSoap0 = new AnnouncementsFlagSoap();
      long long0 = announcementsFlagSoap0.getFlagId();
      assertEquals(0L, long0);
  }

  @Test
  public void test6()  throws Throwable  {
      AnnouncementsFlagSoap announcementsFlagSoap0 = new AnnouncementsFlagSoap();
      long long0 = announcementsFlagSoap0.getEntryId();
      assertEquals(0L, long0);
  }

  @Test
  public void test7()  throws Throwable  {
      AnnouncementsFlagSoap announcementsFlagSoap0 = new AnnouncementsFlagSoap();
      int int0 = announcementsFlagSoap0.getValue();
      assertEquals(0, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      AnnouncementsFlag[][] announcementsFlagArray0 = new AnnouncementsFlag[1][10];
      // Undeclared exception!
      try {
        AnnouncementsFlagSoap.toSoapModels(announcementsFlagArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      AnnouncementsFlagSoap announcementsFlagSoap0 = new AnnouncementsFlagSoap();
      announcementsFlagSoap0.setCreateDate((Date) null);
      assertEquals(0L, announcementsFlagSoap0.getEntryId());
  }

  @Test
  public void test10()  throws Throwable  {
      AnnouncementsFlagSoap announcementsFlagSoap0 = new AnnouncementsFlagSoap();
      Date date0 = announcementsFlagSoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test11()  throws Throwable  {
      AnnouncementsFlagSoap announcementsFlagSoap0 = new AnnouncementsFlagSoap();
      announcementsFlagSoap0.setEntryId(0L);
      assertEquals(0L, announcementsFlagSoap0.getPrimaryKey());
  }

  @Test
  public void test12()  throws Throwable  {
      LinkedList<AnnouncementsFlag> linkedList0 = new LinkedList<AnnouncementsFlag>();
      AnnouncementsFlagSoap[] announcementsFlagSoapArray0 = AnnouncementsFlagSoap.toSoapModels((List<AnnouncementsFlag>) linkedList0);
      assertNotNull(announcementsFlagSoapArray0);
  }

  @Test
  public void test13()  throws Throwable  {
      LinkedList<AnnouncementsFlag> linkedList0 = new LinkedList<AnnouncementsFlag>();
      linkedList0.add((AnnouncementsFlag) null);
      // Undeclared exception!
      try {
        AnnouncementsFlagSoap.toSoapModels((List<AnnouncementsFlag>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
