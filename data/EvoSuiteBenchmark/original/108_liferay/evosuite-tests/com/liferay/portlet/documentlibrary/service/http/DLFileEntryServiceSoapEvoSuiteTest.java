/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.documentlibrary.service.http;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.kernel.workflow.comparator.BaseWorkflowTaskDueDateComparator;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portlet.documentlibrary.service.http.DLFileEntryServiceSoap;
import java.rmi.RemoteException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DLFileEntryServiceSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[9];
      BaseWorkflowTaskDueDateComparator baseWorkflowTaskDueDateComparator0 = new BaseWorkflowTaskDueDateComparator(true);
      try {
        DLFileEntryServiceSoap.getFileEntries((-1L), (-1L), stringArray0, 1209, 0, (OrderByComparator) baseWorkflowTaskDueDateComparator0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[8];
      BaseWorkflowTaskDueDateComparator baseWorkflowTaskDueDateComparator0 = new BaseWorkflowTaskDueDateComparator(true);
      try {
        DLFileEntryServiceSoap.getGroupFileEntries((-1949L), (-1949L), 1792L, stringArray0, 65, 0, 65, (OrderByComparator) baseWorkflowTaskDueDateComparator0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      try {
        DLFileEntryServiceSoap.checkOutFileEntry((-1L), (ServiceContext) null);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      BaseWorkflowTaskDueDateComparator baseWorkflowTaskDueDateComparator0 = new BaseWorkflowTaskDueDateComparator(false);
      try {
        DLFileEntryServiceSoap.getGroupFileEntries(702L, 1L, 1L, 63, 63, (OrderByComparator) baseWorkflowTaskDueDateComparator0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      try {
        DLFileEntryServiceSoap.deleteFileVersion((-1L), "A}.");
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        DLFileEntryServiceSoap.copyFileEntry((-965L), (-965L), 1L, (-965L), serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      try {
        DLFileEntryServiceSoap.verifyFileEntryLock((-1137L), "");
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      String[] stringArray0 = new String[2];
      try {
        DLFileEntryServiceSoap.getGroupFileEntriesCount((-1063L), 1151L, (-1063L), stringArray0, 14);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      try {
        DLFileEntryServiceSoap.getFileEntriesCount((-1L), (-17L), 37);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      try {
        DLFileEntryServiceSoap.isFileEntryCheckedOut(1L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      try {
        DLFileEntryServiceSoap.getFileEntry((-251L), (-251L), "IW.;\"jvOvgp~B");
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      BaseWorkflowTaskDueDateComparator baseWorkflowTaskDueDateComparator0 = new BaseWorkflowTaskDueDateComparator();
      try {
        DLFileEntryServiceSoap.getFileEntries(0L, 0L, 0, 0, 400, (OrderByComparator) baseWorkflowTaskDueDateComparator0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        DLFileEntryServiceSoap.checkInFileEntry(0L, true, "", serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      try {
        DLFileEntryServiceSoap.fetchFileEntryByImageId(0L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      DLFileEntryServiceSoap dLFileEntryServiceSoap0 = new DLFileEntryServiceSoap();
      assertNotNull(dLFileEntryServiceSoap0);
  }

  @Test
  public void test15()  throws Throwable  {
      try {
        DLFileEntryServiceSoap.getFileEntry((-1482L));
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test16()  throws Throwable  {
      Long[] longArray0 = new Long[4];
      try {
        DLFileEntryServiceSoap.getFoldersFileEntriesCount((-1L), longArray0, (-327));
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test17()  throws Throwable  {
      try {
        DLFileEntryServiceSoap.getFileEntryByUuidAndGroupId("", (long) 0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        DLFileEntryServiceSoap.checkInFileEntry(205L, "r/^P*Wv_", serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test19()  throws Throwable  {
      BaseWorkflowTaskDueDateComparator baseWorkflowTaskDueDateComparator0 = new BaseWorkflowTaskDueDateComparator(true);
      try {
        DLFileEntryServiceSoap.getFileEntries((-1L), 0L, (-208L), (-1941), (-1941), (OrderByComparator) baseWorkflowTaskDueDateComparator0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test20()  throws Throwable  {
      try {
        DLFileEntryServiceSoap.getFileEntriesCount((-1152L), (-1152L));
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test21()  throws Throwable  {
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        DLFileEntryServiceSoap.revertFileEntry((-1335L), "4bS]n", serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test22()  throws Throwable  {
      try {
        DLFileEntryServiceSoap.hasFileEntryLock((-196L));
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test23()  throws Throwable  {
      try {
        DLFileEntryServiceSoap.cancelCheckOut(0L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test24()  throws Throwable  {
      String[] stringArray0 = new String[13];
      try {
        DLFileEntryServiceSoap.getFileEntriesCount((-542L), (-542L), stringArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test25()  throws Throwable  {
      BaseWorkflowTaskDueDateComparator baseWorkflowTaskDueDateComparator0 = new BaseWorkflowTaskDueDateComparator();
      try {
        DLFileEntryServiceSoap.getFileEntries(1L, 0L, 434, (-1), (OrderByComparator) baseWorkflowTaskDueDateComparator0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test26()  throws Throwable  {
      try {
        DLFileEntryServiceSoap.deleteFileEntry(1080L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test27()  throws Throwable  {
      try {
        DLFileEntryServiceSoap.getFileEntriesCount(0L, 0L, (-1L));
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test28()  throws Throwable  {
      try {
        DLFileEntryServiceSoap.getGroupFileEntriesCount((-1L), (-1L), 0L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test29()  throws Throwable  {
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        DLFileEntryServiceSoap.moveFileEntry(0L, (-1041L), serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test30()  throws Throwable  {
      try {
        DLFileEntryServiceSoap.verifyFileEntryCheckOut(0L, "");
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test31()  throws Throwable  {
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        DLFileEntryServiceSoap.checkOutFileEntry(0L, "e/A)", (-1098L), serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test32()  throws Throwable  {
      try {
        DLFileEntryServiceSoap.deleteFileEntry(0L, (-1L), ">zWUe&d.hhpp");
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }
}
