/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.wiki.model.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.wiki.model.impl.WikiPageCacheModel;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import javax.swing.DebugGraphics;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class WikiPageCacheModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      WikiPageCacheModel wikiPageCacheModel0 = new WikiPageCacheModel();
      // Undeclared exception!
      try {
        wikiPageCacheModel0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      WikiPageCacheModel wikiPageCacheModel0 = new WikiPageCacheModel();
      String string0 = wikiPageCacheModel0.toString();
      assertEquals("{uuid=null, pageId=0, resourcePrimKey=0, groupId=0, companyId=0, userId=0, userName=null, createDate=0, modifiedDate=0, nodeId=0, title=null, version=0.0, minorEdit=false, content=null, summary=null, format=null, head=false, parentTitle=null, redirectTitle=null, status=0, statusByUserId=0, statusByUserName=null, statusDate=0}", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      WikiPageCacheModel wikiPageCacheModel0 = new WikiPageCacheModel();
      wikiPageCacheModel0.uuid = "";
      PrintStream printStream0 = DebugGraphics.logStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) printStream0);
      wikiPageCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0L, wikiPageCacheModel0.userId);
  }

  @Test
  public void test3()  throws Throwable  {
      WikiPageCacheModel wikiPageCacheModel0 = new WikiPageCacheModel();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      wikiPageCacheModel0.userName = "";
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      wikiPageCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0L, wikiPageCacheModel0.resourcePrimKey);
  }

  @Test
  public void test4()  throws Throwable  {
      WikiPageCacheModel wikiPageCacheModel0 = new WikiPageCacheModel();
      wikiPageCacheModel0.title = "RX9.K]1m";
      PrintStream printStream0 = DebugGraphics.logStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) printStream0);
      wikiPageCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0L, wikiPageCacheModel0.userId);
  }

  @Test
  public void test5()  throws Throwable  {
      WikiPageCacheModel wikiPageCacheModel0 = new WikiPageCacheModel();
      wikiPageCacheModel0.redirectTitle = "";
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      wikiPageCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals("{uuid=null, pageId=0, resourcePrimKey=0, groupId=0, companyId=0, userId=0, userName=null, createDate=0, modifiedDate=0, nodeId=0, title=null, version=0.0, minorEdit=false, content=null, summary=null, format=null, head=false, parentTitle=null, redirectTitle=, status=0, statusByUserId=0, statusByUserName=null, statusDate=0}", wikiPageCacheModel0.toString());
  }
}
