/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.login.action;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.theme.ThemeDisplay;
import com.liferay.portlet.ActionRequestImpl;
import com.liferay.portlet.ActionResponseImpl;
import com.liferay.portlet.login.action.OpenIdAction;
import java.util.LinkedList;
import java.util.List;
import javax.portlet.ActionRequest;
import javax.portlet.ActionResponse;
import javax.portlet.filter.ActionResponseWrapper;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class OpenIdActionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      OpenIdAction openIdAction0 = new OpenIdAction();
      boolean boolean0 = openIdAction0.isCheckMethodOnProcessAction();
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      OpenIdAction openIdAction0 = new OpenIdAction();
      ThemeDisplay themeDisplay0 = new ThemeDisplay();
      ActionRequestImpl actionRequestImpl0 = new ActionRequestImpl();
      ActionResponseImpl actionResponseImpl0 = new ActionResponseImpl();
      ActionResponseWrapper actionResponseWrapper0 = new ActionResponseWrapper((ActionResponse) actionResponseImpl0);
      try {
        openIdAction0.sendOpenIdRequest(themeDisplay0, (ActionRequest) actionRequestImpl0, (ActionResponse) actionResponseWrapper0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      OpenIdAction openIdAction0 = new OpenIdAction();
      String string0 = openIdAction0.getFirstValue((List<String>) null);
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      OpenIdAction openIdAction0 = new OpenIdAction();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string0 = openIdAction0.getFirstValue((List<String>) linkedList0);
      assertNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      OpenIdAction openIdAction0 = new OpenIdAction();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.addFirst((String) null);
      String string0 = openIdAction0.getFirstValue((List<String>) linkedList0);
      assertNull(string0);
  }
}
