/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.journal.service;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.bean.BeanLocatorException;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portlet.journal.service.JournalFeedServiceUtil;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JournalFeedServiceUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try {
        JournalFeedServiceUtil.deleteFeed((-21L), "s&0;sAF;1-?");
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      JournalFeedServiceUtil journalFeedServiceUtil0 = new JournalFeedServiceUtil();
      assertNotNull(journalFeedServiceUtil0);
  }

  @Test
  public void test2()  throws Throwable  {
      ServiceContext serviceContext0 = new ServiceContext();
      // Undeclared exception!
      try {
        JournalFeedServiceUtil.updateFeed(15L, "requireUnlock", "requireUnlock", "requireUnlock", "requireUnlock", "requireUnlock", "requireUnlock", "requireUnlock", 1728, "requireUnlock", "requireUnlock", "requireUnlock", "requireUnlock", "requireUnlock", "requireUnlock", (double) 15L, serviceContext0);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try {
        JournalFeedServiceUtil.deleteFeed(1L, 1L);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try {
        JournalFeedServiceUtil.getFeed(965L, 965L);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      ServiceContext serviceContext0 = new ServiceContext();
      // Undeclared exception!
      try {
        JournalFeedServiceUtil.addFeed(437L, "egalId", true, "egalId", "egalId", "egalId", "egalId", "egalId", "egalId", 7, "egalId", "egalId", "egalId", "egalId", "egalId", "egalId", (double) 437L, serviceContext0);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try {
        JournalFeedServiceUtil.getBeanIdentifier();
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try {
        JournalFeedServiceUtil.getFeed((-27L), "<");
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      // Undeclared exception!
      try {
        JournalFeedServiceUtil.setBeanIdentifier("5D(k=#bj{%~Cc_");
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }
}
