/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.messageboards.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.messageboards.model.MBMessage;
import com.liferay.portlet.messageboards.model.MBMessageSoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MBMessageSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      long long0 = mBMessageSoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test1()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      String string0 = mBMessageSoap0.getBody();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      boolean boolean0 = mBMessageSoap0.getAttachments();
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      long long0 = mBMessageSoap0.getRootMessageId();
      assertEquals(0L, long0);
  }

  @Test
  public void test4()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      long long0 = mBMessageSoap0.getMessageId();
      assertEquals(0L, long0);
  }

  @Test
  public void test5()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setAnonymous(false);
      assertEquals(false, mBMessageSoap0.getAnonymous());
      assertEquals(false, mBMessageSoap0.isAnonymous());
  }

  @Test
  public void test6()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      long long0 = mBMessageSoap0.getParentMessageId();
      assertEquals(0L, long0);
  }

  @Test
  public void test7()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      long long0 = mBMessageSoap0.getGroupId();
      assertEquals(0L, long0);
  }

  @Test
  public void test8()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setThreadId(524L);
      assertEquals(524L, mBMessageSoap0.getThreadId());
  }

  @Test
  public void test9()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      boolean boolean0 = mBMessageSoap0.isAnswer();
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      String string0 = mBMessageSoap0.getUuid();
      assertNull(string0);
  }

  @Test
  public void test11()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      long long0 = mBMessageSoap0.getClassPK();
      assertEquals(0L, long0);
  }

  @Test
  public void test12()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setBody("V");
      assertNull(mBMessageSoap0.getSubject());
  }

  @Test
  public void test13()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      boolean boolean0 = mBMessageSoap0.isAllowPingbacks();
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      Date date0 = mBMessageSoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test15()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      Date date0 = mBMessageSoap0.getModifiedDate();
      assertNull(date0);
  }

  @Test
  public void test16()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setCategoryId((long) 443);
      assertEquals(443L, mBMessageSoap0.getCategoryId());
  }

  @Test
  public void test17()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setUserName((String) null);
      assertEquals(0L, mBMessageSoap0.getMessageId());
  }

  @Test
  public void test18()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setPriority((double) 0L);
      assertEquals(0.0, mBMessageSoap0.getPriority(), 0.01D);
  }

  @Test
  public void test19()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setFormat((String) null);
      assertNull(mBMessageSoap0.getUuid());
  }

  @Test
  public void test20()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setStatusDate((Date) null);
      assertEquals(0L, mBMessageSoap0.getCategoryId());
  }

  @Test
  public void test21()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      Date date0 = mBMessageSoap0.getStatusDate();
      assertNull(date0);
  }

  @Test
  public void test22()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setPrimaryKey(0L);
      assertEquals(false, mBMessageSoap0.isAllowPingbacks());
  }

  @Test
  public void test23()  throws Throwable  {
      LinkedList<MBMessage> linkedList0 = new LinkedList<MBMessage>();
      linkedList0.offerLast((MBMessage) null);
      // Undeclared exception!
      try {
        MBMessageSoap.toSoapModels((List<MBMessage>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test24()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      String string0 = mBMessageSoap0.getStatusByUserName();
      assertNull(string0);
  }

  @Test
  public void test25()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setClassNameId(0L);
      assertNull(mBMessageSoap0.getBody());
  }

  @Test
  public void test26()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      long long0 = mBMessageSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test27()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setStatusByUserId(0L);
      assertEquals(0L, mBMessageSoap0.getClassNameId());
  }

  @Test
  public void test28()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setCompanyId(0L);
      assertEquals(0L, mBMessageSoap0.getParentMessageId());
  }

  @Test
  public void test29()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setAllowPingbacks(false);
      assertEquals(false, mBMessageSoap0.isAllowPingbacks());
      assertEquals(false, mBMessageSoap0.getAllowPingbacks());
  }

  @Test
  public void test30()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setSubject("V");
      assertEquals(0L, mBMessageSoap0.getThreadId());
  }

  @Test
  public void test31()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      long long0 = mBMessageSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test32()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setStatus(443);
      assertEquals(443, mBMessageSoap0.getStatus());
  }

  @Test
  public void test33()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setModifiedDate((Date) null);
      assertEquals(0L, mBMessageSoap0.getClassNameId());
  }

  @Test
  public void test34()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setRootMessageId(11L);
      assertEquals(11L, mBMessageSoap0.getRootMessageId());
  }

  @Test
  public void test35()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setAnswer(false);
      assertEquals(false, mBMessageSoap0.getAnswer());
      assertEquals(false, mBMessageSoap0.isAnswer());
  }

  @Test
  public void test36()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      boolean boolean0 = mBMessageSoap0.isAttachments();
      assertEquals(false, boolean0);
  }

  @Test
  public void test37()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      String string0 = mBMessageSoap0.getUserName();
      assertNull(string0);
  }

  @Test
  public void test38()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setUuid("B");
      assertEquals(0L, mBMessageSoap0.getClassPK());
  }

  @Test
  public void test39()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setParentMessageId(0L);
      assertEquals(false, mBMessageSoap0.isAnswer());
  }

  @Test
  public void test40()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setAttachments(true);
      assertEquals(true, mBMessageSoap0.getAttachments());
      assertEquals(true, mBMessageSoap0.isAttachments());
  }

  @Test
  public void test41()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setClassPK((-22L));
      assertEquals((-22L), mBMessageSoap0.getClassPK());
  }

  @Test
  public void test42()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      String string0 = mBMessageSoap0.getSubject();
      assertNull(string0);
  }

  @Test
  public void test43()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      long long0 = mBMessageSoap0.getThreadId();
      assertEquals(0L, long0);
  }

  @Test
  public void test44()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setStatusByUserName("lIhTiVq.:b4L`");
      assertEquals(0L, mBMessageSoap0.getCategoryId());
  }

  @Test
  public void test45()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      boolean boolean0 = mBMessageSoap0.getAnonymous();
      assertEquals(false, boolean0);
  }

  @Test
  public void test46()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      boolean boolean0 = mBMessageSoap0.isAnonymous();
      assertEquals(false, boolean0);
  }

  @Test
  public void test47()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      boolean boolean0 = mBMessageSoap0.getAnswer();
      assertEquals(false, boolean0);
  }

  @Test
  public void test48()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setUserId(524L);
      assertEquals(524L, mBMessageSoap0.getUserId());
  }

  @Test
  public void test49()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setCreateDate((Date) null);
      assertEquals(0L, mBMessageSoap0.getCategoryId());
  }

  @Test
  public void test50()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      int int0 = mBMessageSoap0.getStatus();
      assertEquals(0, int0);
  }

  @Test
  public void test51()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      mBMessageSoap0.setGroupId((-22L));
      assertEquals((-22L), mBMessageSoap0.getGroupId());
  }

  @Test
  public void test52()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      double double0 = mBMessageSoap0.getPriority();
      assertEquals(0.0, double0, 0.01D);
  }

  @Test
  public void test53()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      long long0 = mBMessageSoap0.getCategoryId();
      assertEquals(0L, long0);
  }

  @Test
  public void test54()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      long long0 = mBMessageSoap0.getStatusByUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test55()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      long long0 = mBMessageSoap0.getClassNameId();
      assertEquals(0L, long0);
  }

  @Test
  public void test56()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      boolean boolean0 = mBMessageSoap0.getAllowPingbacks();
      assertEquals(false, boolean0);
  }

  @Test
  public void test57()  throws Throwable  {
      MBMessageSoap mBMessageSoap0 = new MBMessageSoap();
      String string0 = mBMessageSoap0.getFormat();
      assertNull(string0);
  }

  @Test
  public void test58()  throws Throwable  {
      MBMessage[][] mBMessageArray0 = new MBMessage[1][1];
      // Undeclared exception!
      try {
        MBMessageSoap.toSoapModels(mBMessageArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test59()  throws Throwable  {
      LinkedList<MBMessage> linkedList0 = new LinkedList<MBMessage>();
      MBMessageSoap[] mBMessageSoapArray0 = MBMessageSoap.toSoapModels((List<MBMessage>) linkedList0);
      assertNotNull(mBMessageSoapArray0);
  }
}
