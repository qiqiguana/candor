/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.bean.BeanLocatorException;
import com.liferay.portlet.PortalPreferencesImpl;
import com.liferay.portlet.PortalPreferencesWrapper;
import com.liferay.portlet.Preference;
import java.io.IOException;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Map;
import javax.portlet.ReadOnlyException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PortalPreferencesWrapperEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HashMap<String, Preference> hashMap0 = new HashMap<String, Preference>();
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl(0L, 0L, (-121), "#", (Map<String, Preference>) hashMap0, false);
      PortalPreferencesWrapper portalPreferencesWrapper0 = new PortalPreferencesWrapper(portalPreferencesImpl0);
      boolean boolean0 = portalPreferencesWrapper0.isReadOnly("#");
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      PortalPreferencesWrapper portalPreferencesWrapper0 = new PortalPreferencesWrapper(portalPreferencesImpl0);
      String string0 = portalPreferencesWrapper0.getValue("ry% O8KkFN", "ry% O8KkFN");
      assertEquals("ry% O8KkFN", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      PortalPreferencesWrapper portalPreferencesWrapper0 = new PortalPreferencesWrapper(portalPreferencesImpl0);
      String[] stringArray0 = new String[8];
      String[] stringArray1 = portalPreferencesWrapper0.getValues("o<@ssIuz-}'", stringArray0);
      assertNotSame(stringArray0, stringArray1);
  }

  @Test
  public void test3()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      PortalPreferencesWrapper portalPreferencesWrapper0 = new PortalPreferencesWrapper(portalPreferencesImpl0);
      String[] stringArray0 = new String[6];
      portalPreferencesWrapper0.setValues("cVQ DMu.r", stringArray0);
      assertEquals(1, portalPreferencesImpl0.size());
  }

  @Test
  public void test4()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      PortalPreferencesWrapper portalPreferencesWrapper0 = new PortalPreferencesWrapper(portalPreferencesImpl0);
      portalPreferencesWrapper0.setValue("o<@ssIuz-}'", "o<@ssIuz-}'");
      assertEquals(1, portalPreferencesImpl0.size());
  }

  @Test
  public void test5()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      PortalPreferencesWrapper portalPreferencesWrapper0 = new PortalPreferencesWrapper(portalPreferencesImpl0);
      // Undeclared exception!
      try {
        portalPreferencesWrapper0.store();
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      PortalPreferencesWrapper portalPreferencesWrapper0 = new PortalPreferencesWrapper(portalPreferencesImpl0);
      Map<String, String[]> map0 = portalPreferencesWrapper0.getMap();
      assertEquals(true, map0.isEmpty());
  }

  @Test
  public void test7()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      PortalPreferencesWrapper portalPreferencesWrapper0 = new PortalPreferencesWrapper(portalPreferencesImpl0);
      Enumeration<String> enumeration0 = portalPreferencesWrapper0.getNames();
      assertEquals(false, enumeration0.hasMoreElements());
  }

  @Test
  public void test8()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl((-35L), (-35L), (-1), "0@e],-XY", (Map<String, Preference>) null, false);
      PortalPreferencesWrapper portalPreferencesWrapper0 = new PortalPreferencesWrapper(portalPreferencesImpl0);
      // Undeclared exception!
      try {
        portalPreferencesWrapper0.reset("0@e],-XY");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl((-588L), (-588L), (-276), "", (Map<String, Preference>) null, false);
      PortalPreferencesWrapper portalPreferencesWrapper0 = new PortalPreferencesWrapper(portalPreferencesImpl0);
      PortalPreferencesImpl portalPreferencesImpl1 = portalPreferencesWrapper0.getPortalPreferencesImpl();
      assertEquals(false, portalPreferencesImpl1.isSignedIn());
  }
}
