/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.journal.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.xml.Element;
import com.liferay.portal.xml.BranchImpl;
import com.liferay.portal.xml.ElementImpl;
import com.liferay.portlet.journal.util.LocaleTransformerListener;
import org.dom4j.Branch;
import org.dom4j.tree.DefaultElement;
import org.dom4j.util.NonLazyElement;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LocaleTransformerListenerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LocaleTransformerListener localeTransformerListener0 = new LocaleTransformerListener();
      String string0 = localeTransformerListener0.onOutput("\u0007;h<[5a>vI");
      assertEquals("\u0007;h<[5a>vI", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      LocaleTransformerListener localeTransformerListener0 = new LocaleTransformerListener();
      String string0 = localeTransformerListener0.onScript("");
      assertEquals("", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      LocaleTransformerListener localeTransformerListener0 = new LocaleTransformerListener();
      String string0 = localeTransformerListener0.onXml("");
      assertEquals("", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      LocaleTransformerListener localeTransformerListener0 = new LocaleTransformerListener();
      NonLazyElement nonLazyElement0 = new NonLazyElement("");
      DefaultElement defaultElement0 = (DefaultElement)nonLazyElement0.addElement("", "");
      BranchImpl branchImpl0 = new BranchImpl((Branch) defaultElement0);
      ElementImpl elementImpl0 = (ElementImpl)branchImpl0.getParent();
      localeTransformerListener0.setLanguageId("");
      localeTransformerListener0.replace((Element) elementImpl0);
      assertEquals(false, nonLazyElement0.isTextOnly());
      assertEquals(false, elementImpl0.isTextOnly());
  }

  @Test
  public void test4()  throws Throwable  {
      LocaleTransformerListener localeTransformerListener0 = new LocaleTransformerListener();
      String string0 = localeTransformerListener0.onXml((String) null);
      assertNull(string0);
  }
}
