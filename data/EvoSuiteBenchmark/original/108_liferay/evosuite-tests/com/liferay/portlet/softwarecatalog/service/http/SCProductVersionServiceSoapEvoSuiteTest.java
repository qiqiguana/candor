/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.softwarecatalog.service.http;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portlet.softwarecatalog.service.http.SCProductVersionServiceSoap;
import java.rmi.RemoteException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SCProductVersionServiceSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      long[] longArray0 = new long[3];
      try {
        SCProductVersionServiceSoap.updateProductVersion(0L, (String) null, (String) null, (String) null, (String) null, false, false, longArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      try {
        SCProductVersionServiceSoap.getProductVersionsCount(0L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      try {
        SCProductVersionServiceSoap.deleteProductVersion(0L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      try {
        SCProductVersionServiceSoap.getProductVersions((-1L), (-1635), (-1635));
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      try {
        SCProductVersionServiceSoap.getProductVersion(0L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      long[] longArray0 = new long[5];
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        SCProductVersionServiceSoap.addProductVersion(0L, "", "", "", "", true, true, longArray0, serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      SCProductVersionServiceSoap sCProductVersionServiceSoap0 = new SCProductVersionServiceSoap();
      assertNotNull(sCProductVersionServiceSoap0);
  }
}
