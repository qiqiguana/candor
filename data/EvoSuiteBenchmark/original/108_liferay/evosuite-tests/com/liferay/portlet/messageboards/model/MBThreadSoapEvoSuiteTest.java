/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.messageboards.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.messageboards.model.MBThread;
import com.liferay.portlet.messageboards.model.MBThreadSoap;
import com.liferay.portlet.messageboards.model.MBThreadWrapper;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MBThreadSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      long long0 = mBThreadSoap0.getRootMessageId();
      assertEquals(0L, long0);
  }

  @Test
  public void test1()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      mBThreadSoap0.setStatus(21);
      assertEquals(21, mBThreadSoap0.getStatus());
  }

  @Test
  public void test2()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      long long0 = mBThreadSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test3()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      String string0 = mBThreadSoap0.getStatusByUserName();
      assertNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      int int0 = mBThreadSoap0.getViewCount();
      assertEquals(0, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      Date date0 = mBThreadSoap0.getStatusDate();
      assertNull(date0);
  }

  @Test
  public void test6()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      mBThreadSoap0.setMessageCount(25);
      assertEquals(25, mBThreadSoap0.getMessageCount());
  }

  @Test
  public void test7()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      mBThreadSoap0.setViewCount((-1867));
      assertEquals(-1867, mBThreadSoap0.getViewCount());
  }

  @Test
  public void test8()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      mBThreadSoap0.setStatusDate((Date) null);
      assertEquals(0L, mBThreadSoap0.getCategoryId());
  }

  @Test
  public void test9()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      mBThreadSoap0.setLastPostByUserId(0L);
      assertEquals(0, mBThreadSoap0.getStatus());
  }

  @Test
  public void test10()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      boolean boolean0 = mBThreadSoap0.isQuestion();
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      long long0 = mBThreadSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test12()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      mBThreadSoap0.setCategoryId((long) 0);
      assertEquals(0.0, mBThreadSoap0.getPriority(), 0.01D);
  }

  @Test
  public void test13()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      mBThreadSoap0.setCompanyId(0L);
      assertEquals(false, mBThreadSoap0.getQuestion());
  }

  @Test
  public void test14()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      mBThreadSoap0.setGroupId((long) 25);
      assertEquals(25L, mBThreadSoap0.getGroupId());
  }

  @Test
  public void test15()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      long long0 = mBThreadSoap0.getGroupId();
      assertEquals(0L, long0);
  }

  @Test
  public void test16()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      mBThreadSoap0.setRootMessageId((long) 21);
      assertEquals(21L, mBThreadSoap0.getRootMessageId());
  }

  @Test
  public void test17()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      Date date0 = mBThreadSoap0.getLastPostDate();
      assertNull(date0);
  }

  @Test
  public void test18()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      long long0 = mBThreadSoap0.getCategoryId();
      assertEquals(0L, long0);
  }

  @Test
  public void test19()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      mBThreadSoap0.setPrimaryKey((long) 0);
      assertEquals(0L, mBThreadSoap0.getStatusByUserId());
  }

  @Test
  public void test20()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      int int0 = mBThreadSoap0.getMessageCount();
      assertEquals(0, int0);
  }

  @Test
  public void test21()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      mBThreadSoap0.setPriority((double) 0L);
      assertEquals(0.0, mBThreadSoap0.getPriority(), 0.01D);
  }

  @Test
  public void test22()  throws Throwable  {
      LinkedList<MBThread> linkedList0 = new LinkedList<MBThread>();
      MBThreadWrapper mBThreadWrapper0 = new MBThreadWrapper((MBThread) null);
      linkedList0.add((MBThread) mBThreadWrapper0);
      // Undeclared exception!
      try {
        MBThreadSoap.toSoapModels((List<MBThread>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test23()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      double double0 = mBThreadSoap0.getPriority();
      assertEquals(0.0, double0, 0.01D);
  }

  @Test
  public void test24()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      int int0 = mBThreadSoap0.getStatus();
      assertEquals(0, int0);
  }

  @Test
  public void test25()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      long long0 = mBThreadSoap0.getStatusByUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test26()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      mBThreadSoap0.setLastPostDate((Date) null);
      assertEquals(0L, mBThreadSoap0.getThreadId());
  }

  @Test
  public void test27()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      long long0 = mBThreadSoap0.getRootMessageUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test28()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      mBThreadSoap0.setStatusByUserId((long) (-1867));
      assertEquals((-1867L), mBThreadSoap0.getStatusByUserId());
  }

  @Test
  public void test29()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      mBThreadSoap0.setStatusByUserName("");
      assertEquals("", mBThreadSoap0.getStatusByUserName());
  }

  @Test
  public void test30()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      boolean boolean0 = mBThreadSoap0.getQuestion();
      assertEquals(false, boolean0);
  }

  @Test
  public void test31()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      long long0 = mBThreadSoap0.getThreadId();
      assertEquals(0L, long0);
  }

  @Test
  public void test32()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      long long0 = mBThreadSoap0.getLastPostByUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test33()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      mBThreadSoap0.setRootMessageUserId(0L);
      assertEquals(0L, mBThreadSoap0.getCompanyId());
  }

  @Test
  public void test34()  throws Throwable  {
      MBThreadSoap mBThreadSoap0 = new MBThreadSoap();
      mBThreadSoap0.setQuestion(false);
      assertEquals(false, mBThreadSoap0.getQuestion());
      assertEquals(false, mBThreadSoap0.isQuestion());
  }

  @Test
  public void test35()  throws Throwable  {
      MBThread[][] mBThreadArray0 = new MBThread[12][1];
      // Undeclared exception!
      try {
        MBThreadSoap.toSoapModels(mBThreadArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test36()  throws Throwable  {
      LinkedList<MBThread> linkedList0 = new LinkedList<MBThread>();
      MBThreadSoap[] mBThreadSoapArray0 = MBThreadSoap.toSoapModels((List<MBThread>) linkedList0);
      assertNotNull(mBThreadSoapArray0);
  }
}
