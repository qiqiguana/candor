/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.directory.asset;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.bean.BeanLocatorException;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.portlet.LiferayPortletRequest;
import com.liferay.portal.kernel.portlet.LiferayPortletResponse;
import com.liferay.portal.security.permission.PermissionChecker;
import com.liferay.portal.theme.ThemeDisplay;
import com.liferay.portlet.ActionResponseImpl;
import com.liferay.portlet.directory.asset.UserAssetRendererFactory;
import javax.portlet.PortletURL;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UserAssetRendererFactoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UserAssetRendererFactory userAssetRendererFactory0 = new UserAssetRendererFactory();
      ActionResponseImpl actionResponseImpl0 = new ActionResponseImpl();
      PortletURL portletURL0 = userAssetRendererFactory0.getURLAdd((LiferayPortletRequest) null, (LiferayPortletResponse) actionResponseImpl0);
      assertNull(portletURL0);
  }

  @Test
  public void test1()  throws Throwable  {
      UserAssetRendererFactory userAssetRendererFactory0 = new UserAssetRendererFactory();
      boolean boolean0 = userAssetRendererFactory0.isSelectable();
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      UserAssetRendererFactory userAssetRendererFactory0 = new UserAssetRendererFactory();
      String string0 = userAssetRendererFactory0.getType();
      assertEquals("user", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      UserAssetRendererFactory userAssetRendererFactory0 = new UserAssetRendererFactory();
      ThemeDisplay themeDisplay0 = new ThemeDisplay();
      String string0 = userAssetRendererFactory0.getIconPath(themeDisplay0);
      assertEquals("/common/user_icon.png", string0);
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      UserAssetRendererFactory userAssetRendererFactory0 = new UserAssetRendererFactory();
      String string0 = userAssetRendererFactory0.getClassName();
      assertNotNull(string0);
      assertEquals("com.liferay.portal.model.User", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      UserAssetRendererFactory userAssetRendererFactory0 = new UserAssetRendererFactory();
      // Undeclared exception!
      try {
        userAssetRendererFactory0.getAssetRenderer(268435456L);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      UserAssetRendererFactory userAssetRendererFactory0 = new UserAssetRendererFactory();
      try {
        userAssetRendererFactory0.hasPermission((PermissionChecker) null, 1887L, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      UserAssetRendererFactory userAssetRendererFactory0 = new UserAssetRendererFactory();
      // Undeclared exception!
      try {
        userAssetRendererFactory0.getAssetRenderer(0L, (String) null);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }
}
