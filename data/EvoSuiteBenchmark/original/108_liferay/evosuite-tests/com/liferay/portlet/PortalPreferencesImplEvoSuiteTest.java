/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.PortalPreferencesImpl;
import com.liferay.portlet.Preference;
import java.util.HashMap;
import java.util.Map;
import javax.portlet.ReadOnlyException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PortalPreferencesImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      String string0 = portalPreferencesImpl0.getValue("", "");
      assertNull(string0);
      assertEquals(false, portalPreferencesImpl0.isSignedIn());
  }

  @Test
  public void test1()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      assertEquals(false, portalPreferencesImpl0.isSignedIn());
      
      portalPreferencesImpl0.setSignedIn(true);
      portalPreferencesImpl0.setValue((String) null, "k&a] wf`", (String) null);
      assertEquals(true, portalPreferencesImpl0.isSignedIn());
  }

  @Test
  public void test2()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      portalPreferencesImpl0.getValues("k&a] wf`", "k&a] wf`");
      assertEquals(false, portalPreferencesImpl0.isSignedIn());
  }

  @Test
  public void test3()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      PortalPreferencesImpl portalPreferencesImpl1 = (PortalPreferencesImpl)portalPreferencesImpl0.clone();
      boolean boolean0 = portalPreferencesImpl0.equals((Object) portalPreferencesImpl1);
      assertEquals(false, portalPreferencesImpl0.isSignedIn());
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      // Undeclared exception!
      try {
        portalPreferencesImpl0.hashCode();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      portalPreferencesImpl0.setUserId(0L);
      assertEquals(false, portalPreferencesImpl0.isSignedIn());
  }

  @Test
  public void test6()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      portalPreferencesImpl0.getUserId();
      assertEquals(false, portalPreferencesImpl0.isSignedIn());
  }

  @Test
  public void test7()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      boolean boolean0 = portalPreferencesImpl0.equals((Object) portalPreferencesImpl0);
      assertEquals(true, boolean0);
      assertEquals(false, portalPreferencesImpl0.isSignedIn());
  }

  @Test
  public void test8()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      boolean boolean0 = portalPreferencesImpl0.equals((Object) null);
      assertEquals(false, portalPreferencesImpl0.isSignedIn());
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      HashMap<String, Preference> hashMap0 = new HashMap<String, Preference>();
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      PortalPreferencesImpl portalPreferencesImpl1 = new PortalPreferencesImpl(0L, (long) 33, 33, "7", (Map<String, Preference>) hashMap0, true);
      boolean boolean0 = portalPreferencesImpl0.equals((Object) portalPreferencesImpl1);
      assertEquals(false, boolean0);
      assertEquals(true, portalPreferencesImpl1.isSignedIn());
  }

  @Test
  public void test10()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      HashMap<String, Preference> hashMap0 = new HashMap<String, Preference>();
      PortalPreferencesImpl portalPreferencesImpl1 = new PortalPreferencesImpl((-1344L), (-1344L), 1356, "name#name", (Map<String, Preference>) hashMap0, false);
      boolean boolean0 = portalPreferencesImpl0.equals((Object) portalPreferencesImpl1);
      assertEquals(false, boolean0);
      assertEquals(false, portalPreferencesImpl0.isSignedIn());
  }

  @Test
  public void test11()  throws Throwable  {
      HashMap<String, Preference> hashMap0 = new HashMap<String, Preference>();
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      PortalPreferencesImpl portalPreferencesImpl1 = new PortalPreferencesImpl(0L, 0L, 33, "7", (Map<String, Preference>) hashMap0, true);
      boolean boolean0 = portalPreferencesImpl1.equals((Object) portalPreferencesImpl0);
      assertEquals(true, portalPreferencesImpl1.isSignedIn());
      assertFalse(portalPreferencesImpl0.equals(portalPreferencesImpl1));
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      PortalPreferencesImpl portalPreferencesImpl1 = (PortalPreferencesImpl)portalPreferencesImpl0.clone();
      String[] stringArray0 = new String[9];
      portalPreferencesImpl0.setValues((String) null, "df", stringArray0);
      boolean boolean0 = portalPreferencesImpl0.equals((Object) portalPreferencesImpl1);
      assertEquals(1, portalPreferencesImpl0.size());
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      portalPreferencesImpl0.setValues("k&a] wf`", "k&a] wf`", (String[]) null);
      assertEquals(0, portalPreferencesImpl0.size());
      assertEquals(false, portalPreferencesImpl0.isSignedIn());
  }

  @Test
  public void test14()  throws Throwable  {
      HashMap<String, Preference> hashMap0 = new HashMap<String, Preference>();
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl((-753L), (-753L), 0, "...", (Map<String, Preference>) hashMap0, true);
      Preference preference0 = new Preference("...", "...", true);
      hashMap0.put("...", preference0);
      try {
        portalPreferencesImpl0.reset("...");
        fail("Expecting exception: ReadOnlyException");
      } catch(ReadOnlyException e) {
        /*
         * ...
         */
      }
  }

  @Test
  public void test15()  throws Throwable  {
      HashMap<String, Preference> hashMap0 = new HashMap<String, Preference>();
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl((-753L), (-753L), 0, "...", (Map<String, Preference>) hashMap0, true);
      Preference preference0 = new Preference("...", "...", true);
      hashMap0.put("...", preference0);
      portalPreferencesImpl0.resetValues("...");
      assertEquals(true, portalPreferencesImpl0.isSignedIn());
  }

  @Test
  public void test16()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      portalPreferencesImpl0.setValue("name#name", "name#name");
      portalPreferencesImpl0.resetValues("8HpM+5yhJvvj7[ay");
      assertEquals(1, portalPreferencesImpl0.size());
  }

  @Test
  public void test17()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      portalPreferencesImpl0.setValue("8HpM+5yhJvvj7[ay", "name#name");
      portalPreferencesImpl0.resetValues("8HpM+5yhJvvj7[ay");
      assertEquals(0, portalPreferencesImpl0.size());
  }

  @Test
  public void test18()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      portalPreferencesImpl0.setValue("name#name", "", "8HpM+5yhJvvj7[ay");
      assertEquals(0, portalPreferencesImpl0.size());
      assertEquals(false, portalPreferencesImpl0.isSignedIn());
  }

  @Test
  public void test19()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      portalPreferencesImpl0.setValue((String) null, "k&a] wf`", (String) null);
      assertEquals(0, portalPreferencesImpl0.size());
      assertEquals(false, portalPreferencesImpl0.isSignedIn());
  }

  @Test
  public void test20()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      portalPreferencesImpl0.setValue("m_nam(#`0", "r", "r");
      assertEquals(false, portalPreferencesImpl0.isSignedIn());
      assertEquals(0, portalPreferencesImpl0.size());
  }

  @Test
  public void test21()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      portalPreferencesImpl0.setValue("8HpM+5yhJvvj7[ay", "8HpM+5yhJvvj7[ay", "8HpM+5yhJvvj7[ay");
      assertEquals(1, portalPreferencesImpl0.size());
  }

  @Test
  public void test22()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      String[] stringArray0 = new String[7];
      portalPreferencesImpl0.setValues((String) null, (String) null, stringArray0);
      assertEquals(false, portalPreferencesImpl0.isSignedIn());
  }

  @Test
  public void test23()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      String[] stringArray0 = new String[3];
      portalPreferencesImpl0.setValues("m_nam(#`0", "r", stringArray0);
      assertEquals(false, portalPreferencesImpl0.isSignedIn());
      assertEquals(0, portalPreferencesImpl0.size());
  }

  @Test
  public void test24()  throws Throwable  {
      PortalPreferencesImpl portalPreferencesImpl0 = new PortalPreferencesImpl();
      assertEquals(false, portalPreferencesImpl0.isSignedIn());
      
      portalPreferencesImpl0.setSignedIn(true);
      portalPreferencesImpl0.setValues("k&a] wf`", "k&a] wf`", (String[]) null);
      assertEquals(true, portalPreferencesImpl0.isSignedIn());
      assertEquals(0, portalPreferencesImpl0.size());
  }
}
