/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.dynamicdatamapping.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.dynamicdatamapping.model.DDMStorageLink;
import com.liferay.portlet.dynamicdatamapping.model.DDMStorageLinkSoap;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DDMStorageLinkSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DDMStorageLinkSoap dDMStorageLinkSoap0 = new DDMStorageLinkSoap();
      String string0 = dDMStorageLinkSoap0.getUuid();
      assertNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      DDMStorageLinkSoap dDMStorageLinkSoap0 = new DDMStorageLinkSoap();
      long long0 = dDMStorageLinkSoap0.getStorageLinkId();
      assertEquals(0L, long0);
  }

  @Test
  public void test2()  throws Throwable  {
      DDMStorageLinkSoap dDMStorageLinkSoap0 = new DDMStorageLinkSoap();
      long long0 = dDMStorageLinkSoap0.getClassPK();
      assertEquals(0L, long0);
  }

  @Test
  public void test3()  throws Throwable  {
      DDMStorageLinkSoap dDMStorageLinkSoap0 = new DDMStorageLinkSoap();
      dDMStorageLinkSoap0.setClassPK(0L);
      assertEquals(0L, dDMStorageLinkSoap0.getStructureId());
  }

  @Test
  public void test4()  throws Throwable  {
      LinkedList<DDMStorageLink> linkedList0 = new LinkedList<DDMStorageLink>();
      linkedList0.add((DDMStorageLink) null);
      // Undeclared exception!
      try {
        DDMStorageLinkSoap.toSoapModels((List<DDMStorageLink>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      DDMStorageLinkSoap dDMStorageLinkSoap0 = new DDMStorageLinkSoap();
      dDMStorageLinkSoap0.setPrimaryKey(0L);
      assertEquals(0L, dDMStorageLinkSoap0.getClassPK());
  }

  @Test
  public void test6()  throws Throwable  {
      DDMStorageLinkSoap dDMStorageLinkSoap0 = new DDMStorageLinkSoap();
      long long0 = dDMStorageLinkSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test7()  throws Throwable  {
      DDMStorageLinkSoap dDMStorageLinkSoap0 = new DDMStorageLinkSoap();
      long long0 = dDMStorageLinkSoap0.getClassNameId();
      assertEquals(0L, long0);
  }

  @Test
  public void test8()  throws Throwable  {
      DDMStorageLinkSoap dDMStorageLinkSoap0 = new DDMStorageLinkSoap();
      dDMStorageLinkSoap0.setUuid((String) null);
      assertEquals(0L, dDMStorageLinkSoap0.getPrimaryKey());
  }

  @Test
  public void test9()  throws Throwable  {
      DDMStorageLinkSoap dDMStorageLinkSoap0 = new DDMStorageLinkSoap();
      dDMStorageLinkSoap0.setClassNameId(1361L);
      assertEquals(1361L, dDMStorageLinkSoap0.getClassNameId());
  }

  @Test
  public void test10()  throws Throwable  {
      DDMStorageLinkSoap dDMStorageLinkSoap0 = new DDMStorageLinkSoap();
      long long0 = dDMStorageLinkSoap0.getStructureId();
      assertEquals(0L, long0);
  }

  @Test
  public void test11()  throws Throwable  {
      DDMStorageLinkSoap dDMStorageLinkSoap0 = new DDMStorageLinkSoap();
      dDMStorageLinkSoap0.setStructureId(1361L);
      assertEquals(1361L, dDMStorageLinkSoap0.getStructureId());
  }

  @Test
  public void test12()  throws Throwable  {
      DDMStorageLink[][] dDMStorageLinkArray0 = new DDMStorageLink[1][7];
      // Undeclared exception!
      try {
        DDMStorageLinkSoap.toSoapModels(dDMStorageLinkArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      LinkedList<DDMStorageLink> linkedList0 = new LinkedList<DDMStorageLink>();
      DDMStorageLinkSoap[] dDMStorageLinkSoapArray0 = DDMStorageLinkSoap.toSoapModels((List<DDMStorageLink>) linkedList0);
      assertNotNull(dDMStorageLinkSoapArray0);
  }
}
