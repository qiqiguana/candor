/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.calendar.service;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.bean.BeanLocatorException;
import com.liferay.portal.kernel.cal.Duration;
import com.liferay.portal.kernel.cal.TZSRecurrence;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portlet.calendar.model.CalEvent;
import com.liferay.portlet.calendar.service.CalEventServiceUtil;
import java.io.FileDescriptor;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.TimeZone;
import java.util.Vector;
import org.jfree.data.time.RegularTimePeriod;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CalEventServiceUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try {
        CalEventServiceUtil.exportEvent(0L);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      GregorianCalendar gregorianCalendar0 = (GregorianCalendar)RegularTimePeriod.WORKING_CALENDAR;
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try {
        CalEventServiceUtil.getEvents(8L, (Calendar) gregorianCalendar0, stringArray0);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try {
        CalEventServiceUtil.setBeanIdentifier("v");
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try {
        CalEventServiceUtil.exportGroupEvents(0L, "Y");
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      GregorianCalendar gregorianCalendar0 = (GregorianCalendar)RegularTimePeriod.WORKING_CALENDAR;
      // Undeclared exception!
      try {
        CalEventServiceUtil.getEvents(1825L, (Calendar) gregorianCalendar0, "!n)\u0007N %");
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try {
        CalEventServiceUtil.getEvents((-23L), "assertionPattern", 0, 0);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      GregorianCalendar gregorianCalendar0 = (GregorianCalendar)RegularTimePeriod.WORKING_CALENDAR;
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try {
        CalEventServiceUtil.hasEvents(0L, (Calendar) gregorianCalendar0, stringArray0);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Vector<CalEvent> vector0 = new Vector<CalEvent>();
      // Undeclared exception!
      try {
        CalEventServiceUtil.exportEvents((List<CalEvent>) vector0, "<");
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      // Undeclared exception!
      try {
        CalEventServiceUtil.getEvent(1002L);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      // Undeclared exception!
      try {
        CalEventServiceUtil.deleteEvent(1898L);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try {
        CalEventServiceUtil.getBeanIdentifier();
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[12];
      // Undeclared exception!
      try {
        CalEventServiceUtil.getEventsCount(19L, stringArray0);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      ServiceContext serviceContext0 = new ServiceContext();
      // Undeclared exception!
      try {
        CalEventServiceUtil.updateEvent(1284652111754L, "", "", "", (-375), (-375), (-375), (-375), (-375), (-375), (-375), false, false, "", false, (TZSRecurrence) null, (-375), (-375), (-375), serviceContext0);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TimeZone timeZone0 = RegularTimePeriod.DEFAULT_TIME_ZONE;
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar(timeZone0);
      Duration duration0 = new Duration(1880, 1880, 1880);
      TZSRecurrence tZSRecurrence0 = new TZSRecurrence((Calendar) gregorianCalendar0, duration0);
      ServiceContext serviceContext0 = new ServiceContext();
      // Undeclared exception!
      try {
        CalEventServiceUtil.addEvent("'V7M}!L0", "'V7M}!L0", "'V7M}!L0", 1880, 1880, 1880, 1880, 1880, 1880, 1880, true, false, "'V7M}!L0", false, tZSRecurrence0, 1880, 1880, 1880, serviceContext0);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try {
        CalEventServiceUtil.getEventsCount(0L, "-ynA;a!");
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test15()  throws Throwable  {
      FileDescriptor fileDescriptor0 = FileDescriptor.out;
      FileInputStream fileInputStream0 = new FileInputStream(fileDescriptor0);
      // Undeclared exception!
      try {
        CalEventServiceUtil.importICal4j(1710L, (InputStream) fileInputStream0);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test16()  throws Throwable  {
      CalEventServiceUtil calEventServiceUtil0 = new CalEventServiceUtil();
      assertNotNull(calEventServiceUtil0);
  }

  @Test
  public void test17()  throws Throwable  {
      GregorianCalendar gregorianCalendar0 = (GregorianCalendar)RegularTimePeriod.WORKING_CALENDAR;
      // Undeclared exception!
      try {
        CalEventServiceUtil.hasEvents((-14L), (Calendar) gregorianCalendar0, "YC+");
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try {
        CalEventServiceUtil.getEvents((-1162L), stringArray0, 1527, 1527);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test19()  throws Throwable  {
      GregorianCalendar gregorianCalendar0 = (GregorianCalendar)RegularTimePeriod.WORKING_CALENDAR;
      // Undeclared exception!
      try {
        CalEventServiceUtil.hasEvents((-245L), (Calendar) gregorianCalendar0);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }
}
