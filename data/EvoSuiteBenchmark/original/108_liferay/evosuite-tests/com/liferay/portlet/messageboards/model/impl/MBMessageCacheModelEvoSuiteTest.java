/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.messageboards.model.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.messageboards.model.impl.MBMessageCacheModel;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MBMessageCacheModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MBMessageCacheModel mBMessageCacheModel0 = new MBMessageCacheModel();
      // Undeclared exception!
      try {
        mBMessageCacheModel0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      MBMessageCacheModel mBMessageCacheModel0 = new MBMessageCacheModel();
      String string0 = mBMessageCacheModel0.toString();
      assertEquals("{uuid=null, messageId=0, groupId=0, companyId=0, userId=0, userName=null, createDate=0, modifiedDate=0, classNameId=0, classPK=0, categoryId=0, threadId=0, rootMessageId=0, parentMessageId=0, subject=null, body=null, format=null, attachments=false, anonymous=false, priority=0.0, allowPingbacks=false, answer=false, status=0, statusByUserId=0, statusByUserName=null, statusDate=0}", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      MBMessageCacheModel mBMessageCacheModel0 = new MBMessageCacheModel();
      mBMessageCacheModel0.uuid = "-}e2";
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      mBMessageCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0L, mBMessageCacheModel0.messageId);
  }

  @Test
  public void test3()  throws Throwable  {
      MBMessageCacheModel mBMessageCacheModel0 = new MBMessageCacheModel();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      mBMessageCacheModel0.userName = "{uuid=null, messageId=0, groupId=0, companyId=0, userId=0, userName=null, createDate=0, modifiedDate=0, classNameId=0, classPK=0, categoryId=0, threadId=0, rootMessageId=0, parentMessageId=0, subject=null, body=null, format=null, attachments=false, anonymous=false, priority=0.0, allowPingbacks=false, answer=false, status=0, statusByUserId=0, statusByUserName=null, statusDate=0}";
      mBMessageCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(false, mBMessageCacheModel0.allowPingbacks);
  }

  @Test
  public void test4()  throws Throwable  {
      MBMessageCacheModel mBMessageCacheModel0 = new MBMessageCacheModel();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      mBMessageCacheModel0.subject = "-}e2";
      mBMessageCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0L, mBMessageCacheModel0.parentMessageId);
  }

  @Test
  public void test5()  throws Throwable  {
      MBMessageCacheModel mBMessageCacheModel0 = new MBMessageCacheModel();
      mBMessageCacheModel0.body = "{uuid=null, messageId=0, groupId=0, companyId=0, userId=0, userName=null, createDate=0, modifiedDate=0, classNameId=0, classPK=0, categoryId=0, threadId=0, rootMessageId=0, parentMessageId=0, subject=null, body=null, format=null, attachments=false, anonymous=false, priority=0.0, allowPingbacks=false, answer=false, status=0, statusByUserId=0, statusByUserName=null, statusDate=0}";
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      mBMessageCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0.0, mBMessageCacheModel0.priority, 0.01D);
  }
}
