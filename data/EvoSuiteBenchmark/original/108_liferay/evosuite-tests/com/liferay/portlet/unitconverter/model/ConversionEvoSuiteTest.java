/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.unitconverter.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.unitconverter.model.Conversion;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ConversionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Conversion conversion0 = new Conversion((-1534), 0, (-1484), (-504.90678752232157));
      double double0 = conversion0.getToValue();
      assertEquals(0.0, double0, 0.01D);
      assertEquals((-504.90678752232157), conversion0.getFromValue(), 0.01D);
      assertEquals(-1484, conversion0.getToId());
      assertEquals(-1534, conversion0.getType());
      assertEquals(0, conversion0.getFromId());
  }

  @Test
  public void test1()  throws Throwable  {
      Conversion conversion0 = new Conversion(0, 0, 0, (-956.8856589948573), (double) 0);
      int int0 = conversion0.getToId();
      assertEquals(0.0, conversion0.getToValue(), 0.01D);
      assertEquals((-956.8856589948573), conversion0.getFromValue(), 0.01D);
      assertEquals(0, conversion0.getFromId());
      assertEquals(0, int0);
      assertEquals(0, conversion0.getType());
  }

  @Test
  public void test2()  throws Throwable  {
      Conversion conversion0 = new Conversion(0, 0, 0, (-956.8856589948573), (double) 0);
      int int0 = conversion0.getFromId();
      assertEquals(0.0, conversion0.getToValue(), 0.01D);
      assertEquals(0, conversion0.getType());
      assertEquals(0, conversion0.getToId());
      assertEquals((-956.8856589948573), conversion0.getFromValue(), 0.01D);
      assertEquals(0, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      Conversion conversion0 = new Conversion(0, 0, 0, (-956.8856589948573), (double) 0);
      assertEquals((-956.8856589948573), conversion0.getFromValue(), 0.01D);
      
      conversion0.setFromValue(0.0);
      assertEquals(0.0, conversion0.getToValue(), 0.01D);
  }

  @Test
  public void test4()  throws Throwable  {
      Conversion conversion0 = new Conversion((-1534), 0, (-1484), (-504.90678752232157));
      conversion0.setToValue(1501.323290528418);
      assertEquals(1501.323290528418, conversion0.getToValue(), 0.01D);
      assertEquals(0, conversion0.getFromId());
  }

  @Test
  public void test5()  throws Throwable  {
      Conversion conversion0 = new Conversion(0, 0, 0, (-956.8856589948573), (double) 0);
      double double0 = conversion0.getFromValue();
      assertEquals(0, conversion0.getFromId());
      assertEquals(0, conversion0.getType());
      assertEquals((-956.8856589948573), double0, 0.01D);
      assertEquals(0.0, conversion0.getToValue(), 0.01D);
      assertEquals(0, conversion0.getToId());
  }

  @Test
  public void test6()  throws Throwable  {
      Conversion conversion0 = new Conversion(0, 0, 0, (-956.8856589948573), (double) 0);
      int int0 = conversion0.getType();
      assertEquals(0, conversion0.getToId());
      assertEquals(0, conversion0.getFromId());
      assertEquals((-956.8856589948573), conversion0.getFromValue(), 0.01D);
      assertEquals(0, int0);
      assertEquals(0.0, conversion0.getToValue(), 0.01D);
  }
}
