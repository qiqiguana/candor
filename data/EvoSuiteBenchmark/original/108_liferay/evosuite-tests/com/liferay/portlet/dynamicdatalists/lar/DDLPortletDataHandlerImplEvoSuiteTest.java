/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.dynamicdatalists.lar;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.lar.PortletDataContext;
import com.liferay.portal.kernel.xml.Element;
import com.liferay.portal.xml.DocumentImpl;
import com.liferay.portal.xml.ElementImpl;
import com.liferay.portlet.dynamicdatalists.lar.DDLPortletDataHandlerImpl;
import com.liferay.portlet.dynamicdatalists.model.DDLRecordSet;
import com.liferay.portlet.dynamicdatalists.model.DDLRecordSetWrapper;
import org.dom4j.Document;
import org.dom4j.Namespace;
import org.dom4j.dom.DOMDocument;
import org.dom4j.dom.DOMDocumentType;
import org.dom4j.dom.DOMElement;
import org.dom4j.util.IndexedElement;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DDLPortletDataHandlerImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DDLPortletDataHandlerImpl dDLPortletDataHandlerImpl0 = new DDLPortletDataHandlerImpl();
      DDLRecordSetWrapper dDLRecordSetWrapper0 = new DDLRecordSetWrapper((DDLRecordSet) null);
      try {
        dDLPortletDataHandlerImpl0.exportRecordSet((PortletDataContext) null, (Element) null, (DDLRecordSet) dDLRecordSetWrapper0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      DDLPortletDataHandlerImpl dDLPortletDataHandlerImpl0 = new DDLPortletDataHandlerImpl();
      boolean boolean0 = dDLPortletDataHandlerImpl0.isAlwaysExportable();
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      DDLPortletDataHandlerImpl dDLPortletDataHandlerImpl0 = new DDLPortletDataHandlerImpl();
      boolean boolean0 = dDLPortletDataHandlerImpl0.isDataLocalized();
      assertEquals(true, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      DDLPortletDataHandlerImpl dDLPortletDataHandlerImpl0 = new DDLPortletDataHandlerImpl();
      IndexedElement indexedElement0 = new IndexedElement("");
      ElementImpl elementImpl0 = new ElementImpl((org.dom4j.Element) indexedElement0);
      try {
        dDLPortletDataHandlerImpl0.importRecordSet((PortletDataContext) null, (Element) elementImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      DDLPortletDataHandlerImpl dDLPortletDataHandlerImpl0 = new DDLPortletDataHandlerImpl();
      DOMElement dOMElement0 = new DOMElement("(s!", (Namespace) null);
      ElementImpl elementImpl0 = new ElementImpl((org.dom4j.Element) dOMElement0);
      dDLPortletDataHandlerImpl0.importDDMStructures((PortletDataContext) null, (Element) elementImpl0);
      assertEquals(false, elementImpl0.isReadOnly());
  }

  @Test
  public void test5()  throws Throwable  {
      DDLPortletDataHandlerImpl dDLPortletDataHandlerImpl0 = new DDLPortletDataHandlerImpl();
      DOMDocumentType dOMDocumentType0 = new DOMDocumentType();
      DOMDocument dOMDocument0 = new DOMDocument(dOMDocumentType0);
      DocumentImpl documentImpl0 = new DocumentImpl((Document) dOMDocument0);
      ElementImpl elementImpl0 = (ElementImpl)documentImpl0.addElement("^O&!;|hp[&", "^O&!;|hp[&");
      dDLPortletDataHandlerImpl0.importDDMTemplates((PortletDataContext) null, (Element) elementImpl0);
      assertEquals("\n<^O&!;|hp[& xmlns=\"^O&!;|hp[&\"/>", elementImpl0.formattedString());
  }
}
