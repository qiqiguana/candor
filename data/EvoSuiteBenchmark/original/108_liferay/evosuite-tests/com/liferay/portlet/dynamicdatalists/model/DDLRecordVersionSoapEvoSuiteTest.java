/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.dynamicdatalists.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.dynamicdatalists.model.DDLRecordVersion;
import com.liferay.portlet.dynamicdatalists.model.DDLRecordVersionSoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DDLRecordVersionSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      int int0 = dDLRecordVersionSoap0.getDisplayIndex();
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      Date date0 = dDLRecordVersionSoap0.getStatusDate();
      assertNull(date0);
  }

  @Test
  public void test2()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      dDLRecordVersionSoap0.setDisplayIndex(32);
      assertEquals(32, dDLRecordVersionSoap0.getDisplayIndex());
  }

  @Test
  public void test3()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      dDLRecordVersionSoap0.setRecordSetId(858L);
      assertEquals(858L, dDLRecordVersionSoap0.getRecordSetId());
  }

  @Test
  public void test4()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      long long0 = dDLRecordVersionSoap0.getRecordVersionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test5()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      dDLRecordVersionSoap0.setVersion("qC$kw*I\"^y~wnp/");
      assertEquals(0L, dDLRecordVersionSoap0.getGroupId());
  }

  @Test
  public void test6()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      dDLRecordVersionSoap0.setPrimaryKey(0L);
      assertNull(dDLRecordVersionSoap0.getVersion());
  }

  @Test
  public void test7()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      dDLRecordVersionSoap0.setDDMStorageId(6L);
      assertEquals(6L, dDLRecordVersionSoap0.getDDMStorageId());
  }

  @Test
  public void test8()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      dDLRecordVersionSoap0.setUserName("qC$kw*I\"^y~wnp/");
      assertEquals(0L, dDLRecordVersionSoap0.getUserId());
  }

  @Test
  public void test9()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      long long0 = dDLRecordVersionSoap0.getRecordSetId();
      assertEquals(0L, long0);
  }

  @Test
  public void test10()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      dDLRecordVersionSoap0.setStatusByUserName((String) null);
      assertEquals(0L, dDLRecordVersionSoap0.getStatusByUserId());
  }

  @Test
  public void test11()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      dDLRecordVersionSoap0.setStatusByUserId((long) (-72));
      assertEquals((-72L), dDLRecordVersionSoap0.getStatusByUserId());
  }

  @Test
  public void test12()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      long long0 = dDLRecordVersionSoap0.getStatusByUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test13()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      dDLRecordVersionSoap0.setStatus((-72));
      assertEquals(-72, dDLRecordVersionSoap0.getStatus());
  }

  @Test
  public void test14()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      long long0 = dDLRecordVersionSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test15()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      Date date0 = dDLRecordVersionSoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test16()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      String string0 = dDLRecordVersionSoap0.getUserName();
      assertNull(string0);
  }

  @Test
  public void test17()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      dDLRecordVersionSoap0.setCompanyId((long) 32);
      assertEquals(32L, dDLRecordVersionSoap0.getCompanyId());
  }

  @Test
  public void test18()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      dDLRecordVersionSoap0.setUserId((-15L));
      assertEquals((-15L), dDLRecordVersionSoap0.getUserId());
  }

  @Test
  public void test19()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      long long0 = dDLRecordVersionSoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test20()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      long long0 = dDLRecordVersionSoap0.getDDMStorageId();
      assertEquals(0L, long0);
  }

  @Test
  public void test21()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      long long0 = dDLRecordVersionSoap0.getRecordId();
      assertEquals(0L, long0);
  }

  @Test
  public void test22()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      dDLRecordVersionSoap0.setStatusDate((Date) null);
      assertEquals(0L, dDLRecordVersionSoap0.getPrimaryKey());
  }

  @Test
  public void test23()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      long long0 = dDLRecordVersionSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test24()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      dDLRecordVersionSoap0.setGroupId((-15L));
      assertEquals((-15L), dDLRecordVersionSoap0.getGroupId());
  }

  @Test
  public void test25()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      dDLRecordVersionSoap0.setRecordId(0L);
      assertNull(dDLRecordVersionSoap0.getVersion());
  }

  @Test
  public void test26()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      String string0 = dDLRecordVersionSoap0.getStatusByUserName();
      assertNull(string0);
  }

  @Test
  public void test27()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      String string0 = dDLRecordVersionSoap0.getVersion();
      assertNull(string0);
  }

  @Test
  public void test28()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      dDLRecordVersionSoap0.setCreateDate((Date) null);
      assertEquals(0L, dDLRecordVersionSoap0.getRecordVersionId());
  }

  @Test
  public void test29()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      int int0 = dDLRecordVersionSoap0.getStatus();
      assertEquals(0, int0);
  }

  @Test
  public void test30()  throws Throwable  {
      DDLRecordVersionSoap dDLRecordVersionSoap0 = new DDLRecordVersionSoap();
      long long0 = dDLRecordVersionSoap0.getGroupId();
      assertEquals(0L, long0);
  }

  @Test
  public void test31()  throws Throwable  {
      LinkedList<DDLRecordVersion> linkedList0 = new LinkedList<DDLRecordVersion>();
      linkedList0.add((DDLRecordVersion) null);
      // Undeclared exception!
      try {
        DDLRecordVersionSoap.toSoapModels((List<DDLRecordVersion>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test32()  throws Throwable  {
      DDLRecordVersion[][] dDLRecordVersionArray0 = new DDLRecordVersion[1][6];
      // Undeclared exception!
      try {
        DDLRecordVersionSoap.toSoapModels(dDLRecordVersionArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test33()  throws Throwable  {
      LinkedList<DDLRecordVersion> linkedList0 = new LinkedList<DDLRecordVersion>();
      DDLRecordVersionSoap[] dDLRecordVersionSoapArray0 = DDLRecordVersionSoap.toSoapModels((List<DDLRecordVersion>) linkedList0);
      assertNotNull(dDLRecordVersionSoapArray0);
  }
}
