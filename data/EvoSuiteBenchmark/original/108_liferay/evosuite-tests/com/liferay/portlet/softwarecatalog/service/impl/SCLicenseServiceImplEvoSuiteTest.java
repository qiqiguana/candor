/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.softwarecatalog.service.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.security.auth.PrincipalException;
import com.liferay.portlet.softwarecatalog.service.impl.SCLicenseServiceImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SCLicenseServiceImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SCLicenseServiceImpl sCLicenseServiceImpl0 = new SCLicenseServiceImpl();
      // Undeclared exception!
      try {
        sCLicenseServiceImpl0.getLicense((-1751L));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      SCLicenseServiceImpl sCLicenseServiceImpl0 = new SCLicenseServiceImpl();
      try {
        sCLicenseServiceImpl0.updateLicense(844L, "", "", true, false, true);
        fail("Expecting exception: PrincipalException");
      } catch(PrincipalException e) {
        /*
         * PermissionChecker not initialized
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      SCLicenseServiceImpl sCLicenseServiceImpl0 = new SCLicenseServiceImpl();
      try {
        sCLicenseServiceImpl0.deleteLicense(0L);
        fail("Expecting exception: PrincipalException");
      } catch(PrincipalException e) {
        /*
         * PermissionChecker not initialized
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      SCLicenseServiceImpl sCLicenseServiceImpl0 = new SCLicenseServiceImpl();
      try {
        sCLicenseServiceImpl0.addLicense("&,77Cd^SvPO1~qsaNS", "&,77Cd^SvPO1~qsaNS", false, false, false);
        fail("Expecting exception: PrincipalException");
      } catch(PrincipalException e) {
        /*
         * PermissionChecker not initialized
         */
      }
  }
}
