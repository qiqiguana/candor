/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.shopping.model.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.shopping.model.impl.ShoppingItemCacheModel;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import javax.swing.DebugGraphics;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ShoppingItemCacheModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ShoppingItemCacheModel shoppingItemCacheModel0 = new ShoppingItemCacheModel();
      String string0 = shoppingItemCacheModel0.toString();
      assertEquals("{itemId=0, groupId=0, companyId=0, userId=0, userName=null, createDate=0, modifiedDate=0, categoryId=0, sku=null, name=null, description=null, properties=null, fields=false, fieldsQuantities=null, minQuantity=0, maxQuantity=0, price=0.0, discount=0.0, taxable=false, shipping=0.0, useShippingFormula=false, requiresShipping=false, stockQuantity=0, featured=false, sale=false, smallImage=false, smallImageId=0, smallImageURL=null, mediumImage=false, mediumImageId=0, mediumImageURL=null, largeImage=false, largeImageId=0, largeImageURL=null}", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      ShoppingItemCacheModel shoppingItemCacheModel0 = new ShoppingItemCacheModel();
      // Undeclared exception!
      try {
        shoppingItemCacheModel0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ShoppingItemCacheModel shoppingItemCacheModel0 = new ShoppingItemCacheModel();
      shoppingItemCacheModel0.userName = "";
      PrintStream printStream0 = DebugGraphics.logStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) printStream0);
      shoppingItemCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0L, shoppingItemCacheModel0.groupId);
  }

  @Test
  public void test3()  throws Throwable  {
      ShoppingItemCacheModel shoppingItemCacheModel0 = new ShoppingItemCacheModel();
      shoppingItemCacheModel0.sku = "M";
      PrintStream printStream0 = DebugGraphics.logStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) printStream0);
      shoppingItemCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(false, shoppingItemCacheModel0.sale);
  }

  @Test
  public void test4()  throws Throwable  {
      ShoppingItemCacheModel shoppingItemCacheModel0 = new ShoppingItemCacheModel();
      shoppingItemCacheModel0.properties = ">fEU5bEiA_{h fXk0 ";
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) pipedOutputStream0);
      shoppingItemCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
  }
}
