/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.documentlibrary.action;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.KeyValuePair;
import com.liferay.portal.theme.ThemeDisplay;
import com.liferay.portlet.ActionRequestImpl;
import com.liferay.portlet.ActionResponseImpl;
import com.liferay.portlet.RenderRequestImpl;
import com.liferay.portlet.ResourceRequestImpl;
import com.liferay.portlet.ResourceResponseImpl;
import com.liferay.portlet.VelocityPortlet;
import com.liferay.portlet.documentlibrary.action.EditFileEntryAction;
import java.util.List;
import javax.portlet.ActionRequest;
import javax.portlet.ActionResponse;
import javax.portlet.PortletConfig;
import javax.portlet.RenderRequest;
import javax.portlet.RenderResponse;
import javax.portlet.ResourceRequest;
import javax.portlet.ResourceResponse;
import javax.portlet.filter.ActionRequestWrapper;
import javax.portlet.filter.ActionResponseWrapper;
import javax.portlet.filter.RenderRequestWrapper;
import javax.portlet.filter.ResourceResponseWrapper;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.DynaActionForm;
import org.junit.BeforeClass;
import org.portletbridge.portlet.BridgeEditPortlet;

@RunWith(EvoSuiteRunner.class)
public class EditFileEntryActionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      EditFileEntryAction editFileEntryAction0 = new EditFileEntryAction();
      DynaActionForm dynaActionForm0 = new DynaActionForm();
      BridgeEditPortlet bridgeEditPortlet0 = new BridgeEditPortlet();
      ResourceRequestImpl resourceRequestImpl0 = new ResourceRequestImpl();
      ResourceResponseImpl resourceResponseImpl0 = new ResourceResponseImpl();
      ResourceResponseWrapper resourceResponseWrapper0 = new ResourceResponseWrapper((ResourceResponse) resourceResponseImpl0);
      try {
        editFileEntryAction0.serveResource((ActionMapping) null, (ActionForm) dynaActionForm0, (PortletConfig) bridgeEditPortlet0, (ResourceRequest) resourceRequestImpl0, (ResourceResponse) resourceResponseWrapper0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Config is null, please ensure that your init(config) method calls super.init(config)
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      EditFileEntryAction editFileEntryAction0 = new EditFileEntryAction();
      ActionRequestImpl actionRequestImpl0 = new ActionRequestImpl();
      ActionRequestWrapper actionRequestWrapper0 = new ActionRequestWrapper((ActionRequest) actionRequestImpl0);
      ActionResponseImpl actionResponseImpl0 = new ActionResponseImpl();
      ActionResponseWrapper actionResponseWrapper0 = new ActionResponseWrapper((ActionResponse) actionResponseImpl0);
      try {
        editFileEntryAction0.addMultipleFileEntries((ActionRequest) actionRequestWrapper0, (ActionResponse) actionResponseWrapper0, "1", (List<String>) null, (List<KeyValuePair>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      EditFileEntryAction editFileEntryAction0 = new EditFileEntryAction();
      ActionRequestImpl actionRequestImpl0 = new ActionRequestImpl();
      ActionRequestWrapper actionRequestWrapper0 = new ActionRequestWrapper((ActionRequest) actionRequestImpl0);
      try {
        editFileEntryAction0.revertFileEntry((ActionRequest) actionRequestWrapper0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      EditFileEntryAction editFileEntryAction0 = new EditFileEntryAction();
      ActionRequestImpl actionRequestImpl0 = new ActionRequestImpl();
      ActionResponseImpl actionResponseImpl0 = new ActionResponseImpl();
      try {
        editFileEntryAction0.deleteTempFileEntry((ActionRequest) actionRequestImpl0, (ActionResponse) actionResponseImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      EditFileEntryAction editFileEntryAction0 = new EditFileEntryAction();
      VelocityPortlet velocityPortlet0 = new VelocityPortlet();
      RenderRequestImpl renderRequestImpl0 = new RenderRequestImpl();
      RenderRequestWrapper renderRequestWrapper0 = new RenderRequestWrapper((RenderRequest) renderRequestImpl0);
      try {
        editFileEntryAction0.render((ActionMapping) null, (ActionForm) null, (PortletConfig) velocityPortlet0, (RenderRequest) renderRequestWrapper0, (RenderResponse) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      EditFileEntryAction editFileEntryAction0 = new EditFileEntryAction();
      ThemeDisplay themeDisplay0 = new ThemeDisplay();
      try {
        editFileEntryAction0.getAddMultipleFileEntriesErrorMessage(themeDisplay0, (Exception) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      EditFileEntryAction editFileEntryAction0 = new EditFileEntryAction();
      ActionResponseImpl actionResponseImpl0 = new ActionResponseImpl();
      try {
        editFileEntryAction0.handleUploadException((ActionRequest) null, (ActionResponse) actionResponseImpl0, "*lZAw%", (Exception) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
