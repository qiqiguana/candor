/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.documentlibrary.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.documentlibrary.util.LiferayAudioConverter;
import com.liferay.portlet.documentlibrary.util.LiferayVideoConverter;
import java.security.Provider;
import java.security.SecureRandom;
import java.util.Properties;
import org.bouncycastle.jce.provider.BouncyCastleProvider;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LiferayConverterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BouncyCastleProvider bouncyCastleProvider0 = new BouncyCastleProvider();
      LiferayAudioConverter liferayAudioConverter0 = new LiferayAudioConverter("", "", "", (Properties) bouncyCastleProvider0);
      assertNotNull(liferayAudioConverter0);
      
      int int0 = liferayAudioConverter0.getProperty(699, 699, 699);
      assertEquals(44100, liferayAudioConverter0.getAudioSampleRate());
      assertEquals(699, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      BouncyCastleProvider bouncyCastleProvider0 = new BouncyCastleProvider();
      LiferayAudioConverter liferayAudioConverter0 = new LiferayAudioConverter("", "", "", (Properties) bouncyCastleProvider0);
      assertNotNull(liferayAudioConverter0);
      
      int int0 = liferayAudioConverter0.getProperty((-301), (-301), (-301));
      assertEquals(44100, liferayAudioConverter0.getAudioSampleRate());
      assertEquals((-301), int0);
  }

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      SecureRandom secureRandom0 = new SecureRandom(byteArray0);
      Provider provider0 = secureRandom0.getProvider();
      LiferayVideoConverter liferayVideoConverter0 = new LiferayVideoConverter("", "", "/", (Properties) provider0, (Properties) provider0);
      liferayVideoConverter0.rewind();
      assertEquals(1915361385, secureRandom0.nextInt());
      assertEquals(0.6841924871364956, secureRandom0.nextDouble(), 0.01D);
  }

  @Test
  public void test3()  throws Throwable  {
      BouncyCastleProvider bouncyCastleProvider0 = new BouncyCastleProvider();
      LiferayVideoConverter liferayVideoConverter0 = new LiferayVideoConverter("-$RI!c1v9S'Pc;", "", "", (Properties) bouncyCastleProvider0, (Properties) bouncyCastleProvider0);
      assertNotNull(liferayVideoConverter0);
      
      int int0 = liferayVideoConverter0.rewind((-555));
      assertEquals((-1), int0);
  }

  @Test
  public void test4()  throws Throwable  {
      BouncyCastleProvider bouncyCastleProvider0 = new BouncyCastleProvider();
      LiferayAudioConverter liferayAudioConverter0 = new LiferayAudioConverter("rj?tM#8<NwdN", "rj?tM#8<NwdN", "visitAssertStatement", (Properties) bouncyCastleProvider0);
      assertNotNull(liferayAudioConverter0);
      
      long long0 = liferayAudioConverter0.seek((-1953L));
      assertEquals(44100, liferayAudioConverter0.getAudioSampleRate());
      assertEquals((-1L), long0);
  }
}
