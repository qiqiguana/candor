/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.documentlibrary.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.documentlibrary.model.DLFileVersion;
import com.liferay.portlet.documentlibrary.model.DLFileVersionSoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DLFileVersionSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setFileEntryTypeId((-2L));
      assertEquals((-2L), dLFileVersionSoap0.getFileEntryTypeId());
  }

  @Test
  public void test1()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setStatus(10);
      assertEquals(10, dLFileVersionSoap0.getStatus());
  }

  @Test
  public void test2()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setStatusDate((Date) null);
      assertEquals(0L, dLFileVersionSoap0.getCompanyId());
  }

  @Test
  public void test3()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setModifiedDate((Date) null);
      assertEquals(0L, dLFileVersionSoap0.getSize());
  }

  @Test
  public void test4()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      String string0 = dLFileVersionSoap0.getUuid();
      assertNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setStatusByUserName((String) null);
      assertEquals(0L, dLFileVersionSoap0.getFolderId());
  }

  @Test
  public void test6()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      long long0 = dLFileVersionSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test7()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      String string0 = dLFileVersionSoap0.getDescription();
      assertNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      String string0 = dLFileVersionSoap0.getExtraSettings();
      assertNull(string0);
  }

  @Test
  public void test9()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      String string0 = dLFileVersionSoap0.getChecksum();
      assertNull(string0);
  }

  @Test
  public void test10()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      long long0 = dLFileVersionSoap0.getFolderId();
      assertEquals(0L, long0);
  }

  @Test
  public void test11()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setUserId((-31L));
      assertEquals((-31L), dLFileVersionSoap0.getUserId());
  }

  @Test
  public void test12()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      long long0 = dLFileVersionSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test13()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      Date date0 = dLFileVersionSoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test14()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setUuid((String) null);
      assertEquals(0, dLFileVersionSoap0.getStatus());
  }

  @Test
  public void test15()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setPrimaryKey(1169L);
      assertEquals(1169L, dLFileVersionSoap0.getFileVersionId());
      assertEquals(1169L, dLFileVersionSoap0.getPrimaryKey());
  }

  @Test
  public void test16()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      Date date0 = dLFileVersionSoap0.getModifiedDate();
      assertNull(date0);
  }

  @Test
  public void test17()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setMimeType("B2abO]9?5j8vgR4:Nm;");
      assertEquals(0L, dLFileVersionSoap0.getFileEntryId());
  }

  @Test
  public void test18()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      String string0 = dLFileVersionSoap0.getExtension();
      assertNull(string0);
  }

  @Test
  public void test19()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      long long0 = dLFileVersionSoap0.getRepositoryId();
      assertEquals(0L, long0);
  }

  @Test
  public void test20()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setUserName((String) null);
      assertNull(dLFileVersionSoap0.getExtension());
  }

  @Test
  public void test21()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      String string0 = dLFileVersionSoap0.getMimeType();
      assertNull(string0);
  }

  @Test
  public void test22()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      String string0 = dLFileVersionSoap0.getChangeLog();
      assertNull(string0);
  }

  @Test
  public void test23()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setStatusByUserId(0L);
      assertEquals(0L, dLFileVersionSoap0.getFolderId());
  }

  @Test
  public void test24()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setExtraSettings((String) null);
      assertEquals(0L, dLFileVersionSoap0.getUserId());
  }

  @Test
  public void test25()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      Date date0 = dLFileVersionSoap0.getStatusDate();
      assertNull(date0);
  }

  @Test
  public void test26()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      String string0 = dLFileVersionSoap0.getVersion();
      assertNull(string0);
  }

  @Test
  public void test27()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      long long0 = dLFileVersionSoap0.getStatusByUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test28()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setVersion("[*7`|m9lh;p");
      assertNull(dLFileVersionSoap0.getTitle());
  }

  @Test
  public void test29()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setFileEntryId(0L);
      assertEquals(0L, dLFileVersionSoap0.getFileEntryId());
  }

  @Test
  public void test30()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setChangeLog((String) null);
      assertEquals(0L, dLFileVersionSoap0.getCompanyId());
  }

  @Test
  public void test31()  throws Throwable  {
      DLFileVersion[][] dLFileVersionArray0 = new DLFileVersion[1][6];
      // Undeclared exception!
      try {
        DLFileVersionSoap.toSoapModels(dLFileVersionArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test32()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setDescription((String) null);
      assertEquals(0L, dLFileVersionSoap0.getFileEntryId());
  }

  @Test
  public void test33()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      String string0 = dLFileVersionSoap0.getUserName();
      assertNull(string0);
  }

  @Test
  public void test34()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      long long0 = dLFileVersionSoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test35()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setChecksum((String) null);
      assertNull(dLFileVersionSoap0.getChangeLog());
  }

  @Test
  public void test36()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setSize((-5L));
      assertEquals((-5L), dLFileVersionSoap0.getSize());
  }

  @Test
  public void test37()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setCreateDate((Date) null);
      assertNull(dLFileVersionSoap0.getVersion());
  }

  @Test
  public void test38()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      long long0 = dLFileVersionSoap0.getSize();
      assertEquals(0L, long0);
  }

  @Test
  public void test39()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      long long0 = dLFileVersionSoap0.getFileVersionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test40()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setCompanyId(0L);
      assertNull(dLFileVersionSoap0.getTitle());
  }

  @Test
  public void test41()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      String string0 = dLFileVersionSoap0.getStatusByUserName();
      assertNull(string0);
  }

  @Test
  public void test42()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      long long0 = dLFileVersionSoap0.getFileEntryTypeId();
      assertEquals(0L, long0);
  }

  @Test
  public void test43()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setGroupId(7L);
      assertEquals(7L, dLFileVersionSoap0.getGroupId());
  }

  @Test
  public void test44()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setTitle("B2abO]9?5j8vgR4:Nm;");
      assertEquals(0, dLFileVersionSoap0.getStatus());
  }

  @Test
  public void test45()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      String string0 = dLFileVersionSoap0.getTitle();
      assertNull(string0);
  }

  @Test
  public void test46()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setFolderId(0L);
      assertEquals(0L, dLFileVersionSoap0.getFileEntryTypeId());
  }

  @Test
  public void test47()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setRepositoryId(0L);
      assertNull(dLFileVersionSoap0.getChecksum());
  }

  @Test
  public void test48()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      int int0 = dLFileVersionSoap0.getStatus();
      assertEquals(0, int0);
  }

  @Test
  public void test49()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      long long0 = dLFileVersionSoap0.getFileEntryId();
      assertEquals(0L, long0);
  }

  @Test
  public void test50()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      dLFileVersionSoap0.setExtension((String) null);
      assertEquals(0L, dLFileVersionSoap0.getSize());
  }

  @Test
  public void test51()  throws Throwable  {
      DLFileVersionSoap dLFileVersionSoap0 = new DLFileVersionSoap();
      long long0 = dLFileVersionSoap0.getGroupId();
      assertEquals(0L, long0);
  }

  @Test
  public void test52()  throws Throwable  {
      LinkedList<DLFileVersion> linkedList0 = new LinkedList<DLFileVersion>();
      DLFileVersionSoap[] dLFileVersionSoapArray0 = DLFileVersionSoap.toSoapModels((List<DLFileVersion>) linkedList0);
      assertNotNull(dLFileVersionSoapArray0);
  }

  @Test
  public void test53()  throws Throwable  {
      LinkedList<DLFileVersion> linkedList0 = new LinkedList<DLFileVersion>();
      linkedList0.add((DLFileVersion) null);
      // Undeclared exception!
      try {
        DLFileVersionSoap.toSoapModels((List<DLFileVersion>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
