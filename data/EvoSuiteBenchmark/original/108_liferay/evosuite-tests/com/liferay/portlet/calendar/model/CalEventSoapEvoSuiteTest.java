/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.calendar.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.calendar.model.CalEvent;
import com.liferay.portlet.calendar.model.CalEventSoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CalEventSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      String string0 = calEventSoap0.getDescription();
      assertNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      calEventSoap0.setDurationMinute(0);
      assertEquals(0, calEventSoap0.getDurationMinute());
  }

  @Test
  public void test2()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      long long0 = calEventSoap0.getEventId();
      assertEquals(0L, long0);
  }

  @Test
  public void test3()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      long long0 = calEventSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test4()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      calEventSoap0.setTitle("J zO&6\"8U%eXU^4Gp");
      assertNull(calEventSoap0.getUuid());
  }

  @Test
  public void test5()  throws Throwable  {
      CalEvent[][] calEventArray0 = new CalEvent[1][1];
      // Undeclared exception!
      try {
        CalEventSoap.toSoapModels(calEventArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      calEventSoap0.setUserId((long) 0);
      assertEquals(0L, calEventSoap0.getGroupId());
  }

  @Test
  public void test7()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      boolean boolean0 = calEventSoap0.isAllDay();
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      calEventSoap0.setDurationHour(0);
      assertEquals(0, calEventSoap0.getDurationHour());
  }

  @Test
  public void test9()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      int int0 = calEventSoap0.getDurationHour();
      assertEquals(0, int0);
  }

  @Test
  public void test10()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      boolean boolean0 = calEventSoap0.getTimeZoneSensitive();
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      calEventSoap0.setCompanyId(0L);
      assertEquals(0L, calEventSoap0.getGroupId());
  }

  @Test
  public void test12()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      String string0 = calEventSoap0.getTitle();
      assertNull(string0);
  }

  @Test
  public void test13()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      calEventSoap0.setLocation("passwordPolicyId");
      assertEquals(0, calEventSoap0.getDurationMinute());
  }

  @Test
  public void test14()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      calEventSoap0.setCreateDate((Date) null);
      assertNull(calEventSoap0.getType());
  }

  @Test
  public void test15()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      String string0 = calEventSoap0.getRecurrence();
      assertNull(string0);
  }

  @Test
  public void test16()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      calEventSoap0.setAllDay(false);
      assertEquals(false, calEventSoap0.getAllDay());
      assertEquals(false, calEventSoap0.isAllDay());
  }

  @Test
  public void test17()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      String string0 = calEventSoap0.getLocation();
      assertNull(string0);
  }

  @Test
  public void test18()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      boolean boolean0 = calEventSoap0.isTimeZoneSensitive();
      assertEquals(false, boolean0);
  }

  @Test
  public void test19()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      int int0 = calEventSoap0.getRemindBy();
      assertEquals(0, int0);
  }

  @Test
  public void test20()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      long long0 = calEventSoap0.getGroupId();
      assertEquals(0L, long0);
  }

  @Test
  public void test21()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      boolean boolean0 = calEventSoap0.isRepeating();
      assertEquals(false, boolean0);
  }

  @Test
  public void test22()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      String string0 = calEventSoap0.getUuid();
      assertNull(string0);
  }

  @Test
  public void test23()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      Date date0 = calEventSoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test24()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      calEventSoap0.setRemindBy(0);
      assertEquals(0, calEventSoap0.getRemindBy());
  }

  @Test
  public void test25()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      calEventSoap0.setPrimaryKey(0L);
      assertEquals(0L, calEventSoap0.getPrimaryKey());
  }

  @Test
  public void test26()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      Date date0 = calEventSoap0.getModifiedDate();
      assertNull(date0);
  }

  @Test
  public void test27()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      int int0 = calEventSoap0.getFirstReminder();
      assertEquals(0, int0);
  }

  @Test
  public void test28()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      calEventSoap0.setRepeating(true);
      assertEquals(true, calEventSoap0.isRepeating());
      assertEquals(true, calEventSoap0.getRepeating());
  }

  @Test
  public void test29()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      calEventSoap0.setType("m=_#6Dx+Y$K%?");
      assertEquals(false, calEventSoap0.isTimeZoneSensitive());
  }

  @Test
  public void test30()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      calEventSoap0.setEndDate((Date) null);
      assertEquals(0, calEventSoap0.getFirstReminder());
  }

  @Test
  public void test31()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      boolean boolean0 = calEventSoap0.getAllDay();
      assertEquals(false, boolean0);
  }

  @Test
  public void test32()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      calEventSoap0.setModifiedDate((Date) null);
      assertEquals(false, calEventSoap0.getRepeating());
  }

  @Test
  public void test33()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      calEventSoap0.setStartDate((Date) null);
      assertNull(calEventSoap0.getLocation());
  }

  @Test
  public void test34()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      calEventSoap0.setGroupId(43L);
      assertEquals(43L, calEventSoap0.getGroupId());
  }

  @Test
  public void test35()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      long long0 = calEventSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test36()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      calEventSoap0.setSecondReminder(0);
      assertEquals(0, calEventSoap0.getSecondReminder());
  }

  @Test
  public void test37()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      boolean boolean0 = calEventSoap0.getRepeating();
      assertEquals(false, boolean0);
  }

  @Test
  public void test38()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      Date date0 = calEventSoap0.getStartDate();
      assertNull(date0);
  }

  @Test
  public void test39()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      calEventSoap0.setDescription("m=_#6Dx+Y$K%?");
      assertEquals(false, calEventSoap0.isTimeZoneSensitive());
  }

  @Test
  public void test40()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      calEventSoap0.setUuid("J zO&6\"8U%eXU^4Gp");
      assertEquals("J zO&6\"8U%eXU^4Gp", calEventSoap0.getUuid());
  }

  @Test
  public void test41()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      calEventSoap0.setUserName("`V>n^]P{");
      assertEquals(false, calEventSoap0.isAllDay());
  }

  @Test
  public void test42()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      calEventSoap0.setTimeZoneSensitive(false);
      assertEquals(false, calEventSoap0.isTimeZoneSensitive());
      assertEquals(false, calEventSoap0.getTimeZoneSensitive());
  }

  @Test
  public void test43()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      int int0 = calEventSoap0.getSecondReminder();
      assertEquals(0, int0);
  }

  @Test
  public void test44()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      long long0 = calEventSoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test45()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      calEventSoap0.setRecurrence((String) null);
      assertEquals(false, calEventSoap0.getTimeZoneSensitive());
  }

  @Test
  public void test46()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      int int0 = calEventSoap0.getDurationMinute();
      assertEquals(0, int0);
  }

  @Test
  public void test47()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      String string0 = calEventSoap0.getType();
      assertNull(string0);
  }

  @Test
  public void test48()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      Date date0 = calEventSoap0.getEndDate();
      assertNull(date0);
  }

  @Test
  public void test49()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      calEventSoap0.setFirstReminder((-987));
      assertEquals(-987, calEventSoap0.getFirstReminder());
  }

  @Test
  public void test50()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      String string0 = calEventSoap0.getUserName();
      assertNull(string0);
  }

  @Test
  public void test51()  throws Throwable  {
      LinkedList<CalEvent> linkedList0 = new LinkedList<CalEvent>();
      CalEventSoap[] calEventSoapArray0 = CalEventSoap.toSoapModels((List<CalEvent>) linkedList0);
      assertNotNull(calEventSoapArray0);
  }

  @Test
  public void test52()  throws Throwable  {
      LinkedList<CalEvent> linkedList0 = new LinkedList<CalEvent>();
      linkedList0.addLast((CalEvent) null);
      // Undeclared exception!
      try {
        CalEventSoap.toSoapModels((List<CalEvent>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
