/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.documentlibrary.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.documentlibrary.model.DLFileEntryMetadata;
import com.liferay.portlet.documentlibrary.model.DLFileEntryMetadataSoap;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DLFileEntryMetadataSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DLFileEntryMetadataSoap dLFileEntryMetadataSoap0 = new DLFileEntryMetadataSoap();
      long long0 = dLFileEntryMetadataSoap0.getFileEntryMetadataId();
      assertEquals(0L, long0);
  }

  @Test
  public void test1()  throws Throwable  {
      DLFileEntryMetadataSoap dLFileEntryMetadataSoap0 = new DLFileEntryMetadataSoap();
      dLFileEntryMetadataSoap0.setPrimaryKey(0L);
      assertEquals(0L, dLFileEntryMetadataSoap0.getDDMStructureId());
  }

  @Test
  public void test2()  throws Throwable  {
      DLFileEntryMetadataSoap dLFileEntryMetadataSoap0 = new DLFileEntryMetadataSoap();
      long long0 = dLFileEntryMetadataSoap0.getDDMStorageId();
      assertEquals(0L, long0);
  }

  @Test
  public void test3()  throws Throwable  {
      DLFileEntryMetadataSoap dLFileEntryMetadataSoap0 = new DLFileEntryMetadataSoap();
      long long0 = dLFileEntryMetadataSoap0.getFileVersionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test4()  throws Throwable  {
      DLFileEntryMetadataSoap dLFileEntryMetadataSoap0 = new DLFileEntryMetadataSoap();
      long long0 = dLFileEntryMetadataSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test5()  throws Throwable  {
      DLFileEntryMetadataSoap dLFileEntryMetadataSoap0 = new DLFileEntryMetadataSoap();
      String string0 = dLFileEntryMetadataSoap0.getUuid();
      assertNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      DLFileEntryMetadataSoap dLFileEntryMetadataSoap0 = new DLFileEntryMetadataSoap();
      long long0 = dLFileEntryMetadataSoap0.getFileEntryTypeId();
      assertEquals(0L, long0);
  }

  @Test
  public void test7()  throws Throwable  {
      DLFileEntryMetadataSoap dLFileEntryMetadataSoap0 = new DLFileEntryMetadataSoap();
      dLFileEntryMetadataSoap0.setFileEntryId(1876L);
      assertEquals(1876L, dLFileEntryMetadataSoap0.getFileEntryId());
  }

  @Test
  public void test8()  throws Throwable  {
      DLFileEntryMetadata[][] dLFileEntryMetadataArray0 = new DLFileEntryMetadata[1][6];
      // Undeclared exception!
      try {
        DLFileEntryMetadataSoap.toSoapModels(dLFileEntryMetadataArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      DLFileEntryMetadataSoap dLFileEntryMetadataSoap0 = new DLFileEntryMetadataSoap();
      dLFileEntryMetadataSoap0.setDDMStructureId(0L);
      assertEquals(0L, dLFileEntryMetadataSoap0.getDDMStorageId());
  }

  @Test
  public void test10()  throws Throwable  {
      DLFileEntryMetadataSoap dLFileEntryMetadataSoap0 = new DLFileEntryMetadataSoap();
      dLFileEntryMetadataSoap0.setFileVersionId(1876L);
      assertEquals(1876L, dLFileEntryMetadataSoap0.getFileVersionId());
  }

  @Test
  public void test11()  throws Throwable  {
      DLFileEntryMetadataSoap dLFileEntryMetadataSoap0 = new DLFileEntryMetadataSoap();
      dLFileEntryMetadataSoap0.setUuid("");
      assertEquals(0L, dLFileEntryMetadataSoap0.getFileEntryMetadataId());
  }

  @Test
  public void test12()  throws Throwable  {
      DLFileEntryMetadataSoap dLFileEntryMetadataSoap0 = new DLFileEntryMetadataSoap();
      dLFileEntryMetadataSoap0.setFileEntryTypeId(1876L);
      assertEquals(1876L, dLFileEntryMetadataSoap0.getFileEntryTypeId());
  }

  @Test
  public void test13()  throws Throwable  {
      DLFileEntryMetadataSoap dLFileEntryMetadataSoap0 = new DLFileEntryMetadataSoap();
      dLFileEntryMetadataSoap0.setDDMStorageId(0L);
      assertEquals(0L, dLFileEntryMetadataSoap0.getDDMStructureId());
  }

  @Test
  public void test14()  throws Throwable  {
      DLFileEntryMetadataSoap dLFileEntryMetadataSoap0 = new DLFileEntryMetadataSoap();
      long long0 = dLFileEntryMetadataSoap0.getDDMStructureId();
      assertEquals(0L, long0);
  }

  @Test
  public void test15()  throws Throwable  {
      DLFileEntryMetadataSoap dLFileEntryMetadataSoap0 = new DLFileEntryMetadataSoap();
      long long0 = dLFileEntryMetadataSoap0.getFileEntryId();
      assertEquals(0L, long0);
  }

  @Test
  public void test16()  throws Throwable  {
      LinkedList<DLFileEntryMetadata> linkedList0 = new LinkedList<DLFileEntryMetadata>();
      DLFileEntryMetadataSoap[] dLFileEntryMetadataSoapArray0 = DLFileEntryMetadataSoap.toSoapModels((List<DLFileEntryMetadata>) linkedList0);
      assertNotNull(dLFileEntryMetadataSoapArray0);
  }

  @Test
  public void test17()  throws Throwable  {
      LinkedList<DLFileEntryMetadata> linkedList0 = new LinkedList<DLFileEntryMetadata>();
      linkedList0.add((DLFileEntryMetadata) null);
      // Undeclared exception!
      try {
        DLFileEntryMetadataSoap.toSoapModels((List<DLFileEntryMetadata>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
