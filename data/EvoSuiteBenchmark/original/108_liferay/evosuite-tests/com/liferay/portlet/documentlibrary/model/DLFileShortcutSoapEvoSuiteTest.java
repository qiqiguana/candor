/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.documentlibrary.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.documentlibrary.model.DLFileShortcut;
import com.liferay.portlet.documentlibrary.model.DLFileShortcutSoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DLFileShortcutSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      dLFileShortcutSoap0.setModifiedDate((Date) null);
      assertEquals(0L, dLFileShortcutSoap0.getStatusByUserId());
  }

  @Test
  public void test1()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      boolean boolean0 = dLFileShortcutSoap0.isActive();
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      boolean boolean0 = dLFileShortcutSoap0.getActive();
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      dLFileShortcutSoap0.setToFileEntryId((-12L));
      assertEquals((-12L), dLFileShortcutSoap0.getToFileEntryId());
  }

  @Test
  public void test4()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      dLFileShortcutSoap0.setUserName("o$Cb4Q+r LY7b>v");
      assertEquals(0L, dLFileShortcutSoap0.getUserId());
  }

  @Test
  public void test5()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      String string0 = dLFileShortcutSoap0.getUuid();
      assertNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      dLFileShortcutSoap0.setGroupId(0L);
      assertEquals(0, dLFileShortcutSoap0.getStatus());
  }

  @Test
  public void test7()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      long long0 = dLFileShortcutSoap0.getFileShortcutId();
      assertEquals(0L, long0);
  }

  @Test
  public void test8()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      dLFileShortcutSoap0.setPrimaryKey(1057L);
      assertEquals(1057L, dLFileShortcutSoap0.getPrimaryKey());
      assertEquals(1057L, dLFileShortcutSoap0.getFileShortcutId());
  }

  @Test
  public void test9()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      long long0 = dLFileShortcutSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test10()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      long long0 = dLFileShortcutSoap0.getRepositoryId();
      assertEquals(0L, long0);
  }

  @Test
  public void test11()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      dLFileShortcutSoap0.setFolderId((-12L));
      assertEquals((-12L), dLFileShortcutSoap0.getFolderId());
  }

  @Test
  public void test12()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      int int0 = dLFileShortcutSoap0.getStatus();
      assertEquals(0, int0);
  }

  @Test
  public void test13()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      long long0 = dLFileShortcutSoap0.getGroupId();
      assertEquals(0L, long0);
  }

  @Test
  public void test14()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      dLFileShortcutSoap0.setRepositoryId(0L);
      assertEquals(0L, dLFileShortcutSoap0.getGroupId());
  }

  @Test
  public void test15()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      dLFileShortcutSoap0.setStatusByUserId(0L);
      assertNull(dLFileShortcutSoap0.getUserName());
  }

  @Test
  public void test16()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      dLFileShortcutSoap0.setUuid((String) null);
      assertNull(dLFileShortcutSoap0.getUserName());
  }

  @Test
  public void test17()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      String string0 = dLFileShortcutSoap0.getStatusByUserName();
      assertNull(string0);
  }

  @Test
  public void test18()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      dLFileShortcutSoap0.setCreateDate((Date) null);
      assertEquals(0L, dLFileShortcutSoap0.getFolderId());
  }

  @Test
  public void test19()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      long long0 = dLFileShortcutSoap0.getStatusByUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test20()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      dLFileShortcutSoap0.setStatusDate((Date) null);
      assertEquals(false, dLFileShortcutSoap0.getActive());
  }

  @Test
  public void test21()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      long long0 = dLFileShortcutSoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test22()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      dLFileShortcutSoap0.setStatusByUserName("");
      assertEquals(0L, dLFileShortcutSoap0.getGroupId());
  }

  @Test
  public void test23()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      dLFileShortcutSoap0.setStatus((-50));
      assertEquals(-50, dLFileShortcutSoap0.getStatus());
  }

  @Test
  public void test24()  throws Throwable  {
      LinkedList<DLFileShortcut> linkedList0 = new LinkedList<DLFileShortcut>();
      linkedList0.add((DLFileShortcut) null);
      // Undeclared exception!
      try {
        DLFileShortcutSoap.toSoapModels((List<DLFileShortcut>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test25()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      Date date0 = dLFileShortcutSoap0.getStatusDate();
      assertNull(date0);
  }

  @Test
  public void test26()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      long long0 = dLFileShortcutSoap0.getToFileEntryId();
      assertEquals(0L, long0);
  }

  @Test
  public void test27()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      long long0 = dLFileShortcutSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test28()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      String string0 = dLFileShortcutSoap0.getUserName();
      assertNull(string0);
  }

  @Test
  public void test29()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      long long0 = dLFileShortcutSoap0.getFolderId();
      assertEquals(0L, long0);
  }

  @Test
  public void test30()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      Date date0 = dLFileShortcutSoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test31()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      Date date0 = dLFileShortcutSoap0.getModifiedDate();
      assertNull(date0);
  }

  @Test
  public void test32()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      dLFileShortcutSoap0.setActive(false);
      assertEquals(false, dLFileShortcutSoap0.getActive());
      assertEquals(false, dLFileShortcutSoap0.isActive());
  }

  @Test
  public void test33()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      dLFileShortcutSoap0.setCompanyId((-12L));
      assertEquals((-12L), dLFileShortcutSoap0.getCompanyId());
  }

  @Test
  public void test34()  throws Throwable  {
      DLFileShortcutSoap dLFileShortcutSoap0 = new DLFileShortcutSoap();
      dLFileShortcutSoap0.setUserId(0L);
      assertNull(dLFileShortcutSoap0.getUuid());
  }

  @Test
  public void test35()  throws Throwable  {
      DLFileShortcut[][] dLFileShortcutArray0 = new DLFileShortcut[8][10];
      // Undeclared exception!
      try {
        DLFileShortcutSoap.toSoapModels(dLFileShortcutArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test36()  throws Throwable  {
      LinkedList<DLFileShortcut> linkedList0 = new LinkedList<DLFileShortcut>();
      DLFileShortcutSoap[] dLFileShortcutSoapArray0 = DLFileShortcutSoap.toSoapModels((List<DLFileShortcut>) linkedList0);
      assertNotNull(dLFileShortcutSoapArray0);
  }
}
