/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.dynamicdatalists.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.dynamicdatalists.model.DDLRecord;
import com.liferay.portlet.dynamicdatalists.model.DDLRecordSoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DDLRecordSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      dDLRecordSoap0.setUserId((long) (-195));
      assertEquals((-195L), dDLRecordSoap0.getUserId());
  }

  @Test
  public void test1()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      dDLRecordSoap0.setModifiedDate((Date) null);
      assertNull(dDLRecordSoap0.getVersion());
  }

  @Test
  public void test2()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      dDLRecordSoap0.setVersionUserName("r}i");
      assertEquals(0, dDLRecordSoap0.getDisplayIndex());
  }

  @Test
  public void test3()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      dDLRecordSoap0.setCreateDate((Date) null);
      assertNull(dDLRecordSoap0.getUuid());
  }

  @Test
  public void test4()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      long long0 = dDLRecordSoap0.getGroupId();
      assertEquals(0L, long0);
  }

  @Test
  public void test5()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      long long0 = dDLRecordSoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test6()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      dDLRecordSoap0.setPrimaryKey(0L);
      assertEquals(0L, dDLRecordSoap0.getVersionUserId());
  }

  @Test
  public void test7()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      dDLRecordSoap0.setUserName((String) null);
      assertEquals(0L, dDLRecordSoap0.getPrimaryKey());
  }

  @Test
  public void test8()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      long long0 = dDLRecordSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test9()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      String string0 = dDLRecordSoap0.getUuid();
      assertNull(string0);
  }

  @Test
  public void test10()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      Date date0 = dDLRecordSoap0.getModifiedDate();
      assertNull(date0);
  }

  @Test
  public void test11()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      dDLRecordSoap0.setRecordSetId((long) (-195));
      assertEquals((-195L), dDLRecordSoap0.getRecordSetId());
  }

  @Test
  public void test12()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      long long0 = dDLRecordSoap0.getVersionUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test13()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      long long0 = dDLRecordSoap0.getRecordId();
      assertEquals(0L, long0);
  }

  @Test
  public void test14()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      dDLRecordSoap0.setVersionUserId(0L);
      assertNull(dDLRecordSoap0.getUuid());
  }

  @Test
  public void test15()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      long long0 = dDLRecordSoap0.getRecordSetId();
      assertEquals(0L, long0);
  }

  @Test
  public void test16()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      int int0 = dDLRecordSoap0.getDisplayIndex();
      assertEquals(0, int0);
  }

  @Test
  public void test17()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      String string0 = dDLRecordSoap0.getUserName();
      assertNull(string0);
  }

  @Test
  public void test18()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      dDLRecordSoap0.setCompanyId((long) (-195));
      assertEquals((-195L), dDLRecordSoap0.getCompanyId());
  }

  @Test
  public void test19()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      dDLRecordSoap0.setDDMStorageId(0L);
      assertEquals(0L, dDLRecordSoap0.getGroupId());
  }

  @Test
  public void test20()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      dDLRecordSoap0.setDisplayIndex((-195));
      assertEquals(-195, dDLRecordSoap0.getDisplayIndex());
  }

  @Test
  public void test21()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      dDLRecordSoap0.setGroupId(0L);
      assertNull(dDLRecordSoap0.getVersion());
  }

  @Test
  public void test22()  throws Throwable  {
      LinkedList<DDLRecord> linkedList0 = new LinkedList<DDLRecord>();
      linkedList0.add((DDLRecord) null);
      // Undeclared exception!
      try {
        DDLRecordSoap.toSoapModels((List<DDLRecord>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test23()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      String string0 = dDLRecordSoap0.getVersionUserName();
      assertNull(string0);
  }

  @Test
  public void test24()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      dDLRecordSoap0.setVersion("r}i");
      assertEquals(0L, dDLRecordSoap0.getUserId());
  }

  @Test
  public void test25()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      long long0 = dDLRecordSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test26()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      Date date0 = dDLRecordSoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test27()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      String string0 = dDLRecordSoap0.getVersion();
      assertNull(string0);
  }

  @Test
  public void test28()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      dDLRecordSoap0.setUuid((String) null);
      assertNull(dDLRecordSoap0.getUserName());
  }

  @Test
  public void test29()  throws Throwable  {
      DDLRecordSoap dDLRecordSoap0 = new DDLRecordSoap();
      long long0 = dDLRecordSoap0.getDDMStorageId();
      assertEquals(0L, long0);
  }

  @Test
  public void test30()  throws Throwable  {
      DDLRecord[][] dDLRecordArray0 = new DDLRecord[1][9];
      // Undeclared exception!
      try {
        DDLRecordSoap.toSoapModels(dDLRecordArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test31()  throws Throwable  {
      LinkedList<DDLRecord> linkedList0 = new LinkedList<DDLRecord>();
      DDLRecordSoap[] dDLRecordSoapArray0 = DDLRecordSoap.toSoapModels((List<DDLRecord>) linkedList0);
      assertNotNull(dDLRecordSoapArray0);
  }
}
