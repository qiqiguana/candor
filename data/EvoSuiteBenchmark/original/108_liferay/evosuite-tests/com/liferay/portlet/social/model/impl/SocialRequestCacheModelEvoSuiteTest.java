/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.social.model.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.social.model.impl.SocialRequestCacheModel;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SocialRequestCacheModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SocialRequestCacheModel socialRequestCacheModel0 = new SocialRequestCacheModel();
      // Undeclared exception!
      try {
        socialRequestCacheModel0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      SocialRequestCacheModel socialRequestCacheModel0 = new SocialRequestCacheModel();
      String string0 = socialRequestCacheModel0.toString();
      assertEquals("{uuid=null, requestId=0, groupId=0, companyId=0, userId=0, createDate=0, modifiedDate=0, classNameId=0, classPK=0, type=0, extraData=null, receiverUserId=0, status=0}", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      SocialRequestCacheModel socialRequestCacheModel0 = new SocialRequestCacheModel();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      socialRequestCacheModel0.uuid = "";
      socialRequestCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0L, socialRequestCacheModel0.companyId);
  }

  @Test
  public void test3()  throws Throwable  {
      SocialRequestCacheModel socialRequestCacheModel0 = new SocialRequestCacheModel();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      socialRequestCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0L, socialRequestCacheModel0.userId);
  }
}
