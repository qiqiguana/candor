/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.softwarecatalog.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.softwarecatalog.model.SCProductScreenshot;
import com.liferay.portlet.softwarecatalog.model.SCProductScreenshotSoap;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SCProductScreenshotSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SCProductScreenshot[][] sCProductScreenshotArray0 = new SCProductScreenshot[9][1];
      // Undeclared exception!
      try {
        SCProductScreenshotSoap.toSoapModels(sCProductScreenshotArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      SCProductScreenshotSoap sCProductScreenshotSoap0 = new SCProductScreenshotSoap();
      long long0 = sCProductScreenshotSoap0.getProductScreenshotId();
      assertEquals(0L, long0);
  }

  @Test
  public void test2()  throws Throwable  {
      SCProductScreenshotSoap sCProductScreenshotSoap0 = new SCProductScreenshotSoap();
      long long0 = sCProductScreenshotSoap0.getThumbnailId();
      assertEquals(0L, long0);
  }

  @Test
  public void test3()  throws Throwable  {
      SCProductScreenshotSoap sCProductScreenshotSoap0 = new SCProductScreenshotSoap();
      sCProductScreenshotSoap0.setCompanyId(0L);
      assertEquals(0L, sCProductScreenshotSoap0.getThumbnailId());
  }

  @Test
  public void test4()  throws Throwable  {
      SCProductScreenshotSoap sCProductScreenshotSoap0 = new SCProductScreenshotSoap();
      sCProductScreenshotSoap0.setThumbnailId(0L);
      assertEquals(0L, sCProductScreenshotSoap0.getProductEntryId());
  }

  @Test
  public void test5()  throws Throwable  {
      SCProductScreenshotSoap sCProductScreenshotSoap0 = new SCProductScreenshotSoap();
      long long0 = sCProductScreenshotSoap0.getGroupId();
      assertEquals(0L, long0);
  }

  @Test
  public void test6()  throws Throwable  {
      SCProductScreenshotSoap sCProductScreenshotSoap0 = new SCProductScreenshotSoap();
      long long0 = sCProductScreenshotSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test7()  throws Throwable  {
      SCProductScreenshotSoap sCProductScreenshotSoap0 = new SCProductScreenshotSoap();
      sCProductScreenshotSoap0.setFullImageId((long) (-1799));
      assertEquals((-1799L), sCProductScreenshotSoap0.getFullImageId());
  }

  @Test
  public void test8()  throws Throwable  {
      SCProductScreenshotSoap sCProductScreenshotSoap0 = new SCProductScreenshotSoap();
      int int0 = sCProductScreenshotSoap0.getPriority();
      assertEquals(0, int0);
  }

  @Test
  public void test9()  throws Throwable  {
      SCProductScreenshotSoap sCProductScreenshotSoap0 = new SCProductScreenshotSoap();
      long long0 = sCProductScreenshotSoap0.getProductEntryId();
      assertEquals(0L, long0);
  }

  @Test
  public void test10()  throws Throwable  {
      SCProductScreenshotSoap sCProductScreenshotSoap0 = new SCProductScreenshotSoap();
      long long0 = sCProductScreenshotSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test11()  throws Throwable  {
      SCProductScreenshotSoap sCProductScreenshotSoap0 = new SCProductScreenshotSoap();
      sCProductScreenshotSoap0.setPrimaryKey(0L);
      assertEquals(0L, sCProductScreenshotSoap0.getThumbnailId());
  }

  @Test
  public void test12()  throws Throwable  {
      SCProductScreenshotSoap sCProductScreenshotSoap0 = new SCProductScreenshotSoap();
      sCProductScreenshotSoap0.setProductEntryId(0L);
      assertEquals(0L, sCProductScreenshotSoap0.getThumbnailId());
  }

  @Test
  public void test13()  throws Throwable  {
      SCProductScreenshotSoap sCProductScreenshotSoap0 = new SCProductScreenshotSoap();
      sCProductScreenshotSoap0.setGroupId(0L);
      assertEquals(0L, sCProductScreenshotSoap0.getGroupId());
  }

  @Test
  public void test14()  throws Throwable  {
      SCProductScreenshotSoap sCProductScreenshotSoap0 = new SCProductScreenshotSoap();
      sCProductScreenshotSoap0.setPriority((-1799));
      assertEquals(-1799, sCProductScreenshotSoap0.getPriority());
  }

  @Test
  public void test15()  throws Throwable  {
      SCProductScreenshotSoap sCProductScreenshotSoap0 = new SCProductScreenshotSoap();
      long long0 = sCProductScreenshotSoap0.getFullImageId();
      assertEquals(0L, long0);
  }

  @Test
  public void test16()  throws Throwable  {
      LinkedList<SCProductScreenshot> linkedList0 = new LinkedList<SCProductScreenshot>();
      SCProductScreenshotSoap[] sCProductScreenshotSoapArray0 = SCProductScreenshotSoap.toSoapModels((List<SCProductScreenshot>) linkedList0);
      assertNotNull(sCProductScreenshotSoapArray0);
  }

  @Test
  public void test17()  throws Throwable  {
      LinkedList<SCProductScreenshot> linkedList0 = new LinkedList<SCProductScreenshot>();
      linkedList0.add((SCProductScreenshot) null);
      // Undeclared exception!
      try {
        SCProductScreenshotSoap.toSoapModels((List<SCProductScreenshot>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
