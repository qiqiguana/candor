/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.trash.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.trash.model.TrashEntry;
import com.liferay.portlet.trash.model.TrashEntrySoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TrashEntrySoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TrashEntrySoap trashEntrySoap0 = new TrashEntrySoap();
      String string0 = trashEntrySoap0.getTypeSettings();
      assertNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      TrashEntrySoap trashEntrySoap0 = new TrashEntrySoap();
      trashEntrySoap0.setUserId((-16L));
      assertEquals((-16L), trashEntrySoap0.getUserId());
  }

  @Test
  public void test2()  throws Throwable  {
      TrashEntrySoap trashEntrySoap0 = new TrashEntrySoap();
      int int0 = trashEntrySoap0.getStatus();
      assertEquals(0, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      TrashEntrySoap trashEntrySoap0 = new TrashEntrySoap();
      trashEntrySoap0.setPrimaryKey((long) 0);
      assertEquals(0L, trashEntrySoap0.getPrimaryKey());
  }

  @Test
  public void test4()  throws Throwable  {
      TrashEntrySoap trashEntrySoap0 = new TrashEntrySoap();
      long long0 = trashEntrySoap0.getClassPK();
      assertEquals(0L, long0);
  }

  @Test
  public void test5()  throws Throwable  {
      TrashEntrySoap trashEntrySoap0 = new TrashEntrySoap();
      long long0 = trashEntrySoap0.getClassNameId();
      assertEquals(0L, long0);
  }

  @Test
  public void test6()  throws Throwable  {
      TrashEntrySoap trashEntrySoap0 = new TrashEntrySoap();
      trashEntrySoap0.setUserName("{V5R'{oHe}dP");
      assertEquals(0L, trashEntrySoap0.getEntryId());
  }

  @Test
  public void test7()  throws Throwable  {
      TrashEntrySoap trashEntrySoap0 = new TrashEntrySoap();
      trashEntrySoap0.setClassNameId((-8L));
      assertEquals((-8L), trashEntrySoap0.getClassNameId());
  }

  @Test
  public void test8()  throws Throwable  {
      TrashEntrySoap trashEntrySoap0 = new TrashEntrySoap();
      Date date0 = trashEntrySoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test9()  throws Throwable  {
      TrashEntrySoap trashEntrySoap0 = new TrashEntrySoap();
      trashEntrySoap0.setGroupId(0L);
      assertEquals(0L, trashEntrySoap0.getCompanyId());
  }

  @Test
  public void test10()  throws Throwable  {
      TrashEntrySoap trashEntrySoap0 = new TrashEntrySoap();
      trashEntrySoap0.setTypeSettings(":9;");
      assertEquals(0L, trashEntrySoap0.getClassNameId());
  }

  @Test
  public void test11()  throws Throwable  {
      TrashEntrySoap trashEntrySoap0 = new TrashEntrySoap();
      long long0 = trashEntrySoap0.getGroupId();
      assertEquals(0L, long0);
  }

  @Test
  public void test12()  throws Throwable  {
      TrashEntrySoap trashEntrySoap0 = new TrashEntrySoap();
      long long0 = trashEntrySoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test13()  throws Throwable  {
      TrashEntrySoap trashEntrySoap0 = new TrashEntrySoap();
      trashEntrySoap0.setClassPK((-8L));
      assertEquals((-8L), trashEntrySoap0.getClassPK());
  }

  @Test
  public void test14()  throws Throwable  {
      TrashEntrySoap trashEntrySoap0 = new TrashEntrySoap();
      trashEntrySoap0.setStatus(1);
      assertEquals(1, trashEntrySoap0.getStatus());
  }

  @Test
  public void test15()  throws Throwable  {
      TrashEntrySoap trashEntrySoap0 = new TrashEntrySoap();
      long long0 = trashEntrySoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test16()  throws Throwable  {
      TrashEntrySoap trashEntrySoap0 = new TrashEntrySoap();
      trashEntrySoap0.setCompanyId((long) 1);
      assertEquals(1L, trashEntrySoap0.getCompanyId());
  }

  @Test
  public void test17()  throws Throwable  {
      TrashEntrySoap trashEntrySoap0 = new TrashEntrySoap();
      String string0 = trashEntrySoap0.getUserName();
      assertNull(string0);
  }

  @Test
  public void test18()  throws Throwable  {
      TrashEntrySoap trashEntrySoap0 = new TrashEntrySoap();
      trashEntrySoap0.setCreateDate((Date) null);
      assertEquals(0L, trashEntrySoap0.getEntryId());
  }

  @Test
  public void test19()  throws Throwable  {
      TrashEntrySoap trashEntrySoap0 = new TrashEntrySoap();
      long long0 = trashEntrySoap0.getEntryId();
      assertEquals(0L, long0);
  }

  @Test
  public void test20()  throws Throwable  {
      TrashEntrySoap trashEntrySoap0 = new TrashEntrySoap();
      long long0 = trashEntrySoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test21()  throws Throwable  {
      LinkedList<TrashEntry> linkedList0 = new LinkedList<TrashEntry>();
      linkedList0.addFirst((TrashEntry) null);
      // Undeclared exception!
      try {
        TrashEntrySoap.toSoapModels((List<TrashEntry>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test22()  throws Throwable  {
      TrashEntry[][] trashEntryArray0 = new TrashEntry[1][5];
      // Undeclared exception!
      try {
        TrashEntrySoap.toSoapModels(trashEntryArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test23()  throws Throwable  {
      LinkedList<TrashEntry> linkedList0 = new LinkedList<TrashEntry>();
      TrashEntrySoap[] trashEntrySoapArray0 = TrashEntrySoap.toSoapModels((List<TrashEntry>) linkedList0);
      assertNotNull(trashEntrySoapArray0);
  }
}
