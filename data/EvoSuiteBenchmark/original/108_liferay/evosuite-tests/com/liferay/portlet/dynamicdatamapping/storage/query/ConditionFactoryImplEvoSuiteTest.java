/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.dynamicdatamapping.storage.query;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.dynamicdatamapping.storage.query.ComparisonOperator;
import com.liferay.portlet.dynamicdatamapping.storage.query.ConditionFactoryImpl;
import com.liferay.portlet.dynamicdatamapping.storage.query.FieldConditionImpl;
import com.liferay.portlet.dynamicdatamapping.storage.query.JunctionImpl;
import com.liferay.portlet.dynamicdatamapping.storage.query.LogicalOperator;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ConditionFactoryImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ConditionFactoryImpl conditionFactoryImpl0 = new ConditionFactoryImpl();
      Object object0 = new Object();
      FieldConditionImpl fieldConditionImpl0 = (FieldConditionImpl)conditionFactoryImpl0.lte("", object0);
      assertEquals("", fieldConditionImpl0.getName());
  }

  @Test
  public void test1()  throws Throwable  {
      ConditionFactoryImpl conditionFactoryImpl0 = new ConditionFactoryImpl();
      JunctionImpl junctionImpl0 = (JunctionImpl)conditionFactoryImpl0.conjunction();
      assertEquals(LogicalOperator.AND, junctionImpl0.getLogicalOperator());
  }

  @Test
  public void test2()  throws Throwable  {
      ConditionFactoryImpl conditionFactoryImpl0 = new ConditionFactoryImpl();
      FieldConditionImpl fieldConditionImpl0 = (FieldConditionImpl)conditionFactoryImpl0.ne("!|Kh0", "!|Kh0");
      assertEquals(ComparisonOperator.NOT_EQUALS, fieldConditionImpl0.getComparisonOperator());
  }

  @Test
  public void test3()  throws Throwable  {
      ConditionFactoryImpl conditionFactoryImpl0 = new ConditionFactoryImpl();
      FieldConditionImpl fieldConditionImpl0 = (FieldConditionImpl)conditionFactoryImpl0.like("", "");
      assertEquals(false, fieldConditionImpl0.isJunction());
  }

  @Test
  public void test4()  throws Throwable  {
      ConditionFactoryImpl conditionFactoryImpl0 = new ConditionFactoryImpl();
      FieldConditionImpl fieldConditionImpl0 = (FieldConditionImpl)conditionFactoryImpl0.in("", "");
      assertEquals("", fieldConditionImpl0.getName());
  }

  @Test
  public void test5()  throws Throwable  {
      ConditionFactoryImpl conditionFactoryImpl0 = new ConditionFactoryImpl();
      Object object0 = new Object();
      FieldConditionImpl fieldConditionImpl0 = (FieldConditionImpl)conditionFactoryImpl0.gte("", object0);
      assertEquals(false, fieldConditionImpl0.isJunction());
  }

  @Test
  public void test6()  throws Throwable  {
      ConditionFactoryImpl conditionFactoryImpl0 = new ConditionFactoryImpl();
      JunctionImpl junctionImpl0 = (JunctionImpl)conditionFactoryImpl0.disjunction();
      assertEquals(LogicalOperator.OR, junctionImpl0.getLogicalOperator());
  }

  @Test
  public void test7()  throws Throwable  {
      ConditionFactoryImpl conditionFactoryImpl0 = new ConditionFactoryImpl();
      Object object0 = new Object();
      FieldConditionImpl fieldConditionImpl0 = (FieldConditionImpl)conditionFactoryImpl0.notIn("", object0);
      assertEquals(ComparisonOperator.NOT_IN, fieldConditionImpl0.getComparisonOperator());
  }

  @Test
  public void test8()  throws Throwable  {
      ConditionFactoryImpl conditionFactoryImpl0 = new ConditionFactoryImpl();
      FieldConditionImpl fieldConditionImpl0 = (FieldConditionImpl)conditionFactoryImpl0.lt("", "");
      assertEquals(ComparisonOperator.LESS_THAN, fieldConditionImpl0.getComparisonOperator());
  }

  @Test
  public void test9()  throws Throwable  {
      ConditionFactoryImpl conditionFactoryImpl0 = new ConditionFactoryImpl();
      Object object0 = new Object();
      FieldConditionImpl fieldConditionImpl0 = (FieldConditionImpl)conditionFactoryImpl0.gt("", object0);
      assertEquals(false, fieldConditionImpl0.isJunction());
  }

  @Test
  public void test10()  throws Throwable  {
      ConditionFactoryImpl conditionFactoryImpl0 = new ConditionFactoryImpl();
      Object object0 = new Object();
      FieldConditionImpl fieldConditionImpl0 = (FieldConditionImpl)conditionFactoryImpl0.eq("", object0);
      assertEquals(ComparisonOperator.EQUALS, fieldConditionImpl0.getComparisonOperator());
  }
}
