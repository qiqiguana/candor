/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.sites.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.bean.BeanLocatorException;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.Group;
import com.liferay.portal.model.Layout;
import com.liferay.portal.model.LayoutPrototype;
import com.liferay.portal.model.LayoutSet;
import com.liferay.portal.model.LayoutSetPrototype;
import com.liferay.portal.model.LayoutSetPrototypeWrapper;
import com.liferay.portal.model.LayoutWrapper;
import com.liferay.portal.model.impl.VirtualLayout;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portlet.ActionResponseImpl;
import com.liferay.portlet.PortletPreferencesImpl;
import com.liferay.portlet.RenderResponseImpl;
import com.liferay.portlet.sites.util.SitesUtil;
import java.io.InputStream;
import java.util.Map;
import javax.portlet.ActionRequest;
import javax.portlet.ActionResponse;
import javax.portlet.PortletPreferences;
import javax.portlet.RenderRequest;
import javax.portlet.RenderResponse;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SitesUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try {
        SitesUtil.resetPrototype((Layout) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ActionResponseImpl actionResponseImpl0 = new ActionResponseImpl();
      try {
        SitesUtil.deleteLayout((ActionRequest) null, (ActionResponse) actionResponseImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      RenderResponseImpl renderResponseImpl0 = new RenderResponseImpl();
      try {
        SitesUtil.deleteLayout((RenderRequest) null, (RenderResponse) renderResponseImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      LayoutWrapper layoutWrapper0 = new LayoutWrapper((Layout) null);
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        SitesUtil.copyLayout(0L, (Layout) layoutWrapper0, (Layout) layoutWrapper0, serviceContext0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      try {
        SitesUtil.copyLookAndFeel((Layout) null, (Layout) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      ServiceContext serviceContext0 = new ServiceContext();
      // Undeclared exception!
      try {
        SitesUtil.exportLayoutSetPrototype((LayoutSetPrototype) null, serviceContext0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      LayoutSetPrototypeWrapper layoutSetPrototypeWrapper0 = new LayoutSetPrototypeWrapper((LayoutSetPrototype) null);
      ServiceContext serviceContext0 = new ServiceContext();
      // Undeclared exception!
      try {
        SitesUtil.importLayoutSetPrototype((LayoutSetPrototype) layoutSetPrototypeWrapper0, (InputStream) null, serviceContext0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      SitesUtil sitesUtil0 = new SitesUtil();
      assertNotNull(sitesUtil0);
  }

  @Test
  public void test8()  throws Throwable  {
      try {
        SitesUtil.copyTypeSettings((Group) null, (Group) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      try {
        SitesUtil.updateLayoutSetPrototypesLinks((Group) null, 1L, 1L, true, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      try {
        SitesUtil.applyLayoutPrototype((LayoutPrototype) null, (Layout) null, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      boolean boolean0 = SitesUtil.isLayoutDeleteable((Layout) null);
      assertEquals(true, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      VirtualLayout virtualLayout0 = new VirtualLayout((Layout) null, (Group) null);
      boolean boolean0 = SitesUtil.isLayoutDeleteable((Layout) virtualLayout0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      boolean boolean0 = SitesUtil.isLayoutModifiedSinceLastMerge((Layout) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      LayoutWrapper layoutWrapper0 = new LayoutWrapper((Layout) null);
      // Undeclared exception!
      try {
        SitesUtil.isLayoutModifiedSinceLastMerge((Layout) layoutWrapper0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      LayoutWrapper layoutWrapper0 = new LayoutWrapper((Layout) null);
      boolean boolean0 = SitesUtil.isLayoutUpdateable((Layout) layoutWrapper0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      VirtualLayout virtualLayout0 = new VirtualLayout((Layout) null, (Group) null);
      boolean boolean0 = SitesUtil.isLayoutUpdateable((Layout) virtualLayout0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      PortletPreferencesImpl portletPreferencesImpl0 = new PortletPreferencesImpl();
      SitesUtil.updateLayoutScopes(0L, (Layout) null, (Layout) null, (PortletPreferences) portletPreferencesImpl0, (PortletPreferences) portletPreferencesImpl0, "", "");
      assertEquals(0L, portletPreferencesImpl0.getPlid());
  }

  @Test
  public void test18()  throws Throwable  {
      Map<String, String[]> map0 = SitesUtil.getLayoutSetPrototypesParameters(false);
      assertNotNull(map0);
      assertEquals(18, map0.size());
  }

  @Test
  public void test19()  throws Throwable  {
      Map<String, String[]> map0 = SitesUtil.getLayoutSetPrototypesParameters(true);
      assertNotNull(map0);
      
      ServiceContext serviceContext0 = new ServiceContext();
      SitesUtil.setLayoutSetPrototypeLinkEnabledParameter(map0, (LayoutSet) null, serviceContext0);
      assertEquals(19, map0.size());
  }

  @Test
  public void test20()  throws Throwable  {
      Map<String, String[]> map0 = SitesUtil.getLayoutSetPrototypeParameters((ServiceContext) null);
      assertNotNull(map0);
      
      // Undeclared exception!
      try {
        SitesUtil.importLayoutSetPrototype((LayoutSetPrototype) null, 0L, false, map0, false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test21()  throws Throwable  {
      Map<String, String[]> map0 = SitesUtil.getLayoutSetPrototypeParameters((ServiceContext) null);
      assertNotNull(map0);
      
      // Undeclared exception!
      try {
        SitesUtil.importLayoutSetPrototype((LayoutSetPrototype) null, 0L, true, map0, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test22()  throws Throwable  {
      try {
        SitesUtil.updateLayoutSetPrototypeLink((-1453L), true, (-1453L), true);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test23()  throws Throwable  {
      try {
        SitesUtil.updateLayoutSetPrototypeLink(1237L, true, 1237L, true);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }
}
