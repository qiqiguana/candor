/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.messageboards.service.http;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.ObjectValuePair;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portlet.messageboards.service.http.MBMessageServiceSoap;
import java.io.InputStream;
import java.rmi.RemoteException;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MBMessageServiceSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        MBMessageServiceSoap.updateDiscussionMessage("", 1284652111417L, "", 1284652111417L, 1284652111417L, 1284652111417L, "", "", serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      try {
        MBMessageServiceSoap.unsubscribeMessage(1284652110698L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      try {
        MBMessageServiceSoap.deleteMessage(1284652111749L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      LinkedList<ObjectValuePair<String, InputStream>> linkedList0 = new LinkedList<ObjectValuePair<String, InputStream>>();
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        MBMessageServiceSoap.addMessage((-1582L), "", "", "", (List<ObjectValuePair<String, InputStream>>) linkedList0, false, (double) (-1582L), false, serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        MBMessageServiceSoap.updateMessage(272L, "", "", (List<ObjectValuePair<String, InputStream>>) null, (List<String>) linkedList0, (double) 272L, true, serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      try {
        MBMessageServiceSoap.getThreadMessagesCount(1434L, 1434L, 1434L, 0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      try {
        MBMessageServiceSoap.getCategoryMessagesCount(0L, 0L, 848);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      MBMessageServiceSoap mBMessageServiceSoap0 = new MBMessageServiceSoap();
      assertNotNull(mBMessageServiceSoap0);
  }

  @Test
  public void test8()  throws Throwable  {
      try {
        MBMessageServiceSoap.updateAnswer(962L, false, false);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      try {
        MBMessageServiceSoap.subscribeMessage(65536L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        MBMessageServiceSoap.addMessage(1759L, 1284652111768L, "", "", "", (List<ObjectValuePair<String, InputStream>>) null, true, (double) 1759L, true, serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      try {
        MBMessageServiceSoap.getCategoryMessages((-944L), 1644L, 5, 5, 5);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      try {
        MBMessageServiceSoap.getThreadAnswersCount(11L, 1L, 1L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      try {
        MBMessageServiceSoap.getGroupMessagesCount(0L, 1755);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      try {
        MBMessageServiceSoap.deleteDiscussionMessage((-1767L), (String) null, 577L, (String) null, (-1767L), (-1767L), 0L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test15()  throws Throwable  {
      try {
        MBMessageServiceSoap.getMessage((-1L));
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test16()  throws Throwable  {
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        MBMessageServiceSoap.addDiscussionMessage((-838L), "", 933L, "", (-838L), 1L, (-1291L), (-838L), "", "", serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test17()  throws Throwable  {
      try {
        MBMessageServiceSoap.deleteMessageAttachments(2162688L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      try {
        MBMessageServiceSoap.getThreadMessages((-1L), (-1L), (-1L), 1795, 1795, 1795);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }
}
