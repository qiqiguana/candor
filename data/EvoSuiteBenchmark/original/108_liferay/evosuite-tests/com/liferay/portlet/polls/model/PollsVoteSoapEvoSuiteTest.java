/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.polls.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.polls.model.PollsVote;
import com.liferay.portlet.polls.model.PollsVoteSoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PollsVoteSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PollsVoteSoap pollsVoteSoap0 = new PollsVoteSoap();
      Date date0 = pollsVoteSoap0.getVoteDate();
      assertNull(date0);
  }

  @Test
  public void test1()  throws Throwable  {
      PollsVoteSoap pollsVoteSoap0 = new PollsVoteSoap();
      pollsVoteSoap0.setPrimaryKey((-10L));
      assertEquals((-10L), pollsVoteSoap0.getPrimaryKey());
      assertEquals((-10L), pollsVoteSoap0.getVoteId());
  }

  @Test
  public void test2()  throws Throwable  {
      PollsVoteSoap pollsVoteSoap0 = new PollsVoteSoap();
      pollsVoteSoap0.setCompanyId(0L);
      assertEquals(0L, pollsVoteSoap0.getCompanyId());
  }

  @Test
  public void test3()  throws Throwable  {
      PollsVoteSoap pollsVoteSoap0 = new PollsVoteSoap();
      pollsVoteSoap0.setUserId(0L);
      assertEquals(0L, pollsVoteSoap0.getUserId());
  }

  @Test
  public void test4()  throws Throwable  {
      PollsVoteSoap pollsVoteSoap0 = new PollsVoteSoap();
      Date date0 = pollsVoteSoap0.getModifiedDate();
      assertNull(date0);
  }

  @Test
  public void test5()  throws Throwable  {
      PollsVoteSoap pollsVoteSoap0 = new PollsVoteSoap();
      long long0 = pollsVoteSoap0.getQuestionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test6()  throws Throwable  {
      PollsVoteSoap pollsVoteSoap0 = new PollsVoteSoap();
      long long0 = pollsVoteSoap0.getVoteId();
      assertEquals(0L, long0);
  }

  @Test
  public void test7()  throws Throwable  {
      PollsVoteSoap pollsVoteSoap0 = new PollsVoteSoap();
      pollsVoteSoap0.setQuestionId(0L);
      assertEquals(0L, pollsVoteSoap0.getCompanyId());
  }

  @Test
  public void test8()  throws Throwable  {
      PollsVoteSoap pollsVoteSoap0 = new PollsVoteSoap();
      pollsVoteSoap0.setCreateDate((Date) null);
      assertNull(pollsVoteSoap0.getUserName());
  }

  @Test
  public void test9()  throws Throwable  {
      PollsVoteSoap pollsVoteSoap0 = new PollsVoteSoap();
      pollsVoteSoap0.setUserName("classNameId");
      assertEquals(0L, pollsVoteSoap0.getVoteId());
  }

  @Test
  public void test10()  throws Throwable  {
      PollsVoteSoap pollsVoteSoap0 = new PollsVoteSoap();
      long long0 = pollsVoteSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test11()  throws Throwable  {
      PollsVoteSoap pollsVoteSoap0 = new PollsVoteSoap();
      pollsVoteSoap0.setVoteDate((Date) null);
      assertEquals(0L, pollsVoteSoap0.getPrimaryKey());
  }

  @Test
  public void test12()  throws Throwable  {
      PollsVoteSoap pollsVoteSoap0 = new PollsVoteSoap();
      long long0 = pollsVoteSoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test13()  throws Throwable  {
      PollsVoteSoap pollsVoteSoap0 = new PollsVoteSoap();
      String string0 = pollsVoteSoap0.getUserName();
      assertNull(string0);
  }

  @Test
  public void test14()  throws Throwable  {
      LinkedList<PollsVote> linkedList0 = new LinkedList<PollsVote>();
      linkedList0.add((PollsVote) null);
      // Undeclared exception!
      try {
        PollsVoteSoap.toSoapModels((List<PollsVote>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      PollsVoteSoap pollsVoteSoap0 = new PollsVoteSoap();
      pollsVoteSoap0.setModifiedDate((Date) null);
      assertEquals(0L, pollsVoteSoap0.getQuestionId());
  }

  @Test
  public void test16()  throws Throwable  {
      PollsVoteSoap pollsVoteSoap0 = new PollsVoteSoap();
      long long0 = pollsVoteSoap0.getChoiceId();
      assertEquals(0L, long0);
  }

  @Test
  public void test17()  throws Throwable  {
      PollsVoteSoap pollsVoteSoap0 = new PollsVoteSoap();
      pollsVoteSoap0.setChoiceId((-10L));
      assertEquals((-10L), pollsVoteSoap0.getChoiceId());
  }

  @Test
  public void test18()  throws Throwable  {
      PollsVoteSoap pollsVoteSoap0 = new PollsVoteSoap();
      long long0 = pollsVoteSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test19()  throws Throwable  {
      PollsVoteSoap pollsVoteSoap0 = new PollsVoteSoap();
      Date date0 = pollsVoteSoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test20()  throws Throwable  {
      PollsVote[][] pollsVoteArray0 = new PollsVote[1][7];
      // Undeclared exception!
      try {
        PollsVoteSoap.toSoapModels(pollsVoteArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test21()  throws Throwable  {
      LinkedList<PollsVote> linkedList0 = new LinkedList<PollsVote>();
      PollsVoteSoap[] pollsVoteSoapArray0 = PollsVoteSoap.toSoapModels((List<PollsVote>) linkedList0);
      assertNotNull(pollsVoteSoapArray0);
  }
}
