/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.documentlibrary.service.http;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.kernel.workflow.comparator.BaseWorkflowTaskDueDateComparator;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portlet.documentlibrary.service.http.DLFolderServiceSoap;
import java.rmi.RemoteException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DLFolderServiceSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      try {
        DLFolderServiceSoap.getSubfolderIds((-1526L), 21L, true);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      try {
        DLFolderServiceSoap.getFolder(1L, 1L, "bhax9");
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      try {
        DLFolderServiceSoap.getFileEntriesAndFileShortcutsCount(0L, 853L, (-1));
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      try {
        DLFolderServiceSoap.getMountFoldersCount(0L, 0L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      try {
        DLFolderServiceSoap.deleteFolder((-280L));
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        DLFolderServiceSoap.moveFolder(0L, 0L, serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      DLFolderServiceSoap dLFolderServiceSoap0 = new DLFolderServiceSoap();
      assertNotNull(dLFolderServiceSoap0);
  }

  @Test
  public void test7()  throws Throwable  {
      try {
        DLFolderServiceSoap.isFolderLocked(1054L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      BaseWorkflowTaskDueDateComparator baseWorkflowTaskDueDateComparator0 = new BaseWorkflowTaskDueDateComparator(true);
      try {
        DLFolderServiceSoap.getMountFolders(1081L, 1L, (-1715), (-1715), (OrderByComparator) baseWorkflowTaskDueDateComparator0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      try {
        DLFolderServiceSoap.hasInheritableLock(867L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      try {
        DLFolderServiceSoap.unlockFolder(1122L, 0L, "+x,kYLOWszEp=--$", "+x,kYLOWszEp=--$");
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      BaseWorkflowTaskDueDateComparator baseWorkflowTaskDueDateComparator0 = new BaseWorkflowTaskDueDateComparator();
      try {
        DLFolderServiceSoap.getFolders(0L, (-954L), 0, true, (-949), (-949), (OrderByComparator) baseWorkflowTaskDueDateComparator0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        DLFolderServiceSoap.addFolder((long) 0, 1279L, true, 0L, "$8l?J", "$8l?J", serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[5];
      try {
        DLFolderServiceSoap.getFoldersAndFileEntriesAndFileShortcuts(2023L, (-995L), (-441), stringArray0, true);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      BaseWorkflowTaskDueDateComparator baseWorkflowTaskDueDateComparator0 = new BaseWorkflowTaskDueDateComparator(false);
      try {
        DLFolderServiceSoap.getFolders(0L, 0L, 10, 10, (OrderByComparator) baseWorkflowTaskDueDateComparator0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test15()  throws Throwable  {
      try {
        DLFolderServiceSoap.deleteFolder(0L, false);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test16()  throws Throwable  {
      try {
        DLFolderServiceSoap.hasFolderLock((-1630L));
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test17()  throws Throwable  {
      Long[] longArray0 = new Long[10];
      longArray0[2] = longArray0[1];
      longArray0[9] = (Long) (-440L);
      try {
        DLFolderServiceSoap.getSubfolderIds(longArray0, (long) longArray0[2], (long) longArray0[9]);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      try {
        DLFolderServiceSoap.unlockFolder((-1667L), (-1667L), "");
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test19()  throws Throwable  {
      Long[] longArray0 = new Long[4];
      ServiceContext serviceContext0 = new ServiceContext();
      try {
        DLFolderServiceSoap.updateFolder(0L, "U:5>m)Nx %n{6?[", "U:5>m)Nx %n{6?[", 0L, longArray0, true, serviceContext0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test20()  throws Throwable  {
      try {
        DLFolderServiceSoap.getFoldersCount(0L, 0L, 1002, true);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test21()  throws Throwable  {
      try {
        DLFolderServiceSoap.verifyInheritableLock((-1129L), "u4j+/RZ9@");
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test22()  throws Throwable  {
      try {
        DLFolderServiceSoap.deleteFolder((-443L), (-443L), "r{UwNe4");
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test23()  throws Throwable  {
      String[] stringArray0 = new String[8];
      try {
        DLFolderServiceSoap.getFileEntriesAndFileShortcutsCount((-1124L), (-1L), 10, stringArray0);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test24()  throws Throwable  {
      String[] stringArray0 = new String[3];
      try {
        DLFolderServiceSoap.getFoldersAndFileEntriesAndFileShortcutsCount((-2017L), (-1642L), 1682, stringArray0, false);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test25()  throws Throwable  {
      try {
        DLFolderServiceSoap.getFoldersAndFileEntriesAndFileShortcutsCount((long) 703, 0L, 703, true);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test26()  throws Throwable  {
      try {
        DLFolderServiceSoap.getFolder(0L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test27()  throws Throwable  {
      try {
        DLFolderServiceSoap.getFoldersCount(0L, 0L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test28()  throws Throwable  {
      try {
        DLFolderServiceSoap.getFolderIds(967L, 0L);
        fail("Expecting exception: RemoteException");
      } catch(RemoteException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }
}
