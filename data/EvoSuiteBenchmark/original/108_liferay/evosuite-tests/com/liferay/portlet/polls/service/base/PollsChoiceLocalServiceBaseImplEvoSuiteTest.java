/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.polls.service.base;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.counter.service.CounterLocalService;
import com.liferay.portal.dao.orm.hibernate.DynamicQueryImpl;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.kernel.workflow.comparator.BaseWorkflowTaskNameComparator;
import com.liferay.portal.service.ResourceLocalService;
import com.liferay.portal.service.UserLocalService;
import com.liferay.portal.service.UserService;
import com.liferay.portal.service.UserServiceWrapper;
import com.liferay.portal.service.persistence.UserFinder;
import com.liferay.portal.service.persistence.UserPersistence;
import com.liferay.portlet.polls.model.PollsChoice;
import com.liferay.portlet.polls.service.PollsChoiceLocalService;
import com.liferay.portlet.polls.service.PollsChoiceLocalServiceWrapper;
import com.liferay.portlet.polls.service.PollsChoiceService;
import com.liferay.portlet.polls.service.PollsQuestionLocalService;
import com.liferay.portlet.polls.service.PollsQuestionService;
import com.liferay.portlet.polls.service.PollsQuestionServiceWrapper;
import com.liferay.portlet.polls.service.PollsVoteLocalService;
import com.liferay.portlet.polls.service.PollsVoteService;
import com.liferay.portlet.polls.service.base.PollsChoiceLocalServiceBaseImpl;
import com.liferay.portlet.polls.service.impl.PollsChoiceLocalServiceImpl;
import com.liferay.portlet.polls.service.persistence.PollsChoiceFinder;
import com.liferay.portlet.polls.service.persistence.PollsChoicePersistence;
import com.liferay.portlet.polls.service.persistence.PollsQuestionPersistence;
import com.liferay.portlet.polls.service.persistence.PollsVotePersistence;
import java.io.Serializable;
import org.hibernate.criterion.DetachedCriteria;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PollsChoiceLocalServiceBaseImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      // Undeclared exception!
      try {
        pollsChoiceLocalServiceImpl0.createPollsChoice(0L);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      // Undeclared exception!
      try {
        pollsChoiceLocalServiceImpl0.getPollsChoices(540, (-128));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      // Undeclared exception!
      try {
        pollsChoiceLocalServiceImpl0.destroy();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      UserLocalService userLocalService0 = pollsChoiceLocalServiceImpl0.getUserLocalService();
      assertNull(userLocalService0);
  }

  @Test
  public void test4()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      PollsQuestionServiceWrapper pollsQuestionServiceWrapper0 = new PollsQuestionServiceWrapper((PollsQuestionService) null);
      pollsChoiceLocalServiceImpl0.setPollsQuestionService((PollsQuestionService) pollsQuestionServiceWrapper0);
      assertEquals("com.liferay.portlet.polls.model.PollsChoice", pollsChoiceLocalServiceImpl0.getModelClassName());
  }

  @Test
  public void test5()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      // Undeclared exception!
      try {
        pollsChoiceLocalServiceImpl0.getPollsChoicesCount();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      UserFinder userFinder0 = pollsChoiceLocalServiceImpl0.getUserFinder();
      assertNull(userFinder0);
  }

  @Test
  public void test7()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      pollsChoiceLocalServiceImpl0.setPollsVoteService((PollsVoteService) null);
      assertEquals("com.liferay.portlet.polls.model.PollsChoice", pollsChoiceLocalServiceImpl0.getModelClassName());
  }

  @Test
  public void test8()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      UserServiceWrapper userServiceWrapper0 = new UserServiceWrapper((UserService) null);
      pollsChoiceLocalServiceImpl0.setUserService((UserService) userServiceWrapper0);
      assertEquals("com.liferay.portlet.polls.model.PollsChoice", pollsChoiceLocalServiceImpl0.getModelClassName());
  }

  @Test
  public void test9()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      // Undeclared exception!
      try {
        pollsChoiceLocalServiceImpl0.addPollsChoice((PollsChoice) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      // Undeclared exception!
      try {
        pollsChoiceLocalServiceImpl0.fetchPollsChoice(50L);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      PollsVoteService pollsVoteService0 = pollsChoiceLocalServiceImpl0.getPollsVoteService();
      assertNull(pollsVoteService0);
  }

  @Test
  public void test12()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      UserPersistence userPersistence0 = pollsChoiceLocalServiceImpl0.getUserPersistence();
      assertNull(userPersistence0);
  }

  @Test
  public void test13()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      PollsChoiceLocalServiceWrapper pollsChoiceLocalServiceWrapper0 = new PollsChoiceLocalServiceWrapper((PollsChoiceLocalService) pollsChoiceLocalServiceImpl0);
      // Undeclared exception!
      try {
        pollsChoiceLocalServiceWrapper0.deletePollsChoice((PollsChoice) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      Class<?> class0 = pollsChoiceLocalServiceImpl0.getModelClass();
      assertEquals(true, class0.isInterface());
  }

  @Test
  public void test15()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      pollsChoiceLocalServiceImpl0.setPollsChoicePersistence((PollsChoicePersistence) null);
      assertNull(pollsChoiceLocalServiceImpl0.getBeanIdentifier());
  }

  @Test
  public void test16()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      PollsQuestionPersistence pollsQuestionPersistence0 = pollsChoiceLocalServiceImpl0.getPollsQuestionPersistence();
      assertNull(pollsQuestionPersistence0);
  }

  @Test
  public void test17()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      pollsChoiceLocalServiceImpl0.setPollsVotePersistence((PollsVotePersistence) null);
      assertNull(pollsChoiceLocalServiceImpl0.getBeanIdentifier());
  }

  @Test
  public void test18()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      DetachedCriteria detachedCriteria0 = DetachedCriteria.forEntityName("FfDw `");
      DynamicQueryImpl dynamicQueryImpl0 = new DynamicQueryImpl(detachedCriteria0);
      // Undeclared exception!
      try {
        pollsChoiceLocalServiceImpl0.dynamicQueryCount((DynamicQuery) dynamicQueryImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test19()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      pollsChoiceLocalServiceImpl0.setUserPersistence((UserPersistence) null);
      assertNull(pollsChoiceLocalServiceImpl0.getBeanIdentifier());
  }

  @Test
  public void test20()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      // Undeclared exception!
      try {
        pollsChoiceLocalServiceImpl0.updatePollsChoice((PollsChoice) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test21()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      pollsChoiceLocalServiceImpl0.setUserFinder((UserFinder) null);
      assertEquals("com.liferay.portlet.polls.model.PollsChoice", pollsChoiceLocalServiceImpl0.getModelClassName());
  }

  @Test
  public void test22()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      // Undeclared exception!
      try {
        pollsChoiceLocalServiceImpl0.getPersistedModel((Serializable) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test23()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      pollsChoiceLocalServiceImpl0.setCounterLocalService((CounterLocalService) null);
      assertEquals("com.liferay.portlet.polls.model.PollsChoice", pollsChoiceLocalServiceImpl0.getModelClassName());
  }

  @Test
  public void test24()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      PollsChoiceFinder pollsChoiceFinder0 = pollsChoiceLocalServiceImpl0.getPollsChoiceFinder();
      assertNull(pollsChoiceFinder0);
  }

  @Test
  public void test25()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      PollsChoicePersistence pollsChoicePersistence0 = pollsChoiceLocalServiceImpl0.getPollsChoicePersistence();
      assertNull(pollsChoicePersistence0);
  }

  @Test
  public void test26()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      // Undeclared exception!
      try {
        pollsChoiceLocalServiceImpl0.dynamicQuery();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test27()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      PollsVoteLocalService pollsVoteLocalService0 = pollsChoiceLocalServiceImpl0.getPollsVoteLocalService();
      assertNull(pollsVoteLocalService0);
  }

  @Test
  public void test28()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      PollsChoiceLocalService pollsChoiceLocalService0 = pollsChoiceLocalServiceImpl0.getPollsChoiceLocalService();
      assertNull(pollsChoiceLocalService0);
  }

  @Test
  public void test29()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      pollsChoiceLocalServiceImpl0.setPollsQuestionLocalService((PollsQuestionLocalService) null);
      assertEquals("com.liferay.portlet.polls.model.PollsChoice", pollsChoiceLocalServiceImpl0.getModelClassName());
  }

  @Test
  public void test30()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      pollsChoiceLocalServiceImpl0.setPollsChoiceService((PollsChoiceService) null);
      assertEquals("com.liferay.portlet.polls.model.PollsChoice", pollsChoiceLocalServiceImpl0.getModelClassName());
  }

  @Test
  public void test31()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      PollsVotePersistence pollsVotePersistence0 = pollsChoiceLocalServiceImpl0.getPollsVotePersistence();
      assertNull(pollsVotePersistence0);
  }

  @Test
  public void test32()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      pollsChoiceLocalServiceImpl0.setPollsChoiceFinder((PollsChoiceFinder) null);
      assertEquals("com.liferay.portlet.polls.model.PollsChoice", pollsChoiceLocalServiceImpl0.getModelClassName());
  }

  @Test
  public void test33()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      PollsQuestionLocalService pollsQuestionLocalService0 = pollsChoiceLocalServiceImpl0.getPollsQuestionLocalService();
      assertNull(pollsQuestionLocalService0);
  }

  @Test
  public void test34()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      DetachedCriteria detachedCriteria0 = DetachedCriteria.forEntityName("[Hh\"b=?");
      DynamicQueryImpl dynamicQueryImpl0 = new DynamicQueryImpl(detachedCriteria0);
      // Undeclared exception!
      try {
        pollsChoiceLocalServiceImpl0.dynamicQuery((DynamicQuery) dynamicQueryImpl0, 0, (-542));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test35()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      try {
        pollsChoiceLocalServiceImpl0.runSQL("SUV");
        fail("Expecting exception: SystemException");
      } catch(SystemException e) {
        /*
         * java.lang.NullPointerException
         */
      }
  }

  @Test
  public void test36()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      Class<?> class0 = PollsChoiceLocalServiceBaseImpl.class;
      DetachedCriteria detachedCriteria0 = DetachedCriteria.forClass(class0);
      DynamicQueryImpl dynamicQueryImpl0 = new DynamicQueryImpl(detachedCriteria0);
      // Undeclared exception!
      try {
        pollsChoiceLocalServiceImpl0.dynamicQuery((DynamicQuery) dynamicQueryImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test37()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      String string0 = pollsChoiceLocalServiceImpl0.getBeanIdentifier();
      assertNull(string0);
  }

  @Test
  public void test38()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      UserService userService0 = pollsChoiceLocalServiceImpl0.getUserService();
      assertNull(userService0);
  }

  @Test
  public void test39()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      // Undeclared exception!
      try {
        pollsChoiceLocalServiceImpl0.getPollsChoice(2043L);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test40()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      // Undeclared exception!
      try {
        pollsChoiceLocalServiceImpl0.afterPropertiesSet();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test41()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      // Undeclared exception!
      try {
        pollsChoiceLocalServiceImpl0.deletePollsChoice((-863L));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test42()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      PollsChoiceService pollsChoiceService0 = pollsChoiceLocalServiceImpl0.getPollsChoiceService();
      assertNull(pollsChoiceService0);
  }

  @Test
  public void test43()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      pollsChoiceLocalServiceImpl0.setPollsQuestionPersistence((PollsQuestionPersistence) null);
      assertEquals("com.liferay.portlet.polls.model.PollsChoice", pollsChoiceLocalServiceImpl0.getModelClassName());
  }

  @Test
  public void test44()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      PollsQuestionService pollsQuestionService0 = pollsChoiceLocalServiceImpl0.getPollsQuestionService();
      assertNull(pollsQuestionService0);
  }

  @Test
  public void test45()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      pollsChoiceLocalServiceImpl0.setBeanIdentifier("OPTIMISTIC");
      assertEquals("com.liferay.portlet.polls.model.PollsChoice", pollsChoiceLocalServiceImpl0.getModelClassName());
  }

  @Test
  public void test46()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      pollsChoiceLocalServiceImpl0.setPollsVoteLocalService((PollsVoteLocalService) null);
      assertNull(pollsChoiceLocalServiceImpl0.getBeanIdentifier());
  }

  @Test
  public void test47()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      BaseWorkflowTaskNameComparator baseWorkflowTaskNameComparator0 = new BaseWorkflowTaskNameComparator();
      // Undeclared exception!
      try {
        pollsChoiceLocalServiceImpl0.dynamicQuery((DynamicQuery) null, 276, 276, (OrderByComparator) baseWorkflowTaskNameComparator0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test48()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      ResourceLocalService resourceLocalService0 = pollsChoiceLocalServiceImpl0.getResourceLocalService();
      assertNull(resourceLocalService0);
  }

  @Test
  public void test49()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      String string0 = pollsChoiceLocalServiceImpl0.getModelClassName();
      assertEquals("com.liferay.portlet.polls.model.PollsChoice", string0);
  }

  @Test
  public void test50()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      pollsChoiceLocalServiceImpl0.setResourceLocalService((ResourceLocalService) null);
      assertNull(pollsChoiceLocalServiceImpl0.getBeanIdentifier());
  }

  @Test
  public void test51()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      pollsChoiceLocalServiceImpl0.setPollsChoiceLocalService((PollsChoiceLocalService) pollsChoiceLocalServiceImpl0);
      assertNull(pollsChoiceLocalServiceImpl0.getBeanIdentifier());
  }

  @Test
  public void test52()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      CounterLocalService counterLocalService0 = pollsChoiceLocalServiceImpl0.getCounterLocalService();
      assertNull(counterLocalService0);
  }

  @Test
  public void test53()  throws Throwable  {
      PollsChoiceLocalServiceImpl pollsChoiceLocalServiceImpl0 = new PollsChoiceLocalServiceImpl();
      pollsChoiceLocalServiceImpl0.setUserLocalService((UserLocalService) null);
      assertEquals("com.liferay.portlet.polls.model.PollsChoice", pollsChoiceLocalServiceImpl0.getModelClassName());
  }
}
