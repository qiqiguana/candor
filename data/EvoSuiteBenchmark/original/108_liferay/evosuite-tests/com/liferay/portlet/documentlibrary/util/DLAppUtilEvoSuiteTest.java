/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.documentlibrary.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.security.permission.PermissionChecker;
import com.liferay.portlet.documentlibrary.util.DLAppUtil;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DLAppUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DLAppUtil dLAppUtil0 = new DLAppUtil();
      assertNotNull(dLAppUtil0);
  }

  @Test
  public void test1()  throws Throwable  {
      long[] longArray0 = new long[1];
      // Undeclared exception!
      try {
        DLAppUtil.filterFolderIds((PermissionChecker) null, (-1228L), longArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      String string0 = DLAppUtil.getMimeType("", "", "", (File) null, (InputStream) pipedInputStream0);
      assertEquals("", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try {
        DLAppUtil.getMimeType("application/octet-stream", "application/octet-stream", "application/octet-stream", (File) null, (InputStream) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      File file0 = new File("g}g<Ar8\"}C\"");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      DLAppUtil.getMimeType("g}g<Ar8\"}C\"", "g}g<Ar8\"}C\"", "g}g<Ar8\"}C\"", file0, (InputStream) pipedInputStream0);
  }

  @Test
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try {
        DLAppUtil.getMimeType("application/octet-stream", "application/octet-stream", (String) null, (File) null, (InputStream) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
