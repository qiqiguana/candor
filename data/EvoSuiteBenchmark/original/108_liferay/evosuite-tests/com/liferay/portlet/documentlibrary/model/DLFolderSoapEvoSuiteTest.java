/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.documentlibrary.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.documentlibrary.model.DLFolder;
import com.liferay.portlet.documentlibrary.model.DLFolderSoap;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DLFolderSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      boolean boolean0 = dLFolderSoap0.getHidden();
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      Date date0 = dLFolderSoap0.getLastPostDate();
      assertNull(date0);
  }

  @Test
  public void test2()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      String string0 = dLFolderSoap0.getStatusByUserName();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      long long0 = dLFolderSoap0.getStatusByUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test4()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      dLFolderSoap0.setPrimaryKey(1624L);
      assertEquals(1624L, dLFolderSoap0.getPrimaryKey());
      assertEquals(1624L, dLFolderSoap0.getFolderId());
  }

  @Test
  public void test5()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      dLFolderSoap0.setHidden(false);
      assertEquals(false, dLFolderSoap0.getHidden());
      assertEquals(false, dLFolderSoap0.isHidden());
  }

  @Test
  public void test6()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      dLFolderSoap0.setMountPoint(true);
      assertEquals(true, dLFolderSoap0.getMountPoint());
      assertEquals(true, dLFolderSoap0.isMountPoint());
  }

  @Test
  public void test7()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      long long0 = dLFolderSoap0.getRepositoryId();
      assertEquals(0L, long0);
  }

  @Test
  public void test8()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      long long0 = dLFolderSoap0.getDefaultFileEntryTypeId();
      assertEquals(0L, long0);
  }

  @Test
  public void test9()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      long long0 = dLFolderSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test10()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      long long0 = dLFolderSoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test11()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      Date date0 = dLFolderSoap0.getCreateDate();
      assertNull(date0);
  }

  @Test
  public void test12()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      dLFolderSoap0.setDefaultFileEntryTypeId(0L);
      assertEquals(0, dLFolderSoap0.getStatus());
  }

  @Test
  public void test13()  throws Throwable  {
      DLFolder[][] dLFolderArray0 = new DLFolder[1][2];
      // Undeclared exception!
      try {
        DLFolderSoap.toSoapModels(dLFolderArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      boolean boolean0 = dLFolderSoap0.getMountPoint();
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      dLFolderSoap0.setParentFolderId(0L);
      assertEquals(0L, dLFolderSoap0.getParentFolderId());
  }

  @Test
  public void test16()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      dLFolderSoap0.setLastPostDate((Date) null);
      assertEquals(false, dLFolderSoap0.getOverrideFileEntryTypes());
  }

  @Test
  public void test17()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      dLFolderSoap0.setModifiedDate((Date) null);
      assertNull(dLFolderSoap0.getUserName());
  }

  @Test
  public void test18()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      long long0 = dLFolderSoap0.getParentFolderId();
      assertEquals(0L, long0);
  }

  @Test
  public void test19()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      Date date0 = dLFolderSoap0.getStatusDate();
      assertNull(date0);
  }

  @Test
  public void test20()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      dLFolderSoap0.setCreateDate((Date) null);
      assertEquals(0L, dLFolderSoap0.getParentFolderId());
  }

  @Test
  public void test21()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      dLFolderSoap0.setCompanyId(1624L);
      assertEquals(1624L, dLFolderSoap0.getCompanyId());
  }

  @Test
  public void test22()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      dLFolderSoap0.setUuid((String) null);
      assertNull(dLFolderSoap0.getStatusByUserName());
  }

  @Test
  public void test23()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      boolean boolean0 = dLFolderSoap0.getOverrideFileEntryTypes();
      assertEquals(false, boolean0);
  }

  @Test
  public void test24()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      boolean boolean0 = dLFolderSoap0.isHidden();
      assertEquals(false, boolean0);
  }

  @Test
  public void test25()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      String string0 = dLFolderSoap0.getUserName();
      assertNull(string0);
  }

  @Test
  public void test26()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      dLFolderSoap0.setDescription((String) null);
      assertEquals(0L, dLFolderSoap0.getCompanyId());
  }

  @Test
  public void test27()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      long long0 = dLFolderSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test28()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      dLFolderSoap0.setStatusDate((Date) null);
      assertEquals(false, dLFolderSoap0.getOverrideFileEntryTypes());
  }

  @Test
  public void test29()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      String string0 = dLFolderSoap0.getDescription();
      assertNull(string0);
  }

  @Test
  public void test30()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      long long0 = dLFolderSoap0.getGroupId();
      assertEquals(0L, long0);
  }

  @Test
  public void test31()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      dLFolderSoap0.setName("C<'+Bal$%*)VKI");
      assertEquals(false, dLFolderSoap0.isMountPoint());
  }

  @Test
  public void test32()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      dLFolderSoap0.setGroupId(0L);
      assertEquals(0L, dLFolderSoap0.getStatusByUserId());
  }

  @Test
  public void test33()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      dLFolderSoap0.setStatusByUserId(1527L);
      assertEquals(1527L, dLFolderSoap0.getStatusByUserId());
  }

  @Test
  public void test34()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      dLFolderSoap0.setRepositoryId(1527L);
      assertEquals(1527L, dLFolderSoap0.getRepositoryId());
  }

  @Test
  public void test35()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      Date date0 = dLFolderSoap0.getModifiedDate();
      assertNull(date0);
  }

  @Test
  public void test36()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      boolean boolean0 = dLFolderSoap0.isOverrideFileEntryTypes();
      assertEquals(false, boolean0);
  }

  @Test
  public void test37()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      String string0 = dLFolderSoap0.getName();
      assertNull(string0);
  }

  @Test
  public void test38()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      dLFolderSoap0.setUserName("C<'+Bal$%*)VKI");
      assertEquals(false, dLFolderSoap0.getMountPoint());
  }

  @Test
  public void test39()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      dLFolderSoap0.setOverrideFileEntryTypes(false);
      assertEquals(false, dLFolderSoap0.isOverrideFileEntryTypes());
      assertEquals(false, dLFolderSoap0.getOverrideFileEntryTypes());
  }

  @Test
  public void test40()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      boolean boolean0 = dLFolderSoap0.isMountPoint();
      assertEquals(false, boolean0);
  }

  @Test
  public void test41()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      dLFolderSoap0.setUserId(1527L);
      assertEquals(1527L, dLFolderSoap0.getUserId());
  }

  @Test
  public void test42()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      String string0 = dLFolderSoap0.getUuid();
      assertNull(string0);
  }

  @Test
  public void test43()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      int int0 = dLFolderSoap0.getStatus();
      assertEquals(0, int0);
  }

  @Test
  public void test44()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      dLFolderSoap0.setStatusByUserName("C<'+Bal$%*)VKI");
      assertEquals(false, dLFolderSoap0.getHidden());
  }

  @Test
  public void test45()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      dLFolderSoap0.setStatus(515);
      assertEquals(515, dLFolderSoap0.getStatus());
  }

  @Test
  public void test46()  throws Throwable  {
      DLFolderSoap dLFolderSoap0 = new DLFolderSoap();
      long long0 = dLFolderSoap0.getFolderId();
      assertEquals(0L, long0);
  }

  @Test
  public void test47()  throws Throwable  {
      LinkedList<DLFolder> linkedList0 = new LinkedList<DLFolder>();
      DLFolderSoap[] dLFolderSoapArray0 = DLFolderSoap.toSoapModels((List<DLFolder>) linkedList0);
      assertNotNull(dLFolderSoapArray0);
  }

  @Test
  public void test48()  throws Throwable  {
      LinkedList<DLFolder> linkedList0 = new LinkedList<DLFolder>();
      linkedList0.add((DLFolder) null);
      // Undeclared exception!
      try {
        DLFolderSoap.toSoapModels((List<DLFolder>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
