/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.wiki.engines.jspwiki;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.ecyrd.jspwiki.QueryItem;
import com.ecyrd.jspwiki.WikiEngine;
import com.ecyrd.jspwiki.providers.ProviderException;
import com.liferay.portal.kernel.bean.BeanLocatorException;
import com.liferay.portlet.wiki.engines.jspwiki.LiferayPageProvider;
import com.liferay.portlet.wiki.model.WikiPage;
import java.util.Collection;
import java.util.Date;
import java.util.List;
import java.util.Properties;
import javax.swing.SpinnerDateModel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LiferayPageProviderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LiferayPageProvider liferayPageProvider0 = new LiferayPageProvider();
      liferayPageProvider0.deletePage("K");
      assertEquals("com.liferay.portlet.wiki.engines.jspwiki.LiferayPageProvider", liferayPageProvider0.getProviderInfo());
  }

  @Test
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try {
        LiferayPageProvider.toJSPWikiPage((WikiPage) null, (WikiEngine) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      LiferayPageProvider liferayPageProvider0 = new LiferayPageProvider();
      liferayPageProvider0.deleteVersion("Rolv:*]", 1);
      assertEquals("com.liferay.portlet.wiki.engines.jspwiki.LiferayPageProvider", liferayPageProvider0.getProviderInfo());
  }

  @Test
  public void test3()  throws Throwable  {
      LiferayPageProvider liferayPageProvider0 = new LiferayPageProvider();
      QueryItem[] queryItemArray0 = new QueryItem[2];
      Collection<com.ecyrd.jspwiki.WikiPage> collection0 = liferayPageProvider0.findPages(queryItemArray0);
      assertEquals(0, collection0.size());
  }

  @Test
  public void test4()  throws Throwable  {
      LiferayPageProvider liferayPageProvider0 = new LiferayPageProvider();
      SpinnerDateModel spinnerDateModel0 = new SpinnerDateModel();
      Date date0 = spinnerDateModel0.getDate();
      // Undeclared exception!
      try {
        liferayPageProvider0.getAllChangedSince(date0);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      LiferayPageProvider liferayPageProvider0 = new LiferayPageProvider();
      // Undeclared exception!
      try {
        liferayPageProvider0.getPageCount();
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      LiferayPageProvider liferayPageProvider0 = new LiferayPageProvider();
      try {
        liferayPageProvider0.getPageInfo("tqIUo", (-610));
        fail("Expecting exception: ProviderException");
      } catch(ProviderException e) {
        /*
         * com.liferay.portal.kernel.bean.BeanLocatorException: BeanLocator has not been set
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      LiferayPageProvider liferayPageProvider0 = new LiferayPageProvider();
      try {
        liferayPageProvider0.getPageText("K", (-210));
        fail("Expecting exception: ProviderException");
      } catch(ProviderException e) {
        /*
         * com.liferay.portal.kernel.bean.BeanLocatorException: BeanLocator has not been set
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      LiferayPageProvider liferayPageProvider0 = new LiferayPageProvider();
      String string0 = liferayPageProvider0.getProviderInfo();
      assertEquals("com.liferay.portlet.wiki.engines.jspwiki.LiferayPageProvider", string0);
  }

  @Test
  public void test9()  throws Throwable  {
      LiferayPageProvider liferayPageProvider0 = new LiferayPageProvider();
      List<com.ecyrd.jspwiki.WikiPage> list0 = liferayPageProvider0.getVersionHistory("t8)s}1{h2j{[LAUCj");
      assertEquals(0, list0.size());
  }

  @Test
  public void test10()  throws Throwable  {
      LiferayPageProvider liferayPageProvider0 = new LiferayPageProvider();
      Properties properties0 = new Properties();
      liferayPageProvider0.initialize((WikiEngine) null, properties0);
      assertEquals("com.liferay.portlet.wiki.engines.jspwiki.LiferayPageProvider", liferayPageProvider0.getProviderInfo());
  }

  @Test
  public void test11()  throws Throwable  {
      LiferayPageProvider liferayPageProvider0 = new LiferayPageProvider();
      liferayPageProvider0.movePage("{", "{");
      assertEquals("com.liferay.portlet.wiki.engines.jspwiki.LiferayPageProvider", liferayPageProvider0.getProviderInfo());
  }

  @Test
  public void test12()  throws Throwable  {
      LiferayPageProvider liferayPageProvider0 = new LiferayPageProvider();
      boolean boolean0 = liferayPageProvider0.pageExists("{");
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      LiferayPageProvider liferayPageProvider0 = new LiferayPageProvider();
      liferayPageProvider0.putPageText((com.ecyrd.jspwiki.WikiPage) null, "oe");
      assertEquals("com.liferay.portlet.wiki.engines.jspwiki.LiferayPageProvider", liferayPageProvider0.getProviderInfo());
  }
}
