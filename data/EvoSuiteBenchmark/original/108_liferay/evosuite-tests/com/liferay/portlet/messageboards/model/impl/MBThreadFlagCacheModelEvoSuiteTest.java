/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.messageboards.model.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.messageboards.model.impl.MBThreadFlagCacheModel;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MBThreadFlagCacheModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MBThreadFlagCacheModel mBThreadFlagCacheModel0 = new MBThreadFlagCacheModel();
      // Undeclared exception!
      try {
        mBThreadFlagCacheModel0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      MBThreadFlagCacheModel mBThreadFlagCacheModel0 = new MBThreadFlagCacheModel();
      // Undeclared exception!
      try {
        mBThreadFlagCacheModel0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      MBThreadFlagCacheModel mBThreadFlagCacheModel0 = new MBThreadFlagCacheModel();
      String string0 = mBThreadFlagCacheModel0.toString();
      assertNotNull(string0);
      assertEquals("{threadFlagId=0, userId=0, modifiedDate=0, threadId=0}", string0);
  }
}
