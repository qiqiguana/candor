/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.dynamicdatamapping.storage.query;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.dynamicdatamapping.storage.query.ComparisonOperator;
import com.liferay.portlet.dynamicdatamapping.storage.query.Condition;
import com.liferay.portlet.dynamicdatamapping.storage.query.FieldConditionImpl;
import com.liferay.portlet.dynamicdatamapping.storage.query.JunctionImpl;
import com.liferay.portlet.dynamicdatamapping.storage.query.LogicalOperator;
import java.util.Iterator;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JunctionImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LogicalOperator logicalOperator0 = LogicalOperator.OR;
      JunctionImpl junctionImpl0 = new JunctionImpl(logicalOperator0);
      LogicalOperator logicalOperator1 = junctionImpl0.getLogicalOperator();
      assertEquals("OR", logicalOperator1.name());
  }

  @Test
  public void test1()  throws Throwable  {
      LogicalOperator logicalOperator0 = LogicalOperator.OR;
      JunctionImpl junctionImpl0 = new JunctionImpl(logicalOperator0);
      boolean boolean0 = junctionImpl0.isJunction();
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      LogicalOperator logicalOperator0 = LogicalOperator.OR;
      JunctionImpl junctionImpl0 = new JunctionImpl(logicalOperator0);
      Iterator<Condition> iterator0 = junctionImpl0.iterator();
      assertEquals(false, iterator0.hasNext());
  }

  @Test
  public void test3()  throws Throwable  {
      LogicalOperator logicalOperator0 = LogicalOperator.OR;
      JunctionImpl junctionImpl0 = new JunctionImpl(logicalOperator0);
      ComparisonOperator comparisonOperator0 = ComparisonOperator.GREATER_THAN;
      FieldConditionImpl fieldConditionImpl0 = new FieldConditionImpl("", (Object) "", comparisonOperator0);
      JunctionImpl junctionImpl1 = (JunctionImpl)junctionImpl0.add((Condition) fieldConditionImpl0);
      assertEquals(LogicalOperator.OR, junctionImpl1.getLogicalOperator());
  }
}
