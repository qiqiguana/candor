/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.shopping.model.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.shopping.model.impl.ShoppingItemPriceCacheModel;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ShoppingItemPriceCacheModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ShoppingItemPriceCacheModel shoppingItemPriceCacheModel0 = new ShoppingItemPriceCacheModel();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) pipedOutputStream0);
      shoppingItemPriceCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
  }

  @Test
  public void test1()  throws Throwable  {
      ShoppingItemPriceCacheModel shoppingItemPriceCacheModel0 = new ShoppingItemPriceCacheModel();
      // Undeclared exception!
      try {
        shoppingItemPriceCacheModel0.toEntityModel();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class com.liferay.portlet.shopping.model.impl.ShoppingItemPriceImpl
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ShoppingItemPriceCacheModel shoppingItemPriceCacheModel0 = new ShoppingItemPriceCacheModel();
      String string0 = shoppingItemPriceCacheModel0.toString();
      assertEquals("{itemPriceId=0, itemId=0, minQuantity=0, maxQuantity=0, price=0.0, discount=0.0, taxable=false, shipping=0.0, useShippingFormula=false, status=0}", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      ShoppingItemPriceCacheModel shoppingItemPriceCacheModel0 = new ShoppingItemPriceCacheModel();
      // Undeclared exception!
      try {
        shoppingItemPriceCacheModel0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
