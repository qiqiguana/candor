/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.announcements.service.base;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.counter.service.CounterLocalService;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.ResourceLocalService;
import com.liferay.portal.service.UserLocalService;
import com.liferay.portal.service.UserService;
import com.liferay.portal.service.persistence.UserFinder;
import com.liferay.portal.service.persistence.UserPersistence;
import com.liferay.portlet.announcements.service.AnnouncementsDeliveryLocalService;
import com.liferay.portlet.announcements.service.AnnouncementsDeliveryService;
import com.liferay.portlet.announcements.service.AnnouncementsEntryLocalService;
import com.liferay.portlet.announcements.service.AnnouncementsEntryService;
import com.liferay.portlet.announcements.service.AnnouncementsFlagLocalService;
import com.liferay.portlet.announcements.service.AnnouncementsFlagService;
import com.liferay.portlet.announcements.service.impl.AnnouncementsDeliveryServiceImpl;
import com.liferay.portlet.announcements.service.persistence.AnnouncementsDeliveryPersistence;
import com.liferay.portlet.announcements.service.persistence.AnnouncementsEntryFinder;
import com.liferay.portlet.announcements.service.persistence.AnnouncementsEntryPersistence;
import com.liferay.portlet.announcements.service.persistence.AnnouncementsFlagPersistence;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AnnouncementsDeliveryServiceBaseImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      AnnouncementsEntryPersistence announcementsEntryPersistence0 = announcementsDeliveryServiceImpl0.getAnnouncementsEntryPersistence();
      assertNull(announcementsEntryPersistence0);
  }

  @Test
  public void test1()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      AnnouncementsEntryLocalService announcementsEntryLocalService0 = announcementsDeliveryServiceImpl0.getAnnouncementsEntryLocalService();
      assertNull(announcementsEntryLocalService0);
  }

  @Test
  public void test2()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      UserPersistence userPersistence0 = announcementsDeliveryServiceImpl0.getUserPersistence();
      assertNull(userPersistence0);
  }

  @Test
  public void test3()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      String string0 = announcementsDeliveryServiceImpl0.getModelClassName();
      assertEquals("com.liferay.portlet.announcements.model.AnnouncementsDelivery", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      announcementsDeliveryServiceImpl0.setResourceLocalService((ResourceLocalService) null);
      assertNull(announcementsDeliveryServiceImpl0.getBeanIdentifier());
  }

  @Test
  public void test5()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      String string0 = announcementsDeliveryServiceImpl0.getBeanIdentifier();
      assertNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      announcementsDeliveryServiceImpl0.setUserFinder((UserFinder) null);
      assertNull(announcementsDeliveryServiceImpl0.getBeanIdentifier());
  }

  @Test
  public void test7()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      AnnouncementsEntryFinder announcementsEntryFinder0 = announcementsDeliveryServiceImpl0.getAnnouncementsEntryFinder();
      assertNull(announcementsEntryFinder0);
  }

  @Test
  public void test8()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      announcementsDeliveryServiceImpl0.setCounterLocalService((CounterLocalService) null);
      assertEquals("com.liferay.portlet.announcements.model.AnnouncementsDelivery", announcementsDeliveryServiceImpl0.getModelClassName());
  }

  @Test
  public void test9()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      try {
        announcementsDeliveryServiceImpl0.runSQL("TNx%cH/");
        fail("Expecting exception: SystemException");
      } catch(SystemException e) {
        /*
         * java.lang.NullPointerException
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      announcementsDeliveryServiceImpl0.setUserPersistence((UserPersistence) null);
      assertNull(announcementsDeliveryServiceImpl0.getBeanIdentifier());
  }

  @Test
  public void test11()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      AnnouncementsDeliveryLocalService announcementsDeliveryLocalService0 = announcementsDeliveryServiceImpl0.getAnnouncementsDeliveryLocalService();
      assertNull(announcementsDeliveryLocalService0);
  }

  @Test
  public void test12()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      announcementsDeliveryServiceImpl0.setAnnouncementsEntryFinder((AnnouncementsEntryFinder) null);
      assertNull(announcementsDeliveryServiceImpl0.getBeanIdentifier());
  }

  @Test
  public void test13()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      announcementsDeliveryServiceImpl0.setUserLocalService((UserLocalService) null);
      assertEquals("com.liferay.portlet.announcements.model.AnnouncementsDelivery", announcementsDeliveryServiceImpl0.getModelClassName());
  }

  @Test
  public void test14()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      announcementsDeliveryServiceImpl0.setAnnouncementsDeliveryLocalService((AnnouncementsDeliveryLocalService) null);
      assertEquals("com.liferay.portlet.announcements.model.AnnouncementsDelivery", announcementsDeliveryServiceImpl0.getModelClassName());
  }

  @Test
  public void test15()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      UserLocalService userLocalService0 = announcementsDeliveryServiceImpl0.getUserLocalService();
      assertNull(userLocalService0);
  }

  @Test
  public void test16()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      AnnouncementsDeliveryPersistence announcementsDeliveryPersistence0 = announcementsDeliveryServiceImpl0.getAnnouncementsDeliveryPersistence();
      assertNull(announcementsDeliveryPersistence0);
  }

  @Test
  public void test17()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      announcementsDeliveryServiceImpl0.setAnnouncementsFlagService((AnnouncementsFlagService) null);
      assertNull(announcementsDeliveryServiceImpl0.getBeanIdentifier());
  }

  @Test
  public void test18()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      announcementsDeliveryServiceImpl0.setAnnouncementsDeliveryService((AnnouncementsDeliveryService) announcementsDeliveryServiceImpl0);
      assertNull(announcementsDeliveryServiceImpl0.getBeanIdentifier());
  }

  @Test
  public void test19()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      AnnouncementsFlagPersistence announcementsFlagPersistence0 = announcementsDeliveryServiceImpl0.getAnnouncementsFlagPersistence();
      assertNull(announcementsFlagPersistence0);
  }

  @Test
  public void test20()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      AnnouncementsEntryService announcementsEntryService0 = announcementsDeliveryServiceImpl0.getAnnouncementsEntryService();
      assertNull(announcementsEntryService0);
  }

  @Test
  public void test21()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      announcementsDeliveryServiceImpl0.setAnnouncementsEntryLocalService((AnnouncementsEntryLocalService) null);
      assertNull(announcementsDeliveryServiceImpl0.getBeanIdentifier());
  }

  @Test
  public void test22()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      UserService userService0 = announcementsDeliveryServiceImpl0.getUserService();
      assertNull(userService0);
  }

  @Test
  public void test23()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      AnnouncementsDeliveryService announcementsDeliveryService0 = announcementsDeliveryServiceImpl0.getAnnouncementsDeliveryService();
      assertNull(announcementsDeliveryService0);
  }

  @Test
  public void test24()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      AnnouncementsFlagService announcementsFlagService0 = announcementsDeliveryServiceImpl0.getAnnouncementsFlagService();
      assertNull(announcementsFlagService0);
  }

  @Test
  public void test25()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      announcementsDeliveryServiceImpl0.setBeanIdentifier("'B[ 3C>");
      assertEquals("'B[ 3C>", announcementsDeliveryServiceImpl0.getBeanIdentifier());
  }

  @Test
  public void test26()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      Class<?> class0 = announcementsDeliveryServiceImpl0.getModelClass();
      assertEquals(false, class0.isAnonymousClass());
  }

  @Test
  public void test27()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      announcementsDeliveryServiceImpl0.setUserService((UserService) null);
      assertEquals("com.liferay.portlet.announcements.model.AnnouncementsDelivery", announcementsDeliveryServiceImpl0.getModelClassName());
  }

  @Test
  public void test28()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      announcementsDeliveryServiceImpl0.setAnnouncementsFlagPersistence((AnnouncementsFlagPersistence) null);
      assertNull(announcementsDeliveryServiceImpl0.getBeanIdentifier());
  }

  @Test
  public void test29()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      announcementsDeliveryServiceImpl0.afterPropertiesSet();
      assertEquals("com.liferay.portlet.announcements.model.AnnouncementsDelivery", announcementsDeliveryServiceImpl0.getModelClassName());
  }

  @Test
  public void test30()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      UserFinder userFinder0 = announcementsDeliveryServiceImpl0.getUserFinder();
      assertNull(userFinder0);
  }

  @Test
  public void test31()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      announcementsDeliveryServiceImpl0.setAnnouncementsEntryPersistence((AnnouncementsEntryPersistence) null);
      assertEquals("com.liferay.portlet.announcements.model.AnnouncementsDelivery", announcementsDeliveryServiceImpl0.getModelClassName());
  }

  @Test
  public void test32()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      announcementsDeliveryServiceImpl0.setAnnouncementsEntryService((AnnouncementsEntryService) null);
      assertNull(announcementsDeliveryServiceImpl0.getBeanIdentifier());
  }

  @Test
  public void test33()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      AnnouncementsFlagLocalService announcementsFlagLocalService0 = announcementsDeliveryServiceImpl0.getAnnouncementsFlagLocalService();
      assertNull(announcementsFlagLocalService0);
  }

  @Test
  public void test34()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      announcementsDeliveryServiceImpl0.setAnnouncementsDeliveryPersistence((AnnouncementsDeliveryPersistence) null);
      assertNull(announcementsDeliveryServiceImpl0.getBeanIdentifier());
  }

  @Test
  public void test35()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      CounterLocalService counterLocalService0 = announcementsDeliveryServiceImpl0.getCounterLocalService();
      assertNull(counterLocalService0);
  }

  @Test
  public void test36()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      ResourceLocalService resourceLocalService0 = announcementsDeliveryServiceImpl0.getResourceLocalService();
      assertNull(resourceLocalService0);
  }

  @Test
  public void test37()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      announcementsDeliveryServiceImpl0.setAnnouncementsFlagLocalService((AnnouncementsFlagLocalService) null);
      assertNull(announcementsDeliveryServiceImpl0.getBeanIdentifier());
  }

  @Test
  public void test38()  throws Throwable  {
      AnnouncementsDeliveryServiceImpl announcementsDeliveryServiceImpl0 = new AnnouncementsDeliveryServiceImpl();
      announcementsDeliveryServiceImpl0.destroy();
      assertNull(announcementsDeliveryServiceImpl0.getBeanIdentifier());
  }
}
