/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.messageboards.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.messageboards.model.MBDiscussion;
import com.liferay.portlet.messageboards.model.MBDiscussionSoap;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MBDiscussionSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MBDiscussionSoap mBDiscussionSoap0 = new MBDiscussionSoap();
      long long0 = mBDiscussionSoap0.getThreadId();
      assertEquals(0L, long0);
  }

  @Test
  public void test1()  throws Throwable  {
      MBDiscussionSoap mBDiscussionSoap0 = new MBDiscussionSoap();
      long long0 = mBDiscussionSoap0.getClassNameId();
      assertEquals(0L, long0);
  }

  @Test
  public void test2()  throws Throwable  {
      LinkedList<MBDiscussion> linkedList0 = new LinkedList<MBDiscussion>();
      linkedList0.add((MBDiscussion) null);
      // Undeclared exception!
      try {
        MBDiscussionSoap.toSoapModels((List<MBDiscussion>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      MBDiscussionSoap mBDiscussionSoap0 = new MBDiscussionSoap();
      mBDiscussionSoap0.setThreadId(0L);
      assertEquals(0L, mBDiscussionSoap0.getThreadId());
  }

  @Test
  public void test4()  throws Throwable  {
      MBDiscussionSoap mBDiscussionSoap0 = new MBDiscussionSoap();
      long long0 = mBDiscussionSoap0.getDiscussionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test5()  throws Throwable  {
      MBDiscussionSoap mBDiscussionSoap0 = new MBDiscussionSoap();
      mBDiscussionSoap0.setClassPK(0L);
      assertEquals(0L, mBDiscussionSoap0.getClassNameId());
  }

  @Test
  public void test6()  throws Throwable  {
      MBDiscussionSoap mBDiscussionSoap0 = new MBDiscussionSoap();
      mBDiscussionSoap0.setClassNameId(0L);
      assertEquals(0L, mBDiscussionSoap0.getDiscussionId());
  }

  @Test
  public void test7()  throws Throwable  {
      MBDiscussionSoap mBDiscussionSoap0 = new MBDiscussionSoap();
      mBDiscussionSoap0.setPrimaryKey(0L);
      assertEquals(0L, mBDiscussionSoap0.getClassNameId());
  }

  @Test
  public void test8()  throws Throwable  {
      MBDiscussionSoap mBDiscussionSoap0 = new MBDiscussionSoap();
      long long0 = mBDiscussionSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test9()  throws Throwable  {
      MBDiscussionSoap mBDiscussionSoap0 = new MBDiscussionSoap();
      long long0 = mBDiscussionSoap0.getClassPK();
      assertEquals(0L, long0);
  }

  @Test
  public void test10()  throws Throwable  {
      MBDiscussion[][] mBDiscussionArray0 = new MBDiscussion[1][10];
      // Undeclared exception!
      try {
        MBDiscussionSoap.toSoapModels(mBDiscussionArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      LinkedList<MBDiscussion> linkedList0 = new LinkedList<MBDiscussion>();
      MBDiscussionSoap[] mBDiscussionSoapArray0 = MBDiscussionSoap.toSoapModels((List<MBDiscussion>) linkedList0);
      assertNotNull(mBDiscussionSoapArray0);
  }
}
