/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.social.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.social.model.SocialActivityAchievement;
import com.liferay.portlet.social.model.SocialActivityAchievementSoap;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SocialActivityAchievementSoapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SocialActivityAchievementSoap socialActivityAchievementSoap0 = new SocialActivityAchievementSoap();
      socialActivityAchievementSoap0.setCreateDate(712L);
      assertEquals(712L, socialActivityAchievementSoap0.getCreateDate());
  }

  @Test
  public void test1()  throws Throwable  {
      SocialActivityAchievementSoap socialActivityAchievementSoap0 = new SocialActivityAchievementSoap();
      socialActivityAchievementSoap0.setUserId((-1545L));
      assertEquals((-1545L), socialActivityAchievementSoap0.getUserId());
  }

  @Test
  public void test2()  throws Throwable  {
      SocialActivityAchievementSoap socialActivityAchievementSoap0 = new SocialActivityAchievementSoap();
      socialActivityAchievementSoap0.setFirstInGroup(false);
      assertEquals(false, socialActivityAchievementSoap0.isFirstInGroup());
      assertEquals(false, socialActivityAchievementSoap0.getFirstInGroup());
  }

  @Test
  public void test3()  throws Throwable  {
      SocialActivityAchievementSoap socialActivityAchievementSoap0 = new SocialActivityAchievementSoap();
      socialActivityAchievementSoap0.setPrimaryKey(0L);
      assertEquals(0L, socialActivityAchievementSoap0.getGroupId());
  }

  @Test
  public void test4()  throws Throwable  {
      SocialActivityAchievementSoap socialActivityAchievementSoap0 = new SocialActivityAchievementSoap();
      long long0 = socialActivityAchievementSoap0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test5()  throws Throwable  {
      SocialActivityAchievementSoap socialActivityAchievementSoap0 = new SocialActivityAchievementSoap();
      long long0 = socialActivityAchievementSoap0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test
  public void test6()  throws Throwable  {
      SocialActivityAchievementSoap socialActivityAchievementSoap0 = new SocialActivityAchievementSoap();
      socialActivityAchievementSoap0.setName((String) null);
      assertEquals(0L, socialActivityAchievementSoap0.getCreateDate());
  }

  @Test
  public void test7()  throws Throwable  {
      SocialActivityAchievementSoap socialActivityAchievementSoap0 = new SocialActivityAchievementSoap();
      String string0 = socialActivityAchievementSoap0.getName();
      assertNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      SocialActivityAchievementSoap socialActivityAchievementSoap0 = new SocialActivityAchievementSoap();
      socialActivityAchievementSoap0.setCompanyId((-1545L));
      assertEquals((-1545L), socialActivityAchievementSoap0.getCompanyId());
  }

  @Test
  public void test9()  throws Throwable  {
      SocialActivityAchievementSoap socialActivityAchievementSoap0 = new SocialActivityAchievementSoap();
      long long0 = socialActivityAchievementSoap0.getGroupId();
      assertEquals(0L, long0);
  }

  @Test
  public void test10()  throws Throwable  {
      SocialActivityAchievementSoap socialActivityAchievementSoap0 = new SocialActivityAchievementSoap();
      boolean boolean0 = socialActivityAchievementSoap0.getFirstInGroup();
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      SocialActivityAchievementSoap socialActivityAchievementSoap0 = new SocialActivityAchievementSoap();
      socialActivityAchievementSoap0.setGroupId(712L);
      assertEquals(712L, socialActivityAchievementSoap0.getGroupId());
  }

  @Test
  public void test12()  throws Throwable  {
      LinkedList<SocialActivityAchievement> linkedList0 = new LinkedList<SocialActivityAchievement>();
      linkedList0.add((SocialActivityAchievement) null);
      // Undeclared exception!
      try {
        SocialActivityAchievementSoap.toSoapModels((List<SocialActivityAchievement>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      SocialActivityAchievementSoap socialActivityAchievementSoap0 = new SocialActivityAchievementSoap();
      long long0 = socialActivityAchievementSoap0.getActivityAchievementId();
      assertEquals(0L, long0);
  }

  @Test
  public void test14()  throws Throwable  {
      SocialActivityAchievementSoap socialActivityAchievementSoap0 = new SocialActivityAchievementSoap();
      long long0 = socialActivityAchievementSoap0.getUserId();
      assertEquals(0L, long0);
  }

  @Test
  public void test15()  throws Throwable  {
      SocialActivityAchievementSoap socialActivityAchievementSoap0 = new SocialActivityAchievementSoap();
      boolean boolean0 = socialActivityAchievementSoap0.isFirstInGroup();
      assertEquals(false, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      SocialActivityAchievementSoap socialActivityAchievementSoap0 = new SocialActivityAchievementSoap();
      long long0 = socialActivityAchievementSoap0.getCreateDate();
      assertEquals(0L, long0);
  }

  @Test
  public void test17()  throws Throwable  {
      SocialActivityAchievement[][] socialActivityAchievementArray0 = new SocialActivityAchievement[1][1];
      // Undeclared exception!
      try {
        SocialActivityAchievementSoap.toSoapModels(socialActivityAchievementArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test18()  throws Throwable  {
      LinkedList<SocialActivityAchievement> linkedList0 = new LinkedList<SocialActivityAchievement>();
      SocialActivityAchievementSoap[] socialActivityAchievementSoapArray0 = SocialActivityAchievementSoap.toSoapModels((List<SocialActivityAchievement>) linkedList0);
      assertNotNull(socialActivityAchievementSoapArray0);
  }
}
