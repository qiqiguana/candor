/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.asset.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.bean.BeanLocatorException;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.portlet.LiferayPortletRequest;
import com.liferay.portal.kernel.portlet.LiferayPortletResponse;
import com.liferay.portal.theme.ThemeDisplay;
import com.liferay.portlet.EventResponseImpl;
import com.liferay.portlet.ResourceRequestImpl;
import com.liferay.portlet.asset.model.AssetRenderer;
import com.liferay.portlet.bookmarks.asset.BookmarksEntryAssetRendererFactory;
import com.liferay.portlet.calendar.asset.CalEventAssetRendererFactory;
import com.liferay.portlet.documentlibrary.asset.DLFileEntryAssetRendererFactory;
import com.liferay.portlet.dynamicdatalists.asset.DDLRecordAssetRendererFactory;
import com.liferay.portlet.journal.asset.JournalArticleAssetRendererFactory;
import com.liferay.portlet.messageboards.asset.MBDiscussionAssetRendererFactory;
import com.liferay.portlet.messageboards.asset.MBMessageAssetRendererFactory;
import com.liferay.portlet.wiki.asset.WikiPageAssetRendererFactory;
import java.util.Locale;
import java.util.Map;
import javax.portlet.PortletRequest;
import javax.portlet.PortletURL;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BaseAssetRendererFactoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      WikiPageAssetRendererFactory wikiPageAssetRendererFactory0 = new WikiPageAssetRendererFactory();
      // Undeclared exception!
      try {
        wikiPageAssetRendererFactory0.getAssetEntry((-17L));
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      DDLRecordAssetRendererFactory dDLRecordAssetRendererFactory0 = new DDLRecordAssetRendererFactory();
      AssetRenderer assetRenderer0 = dDLRecordAssetRendererFactory0.getAssetRenderer(15L, "");
      assertNull(assetRenderer0);
  }

  @Test
  public void test2()  throws Throwable  {
      MBMessageAssetRendererFactory mBMessageAssetRendererFactory0 = new MBMessageAssetRendererFactory();
      // Undeclared exception!
      try {
        mBMessageAssetRendererFactory0.getAssetRenderer(3L);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      DLFileEntryAssetRendererFactory dLFileEntryAssetRendererFactory0 = new DLFileEntryAssetRendererFactory();
      ThemeDisplay themeDisplay0 = new ThemeDisplay();
      // Undeclared exception!
      try {
        dLFileEntryAssetRendererFactory0.getControlPanelPlid(themeDisplay0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      WikiPageAssetRendererFactory wikiPageAssetRendererFactory0 = new WikiPageAssetRendererFactory();
      ResourceRequestImpl resourceRequestImpl0 = new ResourceRequestImpl();
      // Undeclared exception!
      try {
        wikiPageAssetRendererFactory0.getIconPath((PortletRequest) resourceRequestImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      DDLRecordAssetRendererFactory dDLRecordAssetRendererFactory0 = new DDLRecordAssetRendererFactory();
      // Undeclared exception!
      try {
        dDLRecordAssetRendererFactory0.getClassNameId();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      DDLRecordAssetRendererFactory dDLRecordAssetRendererFactory0 = new DDLRecordAssetRendererFactory();
      dDLRecordAssetRendererFactory0.setClassName((String) null);
      assertEquals("com.liferay.portlet.dynamicdatalists.model.DDLRecord", dDLRecordAssetRendererFactory0.getClassName());
  }

  @Test
  public void test7()  throws Throwable  {
      MBDiscussionAssetRendererFactory mBDiscussionAssetRendererFactory0 = new MBDiscussionAssetRendererFactory();
      long[] longArray0 = new long[3];
      Map<Long, String> map0 = mBDiscussionAssetRendererFactory0.getClassTypes(longArray0, (Locale) null);
      assertNull(map0);
  }

  @Test
  public void test8()  throws Throwable  {
      CalEventAssetRendererFactory calEventAssetRendererFactory0 = new CalEventAssetRendererFactory();
      calEventAssetRendererFactory0.setPortletId("W#Ju.h\"V~Tz_1(!&");
      assertEquals(true, calEventAssetRendererFactory0.isSelectable());
  }

  @Test
  public void test9()  throws Throwable  {
      DDLRecordAssetRendererFactory dDLRecordAssetRendererFactory0 = new DDLRecordAssetRendererFactory();
      boolean boolean0 = dDLRecordAssetRendererFactory0.isLinkable();
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      DLFileEntryAssetRendererFactory dLFileEntryAssetRendererFactory0 = new DLFileEntryAssetRendererFactory();
      // Undeclared exception!
      try {
        dLFileEntryAssetRendererFactory0.getAssetEntry("h}~++uD{;(z>)%'Q~l", 1949L);
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      MBMessageAssetRendererFactory mBMessageAssetRendererFactory0 = new MBMessageAssetRendererFactory();
      boolean boolean0 = mBMessageAssetRendererFactory0.isSelectable();
      assertEquals(true, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      JournalArticleAssetRendererFactory journalArticleAssetRendererFactory0 = new JournalArticleAssetRendererFactory();
      boolean boolean0 = journalArticleAssetRendererFactory0.isCategorizable();
      assertEquals(true, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      DDLRecordAssetRendererFactory dDLRecordAssetRendererFactory0 = new DDLRecordAssetRendererFactory();
      EventResponseImpl eventResponseImpl0 = new EventResponseImpl();
      PortletURL portletURL0 = dDLRecordAssetRendererFactory0.getURLAdd((LiferayPortletRequest) null, (LiferayPortletResponse) eventResponseImpl0);
      assertNull(portletURL0);
  }

  @Test
  public void test14()  throws Throwable  {
      BookmarksEntryAssetRendererFactory bookmarksEntryAssetRendererFactory0 = new BookmarksEntryAssetRendererFactory();
      String string0 = bookmarksEntryAssetRendererFactory0.getPortletId();
      assertNull(string0);
  }
}
