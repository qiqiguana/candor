/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.dynamicdatamapping.storage;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.dynamicdatamapping.storage.FieldConstants;
import java.util.Date;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FieldConstantsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FieldConstants fieldConstants0 = new FieldConstants();
      assertNotNull(fieldConstants0);
  }

  @Test
  public void test1()  throws Throwable  {
      Date date0 = (Date)FieldConstants.getSerializable("date", "date");
      assertEquals(-60, date0.getTimezoneOffset());
  }

  @Test
  public void test2()  throws Throwable  {
      Boolean boolean0 = (Boolean)FieldConstants.getSerializable("boolean", "boolean");
      assertEquals(false, (boolean)boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      String string0 = (String)FieldConstants.getSerializable("date", "");
      assertEquals("", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      Double double0 = (Double)FieldConstants.getSerializable("double", "double");
      assertEquals(0.0, (double)double0, 0.01D);
  }

  @Test
  public void test5()  throws Throwable  {
      Float float0 = (Float)FieldConstants.getSerializable("float", "float");
      assertEquals(0.0F, (float)float0, 0.01F);
  }

  @Test
  public void test6()  throws Throwable  {
      Integer integer0 = (Integer)FieldConstants.getSerializable("integer", "integer");
      assertEquals(0, (int)integer0);
  }

  @Test
  public void test7()  throws Throwable  {
      Long long0 = (Long)FieldConstants.getSerializable("long", "float");
      assertEquals(0L, (long)long0);
  }

  @Test
  public void test8()  throws Throwable  {
      Integer integer0 = (Integer)FieldConstants.getSerializable("number", "number");
      assertEquals(0, (int)integer0);
  }

  @Test
  public void test9()  throws Throwable  {
      Short short0 = (Short)FieldConstants.getSerializable("short", "document-library");
      assertEquals((short)0, (short)short0);
  }
}
