/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.journal.model.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.journal.model.impl.JournalArticleImageCacheModel;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import javax.swing.DebugGraphics;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JournalArticleImageCacheModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JournalArticleImageCacheModel journalArticleImageCacheModel0 = new JournalArticleImageCacheModel();
      // Undeclared exception!
      try {
        journalArticleImageCacheModel0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      JournalArticleImageCacheModel journalArticleImageCacheModel0 = new JournalArticleImageCacheModel();
      String string0 = journalArticleImageCacheModel0.toString();
      assertEquals("{articleImageId=0, groupId=0, articleId=null, version=0.0, elInstanceId=null, elName=null, languageId=null, tempImage=false}", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      JournalArticleImageCacheModel journalArticleImageCacheModel0 = new JournalArticleImageCacheModel();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      journalArticleImageCacheModel0.articleId = "{articleImageId=0, groupId=0, articleId=null, version=0.0, elInstanceId=null, elName=null, languageId=null, tempImage=false}";
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      journalArticleImageCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals("{articleImageId=0, groupId=0, articleId={articleImageId=0, groupId=0, articleId=null, version=0.0, elInstanceId=null, elName=null, languageId=null, tempImage=false}, version=0.0, elInstanceId=null, elName=null, languageId=null, tempImage=false}", journalArticleImageCacheModel0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      PrintStream printStream0 = DebugGraphics.logStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) printStream0);
      JournalArticleImageCacheModel journalArticleImageCacheModel0 = new JournalArticleImageCacheModel();
      journalArticleImageCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0L, journalArticleImageCacheModel0.articleImageId);
  }

  @Test
  public void test4()  throws Throwable  {
      PrintStream printStream0 = DebugGraphics.logStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) printStream0);
      JournalArticleImageCacheModel journalArticleImageCacheModel0 = new JournalArticleImageCacheModel();
      journalArticleImageCacheModel0.elName = "uLoovKmo2$tX9FK";
      journalArticleImageCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0.0, journalArticleImageCacheModel0.version, 0.01D);
  }
}
