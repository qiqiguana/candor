/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.portlet.journal.model.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portlet.journal.model.impl.JournalStructureCacheModel;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JournalStructureCacheModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JournalStructureCacheModel journalStructureCacheModel0 = new JournalStructureCacheModel();
      String string0 = journalStructureCacheModel0.toString();
      assertEquals("{uuid=null, id=0, groupId=0, companyId=0, userId=0, userName=null, createDate=0, modifiedDate=0, structureId=null, parentStructureId=null, name=null, description=null, xsd=null}", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      JournalStructureCacheModel journalStructureCacheModel0 = new JournalStructureCacheModel();
      // Undeclared exception!
      try {
        journalStructureCacheModel0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      JournalStructureCacheModel journalStructureCacheModel0 = new JournalStructureCacheModel();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      PrintStream printStream0 = new PrintStream((OutputStream) byteArrayOutputStream0, true);
      journalStructureCacheModel0.uuid = "log4j.throwableRenderer.";
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) printStream0);
      journalStructureCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals("{uuid=log4j.throwableRenderer., id=0, groupId=0, companyId=0, userId=0, userName=null, createDate=0, modifiedDate=0, structureId=null, parentStructureId=null, name=null, description=null, xsd=null}", journalStructureCacheModel0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      JournalStructureCacheModel journalStructureCacheModel0 = new JournalStructureCacheModel();
      journalStructureCacheModel0.userName = "NON_UNIQUE";
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      journalStructureCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals("{uuid=null, id=0, groupId=0, companyId=0, userId=0, userName=NON_UNIQUE, createDate=0, modifiedDate=0, structureId=null, parentStructureId=null, name=null, description=null, xsd=null}", journalStructureCacheModel0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      JournalStructureCacheModel journalStructureCacheModel0 = new JournalStructureCacheModel();
      journalStructureCacheModel0.structureId = "NON_UNIQUE";
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      journalStructureCacheModel0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals("{uuid=null, id=0, groupId=0, companyId=0, userId=0, userName=null, createDate=0, modifiedDate=0, structureId=NON_UNIQUE, parentStructureId=null, name=null, description=null, xsd=null}", journalStructureCacheModel0.toString());
  }
}
