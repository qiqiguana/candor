/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.util.xml;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.util.xml.XMLElementComparator;
import com.liferay.util.xml.descriptor.FacesXMLDescriptor;
import com.liferay.util.xml.descriptor.PortletAppDescriptor;
import com.liferay.util.xml.descriptor.StrictXMLDescriptor;
import com.liferay.util.xml.descriptor.XMLDescriptor;
import com.sun.msv.datatype.xsd.XSDatatype;
import org.dom4j.DocumentFactory;
import org.dom4j.Element;
import org.dom4j.Namespace;
import org.dom4j.QName;
import org.dom4j.datatype.DatatypeElement;
import org.dom4j.tree.NamespaceStack;
import org.dom4j.util.IndexedElement;
import org.dom4j.util.NonLazyElement;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class XMLElementComparatorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FacesXMLDescriptor facesXMLDescriptor0 = new FacesXMLDescriptor();
      XMLElementComparator xMLElementComparator0 = new XMLElementComparator((XMLDescriptor) facesXMLDescriptor0);
      // Undeclared exception!
      try {
        xMLElementComparator0.canJoinChildren((Element) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      StrictXMLDescriptor strictXMLDescriptor0 = new StrictXMLDescriptor();
      XMLElementComparator xMLElementComparator0 = new XMLElementComparator((XMLDescriptor) strictXMLDescriptor0);
      DocumentFactory documentFactory0 = new DocumentFactory();
      NamespaceStack namespaceStack0 = new NamespaceStack(documentFactory0);
      QName qName0 = namespaceStack0.getQName("", "Entity", "");
      NonLazyElement nonLazyElement0 = new NonLazyElement(qName0, 246);
      int int0 = xMLElementComparator0.compare((Element) nonLazyElement0, (Element) nonLazyElement0);
      assertEquals((-1), int0);
  }

  @Test
  public void test2()  throws Throwable  {
      PortletAppDescriptor portletAppDescriptor0 = new PortletAppDescriptor();
      XMLElementComparator xMLElementComparator0 = new XMLElementComparator((XMLDescriptor) portletAppDescriptor0);
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      QName qName0 = new QName("", namespace0, "");
      IndexedElement indexedElement0 = new IndexedElement(qName0, (-234));
      DatatypeElement datatypeElement0 = new DatatypeElement(qName0, (XSDatatype) null);
      int int0 = xMLElementComparator0.compare((Element) indexedElement0, (Element) datatypeElement0);
      assertEquals("org.dom4j.datatype.DatatypeElement259628450 [Element: < attributes: [] data: null />]", datatypeElement0.toString());
      assertEquals(0, int0);
  }
}
