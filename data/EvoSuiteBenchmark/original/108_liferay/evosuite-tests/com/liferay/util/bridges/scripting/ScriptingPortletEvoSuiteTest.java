/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.util.bridges.scripting;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.scripting.ScriptingException;
import com.liferay.portlet.ActionRequestImpl;
import com.liferay.portlet.ActionResponseImpl;
import com.liferay.portlet.EventRequestImpl;
import com.liferay.portlet.EventResponseImpl;
import com.liferay.portlet.RenderRequestImpl;
import com.liferay.portlet.RenderResponseImpl;
import com.liferay.portlet.ResourceRequestImpl;
import com.liferay.portlet.ResourceResponseImpl;
import com.liferay.util.bridges.scripting.ScriptingPortlet;
import java.io.IOException;
import java.io.InputStream;
import javax.portlet.ActionRequest;
import javax.portlet.ActionResponse;
import javax.portlet.EventResponse;
import javax.portlet.PortletConfig;
import javax.portlet.PortletException;
import javax.portlet.PortletRequest;
import javax.portlet.PortletResponse;
import javax.portlet.RenderRequest;
import javax.portlet.RenderResponse;
import javax.portlet.ResourceRequest;
import javax.portlet.ResourceResponse;
import javax.portlet.filter.EventResponseWrapper;
import javax.portlet.filter.RenderRequestWrapper;
import javax.portlet.filter.RenderResponseWrapper;
import javax.portlet.filter.ResourceRequestWrapper;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ScriptingPortletEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ScriptingPortlet scriptingPortlet0 = new ScriptingPortlet();
      ResourceResponseImpl resourceResponseImpl0 = new ResourceResponseImpl();
      // Undeclared exception!
      try {
        scriptingPortlet0.declareBeans((InputStream) null, (PortletRequest) null, (PortletResponse) resourceResponseImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ScriptingPortlet scriptingPortlet0 = new ScriptingPortlet();
      RenderRequestImpl renderRequestImpl0 = new RenderRequestImpl();
      RenderRequestWrapper renderRequestWrapper0 = new RenderRequestWrapper((RenderRequest) renderRequestImpl0);
      // Undeclared exception!
      try {
        scriptingPortlet0.doHelp((RenderRequest) renderRequestWrapper0, (RenderResponse) null);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Config is null, please ensure that your init(config) method calls super.init(config)
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ScriptingPortlet scriptingPortlet0 = new ScriptingPortlet();
      ActionRequestImpl actionRequestImpl0 = new ActionRequestImpl();
      ActionResponseImpl actionResponseImpl0 = new ActionResponseImpl();
      // Undeclared exception!
      try {
        scriptingPortlet0.processAction((ActionRequest) actionRequestImpl0, (ActionResponse) actionResponseImpl0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Config is null, please ensure that your init(config) method calls super.init(config)
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ScriptingPortlet scriptingPortlet0 = new ScriptingPortlet();
      // Undeclared exception!
      try {
        scriptingPortlet0.init((PortletConfig) scriptingPortlet0);
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      ScriptingPortlet scriptingPortlet0 = new ScriptingPortlet();
      RenderResponseImpl renderResponseImpl0 = new RenderResponseImpl();
      RenderResponseWrapper renderResponseWrapper0 = new RenderResponseWrapper((RenderResponse) renderResponseImpl0);
      // Undeclared exception!
      try {
        scriptingPortlet0.doView((RenderRequest) null, (RenderResponse) renderResponseWrapper0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Config is null, please ensure that your init(config) method calls super.init(config)
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      ScriptingPortlet scriptingPortlet0 = new ScriptingPortlet();
      EventRequestImpl eventRequestImpl0 = new EventRequestImpl();
      EventResponseImpl eventResponseImpl0 = new EventResponseImpl();
      EventResponseWrapper eventResponseWrapper0 = new EventResponseWrapper((EventResponse) eventResponseImpl0);
      // Undeclared exception!
      try {
        scriptingPortlet0.declareBeans("$1'p]MFZ<VGiAkNY}h", (PortletRequest) eventRequestImpl0, (PortletResponse) eventResponseWrapper0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      ScriptingPortlet scriptingPortlet0 = new ScriptingPortlet();
      RenderRequestImpl renderRequestImpl0 = new RenderRequestImpl();
      try {
        scriptingPortlet0.render((RenderRequest) renderRequestImpl0, (RenderResponse) null);
        fail("Expecting exception: PortletException");
      } catch(PortletException e) {
        /*
         * java.lang.NullPointerException
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      ScriptingPortlet scriptingPortlet0 = new ScriptingPortlet();
      RenderRequestImpl renderRequestImpl0 = new RenderRequestImpl();
      RenderRequestWrapper renderRequestWrapper0 = new RenderRequestWrapper((RenderRequest) renderRequestImpl0);
      RenderResponseImpl renderResponseImpl0 = new RenderResponseImpl();
      // Undeclared exception!
      try {
        scriptingPortlet0.doDispatch((RenderRequest) renderRequestWrapper0, (RenderResponse) renderResponseImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      ScriptingPortlet scriptingPortlet0 = new ScriptingPortlet();
      ResourceRequestImpl resourceRequestImpl0 = new ResourceRequestImpl();
      ResourceRequestWrapper resourceRequestWrapper0 = new ResourceRequestWrapper((ResourceRequest) resourceRequestImpl0);
      ResourceResponseImpl resourceResponseImpl0 = new ResourceResponseImpl();
      // Undeclared exception!
      try {
        scriptingPortlet0.serveResource((ResourceRequest) resourceRequestWrapper0, (ResourceResponse) resourceResponseImpl0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Config is null, please ensure that your init(config) method calls super.init(config)
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      RenderRequestImpl renderRequestImpl0 = new RenderRequestImpl();
      ScriptingPortlet scriptingPortlet0 = new ScriptingPortlet();
      RenderResponseImpl renderResponseImpl0 = new RenderResponseImpl();
      // Undeclared exception!
      try {
        scriptingPortlet0.doEdit((RenderRequest) renderRequestImpl0, (RenderResponse) renderResponseImpl0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Config is null, please ensure that your init(config) method calls super.init(config)
         */
      }
  }
}
