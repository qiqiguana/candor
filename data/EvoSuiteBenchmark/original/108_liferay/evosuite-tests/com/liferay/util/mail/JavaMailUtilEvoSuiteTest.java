/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.util.mail;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.util.mail.JavaMailUtil;
import java.io.IOException;
import javax.mail.Address;
import javax.mail.MessagingException;
import javax.mail.Part;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.PreencodedMimeBodyPart;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JavaMailUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JavaMailUtil javaMailUtil0 = new JavaMailUtil();
      assertNotNull(javaMailUtil0);
  }

  @Test
  public void test1()  throws Throwable  {
      String string0 = JavaMailUtil.toUnicodeString((Address[]) null);
      assertEquals("", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      PreencodedMimeBodyPart preencodedMimeBodyPart0 = new PreencodedMimeBodyPart("");
      try {
        JavaMailUtil.getBytes((Part) preencodedMimeBodyPart0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * No content
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      InternetAddress[] internetAddressArray0 = InternetAddress.parse("");
      String string0 = JavaMailUtil.toUnicodeString((Address[]) internetAddressArray0);
      assertEquals("", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      InternetAddress[] internetAddressArray0 = new InternetAddress[18];
      InternetAddress internetAddress0 = new InternetAddress();
      internetAddressArray0[7] = internetAddress0;
      String string0 = JavaMailUtil.toUnicodeString(internetAddressArray0);
      assertNotNull(string0);
      assertEquals(", , , , , , , null, , , , , , , , , , ", string0);
  }
}
