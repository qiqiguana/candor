/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.util.bridges.mvc;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.util.bridges.mvc.ActionCommand;
import com.liferay.util.bridges.mvc.ActionCommandCache;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ActionCommandCacheEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ActionCommandCache actionCommandCache0 = new ActionCommandCache("");
      assertNotNull(actionCommandCache0);
      
      boolean boolean0 = actionCommandCache0.isEmpty();
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      ActionCommandCache actionCommandCache0 = new ActionCommandCache(".");
      assertEquals(true, actionCommandCache0.isEmpty());
  }

  @Test
  public void test2()  throws Throwable  {
      ActionCommandCache actionCommandCache0 = new ActionCommandCache("");
      assertNotNull(actionCommandCache0);
      
      actionCommandCache0.getActionCommandChain("eITMY~u");
      assertEquals(true, actionCommandCache0.isEmpty());
  }

  @Test
  public void test3()  throws Throwable  {
      ActionCommandCache actionCommandCache0 = new ActionCommandCache("Unable to instantiate ActionCommand ");
      assertNotNull(actionCommandCache0);
      
      actionCommandCache0.getActionCommand("Unable to instantiate ActionCommand ");
      actionCommandCache0.getActionCommand("Unable to instantiate ActionCommand ");
      assertEquals(true, actionCommandCache0.isEmpty());
  }

  @Test
  public void test4()  throws Throwable  {
      ActionCommandCache actionCommandCache0 = new ActionCommandCache("");
      assertNotNull(actionCommandCache0);
      
      List<ActionCommand> list0 = actionCommandCache0.getActionCommandChain("");
      assertNotNull(list0);
      
      List<ActionCommand> list1 = actionCommandCache0.getActionCommandChain("");
      assertEquals(true, actionCommandCache0.isEmpty());
      assertSame(list1, list0);
  }
}
