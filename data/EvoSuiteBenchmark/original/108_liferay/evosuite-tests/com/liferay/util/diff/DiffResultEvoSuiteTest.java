/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.util.diff;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.util.diff.DiffResult;
import java.util.LinkedList;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DiffResultEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DiffResult diffResult0 = new DiffResult((-1241), "");
      assertNotNull(diffResult0);
      
      boolean boolean0 = diffResult0.equals((Object) diffResult0);
      assertEquals("Line: -1240\n", diffResult0.toString());
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      DiffResult diffResult0 = new DiffResult((-625), (String) null);
      assertNotNull(diffResult0);
      
      List<String> list0 = diffResult0.getChangedLines();
      assertNotNull(list0);
      
      diffResult0.setChangedLines(list0);
      assertEquals("Line: -624\nnull", diffResult0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      DiffResult diffResult0 = new DiffResult((-625), (String) null);
      assertEquals(-624, diffResult0.getLineNumber());
      assertNotNull(diffResult0);
      
      diffResult0.setLineNumber(0);
      assertEquals(0, diffResult0.getLineNumber());
  }

  @Test
  public void test3()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      DiffResult diffResult0 = new DiffResult(1680, (List<String>) linkedList0);
      DiffResult diffResult1 = new DiffResult(1049, (List<String>) null);
      boolean boolean0 = diffResult1.equals((Object) diffResult0);
      assertEquals(1681, diffResult0.getLineNumber());
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      DiffResult diffResult0 = new DiffResult(0, "8GK] |E/q`tjjxB");
      assertNotNull(diffResult0);
      
      LinkedList<String> linkedList0 = new LinkedList<String>();
      DiffResult diffResult1 = new DiffResult(0, (List<String>) linkedList0);
      boolean boolean0 = diffResult0.equals((Object) diffResult1);
      assertEquals("Line: 1\n8GK] |E/q`tjjxB", diffResult0.toString());
      assertEquals(false, boolean0);
      assertEquals("Line: 1\n", diffResult1.toString());
      assertEquals(1, diffResult0.getLineNumber());
  }

  @Test
  public void test5()  throws Throwable  {
      DiffResult diffResult0 = new DiffResult(0, "8GK] |E/q`tjjxB");
      assertNotNull(diffResult0);
      
      String string0 = diffResult0.toString();
      assertEquals("Line: 1\n8GK] |E/q`tjjxB", string0);
      assertNotNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      DiffResult diffResult0 = new DiffResult((-1009), (List<String>) linkedList0);
      String string0 = diffResult0.toString();
      assertNotNull(string0);
      assertEquals("Line: -1008\n", string0);
  }
}
