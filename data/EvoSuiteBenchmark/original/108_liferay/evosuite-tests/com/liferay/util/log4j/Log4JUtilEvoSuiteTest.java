/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.util.log4j;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.log.Jdk14LogFactoryImpl;
import com.liferay.portal.kernel.log.LogFactory;
import com.liferay.util.log4j.Log4JUtil;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.Hashtable;
import java.util.Map;
import jcifs.http.Handler;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class Log4JUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Map<String, String> map0 = Log4JUtil.getCustomLogSettings();
      assertEquals(0, map0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Jdk14LogFactoryImpl jdk14LogFactoryImpl0 = new Jdk14LogFactoryImpl();
      Hashtable<String, String> hashtable0 = new Hashtable<String, String>();
      // Undeclared exception!
      try {
        Log4JUtil.initLog4J("proePsBody", "proePsBody", classLoader0, (LogFactory) jdk14LogFactoryImpl0, (Map<String, String>) hashtable0);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class org.apache.log4j.LogManager
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Log4JUtil log4JUtil0 = new Log4JUtil();
      assertNotNull(log4JUtil0);
  }

  @Test
  public void test3()  throws Throwable  {
      Log4JUtil.configureLog4J((URL) null);
  }

  @Test
  public void test4()  throws Throwable  {
      Handler handler0 = new Handler();
      URL uRL0 = new URL("\" variable.", "\" variable.", 270, "\" variable.", (URLStreamHandler) handler0);
      Log4JUtil.configureLog4J(uRL0);
      assertEquals("\" variable.:270", uRL0.getAuthority());
  }
}
