/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.util.dao.orm;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.kernel.workflow.comparator.BaseWorkflowTaskDueDateComparator;
import com.liferay.util.dao.orm.CustomSQLUtil;
import java.sql.SQLException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CustomSQLUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[8];
      // Undeclared exception!
      try {
        CustomSQLUtil.keywords(stringArray0, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try {
        CustomSQLUtil.removeOrderBy("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try {
        CustomSQLUtil.replaceKeywords("", "", "X*~`0dD}", true, stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try {
        CustomSQLUtil.get("~jv1'IV[{g^UwHUr");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      long[] longArray0 = new long[10];
      // Undeclared exception!
      try {
        CustomSQLUtil.replaceKeywords("searchEngine", "searchEngine", true, longArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try {
        CustomSQLUtil.isVendorOracle();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try {
        CustomSQLUtil.keywords("", false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try {
        CustomSQLUtil.replaceAndOperator("String is null", true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      String[] stringArray0 = new String[8];
      // Undeclared exception!
      try {
        CustomSQLUtil.keywords(stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      // Undeclared exception!
      try {
        CustomSQLUtil.reloadCustomSQL();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try {
        CustomSQLUtil.replaceIsNull("=Bk-28");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      BaseWorkflowTaskDueDateComparator baseWorkflowTaskDueDateComparator0 = new BaseWorkflowTaskDueDateComparator();
      // Undeclared exception!
      try {
        CustomSQLUtil.replaceOrderBy("", (OrderByComparator) baseWorkflowTaskDueDateComparator0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try {
        CustomSQLUtil.isVendorSybase();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try {
        CustomSQLUtil.replaceKeywords("", "", true, intArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try {
        CustomSQLUtil.removeGroupBy("QmThD%; /E7!");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try {
        CustomSQLUtil.isVendorDB2();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try {
        CustomSQLUtil.keywords("\"z<D=TY%M+.V");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try {
        CustomSQLUtil.replaceGroupBy("xD^V*(G2Lyn", "xD^V*(G2Lyn");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try {
        CustomSQLUtil.isVendorInformix();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try {
        CustomSQLUtil.isVendorMySQL();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try {
        CustomSQLUtil.appendCriteria("FkoqX$%OHh~)& /)3-", "FkoqX$%OHh~)& /)3-");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
