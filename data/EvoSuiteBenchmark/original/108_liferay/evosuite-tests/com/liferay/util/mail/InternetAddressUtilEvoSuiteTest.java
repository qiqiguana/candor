/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.util.mail;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.util.mail.InternetAddressUtil;
import java.io.UnsupportedEncodingException;
import javax.mail.Address;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class InternetAddressUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      InternetAddressUtil internetAddressUtil0 = new InternetAddressUtil();
      assertNotNull(internetAddressUtil0);
  }

  @Test
  public void test1()  throws Throwable  {
      boolean boolean0 = InternetAddressUtil.isValid("");
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      boolean boolean0 = InternetAddressUtil.contains((InternetAddress[]) null, "s");
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      InternetAddress[] internetAddressArray0 = new InternetAddress[1];
      boolean boolean0 = InternetAddressUtil.contains(internetAddressArray0, "");
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      InternetAddress[] internetAddressArray0 = new InternetAddress[1];
      InternetAddress internetAddress0 = new InternetAddress();
      internetAddressArray0[0] = internetAddress0;
      boolean boolean0 = InternetAddressUtil.contains(internetAddressArray0, "8 >8B$Y1Y'?aVyo");
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      InternetAddress[] internetAddressArray0 = new InternetAddress[6];
      InternetAddress internetAddress0 = new InternetAddress("7XuKW0Y$2XS6!");
      internetAddressArray0[0] = internetAddress0;
      internetAddressArray0[1] = internetAddress0;
      internetAddressArray0[2] = internetAddress0;
      internetAddressArray0[3] = internetAddressArray0[2];
      internetAddressArray0[4] = internetAddressArray0[1];
      InternetAddress internetAddress1 = new InternetAddress("KItNvA4?{{O");
      internetAddressArray0[5] = internetAddress1;
      boolean boolean0 = InternetAddressUtil.contains(internetAddressArray0, "KItNvA4?{{O");
      assertEquals(true, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      InternetAddress[] internetAddressArray0 = InternetAddressUtil.removeEntry((Address[]) null, "s");
      assertNull(internetAddressArray0);
  }

  @Test
  public void test7()  throws Throwable  {
      InternetAddress[] internetAddressArray0 = new InternetAddress[1];
      InternetAddress[] internetAddressArray1 = InternetAddressUtil.removeEntry((Address[]) internetAddressArray0, "");
      assertSame(internetAddressArray1, internetAddressArray0);
  }

  @Test
  public void test8()  throws Throwable  {
      InternetAddress[] internetAddressArray0 = new InternetAddress[6];
      InternetAddress internetAddress0 = new InternetAddress("7XuKW0Y$2XS6!");
      internetAddressArray0[0] = internetAddress0;
      internetAddressArray0[1] = internetAddress0;
      internetAddressArray0[2] = internetAddress0;
      internetAddressArray0[3] = internetAddressArray0[2];
      internetAddressArray0[4] = internetAddressArray0[1];
      InternetAddress internetAddress1 = new InternetAddress("KItNvA4?{{O");
      internetAddressArray0[5] = internetAddress1;
      InternetAddress[] internetAddressArray1 = InternetAddressUtil.removeEntry((Address[]) internetAddressArray0, "7XuKW0Y$2XS6!");
      assertNotSame(internetAddressArray0, internetAddressArray1);
      assertNotNull(internetAddressArray1);
  }

  @Test
  public void test9()  throws Throwable  {
      Address[] addressArray0 = new Address[6];
      InternetAddress internetAddress0 = new InternetAddress("2~", "2~");
      addressArray0[0] = (Address) internetAddress0;
      String string0 = InternetAddressUtil.toString(addressArray0);
      assertNotNull(string0);
      assertEquals("2~ <2~>,,,,,", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      InternetAddress[] internetAddressArray0 = new InternetAddress[1];
      InternetAddress internetAddress0 = new InternetAddress();
      internetAddressArray0[0] = internetAddress0;
      String string0 = InternetAddressUtil.toString((Address[]) internetAddressArray0);
      assertNotNull(string0);
      assertEquals("null", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      String string0 = InternetAddressUtil.toString((Address[]) null);
      assertEquals("", string0);
  }
}
