/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.util.State;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class StateEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      State state0 = new State("/!3GIf0TN^", "AE{Ai/Q.x6sb\"");
      // Undeclared exception!
      try {
        state0.hashCode();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      State state0 = new State("/!3GIf0TN^", "AE{Ai/Q.x6sb\"");
      state0.compareTo((Object) state0);
      assertEquals("/!3GIf0TN^", state0.getId());
      assertEquals("AE{Ai/Q.x6sb\"", state0.getName());
  }

  @Test
  public void test2()  throws Throwable  {
      State state0 = new State("RnH)/!*xxK", "RnH)/!*xxK");
      State state1 = new State((String) null, "RnH)/!*xxK");
      int int0 = state0.compareTo((Object) state1);
      assertEquals(0, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      State state0 = new State((String) null, (String) null);
      int int0 = state0.compareTo((Object) state0);
      assertEquals((-1), int0);
  }

  @Test
  public void test4()  throws Throwable  {
      State state0 = new State((String) null, "2A");
      State state1 = new State((String) null, (String) null);
      int int0 = state0.compareTo((Object) state1);
      assertEquals((-1), int0);
  }

  @Test
  public void test5()  throws Throwable  {
      State state0 = new State("RnH)/!*xxK", "RnH)/!*xxK");
      boolean boolean0 = state0.equals((Object) state0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      State state0 = new State("RnH)/!*xxK", "RnH)/!*xxK");
      State state1 = new State((String) null, "RnH)/!*xxK");
      boolean boolean0 = state0.equals((Object) state1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      State state0 = new State((String) null, (String) null);
      boolean boolean0 = state0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      State state0 = new State("RnH)/!*xxK", "RnH)/!*xxK");
      State state1 = new State((String) null, (String) null);
      boolean boolean0 = state0.equals((Object) state1);
      assertEquals(false, boolean0);
  }
}
