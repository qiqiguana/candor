/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.util.spring.transaction;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.bean.BeanLocatorException;
import com.liferay.util.spring.transaction.TransactionManagerClp;
import org.junit.BeforeClass;
import org.springframework.transaction.TransactionDefinition;
import org.springframework.transaction.TransactionException;
import org.springframework.transaction.TransactionStatus;
import org.springframework.transaction.TransactionSystemException;
import org.springframework.transaction.support.DefaultTransactionDefinition;
import org.springframework.transaction.support.DefaultTransactionStatus;
import org.springframework.transaction.support.SimpleTransactionStatus;
import org.springframework.transaction.support.TransactionTemplate;

@RunWith(EvoSuiteRunner.class)
public class TransactionManagerClpEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TransactionManagerClp transactionManagerClp0 = new TransactionManagerClp();
      TransactionTemplate transactionTemplate0 = new TransactionTemplate();
      try {
        transactionManagerClp0.getTransaction((TransactionDefinition) transactionTemplate0);
        fail("Expecting exception: TransactionSystemException");
      } catch(TransactionSystemException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TransactionManagerClp transactionManagerClp0 = new TransactionManagerClp();
      DefaultTransactionDefinition defaultTransactionDefinition0 = new DefaultTransactionDefinition();
      // Undeclared exception!
      try {
        transactionManagerClp0.createRemoteTransactionDefinition((TransactionDefinition) defaultTransactionDefinition0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TransactionManagerClp transactionManagerClp0 = new TransactionManagerClp();
      // Undeclared exception!
      try {
        transactionManagerClp0.unwrapTransactionStatus((TransactionStatus) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TransactionManagerClp transactionManagerClp0 = new TransactionManagerClp();
      // Undeclared exception!
      try {
        transactionManagerClp0.init();
        fail("Expecting exception: BeanLocatorException");
      } catch(BeanLocatorException e) {
        /*
         * BeanLocator has not been set
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TransactionManagerClp transactionManagerClp0 = new TransactionManagerClp();
      DefaultTransactionStatus defaultTransactionStatus0 = new DefaultTransactionStatus((Object) transactionManagerClp0, false, false, false, false, (Object) transactionManagerClp0);
      try {
        transactionManagerClp0.rollback((TransactionStatus) defaultTransactionStatus0);
        fail("Expecting exception: TransactionSystemException");
      } catch(TransactionSystemException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TransactionManagerClp transactionManagerClp0 = new TransactionManagerClp();
      SimpleTransactionStatus simpleTransactionStatus0 = new SimpleTransactionStatus();
      try {
        transactionManagerClp0.commit((TransactionStatus) simpleTransactionStatus0);
        fail("Expecting exception: TransactionSystemException");
      } catch(TransactionSystemException e) {
      }
  }
}
