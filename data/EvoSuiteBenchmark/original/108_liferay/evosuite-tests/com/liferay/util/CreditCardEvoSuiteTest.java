/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.util.CreditCard;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CreditCardEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      String string0 = CreditCard.hide("visa");
      assertEquals("visa", string0);
      assertNotNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      CreditCard creditCard0 = new CreditCard();
      assertNotNull(creditCard0);
  }

  @Test
  public void test2()  throws Throwable  {
      String string0 = CreditCard.hide((String) null, (String) null);
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      String string0 = CreditCard.hide("444441", "444441");
      assertEquals("4444414444414441", string0);
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      boolean boolean0 = CreditCard.isValidNumber("601161091168011", "discover");
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      boolean boolean0 = CreditCard.isValidNumber("4444414444414441", "visa");
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      boolean boolean0 = CreditCard.isValidNumber("visa", "visa");
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      boolean boolean0 = CreditCard.isValidNumber("444441", "visa");
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      boolean boolean0 = CreditCard.isValidNumber((String) null, "mastercard");
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      boolean boolean0 = CreditCard.isValidNumber("515291354001440", "mastercard");
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      boolean boolean0 = CreditCard.isValidNumber("5291+3540014r40", "mastercard");
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      boolean boolean0 = CreditCard.isValidNumber("535", "mastercard");
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      boolean boolean0 = CreditCard.isValidNumber("556", "mastercard");
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      boolean boolean0 = CreditCard.isValidNumber("37317747138347", "37317747138347");
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      boolean boolean0 = CreditCard.isValidNumber("****over", "discover");
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      boolean boolean0 = CreditCard.isValidNumber("37317747138347", "amex");
      assertEquals(false, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      boolean boolean0 = CreditCard.isValidNumber("35", "amex");
      assertEquals(false, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      boolean boolean0 = CreditCard.isValidNumber("amex", "amex");
      assertEquals(false, boolean0);
  }
}
