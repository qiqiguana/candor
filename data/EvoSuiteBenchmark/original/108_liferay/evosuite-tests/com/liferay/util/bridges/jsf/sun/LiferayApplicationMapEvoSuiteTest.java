/*
 * This file was automatically generated by EvoSuite
 */

package com.liferay.util.bridges.jsf.sun;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.liferay.util.bridges.jsf.sun.LiferayApplicationMap;
import javax.servlet.ServletContext;
import org.junit.BeforeClass;
import org.tuckey.web.MockServletContext;

@RunWith(EvoSuiteRunner.class)
public class LiferayApplicationMapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MockServletContext mockServletContext0 = new MockServletContext();
      LiferayApplicationMap liferayApplicationMap0 = new LiferayApplicationMap((ServletContext) mockServletContext0);
      // Undeclared exception!
      try {
        liferayApplicationMap0.containsKey((Object) null);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      LiferayApplicationMap liferayApplicationMap0 = new LiferayApplicationMap((ServletContext) null);
      // Undeclared exception!
      try {
        liferayApplicationMap0.put("?-U~$2", "javax.servlet.include.request_uri");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      LiferayApplicationMap liferayApplicationMap0 = new LiferayApplicationMap((ServletContext) null);
      Object object0 = liferayApplicationMap0.remove((Object) null);
      assertNull(object0);
  }

  @Test
  public void test3()  throws Throwable  {
      MockServletContext mockServletContext0 = new MockServletContext();
      LiferayApplicationMap liferayApplicationMap0 = new LiferayApplicationMap((ServletContext) mockServletContext0);
      Object object0 = new Object();
      Object object1 = liferayApplicationMap0.remove(object0);
      assertNull(object1);
  }
}
