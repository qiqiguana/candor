/*
 * This file was automatically generated by EvoSuite
 */

package geo.google;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import geo.google.GeoAddressStandardizer;
import geo.google.GeoException;
import geo.google.UserAgent;
import geo.google.datamodel.GeoAddressAccuracy;
import geo.google.datamodel.GeoCoordinate;
import geo.google.datamodel.GeoUsAddress;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.HttpConnectionManager;
import org.apache.commons.httpclient.MultiThreadedHttpConnectionManager;
import org.apache.commons.httpclient.SimpleHttpConnectionManager;
import org.apache.commons.httpclient.params.HttpClientParams;
import org.evosuite.runtime.System;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class GeoAddressStandardizerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      GeoAddressStandardizer geoAddressStandardizer0 = new GeoAddressStandardizer((String) null);
      geoAddressStandardizer0.getHttpClientParams();
      assertEquals(5769L, geoAddressStandardizer0.getRateLimitInterval());
  }

  @Test
  public void test1()  throws Throwable  {
      GeoAddressStandardizer geoAddressStandardizer0 = new GeoAddressStandardizer((String) null);
      // Undeclared exception!
      try {
        geoAddressStandardizer0.standardizeToGeoAddresses((GeoUsAddress) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      GeoAddressStandardizer geoAddressStandardizer0 = new GeoAddressStandardizer("", 2013L);
      assertNotNull(geoAddressStandardizer0);
      
      // Undeclared exception!
      try {
        geoAddressStandardizer0.standardizeToGeoUsAddresses("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      HttpClient httpClient0 = new HttpClient();
      SimpleHttpConnectionManager simpleHttpConnectionManager0 = (SimpleHttpConnectionManager)httpClient0.getHttpConnectionManager();
      GeoAddressStandardizer.setConnectionManager((HttpConnectionManager) simpleHttpConnectionManager0);
      assertEquals(true, simpleHttpConnectionManager0.isConnectionStaleCheckingEnabled());
  }

  @Test
  public void test4()  throws Throwable  {
      GeoAddressStandardizer.setHttpClient((HttpClient) null);
  }

  @Test
  public void test5()  throws Throwable  {
      GeoAddressStandardizer geoAddressStandardizer0 = new GeoAddressStandardizer("0mDw@.6{*1l+\"^%O");
      // Undeclared exception!
      try {
        geoAddressStandardizer0.standardizeToGeoCoordinate("0mDw@.6{*1l+\"^%O");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      GeoAddressStandardizer geoAddressStandardizer0 = new GeoAddressStandardizer("");
      long long0 = geoAddressStandardizer0.getRateLimitInterval();
      assertEquals(5769L, long0);
  }

  @Test
  public void test7()  throws Throwable  {
      GeoAddressStandardizer geoAddressStandardizer0 = new GeoAddressStandardizer((String) null);
      GeoCoordinate geoCoordinate0 = new GeoCoordinate();
      GeoAddressAccuracy geoAddressAccuracy0 = GeoAddressAccuracy.TOWN_LEVEL;
      GeoUsAddress geoUsAddress0 = new GeoUsAddress((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, geoCoordinate0, geoAddressAccuracy0);
      // Undeclared exception!
      try {
        geoAddressStandardizer0.standardizeToGeoUsAddresses(geoUsAddress0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      GeoAddressStandardizer geoAddressStandardizer0 = new GeoAddressStandardizer("", 5769L);
      assertNotNull(geoAddressStandardizer0);
      
      geoAddressStandardizer0.setApiKey("");
      assertEquals(5769L, geoAddressStandardizer0.getRateLimitInterval());
  }

  @Test
  public void test9()  throws Throwable  {
      GeoAddressStandardizer geoAddressStandardizer0 = new GeoAddressStandardizer("", 5769L);
      assertNotNull(geoAddressStandardizer0);
      
      String string0 = geoAddressStandardizer0.getApiKey();
      assertEquals(5769L, geoAddressStandardizer0.getRateLimitInterval());
      assertNotNull(string0);
  }

  @Test
  public void test10()  throws Throwable  {
      GeoAddressStandardizer geoAddressStandardizer0 = new GeoAddressStandardizer("STREET_LEVEL");
      geoAddressStandardizer0.setRateLimitInterval((-1032L));
      assertEquals((-1032L), geoAddressStandardizer0.getRateLimitInterval());
  }

  @Test
  public void test11()  throws Throwable  {
      GeoAddressStandardizer geoAddressStandardizer0 = new GeoAddressStandardizer("STREET_LEVEL");
      // Undeclared exception!
      try {
        geoAddressStandardizer0.standardizeToGeoAddresses("STREET_LEVEL");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      GeoAddressStandardizer geoAddressStandardizer0 = new GeoAddressStandardizer("", 5769L);
      assertNotNull(geoAddressStandardizer0);
      
      geoAddressStandardizer0.setUserAgent((UserAgent) null);
      assertEquals(5769L, geoAddressStandardizer0.getRateLimitInterval());
  }

  @Test
  public void test13()  throws Throwable  {
      GeoAddressStandardizer geoAddressStandardizer0 = new GeoAddressStandardizer((String) null);
      geoAddressStandardizer0.setHttpClientParams((HttpClientParams) null);
      assertEquals(5769L, geoAddressStandardizer0.getRateLimitInterval());
  }

  @Test
  public void test14()  throws Throwable  {
      GeoAddressStandardizer geoAddressStandardizer0 = new GeoAddressStandardizer("");
      HttpClientParams httpClientParams0 = new HttpClientParams();
      MultiThreadedHttpConnectionManager multiThreadedHttpConnectionManager0 = new MultiThreadedHttpConnectionManager();
      geoAddressStandardizer0.setHttpClientParams(httpClientParams0);
      assertEquals(5769L, geoAddressStandardizer0.getRateLimitInterval());
  }

  @Test
  public void test15()  throws Throwable  {
      GeoAddressStandardizer geoAddressStandardizer0 = null;
      try {
        geoAddressStandardizer0 = new GeoAddressStandardizer("0dC,kT\"", (-448L));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * rateInterval cannot be negative
         */
      }
  }

  @Test
  public void test16()  throws Throwable  {
      GeoAddressStandardizer geoAddressStandardizer0 = new GeoAddressStandardizer("STREET_LEVEL");
      System.setCurrentTimeMillis((-1032L));
      // Undeclared exception!
      try {
        geoAddressStandardizer0.standardizeToGeoAddresses("STREET_LEVEL");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
