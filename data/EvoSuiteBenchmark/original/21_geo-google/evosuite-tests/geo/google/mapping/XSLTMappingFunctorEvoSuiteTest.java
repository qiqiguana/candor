/*
 * This file was automatically generated by EvoSuite
 */

package geo.google.mapping;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import geo.google.GeoException;
import geo.google.mapping.XSLTMappingFunctor;
import java.io.File;
import javax.imageio.metadata.IIOMetadataNode;
import javax.xml.transform.Source;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamSource;
import org.junit.BeforeClass;
import org.w3c.dom.Node;

@RunWith(EvoSuiteRunner.class)
public class XSLTMappingFunctorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      File file0 = new File("7Dcn\"`~+m");
      StreamSource streamSource0 = new StreamSource(file0);
      XSLTMappingFunctor xSLTMappingFunctor0 = new XSLTMappingFunctor((Source) streamSource0);
      StreamSource streamSource1 = (StreamSource)xSLTMappingFunctor0.getXsltSource();
      assertSame(streamSource1, streamSource0);
  }

  @Test
  public void test1()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("G_GEO_BAD_REQUEST");
      DOMSource dOMSource0 = new DOMSource((Node) iIOMetadataNode0);
      XSLTMappingFunctor xSLTMappingFunctor0 = new XSLTMappingFunctor((Source) dOMSource0);
      // Undeclared exception!
      try {
        xSLTMappingFunctor0.execute("~|-zX");
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * javax.imageio.metadata.IIOMetadataNode cannot be cast to org.w3c.dom.Document
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("G_GEO_BAD_REQUEST");
      DOMSource dOMSource0 = new DOMSource((Node) iIOMetadataNode0);
      XSLTMappingFunctor xSLTMappingFunctor0 = new XSLTMappingFunctor((Source) dOMSource0);
      StreamSource streamSource0 = new StreamSource();
      xSLTMappingFunctor0.setXsltSource((Source) streamSource0);
      assertNull(streamSource0.getSystemId());
  }
}
