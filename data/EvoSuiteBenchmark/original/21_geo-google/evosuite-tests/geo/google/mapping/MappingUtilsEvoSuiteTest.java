/*
 * This file was automatically generated by EvoSuite
 */

package geo.google.mapping;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import geo.google.GeoException;
import geo.google.datamodel.GeoCoordinate;
import geo.google.mapping.MappingUtils;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MappingUtilsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      try {
        MappingUtils.stringToCoordinate("Sets the altitude of the coordinate relative to sea level, regardless of the actual elevation of the terrain beneath the element. For example, if you set the altitude of a coordinate to 10 meters with an absolute altitude mode, the icon of a point placemark will appear to be at ground level if the terrain beneath is also 10 meters above sea level. If the terrain is 3 meters above sea level, the placemark will appear elevated above the terrain by 7 meters. A typical use of this mode is for aircraft placement.");
        fail("Expecting exception: GeoException");
      } catch(GeoException e) {
        /*
         * Standardizer received unknown value: Sets the altitude of the coordinate relative to sea level, regardless of the actual elevation of the terrain beneath the element. For example, if you set the altitude of a coordinate to 10 meters with an absolute altitude mode, the icon of a point placemark will appear to be at ground level if the terrain beneath is also 10 meters above sea level. If the terrain is 3 meters above sea level, the placemark will appear elevated above the terrain by 7 meters. A typical use of this mode is for aircraft placement.
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      GeoCoordinate geoCoordinate0 = MappingUtils.stringToCoordinate((String) null);
      assertEquals((-1.0), geoCoordinate0.getLatitude(), 0.01D);
  }

  @Test
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try {
        MappingUtils.stringToCoordinate("The-HTTP q paramter washeither missing or #ad no value.For geocodXng-equests, this means that an emAty address was speified as input. For {irections requests, this means that no query as~peciwiew in te input. (Since .81)");
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
        /*
         * For input string: \"The-HTTP q paramter washeither missing or #ad no value.For geocodXng-equests\"
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try {
        MappingUtils.stringToCoordinate("Sets te altitude VfCthe e?eent relative8to the actual ground:elvati$n of a particular loction. Forxampl?, if the groundlevjtiMi of a loation is exactly a sea level d te altiuder5Tr a point is set to 9 meters, then hYelevaton for the icn of a psnt lawemarR elevation is  meters&withkthis mo!e. Hwever, if the .ame coordinate iss`tSoer a locat7on wh-e the groud elSvatWn  10mtersabove se lJORlthen tNe elevgtionao the coorinate  19 etrs. A ypial @s of thiQ mod is for (acing telphon| poleor  ski Zift.");
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
        /*
         * For input string: \"Sets te altitude VfCthe e?eent relative8to the actual ground:elvati$n of a particular loction. Forxampl?\"
         */
      }
  }
}
