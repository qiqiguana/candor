/*
 * This file was automatically generated by EvoSuite
 */

package geo.google.datamodel;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import geo.google.datamodel.GeoAddressAccuracy;
import geo.google.datamodel.GeoCoordinate;
import geo.google.datamodel.GeoUsAddress;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class GeoUsAddressEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      GeoUsAddress geoUsAddress0 = new GeoUsAddress();
      GeoAddressAccuracy geoAddressAccuracy0 = GeoAddressAccuracy.ADDRESS_LEVEL;
      geoUsAddress0.setAccuracy(geoAddressAccuracy0);
      assertEquals("", geoUsAddress0.getAddressLine2());
  }

  @Test
  public void test1()  throws Throwable  {
      GeoUsAddress geoUsAddress0 = new GeoUsAddress();
      geoUsAddress0.setPostalCode("9uD{;(z>)%'s~lRw`AM");
      assertEquals("", geoUsAddress0.getAddressLine2());
  }

  @Test
  public void test2()  throws Throwable  {
      GeoCoordinate geoCoordinate0 = new GeoCoordinate();
      GeoAddressAccuracy geoAddressAccuracy0 = GeoAddressAccuracy.REGION_LEVEL;
      GeoUsAddress geoUsAddress0 = new GeoUsAddress("[ul`]8sA#!O&*:%%b", "[ul`]8sA#!O&*:%%b", "[ul`]8sA#!O&*:%%b", "Sets the altitude of the element relative to the actual ground elevation of a particular location. For example, if the ground elevation of a location is exactly at sea level and the altitude for a point is set to 9 meters, then the elevation for the icon of a point placemark elevation is 9 meters with this mode. However, if the same coordinate is set over a location where the ground elevation is 10 meters above sea level, then the elevation of the coordinate is 19 meters. A typical use of this mode is for placing telephone poles or a ski lift.", "COUNTRY_LEVEL", "Sets the altitude of the element relative to the actual ground elevation of a particular location. For example, if the ground elevation of a location is exactly at sea level and the altitude for a point is set to 9 meters, then the elevation for the icon of a point placemark elevation is 9 meters with this mode. However, if the same coordinate is set over a location where the ground elevation is 10 meters above sea level, then the elevation of the coordinate is 19 meters. A typical use of this mode is for placing telephone poles or a ski lift.", "COUNTRY_LEVEL", geoCoordinate0, geoAddressAccuracy0);
      String string0 = geoUsAddress0.toAddressLine();
      assertEquals("COUNTRY_LEVEL", geoUsAddress0.getCountry());
      assertNotNull(string0);
      assertEquals("Sets the altitude of the element relative to the actual ground elevation of a particular location. For example, if the ground elevation of a location is exactly at sea level and the altitude for a point is set to 9 meters, then the elevation for the icon of a point placemark elevation is 9 meters with this mode. However, if the same coordinate is set over a location where the ground elevation is 10 meters above sea level, then the elevation of the coordinate is 19 meters. A typical use of this mode is for placing telephone poles or a ski lift.", geoUsAddress0.getCounty());
      assertEquals("[ul`]8sA#!O&*:%%b", geoUsAddress0.getAddressLine2());
      assertEquals("[ul`]8sA#!O&*:%%b, [ul`]8sA#!O&*:%%b, COUNTRY_LEVEL Sets the altitude of the element relative to the actual ground elevation of a particular location. For example, if the ground elevation of a location is exactly at sea level and the altitude for a point is set to 9 meters, then the elevation for the icon of a point placemark elevation is 9 meters with this mode. However, if the same coordinate is set over a location where the ground elevation is 10 meters above sea level, then the elevation of the coordinate is 19 meters. A typical use of this mode is for placing telephone poles or a ski lift.", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      GeoCoordinate geoCoordinate0 = new GeoCoordinate();
      GeoAddressAccuracy geoAddressAccuracy0 = GeoAddressAccuracy.REGION_LEVEL;
      GeoUsAddress geoUsAddress0 = new GeoUsAddress("[ul`]8sA#!O&*:%%b", "[ul`]8sA#!O&*:%%b", "[ul`]8sA#!O&*:%%b", "Sets the altitude of the element relative to the actual ground elevation of a particular location. For example, if the ground elevation of a location is exactly at sea level and the altitude for a point is set to 9 meters, then the elevation for the icon of a point placemark elevation is 9 meters with this mode. However, if the same coordinate is set over a location where the ground elevation is 10 meters above sea level, then the elevation of the coordinate is 19 meters. A typical use of this mode is for placing telephone poles or a ski lift.", "COUNTRY_LEVEL", "Sets the altitude of the element relative to the actual ground elevation of a particular location. For example, if the ground elevation of a location is exactly at sea level and the altitude for a point is set to 9 meters, then the elevation for the icon of a point placemark elevation is 9 meters with this mode. However, if the same coordinate is set over a location where the ground elevation is 10 meters above sea level, then the elevation of the coordinate is 19 meters. A typical use of this mode is for placing telephone poles or a ski lift.", "COUNTRY_LEVEL", geoCoordinate0, geoAddressAccuracy0);
      geoUsAddress0.setCoordinate(geoCoordinate0);
      assertEquals("COUNTRY_LEVEL", geoUsAddress0.getCountry());
      assertEquals("[ul`]8sA#!O&*:%%b", geoUsAddress0.getAddressLine2());
      assertEquals("Sets the altitude of the element relative to the actual ground elevation of a particular location. For example, if the ground elevation of a location is exactly at sea level and the altitude for a point is set to 9 meters, then the elevation for the icon of a point placemark elevation is 9 meters with this mode. However, if the same coordinate is set over a location where the ground elevation is 10 meters above sea level, then the elevation of the coordinate is 19 meters. A typical use of this mode is for placing telephone poles or a ski lift.", geoUsAddress0.getCounty());
      assertEquals("[ul`]8sA#!O&*:%%b, [ul`]8sA#!O&*:%%b, COUNTRY_LEVEL Sets the altitude of the element relative to the actual ground elevation of a particular location. For example, if the ground elevation of a location is exactly at sea level and the altitude for a point is set to 9 meters, then the elevation for the icon of a point placemark elevation is 9 meters with this mode. However, if the same coordinate is set over a location where the ground elevation is 10 meters above sea level, then the elevation of the coordinate is 19 meters. A typical use of this mode is for placing telephone poles or a ski lift.", geoUsAddress0.toAddressLine());
  }

  @Test
  public void test4()  throws Throwable  {
      GeoUsAddress geoUsAddress0 = new GeoUsAddress();
      String string0 = geoUsAddress0.getAddressLine1();
      assertEquals("", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      GeoUsAddress geoUsAddress0 = new GeoUsAddress();
      String string0 = geoUsAddress0.toString();
      assertNotNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      GeoUsAddress geoUsAddress0 = new GeoUsAddress();
      GeoCoordinate geoCoordinate0 = geoUsAddress0.getCoordinate();
      assertEquals((-1.0), geoCoordinate0.getLatitude(), 0.01D);
  }

  @Test
  public void test7()  throws Throwable  {
      GeoUsAddress geoUsAddress0 = new GeoUsAddress();
      geoUsAddress0.setState("9uD{;(z>)%'s~lRw`AM");
      assertEquals(GeoAddressAccuracy.UNKNOWN_LOCATION, geoUsAddress0.getAccuracy());
  }

  @Test
  public void test8()  throws Throwable  {
      GeoUsAddress geoUsAddress0 = new GeoUsAddress();
      String string0 = geoUsAddress0.getCity();
      assertEquals("", string0);
  }

  @Test
  public void test9()  throws Throwable  {
      GeoUsAddress geoUsAddress0 = new GeoUsAddress();
      String string0 = geoUsAddress0.getCounty();
      assertEquals("", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      GeoUsAddress geoUsAddress0 = new GeoUsAddress();
      geoUsAddress0.setCounty("");
      assertEquals("", geoUsAddress0.getAddressLine2());
  }

  @Test
  public void test11()  throws Throwable  {
      GeoUsAddress geoUsAddress0 = new GeoUsAddress();
      String string0 = geoUsAddress0.getState();
      assertEquals("", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      GeoUsAddress geoUsAddress0 = new GeoUsAddress();
      geoUsAddress0.setAddressLine1("");
      assertEquals("", geoUsAddress0.getCounty());
  }

  @Test
  public void test13()  throws Throwable  {
      GeoUsAddress geoUsAddress0 = new GeoUsAddress();
      geoUsAddress0.setAddressLine2((String) null);
      assertEquals("", geoUsAddress0.getState());
  }

  @Test
  public void test14()  throws Throwable  {
      GeoUsAddress geoUsAddress0 = new GeoUsAddress();
      String string0 = geoUsAddress0.getPostalCode();
      assertEquals("", string0);
  }

  @Test
  public void test15()  throws Throwable  {
      GeoUsAddress geoUsAddress0 = new GeoUsAddress();
      boolean boolean0 = geoUsAddress0.equals((Object) "geo.google.datamodel.GeoAltitude@3244eabe[_altitude=0.0,_mode=CLAMP_TO_GROUND]");
      assertEquals(false, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      GeoUsAddress geoUsAddress0 = new GeoUsAddress();
      geoUsAddress0.setCity("lbaQ%9");
      assertEquals("", geoUsAddress0.getCountry());
  }

  @Test
  public void test17()  throws Throwable  {
      GeoUsAddress geoUsAddress0 = new GeoUsAddress();
      String string0 = geoUsAddress0.getAddressLine2();
      assertEquals("", string0);
  }

  @Test
  public void test18()  throws Throwable  {
      GeoUsAddress geoUsAddress0 = new GeoUsAddress();
      GeoAddressAccuracy geoAddressAccuracy0 = geoUsAddress0.getAccuracy();
      assertEquals(0, geoAddressAccuracy0.ordinal());
  }

  @Test
  public void test19()  throws Throwable  {
      GeoUsAddress geoUsAddress0 = new GeoUsAddress();
      String string0 = geoUsAddress0.getCountry();
      assertEquals("", string0);
  }

  @Test
  public void test20()  throws Throwable  {
      GeoUsAddress geoUsAddress0 = new GeoUsAddress();
      geoUsAddress0.setCountry("");
      assertEquals("", geoUsAddress0.getAddressLine1());
  }
}
