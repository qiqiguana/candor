/*
 * This file was automatically generated by EvoSuite
 */

package geo.google.datamodel;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import geo.google.datamodel.GeoAltitude;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class GeoAltitudeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      GeoAltitude geoAltitude0 = new GeoAltitude((-1.0));
      geoAltitude0.setAltitude((-1.0));
      assertEquals((-1.0), geoAltitude0.getAltitude(), 0.01D);
  }

  @Test
  public void test1()  throws Throwable  {
      GeoAltitude geoAltitude0 = new GeoAltitude((-345.4255421900352));
      GeoAltitude geoAltitude1 = geoAltitude0.clone();
      assertTrue(geoAltitude0.equals(geoAltitude1));
  }

  @Test
  public void test2()  throws Throwable  {
      GeoAltitude.GeoAltitudeMode geoAltitude_GeoAltitudeMode0 = GeoAltitude.GeoAltitudeMode.RELATIVE_TO_GROUND;
      GeoAltitude geoAltitude0 = new GeoAltitude(1.0, geoAltitude_GeoAltitudeMode0);
      double double0 = geoAltitude0.getAltitude();
      assertEquals(1.0, double0, 0.01D);
  }

  @Test
  public void test3()  throws Throwable  {
      GeoAltitude geoAltitude0 = new GeoAltitude((-345.4255421900352));
      GeoAltitude.GeoAltitudeMode geoAltitude_GeoAltitudeMode0 = GeoAltitude.GeoAltitudeMode.RELATIVE_TO_GROUND;
      geoAltitude0.setMode(geoAltitude_GeoAltitudeMode0);
      assertEquals((-345.4255421900352), geoAltitude0.getAltitude(), 0.01D);
  }

  @Test
  public void test4()  throws Throwable  {
      GeoAltitude geoAltitude0 = new GeoAltitude(83.10227735267303);
      String string0 = geoAltitude0.toString();
      assertEquals(83.10227735267303, geoAltitude0.getAltitude(), 0.01D);
      assertNotNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      GeoAltitude geoAltitude0 = new GeoAltitude((-345.4255421900352));
      geoAltitude0.equals((Object) "CLAMP_TO_GROUND");
      assertEquals((-345.4255421900352), geoAltitude0.getAltitude(), 0.01D);
  }

  @Test
  public void test6()  throws Throwable  {
      GeoAltitude geoAltitude0 = new GeoAltitude();
      geoAltitude0.getMode();
      assertEquals(0.0, geoAltitude0.getAltitude(), 0.01D);
  }

  @Test
  public void test7()  throws Throwable  {
      GeoAltitude.GeoAltitudeMode geoAltitude_GeoAltitudeMode0 = GeoAltitude.GeoAltitudeMode.RELATIVE_TO_GROUND;
      String string0 = geoAltitude_GeoAltitudeMode0.getName();
      assertNotNull(string0);
      assertEquals("CLAMP_TO_GROUND", string0);
  }

  @Test
  public void test8()  throws Throwable  {
      GeoAltitude.GeoAltitudeMode geoAltitude_GeoAltitudeMode0 = GeoAltitude.GeoAltitudeMode.RELATIVE_TO_GROUND;
      String string0 = geoAltitude_GeoAltitudeMode0.getDescription("h\"V~Tz_1(!&W/$wNV");
      assertEquals("Sets the altitude of the element relative to the actual ground elevation of a particular location. For example, if the ground elevation of a location is exactly at sea level and the altitude for a point is set to 9 meters, then the elevation for the icon of a point placemark elevation is 9 meters with this mode. However, if the same coordinate is set over a location where the ground elevation is 10 meters above sea level, then the elevation of the coordinate is 19 meters. A typical use of this mode is for placing telephone poles or a ski lift.", string0);
  }
}
