/*
 * This file was automatically generated by EvoSuite
 */

package geo.google.datamodel;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import geo.google.datamodel.GeoAltitude;
import geo.google.datamodel.GeoCoordinate;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class GeoCoordinateEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      GeoAltitude.GeoAltitudeMode geoAltitude_GeoAltitudeMode0 = GeoAltitude.GeoAltitudeMode.RELATIVE_TO_GROUND;
      GeoAltitude geoAltitude0 = new GeoAltitude((-697.5968528122937), geoAltitude_GeoAltitudeMode0);
      GeoCoordinate geoCoordinate0 = new GeoCoordinate((-919.8719791268037), (-1.0), geoAltitude0);
      geoCoordinate0.equals((Object) "");
      assertEquals((-1.0), geoCoordinate0.getLatitude(), 0.01D);
      assertEquals((-919.8719791268037), geoCoordinate0.getLongitude(), 0.01D);
  }

  @Test
  public void test1()  throws Throwable  {
      GeoCoordinate geoCoordinate0 = new GeoCoordinate();
      String string0 = geoCoordinate0.toString();
      assertNotNull(string0);
      assertEquals((-1.0), geoCoordinate0.getLatitude(), 0.01D);
      assertEquals((-1.0), geoCoordinate0.getLongitude(), 0.01D);
  }

  @Test
  public void test2()  throws Throwable  {
      GeoCoordinate geoCoordinate0 = new GeoCoordinate();
      geoCoordinate0.setLatitude((-1528.8910962581933));
      assertEquals((-1528.8910962581933), geoCoordinate0.getLatitude(), 0.01D);
      assertEquals((-1.0), geoCoordinate0.getLongitude(), 0.01D);
  }

  @Test
  public void test3()  throws Throwable  {
      GeoAltitude.GeoAltitudeMode geoAltitude_GeoAltitudeMode0 = GeoAltitude.GeoAltitudeMode.RELATIVE_TO_GROUND;
      GeoAltitude geoAltitude0 = new GeoAltitude(0.0, geoAltitude_GeoAltitudeMode0);
      GeoCoordinate geoCoordinate0 = new GeoCoordinate((-1.0), 0.0, geoAltitude0);
      geoCoordinate0.distanceTo(geoCoordinate0);
      assertEquals((-1.0), geoCoordinate0.getLongitude(), 0.01D);
      assertEquals(0.0, geoCoordinate0.getLatitude(), 0.01D);
  }

  @Test
  public void test4()  throws Throwable  {
      GeoAltitude.GeoAltitudeMode geoAltitude_GeoAltitudeMode0 = GeoAltitude.GeoAltitudeMode.RELATIVE_TO_GROUND;
      GeoAltitude geoAltitude0 = new GeoAltitude((-697.5968528122937), geoAltitude_GeoAltitudeMode0);
      GeoCoordinate geoCoordinate0 = new GeoCoordinate((-919.8719791268037), (-1.0), geoAltitude0);
      geoCoordinate0.setLongitude((-697.5968528122937));
      assertEquals((-697.5968528122937), geoCoordinate0.getLongitude(), 0.01D);
      assertEquals((-1.0), geoCoordinate0.getLatitude(), 0.01D);
  }

  @Test
  public void test5()  throws Throwable  {
      GeoAltitude.GeoAltitudeMode geoAltitude_GeoAltitudeMode0 = GeoAltitude.GeoAltitudeMode.RELATIVE_TO_GROUND;
      GeoAltitude geoAltitude0 = new GeoAltitude((-697.5968528122937), geoAltitude_GeoAltitudeMode0);
      GeoCoordinate geoCoordinate0 = new GeoCoordinate((-919.8719791268037), (-1.0), geoAltitude0);
      GeoAltitude geoAltitude1 = geoCoordinate0.getAltitude();
      assertNotNull(geoAltitude1);
      assertEquals((-1.0), geoCoordinate0.getLatitude(), 0.01D);
      assertEquals((-919.8719791268037), geoCoordinate0.getLongitude(), 0.01D);
  }

  @Test
  public void test6()  throws Throwable  {
      GeoAltitude.GeoAltitudeMode geoAltitude_GeoAltitudeMode0 = GeoAltitude.GeoAltitudeMode.RELATIVE_TO_GROUND;
      GeoAltitude geoAltitude0 = new GeoAltitude((-697.5968528122937), geoAltitude_GeoAltitudeMode0);
      GeoCoordinate geoCoordinate0 = new GeoCoordinate((-919.8719791268037), (-1.0), geoAltitude0);
      geoCoordinate0.setAltitude(geoAltitude0);
      assertEquals((-919.8719791268037), geoCoordinate0.getLongitude(), 0.01D);
      assertEquals((-1.0), geoCoordinate0.getLatitude(), 0.01D);
  }

  @Test
  public void test7()  throws Throwable  {
      GeoCoordinate geoCoordinate0 = new GeoCoordinate();
      GeoCoordinate geoCoordinate1 = geoCoordinate0.clone();
      assertNotNull(geoCoordinate1);
      assertEquals((-1.0), geoCoordinate1.getLongitude(), 0.01D);
      assertEquals((-1.0), geoCoordinate0.getLatitude(), 0.01D);
      assertTrue(geoCoordinate1.equals(geoCoordinate0));
  }
}
