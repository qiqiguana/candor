/*
 * This file was automatically generated by EvoSuite
 */

package com.google.earth.kml._2;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.google.earth.kml._2.PlacemarkType;
import com.google.earth.kml._2.PointType;
import oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PlacemarkTypeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PlacemarkType placemarkType0 = new PlacemarkType();
      PointType pointType0 = new PointType();
      placemarkType0.setPoint(pointType0);
      assertNull(placemarkType0.getId());
  }

  @Test
  public void test1()  throws Throwable  {
      PlacemarkType placemarkType0 = new PlacemarkType();
      PointType pointType0 = placemarkType0.getPoint();
      assertNull(pointType0);
  }

  @Test
  public void test2()  throws Throwable  {
      PlacemarkType placemarkType0 = new PlacemarkType();
      AddressDetails addressDetails0 = new AddressDetails();
      placemarkType0.setAddressDetails(addressDetails0);
      assertNull(addressDetails0.getUsage());
  }

  @Test
  public void test3()  throws Throwable  {
      PlacemarkType placemarkType0 = new PlacemarkType();
      String string0 = placemarkType0.getId();
      assertNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      PlacemarkType placemarkType0 = new PlacemarkType();
      placemarkType0.setAddress("");
      assertEquals("", placemarkType0.getAddress());
  }

  @Test
  public void test5()  throws Throwable  {
      PlacemarkType placemarkType0 = new PlacemarkType();
      AddressDetails addressDetails0 = placemarkType0.getAddressDetails();
      assertNull(addressDetails0);
  }

  @Test
  public void test6()  throws Throwable  {
      PlacemarkType placemarkType0 = new PlacemarkType();
      placemarkType0.setId("");
      assertEquals("", placemarkType0.getId());
  }

  @Test
  public void test7()  throws Throwable  {
      PlacemarkType placemarkType0 = new PlacemarkType();
      String string0 = placemarkType0.getAddress();
      assertNull(string0);
  }
}
