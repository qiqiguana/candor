/*
 * This file was automatically generated by EvoSuite
 */

package com.google.earth.kml._2;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.google.earth.kml._2.KmlType;
import com.google.earth.kml._2.ObjectFactory;
import com.google.earth.kml._2.PlacemarkType;
import com.google.earth.kml._2.PointType;
import com.google.earth.kml._2.ResponseType;
import com.google.earth.kml._2.StatusType;
import javax.xml.bind.JAXBElement;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ObjectFactoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      ResponseType responseType0 = objectFactory0.createResponseType();
      JAXBElement<ResponseType> jAXBElement0 = objectFactory0.createResponse(responseType0);
      assertEquals(false, jAXBElement0.isTypeSubstituted());
  }

  @Test
  public void test1()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      StatusType statusType0 = objectFactory0.createStatusType();
      assertNull(statusType0.getRequest());
  }

  @Test
  public void test2()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      KmlType kmlType0 = objectFactory0.createKmlType();
      JAXBElement<KmlType> jAXBElement0 = objectFactory0.createKml(kmlType0);
      assertEquals(true, jAXBElement0.isGlobalScope());
  }

  @Test
  public void test3()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      PointType pointType0 = new PointType();
      JAXBElement<PointType> jAXBElement0 = objectFactory0.createPoint(pointType0);
      assertEquals(true, jAXBElement0.isGlobalScope());
  }

  @Test
  public void test4()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      PlacemarkType placemarkType0 = objectFactory0.createPlacemarkType();
      assertNull(placemarkType0.getId());
  }

  @Test
  public void test5()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      PointType pointType0 = objectFactory0.createPointType();
      assertNull(pointType0.getCoordinates());
  }
}
