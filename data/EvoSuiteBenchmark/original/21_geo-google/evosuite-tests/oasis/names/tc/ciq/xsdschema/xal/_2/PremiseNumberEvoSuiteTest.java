/*
 * This file was automatically generated by EvoSuite
 */

package oasis.names.tc.ciq.xsdschema.xal._2;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Map;
import javax.xml.namespace.QName;
import oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumber;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PremiseNumberEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PremiseNumber premiseNumber0 = new PremiseNumber();
      String string0 = premiseNumber0.getType();
      assertNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      PremiseNumber premiseNumber0 = new PremiseNumber();
      String string0 = premiseNumber0.getNumberTypeOccurrence();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      PremiseNumber premiseNumber0 = new PremiseNumber();
      premiseNumber0.setNumberTypeOccurrence("");
      assertNull(premiseNumber0.getType());
  }

  @Test
  public void test3()  throws Throwable  {
      PremiseNumber premiseNumber0 = new PremiseNumber();
      String string0 = premiseNumber0.getCode();
      assertNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      PremiseNumber premiseNumber0 = new PremiseNumber();
      String string0 = premiseNumber0.getNumberType();
      assertNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      PremiseNumber premiseNumber0 = new PremiseNumber();
      String string0 = premiseNumber0.getContent();
      assertNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      PremiseNumber premiseNumber0 = new PremiseNumber();
      premiseNumber0.setType((String) null);
      assertNull(premiseNumber0.getNumberType());
  }

  @Test
  public void test7()  throws Throwable  {
      PremiseNumber premiseNumber0 = new PremiseNumber();
      premiseNumber0.setCode("");
      assertNull(premiseNumber0.getIndicatorOccurrence());
  }

  @Test
  public void test8()  throws Throwable  {
      PremiseNumber premiseNumber0 = new PremiseNumber();
      Map<QName, String> map0 = premiseNumber0.getOtherAttributes();
      assertEquals(true, map0.isEmpty());
  }

  @Test
  public void test9()  throws Throwable  {
      PremiseNumber premiseNumber0 = new PremiseNumber();
      String string0 = premiseNumber0.getIndicator();
      assertNull(string0);
  }

  @Test
  public void test10()  throws Throwable  {
      PremiseNumber premiseNumber0 = new PremiseNumber();
      premiseNumber0.setContent(" ZK1^{>qia!55p`{(RK");
      assertNull(premiseNumber0.getNumberType());
  }

  @Test
  public void test11()  throws Throwable  {
      PremiseNumber premiseNumber0 = new PremiseNumber();
      premiseNumber0.setNumberType("");
      assertNull(premiseNumber0.getIndicator());
  }

  @Test
  public void test12()  throws Throwable  {
      PremiseNumber premiseNumber0 = new PremiseNumber();
      premiseNumber0.setIndicator((String) null);
      assertNull(premiseNumber0.getNumberTypeOccurrence());
  }

  @Test
  public void test13()  throws Throwable  {
      PremiseNumber premiseNumber0 = new PremiseNumber();
      premiseNumber0.setIndicatorOccurrence((String) null);
      assertNull(premiseNumber0.getIndicatorOccurrence());
  }

  @Test
  public void test14()  throws Throwable  {
      PremiseNumber premiseNumber0 = new PremiseNumber();
      String string0 = premiseNumber0.getIndicatorOccurrence();
      assertNull(string0);
  }
}
