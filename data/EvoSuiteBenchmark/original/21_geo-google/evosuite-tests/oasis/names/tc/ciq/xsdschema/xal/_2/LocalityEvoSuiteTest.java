/*
 * This file was automatically generated by EvoSuite
 */

package oasis.names.tc.ciq.xsdschema.xal._2;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.List;
import java.util.Map;
import javax.xml.namespace.QName;
import oasis.names.tc.ciq.xsdschema.xal._2.AddressLine;
import oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType;
import oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType;
import oasis.names.tc.ciq.xsdschema.xal._2.Locality;
import oasis.names.tc.ciq.xsdschema.xal._2.PostBox;
import oasis.names.tc.ciq.xsdschema.xal._2.PostOffice;
import oasis.names.tc.ciq.xsdschema.xal._2.PostalCode;
import oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType;
import oasis.names.tc.ciq.xsdschema.xal._2.Premise;
import oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LocalityEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Locality locality0 = new Locality();
      PostalRouteType postalRouteType0 = locality0.getPostalRoute();
      assertNull(postalRouteType0);
  }

  @Test
  public void test1()  throws Throwable  {
      Locality locality0 = new Locality();
      LargeMailUserType largeMailUserType0 = locality0.getLargeMailUser();
      assertNull(largeMailUserType0);
  }

  @Test
  public void test2()  throws Throwable  {
      Locality locality0 = new Locality();
      locality0.setUsageType("");
      assertNull(locality0.getType());
  }

  @Test
  public void test3()  throws Throwable  {
      Locality locality0 = new Locality();
      locality0.setPostOffice((PostOffice) null);
      assertNull(locality0.getIndicator());
  }

  @Test
  public void test4()  throws Throwable  {
      Locality locality0 = new Locality();
      String string0 = locality0.getUsageType();
      assertNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      Locality locality0 = new Locality();
      Thoroughfare thoroughfare0 = locality0.getThoroughfare();
      assertNull(thoroughfare0);
  }

  @Test
  public void test6()  throws Throwable  {
      Locality locality0 = new Locality();
      Map<QName, String> map0 = locality0.getOtherAttributes();
      assertEquals(0, map0.size());
  }

  @Test
  public void test7()  throws Throwable  {
      Locality locality0 = new Locality();
      LargeMailUserType largeMailUserType0 = new LargeMailUserType();
      locality0.setLargeMailUser(largeMailUserType0);
      assertNull(locality0.getIndicator());
  }

  @Test
  public void test8()  throws Throwable  {
      Locality locality0 = new Locality();
      locality0.setPostalRoute((PostalRouteType) null);
      assertNull(locality0.getType());
  }

  @Test
  public void test9()  throws Throwable  {
      Locality locality0 = new Locality();
      PostOffice postOffice0 = locality0.getPostOffice();
      assertNull(postOffice0);
  }

  @Test
  public void test10()  throws Throwable  {
      Locality locality0 = new Locality();
      String string0 = locality0.getIndicator();
      assertNull(string0);
  }

  @Test
  public void test11()  throws Throwable  {
      Locality locality0 = new Locality();
      locality0.setDependentLocality((DependentLocalityType) null);
      assertNull(locality0.getIndicator());
  }

  @Test
  public void test12()  throws Throwable  {
      Locality locality0 = new Locality();
      PostalCode postalCode0 = locality0.getPostalCode();
      assertNull(postalCode0);
  }

  @Test
  public void test13()  throws Throwable  {
      Locality locality0 = new Locality();
      locality0.setPostalCode((PostalCode) null);
      assertNull(locality0.getIndicator());
  }

  @Test
  public void test14()  throws Throwable  {
      Locality locality0 = new Locality();
      DependentLocalityType dependentLocalityType0 = locality0.getDependentLocality();
      assertNull(dependentLocalityType0);
  }

  @Test
  public void test15()  throws Throwable  {
      Locality locality0 = new Locality();
      locality0.setThoroughfare((Thoroughfare) null);
      assertNull(locality0.getUsageType());
  }

  @Test
  public void test16()  throws Throwable  {
      Locality locality0 = new Locality();
      Premise premise0 = new Premise();
      locality0.setPremise(premise0);
      assertNull(premise0.getType());
  }

  @Test
  public void test17()  throws Throwable  {
      Locality locality0 = new Locality();
      PostBox postBox0 = locality0.getPostBox();
      assertNull(postBox0);
  }

  @Test
  public void test18()  throws Throwable  {
      Locality locality0 = new Locality();
      Premise premise0 = locality0.getPremise();
      assertNull(premise0);
  }

  @Test
  public void test19()  throws Throwable  {
      Locality locality0 = new Locality();
      String string0 = locality0.getType();
      assertNull(string0);
  }

  @Test
  public void test20()  throws Throwable  {
      Locality locality0 = new Locality();
      locality0.setType("");
      assertNull(locality0.getIndicator());
  }

  @Test
  public void test21()  throws Throwable  {
      Locality locality0 = new Locality();
      PostBox postBox0 = new PostBox();
      locality0.setPostBox(postBox0);
      assertNull(postBox0.getIndicator());
  }

  @Test
  public void test22()  throws Throwable  {
      Locality locality0 = new Locality();
      locality0.setIndicator("N6!'XyEf-w");
      assertEquals("N6!'XyEf-w", locality0.getIndicator());
  }

  @Test
  public void test23()  throws Throwable  {
      Locality.LocalityName locality_LocalityName0 = new Locality.LocalityName();
      String string0 = locality_LocalityName0.getContent();
      assertNull(string0);
  }

  @Test
  public void test24()  throws Throwable  {
      Locality.LocalityName locality_LocalityName0 = new Locality.LocalityName();
      Map<QName, String> map0 = locality_LocalityName0.getOtherAttributes();
      assertEquals(0, map0.size());
  }

  @Test
  public void test25()  throws Throwable  {
      Locality.LocalityName locality_LocalityName0 = new Locality.LocalityName();
      locality_LocalityName0.setCode("");
      assertNull(locality_LocalityName0.getType());
  }

  @Test
  public void test26()  throws Throwable  {
      Locality.LocalityName locality_LocalityName0 = new Locality.LocalityName();
      String string0 = locality_LocalityName0.getCode();
      assertNull(string0);
  }

  @Test
  public void test27()  throws Throwable  {
      Locality.LocalityName locality_LocalityName0 = new Locality.LocalityName();
      locality_LocalityName0.setContent("");
      assertNull(locality_LocalityName0.getType());
  }

  @Test
  public void test28()  throws Throwable  {
      Locality.LocalityName locality_LocalityName0 = new Locality.LocalityName();
      String string0 = locality_LocalityName0.getType();
      assertNull(string0);
  }

  @Test
  public void test29()  throws Throwable  {
      Locality.LocalityName locality_LocalityName0 = new Locality.LocalityName();
      locality_LocalityName0.setType("");
      assertNull(locality_LocalityName0.getContent());
  }

  @Test
  public void test30()  throws Throwable  {
      Locality locality0 = new Locality();
      List<AddressLine> list0 = locality0.getAddressLine();
      List<AddressLine> list1 = locality0.getAddressLine();
      assertSame(list1, list0);
      assertNotNull(list1);
  }

  @Test
  public void test31()  throws Throwable  {
      Locality locality0 = new Locality();
      List<Locality.LocalityName> list0 = locality0.getLocalityName();
      List<Locality.LocalityName> list1 = locality0.getLocalityName();
      assertSame(list1, list0);
      assertNotNull(list1);
  }

  @Test
  public void test32()  throws Throwable  {
      Locality locality0 = new Locality();
      List<Object> list0 = locality0.getAny();
      List<Object> list1 = locality0.getAny();
      assertNotNull(list1);
      assertSame(list1, list0);
  }
}
