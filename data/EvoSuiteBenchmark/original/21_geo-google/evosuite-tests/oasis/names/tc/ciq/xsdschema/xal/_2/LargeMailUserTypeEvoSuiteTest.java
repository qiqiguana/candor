/*
 * This file was automatically generated by EvoSuite
 */

package oasis.names.tc.ciq.xsdschema.xal._2;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.List;
import java.util.Map;
import javax.xml.namespace.QName;
import oasis.names.tc.ciq.xsdschema.xal._2.AddressLine;
import oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType;
import oasis.names.tc.ciq.xsdschema.xal._2.Department;
import oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType;
import oasis.names.tc.ciq.xsdschema.xal._2.PostBox;
import oasis.names.tc.ciq.xsdschema.xal._2.PostalCode;
import oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LargeMailUserTypeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LargeMailUserType.LargeMailUserName largeMailUserType_LargeMailUserName0 = new LargeMailUserType.LargeMailUserName();
      largeMailUserType_LargeMailUserName0.setType("!q");
      assertNull(largeMailUserType_LargeMailUserName0.getCode());
  }

  @Test
  public void test1()  throws Throwable  {
      LargeMailUserType.LargeMailUserName largeMailUserType_LargeMailUserName0 = new LargeMailUserType.LargeMailUserName();
      String string0 = largeMailUserType_LargeMailUserName0.getCode();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      LargeMailUserType.LargeMailUserName largeMailUserType_LargeMailUserName0 = new LargeMailUserType.LargeMailUserName();
      String string0 = largeMailUserType_LargeMailUserName0.getContent();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      LargeMailUserType.LargeMailUserName largeMailUserType_LargeMailUserName0 = new LargeMailUserType.LargeMailUserName();
      String string0 = largeMailUserType_LargeMailUserName0.getType();
      assertNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      LargeMailUserType.LargeMailUserName largeMailUserType_LargeMailUserName0 = new LargeMailUserType.LargeMailUserName();
      largeMailUserType_LargeMailUserName0.setContent("4");
      assertEquals("4", largeMailUserType_LargeMailUserName0.getContent());
  }

  @Test
  public void test5()  throws Throwable  {
      LargeMailUserType.LargeMailUserName largeMailUserType_LargeMailUserName0 = new LargeMailUserType.LargeMailUserName();
      Map<QName, String> map0 = largeMailUserType_LargeMailUserName0.getOtherAttributes();
      assertEquals(true, map0.isEmpty());
  }

  @Test
  public void test6()  throws Throwable  {
      LargeMailUserType.LargeMailUserName largeMailUserType_LargeMailUserName0 = new LargeMailUserType.LargeMailUserName();
      largeMailUserType_LargeMailUserName0.setCode("");
      assertNull(largeMailUserType_LargeMailUserName0.getType());
  }

  @Test
  public void test7()  throws Throwable  {
      LargeMailUserType largeMailUserType0 = new LargeMailUserType();
      String string0 = largeMailUserType0.getType();
      assertNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      LargeMailUserType largeMailUserType0 = new LargeMailUserType();
      Department department0 = largeMailUserType0.getDepartment();
      assertNull(department0);
  }

  @Test
  public void test9()  throws Throwable  {
      LargeMailUserType largeMailUserType0 = new LargeMailUserType();
      LargeMailUserType.LargeMailUserIdentifier largeMailUserType_LargeMailUserIdentifier0 = largeMailUserType0.getLargeMailUserIdentifier();
      assertNull(largeMailUserType_LargeMailUserIdentifier0);
  }

  @Test
  public void test10()  throws Throwable  {
      LargeMailUserType largeMailUserType0 = new LargeMailUserType();
      PostBox postBox0 = largeMailUserType0.getPostBox();
      assertNull(postBox0);
  }

  @Test
  public void test11()  throws Throwable  {
      LargeMailUserType largeMailUserType0 = new LargeMailUserType();
      largeMailUserType0.setPostalCode((PostalCode) null);
      assertNull(largeMailUserType0.getType());
  }

  @Test
  public void test12()  throws Throwable  {
      LargeMailUserType largeMailUserType0 = new LargeMailUserType();
      Map<QName, String> map0 = largeMailUserType0.getOtherAttributes();
      assertEquals(0, map0.size());
  }

  @Test
  public void test13()  throws Throwable  {
      LargeMailUserType largeMailUserType0 = new LargeMailUserType();
      largeMailUserType0.setPostBox((PostBox) null);
      assertNull(largeMailUserType0.getType());
  }

  @Test
  public void test14()  throws Throwable  {
      LargeMailUserType largeMailUserType0 = new LargeMailUserType();
      PostalCode postalCode0 = largeMailUserType0.getPostalCode();
      assertNull(postalCode0);
  }

  @Test
  public void test15()  throws Throwable  {
      LargeMailUserType largeMailUserType0 = new LargeMailUserType();
      largeMailUserType0.setDepartment((Department) null);
      assertNull(largeMailUserType0.getType());
  }

  @Test
  public void test16()  throws Throwable  {
      LargeMailUserType largeMailUserType0 = new LargeMailUserType();
      largeMailUserType0.setType("V8I}u(S^wR7");
      assertEquals("V8I}u(S^wR7", largeMailUserType0.getType());
  }

  @Test
  public void test17()  throws Throwable  {
      LargeMailUserType.LargeMailUserIdentifier largeMailUserType_LargeMailUserIdentifier0 = new LargeMailUserType.LargeMailUserIdentifier();
      LargeMailUserType largeMailUserType0 = new LargeMailUserType();
      largeMailUserType0.setLargeMailUserIdentifier(largeMailUserType_LargeMailUserIdentifier0);
      assertNull(largeMailUserType0.getType());
  }

  @Test
  public void test18()  throws Throwable  {
      LargeMailUserType largeMailUserType0 = new LargeMailUserType();
      Thoroughfare thoroughfare0 = largeMailUserType0.getThoroughfare();
      assertNull(thoroughfare0);
  }

  @Test
  public void test19()  throws Throwable  {
      LargeMailUserType largeMailUserType0 = new LargeMailUserType();
      Thoroughfare thoroughfare0 = new Thoroughfare();
      largeMailUserType0.setThoroughfare(thoroughfare0);
      assertNull(thoroughfare0.getDependentThoroughfaresIndicator());
  }

  @Test
  public void test20()  throws Throwable  {
      LargeMailUserType.LargeMailUserIdentifier largeMailUserType_LargeMailUserIdentifier0 = new LargeMailUserType.LargeMailUserIdentifier();
      String string0 = largeMailUserType_LargeMailUserIdentifier0.getContent();
      assertNull(string0);
  }

  @Test
  public void test21()  throws Throwable  {
      LargeMailUserType.LargeMailUserIdentifier largeMailUserType_LargeMailUserIdentifier0 = new LargeMailUserType.LargeMailUserIdentifier();
      largeMailUserType_LargeMailUserIdentifier0.setType("+^@ShbM|!d$gIx");
      assertNull(largeMailUserType_LargeMailUserIdentifier0.getCode());
  }

  @Test
  public void test22()  throws Throwable  {
      LargeMailUserType.LargeMailUserIdentifier largeMailUserType_LargeMailUserIdentifier0 = new LargeMailUserType.LargeMailUserIdentifier();
      largeMailUserType_LargeMailUserIdentifier0.setContent("");
      assertNull(largeMailUserType_LargeMailUserIdentifier0.getCode());
  }

  @Test
  public void test23()  throws Throwable  {
      LargeMailUserType.LargeMailUserIdentifier largeMailUserType_LargeMailUserIdentifier0 = new LargeMailUserType.LargeMailUserIdentifier();
      largeMailUserType_LargeMailUserIdentifier0.setCode("T'Yg+4|Ea`KP");
      assertNull(largeMailUserType_LargeMailUserIdentifier0.getType());
  }

  @Test
  public void test24()  throws Throwable  {
      LargeMailUserType.LargeMailUserIdentifier largeMailUserType_LargeMailUserIdentifier0 = new LargeMailUserType.LargeMailUserIdentifier();
      String string0 = largeMailUserType_LargeMailUserIdentifier0.getCode();
      assertNull(string0);
  }

  @Test
  public void test25()  throws Throwable  {
      LargeMailUserType.LargeMailUserIdentifier largeMailUserType_LargeMailUserIdentifier0 = new LargeMailUserType.LargeMailUserIdentifier();
      Map<QName, String> map0 = largeMailUserType_LargeMailUserIdentifier0.getOtherAttributes();
      assertEquals(true, map0.isEmpty());
  }

  @Test
  public void test26()  throws Throwable  {
      LargeMailUserType.LargeMailUserIdentifier largeMailUserType_LargeMailUserIdentifier0 = new LargeMailUserType.LargeMailUserIdentifier();
      String string0 = largeMailUserType_LargeMailUserIdentifier0.getIndicator();
      assertNull(string0);
  }

  @Test
  public void test27()  throws Throwable  {
      LargeMailUserType.LargeMailUserIdentifier largeMailUserType_LargeMailUserIdentifier0 = new LargeMailUserType.LargeMailUserIdentifier();
      largeMailUserType_LargeMailUserIdentifier0.setIndicator("");
      assertNull(largeMailUserType_LargeMailUserIdentifier0.getCode());
  }

  @Test
  public void test28()  throws Throwable  {
      LargeMailUserType.LargeMailUserIdentifier largeMailUserType_LargeMailUserIdentifier0 = new LargeMailUserType.LargeMailUserIdentifier();
      String string0 = largeMailUserType_LargeMailUserIdentifier0.getType();
      assertNull(string0);
  }

  @Test
  public void test29()  throws Throwable  {
      LargeMailUserType largeMailUserType0 = new LargeMailUserType();
      List<AddressLine> list0 = largeMailUserType0.getAddressLine();
      List<AddressLine> list1 = largeMailUserType0.getAddressLine();
      assertSame(list1, list0);
      assertNotNull(list1);
  }

  @Test
  public void test30()  throws Throwable  {
      LargeMailUserType largeMailUserType0 = new LargeMailUserType();
      List<LargeMailUserType.LargeMailUserName> list0 = largeMailUserType0.getLargeMailUserName();
      List<LargeMailUserType.LargeMailUserName> list1 = largeMailUserType0.getLargeMailUserName();
      assertNotNull(list1);
      assertSame(list1, list0);
  }

  @Test
  public void test31()  throws Throwable  {
      LargeMailUserType largeMailUserType0 = new LargeMailUserType();
      List<BuildingNameType> list0 = largeMailUserType0.getBuildingName();
      List<BuildingNameType> list1 = largeMailUserType0.getBuildingName();
      assertSame(list1, list0);
      assertNotNull(list1);
  }

  @Test
  public void test32()  throws Throwable  {
      LargeMailUserType largeMailUserType0 = new LargeMailUserType();
      List<Object> list0 = largeMailUserType0.getAny();
      List<Object> list1 = largeMailUserType0.getAny();
      assertSame(list1, list0);
      assertNotNull(list1);
  }
}
