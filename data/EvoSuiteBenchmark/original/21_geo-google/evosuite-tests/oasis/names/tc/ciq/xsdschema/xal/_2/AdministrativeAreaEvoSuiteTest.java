/*
 * This file was automatically generated by EvoSuite
 */

package oasis.names.tc.ciq.xsdschema.xal._2;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.List;
import java.util.Map;
import javax.xml.namespace.QName;
import oasis.names.tc.ciq.xsdschema.xal._2.AddressLine;
import oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea;
import oasis.names.tc.ciq.xsdschema.xal._2.Locality;
import oasis.names.tc.ciq.xsdschema.xal._2.PostOffice;
import oasis.names.tc.ciq.xsdschema.xal._2.PostalCode;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AdministrativeAreaEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AdministrativeArea.SubAdministrativeArea administrativeArea_SubAdministrativeArea0 = new AdministrativeArea.SubAdministrativeArea();
      administrativeArea_SubAdministrativeArea0.setPostalCode((PostalCode) null);
      assertNull(administrativeArea_SubAdministrativeArea0.getIndicator());
  }

  @Test
  public void test1()  throws Throwable  {
      AdministrativeArea.SubAdministrativeArea administrativeArea_SubAdministrativeArea0 = new AdministrativeArea.SubAdministrativeArea();
      administrativeArea_SubAdministrativeArea0.setIndicator("");
      assertNull(administrativeArea_SubAdministrativeArea0.getType());
  }

  @Test
  public void test2()  throws Throwable  {
      AdministrativeArea.SubAdministrativeArea administrativeArea_SubAdministrativeArea0 = new AdministrativeArea.SubAdministrativeArea();
      administrativeArea_SubAdministrativeArea0.setLocality((Locality) null);
      assertNull(administrativeArea_SubAdministrativeArea0.getType());
  }

  @Test
  public void test3()  throws Throwable  {
      AdministrativeArea.SubAdministrativeArea administrativeArea_SubAdministrativeArea0 = new AdministrativeArea.SubAdministrativeArea();
      Map<QName, String> map0 = administrativeArea_SubAdministrativeArea0.getOtherAttributes();
      assertEquals(0, map0.size());
  }

  @Test
  public void test4()  throws Throwable  {
      AdministrativeArea.SubAdministrativeArea administrativeArea_SubAdministrativeArea0 = new AdministrativeArea.SubAdministrativeArea();
      Locality locality0 = administrativeArea_SubAdministrativeArea0.getLocality();
      assertNull(locality0);
  }

  @Test
  public void test5()  throws Throwable  {
      AdministrativeArea.SubAdministrativeArea administrativeArea_SubAdministrativeArea0 = new AdministrativeArea.SubAdministrativeArea();
      String string0 = administrativeArea_SubAdministrativeArea0.getType();
      assertNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      AdministrativeArea.SubAdministrativeArea administrativeArea_SubAdministrativeArea0 = new AdministrativeArea.SubAdministrativeArea();
      String string0 = administrativeArea_SubAdministrativeArea0.getUsageType();
      assertNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      AdministrativeArea.SubAdministrativeArea administrativeArea_SubAdministrativeArea0 = new AdministrativeArea.SubAdministrativeArea();
      administrativeArea_SubAdministrativeArea0.setPostOffice((PostOffice) null);
      assertNull(administrativeArea_SubAdministrativeArea0.getUsageType());
  }

  @Test
  public void test8()  throws Throwable  {
      AdministrativeArea.SubAdministrativeArea administrativeArea_SubAdministrativeArea0 = new AdministrativeArea.SubAdministrativeArea();
      String string0 = administrativeArea_SubAdministrativeArea0.getIndicator();
      assertNull(string0);
  }

  @Test
  public void test9()  throws Throwable  {
      AdministrativeArea.SubAdministrativeArea administrativeArea_SubAdministrativeArea0 = new AdministrativeArea.SubAdministrativeArea();
      PostOffice postOffice0 = administrativeArea_SubAdministrativeArea0.getPostOffice();
      assertNull(postOffice0);
  }

  @Test
  public void test10()  throws Throwable  {
      AdministrativeArea.SubAdministrativeArea administrativeArea_SubAdministrativeArea0 = new AdministrativeArea.SubAdministrativeArea();
      PostalCode postalCode0 = administrativeArea_SubAdministrativeArea0.getPostalCode();
      assertNull(postalCode0);
  }

  @Test
  public void test11()  throws Throwable  {
      AdministrativeArea.SubAdministrativeArea administrativeArea_SubAdministrativeArea0 = new AdministrativeArea.SubAdministrativeArea();
      administrativeArea_SubAdministrativeArea0.setType("");
      assertNull(administrativeArea_SubAdministrativeArea0.getIndicator());
  }

  @Test
  public void test12()  throws Throwable  {
      AdministrativeArea.SubAdministrativeArea administrativeArea_SubAdministrativeArea0 = new AdministrativeArea.SubAdministrativeArea();
      administrativeArea_SubAdministrativeArea0.setUsageType((String) null);
      assertNull(administrativeArea_SubAdministrativeArea0.getUsageType());
  }

  @Test
  public void test13()  throws Throwable  {
      AdministrativeArea administrativeArea0 = new AdministrativeArea();
      String string0 = administrativeArea0.getType();
      assertNull(string0);
  }

  @Test
  public void test14()  throws Throwable  {
      AdministrativeArea administrativeArea0 = new AdministrativeArea();
      String string0 = administrativeArea0.getIndicator();
      assertNull(string0);
  }

  @Test
  public void test15()  throws Throwable  {
      AdministrativeArea administrativeArea0 = new AdministrativeArea();
      PostOffice postOffice0 = administrativeArea0.getPostOffice();
      assertNull(postOffice0);
  }

  @Test
  public void test16()  throws Throwable  {
      AdministrativeArea administrativeArea0 = new AdministrativeArea();
      PostOffice postOffice0 = new PostOffice();
      administrativeArea0.setPostOffice(postOffice0);
      assertNull(administrativeArea0.getIndicator());
  }

  @Test
  public void test17()  throws Throwable  {
      AdministrativeArea administrativeArea0 = new AdministrativeArea();
      administrativeArea0.setLocality((Locality) null);
      assertNull(administrativeArea0.getIndicator());
  }

  @Test
  public void test18()  throws Throwable  {
      AdministrativeArea administrativeArea0 = new AdministrativeArea();
      AdministrativeArea.SubAdministrativeArea administrativeArea_SubAdministrativeArea0 = administrativeArea0.getSubAdministrativeArea();
      assertNull(administrativeArea_SubAdministrativeArea0);
  }

  @Test
  public void test19()  throws Throwable  {
      AdministrativeArea administrativeArea0 = new AdministrativeArea();
      administrativeArea0.setType("");
      assertNull(administrativeArea0.getUsageType());
  }

  @Test
  public void test20()  throws Throwable  {
      AdministrativeArea administrativeArea0 = new AdministrativeArea();
      administrativeArea0.setIndicator("");
      assertEquals("", administrativeArea0.getIndicator());
  }

  @Test
  public void test21()  throws Throwable  {
      AdministrativeArea administrativeArea0 = new AdministrativeArea();
      administrativeArea0.setUsageType((String) null);
      assertNull(administrativeArea0.getType());
  }

  @Test
  public void test22()  throws Throwable  {
      AdministrativeArea administrativeArea0 = new AdministrativeArea();
      PostalCode postalCode0 = administrativeArea0.getPostalCode();
      assertNull(postalCode0);
  }

  @Test
  public void test23()  throws Throwable  {
      AdministrativeArea administrativeArea0 = new AdministrativeArea();
      Map<QName, String> map0 = administrativeArea0.getOtherAttributes();
      assertEquals(0, map0.size());
  }

  @Test
  public void test24()  throws Throwable  {
      AdministrativeArea administrativeArea0 = new AdministrativeArea();
      AdministrativeArea.SubAdministrativeArea administrativeArea_SubAdministrativeArea0 = new AdministrativeArea.SubAdministrativeArea();
      administrativeArea0.setSubAdministrativeArea(administrativeArea_SubAdministrativeArea0);
      assertNull(administrativeArea0.getType());
  }

  @Test
  public void test25()  throws Throwable  {
      AdministrativeArea administrativeArea0 = new AdministrativeArea();
      administrativeArea0.setPostalCode((PostalCode) null);
      assertNull(administrativeArea0.getType());
  }

  @Test
  public void test26()  throws Throwable  {
      AdministrativeArea administrativeArea0 = new AdministrativeArea();
      String string0 = administrativeArea0.getUsageType();
      assertNull(string0);
  }

  @Test
  public void test27()  throws Throwable  {
      AdministrativeArea administrativeArea0 = new AdministrativeArea();
      Locality locality0 = administrativeArea0.getLocality();
      assertNull(locality0);
  }

  @Test
  public void test28()  throws Throwable  {
      AdministrativeArea.AdministrativeAreaName administrativeArea_AdministrativeAreaName0 = new AdministrativeArea.AdministrativeAreaName();
      String string0 = administrativeArea_AdministrativeAreaName0.getType();
      assertNull(string0);
  }

  @Test
  public void test29()  throws Throwable  {
      AdministrativeArea.AdministrativeAreaName administrativeArea_AdministrativeAreaName0 = new AdministrativeArea.AdministrativeAreaName();
      administrativeArea_AdministrativeAreaName0.setContent((String) null);
      assertNull(administrativeArea_AdministrativeAreaName0.getContent());
  }

  @Test
  public void test30()  throws Throwable  {
      AdministrativeArea.AdministrativeAreaName administrativeArea_AdministrativeAreaName0 = new AdministrativeArea.AdministrativeAreaName();
      String string0 = administrativeArea_AdministrativeAreaName0.getContent();
      assertNull(string0);
  }

  @Test
  public void test31()  throws Throwable  {
      AdministrativeArea.AdministrativeAreaName administrativeArea_AdministrativeAreaName0 = new AdministrativeArea.AdministrativeAreaName();
      Map<QName, String> map0 = administrativeArea_AdministrativeAreaName0.getOtherAttributes();
      assertEquals(true, map0.isEmpty());
  }

  @Test
  public void test32()  throws Throwable  {
      AdministrativeArea.AdministrativeAreaName administrativeArea_AdministrativeAreaName0 = new AdministrativeArea.AdministrativeAreaName();
      administrativeArea_AdministrativeAreaName0.setType((String) null);
      assertNull(administrativeArea_AdministrativeAreaName0.getType());
  }

  @Test
  public void test33()  throws Throwable  {
      AdministrativeArea.AdministrativeAreaName administrativeArea_AdministrativeAreaName0 = new AdministrativeArea.AdministrativeAreaName();
      administrativeArea_AdministrativeAreaName0.setCode((String) null);
      assertNull(administrativeArea_AdministrativeAreaName0.getContent());
  }

  @Test
  public void test34()  throws Throwable  {
      AdministrativeArea.AdministrativeAreaName administrativeArea_AdministrativeAreaName0 = new AdministrativeArea.AdministrativeAreaName();
      String string0 = administrativeArea_AdministrativeAreaName0.getCode();
      assertNull(string0);
  }

  @Test
  public void test35()  throws Throwable  {
      AdministrativeArea administrativeArea0 = new AdministrativeArea();
      List<AddressLine> list0 = administrativeArea0.getAddressLine();
      List<AddressLine> list1 = administrativeArea0.getAddressLine();
      assertNotNull(list1);
      assertSame(list1, list0);
  }

  @Test
  public void test36()  throws Throwable  {
      AdministrativeArea administrativeArea0 = new AdministrativeArea();
      List<AdministrativeArea.AdministrativeAreaName> list0 = administrativeArea0.getAdministrativeAreaName();
      List<AdministrativeArea.AdministrativeAreaName> list1 = administrativeArea0.getAdministrativeAreaName();
      assertSame(list1, list0);
      assertNotNull(list1);
  }

  @Test
  public void test37()  throws Throwable  {
      AdministrativeArea administrativeArea0 = new AdministrativeArea();
      List<Object> list0 = administrativeArea0.getAny();
      List<Object> list1 = administrativeArea0.getAny();
      assertSame(list1, list0);
      assertNotNull(list1);
  }

  @Test
  public void test38()  throws Throwable  {
      AdministrativeArea.SubAdministrativeArea administrativeArea_SubAdministrativeArea0 = new AdministrativeArea.SubAdministrativeArea();
      List<AddressLine> list0 = administrativeArea_SubAdministrativeArea0.getAddressLine();
      List<AddressLine> list1 = administrativeArea_SubAdministrativeArea0.getAddressLine();
      assertNotNull(list1);
      assertSame(list1, list0);
  }

  @Test
  public void test39()  throws Throwable  {
      AdministrativeArea.SubAdministrativeArea administrativeArea_SubAdministrativeArea0 = new AdministrativeArea.SubAdministrativeArea();
      List<AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName> list0 = administrativeArea_SubAdministrativeArea0.getSubAdministrativeAreaName();
      List<AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName> list1 = administrativeArea_SubAdministrativeArea0.getSubAdministrativeAreaName();
      assertSame(list1, list0);
      assertNotNull(list1);
  }

  @Test
  public void test40()  throws Throwable  {
      AdministrativeArea.SubAdministrativeArea administrativeArea_SubAdministrativeArea0 = new AdministrativeArea.SubAdministrativeArea();
      List<Object> list0 = administrativeArea_SubAdministrativeArea0.getAny();
      List<Object> list1 = administrativeArea_SubAdministrativeArea0.getAny();
      assertSame(list1, list0);
      assertNotNull(list1);
  }
}
