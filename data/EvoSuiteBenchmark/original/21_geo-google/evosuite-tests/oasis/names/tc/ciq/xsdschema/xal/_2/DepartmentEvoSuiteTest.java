/*
 * This file was automatically generated by EvoSuite
 */

package oasis.names.tc.ciq.xsdschema.xal._2;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.List;
import java.util.Map;
import javax.xml.namespace.QName;
import oasis.names.tc.ciq.xsdschema.xal._2.AddressLine;
import oasis.names.tc.ciq.xsdschema.xal._2.Department;
import oasis.names.tc.ciq.xsdschema.xal._2.MailStopType;
import oasis.names.tc.ciq.xsdschema.xal._2.PostalCode;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DepartmentEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Department.DepartmentName department_DepartmentName0 = new Department.DepartmentName();
      department_DepartmentName0.setType("");
      assertNull(department_DepartmentName0.getContent());
  }

  @Test
  public void test1()  throws Throwable  {
      Department.DepartmentName department_DepartmentName0 = new Department.DepartmentName();
      String string0 = department_DepartmentName0.getContent();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      Department.DepartmentName department_DepartmentName0 = new Department.DepartmentName();
      String string0 = department_DepartmentName0.getCode();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      Department.DepartmentName department_DepartmentName0 = new Department.DepartmentName();
      department_DepartmentName0.setContent("(");
      assertNull(department_DepartmentName0.getType());
  }

  @Test
  public void test4()  throws Throwable  {
      Department.DepartmentName department_DepartmentName0 = new Department.DepartmentName();
      Map<QName, String> map0 = department_DepartmentName0.getOtherAttributes();
      assertEquals(true, map0.isEmpty());
  }

  @Test
  public void test5()  throws Throwable  {
      Department.DepartmentName department_DepartmentName0 = new Department.DepartmentName();
      department_DepartmentName0.setCode("*ej$~%c");
      assertEquals("*ej$~%c", department_DepartmentName0.getCode());
  }

  @Test
  public void test6()  throws Throwable  {
      Department.DepartmentName department_DepartmentName0 = new Department.DepartmentName();
      String string0 = department_DepartmentName0.getType();
      assertNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      Department department0 = new Department();
      PostalCode postalCode0 = new PostalCode();
      department0.setPostalCode(postalCode0);
      assertNull(postalCode0.getType());
  }

  @Test
  public void test8()  throws Throwable  {
      Department department0 = new Department();
      PostalCode postalCode0 = department0.getPostalCode();
      assertNull(postalCode0);
  }

  @Test
  public void test9()  throws Throwable  {
      Department department0 = new Department();
      department0.setType("_~Gu`@$=3");
      assertEquals("_~Gu`@$=3", department0.getType());
  }

  @Test
  public void test10()  throws Throwable  {
      Department department0 = new Department();
      MailStopType mailStopType0 = department0.getMailStop();
      assertNull(mailStopType0);
  }

  @Test
  public void test11()  throws Throwable  {
      Department department0 = new Department();
      String string0 = department0.getType();
      assertNull(string0);
  }

  @Test
  public void test12()  throws Throwable  {
      Department department0 = new Department();
      Map<QName, String> map0 = department0.getOtherAttributes();
      assertEquals(true, map0.isEmpty());
  }

  @Test
  public void test13()  throws Throwable  {
      Department department0 = new Department();
      MailStopType mailStopType0 = new MailStopType();
      department0.setMailStop(mailStopType0);
      assertNull(mailStopType0.getType());
  }

  @Test
  public void test14()  throws Throwable  {
      Department department0 = new Department();
      List<AddressLine> list0 = department0.getAddressLine();
      List<AddressLine> list1 = department0.getAddressLine();
      assertNotNull(list1);
      assertSame(list1, list0);
  }

  @Test
  public void test15()  throws Throwable  {
      Department department0 = new Department();
      List<Department.DepartmentName> list0 = department0.getDepartmentName();
      List<Department.DepartmentName> list1 = department0.getDepartmentName();
      assertSame(list1, list0);
      assertNotNull(list1);
  }

  @Test
  public void test16()  throws Throwable  {
      Department department0 = new Department();
      List<Object> list0 = department0.getAny();
      List<Object> list1 = department0.getAny();
      assertNotNull(list1);
      assertSame(list1, list0);
  }
}
