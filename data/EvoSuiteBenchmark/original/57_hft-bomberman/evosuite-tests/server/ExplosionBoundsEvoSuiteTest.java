/*
 * This file was automatically generated by EvoSuite
 */

package server;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Point;
import org.junit.BeforeClass;
import server.ExplosionBounds;

@RunWith(EvoSuiteRunner.class)
public class ExplosionBoundsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ExplosionBounds explosionBounds0 = new ExplosionBounds((-1), (-1), (-1), 0);
      int int0 = explosionBounds0.getDown();
      assertEquals(0, explosionBounds0.getLeft());
      assertEquals(-1, explosionBounds0.getUp());
      assertEquals((-1), int0);
      assertEquals(-1, explosionBounds0.getRight());
  }

  @Test
  public void test1()  throws Throwable  {
      ExplosionBounds explosionBounds0 = new ExplosionBounds((-1), (-1), 0, 0);
      int int0 = explosionBounds0.getLeft();
      assertEquals(-1, explosionBounds0.getUp());
      assertEquals(-1, explosionBounds0.getDown());
      assertEquals(0, int0);
      assertEquals(0, explosionBounds0.getRight());
  }

  @Test
  public void test2()  throws Throwable  {
      ExplosionBounds explosionBounds0 = new ExplosionBounds((-599), (-599), (-599), (-1));
      int int0 = explosionBounds0.getUp();
      assertEquals(-599, explosionBounds0.getDown());
      assertEquals((-599), int0);
      assertEquals(-599, explosionBounds0.getRight());
      assertEquals(-1, explosionBounds0.getLeft());
  }

  @Test
  public void test3()  throws Throwable  {
      ExplosionBounds explosionBounds0 = new ExplosionBounds(0, 2020, 324, 0);
      int int0 = explosionBounds0.getRight();
      assertEquals(0, explosionBounds0.getUp());
      assertEquals(0, explosionBounds0.getLeft());
      assertEquals(324, int0);
      assertEquals(2020, explosionBounds0.getDown());
  }

  @Test
  public void test4()  throws Throwable  {
      ExplosionBounds explosionBounds0 = new ExplosionBounds(1, (-938), (-938), 1);
      Point point0 = new Point();
      boolean boolean0 = explosionBounds0.contain(point0);
      assertEquals(1, explosionBounds0.getUp());
      assertEquals(1, explosionBounds0.getLeft());
      assertEquals(-938, explosionBounds0.getRight());
      assertEquals(false, boolean0);
      assertEquals(-938, explosionBounds0.getDown());
  }

  @Test
  public void test5()  throws Throwable  {
      ExplosionBounds explosionBounds0 = new ExplosionBounds((-1), (-1), 0, 0);
      Point point0 = new Point((-1), (-1));
      boolean boolean0 = explosionBounds0.contain(point0);
      assertEquals(-1, explosionBounds0.getDown());
      assertEquals(-1, explosionBounds0.getUp());
      assertEquals(false, boolean0);
      assertEquals(0, explosionBounds0.getLeft());
      assertEquals(0, explosionBounds0.getRight());
  }

  @Test
  public void test6()  throws Throwable  {
      Point point0 = new Point();
      ExplosionBounds explosionBounds0 = new ExplosionBounds((-1), (-504), (-1996), (-1));
      boolean boolean0 = explosionBounds0.contain(point0);
      assertEquals(-504, explosionBounds0.getDown());
      assertEquals(-1, explosionBounds0.getUp());
      assertEquals(false, boolean0);
      assertEquals(-1996, explosionBounds0.getRight());
      assertEquals(-1, explosionBounds0.getLeft());
  }

  @Test
  public void test7()  throws Throwable  {
      ExplosionBounds explosionBounds0 = new ExplosionBounds((-599), (-599), (-599), (-1));
      Point point0 = new Point(0, (-599));
      boolean boolean0 = explosionBounds0.contain(point0);
      assertEquals(-1, explosionBounds0.getLeft());
      assertEquals(-599, explosionBounds0.getUp());
      assertEquals(-599, explosionBounds0.getRight());
      assertEquals(-599, explosionBounds0.getDown());
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      ExplosionBounds explosionBounds0 = new ExplosionBounds((-203), 1224, 1140, 0);
      Point point0 = new Point();
      boolean boolean0 = explosionBounds0.contain(point0);
      assertEquals(0, explosionBounds0.getLeft());
      assertEquals(-203, explosionBounds0.getUp());
      assertEquals(1224, explosionBounds0.getDown());
      assertEquals(1140, explosionBounds0.getRight());
      assertEquals(true, boolean0);
  }
}
