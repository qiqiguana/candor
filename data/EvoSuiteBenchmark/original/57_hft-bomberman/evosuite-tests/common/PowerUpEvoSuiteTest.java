/*
 * This file was automatically generated by EvoSuite
 */

package common;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import common.GameObject;
import common.PowerUp;
import java.awt.Point;
import java.util.Collection;
import java.util.HashSet;
import javax.swing.JFormattedTextField;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PowerUpEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PowerUp powerUp0 = new PowerUp((Point) null);
      powerUp0.die();
      assertEquals(false, powerUp0.isVisible());
      assertEquals(true, powerUp0.isActive());
  }

  @Test
  public void test1()  throws Throwable  {
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField();
      Point point0 = jFormattedTextField0.getLocation();
      PowerUp powerUp0 = new PowerUp(point0);
      HashSet<GameObject> hashSet0 = new HashSet<GameObject>();
      powerUp0.updateWithCollisionCheck((Collection<GameObject>) hashSet0);
      assertEquals(false, powerUp0.isVisible());
  }

  @Test
  public void test2()  throws Throwable  {
      PowerUp powerUp0 = new PowerUp((Point) null);
      powerUp0.setType("t!n9");
      int int0 = powerUp0.getTypeInt();
      assertEquals(0, int0);
      assertEquals(false, powerUp0.isVisible());
  }

  @Test
  public void test3()  throws Throwable  {
      PowerUp powerUp0 = new PowerUp((Point) null);
      powerUp0.update();
      assertEquals(false, powerUp0.isVisible());
  }

  @Test
  public void test4()  throws Throwable  {
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField();
      Point point0 = jFormattedTextField0.getLocation();
      PowerUp powerUp0 = new PowerUp(point0);
      boolean boolean0 = powerUp0.isAccessable();
      assertEquals(true, boolean0);
      assertEquals(false, powerUp0.isVisible());
  }

  @Test
  public void test5()  throws Throwable  {
      PowerUp powerUp0 = new PowerUp((Point) null);
      // Undeclared exception!
      try {
        powerUp0.getCollisionRectangle();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      PowerUp powerUp0 = new PowerUp((Point) null);
      // Undeclared exception!
      try {
        powerUp0.getTypeInt();
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * StringEquals is not supposed to work on a null caller
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField();
      Point point0 = jFormattedTextField0.getLocation();
      PowerUp powerUp0 = new PowerUp(point0);
      boolean boolean0 = powerUp0.collide((GameObject) powerUp0);
      assertEquals(false, powerUp0.isVisible());
      assertEquals(false, boolean0);
  }
}
