/*
 * This file was automatically generated by EvoSuite
 */

package client.gui;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import client.gui.Game;
import java.awt.Component;
import java.awt.event.KeyEvent;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuKeyEvent;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class GameEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Game game0 = new Game();
      assertNotNull(game0);
      
      KeyEvent keyEvent0 = new KeyEvent((Component) game0, 14, (long) 14, 14, 14, 'g');
      game0.keyReleased(keyEvent0);
      assertEquals(true, game0.isFocusable());
      assertEquals("java.awt.event.KeyEvent[unknown type,keyCode=14,keyText=Unknown keyCode: 0xe,keyChar='g',modifiers=Meta+Ctrl+Alt,extModifiers=Meta+Ctrl+Alt,keyLocation=KEY_LOCATION_UNKNOWN,rawCode=0,primaryLevelUnicode=0,scancode=0] on client.gui.Game[,0,0,800x600,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", keyEvent0.toString());
      assertEquals(1, game0.getComponentCount());
      assertEquals(800, game0.getWidth());
  }

  @Test
  public void test1()  throws Throwable  {
      Game game0 = new Game();
      assertNotNull(game0);
      
      MenuElement[] menuElementArray0 = new MenuElement[4];
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent((Component) game0, (-1), (long) (-1), (-1), (-1), '.', menuElementArray0, menuSelectionManager0);
      game0.keyTyped((KeyEvent) menuKeyEvent0);
      assertEquals("javax.swing.event.MenuKeyEvent[unknown type,keyCode=-1,keyText=Unknown keyCode: 0x-1,keyChar='.',modifiers=Meta+Ctrl+Alt+Shift+Alt Graph+Button1,extModifiers=Meta+Ctrl+Alt+Shift+Alt Graph+Button1+Button2+Button3,keyLocation=KEY_LOCATION_UNKNOWN,rawCode=0,primaryLevelUnicode=0,scancode=0] on client.gui.Game[,0,0,800x600,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", menuKeyEvent0.toString());
      assertEquals(1, game0.countComponents());
      assertEquals(true, game0.isFocusTraversable());
      assertEquals("client.gui.Game[,0,0,800x600,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", game0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      Game game0 = new Game();
      assertNotNull(game0);
      
      KeyEvent keyEvent0 = new KeyEvent((Component) game0, 0, (long) 0, 0, 0, '\u0017');
      game0.keyPressed(keyEvent0);
      assertEquals("java.awt.event.KeyEvent[unknown type,keyCode=0,keyText=Unknown keyCode: 0x0,keyChar='\u0017',keyLocation=KEY_LOCATION_UNKNOWN,rawCode=0,primaryLevelUnicode=0,scancode=0] on client.gui.Game[,0,0,800x600,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", keyEvent0.toString());
      assertEquals(1, game0.getComponentCount());
      assertEquals(true, game0.isFocusable());
      assertEquals("client.gui.Game[,0,0,800x600,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", game0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      Game game0 = new Game();
      assertNotNull(game0);
      
      KeyEvent keyEvent0 = new KeyEvent((Component) game0, 1121, (long) 1121, 1121, 27, '&');
      // Undeclared exception!
      try {
        game0.keyPressed(keyEvent0);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class client.BomberClient
         */
      }
  }
}
