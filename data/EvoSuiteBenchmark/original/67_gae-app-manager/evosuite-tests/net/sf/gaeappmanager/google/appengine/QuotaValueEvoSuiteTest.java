/*
 * This file was automatically generated by EvoSuite
 */

package net.sf.gaeappmanager.google.appengine;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.math.BigDecimal;
import net.sf.gaeappmanager.google.appengine.Quota;
import net.sf.gaeappmanager.google.appengine.QuotaValue;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class QuotaValueEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      QuotaValue quotaValue0 = new QuotaValue();
      quotaValue0.setUnit(";6qJz*-&Z]^d.?*}9t");
      assertEquals(false, quotaValue0.isOkay());
  }

  @Test
  public void test1()  throws Throwable  {
      QuotaValue quotaValue0 = new QuotaValue();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      quotaValue0.setLimit(bigDecimal0);
      assertEquals(false, quotaValue0.isOkay());
  }

  @Test
  public void test2()  throws Throwable  {
      QuotaValue quotaValue0 = new QuotaValue();
      boolean boolean0 = quotaValue0.isOkay();
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      QuotaValue quotaValue0 = new QuotaValue();
      quotaValue0.getQuota();
      assertEquals(false, quotaValue0.isOkay());
  }

  @Test
  public void test4()  throws Throwable  {
      QuotaValue quotaValue0 = new QuotaValue();
      String string0 = quotaValue0.getUnit();
      assertNotNull(string0);
      assertEquals(false, quotaValue0.isOkay());
  }

  @Test
  public void test5()  throws Throwable  {
      QuotaValue quotaValue0 = new QuotaValue();
      BigDecimal bigDecimal0 = quotaValue0.getLimit();
      assertNotNull(bigDecimal0);
      assertEquals(false, quotaValue0.isOkay());
  }

  @Test
  public void test6()  throws Throwable  {
      QuotaValue quotaValue0 = new QuotaValue();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      quotaValue0.setPercent(bigDecimal0);
      assertEquals(false, quotaValue0.isOkay());
  }

  @Test
  public void test7()  throws Throwable  {
      QuotaValue quotaValue0 = new QuotaValue();
      BigDecimal bigDecimal0 = quotaValue0.getValue();
      assertEquals(false, quotaValue0.isOkay());
      assertNotNull(bigDecimal0);
  }

  @Test
  public void test8()  throws Throwable  {
      QuotaValue quotaValue0 = new QuotaValue();
      Quota quota0 = Quota.DEPLOYMENTS_COUNT;
      quotaValue0.setQuota(quota0);
      assertEquals(false, quotaValue0.isOkay());
  }

  @Test
  public void test9()  throws Throwable  {
      QuotaValue quotaValue0 = new QuotaValue();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      quotaValue0.setValue(bigDecimal0);
      assertEquals(false, quotaValue0.isOkay());
  }

  @Test
  public void test10()  throws Throwable  {
      QuotaValue quotaValue0 = new QuotaValue();
      quotaValue0.setOkay(false);
      assertEquals(false, quotaValue0.isOkay());
  }

  @Test
  public void test11()  throws Throwable  {
      QuotaValue quotaValue0 = new QuotaValue();
      BigDecimal bigDecimal0 = quotaValue0.getPercent();
      assertNotNull(bigDecimal0);
      assertEquals(false, quotaValue0.isOkay());
  }
}
