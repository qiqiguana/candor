/*
 * This file was automatically generated by EvoSuite
 */

package com.imsmart.servlet;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.imsmart.servlet.HTMLFilter;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class HTMLFilterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HTMLFilter hTMLFilter0 = new HTMLFilter();
      assertNotNull(hTMLFilter0);
  }

  @Test
  public void test1()  throws Throwable  {
      String string0 = HTMLFilter.filter((String) null);
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      String string0 = HTMLFilter.filter("P;.\":");
      assertEquals("P;.&quot;:", string0);
      assertNotNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      String string0 = HTMLFilter.filter("P;.&quot;:");
      assertNotNull(string0);
      assertEquals("P;.&amp;quot;:", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      String string0 = HTMLFilter.filter("$$n/eSQ<|");
      assertEquals("$$n/eSQ&lt;|", string0);
      assertNotNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      String string0 = HTMLFilter.filter("]..3cadqdda(dD-[k>:");
      assertEquals("]..3cadqdda(dD-[k&gt;:", string0);
      assertNotNull(string0);
  }
}
