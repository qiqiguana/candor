<?xml version="1.0" encoding="UTF-8" ?>
<taglib xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"
	version="2.0">
	<description>Ext4J Tag Library</description>
	<display-name>Ext4J TagLib</display-name>
	<tlib-version>1.0</tlib-version>
	<short-name>ext4j</short-name>
	<uri>http://ext4j.sourceforge.net/taglib</uri>

	<!-- ############################################################## -->
	<!-- Repeater Tags -->
	<!-- ############################################################## -->
	<tag>
		<description>
			The basic iteration tag, accepting many different collection
			types and supporting subsetting and other functionality
		</description>
		<name>repeater</name>
		<tag-class>net.sourceforge.ext4j.taglib.tag.repeater.RepeaterTag</tag-class>
		<tei-class>
			org.apache.taglibs.standard.tei.ForEachTEI
		</tei-class>
		<body-content>JSP</body-content>
		<attribute>
			<description>
				Collection of items to iterate over.
			</description>
			<name>items</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description>
				If items specified: Iteration begins at the item located
				at the specified index. First item of the collection has
				index 0. If items not specified: Iteration begins with
				index set at the value specified.
			</description>
			<name>begin</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<type>int</type>
		</attribute>
		<attribute>
			<description>
				If items specified: Iteration ends at the item located
				at the specified index (inclusive). If items not
				specified: Iteration ends when index reaches the value
				specified.
			</description>
			<name>end</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<type>int</type>
		</attribute>
		<attribute>
			<description>
				Iteration will only process every step items of the
				collection, starting with the first one.
			</description>
			<name>step</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<type>int</type>
		</attribute>
		<!--
			<attribute>
			<description>
			Name of the exported scoped variable for the
			current item of the iteration. This scoped
			variable has nested visibility. Its type depends
			on the object of the underlying collection.
			</description>
			<name>var</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			</attribute>
			<attribute>
			<description>
			Name of the exported scoped variable for the
			status of the iteration. Object exported is of type
			javax.servlet.jsp.jstl.core.LoopTagStatus. This scoped variable has nested
			visibility.
			</description>
			<name>varStatus</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			</attribute>
		-->
	</tag>
	<!-- ItemTemplate -->
	<tag>
		<description>
			Defines the template of the element to render. Must be used in a LoopTag
		</description>
		<name>itemTemplate</name>
		<tag-class>net.sourceforge.ext4j.taglib.tag.repeater.ItemTemplateTag</tag-class>
		<body-content>JSP</body-content>
	</tag>
	<!-- HeaderTemplate -->
	<tag>
		<description>
			Defines the template of the header for an iteration.
			WARNING: place this tag BEFORE other tags to make sure it's rendered before any items get rendered.
			Must be used in a LoopTag
		</description>
		<name>headerTemplate</name>
		<tag-class>net.sourceforge.ext4j.taglib.tag.repeater.HeaderTemplateTag</tag-class>
		<body-content>JSP</body-content>
	</tag>
	<!-- FooterTemplate -->
	<tag>
		<description>
			Defines the template of the footer for an iteration.
			WARNING: place this tag AFTER other tags to make sure it's rendered after all items get rendered.
			Must be used in a LoopTag
		</description>
		<name>footerTemplate</name>
		<tag-class>net.sourceforge.ext4j.taglib.tag.repeater.FooterTemplateTag</tag-class>
		<body-content>JSP</body-content>
	</tag>
	<!-- SeparatorTemplate -->
	<tag>
		<description>
			Defines the template of the footer for an iteration.
			WARNING: place this tag AFTER the itemTemplate and BEFORE the footerTemplate.
			Must be used in a LoopTag
		</description>
		<name>separatorTemplate</name>
		<tag-class>net.sourceforge.ext4j.taglib.tag.repeater.SeparatorTemplateTag</tag-class>
		<body-content>JSP</body-content>
	</tag>

	<!-- ############################################################## -->
	<!-- Misc. Tags -->
	<!-- ############################################################## -->

	<!-- Simple Bread crumbs -->
	<tag>
		<description>
			Bread crumbs Tag
		</description>
		<name>simple-breadcrumbs</name>
		<tag-class>net.sourceforge.ext4j.taglib.tag.SimpleBreadcrumbsTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<name>breadcrumbs</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>separator</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
	</tag>
	<!-- ############################################################## -->
	<!-- Pagination Tag -->
	<!-- ############################################################## -->
	<tag>
		<description>Pagination Tag</description>
		<name>pagination</name>
		<tag-class>net.sourceforge.ext4j.taglib.tag.PaginationTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<name>from</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>total</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>byPage</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>pages</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>url</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>fromParamName</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>toParamName</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>useFromToOnFirstPage</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
	</tag>

	<!-- ############################################################## -->
	<!-- Functions -->
	<!-- ############################################################## -->
	<!-- year -->
	<function>
		<description>
      		Return current year + offset
    	</description>
		<name>year</name>
		<function-class>net.sourceforge.ext4j.taglib.tag.Functions</function-class>
		<function-signature>int year(int)</function-signature>
		<example>
      		This year is ${fn:year(0)}. Three years from now it will be ${fn:year(3)}. Two years ago it was ${fn:year(-2)}
    	</example>
	</function>
	<!-- capFirstLetters -->
	<function>
		<description>
      		Camel Case with Spaces (e.g. "HELLO MY FRIEND" would become "Hello My Friend")
    	</description>
		<name>capFirstLetters</name>
		<function-class>net.sourceforge.ext4j.taglib.tag.Functions</function-class>
		<function-signature>java.lang.String capFirstLetters(java.lang.String)</function-signature>
	</function>
	<!-- ordinal -->
	<function>
		<description>
      		Return the ordinal of the given number
    	</description>
		<name>ordinal</name>
		<function-class>net.sourceforge.ext4j.taglib.tag.Functions</function-class>
		<function-signature>java.lang.String ordinal(int)</function-signature>
		<example>
      		"I'm the ${fn:ordinal(1)}." would render "I'm the 1st."
    	</example>
	</function>
	<!-- blurb -->
	<function>
		<description>
      		Return blurb of given text (will not cut a word)
    	</description>
		<name>blurb</name>
		<function-class>net.sourceforge.ext4j.taglib.tag.Functions</function-class>
		<function-signature>java.lang.String blurb(java.lang.String, int)</function-signature>
	</function>
	<!-- round -->
	<function>
		<description>
      		Return rounded number
    	</description>
		<name>round</name>
		<function-class>net.sourceforge.ext4j.taglib.tag.Functions</function-class>
		<function-signature>long round(double)</function-signature>
	</function>
	<!-- toUpper -->
	<function>
		<description>
      		Return uppercase character
    	</description>
		<name>toUpper</name>
		<function-class>net.sourceforge.ext4j.taglib.tag.Functions</function-class>
		<function-signature>char toUpper(char)</function-signature>
	</function>
	<!-- ForDigit -->
	<function>
		<description>
      		Determines the character representation for a specific digit in the specified radix. If the value of radix is not a valid radix, or the value of digit is not a valid digit in the specified radix, the null character ('\u0000') is returned.
			The radix argument is valid if it is greater than or equal to MIN_RADIX and less than or equal to MAX_RADIX. The digit argument is valid if 0 &lt;= digit &lt;= radix.
			If the digit is less than 10, then '0' + digit is returned. Otherwise, the value 'a' + digit - 10 is returned.
   		</description>
		<name>forDigit</name>
		<function-class>net.sourceforge.ext4j.taglib.tag.Functions</function-class>
		<function-signature>char forDigit(int, int)</function-signature>
		<example>
      First letter in alphabet is ${fn:forDigit(1,36)}.
    </example>
	</function>
	<!-- Length (extended) -->
	<function>
		<description>
	      	Returns the number of items in a collection, or the number of characters in a string.
	      	This version supports Iterable classes.
	    </description>
		<name>length</name>
		<function-class>net.sourceforge.ext4j.taglib.tag.Functions</function-class>
		<function-signature>int length(java.lang.Object)</function-signature>
		<example>
      You have ${fn:length(shoppingCart.products)} in your shopping cart.
    </example>
	</function>
	<!-- Date format Function  -->
	<function>
	    <description>
	      	Format a date with a pattern
	    </description>
	    <name>dateFormat</name>
	    <function-class>net.sourceforge.ext4j.taglib.tag.Functions</function-class>
	    <function-signature>String dateFormat(java.util.Date,java.lang.String)</function-signature>
	    <example>
	      ${fn:dateFormat(date, pattern)}
	    </example>
  	</function>
  	<!-- Decimal format Function  -->
	<function>
	    <description>
	      	Format a decimal with a pattern
	    </description>
	    <name>decimalFormat</name>
	    <function-class>net.sourceforge.ext4j.taglib.tag.Functions</function-class>
	    <function-signature>String decimalFormat(double,java.lang.String)</function-signature>
	    <example>
	      ${fn:decimalFormat(75.0123, "##.##")}
	    </example>
  	</function>
	<!-- Set Param Function  -->
	<function>
	    <description>
	      Set param in Request object
	    </description>
	    <name>setParam</name>
	    <function-class>net.sourceforge.ext4j.taglib.tag.Functions</function-class>
	    <function-signature>net.sourceforge.ext4j.taglib.bo.IRequest setParam(java.lang.String,java.lang.String,net.sourceforge.ext4j.taglib.bo.IRequest)</function-signature>
	    <example>
	      ${fn:setParam("sort", "MostRecent", currentRequest)}
	    </example>
  	</function>
	<!-- Remove Param Function  -->
	<function>
	    <description>
	      Remove param from Request object
	    </description>
	    <name>removeParam</name>
	    <function-class>net.sourceforge.ext4j.taglib.tag.Functions</function-class>
	    <function-signature>net.sourceforge.ext4j.taglib.bo.IRequest removeParam(java.lang.String,net.sourceforge.ext4j.taglib.bo.IRequest)</function-signature>
	    <example>
	      ${fn:removeParam("sort", currentRequest)}
	    </example>
  	</function>
  	<!-- Add Param Function  -->
	<function>
	    <description>
	      Add param to Request object
	    </description>
	    <name>addParam</name>
	    <function-class>net.sourceforge.ext4j.taglib.tag.Functions</function-class>
	    <function-signature>net.sourceforge.ext4j.taglib.bo.IRequest addParam(java.lang.String,java.lang.String,net.sourceforge.ext4j.taglib.bo.IRequest)</function-signature>
	    <example>
	      ${fn:addParam("sort", "MostRecent", currentRequest)}
	    </example>
  	</function>
</taglib>