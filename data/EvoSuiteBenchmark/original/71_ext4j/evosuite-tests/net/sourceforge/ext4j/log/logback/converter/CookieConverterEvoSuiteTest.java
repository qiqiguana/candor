/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.ext4j.log.logback.converter;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import ch.qos.logback.classic.spi.ILoggingEvent;
import ch.qos.logback.classic.spi.LoggingEvent;
import net.sourceforge.ext4j.log.logback.converter.CookieConverter;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CookieConverterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CookieConverter cookieConverter0 = new CookieConverter();
      LoggingEvent loggingEvent0 = new LoggingEvent();
      String string0 = cookieConverter0.convert((ILoggingEvent) loggingEvent0);
      assertEquals("NA", string0);
      assertNotNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      CookieConverter cookieConverter0 = new CookieConverter();
      LoggingEvent loggingEvent0 = new LoggingEvent();
      Object[] objectArray0 = new Object[3];
      loggingEvent0.setArgumentArray(objectArray0);
      // Undeclared exception!
      try {
        cookieConverter0.convert((ILoggingEvent) loggingEvent0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * No thread-bound request found: Are you referring to request attributes outside of an actual web request, or processing a request outside of the originally receiving thread? If you are actually operating within a web request and still receive this message, your code is probably running outside of DispatcherServlet/DispatcherPortlet: In this case, use RequestContextListener or RequestContextFilter to expose the current request.
         */
      }
  }
}
