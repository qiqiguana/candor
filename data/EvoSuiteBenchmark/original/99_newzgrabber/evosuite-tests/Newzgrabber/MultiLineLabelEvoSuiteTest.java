/*
 * This file was automatically generated by EvoSuite
 */

package Newzgrabber;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import Newzgrabber.MultiLineLabel;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.geom.AffineTransform;
import javax.swing.JPasswordField;
import javax.swing.plaf.ColorUIResource;
import javax.swing.plaf.FontUIResource;
import javax.swing.table.JTableHeader;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MultiLineLabelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 0, 0);
      assertNotNull(multiLineLabel0);
      
      multiLineLabel0.setMarginWidth(0);
      assertEquals("canvas382", multiLineLabel0.getName());
      assertEquals("Newzgrabber.MultiLineLabel[canvas382,0,0,0x0,invalid]", multiLineLabel0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("~lz", 1, 1, 1);
      assertNotNull(multiLineLabel0);
      
      multiLineLabel0.setAlignment(1);
      assertEquals("canvas473", multiLineLabel0.getName());
      assertEquals("Newzgrabber.MultiLineLabel[canvas473,0,0,0x0,invalid]", multiLineLabel0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("l", 0, 0);
      assertNotNull(multiLineLabel0);
      
      // Undeclared exception!
      try {
        multiLineLabel0.addNotify();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 0);
      assertNotNull(multiLineLabel0);
      
      multiLineLabel0.paint((Graphics) null);
      assertEquals("canvas635", multiLineLabel0.getName());
      assertEquals(10, multiLineLabel0.getMarginHeight());
  }

  @Test
  public void test4()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("2", (-8), (-8), (-8));
      assertNotNull(multiLineLabel0);
      
      int int0 = multiLineLabel0.getMarginHeight();
      assertEquals("Newzgrabber.MultiLineLabel[canvas729,0,0,0x0,invalid]", multiLineLabel0.toString());
      assertEquals((-8), int0);
  }

  @Test
  public void test5()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("E]", (-380), (-380), (-380));
      assertNotNull(multiLineLabel0);
      
      JPasswordField jPasswordField0 = new JPasswordField();
      ColorUIResource colorUIResource0 = (ColorUIResource)jPasswordField0.getBackground();
      multiLineLabel0.setForeground((Color) colorUIResource0);
      assertEquals("Newzgrabber.MultiLineLabel[canvas808,0,0,0x0,invalid]", multiLineLabel0.toString());
      assertEquals("canvas808", multiLineLabel0.getName());
  }

  @Test
  public void test6()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", (-399), (-399), (-399));
      assertNotNull(multiLineLabel0);
      
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals("canvas884", multiLineLabel0.getName());
      assertEquals((-798.0), dimension0.getHeight(), 0.01D);
  }

  @Test
  public void test7()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("<((C");
      assertNotNull(multiLineLabel0);
      
      // Undeclared exception!
      try {
        multiLineLabel0.setLabel("<((C");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("rX4o", 0);
      assertNotNull(multiLineLabel0);
      
      int int0 = multiLineLabel0.getMarginWidth();
      assertEquals("Newzgrabber.MultiLineLabel[canvas1051,0,0,0x0,invalid]", multiLineLabel0.toString());
      assertEquals(10, int0);
  }

  @Test
  public void test9()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 0, 0);
      assertNotNull(multiLineLabel0);
      
      int int0 = multiLineLabel0.getAlignment();
      assertEquals("canvas1131", multiLineLabel0.getName());
      assertEquals(0, int0);
  }

  @Test
  public void test10()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("<((C");
      assertNotNull(multiLineLabel0);
      
      multiLineLabel0.getMinimumSize();
      assertEquals("canvas1220", multiLineLabel0.getName());
      assertEquals("Newzgrabber.MultiLineLabel[canvas1220,0,0,0x0,invalid]", multiLineLabel0.toString());
  }

  @Test
  public void test11()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("<((C");
      assertNotNull(multiLineLabel0);
      
      JTableHeader jTableHeader0 = new JTableHeader();
      FontUIResource fontUIResource0 = (FontUIResource)jTableHeader0.getFont();
      multiLineLabel0.setFont((Font) fontUIResource0);
      assertEquals("Newzgrabber.MultiLineLabel[canvas1302,0,0,0x0,invalid]", multiLineLabel0.toString());
      assertEquals("canvas1302", multiLineLabel0.getName());
  }

  @Test
  public void test12()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 0, 0);
      assertNotNull(multiLineLabel0);
      
      multiLineLabel0.setMarginHeight(0);
      assertEquals("Newzgrabber.MultiLineLabel[canvas1392,0,0,0x0,invalid]", multiLineLabel0.toString());
      assertEquals("canvas1392", multiLineLabel0.getName());
  }

  @Test
  public void test13()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("<((C");
      assertNotNull(multiLineLabel0);
      
      JTableHeader jTableHeader0 = new JTableHeader();
      FontUIResource fontUIResource0 = (FontUIResource)jTableHeader0.getFont();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(1655, 1655, 1655);
      Font font0 = fontUIResource0.deriveFont(affineTransform0);
      multiLineLabel0.setFont(font0);
      assertEquals("canvas1482", multiLineLabel0.getName());
      assertEquals("Newzgrabber.MultiLineLabel[canvas1482,0,0,0x0,invalid]", multiLineLabel0.toString());
  }

  @Test
  public void test14()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("2", (-8), (-8), (-8));
      assertNotNull(multiLineLabel0);
      
      // Undeclared exception!
      try {
        multiLineLabel0.print((Graphics) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("rX4o", 0);
      assertNotNull(multiLineLabel0);
      
      // Undeclared exception!
      try {
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("~lz", 1, 1, 1);
      assertNotNull(multiLineLabel0);
      
      // Undeclared exception!
      try {
        multiLineLabel0.print((Graphics) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
