/*
 * This file was automatically generated by EvoSuite
 */

package Newzgrabber;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import Newzgrabber.SortFilterModel;
import java.awt.Component;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import java.util.Vector;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SortFilterModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel((TableModel) defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      String string0 = sortFilterModel0.getColumnName(0);
      assertEquals("A", string0);
      assertNotNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel((TableModel) defaultTableModel0);
      // Undeclared exception!
      try {
        sortFilterModel0.isCellEditable(20, 20);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 20
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel((TableModel) defaultTableModel0);
      int int0 = sortFilterModel0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      SortFilterModel sortFilterModel0 = new SortFilterModel((TableModel) defaultTableModel0);
      sortFilterModel0.mouseReleased((MouseEvent) null);
      assertEquals(0, sortFilterModel0.getRowCount());
  }

  @Test
  public void test4()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      SortFilterModel sortFilterModel0 = new SortFilterModel((TableModel) defaultTableModel0);
      // Undeclared exception!
      try {
        sortFilterModel0.setValueAt((Object) "unknown type,updateRect=null", 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 0
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel((TableModel) defaultTableModel0);
      sortFilterModel0.updateTable();
      assertEquals(0, sortFilterModel0.getColumnCount());
  }

  @Test
  public void test6()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel((TableModel) defaultTableModel0);
      JTable jTable0 = new JTable();
      sortFilterModel0.setTable(jTable0);
      sortFilterModel0.sortTable((-1924));
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent((Component) jTable0, (-1696), (long) 0, (-7), (-7), (-7), (-1924), false, (-1924), 0, (-7));
      sortFilterModel0.mouseClicked((MouseEvent) mouseWheelEvent0);
      assertEquals(0, sortFilterModel0.getColumnCount());
  }

  @Test
  public void test7()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel((TableModel) defaultTableModel0);
      int int0 = sortFilterModel0.getRowCount();
      assertEquals(0, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel((TableModel) defaultTableModel0);
      sortFilterModel0.mouseEntered((MouseEvent) null);
      assertEquals(0, sortFilterModel0.getRowCount());
  }

  @Test
  public void test9()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel((TableModel) defaultTableModel0);
      Object object0 = sortFilterModel0.getValueAt((-1990), (-563));
      assertNull(object0);
  }

  @Test
  public void test10()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      SortFilterModel sortFilterModel0 = new SortFilterModel((TableModel) defaultTableModel0);
      Class<Object> class0 = sortFilterModel0.getColumnClass(2043);
      assertEquals(false, class0.isLocalClass());
  }

  @Test
  public void test11()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel((TableModel) defaultTableModel0);
      JTable jTable0 = new JTable();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent((Component) jTable0, (-1696), (long) 0, (-7), (-7), (-7), (-1924), false, (-1924), 0, (-7));
      sortFilterModel0.mouseExited((MouseEvent) mouseWheelEvent0);
      assertEquals("java.awt.event.MouseWheelEvent[unknown type,(-7,-7),absolute(0,0),button=0,modifiers=Alt+Shift+Alt Graph+Button1+Button2,extModifiers=Meta+Ctrl+Alt+Shift+Alt Graph+Button1+Button2+Button3,clickCount=-1924,scrollType=unknown scroll type,scrollAmount=0,wheelRotation=-7] on javax.swing.JTable[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=251658568,maximumSize=,minimumSize=,preferredSize=,autoCreateColumnsFromModel=true,autoResizeMode=AUTO_RESIZE_SUBSEQUENT_COLUMNS,cellSelectionEnabled=false,editingColumn=-1,editingRow=-1,gridColor=javax.swing.plaf.ColorUIResource[r=122,g=138,b=153],preferredViewportSize=java.awt.Dimension[width=450,height=400],rowHeight=16,rowMargin=1,rowSelectionAllowed=true,selectionBackground=javax.swing.plaf.ColorUIResource[r=184,g=207,b=229],selectionForeground=sun.swing.PrintColorUIResource[r=51,g=51,b=51],showHorizontalLines=true,showVerticalLines=true]", mouseWheelEvent0.toString());
  }

  @Test
  public void test12()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel((TableModel) defaultTableModel0);
      sortFilterModel0.mousePressed((MouseEvent) null);
      assertEquals(0, sortFilterModel0.getRowCount());
  }

  @Test
  public void test13()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel((TableModel) defaultTableModel0);
      sortFilterModel0.sortTable((-1990));
      assertEquals(0, sortFilterModel0.getRowCount());
  }

  @Test
  public void test14()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel((TableModel) defaultTableModel0);
      sortFilterModel0.mouseClicked((MouseEvent) null);
      assertEquals(0, sortFilterModel0.getRowCount());
  }

  @Test
  public void test15()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel((TableModel) defaultTableModel0);
      JTable jTable0 = new JTable();
      sortFilterModel0.setTable(jTable0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent((Component) jTable0, (-1696), (long) 0, (-7), (-7), (-7), (-1924), false, (-1924), 0, (-7));
      sortFilterModel0.mouseClicked((MouseEvent) mouseWheelEvent0);
      assertEquals(-7, mouseWheelEvent0.getX());
  }

  @Test
  public void test16()  throws Throwable  {
      Object[][] objectArray0 = new Object[10][9];
      Object[] objectArray1 = new Object[6];
      objectArray1[0] = (Object) 0;
      objectArray0[2] = objectArray1;
      objectArray0[3] = objectArray1;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray0[2]);
      SortFilterModel sortFilterModel0 = new SortFilterModel((TableModel) defaultTableModel0);
      // Undeclared exception!
      try {
        sortFilterModel0.sort(0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test17()  throws Throwable  {
      Object[][] objectArray0 = new Object[10][9];
      Object[] objectArray1 = new Object[9];
      objectArray1[0] = (Object) 0;
      objectArray1[1] = (Object) 0;
      objectArray0[3] = objectArray1;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      objectArray0[4] = objectArray0[3];
      defaultTableModel0.addColumn((Object) "SwingSelectedKey", objectArray0[4]);
      SortFilterModel sortFilterModel0 = new SortFilterModel((TableModel) defaultTableModel0);
      sortFilterModel0.setSort(false);
      // Undeclared exception!
      try {
        sortFilterModel0.sort(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 3 >= 1
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      Object[][] objectArray0 = new Object[10][9];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      defaultTableModel0.addColumn((Object) "SwingSelectedKey", objectArray0[4]);
      SortFilterModel sortFilterModel0 = new SortFilterModel((TableModel) defaultTableModel0);
      sortFilterModel0.setSort(false);
      sortFilterModel0.sort(0);
      assertEquals(1, sortFilterModel0.getColumnCount());
  }
}
