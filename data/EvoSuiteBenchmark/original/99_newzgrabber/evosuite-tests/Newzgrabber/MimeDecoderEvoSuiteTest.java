/*
 * This file was automatically generated by EvoSuite
 */

package Newzgrabber;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import Newzgrabber.UUDecoder;
import Newzgrabber.yEncDecoder;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import javax.swing.DebugGraphics;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MimeDecoderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, (OutputStream) null);
      base64Decoder0.getReader();
      assertEquals(false, base64Decoder0.ProgressSet);
      assertEquals(false, base64Decoder0.ABORT);
  }

  @Test
  public void test1()  throws Throwable  {
      UUDecoder uUDecoder0 = new UUDecoder((BufferedCustomInputStream) null, (OutputStream) null);
      uUDecoder0.getOutputStream();
      assertEquals(false, uUDecoder0.ABORT);
      assertEquals(false, uUDecoder0.ProgressSet);
  }

  @Test
  public void test2()  throws Throwable  {
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, (OutputStream) null);
      base64Decoder0.setStatusObject((Object) "ShortDescription");
      assertEquals(false, base64Decoder0.ABORT);
      assertEquals(false, base64Decoder0.ProgressSet);
  }

  @Test
  public void test3()  throws Throwable  {
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, (OutputStream) null);
      base64Decoder0.setTotalLines(1288L);
      // Undeclared exception!
      try {
        base64Decoder0.updateProgress();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      yEncDecoder yEncDecoder0 = new yEncDecoder((BufferedCustomInputStream) null);
      yEncDecoder0.setOutputStream((OutputStream) null);
      assertEquals(false, yEncDecoder0.ProgressSet);
      assertEquals(false, yEncDecoder0.ABORT);
  }

  @Test
  public void test5()  throws Throwable  {
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, (OutputStream) null);
      base64Decoder0.getLineCount();
      assertEquals(false, base64Decoder0.ABORT);
      assertEquals(false, base64Decoder0.ProgressSet);
  }

  @Test
  public void test6()  throws Throwable  {
      PrintStream printStream0 = DebugGraphics.logStream();
      UUDecoder uUDecoder0 = new UUDecoder((BufferedCustomInputStream) null, (OutputStream) printStream0);
      uUDecoder0.setStatusRow(1383);
      assertEquals(false, uUDecoder0.ProgressSet);
      assertEquals(false, uUDecoder0.ABORT);
  }

  @Test
  public void test7()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(155);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) byteArrayOutputStream0);
      UUDecoder uUDecoder0 = new UUDecoder((BufferedCustomInputStream) null, (OutputStream) bufferedOutputStream0);
      uUDecoder0.setReader((InputStream) null);
      assertEquals(false, uUDecoder0.ABORT);
      assertEquals(false, uUDecoder0.ProgressSet);
  }

  @Test
  public void test8()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      UUDecoder uUDecoder0 = new UUDecoder((BufferedCustomInputStream) null, (OutputStream) pipedOutputStream0);
      uUDecoder0.setBegin(false);
      assertEquals(false, uUDecoder0.ABORT);
      assertEquals(false, uUDecoder0.ProgressSet);
  }

  @Test
  public void test9()  throws Throwable  {
      yEncDecoder yEncDecoder0 = new yEncDecoder((BufferedCustomInputStream) null);
      yEncDecoder0.setLineCount(0L);
      assertEquals(false, yEncDecoder0.ProgressSet);
      assertEquals(false, yEncDecoder0.ABORT);
  }

  @Test
  public void test10()  throws Throwable  {
      yEncDecoder yEncDecoder0 = new yEncDecoder((BufferedCustomInputStream) null);
      yEncDecoder0.updateProgress();
      assertEquals(false, yEncDecoder0.ABORT);
      assertEquals(false, yEncDecoder0.ProgressSet);
  }
}
