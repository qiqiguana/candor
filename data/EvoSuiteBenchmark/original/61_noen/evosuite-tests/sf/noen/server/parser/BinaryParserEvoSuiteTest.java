/*
 * This file was automatically generated by EvoSuite
 */

package sf.noen.server.parser;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import org.junit.BeforeClass;
import sf.noen.server.parser.BinaryParser;

@RunWith(EvoSuiteRunner.class)
public class BinaryParserEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BinaryParser binaryParser0 = new BinaryParser((InputStream) null);
      // Undeclared exception!
      try {
        binaryParser0.parseBoolean();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * Not implemented
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1350);
      BinaryParser binaryParser0 = new BinaryParser((InputStream) pipedInputStream0);
      // Undeclared exception!
      try {
        binaryParser0.parseByte();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * Not implemented
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (int) (byte) (-34), 0);
      BinaryParser binaryParser0 = new BinaryParser((InputStream) byteArrayInputStream0);
      // Undeclared exception!
      try {
        binaryParser0.parseText();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * Not implemented
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      BinaryParser binaryParser0 = new BinaryParser((InputStream) null);
      // Undeclared exception!
      try {
        binaryParser0.parseInteger();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * Not implemented
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1350);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream((InputStream) pipedInputStream0, (InputStream) pipedInputStream0);
      BinaryParser binaryParser0 = new BinaryParser((InputStream) sequenceInputStream0);
      binaryParser0.stop();
      binaryParser0.run();
  }
}
