/*
 * This file was automatically generated by EvoSuite
 */

package fi.vtt.noen.testgen;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fi.vtt.noen.testgen.StringUtils;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class StringUtilsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      StringUtils stringUtils0 = new StringUtils();
      assertNotNull(stringUtils0);
  }

  @Test
  public void test1()  throws Throwable  {
      String string0 = StringUtils.lowerCaseFirstLetter("Cj;|2gg^1lfb");
      assertNotNull(string0);
      assertEquals("cj;|2gg^1lfb", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      String string0 = StringUtils.capitalizeFirstLetter(".jar");
      assertNotNull(string0);
      assertEquals(".jar", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      String string0 = StringUtils.prefixWith("cOkPx)En?-%", "cOkPx)En?-%");
      assertEquals("cOkPx)En?-%cOkPx)En?-%\n", string0);
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      String string0 = StringUtils.stringForStream((InputStream) byteArrayInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }
}
