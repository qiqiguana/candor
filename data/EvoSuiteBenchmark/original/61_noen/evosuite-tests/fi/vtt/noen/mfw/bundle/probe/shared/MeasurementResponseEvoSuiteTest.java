/*
 * This file was automatically generated by EvoSuite
 */

package fi.vtt.noen.mfw.bundle.probe.shared;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fi.vtt.noen.mfw.bundle.probe.plugins.xmlrpc.ProbeAgentConfig;
import fi.vtt.noen.mfw.bundle.probe.plugins.xmlrpc.XmlRpcServerClient;
import fi.vtt.noen.mfw.bundle.probe.shared.BaseMeasure;
import fi.vtt.noen.mfw.bundle.probe.shared.MeasurementResponse;
import fi.vtt.noen.mfw.bundle.probe.shared.ProbeInformation;
import fi.vtt.noen.mfw.bundle.server.shared.ServerAgent;
import fi.vtt.noen.mfw.probes.configurabletester.ConfigurableTestProbeAgent;
import fi.vtt.noen.mfw.probes.tester.TestProbe1;
import fi.vtt.noen.mfw.probes.tester.TestProbe2;
import fi.vtt.noen.mfw.probes.tester.TestProbe3;
import fi.vtt.noen.mfw.probes.tester.TestProbeWithCompareMode;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MeasurementResponseEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ConfigurableTestProbeAgent configurableTestProbeAgent0 = new ConfigurableTestProbeAgent();
      BaseMeasure baseMeasure0 = configurableTestProbeAgent0.measure();
      MeasurementResponse measurementResponse0 = new MeasurementResponse(baseMeasure0, (ServerAgent) null, (ProbeInformation) null, 3295, (long) 3295);
      int int0 = measurementResponse0.hashCode();
      assertEquals(801763264, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      ConfigurableTestProbeAgent configurableTestProbeAgent0 = new ConfigurableTestProbeAgent();
      BaseMeasure baseMeasure0 = configurableTestProbeAgent0.measure();
      MeasurementResponse measurementResponse0 = new MeasurementResponse(baseMeasure0, (ServerAgent) null, (ProbeInformation) null, 1149, (long) 1149);
      // Undeclared exception!
      try {
        measurementResponse0.getMeasureURI();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TestProbe3 testProbe3_0 = new TestProbe3();
      BaseMeasure baseMeasure0 = testProbe3_0.measure();
      TestProbe1 testProbe1_0 = new TestProbe1();
      ProbeInformation probeInformation0 = testProbe1_0.getInformation();
      MeasurementResponse measurementResponse0 = new MeasurementResponse(baseMeasure0, (ServerAgent) null, probeInformation0, 18, (long) 18);
      measurementResponse0.toString();
  }

  @Test
  public void test3()  throws Throwable  {
      ConfigurableTestProbeAgent configurableTestProbeAgent0 = new ConfigurableTestProbeAgent();
      BaseMeasure baseMeasure0 = configurableTestProbeAgent0.measure();
      MeasurementResponse measurementResponse0 = new MeasurementResponse(baseMeasure0, (ServerAgent) null, (ProbeInformation) null, 1149, (long) 1149);
      measurementResponse0.getProbeInfo();
      assertEquals(1149, measurementResponse0.precision());
      assertEquals(1149L, measurementResponse0.getSubscriptionId());
  }

  @Test
  public void test4()  throws Throwable  {
      ConfigurableTestProbeAgent configurableTestProbeAgent0 = new ConfigurableTestProbeAgent();
      BaseMeasure baseMeasure0 = configurableTestProbeAgent0.measure();
      ProbeInformation probeInformation0 = configurableTestProbeAgent0.getInformation();
      MeasurementResponse measurementResponse0 = new MeasurementResponse(baseMeasure0, (ServerAgent) null, probeInformation0, 1149, (long) 1149);
      measurementResponse0.server();
      assertEquals(1149, measurementResponse0.precision());
      assertEquals(1149L, measurementResponse0.getSubscriptionId());
  }

  @Test
  public void test5()  throws Throwable  {
      ConfigurableTestProbeAgent configurableTestProbeAgent0 = new ConfigurableTestProbeAgent();
      BaseMeasure baseMeasure0 = configurableTestProbeAgent0.measure();
      ProbeInformation probeInformation0 = configurableTestProbeAgent0.getInformation();
      MeasurementResponse measurementResponse0 = new MeasurementResponse(baseMeasure0, (ServerAgent) null, probeInformation0, 1149, (long) 1149);
      BaseMeasure baseMeasure1 = measurementResponse0.value();
      assertNotNull(baseMeasure1);
      assertEquals(1149, measurementResponse0.precision());
      assertEquals(1149L, measurementResponse0.getSubscriptionId());
  }

  @Test
  public void test6()  throws Throwable  {
      ConfigurableTestProbeAgent configurableTestProbeAgent0 = new ConfigurableTestProbeAgent();
      BaseMeasure baseMeasure0 = configurableTestProbeAgent0.measure();
      MeasurementResponse measurementResponse0 = new MeasurementResponse(baseMeasure0, (ServerAgent) null, (ProbeInformation) null, 1149, (long) 1149);
      int int0 = measurementResponse0.precision();
      assertEquals(1149L, measurementResponse0.getSubscriptionId());
      assertEquals(1149, int0);
  }

  @Test
  public void test7()  throws Throwable  {
      TestProbe2 testProbe2_0 = new TestProbe2();
      BaseMeasure baseMeasure0 = testProbe2_0.measure();
      MeasurementResponse measurementResponse0 = new MeasurementResponse(baseMeasure0, (ServerAgent) null, (ProbeInformation) null, 1321, (long) 1321);
      long long0 = measurementResponse0.getSubscriptionId();
      assertEquals(1321L, long0);
      assertEquals(1321, measurementResponse0.precision());
  }

  @Test
  public void test8()  throws Throwable  {
      ConfigurableTestProbeAgent configurableTestProbeAgent0 = new ConfigurableTestProbeAgent();
      BaseMeasure baseMeasure0 = configurableTestProbeAgent0.measure();
      TestProbeWithCompareMode testProbeWithCompareMode0 = new TestProbeWithCompareMode();
      ProbeInformation probeInformation0 = testProbeWithCompareMode0.getInformation();
      MeasurementResponse measurementResponse0 = new MeasurementResponse(baseMeasure0, (ServerAgent) null, probeInformation0, 1149, (long) 1149);
      MeasurementResponse measurementResponse1 = new MeasurementResponse(baseMeasure0, (ServerAgent) null, (ProbeInformation) null, 1149, (long) 1149);
      boolean boolean0 = measurementResponse0.equals((Object) measurementResponse1);
      assertEquals(1149, measurementResponse0.precision());
      assertEquals(1149L, measurementResponse0.getSubscriptionId());
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      TestProbe3 testProbe3_0 = new TestProbe3();
      BaseMeasure baseMeasure0 = testProbe3_0.measure();
      TestProbe1 testProbe1_0 = new TestProbe1();
      ProbeInformation probeInformation0 = testProbe1_0.getInformation();
      MeasurementResponse measurementResponse0 = new MeasurementResponse(baseMeasure0, (ServerAgent) null, probeInformation0, 18, (long) 18);
      boolean boolean0 = measurementResponse0.equals((Object) null);
      assertEquals(18L, measurementResponse0.getSubscriptionId());
      assertEquals(false, boolean0);
      assertEquals(18, measurementResponse0.precision());
  }

  @Test
  public void test10()  throws Throwable  {
      TestProbe2 testProbe2_0 = new TestProbe2();
      BaseMeasure baseMeasure0 = testProbe2_0.measure();
      MeasurementResponse measurementResponse0 = new MeasurementResponse(baseMeasure0, (ServerAgent) null, (ProbeInformation) null, 1321, (long) 1321);
      boolean boolean0 = measurementResponse0.equals((Object) "0");
      assertEquals(false, boolean0);
      assertEquals(1321L, measurementResponse0.getSubscriptionId());
      assertEquals(1321, measurementResponse0.precision());
  }

  @Test
  public void test11()  throws Throwable  {
      ConfigurableTestProbeAgent configurableTestProbeAgent0 = new ConfigurableTestProbeAgent();
      BaseMeasure baseMeasure0 = configurableTestProbeAgent0.measure();
      MeasurementResponse measurementResponse0 = new MeasurementResponse(baseMeasure0, (ServerAgent) null, (ProbeInformation) null, 1149, (long) 1149);
      MeasurementResponse measurementResponse1 = new MeasurementResponse(baseMeasure0, (ServerAgent) null, (ProbeInformation) null, 1149, (long) 1149);
      boolean boolean0 = measurementResponse0.equals((Object) measurementResponse1);
      assertEquals(1149, measurementResponse1.precision());
      assertEquals(1149L, measurementResponse1.getSubscriptionId());
      assertEquals(true, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      ProbeAgentConfig probeAgentConfig0 = new ProbeAgentConfig(2614, "'ddn_G0>bz=+HRt", 2614, 2614, 2614);
      XmlRpcServerClient xmlRpcServerClient0 = (XmlRpcServerClient)probeAgentConfig0.getDestination();
      TestProbe2 testProbe2_0 = new TestProbe2();
      ProbeInformation probeInformation0 = testProbe2_0.getInformation();
      MeasurementResponse measurementResponse0 = new MeasurementResponse((BaseMeasure) null, (ServerAgent) xmlRpcServerClient0, probeInformation0, 2614, (long) 2614);
      int int0 = measurementResponse0.hashCode();
      assertEquals((-1701232207), int0);
  }
}
