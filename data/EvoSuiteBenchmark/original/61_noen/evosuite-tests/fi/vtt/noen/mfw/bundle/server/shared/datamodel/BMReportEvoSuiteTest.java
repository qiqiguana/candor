/*
 * This file was automatically generated by EvoSuite
 */

package fi.vtt.noen.mfw.bundle.server.shared.datamodel;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fi.vtt.noen.mfw.bundle.server.shared.datamodel.BMReport;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BMReportEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BMReport bMReport0 = new BMReport("", "", (-858L), (-858L), true, "");
      String string0 = bMReport0.getMeasureTime();
      assertEquals("01-Jan-1970 00:59:59", string0);
      assertEquals((-858L), bMReport0.getSubscriptionId());
      assertEquals(true, bMReport0.isMatchReference());
      assertNotNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      BMReport bMReport0 = new BMReport("", "", (-858L), (-858L), true, "");
      String string0 = bMReport0.getMeasureURI();
      assertEquals(true, bMReport0.isMatchReference());
      assertEquals("01-Jan-1970 00:59:59", bMReport0.getMeasureTime());
      assertEquals((-858L), bMReport0.getSubscriptionId());
      assertNotNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      BMReport bMReport0 = new BMReport("", "", (-858L), (-858L), true, "");
      boolean boolean0 = bMReport0.isMatchReference();
      assertEquals((-858L), bMReport0.getSubscriptionId());
      assertEquals(true, boolean0);
      assertEquals("01-Jan-1970 00:59:59", bMReport0.getMeasureTime());
  }

  @Test
  public void test3()  throws Throwable  {
      BMReport bMReport0 = new BMReport("", "", (-858L), (-858L), true, "");
      String string0 = bMReport0.getReferenceValue();
      assertEquals("01-Jan-1970 00:59:59", bMReport0.getMeasureTime());
      assertEquals(true, bMReport0.isMatchReference());
      assertEquals((-858L), bMReport0.getSubscriptionId());
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      BMReport bMReport0 = new BMReport("", "", (-858L), (-858L), true, "");
      long long0 = bMReport0.getSubscriptionId();
      assertEquals(true, bMReport0.isMatchReference());
      assertEquals((-858L), long0);
      assertEquals("01-Jan-1970 00:59:59", bMReport0.getMeasureTime());
  }

  @Test
  public void test5()  throws Throwable  {
      BMReport bMReport0 = new BMReport("", "", (-858L), (-858L), true, "");
      String string0 = bMReport0.getCurrentValue();
      assertEquals(true, bMReport0.isMatchReference());
      assertNotNull(string0);
      assertEquals((-858L), bMReport0.getSubscriptionId());
      assertEquals("01-Jan-1970 00:59:59", bMReport0.getMeasureTime());
  }
}
