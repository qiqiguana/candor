/*
 * This file was automatically generated by EvoSuite
 */

package fi.vtt.noen.testgen.model.invariants;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fi.vtt.noen.testgen.model.invariants.CollectionAttribute;
import fi.vtt.noen.testgen.model.invariants.Event;
import fi.vtt.noen.testgen.model.invariants.GuardAnalyser;
import fi.vtt.noen.testgen.model.invariants.Invariant;
import fi.vtt.noen.testgen.model.invariants.InvariantType;
import fi.vtt.noen.testgen.model.invariants.StringAttribute;
import java.util.Collection;
import java.util.Map;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class GuardAnalyserEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      GuardAnalyser guardAnalyser0 = new GuardAnalyser();
      Map<InvariantType, Collection<Invariant>> map0 = guardAnalyser0.getValidInvariants("#[?x");
      assertNull(map0);
  }

  @Test
  public void test1()  throws Throwable  {
      GuardAnalyser guardAnalyser0 = new GuardAnalyser();
      Event event0 = new Event("2");
      Event event1 = new Event("#[?x", true);
      CollectionAttribute collectionAttribute0 = new CollectionAttribute("#[?x");
      CollectionAttribute collectionAttribute1 = new CollectionAttribute("#[?x");
      collectionAttribute1.addValue("2");
      event1.add(collectionAttribute1);
      StringAttribute stringAttribute0 = new StringAttribute("#[?x", "#[?x");
      event0.add(collectionAttribute0);
      guardAnalyser0.process(event0);
      event0.add(stringAttribute0);
      guardAnalyser0.process(event1);
      assertEquals("#[?x", event1.getName());
  }

  @Test
  public void test2()  throws Throwable  {
      GuardAnalyser guardAnalyser0 = new GuardAnalyser();
      Event event0 = new Event("2");
      Event event1 = new Event("#[?x", true);
      CollectionAttribute collectionAttribute0 = new CollectionAttribute("#[?x");
      CollectionAttribute collectionAttribute1 = new CollectionAttribute("#[?x");
      collectionAttribute1.addValue("#[?x");
      event1.add(collectionAttribute1);
      StringAttribute stringAttribute0 = new StringAttribute("#[?x", "#[?x");
      event0.add(collectionAttribute0);
      guardAnalyser0.process(event0);
      event0.add(stringAttribute0);
      guardAnalyser0.process(event1);
      assertEquals(true, event1.isExit());
  }

  @Test
  public void test3()  throws Throwable  {
      GuardAnalyser guardAnalyser0 = new GuardAnalyser();
      Event event0 = new Event("2");
      StringAttribute stringAttribute0 = new StringAttribute("#[?x", "#[?x");
      event0.add(stringAttribute0);
      StringAttribute stringAttribute1 = new StringAttribute("2", "2");
      event0.add(stringAttribute1);
      guardAnalyser0.process(event0);
      guardAnalyser0.process(event0);
      assertEquals(false, event0.isExit());
  }

  @Test
  public void test4()  throws Throwable  {
      GuardAnalyser guardAnalyser0 = new GuardAnalyser();
      Event event0 = new Event("2");
      CollectionAttribute collectionAttribute0 = new CollectionAttribute("#[?x");
      event0.add(collectionAttribute0);
      collectionAttribute0.addValue("#[?x");
      StringAttribute stringAttribute0 = new StringAttribute("#[?x", "#[?x");
      event0.add(stringAttribute0);
      guardAnalyser0.process(event0);
      guardAnalyser0.process(event0);
      assertEquals(false, event0.isExit());
  }

  @Test
  public void test5()  throws Throwable  {
      GuardAnalyser guardAnalyser0 = new GuardAnalyser();
      Event event0 = new Event("2");
      Event event1 = new Event("#[?x", true);
      CollectionAttribute collectionAttribute0 = new CollectionAttribute("#[?x");
      event1.add(collectionAttribute0);
      collectionAttribute0.addValue("#[?x");
      StringAttribute stringAttribute0 = new StringAttribute("#[?x", "#[?x");
      event1.add(stringAttribute0);
      guardAnalyser0.process(event0);
      guardAnalyser0.process(event1);
      Event event2 = new Event("#[?x");
      // Undeclared exception!
      try {
        guardAnalyser0.process(event2);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      GuardAnalyser guardAnalyser0 = new GuardAnalyser();
      Event event0 = new Event("2");
      CollectionAttribute collectionAttribute0 = new CollectionAttribute("#[?x");
      event0.add(collectionAttribute0);
      CollectionAttribute collectionAttribute1 = new CollectionAttribute("#[?x");
      collectionAttribute1.addValue("#[?x");
      event0.add(collectionAttribute1);
      StringAttribute stringAttribute0 = new StringAttribute("#[?x", "#[?x");
      event0.add(stringAttribute0);
      guardAnalyser0.process(event0);
      guardAnalyser0.process(event0);
      assertEquals("2", event0.getName());
  }

  @Test
  public void test7()  throws Throwable  {
      GuardAnalyser guardAnalyser0 = new GuardAnalyser();
      Event event0 = new Event("2");
      CollectionAttribute collectionAttribute0 = new CollectionAttribute("#[?x");
      event0.add(collectionAttribute0);
      collectionAttribute0.addValue("#[?x");
      event0.add(collectionAttribute0);
      StringAttribute stringAttribute0 = new StringAttribute("#[?x", "#[?x");
      event0.add(stringAttribute0);
      guardAnalyser0.process(event0);
      assertEquals(false, event0.isExit());
  }

  @Test
  public void test8()  throws Throwable  {
      GuardAnalyser guardAnalyser0 = new GuardAnalyser();
      Event event0 = new Event("2");
      CollectionAttribute collectionAttribute0 = new CollectionAttribute("#[?x");
      event0.add(collectionAttribute0);
      collectionAttribute0.addValue("2");
      StringAttribute stringAttribute0 = new StringAttribute("2", "2");
      CollectionAttribute collectionAttribute1 = new CollectionAttribute("2");
      event0.add(stringAttribute0);
      event0.add(collectionAttribute1);
      collectionAttribute1.addValue("2");
      guardAnalyser0.process(event0);
      assertEquals(false, event0.isExit());
  }
}
