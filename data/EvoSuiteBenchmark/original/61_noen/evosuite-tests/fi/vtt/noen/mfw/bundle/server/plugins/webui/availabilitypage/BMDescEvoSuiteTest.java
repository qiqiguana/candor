/*
 * This file was automatically generated by EvoSuite
 */

package fi.vtt.noen.mfw.bundle.server.plugins.webui.availabilitypage;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fi.vtt.noen.mfw.bundle.server.plugins.webui.availabilitypage.BMDesc;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BMDescEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BMDesc bMDesc0 = new BMDesc((-1167L), (-1167L), "", "", "", true);
      long long0 = bMDesc0.getDeviceId();
      assertEquals((-1167L), long0);
      assertEquals(true, bMDesc0.isDisabled());
      assertEquals((-1167L), bMDesc0.getBmId());
  }

  @Test
  public void test1()  throws Throwable  {
      BMDesc bMDesc0 = new BMDesc((-1167L), (-1167L), "", "", "", true);
      String string0 = bMDesc0.getName();
      assertEquals((-1167L), bMDesc0.getBmId());
      assertNotNull(string0);
      assertEquals(true, bMDesc0.isDisabled());
      assertEquals((-1167L), bMDesc0.getDeviceId());
  }

  @Test
  public void test2()  throws Throwable  {
      BMDesc bMDesc0 = new BMDesc((-1167L), (-1167L), "", "", "", true);
      long long0 = bMDesc0.getBmId();
      assertEquals(true, bMDesc0.isDisabled());
      assertEquals((-1167L), bMDesc0.getDeviceId());
      assertEquals((-1167L), long0);
  }

  @Test
  public void test3()  throws Throwable  {
      BMDesc bMDesc0 = new BMDesc(0L, 0L, "", "", "", false);
      String string0 = bMDesc0.getClazz();
      assertEquals(false, bMDesc0.isDisabled());
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      BMDesc bMDesc0 = new BMDesc((-1167L), (-1167L), "", "", "", true);
      String string0 = bMDesc0.getDescription();
      assertEquals((-1167L), bMDesc0.getBmId());
      assertEquals((-1167L), bMDesc0.getDeviceId());
      assertEquals(true, bMDesc0.isDisabled());
      assertNotNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      BMDesc bMDesc0 = new BMDesc((-1167L), (-1167L), "", "", "", true);
      boolean boolean0 = bMDesc0.isDisabled();
      assertEquals((-1167L), bMDesc0.getBmId());
      assertEquals(true, boolean0);
      assertEquals((-1167L), bMDesc0.getDeviceId());
  }
}
