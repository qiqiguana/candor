/*
 * This file was automatically generated by EvoSuite
 */

package fi.vtt.noen.mfw.bundle.server.plugins.sac.mfwservice;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fi.vtt.noen.mfw.bundle.server.plugins.sac.mfwservice.ProbeParameter;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ProbeParameterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ProbeParameter probeParameter0 = new ProbeParameter();
      probeParameter0.setName("");
      assertNull(probeParameter0.getValue());
  }

  @Test
  public void test1()  throws Throwable  {
      ProbeParameter probeParameter0 = new ProbeParameter();
      probeParameter0.setValue(")");
      assertEquals(false, probeParameter0.isMandatory());
  }

  @Test
  public void test2()  throws Throwable  {
      ProbeParameter probeParameter0 = new ProbeParameter();
      String string0 = probeParameter0.getValue();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      ProbeParameter probeParameter0 = new ProbeParameter();
      boolean boolean0 = probeParameter0.isMandatory();
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      ProbeParameter probeParameter0 = new ProbeParameter();
      String string0 = probeParameter0.getDescription();
      assertNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      ProbeParameter probeParameter0 = new ProbeParameter();
      String string0 = probeParameter0.getName();
      assertNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      ProbeParameter probeParameter0 = new ProbeParameter();
      probeParameter0.setDescription("");
      assertEquals("", probeParameter0.getDescription());
  }

  @Test
  public void test7()  throws Throwable  {
      ProbeParameter probeParameter0 = new ProbeParameter();
      probeParameter0.setMandatory(false);
      assertEquals(false, probeParameter0.isMandatory());
  }
}
