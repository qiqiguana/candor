/*
 * This file was automatically generated by EvoSuite
 */

package fi.vtt.noen.testgen.observations.data;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fi.vtt.noen.testgen.observations.data.EventAttribute;
import java.util.LinkedList;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class EventAttributeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer((-1810));
      EventAttribute eventAttribute0 = new EventAttribute("0", (Object) integer0);
      assertNotNull(eventAttribute0);
      
      String string0 = eventAttribute0.getType();
      assertNotNull(string0);
      assertEquals("int", string0);
      assertEquals("0", eventAttribute0.getName());
  }

  @Test
  public void test1()  throws Throwable  {
      EventAttribute eventAttribute0 = new EventAttribute();
      assertNull(eventAttribute0.getName());
  }

  @Test
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer((-1810));
      EventAttribute eventAttribute0 = new EventAttribute("0", (Object) integer0);
      assertNotNull(eventAttribute0);
      
      String string0 = eventAttribute0.getName();
      assertNotNull(string0);
      assertEquals("int", eventAttribute0.getType());
      assertEquals("0", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer((-1810));
      EventAttribute eventAttribute0 = new EventAttribute("0", (Object) integer0);
      assertNotNull(eventAttribute0);
      
      String string0 = eventAttribute0.getValue();
      assertNotNull(string0);
      assertEquals("0", eventAttribute0.getName());
      assertEquals("int", eventAttribute0.getType());
      assertEquals("-1810", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      EventAttribute eventAttribute0 = new EventAttribute("boolean", "false");
      assertEquals("java.lang.String", eventAttribute0.getType());
      assertNotNull(eventAttribute0);
      assertEquals("boolean", eventAttribute0.getName());
  }

  @Test
  public void test5()  throws Throwable  {
      Integer integer0 = new Integer((-1810));
      Double double0 = new Double((double) integer0);
      EventAttribute eventAttribute0 = new EventAttribute("-1810", (Object) double0);
      assertEquals("-1810", eventAttribute0.getName());
      assertNotNull(eventAttribute0);
      assertEquals("double", eventAttribute0.getType());
  }

  @Test
  public void test6()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      EventAttribute eventAttribute0 = new EventAttribute("boolean", (Object) boolean0);
      assertNotNull(eventAttribute0);
      assertEquals("boolean", eventAttribute0.getName());
      assertEquals("0", eventAttribute0.getValue());
      assertEquals("boolean", eventAttribute0.getType());
  }

  @Test
  public void test7()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      EventAttribute eventAttribute0 = new EventAttribute("boolean", (Object) boolean0);
      assertEquals("boolean", eventAttribute0.getName());
      assertEquals("boolean", eventAttribute0.getType());
      assertNotNull(eventAttribute0);
      assertEquals("1", eventAttribute0.getValue());
  }

  @Test
  public void test8()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      EventAttribute eventAttribute0 = null;
      try {
        eventAttribute0 = new EventAttribute("1655", (Object) linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Collections need to be created with ArrayAttribute
         */
      }
  }
}
