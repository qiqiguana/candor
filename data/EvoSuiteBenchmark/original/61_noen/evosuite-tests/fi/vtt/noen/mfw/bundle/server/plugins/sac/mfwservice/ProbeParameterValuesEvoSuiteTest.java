/*
 * This file was automatically generated by EvoSuite
 */

package fi.vtt.noen.mfw.bundle.server.plugins.sac.mfwservice;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fi.vtt.noen.mfw.bundle.server.plugins.sac.mfwservice.ProbeParameterValue;
import fi.vtt.noen.mfw.bundle.server.plugins.sac.mfwservice.ProbeParameterValues;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ProbeParameterValuesEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ProbeParameterValues probeParameterValues0 = new ProbeParameterValues();
      long long0 = probeParameterValues0.getSacId();
      assertEquals(0L, long0);
  }

  @Test
  public void test1()  throws Throwable  {
      ProbeParameterValues probeParameterValues0 = new ProbeParameterValues();
      probeParameterValues0.setSacId(0L);
      assertEquals(0L, probeParameterValues0.getSacId());
  }

  @Test
  public void test2()  throws Throwable  {
      ProbeParameterValues probeParameterValues0 = new ProbeParameterValues();
      long long0 = probeParameterValues0.getProbeId();
      assertEquals(0L, long0);
  }

  @Test
  public void test3()  throws Throwable  {
      ProbeParameterValues probeParameterValues0 = new ProbeParameterValues();
      probeParameterValues0.setProbeId(1L);
      assertEquals(1L, probeParameterValues0.getProbeId());
  }

  @Test
  public void test4()  throws Throwable  {
      ProbeParameterValues probeParameterValues0 = new ProbeParameterValues();
      List<ProbeParameterValue> list0 = probeParameterValues0.getProbeParameterValue();
      List<ProbeParameterValue> list1 = probeParameterValues0.getProbeParameterValue();
      assertSame(list1, list0);
      assertNotNull(list1);
  }
}
