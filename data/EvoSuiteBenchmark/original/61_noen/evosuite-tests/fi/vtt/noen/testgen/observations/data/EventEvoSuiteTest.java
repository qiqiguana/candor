/*
 * This file was automatically generated by EvoSuite
 */

package fi.vtt.noen.testgen.observations.data;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fi.vtt.noen.testgen.observations.data.Event;
import fi.vtt.noen.testgen.observations.data.EventAttribute;
import java.util.Collection;
import java.util.Date;
import java.util.Iterator;
import java.util.LinkedList;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class EventEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Event event0 = new Event("", false);
      assertEquals(false, event0.isExit());
  }

  @Test
  public void test1()  throws Throwable  {
      Event event0 = new Event("zuV");
      boolean boolean0 = event0.isExit();
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      Event event0 = new Event("zuV");
      Iterator<EventAttribute> iterator0 = event0.attributes();
      assertNotNull(iterator0);
      assertEquals(false, event0.isExit());
  }

  @Test
  public void test3()  throws Throwable  {
      Event event0 = new Event("");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      event0.addAttribute("", (Collection) linkedList0);
      assertEquals(false, event0.isExit());
  }

  @Test
  public void test4()  throws Throwable  {
      Event event0 = new Event("");
      event0.addAttribute("(8rwSr5/@=l1~rUEMxO", (Object) null);
      assertEquals(false, event0.isExit());
  }

  @Test
  public void test5()  throws Throwable  {
      Event event0 = new Event("k?h`r>6[WD;Xtp;j", 565L);
      Date date0 = event0.getTime();
      assertEquals(565L, date0.getTime());
      assertEquals(false, event0.isExit());
  }

  @Test
  public void test6()  throws Throwable  {
      Event event0 = new Event("zuV");
      String string0 = event0.getName();
      assertNotNull(string0);
      assertEquals(false, event0.isExit());
  }
}
