/*
 * This file was automatically generated by EvoSuite
 */

package fi.vtt.noen.mfw.bundle.server.plugins.webui.availabilitypage;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fi.vtt.noen.mfw.bundle.server.plugins.webui.availabilitypage.AvailabilityStorage;
import fi.vtt.noen.mfw.bundle.server.plugins.webui.availabilitypage.BMDesc;
import fi.vtt.noen.mfw.bundle.server.plugins.webui.availabilitypage.DeviceDesc;
import fi.vtt.noen.mfw.bundle.server.plugins.webui.availabilitypage.ProbeDesc;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AvailabilityStorageEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AvailabilityStorage availabilityStorage0 = new AvailabilityStorage();
      List<ProbeDesc> list0 = availabilityStorage0.getProbes();
      assertEquals(0, list0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      AvailabilityStorage availabilityStorage0 = new AvailabilityStorage();
      BMDesc bMDesc0 = new BMDesc((-1468L), (-1L), "<BVLM^yWI", "<BVLM^yWI", "<BVLM^yWI", false);
      availabilityStorage0.addBM(bMDesc0);
      assertEquals((-1L), bMDesc0.getDeviceId());
  }

  @Test
  public void test2()  throws Throwable  {
      AvailabilityStorage availabilityStorage0 = new AvailabilityStorage();
      ProbeDesc probeDesc0 = new ProbeDesc(0L, 0L, "H]h\"^Lgv~:(", false);
      availabilityStorage0.addProbe(probeDesc0);
      assertEquals(false, probeDesc0.isDisabled());
  }

  @Test
  public void test3()  throws Throwable  {
      AvailabilityStorage availabilityStorage0 = new AvailabilityStorage();
      availabilityStorage0.addDevice((DeviceDesc) null);
  }

  @Test
  public void test4()  throws Throwable  {
      AvailabilityStorage availabilityStorage0 = new AvailabilityStorage();
      List<DeviceDesc> list0 = availabilityStorage0.getDevices();
      assertEquals(true, list0.isEmpty());
  }

  @Test
  public void test5()  throws Throwable  {
      AvailabilityStorage availabilityStorage0 = new AvailabilityStorage();
      List<BMDesc> list0 = availabilityStorage0.getBms();
      assertEquals(0, list0.size());
  }
}
