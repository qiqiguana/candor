/*
 * This file was automatically generated by EvoSuite
 */

package fi.vtt.noen.mfw.bundle.server.plugins.webui.sacservice;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fi.vtt.noen.mfw.bundle.server.plugins.webui.sacservice.BMResult;
import fi.vtt.noen.mfw.bundle.server.plugins.webui.sacservice.BMResults;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BMResultsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BMResults.PerDevice bMResults_PerDevice0 = new BMResults.PerDevice();
      bMResults_PerDevice0.setDeviceId((-973L));
      assertEquals((-973L), bMResults_PerDevice0.getDeviceId());
  }

  @Test
  public void test1()  throws Throwable  {
      BMResults.PerDevice bMResults_PerDevice0 = new BMResults.PerDevice();
      long long0 = bMResults_PerDevice0.getDeviceId();
      assertEquals(0L, long0);
  }

  @Test
  public void test2()  throws Throwable  {
      BMResults bMResults0 = new BMResults();
      bMResults0.setMfwId((-1257L));
      assertEquals((-1257L), bMResults0.getMfwId());
  }

  @Test
  public void test3()  throws Throwable  {
      BMResults bMResults0 = new BMResults();
      long long0 = bMResults0.getMfwId();
      assertEquals(0L, long0);
  }

  @Test
  public void test4()  throws Throwable  {
      BMResults bMResults0 = new BMResults();
      List<BMResults.PerDevice> list0 = bMResults0.getPerDevice();
      List<BMResults.PerDevice> list1 = bMResults0.getPerDevice();
      assertSame(list1, list0);
      assertNotNull(list1);
  }

  @Test
  public void test5()  throws Throwable  {
      BMResults.PerDevice bMResults_PerDevice0 = new BMResults.PerDevice();
      List<BMResult> list0 = bMResults_PerDevice0.getBMResult();
      List<BMResult> list1 = bMResults_PerDevice0.getBMResult();
      assertSame(list1, list0);
      assertNotNull(list1);
  }
}
