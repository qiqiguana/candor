/*
 * This file was automatically generated by EvoSuite
 */

package fi.vtt.noen.mfw.bundle.server.plugins.sac.sacclient;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fi.vtt.noen.mfw.bundle.server.plugins.sac.sacclient.Availability;
import fi.vtt.noen.mfw.bundle.server.plugins.sac.sacclient.BM;
import fi.vtt.noen.mfw.bundle.server.plugins.sac.sacclient.Device;
import fi.vtt.noen.mfw.bundle.server.plugins.sac.sacclient.Probe;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AvailabilityEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Availability availability0 = new Availability();
      availability0.setMfwId(1L);
      assertEquals(1L, availability0.getMfwId());
  }

  @Test
  public void test1()  throws Throwable  {
      Availability availability0 = new Availability();
      long long0 = availability0.getMfwId();
      assertEquals(0L, long0);
  }

  @Test
  public void test2()  throws Throwable  {
      Availability availability0 = new Availability();
      List<Device> list0 = availability0.getDevice();
      List<Device> list1 = availability0.getDevice();
      assertSame(list1, list0);
      assertNotNull(list1);
  }

  @Test
  public void test3()  throws Throwable  {
      Availability availability0 = new Availability();
      List<BM> list0 = availability0.getBM();
      List<BM> list1 = availability0.getBM();
      assertSame(list1, list0);
      assertNotNull(list1);
  }

  @Test
  public void test4()  throws Throwable  {
      Availability availability0 = new Availability();
      List<Probe> list0 = availability0.getProbe();
      List<Probe> list1 = availability0.getProbe();
      assertSame(list1, list0);
      assertNotNull(list1);
  }
}
