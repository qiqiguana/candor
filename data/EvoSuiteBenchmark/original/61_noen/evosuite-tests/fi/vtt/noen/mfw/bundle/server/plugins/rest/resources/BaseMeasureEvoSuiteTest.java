/*
 * This file was automatically generated by EvoSuite
 */

package fi.vtt.noen.mfw.bundle.server.plugins.rest.resources;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fi.vtt.noen.mfw.bundle.server.plugins.rest.resources.BaseMeasure;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BaseMeasureEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BaseMeasure baseMeasure0 = new BaseMeasure("Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl");
      baseMeasure0.setId("Y<yxBk2:On[jIl");
      assertEquals("Y<yxBk2:On[jIl", baseMeasure0.getTargetid());
  }

  @Test
  public void test1()  throws Throwable  {
      BaseMeasure baseMeasure0 = new BaseMeasure("Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl");
      baseMeasure0.setTargetid("Y<yxBk2:On[jIl");
      assertEquals("Y<yxBk2:On[jIl", baseMeasure0.getDescription());
  }

  @Test
  public void test2()  throws Throwable  {
      BaseMeasure baseMeasure0 = new BaseMeasure("Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl");
      baseMeasure0.setDatatype("Y<yxBk2:On[jIl");
      assertEquals("Y<yxBk2:On[jIl", baseMeasure0.getId());
  }

  @Test
  public void test3()  throws Throwable  {
      BaseMeasure baseMeasure0 = new BaseMeasure();
      String string0 = baseMeasure0.getName();
      assertNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      BaseMeasure baseMeasure0 = new BaseMeasure();
      String string0 = baseMeasure0.getDescription();
      assertNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      BaseMeasure baseMeasure0 = new BaseMeasure();
      String string0 = baseMeasure0.getDatatype();
      assertNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      BaseMeasure baseMeasure0 = new BaseMeasure("Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl");
      baseMeasure0.setDescription("Y<yxBk2:On[jIl");
      assertEquals("Y<yxBk2:On[jIl", baseMeasure0.getDatatype());
  }

  @Test
  public void test7()  throws Throwable  {
      BaseMeasure baseMeasure0 = new BaseMeasure();
      String string0 = baseMeasure0.getTargetid();
      assertNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      BaseMeasure baseMeasure0 = new BaseMeasure("Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl");
      baseMeasure0.setName("Y<yxBk2:On[jIl");
      assertEquals("Y<yxBk2:On[jIl", baseMeasure0.getId());
  }

  @Test
  public void test9()  throws Throwable  {
      BaseMeasure baseMeasure0 = new BaseMeasure();
      baseMeasure0.setClas("C[GN*9E=f-MmTb].X");
      assertNull(baseMeasure0.getId());
  }

  @Test
  public void test10()  throws Throwable  {
      BaseMeasure baseMeasure0 = new BaseMeasure(">'g*)WQvtSO`-|,34O|", ">'g*)WQvtSO`-|,34O|", ">'g*)WQvtSO`-|,34O|", ".29|%u", "", "");
      String string0 = baseMeasure0.getId();
      assertEquals(">'g*)WQvtSO`-|,34O|", string0);
      assertNotNull(string0);
      assertEquals("", baseMeasure0.getTargetid());
      assertEquals(".29|%u", baseMeasure0.getDescription());
      assertEquals(">'g*)WQvtSO`-|,34O|", baseMeasure0.getName());
      assertEquals(">'g*)WQvtSO`-|,34O|", baseMeasure0.getClas());
      assertEquals("", baseMeasure0.getDatatype());
  }

  @Test
  public void test11()  throws Throwable  {
      BaseMeasure baseMeasure0 = new BaseMeasure("Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl", "Y<yxBk2:On[jIl");
      String string0 = baseMeasure0.getClas();
      assertEquals("Y<yxBk2:On[jIl", string0);
  }
}
