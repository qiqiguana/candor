/*
 * This file was automatically generated by EvoSuite
 */

package fi.vtt.noen.mfw.bundle.server.plugins.sac.sacclient;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fi.vtt.noen.mfw.bundle.server.plugins.sac.sacclient.Probe;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ProbeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Probe probe0 = new Probe();
      long long0 = probe0.getId();
      assertEquals(0L, long0);
  }

  @Test
  public void test1()  throws Throwable  {
      Probe probe0 = new Probe();
      probe0.isDisabled();
  }

  @Test
  public void test2()  throws Throwable  {
      Probe probe0 = new Probe();
      probe0.setName("BA,");
      assertEquals("BA,", probe0.getName());
  }

  @Test
  public void test3()  throws Throwable  {
      Probe probe0 = new Probe();
      probe0.setId(0L);
      assertEquals(0L, probe0.getId());
  }

  @Test
  public void test4()  throws Throwable  {
      Probe probe0 = new Probe();
      Boolean boolean0 = Boolean.valueOf("");
      probe0.setDisabled(boolean0);
      assertEquals(false, boolean0.booleanValue());
  }

  @Test
  public void test5()  throws Throwable  {
      Probe probe0 = new Probe();
      String string0 = probe0.getName();
      assertNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      Probe probe0 = new Probe();
      List<Long> list0 = probe0.getBmId();
      List<Long> list1 = probe0.getBmId();
      assertSame(list1, list0);
      assertNotNull(list1);
  }
}
