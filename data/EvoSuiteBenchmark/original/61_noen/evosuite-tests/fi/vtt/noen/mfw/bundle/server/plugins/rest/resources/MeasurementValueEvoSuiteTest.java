/*
 * This file was automatically generated by EvoSuite
 */

package fi.vtt.noen.mfw.bundle.server.plugins.rest.resources;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fi.vtt.noen.mfw.bundle.server.plugins.rest.resources.MeasurementValue;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MeasurementValueEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MeasurementValue measurementValue0 = new MeasurementValue();
      measurementValue0.setValue("!E|-T@mEr!");
      assertNull(measurementValue0.getBmid());
  }

  @Test
  public void test1()  throws Throwable  {
      MeasurementValue measurementValue0 = new MeasurementValue("", "", (Long) (-1L));
      String string0 = measurementValue0.getBmid();
      assertEquals("", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      MeasurementValue measurementValue0 = new MeasurementValue("", "", (Long) (-1L));
      measurementValue0.setTimestamp((Long) (-1L));
      assertEquals("", measurementValue0.getValue());
  }

  @Test
  public void test3()  throws Throwable  {
      MeasurementValue measurementValue0 = new MeasurementValue("", "", (Long) (-1L));
      Long long0 = measurementValue0.getTimestamp();
      assertEquals("-1", long0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      MeasurementValue measurementValue0 = new MeasurementValue();
      String string0 = measurementValue0.getValue();
      assertNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      MeasurementValue measurementValue0 = new MeasurementValue();
      measurementValue0.setBmid("!E|-T@mEr!");
      assertNull(measurementValue0.getValue());
  }
}
