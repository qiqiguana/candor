/*
 * This file was automatically generated by EvoSuite
 */

package fi.vtt.noen.testgen.model.efsm;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fi.vtt.noen.testgen.model.efsm.StubGenerator;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class StubGeneratorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      StubGenerator stubGenerator0 = new StubGenerator();
      Class<?> class0 = StubGenerator.class;
      String string0 = stubGenerator0.stubFor((Class) class0, "", "");
      assertEquals("package ;\n\nimport java.util.Map;\nimport java.util.HashMap;\n\npublic class  {\n  private Map<String, Integer> messages = new HashMap<String, Integer>();\n\n  public void reset() {\n    messages.clear();\n  }\n\n  private void msgReceived(String msg) {\n    Integer count = messages.get(msg);\n    if (count == null) {\n      count = 0;\n    }\n    count++;\n    messages.put(msg, count);\n  }\n\n  public int countFor(String msg) {\n    return messages.get(msg);\n  }\n  public fi.vtt.noen.testgen.model.efsm.StubGenerator.header(java.lang.String p1, java.lang.String) header(java.lang.String p2, java.lang.String p3) {\n    msgReceived(\"header\");\n    return null;\n  }\n  public fi.vtt.noen.testgen.model.efsm.StubGenerator.methods(java.lang.Class) methods(java.lang.Class p1) {\n    msgReceived(\"methods\");\n    return null;\n  }\n  public fi.vtt.noen.testgen.model.efsm.StubGenerator.footer() footer() {\n    msgReceived(\"footer\");\n    return null;\n  }\n  public fi.vtt.noen.testgen.model.efsm.StubGenerator.stubFor(java.lang.Class p1, java.lang.String p2, java.lang.String) stubFor(java.lang.Class p3, java.lang.String p4, java.lang.String p5) {\n    msgReceived(\"stubFor\");\n    return null;\n  }\n  public fi.vtt.noen.testgen.model.efsm.StubGenerator.stubFor(java.lang.reflect.Method) stubFor(java.lang.reflect.Method p1) {\n    msgReceived(\"stubFor\");\n    return null;\n  }\n  public fi.vtt.noen.testgen.model.efsm.StubGenerator.variables() variables() {\n    msgReceived(\"variables\");\n    return null;\n  }\n  public native wait(long p1) throws java.lang.InterruptedException {\n    msgReceived(\"wait\");\n  }\n  public void wait(long p1, int p2) throws java.lang.InterruptedException {\n    msgReceived(\"wait\");\n  }\n  public void wait() throws java.lang.InterruptedException {\n    msgReceived(\"wait\");\n  }\n  public java.lang.Object.equals(java.lang.Object) equals(java.lang.Object p1) {\n    msgReceived(\"equals\");\n    return null;\n  }\n  public java.lang.Object.toString() toString() {\n    msgReceived(\"toString\");\n    return null;\n  }\n  public int hashCode() {\n    msgReceived(\"hashCode\");\n    return null;\n  }\n  public native getClass() {\n    msgReceived(\"getClass\");\n    return null;\n  }\n  public native notify() {\n    msgReceived(\"notify\");\n  }\n  public native notifyAll() {\n    msgReceived(\"notifyAll\");\n  }\n}\n", string0);
      assertNotNull(string0);
  }
}
