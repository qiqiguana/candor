/*
 * This file was automatically generated by EvoSuite
 */

package fi.vtt.noen.mfw.bundle.server.plugins.webui.probelistpage;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fi.vtt.noen.mfw.bundle.server.plugins.webui.probelistpage.ProbeComparator;
import fi.vtt.noen.mfw.bundle.server.plugins.webui.probelistpage.ProbeListItem;
import fi.vtt.noen.mfw.bundle.server.shared.datamodel.ProbeDescription;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ProbeComparatorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ProbeComparator probeComparator0 = new ProbeComparator("^'%a", false);
      ProbeDescription probeDescription0 = new ProbeDescription();
      ProbeListItem probeListItem0 = new ProbeListItem(probeDescription0);
      probeComparator0.compare(probeListItem0, probeListItem0);
  }

  @Test
  public void test1()  throws Throwable  {
      ProbeDescription probeDescription0 = new ProbeDescription();
      ProbeListItem probeListItem0 = new ProbeListItem(probeDescription0);
      ProbeComparator probeComparator0 = new ProbeComparator("probeId", false);
      // Undeclared exception!
      try {
        probeComparator0.compare(probeListItem0, probeListItem0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ProbeComparator probeComparator0 = new ProbeComparator("bmName", true);
      ProbeDescription probeDescription0 = new ProbeDescription();
      ProbeListItem probeListItem0 = new ProbeListItem(probeDescription0);
      // Undeclared exception!
      try {
        probeComparator0.compare(probeListItem0, probeListItem0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ProbeComparator probeComparator0 = new ProbeComparator("measureURI", false);
      // Undeclared exception!
      try {
        probeComparator0.compare((ProbeListItem) null, (ProbeListItem) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      ProbeComparator probeComparator0 = new ProbeComparator("delay", true);
      ProbeListItem probeListItem0 = new ProbeListItem((ProbeDescription) null);
      // Undeclared exception!
      try {
        probeComparator0.compare(probeListItem0, probeListItem0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      ProbeComparator probeComparator0 = new ProbeComparator("probeName", true);
      ProbeDescription probeDescription0 = new ProbeDescription();
      ProbeListItem probeListItem0 = new ProbeListItem(probeDescription0);
      // Undeclared exception!
      try {
        probeComparator0.compare(probeListItem0, probeListItem0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      ProbeComparator probeComparator0 = new ProbeComparator("precision", true);
      ProbeListItem probeListItem0 = new ProbeListItem((ProbeDescription) null);
      // Undeclared exception!
      try {
        probeComparator0.compare(probeListItem0, probeListItem0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      ProbeComparator probeComparator0 = new ProbeComparator("pr?beId", true);
      ProbeDescription probeDescription0 = new ProbeDescription();
      ProbeListItem probeListItem0 = new ProbeListItem(probeDescription0);
      int int0 = probeComparator0.compare(probeListItem0, probeListItem0);
      assertEquals(0, int0);
  }
}
