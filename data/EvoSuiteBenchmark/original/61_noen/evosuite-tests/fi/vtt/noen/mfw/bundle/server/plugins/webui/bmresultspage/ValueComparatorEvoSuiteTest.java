/*
 * This file was automatically generated by EvoSuite
 */

package fi.vtt.noen.mfw.bundle.server.plugins.webui.bmresultspage;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fi.vtt.noen.mfw.bundle.server.plugins.webui.bmresultspage.BMResult;
import fi.vtt.noen.mfw.bundle.server.plugins.webui.bmresultspage.ValueComparator;
import javax.xml.datatype.XMLGregorianCalendar;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ValueComparatorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ValueComparator valueComparator0 = new ValueComparator("time", false);
      BMResult bMResult0 = new BMResult(1L, 1L, "time", (XMLGregorianCalendar) null, false);
      // Undeclared exception!
      try {
        valueComparator0.compare(bMResult0, bMResult0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ValueComparator valueComparator0 = new ValueComparator("bm_id", false);
      BMResult bMResult0 = new BMResult(0L, 4L, "bm_id", (XMLGregorianCalendar) null, false);
      int int0 = valueComparator0.compare(bMResult0, bMResult0);
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      ValueComparator valueComparator0 = new ValueComparator("device_id", true);
      // Undeclared exception!
      try {
        valueComparator0.compare((BMResult) null, (BMResult) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ValueComparator valueComparator0 = new ValueComparator("value", true);
      BMResult bMResult0 = new BMResult((-1L), (-1L), "value", (XMLGregorianCalendar) null, false);
      int int0 = valueComparator0.compare(bMResult0, bMResult0);
      assertEquals(0, int0);
  }
}
