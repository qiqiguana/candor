/*
 * This file was automatically generated by EvoSuite
 */

package fi.vtt.noen.mfw.bundle.probe.shared;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fi.vtt.noen.mfw.bundle.probe.shared.ProbeInformation;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ProbeInformationEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, 469, (String) null);
      String string0 = probeInformation0.toString();
      assertNotNull(string0);
      assertEquals("ProbeInformation{targetName='null', targetType='null', bmClass='null', bmName='null', bmDescription='null', probeDescription='null', precision=469}", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, 11, (String) null);
      probeInformation0.getXmlRpcUrl();
      assertEquals("ProbeInformation{targetName='null', targetType='null', bmClass='null', bmName='null', bmDescription='null', probeDescription='null', precision=11}", probeInformation0.toString());
      assertEquals(11, probeInformation0.getPrecision());
  }

  @Test
  public void test2()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation("*s_sAY$f8t\tIs)9qF@", "*s_sAY$f8t\tIs)9qF@", "*s_sAY$f8t\tIs)9qF@", "*s_sAY$f8t\tIs)9qF@", "*s_sAY$f8t\tIs)9qF@", "*s_sAY$f8t\tIs)9qF@", (-4), "*s_sAY$f8t\tIs)9qF@");
      String string0 = probeInformation0.getBmDescription();
      assertNotNull(string0);
      assertEquals("ProbeInformation{targetName='*s_sAY$f8t\tIs)9qF@', targetType='*s_sAY$f8t\tIs)9qF@', bmClass='*s_sAY$f8t\tIs)9qF@', bmName='*s_sAY$f8t\tIs)9qF@', bmDescription='*s_sAY$f8t\tIs)9qF@', probeDescription='*s_sAY$f8t\tIs)9qF@', precision=-4}", probeInformation0.toString());
      assertEquals(-4, probeInformation0.getPrecision());
  }

  @Test
  public void test3()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation("", "", "", "", "", "", 112, "");
      String string0 = probeInformation0.getMeasureURI();
      assertEquals("MFW://///", string0);
      assertEquals("ProbeInformation{targetName='', targetType='', bmClass='', bmName='', bmDescription='', probeDescription='', precision=112}", probeInformation0.toString());
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation("", "", "", "", "", "", 112, "");
      int int0 = probeInformation0.getPrecision();
      assertEquals(112, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation("fBy85!^s^Bk[(a|=", "fBy85!^s^Bk[(a|=", "fBy85!^s^Bk[(a|=", "fBy85!^s^Bk[(a|=", "fBy85!^s^Bk[(a|=", "~(`", (-1151), "fBy85!^s^Bk[(a|=");
      String string0 = probeInformation0.getBmClass();
      assertNotNull(string0);
      assertEquals("ProbeInformation{targetName='fBy85!^s^Bk[(a|=', targetType='fBy85!^s^Bk[(a|=', bmClass='fBy85!^s^Bk[(a|=', bmName='fBy85!^s^Bk[(a|=', bmDescription='fBy85!^s^Bk[(a|=', probeDescription='~(`', precision=-1151}", probeInformation0.toString());
      assertEquals("fBy85!^s^Bk[(a|=", probeInformation0.getXmlRpcUrl());
      assertEquals("fBy85!^s^Bk[(a|=", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation("", "", "", "", "", "", 112, "");
      String string0 = probeInformation0.getTargetName();
      assertNotNull(string0);
      assertEquals("ProbeInformation{targetName='', targetType='', bmClass='', bmName='', bmDescription='', probeDescription='', precision=112}", probeInformation0.toString());
      assertEquals(112, probeInformation0.getPrecision());
  }

  @Test
  public void test7()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, 469, (String) null);
      probeInformation0.getTargetType();
      assertEquals("ProbeInformation{targetName='null', targetType='null', bmClass='null', bmName='null', bmDescription='null', probeDescription='null', precision=469}", probeInformation0.toString());
      assertEquals(469, probeInformation0.getPrecision());
  }

  @Test
  public void test8()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation("b}cg-Q(Xpv_=(p!0", "b}cg-Q(Xpv_=(p!0", "b}cg-Q(Xpv_=(p!0", "b}cg-Q(Xpv_=(p!0", "dj0>e3bV#", "b}cg-Q(Xpv_=(p!0", 1908, "dj0>e3bV#");
      String string0 = probeInformation0.getProbeName();
      assertEquals("dj0>e3bV#", probeInformation0.getXmlRpcUrl());
      assertNotNull(string0);
      assertEquals("ProbeInformation{targetName='b}cg-Q(Xpv_=(p!0', targetType='b}cg-Q(Xpv_=(p!0', bmClass='b}cg-Q(Xpv_=(p!0', bmName='b}cg-Q(Xpv_=(p!0', bmDescription='dj0>e3bV#', probeDescription='b}cg-Q(Xpv_=(p!0', precision=1908}", probeInformation0.toString());
      assertEquals("b}cg-Q(Xpv_=(p!0", string0);
  }

  @Test
  public void test9()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, 469, (String) null);
      probeInformation0.getBmName();
      assertEquals(469, probeInformation0.getPrecision());
      assertEquals("ProbeInformation{targetName='null', targetType='null', bmClass='null', bmName='null', bmDescription='null', probeDescription='null', precision=469}", probeInformation0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation("", "", "", "", "", "", 112, "");
      ProbeInformation probeInformation1 = new ProbeInformation((String) null, (String) null, (String) null, (String) null, (String) null, "MFW://///", 112, (String) null);
      boolean boolean0 = probeInformation1.equals((Object) probeInformation0);
      assertEquals(false, boolean0);
      assertEquals("ProbeInformation{targetName='null', targetType='null', bmClass='null', bmName='null', bmDescription='null', probeDescription='MFW://///', precision=112}", probeInformation1.toString());
  }

  @Test
  public void test11()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, 11, (String) null);
      boolean boolean0 = probeInformation0.equals((Object) null);
      assertEquals(false, boolean0);
      assertEquals(11, probeInformation0.getPrecision());
  }

  @Test
  public void test12()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation("fBy85!^s^Bk[(a|=", "fBy85!^s^Bk[(a|=", "fBy85!^s^Bk[(a|=", "fBy85!^s^Bk[(a|=", "fBy85!^s^Bk[(a|=", "~(`", (-1151), "fBy85!^s^Bk[(a|=");
      boolean boolean0 = probeInformation0.equals((Object) "~(`");
      assertEquals("ProbeInformation{targetName='fBy85!^s^Bk[(a|=', targetType='fBy85!^s^Bk[(a|=', bmClass='fBy85!^s^Bk[(a|=', bmName='fBy85!^s^Bk[(a|=', bmDescription='fBy85!^s^Bk[(a|=', probeDescription='~(`', precision=-1151}", probeInformation0.toString());
      assertEquals(false, boolean0);
      assertEquals("fBy85!^s^Bk[(a|=", probeInformation0.getXmlRpcUrl());
  }

  @Test
  public void test13()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation("M", "M", "M", "M", "M", (String) null, 437, "M");
      ProbeInformation probeInformation1 = new ProbeInformation("M", "M", "M", "M", "M", "M", 0, "M");
      boolean boolean0 = probeInformation0.equals((Object) probeInformation1);
      assertEquals(false, boolean0);
      assertEquals("ProbeInformation{targetName='M', targetType='M', bmClass='M', bmName='M', bmDescription='M', probeDescription='null', precision=437}", probeInformation0.toString());
  }

  @Test
  public void test14()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation("*s_sAY$-8t\u0001s)9qFo@", "*s_sAY$-8t\u0001s)9qFo@", "*s_sAY$-8t\u0001s)9qFo@", "*s_sAY$-8t\u0001s)9qFo@", "*s_sAY$-8t\u0001s)9qFo@", "*s_sAY$-8t\u0001s)9qFo@", (-34), "*s_sAY$-8t\u0001s)9qFo@");
      ProbeInformation probeInformation1 = new ProbeInformation("*s_sAY$-8t\u0001s)9qFo@", "*s_sAY$-8t\u0001s)9qFo@", "*s_sAY$-8t\u0001s)9qFo@", "*s_sAY$-8t\u0001s)9qFo@", "*s_sAY$-8t\u0001s)9qFo@", "*s_sAY$-8t\u0001s)9qFo@", (-34), "*s_sAY$-8t\u0001s)9qFo@");
      boolean boolean0 = probeInformation0.equals((Object) probeInformation1);
      assertEquals(true, boolean0);
      assertEquals("ProbeInformation{targetName='*s_sAY$-8t\u0001s)9qFo@', targetType='*s_sAY$-8t\u0001s)9qFo@', bmClass='*s_sAY$-8t\u0001s)9qFo@', bmName='*s_sAY$-8t\u0001s)9qFo@', bmDescription='*s_sAY$-8t\u0001s)9qFo@', probeDescription='*s_sAY$-8t\u0001s)9qFo@', precision=-34}", probeInformation1.toString());
  }

  @Test
  public void test15()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation("b}cg-Q(Xpv_=(p!0", "b}cg-Q(Xpv_=(p!0", "b}cg-Q(Xpv_=(p!0", "b}cg-Q(Xpv_=(p!0", "dj0>e3bV#", "b}cg-Q(Xpv_=(p!0", 1908, "dj0>e3bV#");
      ProbeInformation probeInformation1 = new ProbeInformation("b}cg-Q(Xpv_=(p!0", "dj0>e3bV#", "dj0>e3bV#", "b}cg-Q(Xpv_=(p!0", "b}cg-Q(Xpv_=(p!0", "b}cg-Q(Xpv_=(p!0", 1908, "b}cg-Q(Xpv_=(p!0");
      boolean boolean0 = probeInformation0.equals((Object) probeInformation1);
      assertEquals("ProbeInformation{targetName='b}cg-Q(Xpv_=(p!0', targetType='b}cg-Q(Xpv_=(p!0', bmClass='b}cg-Q(Xpv_=(p!0', bmName='b}cg-Q(Xpv_=(p!0', bmDescription='dj0>e3bV#', probeDescription='b}cg-Q(Xpv_=(p!0', precision=1908}", probeInformation0.toString());
      assertEquals("dj0>e3bV#", probeInformation0.getXmlRpcUrl());
      assertEquals(false, boolean0);
      assertEquals("ProbeInformation{targetName='b}cg-Q(Xpv_=(p!0', targetType='dj0>e3bV#', bmClass='dj0>e3bV#', bmName='b}cg-Q(Xpv_=(p!0', bmDescription='b}cg-Q(Xpv_=(p!0', probeDescription='b}cg-Q(Xpv_=(p!0', precision=1908}", probeInformation1.toString());
  }

  @Test
  public void test16()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation((String) null, (String) null, (String) null, (String) null, (String) null, "MFW://///", 112, (String) null);
      ProbeInformation probeInformation1 = new ProbeInformation((String) null, (String) null, (String) null, "", "", (String) null, 112, "");
      boolean boolean0 = probeInformation0.equals((Object) probeInformation1);
      assertEquals(false, boolean0);
      assertEquals("ProbeInformation{targetName='null', targetType='null', bmClass='null', bmName='', bmDescription='', probeDescription='null', precision=112}", probeInformation1.toString());
      assertEquals("ProbeInformation{targetName='null', targetType='null', bmClass='null', bmName='null', bmDescription='null', probeDescription='MFW://///', precision=112}", probeInformation0.toString());
  }

  @Test
  public void test17()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation("b}cg-Q(Xpv_=(p!0", "b}cg-Q(Xpv_=(p!0", "b}cg-Q(Xpv_=(p!0", "b}cg-Q(Xpv_=(p!0", "dj0>e3bV#", "b}cg-Q(Xpv_=(p!0", 1908, "dj0>e3bV#");
      ProbeInformation probeInformation1 = new ProbeInformation("b}cg-Q(Xpv_=(p!0", "b}cg-Q(Xpv_=(p!0", "b}cg-Q(Xpv_=(p!0", "b}cg-Q(Xpv_=(p!0", "b}cg-Q(Xpv_=(p!0", "b}cg-Q(Xpv_=(p!0", 1908, "b}cg-Q(Xpv_=(p!0");
      boolean boolean0 = probeInformation1.equals((Object) probeInformation0);
      assertEquals("ProbeInformation{targetName='b}cg-Q(Xpv_=(p!0', targetType='b}cg-Q(Xpv_=(p!0', bmClass='b}cg-Q(Xpv_=(p!0', bmName='b}cg-Q(Xpv_=(p!0', bmDescription='dj0>e3bV#', probeDescription='b}cg-Q(Xpv_=(p!0', precision=1908}", probeInformation0.toString());
      assertEquals("dj0>e3bV#", probeInformation0.getXmlRpcUrl());
      assertEquals(false, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, 1864, (String) null);
      ProbeInformation probeInformation1 = new ProbeInformation((String) null, (String) null, (String) null, "-]\"ux,KOd'cv+lx:Y", (String) null, (String) null, 1864, "-]\"ux,KOd'cv+lx:Y");
      boolean boolean0 = probeInformation0.equals((Object) probeInformation1);
      assertEquals(false, boolean0);
      assertEquals("ProbeInformation{targetName='null', targetType='null', bmClass='null', bmName='-]\"ux,KOd'cv+lx:Y', bmDescription='null', probeDescription='null', precision=1864}", probeInformation1.toString());
      assertFalse(probeInformation1.equals(probeInformation0));
  }

  @Test
  public void test19()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation("*s_sAY$f8t\tIs)9qF@", "*s_sAY$f8t\tIs)9qF@", "*s_sAY$f8t\tIs)9qF@", "*s_sAY$f8t\tIs)9qF@", "*s_sAY$f8t\tIs)9qF@", "*s_sAY$f8t\tIs)9qF@", (-4), "*s_sAY$f8t\tIs)9qF@");
      ProbeInformation probeInformation1 = new ProbeInformation("*s_sAY$f8t\tIs)9qF@", "*s_sAY$f8t\tIs)9qF@", "*s_sAY$f8t\tIs)9qF@", "2B!B", "*s_sAY$f8t\tIs)9qF@", "*s_sAY$f8t\tIs)9qF@", (-4), "2B!B");
      boolean boolean0 = probeInformation0.equals((Object) probeInformation1);
      assertEquals("2B!B", probeInformation1.getXmlRpcUrl());
      assertEquals(false, boolean0);
      assertEquals("ProbeInformation{targetName='*s_sAY$f8t\tIs)9qF@', targetType='*s_sAY$f8t\tIs)9qF@', bmClass='*s_sAY$f8t\tIs)9qF@', bmName='2B!B', bmDescription='*s_sAY$f8t\tIs)9qF@', probeDescription='*s_sAY$f8t\tIs)9qF@', precision=-4}", probeInformation1.toString());
  }

  @Test
  public void test20()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, 1864, (String) null);
      ProbeInformation probeInformation1 = new ProbeInformation((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, 1864, (String) null);
      boolean boolean0 = probeInformation1.equals((Object) probeInformation0);
      assertEquals(true, boolean0);
      assertEquals(1864, probeInformation0.getPrecision());
  }

  @Test
  public void test21()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation("h1^n]LA4K:+-9B,", "h1^n]LA4K:+-9B,", "h1^n]LA4K:+-9B,", "h1^n]LA4K:+-9B,", "h1^n]LA4K:+-9B,", "h1^n]LA4K:+-9B,", 379, "h1^n]LA4K:+-9B,");
      ProbeInformation probeInformation1 = new ProbeInformation("h1^n]LA4K:+-9B,", "h1^n]LA4K:+-9B,", "h1^n]LA4K:+-9B,", "h1^n]LA4K:+-9B,", "h1^n]LA4K:+-9B,", "{;EOY8T8m&qW&", 379, "h1^n]LA4K:+-9B,");
      boolean boolean0 = probeInformation0.equals((Object) probeInformation1);
      assertEquals(false, boolean0);
      assertEquals("h1^n]LA4K:+-9B,", probeInformation1.getXmlRpcUrl());
      assertEquals("ProbeInformation{targetName='h1^n]LA4K:+-9B,', targetType='h1^n]LA4K:+-9B,', bmClass='h1^n]LA4K:+-9B,', bmName='h1^n]LA4K:+-9B,', bmDescription='h1^n]LA4K:+-9B,', probeDescription='{;EOY8T8m&qW&', precision=379}", probeInformation1.toString());
  }

  @Test
  public void test22()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation("M", "M", "M", "M", "M", (String) null, 437, "M");
      ProbeInformation probeInformation1 = new ProbeInformation("M", "M", "M", "M", "M", "M", 437, (String) null);
      boolean boolean0 = probeInformation0.equals((Object) probeInformation1);
      assertEquals(false, boolean0);
      assertEquals("ProbeInformation{targetName='M', targetType='M', bmClass='M', bmName='M', bmDescription='M', probeDescription='M', precision=437}", probeInformation1.toString());
      assertEquals("ProbeInformation{targetName='M', targetType='M', bmClass='M', bmName='M', bmDescription='M', probeDescription='null', precision=437}", probeInformation0.toString());
  }

  @Test
  public void test23()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation("fBy85!^s^Bk[(a|=", "fBy85!^s^Bk[(a|=", "fBy85!^s^Bk[(a|=", "fBy85!^s^Bk[(a|=", "fBy85!^s^Bk[(a|=", "~(`", (-1151), "fBy85!^s^Bk[(a|=");
      ProbeInformation probeInformation1 = new ProbeInformation("~(`", "fBy85!^s^Bk[(a|=", "fBy85!^s^Bk[(a|=", "fBy85!^s^Bk[(a|=", "fBy85!^s^Bk[(a|=", "~(`", (-1151), "fBy85!^s^Bk[(a|=");
      boolean boolean0 = probeInformation0.equals((Object) probeInformation1);
      assertEquals("fBy85!^s^Bk[(a|=", probeInformation1.getXmlRpcUrl());
      assertEquals(false, boolean0);
      assertEquals("~(`", probeInformation0.getProbeName());
      assertEquals("ProbeInformation{targetName='~(`', targetType='fBy85!^s^Bk[(a|=', bmClass='fBy85!^s^Bk[(a|=', bmName='fBy85!^s^Bk[(a|=', bmDescription='fBy85!^s^Bk[(a|=', probeDescription='~(`', precision=-1151}", probeInformation1.toString());
  }

  @Test
  public void test24()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, 469, (String) null);
      ProbeInformation probeInformation1 = new ProbeInformation("t6", (String) null, (String) null, (String) null, (String) null, (String) null, 469, (String) null);
      boolean boolean0 = probeInformation0.equals((Object) probeInformation1);
      assertEquals("ProbeInformation{targetName='t6', targetType='null', bmClass='null', bmName='null', bmDescription='null', probeDescription='null', precision=469}", probeInformation1.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test25()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation("~(`", "fBy85!^s^Bk[(a|=", "~(`", "~(`", "~(`", "~(`", (-1151), "~(`");
      ProbeInformation probeInformation1 = new ProbeInformation("~(`", "~(`", "~(`", "~(`", "~(`", "~(`", (-1151), "~(`");
      boolean boolean0 = probeInformation0.equals((Object) probeInformation1);
      assertEquals("~(`", probeInformation0.getXmlRpcUrl());
      assertEquals("ProbeInformation{targetName='~(`', targetType='fBy85!^s^Bk[(a|=', bmClass='~(`', bmName='~(`', bmDescription='~(`', probeDescription='~(`', precision=-1151}", probeInformation0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test26()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, 1173, (String) null);
      int int0 = probeInformation0.hashCode();
      assertEquals(1173, int0);
  }

  @Test
  public void test27()  throws Throwable  {
      ProbeInformation probeInformation0 = new ProbeInformation("sgWRrqg?xPA|H", "sgWRrqg?xPA|H", "sgWRrqg?xPA|H", "sgWRrqg?xPA|H", "sgWRrqg?xPA|H", "sgWRrqg?xPA|H", 1173, "sgWRrqg?xPA|H");
      int int0 = probeInformation0.hashCode();
      assertEquals(1055225045, int0);
  }
}
