/*
 * This file was automatically generated by EvoSuite
 */

package fi.vtt.noen.mfw.bundle.server.plugins.webui.derivedmeasurepage;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fi.vtt.noen.mfw.bundle.server.plugins.webui.derivedmeasurepage.DMValueComparator;
import fi.vtt.noen.mfw.bundle.server.shared.datamodel.DMDefinition;
import fi.vtt.noen.mfw.bundle.server.shared.datamodel.DMValue;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DMValueComparatorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DMValueComparator dMValueComparator0 = new DMValueComparator("", false);
      int int0 = dMValueComparator0.compare((DMValue) null, (DMValue) null);
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      DMValueComparator dMValueComparator0 = new DMValueComparator("id", true);
      DMDefinition dMDefinition0 = new DMDefinition(823, "id", "id");
      DMValue dMValue0 = new DMValue(dMDefinition0, "id", (long) 0);
      int int0 = dMValueComparator0.compare(dMValue0, dMValue0);
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      DMValueComparator dMValueComparator0 = new DMValueComparator("name", true);
      DMDefinition dMDefinition0 = new DMDefinition(1819, "name", "name");
      DMValue dMValue0 = new DMValue(dMDefinition0, (double) 0, (long) 0);
      int int0 = dMValueComparator0.compare(dMValue0, dMValue0);
      assertEquals(0, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      DMValueComparator dMValueComparator0 = new DMValueComparator("value", true);
      DMDefinition dMDefinition0 = new DMDefinition(85, "value", "DM_VALUE");
      DMValue dMValue0 = new DMValue(dMDefinition0, "value", (long) 85);
      int int0 = dMValueComparator0.compare(dMValue0, dMValue0);
      assertEquals(0, int0);
  }
}
