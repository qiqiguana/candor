/*
 * This file was automatically generated by EvoSuite
 */

package net.kencochrane.a4j.beans;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.ArrayList;
import net.kencochrane.a4j.beans.Platforms;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PlatformsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Platforms platforms0 = new Platforms();
      ArrayList<Object> arrayList0 = platforms0.getPlatformsArray();
      assertNull(arrayList0);
  }

  @Test
  public void test1()  throws Throwable  {
      Platforms platforms0 = new Platforms();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      platforms0.platform = arrayList0;
      String[] stringArray0 = platforms0.getPlatform();
      assertNotNull(stringArray0);
  }

  @Test
  public void test2()  throws Throwable  {
      Platforms platforms0 = new Platforms();
      String[] stringArray0 = new String[2];
      platforms0.setPlatform(stringArray0);
      String[] stringArray1 = platforms0.getPlatform();
      assertNotSame(stringArray1, stringArray0);
  }

  @Test
  public void test3()  throws Throwable  {
      Platforms platforms0 = new Platforms();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      platforms0.platform = arrayList0;
      String string0 = platforms0.getPlatform((-3));
      assertNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      Platforms platforms0 = new Platforms();
      String[] stringArray0 = new String[2];
      platforms0.setPlatform(stringArray0);
      // Undeclared exception!
      try {
        platforms0.getPlatform(1011);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 1011, Size: 2
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      Platforms platforms0 = new Platforms();
      String string0 = platforms0.toString();
      assertNotNull(string0);
      assertEquals("Platforms is null or size 0\n", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      Platforms platforms0 = new Platforms();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      platforms0.platform = arrayList0;
      String string0 = platforms0.toString();
      assertEquals("Platforms is null or size 0\n", string0);
      assertNotNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      Platforms platforms0 = new Platforms();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Platforms is null or size 0\n";
      stringArray0[1] = "Platforms is null or size 0\n";
      platforms0.setPlatform(stringArray0);
      String string0 = platforms0.toString();
      assertEquals("# of Platforms = 2\nPlatform - Platforms is null or size 0\n\nPlatform - Platforms is null or size 0\n\n", platforms0.toString());
      assertEquals("# of Platforms = 2\nPlatform - Platforms is null or size 0\n\nPlatform - Platforms is null or size 0\n\n", string0);
  }
}
