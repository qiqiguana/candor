/*
 * This file was automatically generated by EvoSuite
 */

package net.kencochrane.a4j.beans;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.ArrayList;
import net.kencochrane.a4j.beans.Features;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FeaturesEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Features features0 = new Features();
      ArrayList<Object> arrayList0 = features0.getFeaturesArray();
      assertNull(arrayList0);
  }

  @Test
  public void test1()  throws Throwable  {
      Features features0 = new Features();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      features0.features = arrayList0;
      String[] stringArray0 = features0.getFeature();
      assertNotNull(stringArray0);
  }

  @Test
  public void test2()  throws Throwable  {
      Features features0 = new Features();
      String[] stringArray0 = new String[2];
      features0.setFeature(stringArray0);
      String[] stringArray1 = features0.getFeature();
      assertFalse(stringArray1.equals(stringArray0));
  }

  @Test
  public void test3()  throws Throwable  {
      Features features0 = new Features();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      features0.features = arrayList0;
      String string0 = features0.getFeature((-1154));
      assertNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      Features features0 = new Features();
      String[] stringArray0 = new String[1];
      features0.setFeature(stringArray0);
      // Undeclared exception!
      try {
        features0.getFeature(2014);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 2014, Size: 1
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      Features features0 = new Features();
      String string0 = features0.toString();
      assertEquals("Feature is null or size 0\n", string0);
      assertNotNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      Features features0 = new Features();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      features0.features = arrayList0;
      String string0 = features0.toString();
      assertNotNull(string0);
      assertEquals("Feature is null or size 0\n", string0);
  }

  @Test
  public void test7()  throws Throwable  {
      Features features0 = new Features();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "?H";
      stringArray0[1] = "?H";
      features0.setFeature(stringArray0);
      String string0 = features0.toString();
      assertEquals("# of Feature = 2\nFeature - ?H\nFeature - ?H\n", features0.toString());
      assertEquals("# of Feature = 2\nFeature - ?H\nFeature - ?H\n", string0);
  }
}
