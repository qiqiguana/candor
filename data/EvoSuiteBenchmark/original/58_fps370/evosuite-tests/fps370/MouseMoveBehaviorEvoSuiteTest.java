/*
 * This file was automatically generated by EvoSuite
 */

package fps370;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fps370.Fps370Panel;
import fps370.MouseMoveBehavior;
import java.util.Enumeration;
import javax.media.j3d.Behavior;
import javax.media.j3d.WakeupOnBehaviorPost;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MouseMoveBehaviorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MouseMoveBehavior mouseMoveBehavior0 = new MouseMoveBehavior((Fps370Panel) null);
      // Undeclared exception!
      try {
        mouseMoveBehavior0.initialize();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * wakeupOn must be called from initialize or processStimulus
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      MouseMoveBehavior mouseMoveBehavior0 = new MouseMoveBehavior((Fps370Panel) null);
      WakeupOnBehaviorPost wakeupOnBehaviorPost0 = new WakeupOnBehaviorPost((Behavior) mouseMoveBehavior0, 64);
      Enumeration<Object> enumeration0 = wakeupOnBehaviorPost0.allElements();
      // Undeclared exception!
      try {
        mouseMoveBehavior0.processStimulus(enumeration0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * wakeupOn must be called from initialize or processStimulus
         */
      }
  }
}
