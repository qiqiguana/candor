/*
 * This file was automatically generated by EvoSuite
 */

package fps370;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import fps370.Fps370Panel;
import fps370.KeyUpBehavior;
import java.util.Enumeration;
import javax.media.j3d.WakeupAnd;
import javax.media.j3d.WakeupCriterion;
import javax.media.j3d.WakeupOnAWTEvent;
import javax.media.j3d.WakeupOnActivation;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class KeyUpBehaviorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      KeyUpBehavior keyUpBehavior0 = new KeyUpBehavior((Fps370Panel) null);
      // Undeclared exception!
      try {
        keyUpBehavior0.initialize();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * wakeupOn must be called from initialize or processStimulus
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      KeyUpBehavior keyUpBehavior0 = new KeyUpBehavior((Fps370Panel) null);
      WakeupCriterion[] wakeupCriterionArray0 = new WakeupCriterion[4];
      WakeupOnAWTEvent wakeupOnAWTEvent0 = new WakeupOnAWTEvent(1883);
      wakeupCriterionArray0[2] = (WakeupCriterion) wakeupOnAWTEvent0;
      wakeupCriterionArray0[3] = (WakeupCriterion) wakeupOnAWTEvent0;
      wakeupCriterionArray0[0] = (WakeupCriterion) wakeupOnAWTEvent0;
      WakeupOnActivation wakeupOnActivation0 = new WakeupOnActivation();
      wakeupCriterionArray0[1] = (WakeupCriterion) wakeupOnActivation0;
      WakeupAnd wakeupAnd0 = new WakeupAnd(wakeupCriterionArray0);
      Enumeration<Object> enumeration0 = wakeupAnd0.allElements();
      // Undeclared exception!
      try {
        keyUpBehavior0.processStimulus(enumeration0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * wakeupOn must be called from initialize or processStimulus
         */
      }
  }
}
