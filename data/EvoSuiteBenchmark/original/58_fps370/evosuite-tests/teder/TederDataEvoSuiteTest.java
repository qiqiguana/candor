/*
 * This file was automatically generated by EvoSuite
 */

package teder;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.image.ImageObserver;
import java.util.ArrayList;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JButton;
import javax.swing.JMenu;
import javax.swing.JTextArea;
import org.junit.BeforeClass;
import teder.TederData;
import teder.TederLayer;

@RunWith(EvoSuiteRunner.class)
public class TederDataEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JButton jButton0 = new JButton();
      TederData tederData0 = new TederData(1, 1, 1, 1, "", (Component) jButton0);
      assertNotNull(tederData0);
      
      int int0 = tederData0.getWidth();
      assertEquals(1, tederData0.getTileWidth());
      assertEquals(1, int0);
      assertEquals(true, tederData0.hasChanged);
      assertEquals(1, tederData0.getTileHeight());
      assertEquals(1, tederData0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      JButton jButton0 = new JButton();
      TederData tederData0 = new TederData(1, 1, 1, 1, "", (Component) jButton0);
      assertNotNull(tederData0);
      
      boolean boolean0 = tederData0.getHasChanged();
      assertEquals(true, boolean0);
      assertEquals(1, tederData0.size());
      assertEquals(false, tederData0.validFile);
      assertEquals(1, tederData0.getTileWidth());
      assertEquals(1, tederData0.getTileHeight());
  }

  @Test
  public void test2()  throws Throwable  {
      JMenu jMenu0 = new JMenu();
      TederData tederData0 = new TederData(0, 0, (-2024), (-2024), "", (Component) jMenu0);
      assertNotNull(tederData0);
      
      // Undeclared exception!
      try {
        tederData0.doLoad();
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      JTextArea jTextArea0 = new JTextArea("");
      TederData tederData0 = new TederData(0, 0, 0, 0, "", (Component) jTextArea0);
      assertNotNull(tederData0);
      
      boolean boolean0 = tederData0.isValidFile();
      assertEquals(0, tederData0.getHeight());
      assertEquals(false, boolean0);
      assertEquals(0, tederData0.getTileWidth());
      assertEquals(0, tederData0.getTileHeight());
      assertEquals(true, tederData0.hasChanged);
      assertEquals(0, tederData0.getWidth());
  }

  @Test
  public void test4()  throws Throwable  {
      JMenu jMenu0 = new JMenu();
      TederData tederData0 = new TederData((-1085), (-1), (-1085), (-1085), "", (Component) jMenu0);
      assertNotNull(tederData0);
      
      int int0 = tederData0.size();
      assertEquals(-1085, tederData0.getTileHeight());
      assertEquals(1177225, tederData0.getMapPixelWidth());
      assertEquals(1085, int0);
      assertEquals(false, tederData0.validFile);
      assertEquals(true, tederData0.hasChanged);
  }

  @Test
  public void test5()  throws Throwable  {
      JMenu jMenu0 = new JMenu();
      TederData tederData0 = new TederData((-1072), (-2), (-2), (-1072), "+", (Component) jMenu0);
      assertNotNull(tederData0);
      
      int int0 = tederData0.getHeight();
      assertEquals(2144, tederData0.getMapPixelHeight());
      assertEquals(true, tederData0.hasChanged);
      assertEquals((-2), int0);
      assertEquals(2144, tederData0.getMapPixelWidth());
      assertEquals(false, tederData0.validFile);
  }

  @Test
  public void test6()  throws Throwable  {
      JMenu jMenu0 = new JMenu();
      TederData tederData0 = new TederData((-1072), (-2), (-2), (-1072), "+", (Component) jMenu0);
      assertNotNull(tederData0);
      
      int int0 = tederData0.getTileHeight();
      assertEquals(true, tederData0.hasChanged);
      assertEquals(2144, tederData0.getMapPixelHeight());
      assertEquals((-1072), int0);
      assertEquals(2144, tederData0.getMapPixelWidth());
      assertEquals(false, tederData0.validFile);
  }

  @Test
  public void test7()  throws Throwable  {
      JMenu jMenu0 = new JMenu();
      TederData tederData0 = new TederData((-1072), (-2), (-2), (-1072), "+", (Component) jMenu0);
      assertNotNull(tederData0);
      
      int int0 = tederData0.getMapPixelHeight();
      assertEquals(false, tederData0.validFile);
      assertEquals(true, tederData0.hasChanged);
      assertEquals(2144, int0);
      assertEquals(2144, tederData0.getMapPixelWidth());
  }

  @Test
  public void test8()  throws Throwable  {
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      TederData tederData0 = new TederData(0, 0, 0, 0, "<`Y", (Component) defaultListCellRenderer0);
      assertNotNull(tederData0);
      
      tederData0.getMapPixelWidth();
      assertEquals(0, tederData0.getHeight());
      assertEquals(true, tederData0.hasChanged);
      assertEquals(0, tederData0.getTileWidth());
      assertEquals(0, tederData0.getWidth());
      assertEquals(0, tederData0.getTileHeight());
      assertEquals(false, tederData0.validFile);
      assertEquals(true, tederData0.getHasChanged());
  }

  @Test
  public void test9()  throws Throwable  {
      JMenu jMenu0 = new JMenu();
      TederData tederData0 = new TederData((-1085), (-1), (-1085), (-1085), "", (Component) jMenu0);
      assertNotNull(tederData0);
      
      TederLayer tederLayer0 = tederData0.addLayer();
      assertEquals(false, tederData0.validFile);
      assertEquals((-1085), tederLayer0.wid);
      assertEquals(-1085, tederData0.getTileWidth());
      assertEquals((-1), tederLayer0.hei);
      assertEquals(1085, tederData0.getMapPixelHeight());
      assertNotNull(tederLayer0);
      assertEquals(true, tederData0.hasChanged);
  }

  @Test
  public void test10()  throws Throwable  {
      JButton jButton0 = new JButton();
      TederData tederData0 = new TederData(1, 1, 1, 1, "", (Component) jButton0);
      assertNotNull(tederData0);
      
      int int0 = tederData0.getTileWidth();
      assertEquals(1, tederData0.size());
      assertEquals(1, int0);
      assertEquals(true, tederData0.hasChanged);
      assertEquals(false, tederData0.validFile);
      assertEquals(1, tederData0.getTileHeight());
  }

  @Test
  public void test11()  throws Throwable  {
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      TederData tederData0 = new TederData(0, 0, 0, 0, "<`Y", (Component) defaultListCellRenderer0);
      assertEquals(true, tederData0.hasChanged);
      assertNotNull(tederData0);
      
      tederData0.setHasChanged(false);
      assertEquals(false, tederData0.hasChanged);
      assertEquals(0, tederData0.getTileHeight());
  }

  @Test
  public void test12()  throws Throwable  {
      JButton jButton0 = new JButton();
      TederData tederData0 = new TederData(1, 1, 1, 1, "", (Component) jButton0);
      assertNotNull(tederData0);
      
      tederData0.setFileName("");
      assertEquals(true, tederData0.hasChanged);
      assertEquals(false, tederData0.validFile);
      assertEquals(1, tederData0.getTileHeight());
      assertEquals(1, tederData0.getTileWidth());
      assertEquals(1, tederData0.size());
      assertEquals(1, tederData0.getMapPixelHeight());
  }

  @Test
  public void test13()  throws Throwable  {
      JMenu jMenu0 = new JMenu();
      TederData tederData0 = new TederData(0, 0, (-2024), (-2024), "", (Component) jMenu0);
      assertNotNull(tederData0);
      
      ArrayList<Object> arrayList0 = tederData0.getLayers();
      assertEquals(false, tederData0.validFile);
      assertEquals(true, tederData0.hasChanged);
      assertEquals(-2024, tederData0.getTileHeight());
      assertNotNull(arrayList0);
      assertEquals(0, tederData0.getMapPixelWidth());
      assertEquals(-2024, tederData0.getTileWidth());
      assertEquals(0, tederData0.getHeight());
  }

  @Test
  public void test14()  throws Throwable  {
      JMenu jMenu0 = new JMenu();
      TederData tederData0 = new TederData((-1072), (-2), (-2), (-1072), "+", (Component) jMenu0);
      assertNotNull(tederData0);
      
      tederData0.drawTileImage((Graphics) null, (-1072), (-2), (-1072), (ImageObserver) jMenu0);
      assertEquals(-1072, tederData0.getTileHeight());
      assertEquals(true, tederData0.hasChanged);
      assertEquals(2144, tederData0.size());
      assertEquals(false, tederData0.validFile);
      assertEquals(-2, tederData0.getTileWidth());
      assertEquals(false, tederData0.isValidFile());
  }
}
