/*
 * This file was automatically generated by EvoSuite
 */

package com.allenstudio.ir.ui;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.allenstudio.ir.event.NoteListEventListener;
import com.allenstudio.ir.ui.NoteList;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Rectangle;
import javax.swing.Box;
import javax.swing.JToggleButton;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class NoteListEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      NoteList noteList0 = new NoteList();
      noteList0.select(0, false);
      assertEquals(0, noteList0.getSelectedIndex());
      assertEquals(0.49859154F, noteList0.getAlignmentX(), 0.01F);
      assertEquals(5, noteList0.getCellCount());
  }

  @Test
  public void test1()  throws Throwable  {
      NoteList noteList0 = new NoteList();
      boolean boolean0 = noteList0.getScrollableTracksViewportWidth();
      assertEquals(true, boolean0);
      assertEquals(0, noteList0.getSelectedIndex());
      assertEquals(5, noteList0.getCellCount());
      assertEquals(0.49859154F, noteList0.getAlignmentX(), 0.01F);
  }

  @Test
  public void test2()  throws Throwable  {
      NoteList noteList0 = new NoteList();
      Dimension dimension0 = noteList0.getPreferredScrollableViewportSize();
      assertNotNull(dimension0);
      assertEquals(5, noteList0.getCellCount());
      assertEquals(275, dimension0.height);
      assertEquals(0, noteList0.getSelectedIndex());
  }

  @Test
  public void test3()  throws Throwable  {
      NoteList noteList0 = new NoteList();
      noteList0.removeListEventListener();
      assertEquals(0.49859154F, noteList0.getAlignmentX(), 0.01F);
      assertEquals(5, noteList0.getCellCount());
      assertEquals(0, noteList0.getSelectedIndex());
      assertEquals(5, noteList0.getComponentCount());
  }

  @Test
  public void test4()  throws Throwable  {
      NoteList noteList0 = new NoteList();
      noteList0.getScrollableUnitIncrement((Rectangle) null, 0, 717);
      assertEquals(0, noteList0.getSelectedIndex());
      assertEquals(5, noteList0.getCellCount());
      assertEquals(0.49859154F, noteList0.getAlignmentX(), 0.01F);
  }

  @Test
  public void test5()  throws Throwable  {
      NoteList noteList0 = new NoteList();
      Rectangle rectangle0 = noteList0.getBounds();
      int int0 = noteList0.getScrollableBlockIncrement(rectangle0, 1256, 1157);
      assertEquals(0, noteList0.getSelectedIndex());
      assertEquals(5, noteList0.getCellCount());
      assertEquals(0, int0);
      assertEquals(0.49859154F, noteList0.getAlignmentX(), 0.01F);
  }

  @Test
  public void test6()  throws Throwable  {
      NoteList noteList0 = new NoteList();
      JToggleButton jToggleButton0 = new JToggleButton("", true);
      Rectangle rectangle0 = jToggleButton0.getBounds();
      int int0 = noteList0.getScrollableBlockIncrement(rectangle0, 0, 0);
      assertEquals(5, noteList0.getCellCount());
      assertEquals(0, int0);
      assertEquals(0, noteList0.getSelectedIndex());
      assertEquals(0.49859154F, noteList0.getAlignmentX(), 0.01F);
  }

  @Test
  public void test7()  throws Throwable  {
      NoteList noteList0 = new NoteList();
      boolean boolean0 = noteList0.getScrollableTracksViewportHeight();
      assertEquals(5, noteList0.getCellCount());
      assertEquals(0, noteList0.getSelectedIndex());
      assertEquals(false, boolean0);
      assertEquals(0.49859154F, noteList0.getAlignmentX(), 0.01F);
  }

  @Test
  public void test8()  throws Throwable  {
      NoteList noteList0 = new NoteList();
      noteList0.addNoteListEventListener((NoteListEventListener) null);
      assertEquals(0, noteList0.getSelectedIndex());
      assertEquals(0.49859154F, noteList0.getAlignmentX(), 0.01F);
      assertEquals(5, noteList0.getCellCount());
  }

  @Test
  public void test9()  throws Throwable  {
      NoteList noteList0 = new NoteList();
      // Undeclared exception!
      try {
        noteList0.select((int) 'q', false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * No such child: 113
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      NoteList noteList0 = new NoteList();
      Box box0 = Box.createVerticalBox();
      Point point0 = box0.getLocation();
      noteList0.fireRightClick((Object) null, point0);
      assertEquals(5, noteList0.getCellCount());
      assertEquals(0.49859154F, noteList0.getAlignmentX(), 0.01F);
      assertEquals(0, noteList0.getSelectedIndex());
  }

  @Test
  public void test11()  throws Throwable  {
      NoteList noteList0 = new NoteList();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Point point0 = defaultTreeCellRenderer0.getLocation();
      noteList0.fireDoubleClick((Object) "canceled", point0);
      assertEquals(5, noteList0.getCellCount());
      assertEquals(0.49859154F, noteList0.getAlignmentX(), 0.01F);
      assertEquals(0, noteList0.getSelectedIndex());
  }

  @Test
  public void test12()  throws Throwable  {
      NoteList noteList0 = new NoteList();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Point point0 = defaultTreeCellRenderer0.getLocation();
      noteList0.fireCursorEnter((Object) "rolloverSelectedIcon", point0);
      assertEquals(0.49859154F, noteList0.getAlignmentX(), 0.01F);
      assertEquals(0, noteList0.getSelectedIndex());
      assertEquals(5, noteList0.getCellCount());
  }

  @Test
  public void test13()  throws Throwable  {
      NoteList noteList0 = new NoteList();
      noteList0.fireCursorExit((Object) "$ename", (Point) null);
      assertEquals(0, noteList0.getSelectedIndex());
      assertEquals(0.49859154F, noteList0.getAlignmentX(), 0.01F);
      assertEquals(5, noteList0.getCellCount());
  }
}
