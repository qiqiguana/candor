/*
 * This file was automatically generated by EvoSuite
 */

package com.allenstudio.ir.ui;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.allenstudio.ir.core.plugins.AbstractNote;
import com.allenstudio.ir.core.plugins.CommonNote;
import com.allenstudio.ir.event.NoteListDataListener;
import com.allenstudio.ir.ui.DefaultNoteListModel;
import java.util.Enumeration;
import java.util.NoSuchElementException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DefaultNoteListModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      // Undeclared exception!
      try {
        defaultNoteListModel0.addElement((AbstractNote) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      boolean boolean0 = defaultNoteListModel0.removeElement((AbstractNote) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      Enumeration<AbstractNote> enumeration0 = defaultNoteListModel0.elements();
      assertEquals(false, enumeration0.hasMoreElements());
  }

  @Test
  public void test3()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      // Undeclared exception!
      try {
        defaultNoteListModel0.getElementAt((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -1
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      // Undeclared exception!
      try {
        defaultNoteListModel0.fireContentChanged((Object) null, 0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * null source
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      int int0 = defaultNoteListModel0.size();
      assertEquals(0, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      CommonNote commonNote0 = new CommonNote();
      // Undeclared exception!
      try {
        defaultNoteListModel0.insertElementAt((AbstractNote) commonNote0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 1 > 0
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      String string0 = defaultNoteListModel0.toString();
      assertEquals("[]", string0);
  }

  @Test
  public void test8()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      CommonNote commonNote0 = new CommonNote();
      int int0 = defaultNoteListModel0.lastIndexOf((AbstractNote) commonNote0);
      assertEquals((-1), int0);
  }

  @Test
  public void test9()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      // Undeclared exception!
      try {
        defaultNoteListModel0.elementAt(1049);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 1049 >= 0
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      // Undeclared exception!
      try {
        defaultNoteListModel0.get((-2));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -2
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      defaultNoteListModel0.addNoteListDataListener((NoteListDataListener) null);
      assertEquals(true, defaultNoteListModel0.isEmpty());
  }

  @Test
  public void test12()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      // Undeclared exception!
      try {
        defaultNoteListModel0.remove(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 0 >= 0
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      int int0 = defaultNoteListModel0.indexOf((AbstractNote) null, 940);
      assertEquals((-1), int0);
  }

  @Test
  public void test14()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      int int0 = defaultNoteListModel0.getSize();
      assertEquals(0, int0);
  }

  @Test
  public void test15()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      AbstractNote[] abstractNoteArray0 = defaultNoteListModel0.toArray();
      assertNotNull(abstractNoteArray0);
  }

  @Test
  public void test16()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      boolean boolean0 = defaultNoteListModel0.contains((AbstractNote) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      // Undeclared exception!
      try {
        defaultNoteListModel0.setElementAt((AbstractNote) null, 1503);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 1503 >= 0
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      defaultNoteListModel0.removeNoteListDataListener();
      assertEquals(10, defaultNoteListModel0.capacity());
  }

  @Test
  public void test19()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      // Undeclared exception!
      try {
        defaultNoteListModel0.removeElementAt(1257);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 1257 >= 0
         */
      }
  }

  @Test
  public void test20()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      int int0 = defaultNoteListModel0.lastIndexOf((AbstractNote) null, (-1));
      assertEquals((-1), int0);
  }

  @Test
  public void test21()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      CommonNote commonNote0 = new CommonNote();
      // Undeclared exception!
      try {
        defaultNoteListModel0.add((-1), (AbstractNote) commonNote0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test22()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      // Undeclared exception!
      try {
        defaultNoteListModel0.firstElement();
        fail("Expecting exception: NoSuchElementException");
      } catch(NoSuchElementException e) {
      }
  }

  @Test
  public void test23()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      boolean boolean0 = defaultNoteListModel0.isEmpty();
      assertEquals(true, boolean0);
  }

  @Test
  public void test24()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      // Undeclared exception!
      try {
        defaultNoteListModel0.fireItemRemoved((Object) " ", 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test25()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      // Undeclared exception!
      try {
        defaultNoteListModel0.set((-3), (AbstractNote) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -3
         */
      }
  }

  @Test
  public void test26()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      // Undeclared exception!
      try {
        defaultNoteListModel0.lastElement();
        fail("Expecting exception: NoSuchElementException");
      } catch(NoSuchElementException e) {
      }
  }

  @Test
  public void test27()  throws Throwable  {
      DefaultNoteListModel defaultNoteListModel0 = new DefaultNoteListModel();
      int int0 = defaultNoteListModel0.capacity();
      assertEquals(10, int0);
  }
}
