/*
 * This file was automatically generated by EvoSuite
 */

package jaw.metamodelo;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.List;
import java.util.Properties;
import jaw.metamodelo.Atributo;
import jaw.metamodelo.Entidade;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AtributoEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Atributo atributo0 = new Atributo();
      String string0 = atributo0.getNomeAsTabela();
      assertNotNull(string0);
      assertEquals(false, atributo0.isChavePrimaria());
      assertEquals(0, atributo0.getTamanho());
      assertEquals(false, atributo0.getChavePrimaria());
  }

  @Test
  public void test1()  throws Throwable  {
      Atributo atributo0 = new Atributo();
      List<Atributo> list0 = atributo0.getAtributosExportados();
      assertEquals(0, atributo0.getTamanho());
      assertNotNull(list0);
      assertEquals(false, atributo0.getChavePrimaria());
      assertEquals(false, atributo0.isChavePrimaria());
  }

  @Test
  public void test2()  throws Throwable  {
      Atributo atributo0 = new Atributo();
      Properties properties0 = atributo0.getTipos();
      assertEquals(false, atributo0.isChavePrimaria());
      assertNotNull(properties0);
      assertEquals(0, atributo0.getTamanho());
  }

  @Test
  public void test3()  throws Throwable  {
      Atributo atributo0 = new Atributo();
      String string0 = atributo0.toString();
      assertNotNull(string0);
      assertEquals(false, atributo0.getChavePrimaria());
      assertEquals(0, atributo0.getTamanho());
  }

  @Test
  public void test4()  throws Throwable  {
      Atributo atributo0 = new Atributo();
      String string0 = atributo0.getNomeAsAtributo();
      assertEquals(false, atributo0.isChavePrimaria());
      assertNotNull(string0);
      assertEquals(0, atributo0.getTamanho());
  }

  @Test
  public void test5()  throws Throwable  {
      Atributo atributo0 = new Atributo();
      int int0 = atributo0.getTamanho();
      assertEquals(0, int0);
      assertEquals(false, atributo0.getChavePrimaria());
  }

  @Test
  public void test6()  throws Throwable  {
      Atributo atributo0 = new Atributo();
      Entidade entidade0 = new Entidade(" bd>Za*KVxE-]");
      List<Atributo> list0 = entidade0.getAtributos();
      atributo0.setAtributosExportados(list0);
      assertEquals(0, atributo0.getTamanho());
      assertEquals(false, atributo0.isChavePrimaria());
  }

  @Test
  public void test7()  throws Throwable  {
      Atributo atributo0 = new Atributo();
      atributo0.setAtributoImportado(atributo0);
      Entidade entidade0 = atributo0.getEntidadeImportada();
      assertEquals(0, atributo0.getTamanho());
      assertEquals(false, atributo0.isChavePrimaria());
      assertNotNull(entidade0);
  }

  @Test
  public void test8()  throws Throwable  {
      Atributo atributo0 = new Atributo();
      boolean boolean0 = atributo0.getChavePrimaria();
      assertEquals(false, boolean0);
      assertEquals(0, atributo0.getTamanho());
  }

  @Test
  public void test9()  throws Throwable  {
      Atributo atributo0 = new Atributo();
      Properties properties0 = new Properties();
      atributo0.setTipos(properties0);
      assertEquals(0, atributo0.getTamanho());
      assertEquals(false, atributo0.isChavePrimaria());
  }

  @Test
  public void test10()  throws Throwable  {
      Atributo atributo0 = new Atributo();
      atributo0.setTipo("");
      assertEquals(0, atributo0.getTamanho());
      assertEquals(false, atributo0.isChavePrimaria());
  }

  @Test
  public void test11()  throws Throwable  {
      Atributo atributo0 = new Atributo();
      atributo0.setTamanho((-1));
      assertEquals(-1, atributo0.getTamanho());
  }

  @Test
  public void test12()  throws Throwable  {
      Atributo atributo0 = new Atributo();
      atributo0.setChavePrimaria(false);
      assertEquals(false, atributo0.getChavePrimaria());
      assertEquals(0, atributo0.getTamanho());
  }

  @Test
  public void test13()  throws Throwable  {
      Atributo atributo0 = new Atributo();
      atributo0.getAtributoImportado();
      assertEquals(false, atributo0.getChavePrimaria());
      assertEquals(0, atributo0.getTamanho());
  }

  @Test
  public void test14()  throws Throwable  {
      Atributo atributo0 = new Atributo();
      int int0 = atributo0.compareTo((Object) atributo0);
      assertEquals(0, int0);
      assertEquals(0, atributo0.getTamanho());
      assertEquals(false, atributo0.isChavePrimaria());
  }

  @Test
  public void test15()  throws Throwable  {
      Atributo atributo0 = new Atributo();
      String string0 = atributo0.getTipo();
      assertNotNull(string0);
      assertEquals(0, atributo0.getTamanho());
      assertEquals(false, atributo0.isChavePrimaria());
      assertEquals(false, atributo0.getChavePrimaria());
  }

  @Test
  public void test16()  throws Throwable  {
      Atributo atributo0 = new Atributo();
      String string0 = atributo0.getNomeAsTexto();
      assertNotNull(string0);
      assertEquals(0, atributo0.getTamanho());
      assertEquals(false, atributo0.isChavePrimaria());
      assertEquals(false, atributo0.getChavePrimaria());
  }

  @Test
  public void test17()  throws Throwable  {
      Atributo atributo0 = new Atributo();
      atributo0.setNome(".");
      assertEquals(0, atributo0.getTamanho());
      assertEquals(false, atributo0.getChavePrimaria());
  }

  @Test
  public void test18()  throws Throwable  {
      Atributo atributo0 = new Atributo();
      String string0 = atributo0.getNomeAsClasse();
      assertNotNull(string0);
      assertEquals(false, atributo0.getChavePrimaria());
      assertEquals(0, atributo0.getTamanho());
  }

  @Test
  public void test19()  throws Throwable  {
      Atributo atributo0 = new Atributo();
      boolean boolean0 = atributo0.isChavePrimaria();
      assertEquals(0, atributo0.getTamanho());
      assertEquals(false, boolean0);
  }

  @Test
  public void test20()  throws Throwable  {
      Atributo atributo0 = new Atributo();
      Entidade entidade0 = atributo0.getEntidadeImportada();
      atributo0.setEntidade(entidade0);
      assertEquals(0, atributo0.getTamanho());
      assertEquals(false, atributo0.getChavePrimaria());
      assertEquals(false, atributo0.isChavePrimaria());
  }

  @Test
  public void test21()  throws Throwable  {
      Atributo atributo0 = new Atributo();
      int int0 = atributo0.compareTo((Object) "");
      assertEquals((-1), int0);
      assertEquals(0, atributo0.getTamanho());
      assertEquals(false, atributo0.isChavePrimaria());
  }
}
