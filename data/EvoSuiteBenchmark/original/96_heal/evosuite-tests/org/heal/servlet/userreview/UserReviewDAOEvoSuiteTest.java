/*
 * This file was automatically generated by EvoSuite
 */

package org.heal.servlet.userreview;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.microsoft.jdbc.sqlserver.SQLServerConnection;
import com.microsoft.jdbcx.base.BaseXADataSource;
import java.sql.Connection;
import java.sql.SQLException;
import javax.sql.DataSource;
import org.heal.servlet.userreview.UserReviewBean;
import org.heal.servlet.userreview.UserReviewDAO;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UserReviewDAOEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UserReviewDAO userReviewDAO0 = new UserReviewDAO();
      UserReviewBean userReviewBean0 = new UserReviewBean();
      // Undeclared exception!
      try {
        userReviewDAO0.saveUserReview(userReviewBean0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      UserReviewDAO userReviewDAO0 = new UserReviewDAO();
      UserReviewBean userReviewBean0 = new UserReviewBean();
      // Undeclared exception!
      try {
        userReviewDAO0.approveUserReview(userReviewBean0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      UserReviewDAO userReviewDAO0 = new UserReviewDAO();
      BaseXADataSource baseXADataSource0 = new BaseXADataSource();
      userReviewDAO0.setDataSource((DataSource) baseXADataSource0);
      assertNull(baseXADataSource0.getSpyAttributes());
  }

  @Test
  public void test3()  throws Throwable  {
      UserReviewDAO userReviewDAO0 = new UserReviewDAO();
      // Undeclared exception!
      try {
        userReviewDAO0.clearUserReviewApproval("1{R");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      UserReviewDAO userReviewDAO0 = new UserReviewDAO();
      UserReviewBean userReviewBean0 = new UserReviewBean();
      // Undeclared exception!
      try {
        userReviewDAO0.saveUserReview(userReviewBean0, (Connection) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      UserReviewDAO userReviewDAO0 = new UserReviewDAO();
      SQLServerConnection sQLServerConnection0 = new SQLServerConnection();
      userReviewDAO0.saveUserReview((UserReviewBean) null, (Connection) sQLServerConnection0);
      assertEquals("", userReviewDAO0.getServletInfo());
  }

  @Test
  public void test6()  throws Throwable  {
      UserReviewBean userReviewBean0 = new UserReviewBean();
      UserReviewDAO userReviewDAO0 = new UserReviewDAO();
      // Undeclared exception!
      try {
        userReviewDAO0.approveUserReview(userReviewBean0, (Connection) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      UserReviewDAO userReviewDAO0 = new UserReviewDAO();
      userReviewDAO0.approveUserReview((UserReviewBean) null, (Connection) null);
      assertEquals("", userReviewDAO0.getServletInfo());
  }
}
