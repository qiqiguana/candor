/*
 * This file was automatically generated by EvoSuite
 */

package org.heal.module.user;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.heal.module.user.UserBean;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UserBeanEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      String string0 = userBean0.getProfessionalTitle();
      assertEquals(false, userBean0.isCataloger());
      assertEquals(true, userBean0.isMinor());
      assertNotNull(string0);
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isAdministrator());
  }

  @Test
  public void test1()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      userBean0.setCataloger(false);
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isCataloger());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isAdministrator());
  }

  @Test
  public void test2()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      String string0 = userBean0.getProfessionalSpecialty();
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isCataloger());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isAdministrator());
      assertNotNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      userBean0.setApprover(false);
      assertEquals(false, userBean0.isCataloger());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isAdministrator());
  }

  @Test
  public void test4()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      String string0 = userBean0.getUserName();
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(false, userBean0.isCataloger());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isApprover());
      assertNotNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      String string0 = userBean0.getState();
      assertEquals(false, userBean0.isCataloger());
      assertEquals(false, userBean0.isAdministrator());
      assertNotNull(string0);
      assertEquals(false, userBean0.isApprover());
      assertEquals(true, userBean0.isMinor());
  }

  @Test
  public void test6()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      String string0 = userBean0.getPhoneNumber();
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isAdministrator());
      assertNotNull(string0);
      assertEquals(false, userBean0.isCataloger());
  }

  @Test
  public void test7()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      String string0 = userBean0.getUserId();
      assertNotNull(string0);
      assertEquals(false, userBean0.isCataloger());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(false, userBean0.isApprover());
  }

  @Test
  public void test8()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      userBean0.setLastName("Mq@[38W9=(Pp%uC");
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(false, userBean0.isApprover());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isCataloger());
  }

  @Test
  public void test9()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      userBean0.setMiddleInitial("");
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isCataloger());
  }

  @Test
  public void test10()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      boolean boolean0 = userBean0.isMinor();
      assertEquals(false, userBean0.isCataloger());
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      userBean0.setZipCode("v");
      assertEquals(false, userBean0.isApprover());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(false, userBean0.isCataloger());
  }

  @Test
  public void test12()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      String string0 = userBean0.getZipCode();
      assertNotNull(string0);
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isCataloger());
  }

  @Test
  public void test13()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      String string0 = userBean0.getXML();
      assertEquals(true, userBean0.isMinor());
      assertEquals("not implemented", string0);
      assertEquals(false, userBean0.isCataloger());
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isAdministrator());
  }

  @Test
  public void test14()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      userBean0.setState("&,77Cd^SvPO1~qsaNS");
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(false, userBean0.isCataloger());
      assertEquals(true, userBean0.isMinor());
  }

  @Test
  public void test15()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      userBean0.setInstitutionName("");
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(false, userBean0.isCataloger());
  }

  @Test
  public void test16()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      boolean boolean0 = userBean0.isApprover();
      assertEquals(false, boolean0);
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isCataloger());
  }

  @Test
  public void test17()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      String string0 = userBean0.getMiddleInitial();
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(false, userBean0.isCataloger());
      assertNotNull(string0);
      assertEquals(false, userBean0.isApprover());
      assertEquals(true, userBean0.isMinor());
  }

  @Test
  public void test18()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      userBean0.setCity((String) null);
      assertEquals(false, userBean0.isApprover());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(false, userBean0.isCataloger());
  }

  @Test
  public void test19()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      userBean0.setProfessionalSpecialty("");
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isCataloger());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isAdministrator());
  }

  @Test
  public void test20()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      String string0 = userBean0.getAddress1();
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isCataloger());
      assertEquals(true, userBean0.isMinor());
      assertNotNull(string0);
  }

  @Test
  public void test21()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      userBean0.setFirstName("");
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isCataloger());
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isAdministrator());
  }

  @Test
  public void test22()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      String string0 = userBean0.getPassword();
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(false, userBean0.isApprover());
      assertNotNull(string0);
      assertEquals(false, userBean0.isCataloger());
  }

  @Test
  public void test23()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      boolean boolean0 = userBean0.isCataloger();
      assertEquals(false, boolean0);
      assertEquals(false, userBean0.isApprover());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isAdministrator());
  }

  @Test
  public void test24()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      userBean0.setCountry("");
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isCataloger());
  }

  @Test
  public void test25()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      String string0 = userBean0.getInstitutionName();
      assertNotNull(string0);
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isCataloger());
  }

  @Test
  public void test26()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      userBean0.setUserName("");
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isCataloger());
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(true, userBean0.isMinor());
  }

  @Test
  public void test27()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      String string0 = userBean0.getLastName();
      assertEquals(false, userBean0.isApprover());
      assertNotNull(string0);
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(false, userBean0.isCataloger());
  }

  @Test
  public void test28()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      String string0 = userBean0.getAddress2();
      assertEquals(false, userBean0.isAdministrator());
      assertNotNull(string0);
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isCataloger());
      assertEquals(false, userBean0.isApprover());
  }

  @Test
  public void test29()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      userBean0.parseXML("x*ML");
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isCataloger());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isAdministrator());
  }

  @Test
  public void test30()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      userBean0.setProfessionalTitle("2)");
      assertEquals(false, userBean0.isCataloger());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(false, userBean0.isApprover());
  }

  @Test
  public void test31()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      userBean0.setPassword("");
      assertEquals(false, userBean0.isApprover());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isCataloger());
      assertEquals(false, userBean0.isAdministrator());
  }

  @Test
  public void test32()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      userBean0.setAddress1("");
      assertEquals(false, userBean0.isCataloger());
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(true, userBean0.isMinor());
  }

  @Test
  public void test33()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      String string0 = userBean0.getEmail();
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isCataloger());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isAdministrator());
      assertNotNull(string0);
  }

  @Test
  public void test34()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      userBean0.setPhoneNumber("");
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isCataloger());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isAdministrator());
  }

  @Test
  public void test35()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      boolean boolean0 = userBean0.isAdministrator();
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, boolean0);
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isCataloger());
  }

  @Test
  public void test36()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      userBean0.setUserId("Mq@[38W9=(Pp%uC");
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isCataloger());
  }

  @Test
  public void test37()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      userBean0.setAddress2("&,77Cd^SvPO1~qsaNS");
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isCataloger());
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(false, userBean0.isApprover());
  }

  @Test
  public void test38()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      String string0 = userBean0.getCountry();
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isAdministrator());
      assertNotNull(string0);
      assertEquals(false, userBean0.isCataloger());
      assertEquals(false, userBean0.isApprover());
  }

  @Test
  public void test39()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      userBean0.setAdministrator(false);
      assertEquals(false, userBean0.isCataloger());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(false, userBean0.isApprover());
  }

  @Test
  public void test40()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      String string0 = userBean0.getFirstName();
      assertNotNull(string0);
      assertEquals(false, userBean0.isCataloger());
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isApprover());
  }

  @Test
  public void test41()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      String string0 = userBean0.getCity();
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isApprover());
      assertNotNull(string0);
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(false, userBean0.isCataloger());
  }

  @Test
  public void test42()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      userBean0.setMinor(true);
      assertEquals(false, userBean0.isCataloger());
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(false, userBean0.isApprover());
      assertEquals(true, userBean0.isMinor());
  }

  @Test
  public void test43()  throws Throwable  {
      UserBean userBean0 = new UserBean();
      userBean0.setEmail("&,77Cd^SvPO1~qsaNS");
      assertEquals(false, userBean0.isApprover());
      assertEquals(false, userBean0.isAdministrator());
      assertEquals(true, userBean0.isMinor());
      assertEquals(false, userBean0.isCataloger());
  }
}
