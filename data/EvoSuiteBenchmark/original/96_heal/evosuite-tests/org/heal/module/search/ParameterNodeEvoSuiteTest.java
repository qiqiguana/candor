/*
 * This file was automatically generated by EvoSuite
 */

package org.heal.module.search;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.heal.module.search.ParameterNode;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ParameterNodeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ParameterNode parameterNode0 = new ParameterNode("ty+Y.:tvY:H3EPt<", "ty+Y.:tvY:H3EPt<", "ty+Y.:tvY:H3EPt<");
      parameterNode0.setColumnInfo("ty+Y.:tvY:H3EPt<");
      assertEquals(false, parameterNode0.getExact());
  }

  @Test
  public void test1()  throws Throwable  {
      ParameterNode parameterNode0 = new ParameterNode();
      parameterNode0.getRelation();
      assertEquals(false, parameterNode0.getExact());
  }

  @Test
  public void test2()  throws Throwable  {
      ParameterNode parameterNode0 = new ParameterNode("z3PRWz7d8.)Uz", "z3PRWz7d8.)Uz", "z3PRWz7d8.)Uz", false);
      assertEquals(false, parameterNode0.getExact());
  }

  @Test
  public void test3()  throws Throwable  {
      ParameterNode parameterNode0 = new ParameterNode("ty+Y.:tvY:H3EPt<", "ty+Y.:tvY:H3EPt<", "ty+Y.:tvY:H3EPt<");
      String string0 = parameterNode0.getTableName();
      assertNotNull(string0);
      assertEquals(false, parameterNode0.getExact());
      assertEquals("ty+Y", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      ParameterNode parameterNode0 = new ParameterNode("z3PRWz7d8.)Uz", "");
      String string0 = parameterNode0.getColumnName();
      assertEquals("", parameterNode0.getKeyWord());
      assertNotNull(string0);
      assertEquals(false, parameterNode0.getExact());
      assertEquals(")Uz", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      ParameterNode parameterNode0 = new ParameterNode("z3PRWz7d8.)Uz", "");
      String string0 = parameterNode0.getKeyWord();
      assertNotNull(string0);
      assertEquals(false, parameterNode0.getExact());
      assertEquals("", string0);
      assertEquals(")Uz", parameterNode0.getColumnName());
  }

  @Test
  public void test6()  throws Throwable  {
      ParameterNode parameterNode0 = new ParameterNode("ty+Y.:tvY:H3EPt<", "ty+Y.:tvY:H3EPt<", "ty+Y.:tvY:H3EPt<");
      boolean boolean0 = parameterNode0.getExact();
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      ParameterNode parameterNode0 = new ParameterNode("z3PRWz7d8.)Uz", "");
      String string0 = parameterNode0.getColumnInfo();
      assertEquals("", parameterNode0.getKeyWord());
      assertNotNull(string0);
      assertEquals("z3PRWz7d8.)Uz", string0);
      assertEquals(false, parameterNode0.getExact());
  }

  @Test
  public void test8()  throws Throwable  {
      ParameterNode parameterNode0 = new ParameterNode("ty+Y.:tvY:H3EPt<", "ty+Y.:tvY:H3EPt<", "ty+Y.:tvY:H3EPt<");
      parameterNode0.setRelation("ty+Y");
      assertEquals(false, parameterNode0.getExact());
  }

  @Test
  public void test9()  throws Throwable  {
      ParameterNode parameterNode0 = new ParameterNode("ty+Y.:tvY:H3EPt<", "ty+Y.:tvY:H3EPt<", "ty+Y.:tvY:H3EPt<");
      assertEquals(false, parameterNode0.getExact());
      
      parameterNode0.setExact(true);
      assertEquals(true, parameterNode0.getExact());
  }

  @Test
  public void test10()  throws Throwable  {
      ParameterNode parameterNode0 = new ParameterNode("z3PRWz7d8.)Uz", "");
      assertEquals("", parameterNode0.getKeyWord());
      
      parameterNode0.setKeyWord("z3PRWz7d8");
      assertEquals("z3PRWz7d8.)Uz", parameterNode0.getColumnInfo());
  }
}
