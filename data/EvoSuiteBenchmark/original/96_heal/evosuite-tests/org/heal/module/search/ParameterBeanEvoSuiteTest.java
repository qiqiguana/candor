/*
 * This file was automatically generated by EvoSuite
 */

package org.heal.module.search;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.ArrayList;
import org.heal.module.search.ParameterBean;
import org.heal.module.search.ParameterNode;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ParameterBeanEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean(".)5w=4&iWcR_!");
      assertNotNull(parameterBean0);
      
      parameterBean0.getDisease();
      assertEquals(1, parameterBean0.size());
      assertEquals(false, parameterBean0.getHidden());
  }

  @Test
  public void test1()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean("z$Ci7a3[GN*");
      assertNotNull(parameterBean0);
      
      String[] stringArray0 = new String[20];
      parameterBean0.setPublicationIds(stringArray0);
      assertEquals(1, parameterBean0.size());
      assertEquals(false, parameterBean0.getHidden());
  }

  @Test
  public void test2()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean();
      boolean boolean0 = parameterBean0.getHidden();
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean("z$Ci7a3[GN*");
      assertNotNull(parameterBean0);
      
      String[] stringArray0 = new String[20];
      parameterBean0.setFilterArray(stringArray0);
      assertEquals(1, parameterBean0.size());
      assertEquals(false, parameterBean0.getHidden());
  }

  @Test
  public void test4()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean();
      String[] stringArray0 = new String[8];
      parameterBean0.setPublicationNames(stringArray0);
      assertEquals(false, parameterBean0.getHidden());
  }

  @Test
  public void test5()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean(".)5w=4&iWcR_!");
      assertNotNull(parameterBean0);
      
      int int0 = parameterBean0.size();
      assertEquals(1, int0);
      assertEquals(false, parameterBean0.getHidden());
  }

  @Test
  public void test6()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean();
      parameterBean0.getPrimaryArray();
      assertEquals(false, parameterBean0.getHidden());
  }

  @Test
  public void test7()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean();
      parameterBean0.getSourceCollection();
      assertEquals(false, parameterBean0.getHidden());
  }

  @Test
  public void test8()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean();
      parameterBean0.getUsageRight();
      assertEquals(false, parameterBean0.getHidden());
  }

  @Test
  public void test9()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean("");
      assertNotNull(parameterBean0);
      
      parameterBean0.getImaging();
      assertEquals(false, parameterBean0.getHidden());
      assertEquals(1, parameterBean0.size());
  }

  @Test
  public void test10()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean();
      String[] stringArray0 = new String[5];
      parameterBean0.setSourceCollection(stringArray0);
      assertEquals(false, parameterBean0.getHidden());
  }

  @Test
  public void test11()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean();
      parameterBean0.setDisease((String[]) null);
      assertEquals(false, parameterBean0.getHidden());
  }

  @Test
  public void test12()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean("z$Ci7a3[GN*");
      assertNotNull(parameterBean0);
      
      parameterBean0.getFilterArray();
      assertEquals(false, parameterBean0.getHidden());
      assertEquals(1, parameterBean0.size());
  }

  @Test
  public void test13()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean(".)5w=4&iWcR_!");
      assertNotNull(parameterBean0);
      
      parameterBean0.getPublicationIds();
      assertEquals(false, parameterBean0.getHidden());
      assertEquals(1, parameterBean0.size());
  }

  @Test
  public void test14()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean();
      parameterBean0.setImaging((String[]) null);
      assertEquals(false, parameterBean0.getHidden());
  }

  @Test
  public void test15()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean();
      parameterBean0.setUsageRights("and");
      assertEquals(false, parameterBean0.getHidden());
  }

  @Test
  public void test16()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean();
      parameterBean0.getPublicationNames();
      assertEquals(false, parameterBean0.getHidden());
  }

  @Test
  public void test17()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean();
      parameterBean0.setPrimaryArray((String[]) null);
      assertEquals(false, parameterBean0.getHidden());
  }

  @Test
  public void test18()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean(".)5w=4&iWcR_!");
      assertNotNull(parameterBean0);
      
      ParameterNode parameterNode0 = parameterBean0.getParameters(0);
      assertEquals(false, parameterBean0.getHidden());
      assertNotNull(parameterNode0);
      assertEquals("ALL.ALL", parameterNode0.getColumnInfo());
      assertEquals(".)5w=4&iwcr_!", parameterNode0.getKeyWord());
      assertEquals("AND", parameterNode0.getRelation());
  }

  @Test
  public void test19()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean("z$Ci7a3[GN*");
      assertNotNull(parameterBean0);
      
      ArrayList<Object> arrayList0 = parameterBean0.getTableList();
      assertNotNull(arrayList0);
      
      ArrayList<Object> arrayList1 = parameterBean0.getTableList();
      assertEquals(false, parameterBean0.getHidden());
      assertEquals("[ALL]", arrayList1.toString());
      assertEquals(1, parameterBean0.size());
  }

  @Test
  public void test20()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean(".)5w=4&iWcR_!");
      assertNotNull(parameterBean0);
      
      ParameterNode parameterNode0 = new ParameterNode(".)5w=4&iWcR_!", ".)5w=4&iWcR_!");
      parameterBean0.addParameters(parameterNode0);
      ArrayList<Object> arrayList0 = parameterBean0.getTableList();
      assertEquals(2, parameterBean0.size());
      assertEquals(false, arrayList0.isEmpty());
  }

  @Test
  public void test21()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean("z$Ci7a3[GN*");
      assertNotNull(parameterBean0);
      
      parameterBean0.makeParameterBean("z$Ci7a3[GN*");
      ArrayList<Object> arrayList0 = parameterBean0.getTableList();
      assertEquals(2, parameterBean0.size());
      assertEquals(1, arrayList0.size());
  }

  @Test
  public void test22()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean();
      ParameterBean parameterBean1 = parameterBean0.makeParameterBean(" ");
      assertNotNull(parameterBean1);
      assertEquals(false, parameterBean0.getHidden());
      assertEquals(0, parameterBean0.size());
  }

  @Test
  public void test23()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean("");
      assertNotNull(parameterBean0);
      
      parameterBean0.makeParameterBean("\"am+qDAC0p#%i]oeB;4!");
      assertEquals(2, parameterBean0.size());
  }

  @Test
  public void test24()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean("#LUaiP\"fY\"?U/W");
      assertEquals(3, parameterBean0.size());
      assertEquals(false, parameterBean0.getHidden());
      assertNotNull(parameterBean0);
  }

  @Test
  public void test25()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean();
      ParameterBean parameterBean1 = parameterBean0.makeParameterBean("OR");
      assertNotNull(parameterBean1);
      assertEquals(0, parameterBean0.size());
      assertEquals(false, parameterBean0.getHidden());
  }

  @Test
  public void test26()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean("and");
      assertEquals(false, parameterBean0.getHidden());
      assertNotNull(parameterBean0);
      assertEquals(0, parameterBean0.size());
  }

  @Test
  public void test27()  throws Throwable  {
      ParameterBean parameterBean0 = new ParameterBean();
      ParameterBean parameterBean1 = parameterBean0.makeParameterBean("NOT");
      assertNotNull(parameterBean1);
      assertEquals(false, parameterBean0.getHidden());
      assertEquals(0, parameterBean0.size());
  }
}
