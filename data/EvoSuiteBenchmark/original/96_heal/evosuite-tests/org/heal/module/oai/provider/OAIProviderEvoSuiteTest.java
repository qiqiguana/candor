/*
 * This file was automatically generated by EvoSuite
 */

package org.heal.module.oai.provider;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.ibm.wsdl.OperationImpl;
import java.io.ByteArrayOutputStream;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.io.Writer;
import java.text.ParseException;
import java.util.Date;
import java.util.Map;
import org.heal.module.oai.heal.HEALProviderConfig;
import org.heal.module.oai.heal.HEALRecord;
import org.heal.module.oai.provider.DataAccessor;
import org.heal.module.oai.provider.OAIErrorCode;
import org.heal.module.oai.provider.OAIGranularity;
import org.heal.module.oai.provider.OAIMetadataFormat;
import org.heal.module.oai.provider.OAIMetadataHandler;
import org.heal.module.oai.provider.OAIProvider;
import org.heal.module.oai.provider.OAIProviderConfig;
import org.heal.module.oai.provider.OAIRecord;
import org.heal.module.oai.provider.OAIResumptionToken;
import org.heal.module.oai.provider.basic.BasicResumptionToken;
import org.heal.module.oai.provider.nsdl_dc.NSDL_DCMetadataFormat;
import org.heal.module.oai.provider.oai_dc.OAI_DCHandler;
import org.heal.module.oai.provider.oai_dc.OAI_DCMetadataFormat;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class OAIProviderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      PipedWriter pipedWriter0 = new PipedWriter(pipedReader0);
      PrintWriter printWriter0 = new PrintWriter((Writer) pipedWriter0);
      String[] stringArray0 = new String[7];
      OAIProvider.writeStrings(stringArray0, (String) null, printWriter0);
  }

  @Test
  public void test1()  throws Throwable  {
      OAIProvider oAIProvider0 = new OAIProvider();
      assertNotNull(oAIProvider0);
  }

  @Test
  public void test2()  throws Throwable  {
      OAIProvider.init((OAIProviderConfig) null);
  }

  @Test
  public void test3()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      PipedWriter pipedWriter0 = new PipedWriter(pipedReader0);
      PrintWriter printWriter0 = new PrintWriter((Writer) pipedWriter0);
      OAIProvider.writeStrings((String[]) null, "", printWriter0);
  }

  @Test
  public void test4()  throws Throwable  {
      OAIErrorCode oAIErrorCode0 = OAIErrorCode.CANNOT_DISSEMINATE_FORMAT;
      String string0 = OAIProvider.getErrorString(oAIErrorCode0, (String) null);
      assertNotNull(string0);
      assertEquals("<error code=\"cannotDisseminateFormat\"></error>", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      OperationImpl operationImpl0 = new OperationImpl();
      Map<Object, Object> map0 = operationImpl0.getFaults();
      PipedReader pipedReader0 = new PipedReader();
      PipedWriter pipedWriter0 = new PipedWriter(pipedReader0);
      PrintWriter printWriter0 = new PrintWriter((Writer) pipedWriter0);
      // Undeclared exception!
      try {
        OAIProvider.processRequest("", (DataAccessor) null, (Map) map0, printWriter0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      BasicResumptionToken basicResumptionToken0 = BasicResumptionToken.generateQueryCompleteToken();
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(101);
      PrintWriter printWriter0 = new PrintWriter((Writer) charArrayWriter0);
      OAIProvider.writeResumptionToken((OAIResumptionToken) basicResumptionToken0, printWriter0);
      assertEquals(19, charArrayWriter0.size());
      assertEquals("<resumptionToken/>\n", charArrayWriter0.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try {
        OAIProvider.writeResumptionToken((OAIResumptionToken) null, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      BasicResumptionToken basicResumptionToken0 = BasicResumptionToken.generateResumptionToken("|", (Date) null, (Date) null, "|", "|", (Date) null, 386L, 386L, (OAIGranularity) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PrintWriter printWriter0 = new PrintWriter((OutputStream) pipedOutputStream0);
      OAIProvider.writeResumptionToken((OAIResumptionToken) basicResumptionToken0, printWriter0);
  }

  @Test
  public void test9()  throws Throwable  {
      String[] stringArray0 = new String[7];
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      PrintWriter printWriter0 = new PrintWriter((OutputStream) byteArrayOutputStream0, false);
      OAIMetadataFormat[] oAIMetadataFormatArray0 = new OAIMetadataFormat[5];
      OAI_DCMetadataFormat oAI_DCMetadataFormat0 = new OAI_DCMetadataFormat();
      oAIMetadataFormatArray0[0] = (OAIMetadataFormat) oAI_DCMetadataFormat0;
      OAI_DCHandler oAI_DCHandler0 = new OAI_DCHandler((OAIMetadataFormat) oAI_DCMetadataFormat0);
      oAIMetadataFormatArray0[1] = (OAIMetadataFormat) oAI_DCMetadataFormat0;
      oAIMetadataFormatArray0[2] = oAIMetadataFormatArray0[0];
      NSDL_DCMetadataFormat nSDL_DCMetadataFormat0 = new NSDL_DCMetadataFormat();
      oAIMetadataFormatArray0[3] = (OAIMetadataFormat) nSDL_DCMetadataFormat0;
      oAIMetadataFormatArray0[4] = oAIMetadataFormatArray0[1];
      HEALProviderConfig hEALProviderConfig0 = new HEALProviderConfig((String) null, (-788), (String) null, (String) null, (String) null, stringArray0, stringArray0, (String) null, stringArray0, (String) null, (String) null, oAIMetadataFormatArray0, (String) null);
      Date date0 = new Date((long) (-788));
      HEALRecord hEALRecord0 = new HEALRecord((String) null, date0, hEALProviderConfig0);
      // Undeclared exception!
      try {
        OAIProvider.writeRecord((OAIRecord) hEALRecord0, (OAIMetadataHandler) oAI_DCHandler0, printWriter0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
