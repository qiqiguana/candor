/*
 * This file was automatically generated by EvoSuite
 */

package org.heal.module.oai.heal;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl;
import javax.xml.namespace.QName;
import javax.xml.soap.Name;
import org.apache.axis.deployment.wsdd.WSDDConstants;
import org.apache.axis.message.CDATAImpl;
import org.apache.axis.message.Detail;
import org.apache.axis.message.MessageElement;
import org.apache.axis.message.PrefixedQName;
import org.apache.axis.message.RPCElement;
import org.apache.axis.message.RPCHeaderParam;
import org.apache.axis.message.RPCParam;
import org.apache.axis.message.SOAPBodyElement;
import org.apache.axis.message.SOAPDocumentImpl;
import org.apache.axis.message.SOAPEnvelope;
import org.apache.axis.message.SOAPFaultElement;
import org.apache.axis.message.SOAPHeaderElement;
import org.apache.axis.soap.SOAP12Constants;
import org.apache.axis.soap.SOAPConstants;
import org.heal.module.metadata.CompleteMetadataBean;
import org.heal.module.metadata.CopyrightHolderBean;
import org.heal.module.metadata.FormatBean;
import org.heal.module.metadata.KeywordBean;
import org.heal.module.metadata.RelationBean;
import org.heal.module.metadata.TaxonBean;
import org.heal.module.metadata.TaxonPathBean;
import org.heal.module.oai.heal.HEALOAIDCRecordAdapter;
import org.heal.module.oai.heal.HEALProviderConfig;
import org.junit.BeforeClass;
import org.w3c.dom.CharacterData;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

@RunWith(EvoSuiteRunner.class)
public class HEALOAIDCRecordAdapterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      HEALOAIDCRecordAdapter hEALOAIDCRecordAdapter0 = new HEALOAIDCRecordAdapter(completeMetadataBean0, (HEALProviderConfig) null);
      boolean boolean0 = hEALOAIDCRecordAdapter0.hasCustomAbout();
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      HEALOAIDCRecordAdapter hEALOAIDCRecordAdapter0 = new HEALOAIDCRecordAdapter(completeMetadataBean0, (HEALProviderConfig) null);
      RPCElement rPCElement0 = new RPCElement("globalConfiguration");
      SOAPDocumentImpl sOAPDocumentImpl0 = (SOAPDocumentImpl)rPCElement0.getOwnerDocument();
      Detail detail0 = new Detail();
      hEALOAIDCRecordAdapter0.addRecordAttributes((Element) detail0, (Document) sOAPDocumentImpl0);
      assertEquals(true, detail0.hasAttributes());
  }

  @Test
  public void test2()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      HEALOAIDCRecordAdapter hEALOAIDCRecordAdapter0 = new HEALOAIDCRecordAdapter(completeMetadataBean0, (HEALProviderConfig) null);
      PrefixedQName prefixedQName0 = new PrefixedQName("q=hy/k6=l`N\"Hb", "q=hy/k6=l`N\"Hb", "q=hy/k6=l`N\"Hb");
      SOAPBodyElement sOAPBodyElement0 = new SOAPBodyElement((Name) prefixedQName0);
      RPCElement rPCElement0 = new RPCElement("globalConfiguration");
      SOAPDocumentImpl sOAPDocumentImpl0 = (SOAPDocumentImpl)rPCElement0.getOwnerDocument();
      hEALOAIDCRecordAdapter0.appendSourceElements((Element) sOAPBodyElement0, (Document) sOAPDocumentImpl0);
      assertEquals("<q=hy/k6=l`N\"Hb:q=hy/k6=l`N\"Hb xmlns:q=hy/k6=l`N\"Hb=\"q=hy/k6=l`N\"Hb\"/>", sOAPBodyElement0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      HEALOAIDCRecordAdapter hEALOAIDCRecordAdapter0 = new HEALOAIDCRecordAdapter(completeMetadataBean0, (HEALProviderConfig) null);
      QName qName0 = WSDDConstants.QNAME_JAXRPC_ROLE;
      RPCParam rPCParam0 = new RPCParam(qName0, (Object) "role");
      hEALOAIDCRecordAdapter0.appendPublisherElements((Element) rPCParam0, (Document) null);
      assertEquals(false, rPCParam0.hasAttributes());
  }

  @Test
  public void test4()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      HEALOAIDCRecordAdapter hEALOAIDCRecordAdapter0 = new HEALOAIDCRecordAdapter(completeMetadataBean0, (HEALProviderConfig) null);
      CDATAImpl cDATAImpl0 = new CDATAImpl("");
      MessageElement messageElement0 = new MessageElement((CharacterData) cDATAImpl0);
      hEALOAIDCRecordAdapter0.addOAIAboutAttributes((Element) messageElement0, (Document) null);
      assertEquals("", messageElement0.getNodeValue());
  }

  @Test
  public void test5()  throws Throwable  {
      HEALOAIDCRecordAdapter hEALOAIDCRecordAdapter0 = new HEALOAIDCRecordAdapter((CompleteMetadataBean) null, (HEALProviderConfig) null);
      hEALOAIDCRecordAdapter0.appendCreatorElements((Element) null, (Document) null);
      assertEquals(true, hEALOAIDCRecordAdapter0.hasCustomAbout());
  }

  @Test
  public void test6()  throws Throwable  {
      QName qName0 = WSDDConstants.QNAME_OPERATION;
      SOAPHeaderElement sOAPHeaderElement0 = new SOAPHeaderElement(qName0, (Object) "style");
      SOAPDocumentImpl sOAPDocumentImpl0 = (SOAPDocumentImpl)sOAPHeaderElement0.getOwnerDocument();
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      HEALOAIDCRecordAdapter hEALOAIDCRecordAdapter0 = new HEALOAIDCRecordAdapter(completeMetadataBean0, (HEALProviderConfig) null);
      // Undeclared exception!
      try {
        hEALOAIDCRecordAdapter0.addCustomAbout((Document) sOAPDocumentImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      HEALOAIDCRecordAdapter hEALOAIDCRecordAdapter0 = new HEALOAIDCRecordAdapter(completeMetadataBean0, (HEALProviderConfig) null);
      PrefixedQName prefixedQName0 = new PrefixedQName("q=hy/k6=l`N\"Hb", "q=hy/k6=l`N\"Hb", "q=hy/k6=l`N\"Hb");
      SOAPBodyElement sOAPBodyElement0 = new SOAPBodyElement((Name) prefixedQName0);
      RPCElement rPCElement0 = new RPCElement("globalConfiguration");
      SOAPDocumentImpl sOAPDocumentImpl0 = (SOAPDocumentImpl)rPCElement0.getOwnerDocument();
      hEALOAIDCRecordAdapter0.appendOAIAboutElements((Element) sOAPBodyElement0, (Document) sOAPDocumentImpl0);
      assertEquals(1, sOAPBodyElement0.getNodeType());
  }

  @Test
  public void test8()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      HEALOAIDCRecordAdapter hEALOAIDCRecordAdapter0 = new HEALOAIDCRecordAdapter(completeMetadataBean0, (HEALProviderConfig) null);
      QName qName0 = WSDDConstants.QNAME_JAXRPC_ROLE;
      RPCParam rPCParam0 = new RPCParam(qName0, (Object) "role");
      // Undeclared exception!
      try {
        hEALOAIDCRecordAdapter0.appendCoverageElements((Element) rPCParam0, (Document) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      HEALOAIDCRecordAdapter hEALOAIDCRecordAdapter0 = new HEALOAIDCRecordAdapter(completeMetadataBean0, (HEALProviderConfig) null);
      MessageElement messageElement0 = new MessageElement((String) null, (String) null);
      // Undeclared exception!
      try {
        hEALOAIDCRecordAdapter0.appendTitleElements((Element) messageElement0, (Document) null);
        fail("Expecting exception: NoSuchMethodError");
      } catch(NoSuchMethodError e) {
        /*
         * org.heal.module.metadata.CompleteMetadataBean.getTitle()Ljava/lang/String;
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      HEALOAIDCRecordAdapter hEALOAIDCRecordAdapter0 = new HEALOAIDCRecordAdapter(completeMetadataBean0, (HEALProviderConfig) null);
      boolean boolean0 = hEALOAIDCRecordAdapter0.hasOAIAbout();
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      HEALOAIDCRecordAdapter hEALOAIDCRecordAdapter0 = new HEALOAIDCRecordAdapter(completeMetadataBean0, (HEALProviderConfig) null);
      SOAP12Constants sOAP12Constants0 = new SOAP12Constants();
      SOAPEnvelope sOAPEnvelope0 = new SOAPEnvelope((SOAPConstants) sOAP12Constants0);
      hEALOAIDCRecordAdapter0.appendLanguageElements((Element) sOAPEnvelope0, (Document) null);
      assertNull(sOAPEnvelope0.getID());
  }

  @Test
  public void test12()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      TaxonPathBean taxonPathBean0 = new TaxonPathBean();
      HEALOAIDCRecordAdapter hEALOAIDCRecordAdapter0 = new HEALOAIDCRecordAdapter(completeMetadataBean0, (HEALProviderConfig) null);
      completeMetadataBean0.addTaxonPath(taxonPathBean0);
      TaxonBean taxonBean0 = new TaxonBean();
      taxonPathBean0.addTaxon(taxonBean0);
      QName qName0 = WSDDConstants.QNAME_NAMESPACE;
      RPCParam rPCParam0 = new RPCParam(qName0, (Object) "axis.attachments.Directory");
      RPCHeaderParam rPCHeaderParam0 = new RPCHeaderParam(rPCParam0);
      DeferredDocumentImpl deferredDocumentImpl0 = (DeferredDocumentImpl)rPCHeaderParam0.getAsDocument();
      hEALOAIDCRecordAdapter0.appendSubjectElements((Element) rPCParam0, (Document) deferredDocumentImpl0);
      assertEquals(true, hEALOAIDCRecordAdapter0.hasCustomAbout());
  }

  @Test
  public void test13()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      KeywordBean keywordBean0 = new KeywordBean();
      completeMetadataBean0.addKeyword(keywordBean0);
      HEALOAIDCRecordAdapter hEALOAIDCRecordAdapter0 = new HEALOAIDCRecordAdapter(completeMetadataBean0, (HEALProviderConfig) null);
      QName qName0 = WSDDConstants.QNAME_NAMESPACE;
      RPCParam rPCParam0 = new RPCParam(qName0, (Object) "axis.attachments.Directory");
      RPCHeaderParam rPCHeaderParam0 = new RPCHeaderParam(rPCParam0);
      DeferredDocumentImpl deferredDocumentImpl0 = (DeferredDocumentImpl)rPCHeaderParam0.getAsDocument();
      hEALOAIDCRecordAdapter0.appendSubjectElements((Element) rPCParam0, (Document) deferredDocumentImpl0);
      assertNull(deferredDocumentImpl0.getDocumentURI());
  }

  @Test
  public void test14()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      FormatBean formatBean0 = new FormatBean();
      completeMetadataBean0.addFormat(formatBean0);
      HEALOAIDCRecordAdapter hEALOAIDCRecordAdapter0 = new HEALOAIDCRecordAdapter(completeMetadataBean0, (HEALProviderConfig) null);
      PrefixedQName prefixedQName0 = new PrefixedQName("q=hy/k6=l`N\"Hb", "q=hy/k6=l`N\"Hb", "q=hy/k6=l`N\"Hb");
      SOAPBodyElement sOAPBodyElement0 = new SOAPBodyElement((Name) prefixedQName0);
      RPCElement rPCElement0 = new RPCElement("globalConfiguration");
      SOAPDocumentImpl sOAPDocumentImpl0 = (SOAPDocumentImpl)rPCElement0.getOwnerDocument();
      hEALOAIDCRecordAdapter0.appendTypeElements((Element) sOAPBodyElement0, (Document) sOAPDocumentImpl0);
      assertEquals("<q=hy/k6=l`N\"Hb:q=hy/k6=l`N\"Hb xmlns:q=hy/k6=l`N\"Hb=\"q=hy/k6=l`N\"Hb\"/>", sOAPBodyElement0.toString());
  }

  @Test
  public void test15()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      HEALOAIDCRecordAdapter hEALOAIDCRecordAdapter0 = new HEALOAIDCRecordAdapter(completeMetadataBean0, (HEALProviderConfig) null);
      RelationBean relationBean0 = new RelationBean();
      completeMetadataBean0.addRelation(relationBean0);
      SOAPFaultElement sOAPFaultElement0 = new SOAPFaultElement();
      hEALOAIDCRecordAdapter0.appendRelationElements((Element) sOAPFaultElement0, (Document) null);
      assertEquals(true, sOAPFaultElement0.isRoot());
  }

  @Test
  public void test16()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      CopyrightHolderBean copyrightHolderBean0 = new CopyrightHolderBean();
      completeMetadataBean0.addCopyrightHolder(copyrightHolderBean0);
      HEALOAIDCRecordAdapter hEALOAIDCRecordAdapter0 = new HEALOAIDCRecordAdapter(completeMetadataBean0, (HEALProviderConfig) null);
      SOAP12Constants sOAP12Constants0 = new SOAP12Constants();
      SOAPEnvelope sOAPEnvelope0 = new SOAPEnvelope((SOAPConstants) sOAP12Constants0);
      hEALOAIDCRecordAdapter0.appendRightsElements((Element) sOAPEnvelope0, (Document) null);
      assertEquals("Envelope", sOAPEnvelope0.getLocalName());
  }
}
