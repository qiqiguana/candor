/*
 * This file was automatically generated by EvoSuite
 */

package com.browsersoft.openhre.hl7.impl.config;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.browsersoft.openhre.hl7.api.config.HL7DataTypePart;
import com.browsersoft.openhre.hl7.impl.config.HL7DataTypePartListImpl;
import com.browsersoft.openhre.hl7.impl.config.HL7DataTypePartPrimitiveImpl;
import com.browsersoft.openhre.hl7.impl.config.HL7DataTypePartSubPartImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class HL7DataTypePartListImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HL7DataTypePartListImpl hL7DataTypePartListImpl0 = new HL7DataTypePartListImpl();
      hL7DataTypePartListImpl0.clearAll();
      assertEquals(0, hL7DataTypePartListImpl0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      HL7DataTypePartListImpl hL7DataTypePartListImpl0 = new HL7DataTypePartListImpl();
      HL7DataTypePartPrimitiveImpl hL7DataTypePartPrimitiveImpl0 = new HL7DataTypePartPrimitiveImpl();
      hL7DataTypePartListImpl0.addItem((HL7DataTypePart) hL7DataTypePartPrimitiveImpl0);
      String string0 = hL7DataTypePartListImpl0.toString();
      assertEquals(1, hL7DataTypePartListImpl0.size());
      assertNotNull(string0);
      assertEquals(" primitive type \n", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      HL7DataTypePartListImpl hL7DataTypePartListImpl0 = new HL7DataTypePartListImpl();
      HL7DataTypePart hL7DataTypePart0 = hL7DataTypePartListImpl0.getItem((-1));
      assertNull(hL7DataTypePart0);
  }

  @Test
  public void test3()  throws Throwable  {
      HL7DataTypePartListImpl hL7DataTypePartListImpl0 = new HL7DataTypePartListImpl();
      HL7DataTypePart hL7DataTypePart0 = hL7DataTypePartListImpl0.getItem(0);
      assertNull(hL7DataTypePart0);
  }

  @Test
  public void test4()  throws Throwable  {
      HL7DataTypePartListImpl hL7DataTypePartListImpl0 = new HL7DataTypePartListImpl();
      HL7DataTypePartSubPartImpl hL7DataTypePartSubPartImpl0 = new HL7DataTypePartSubPartImpl();
      hL7DataTypePartListImpl0.setItem((-1860), (HL7DataTypePart) hL7DataTypePartSubPartImpl0);
      assertNull(hL7DataTypePartSubPartImpl0.getDescription());
  }

  @Test
  public void test5()  throws Throwable  {
      HL7DataTypePartListImpl hL7DataTypePartListImpl0 = new HL7DataTypePartListImpl();
      HL7DataTypePartPrimitiveImpl hL7DataTypePartPrimitiveImpl0 = new HL7DataTypePartPrimitiveImpl();
      hL7DataTypePartListImpl0.setItem(290, (HL7DataTypePart) hL7DataTypePartPrimitiveImpl0);
      assertEquals("", hL7DataTypePartListImpl0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      HL7DataTypePartListImpl hL7DataTypePartListImpl0 = new HL7DataTypePartListImpl();
      hL7DataTypePartListImpl0.addItem((HL7DataTypePart) null);
      hL7DataTypePartListImpl0.setItem(0, (HL7DataTypePart) null);
      assertEquals(1, hL7DataTypePartListImpl0.size());
  }

  @Test
  public void test7()  throws Throwable  {
      HL7DataTypePartListImpl hL7DataTypePartListImpl0 = new HL7DataTypePartListImpl();
      hL7DataTypePartListImpl0.removeItem((-11));
      assertEquals(0, hL7DataTypePartListImpl0.size());
  }

  @Test
  public void test8()  throws Throwable  {
      HL7DataTypePartListImpl hL7DataTypePartListImpl0 = new HL7DataTypePartListImpl();
      hL7DataTypePartListImpl0.removeItem(0);
      assertEquals("", hL7DataTypePartListImpl0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      HL7DataTypePartListImpl hL7DataTypePartListImpl0 = new HL7DataTypePartListImpl();
      hL7DataTypePartListImpl0.addItem((HL7DataTypePart) null);
      assertEquals(1, hL7DataTypePartListImpl0.size());
      
      hL7DataTypePartListImpl0.removeItem(0);
      assertEquals(0, hL7DataTypePartListImpl0.size());
  }
}
