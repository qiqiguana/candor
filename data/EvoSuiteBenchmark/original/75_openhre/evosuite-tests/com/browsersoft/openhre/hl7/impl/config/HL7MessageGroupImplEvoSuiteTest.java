/*
 * This file was automatically generated by EvoSuite
 */

package com.browsersoft.openhre.hl7.impl.config;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.browsersoft.openhre.hl7.api.config.HL7MessageGroupItem;
import com.browsersoft.openhre.hl7.impl.config.HL7MessageGroupImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class HL7MessageGroupImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HL7MessageGroupImpl hL7MessageGroupImpl0 = new HL7MessageGroupImpl();
      String string0 = hL7MessageGroupImpl0.getAdditional();
      assertEquals("", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      HL7MessageGroupImpl hL7MessageGroupImpl0 = new HL7MessageGroupImpl();
      hL7MessageGroupImpl0.setAdditional("s");
      assertEquals(false, hL7MessageGroupImpl0.isRequired());
  }

  @Test
  public void test2()  throws Throwable  {
      HL7MessageGroupImpl hL7MessageGroupImpl0 = new HL7MessageGroupImpl();
      hL7MessageGroupImpl0.clearAll();
      assertEquals("group  repeatable =\"false\" required =\"false\"", hL7MessageGroupImpl0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      HL7MessageGroupImpl hL7MessageGroupImpl0 = new HL7MessageGroupImpl();
      String string0 = hL7MessageGroupImpl0.toString();
      assertNotNull(string0);
      assertEquals("group  repeatable =\"false\" required =\"false\"", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      HL7MessageGroupImpl hL7MessageGroupImpl0 = new HL7MessageGroupImpl();
      int int0 = hL7MessageGroupImpl0.getType();
      assertEquals(0, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      HL7MessageGroupImpl hL7MessageGroupImpl0 = new HL7MessageGroupImpl();
      HL7MessageGroupItem hL7MessageGroupItem0 = hL7MessageGroupImpl0.getItem((-351));
      assertNull(hL7MessageGroupItem0);
  }

  @Test
  public void test6()  throws Throwable  {
      HL7MessageGroupImpl hL7MessageGroupImpl0 = new HL7MessageGroupImpl();
      HL7MessageGroupItem hL7MessageGroupItem0 = hL7MessageGroupImpl0.getItem(165);
      assertNull(hL7MessageGroupItem0);
  }

  @Test
  public void test7()  throws Throwable  {
      HL7MessageGroupImpl hL7MessageGroupImpl0 = new HL7MessageGroupImpl();
      hL7MessageGroupImpl0.addItem((HL7MessageGroupItem) null);
      // Undeclared exception!
      try {
        hL7MessageGroupImpl0.toString();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      HL7MessageGroupImpl hL7MessageGroupImpl0 = new HL7MessageGroupImpl();
      hL7MessageGroupImpl0.setItem((-1), (HL7MessageGroupItem) null);
      assertEquals(0, hL7MessageGroupImpl0.getType());
  }

  @Test
  public void test9()  throws Throwable  {
      HL7MessageGroupImpl hL7MessageGroupImpl0 = new HL7MessageGroupImpl();
      hL7MessageGroupImpl0.setItem(0, (HL7MessageGroupItem) null);
      assertEquals(0, hL7MessageGroupImpl0.size());
  }

  @Test
  public void test10()  throws Throwable  {
      HL7MessageGroupImpl hL7MessageGroupImpl0 = new HL7MessageGroupImpl();
      hL7MessageGroupImpl0.addItem((HL7MessageGroupItem) null);
      hL7MessageGroupImpl0.setItem(0, (HL7MessageGroupItem) null);
      assertEquals(1, hL7MessageGroupImpl0.size());
  }

  @Test
  public void test11()  throws Throwable  {
      HL7MessageGroupImpl hL7MessageGroupImpl0 = new HL7MessageGroupImpl();
      hL7MessageGroupImpl0.removeItem((-1623));
      assertEquals(false, hL7MessageGroupImpl0.isRepeatable());
  }

  @Test
  public void test12()  throws Throwable  {
      HL7MessageGroupImpl hL7MessageGroupImpl0 = new HL7MessageGroupImpl();
      hL7MessageGroupImpl0.removeItem(50);
      assertEquals("", hL7MessageGroupImpl0.getAdditional());
  }

  @Test
  public void test13()  throws Throwable  {
      HL7MessageGroupImpl hL7MessageGroupImpl0 = new HL7MessageGroupImpl();
      hL7MessageGroupImpl0.addItem((HL7MessageGroupItem) null);
      assertEquals(1, hL7MessageGroupImpl0.size());
      
      hL7MessageGroupImpl0.removeItem(0);
      assertEquals(0, hL7MessageGroupImpl0.size());
  }
}
