/*
 * This file was automatically generated by EvoSuite
 */

package com.browsersoft.openhre.hl7.impl.config;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.browsersoft.openhre.hl7.api.config.HL7DataType;
import com.browsersoft.openhre.hl7.impl.config.HL7DataTypeImpl;
import com.browsersoft.openhre.hl7.impl.config.HL7DataTypeMapImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class HL7DataTypeMapImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HL7DataTypeMapImpl hL7DataTypeMapImpl0 = new HL7DataTypeMapImpl();
      hL7DataTypeMapImpl0.clearAll();
      assertEquals(" ******************************************\n DATA TYPES\n ******************************************\n ******************************************\n", hL7DataTypeMapImpl0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      HL7DataTypeMapImpl hL7DataTypeMapImpl0 = new HL7DataTypeMapImpl();
      int int0 = hL7DataTypeMapImpl0.size();
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      HL7DataTypeMapImpl hL7DataTypeMapImpl0 = new HL7DataTypeMapImpl();
      HL7DataType hL7DataType0 = hL7DataTypeMapImpl0.getItem("`AI-=2");
      assertNull(hL7DataType0);
  }

  @Test
  public void test3()  throws Throwable  {
      HL7DataTypeMapImpl hL7DataTypeMapImpl0 = new HL7DataTypeMapImpl();
      HL7DataTypeImpl hL7DataTypeImpl0 = new HL7DataTypeImpl();
      hL7DataTypeMapImpl0.addItem((HL7DataType) hL7DataTypeImpl0);
      String string0 = hL7DataTypeMapImpl0.toString();
      assertEquals(1, hL7DataTypeMapImpl0.size());
      assertEquals(" ******************************************\n DATA TYPES\n ******************************************\n -----------------------------------------\n data type id=\"null\"\n -----------------------------------------\n\n ******************************************\n", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      HL7DataTypeMapImpl hL7DataTypeMapImpl0 = new HL7DataTypeMapImpl();
      hL7DataTypeMapImpl0.removeItem("");
      assertEquals(0, hL7DataTypeMapImpl0.size());
  }

  @Test
  public void test5()  throws Throwable  {
      HL7DataTypeMapImpl hL7DataTypeMapImpl0 = new HL7DataTypeMapImpl();
      HL7DataTypeImpl hL7DataTypeImpl0 = new HL7DataTypeImpl();
      hL7DataTypeMapImpl0.addItem((HL7DataType) hL7DataTypeImpl0);
      assertEquals(1, hL7DataTypeMapImpl0.size());
      
      hL7DataTypeMapImpl0.removeItem((String) null);
      assertEquals(0, hL7DataTypeMapImpl0.size());
  }
}
