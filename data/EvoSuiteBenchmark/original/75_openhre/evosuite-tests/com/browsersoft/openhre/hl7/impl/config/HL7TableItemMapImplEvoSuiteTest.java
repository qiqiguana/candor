/*
 * This file was automatically generated by EvoSuite
 */

package com.browsersoft.openhre.hl7.impl.config;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.browsersoft.openhre.hl7.api.config.HL7TableItem;
import com.browsersoft.openhre.hl7.impl.config.HL7TableItemImpl;
import com.browsersoft.openhre.hl7.impl.config.HL7TableItemMapImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class HL7TableItemMapImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HL7TableItemMapImpl hL7TableItemMapImpl0 = new HL7TableItemMapImpl();
      hL7TableItemMapImpl0.clearAll();
      assertEquals(" ******************************************\n ITEMS\n ******************************************\n ******************************************\n", hL7TableItemMapImpl0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      HL7TableItemMapImpl hL7TableItemMapImpl0 = new HL7TableItemMapImpl();
      int int0 = hL7TableItemMapImpl0.size();
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      HL7TableItemMapImpl hL7TableItemMapImpl0 = new HL7TableItemMapImpl();
      HL7TableItemImpl hL7TableItemImpl0 = new HL7TableItemImpl();
      hL7TableItemMapImpl0.addItem((HL7TableItem) hL7TableItemImpl0);
      assertEquals(1, hL7TableItemMapImpl0.size());
      
      hL7TableItemMapImpl0.removeItem((String) null);
      assertEquals(0, hL7TableItemMapImpl0.size());
  }

  @Test
  public void test3()  throws Throwable  {
      HL7TableItemMapImpl hL7TableItemMapImpl0 = new HL7TableItemMapImpl();
      String string0 = hL7TableItemMapImpl0.toString();
      assertNotNull(string0);
      assertEquals(" ******************************************\n ITEMS\n ******************************************\n ******************************************\n", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      HL7TableItemMapImpl hL7TableItemMapImpl0 = new HL7TableItemMapImpl();
      HL7TableItemImpl hL7TableItemImpl0 = new HL7TableItemImpl();
      hL7TableItemMapImpl0.addItem((HL7TableItem) hL7TableItemImpl0);
      // Undeclared exception!
      try {
        hL7TableItemMapImpl0.toString();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      HL7TableItemMapImpl hL7TableItemMapImpl0 = new HL7TableItemMapImpl();
      HL7TableItem hL7TableItem0 = hL7TableItemMapImpl0.getItem(" ******************************************\n ITEMS\n ******************************************\n ******************************************\n");
      assertNull(hL7TableItem0);
  }

  @Test
  public void test6()  throws Throwable  {
      HL7TableItemMapImpl hL7TableItemMapImpl0 = new HL7TableItemMapImpl();
      hL7TableItemMapImpl0.removeItem("XZ\"_EQx_H8ME");
      assertEquals(0, hL7TableItemMapImpl0.size());
  }
}
