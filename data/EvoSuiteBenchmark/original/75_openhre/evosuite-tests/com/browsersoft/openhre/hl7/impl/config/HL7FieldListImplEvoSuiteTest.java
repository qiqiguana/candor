/*
 * This file was automatically generated by EvoSuite
 */

package com.browsersoft.openhre.hl7.impl.config;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.browsersoft.openhre.hl7.api.config.HL7Field;
import com.browsersoft.openhre.hl7.impl.config.HL7FieldImpl;
import com.browsersoft.openhre.hl7.impl.config.HL7FieldListImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class HL7FieldListImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HL7FieldListImpl hL7FieldListImpl0 = new HL7FieldListImpl();
      hL7FieldListImpl0.clearAll();
      assertEquals("", hL7FieldListImpl0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      HL7FieldListImpl hL7FieldListImpl0 = new HL7FieldListImpl();
      HL7Field hL7Field0 = hL7FieldListImpl0.getItem((-159));
      assertNull(hL7Field0);
  }

  @Test
  public void test2()  throws Throwable  {
      HL7FieldListImpl hL7FieldListImpl0 = new HL7FieldListImpl();
      HL7Field hL7Field0 = hL7FieldListImpl0.getItem(0);
      assertNull(hL7Field0);
  }

  @Test
  public void test3()  throws Throwable  {
      HL7FieldListImpl hL7FieldListImpl0 = new HL7FieldListImpl();
      HL7FieldImpl hL7FieldImpl0 = new HL7FieldImpl();
      hL7FieldListImpl0.addItem((HL7Field) hL7FieldImpl0);
      String string0 = hL7FieldListImpl0.toString();
      assertNotNull(string0);
      assertEquals(1, hL7FieldListImpl0.size());
      assertEquals(" field length=\"0\" required=\"R\" repeatable=\"false\"\n", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      HL7FieldListImpl hL7FieldListImpl0 = new HL7FieldListImpl();
      hL7FieldListImpl0.setItem((-1481), (HL7Field) null);
      assertEquals("", hL7FieldListImpl0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      HL7FieldListImpl hL7FieldListImpl0 = new HL7FieldListImpl();
      HL7FieldImpl hL7FieldImpl0 = new HL7FieldImpl();
      hL7FieldListImpl0.setItem(306, (HL7Field) hL7FieldImpl0);
      assertEquals(false, hL7FieldImpl0.isRepeatable());
  }

  @Test
  public void test6()  throws Throwable  {
      HL7FieldListImpl hL7FieldListImpl0 = new HL7FieldListImpl();
      HL7FieldImpl hL7FieldImpl0 = new HL7FieldImpl();
      hL7FieldListImpl0.addItem((HL7Field) hL7FieldImpl0);
      hL7FieldListImpl0.setItem(0, (HL7Field) null);
      assertEquals(1, hL7FieldListImpl0.size());
  }

  @Test
  public void test7()  throws Throwable  {
      HL7FieldListImpl hL7FieldListImpl0 = new HL7FieldListImpl();
      hL7FieldListImpl0.removeItem((-2014));
      assertEquals(0, hL7FieldListImpl0.size());
  }

  @Test
  public void test8()  throws Throwable  {
      HL7FieldListImpl hL7FieldListImpl0 = new HL7FieldListImpl();
      hL7FieldListImpl0.removeItem(0);
      assertEquals("", hL7FieldListImpl0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      HL7FieldListImpl hL7FieldListImpl0 = new HL7FieldListImpl();
      HL7FieldImpl hL7FieldImpl0 = new HL7FieldImpl();
      hL7FieldListImpl0.addItem((HL7Field) hL7FieldImpl0);
      assertEquals(" field length=\"0\" required=\"R\" repeatable=\"false\"\n", hL7FieldListImpl0.toString());
      
      hL7FieldListImpl0.removeItem(0);
      assertEquals(0, hL7FieldListImpl0.size());
  }
}
