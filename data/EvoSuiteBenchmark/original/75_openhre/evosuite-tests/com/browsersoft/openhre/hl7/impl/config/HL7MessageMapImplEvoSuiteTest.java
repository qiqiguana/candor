/*
 * This file was automatically generated by EvoSuite
 */

package com.browsersoft.openhre.hl7.impl.config;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.browsersoft.openhre.hl7.api.config.HL7Message;
import com.browsersoft.openhre.hl7.impl.config.HL7MessageImpl;
import com.browsersoft.openhre.hl7.impl.config.HL7MessageMapImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class HL7MessageMapImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HL7MessageMapImpl hL7MessageMapImpl0 = new HL7MessageMapImpl();
      hL7MessageMapImpl0.clearAll();
      assertEquals(0, hL7MessageMapImpl0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      HL7MessageMapImpl hL7MessageMapImpl0 = new HL7MessageMapImpl();
      int int0 = hL7MessageMapImpl0.size();
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      HL7MessageMapImpl hL7MessageMapImpl0 = new HL7MessageMapImpl();
      HL7MessageImpl hL7MessageImpl0 = new HL7MessageImpl();
      hL7MessageMapImpl0.addItem((HL7Message) hL7MessageImpl0);
      assertEquals(1, hL7MessageMapImpl0.size());
      
      hL7MessageMapImpl0.removeItem((String) null);
      assertEquals(0, hL7MessageMapImpl0.size());
  }

  @Test
  public void test3()  throws Throwable  {
      HL7MessageMapImpl hL7MessageMapImpl0 = new HL7MessageMapImpl();
      String string0 = hL7MessageMapImpl0.toString();
      assertEquals(" ******************************************\n MESSAGES\n ******************************************\n ******************************************\n", string0);
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      HL7MessageMapImpl hL7MessageMapImpl0 = new HL7MessageMapImpl();
      HL7Message hL7Message0 = hL7MessageMapImpl0.getItem("1,/~:?6KdNOQ%7LbvB");
      assertNull(hL7Message0);
  }

  @Test
  public void test5()  throws Throwable  {
      HL7MessageMapImpl hL7MessageMapImpl0 = new HL7MessageMapImpl();
      HL7MessageImpl hL7MessageImpl0 = new HL7MessageImpl();
      hL7MessageMapImpl0.addItem((HL7Message) hL7MessageImpl0);
      // Undeclared exception!
      try {
        hL7MessageMapImpl0.toString();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      HL7MessageMapImpl hL7MessageMapImpl0 = new HL7MessageMapImpl();
      hL7MessageMapImpl0.removeItem("");
      assertEquals(" ******************************************\n MESSAGES\n ******************************************\n ******************************************\n", hL7MessageMapImpl0.toString());
  }
}
