/*
 * This file was automatically generated by EvoSuite
 */

package com.browsersoft.openhre.hl7.impl.config;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.browsersoft.openhre.hl7.api.config.InvalidConfigDataStructureException;
import com.browsersoft.openhre.hl7.api.parse.HL7CheckerState;
import com.browsersoft.openhre.hl7.api.parse.ParserException;
import com.browsersoft.openhre.hl7.impl.config.HL7FieldRepeatableDependingProcessorImpl;
import com.browsersoft.openhre.hl7.impl.parser.HL7CheckerStateImpl;
import javax.xml.soap.SOAPException;
import org.apache.axis.message.Detail;
import org.junit.BeforeClass;
import org.w3c.dom.Node;

@RunWith(EvoSuiteRunner.class)
public class HL7FieldRepeatableDependingProcessorImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HL7FieldRepeatableDependingProcessorImpl hL7FieldRepeatableDependingProcessorImpl0 = new HL7FieldRepeatableDependingProcessorImpl();
      Detail detail0 = new Detail();
      detail0.addChildElement("p", "p");
      hL7FieldRepeatableDependingProcessorImpl0.readConfiguration((Node) detail0);
      assertNull(detail0.getName());
  }

  @Test
  public void test1()  throws Throwable  {
      HL7FieldRepeatableDependingProcessorImpl hL7FieldRepeatableDependingProcessorImpl0 = new HL7FieldRepeatableDependingProcessorImpl();
      Detail detail0 = new Detail();
      detail0.addTextNode((String) null);
      hL7FieldRepeatableDependingProcessorImpl0.readConfiguration((Node) detail0);
      assertEquals("", detail0.getEncodingStyle());
  }

  @Test
  public void test2()  throws Throwable  {
      HL7FieldRepeatableDependingProcessorImpl hL7FieldRepeatableDependingProcessorImpl0 = new HL7FieldRepeatableDependingProcessorImpl();
      HL7CheckerStateImpl hL7CheckerStateImpl0 = new HL7CheckerStateImpl();
      hL7CheckerStateImpl0.setActualFieldRepeatableIndex((-1498));
      // Undeclared exception!
      try {
        hL7FieldRepeatableDependingProcessorImpl0.getDataTypeForSituation((HL7CheckerState) hL7CheckerStateImpl0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -1498
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      HL7FieldRepeatableDependingProcessorImpl hL7FieldRepeatableDependingProcessorImpl0 = new HL7FieldRepeatableDependingProcessorImpl();
      HL7CheckerStateImpl hL7CheckerStateImpl0 = new HL7CheckerStateImpl();
      try {
        hL7FieldRepeatableDependingProcessorImpl0.getDataTypeForSituation((HL7CheckerState) hL7CheckerStateImpl0);
        fail("Expecting exception: ParserException");
      } catch(ParserException e) {
      }
  }
}
