/*
 * This file was automatically generated by EvoSuite
 */

package com.browsersoft.openhre.hl7.impl.parser;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.browsersoft.openhre.hl7.api.config.HL7Configuration;
import com.browsersoft.openhre.hl7.api.config.HL7Segment;
import com.browsersoft.openhre.hl7.api.parse.HL7CheckerHandler;
import com.browsersoft.openhre.hl7.api.parse.HL7CheckerState;
import com.browsersoft.openhre.hl7.api.parse.HL7Parser;
import com.browsersoft.openhre.hl7.api.parse.ParserException;
import com.browsersoft.openhre.hl7.impl.config.HL7ConfigurationImpl;
import com.browsersoft.openhre.hl7.impl.config.HL7SegmentImpl;
import com.browsersoft.openhre.hl7.impl.parser.HL72XMLImpl;
import com.browsersoft.openhre.hl7.impl.parser.HL7CheckerImpl;
import com.browsersoft.openhre.hl7.impl.parser.HL7CheckerStateImpl;
import com.browsersoft.openhre.hl7.impl.parser.HL7ParserImpl;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class HL7CheckerImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7Configuration hL7Configuration0 = hL7CheckerImpl0.getConfiguration();
      assertNull(hL7Configuration0);
  }

  @Test
  public void test1()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      // Undeclared exception!
      try {
        hL7CheckerImpl0.messageTracerAdditionalTagBeginEvent("},hB<P");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7SegmentImpl hL7SegmentImpl0 = new HL7SegmentImpl();
      hL7CheckerImpl0.messageTracerSegmentEvent((HL7Segment) hL7SegmentImpl0);
      hL7CheckerImpl0.component((String) null);
  }

  @Test
  public void test3()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      // Undeclared exception!
      try {
        hL7CheckerImpl0.subComponent("C8RG(FJ|+gAAVpM");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      // Undeclared exception!
      try {
        hL7CheckerImpl0.messageTracerAdditionalTagEndEvent("PEReferenceWithinMarkup");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7CheckerStateImpl hL7CheckerStateImpl0 = (HL7CheckerStateImpl)hL7CheckerImpl0.getState();
      hL7CheckerImpl0.setState((HL7CheckerState) hL7CheckerStateImpl0);
      assertEquals("actualFieldPosition:0\nactualFieldRepeatableIndex:0\nactualFieldLength:0\nactualDataTypePartsPossition:0\nactualDataTypeSubPartsPossition:0\n", hL7CheckerStateImpl0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      // Undeclared exception!
      try {
        hL7CheckerImpl0.messageTracerErrorEvent("x>oc2}J]w3?");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7ParserImpl hL7ParserImpl0 = (HL7ParserImpl)hL7CheckerImpl0.getParser();
      assertNotNull(hL7ParserImpl0);
  }

  @Test
  public void test8()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7SegmentImpl hL7SegmentImpl0 = new HL7SegmentImpl();
      hL7CheckerImpl0.messageTracerSegmentEvent((HL7Segment) hL7SegmentImpl0);
      // Undeclared exception!
      try {
        hL7CheckerImpl0.endSegment();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7CheckerHandler hL7CheckerHandler0 = hL7CheckerImpl0.getHandler();
      assertNull(hL7CheckerHandler0);
  }

  @Test
  public void test10()  throws Throwable  {
      HL72XMLImpl hL72XMLImpl0 = new HL72XMLImpl();
      assertNotNull(hL72XMLImpl0);
  }

  @Test
  public void test11()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.setParser((HL7Parser) null);
  }

  @Test
  public void test12()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      // Undeclared exception!
      try {
        hL7CheckerImpl0.endComponent();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      HL7ConfigurationImpl hL7ConfigurationImpl0 = new HL7ConfigurationImpl();
      hL7CheckerImpl0.setConfiguration((HL7Configuration) hL7ConfigurationImpl0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      InputStreamReader inputStreamReader0 = new InputStreamReader((InputStream) pipedInputStream0);
      try {
        hL7CheckerImpl0.readData((Reader) inputStreamReader0, "?]8");
        fail("Expecting exception: ParserException");
      } catch(ParserException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      // Undeclared exception!
      try {
        hL7CheckerImpl0.beginSegment("b,OK=HO");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.endSegment();
  }

  @Test
  public void test16()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.beginField();
  }

  @Test
  public void test17()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.endField();
  }

  @Test
  public void test18()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.beginFieldRepeate();
  }

  @Test
  public void test19()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.emptyRepeateField();
  }

  @Test
  public void test20()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.emptyField();
  }

  @Test
  public void test21()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.beginComponent();
  }

  @Test
  public void test22()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.component((String) null);
  }

  @Test
  public void test23()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.subComponent("");
  }

  @Test
  public void test24()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      // Undeclared exception!
      try {
        hL7CheckerImpl0.endOfRecord();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
