/*
 * This file was automatically generated by EvoSuite
 */

package com.browsersoft.aacs;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.browsersoft.aacs.Login;
import com.browsersoft.aacs.User;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.security.auth.login.LoginException;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LoginEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      Login login0 = new Login();
      try {
        login0.authorize("?-'Sl", "?-'Sl");
        fail("Expecting exception: LoginException");
      } catch(LoginException e) {
        /*
         * UserMgr undefined
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Login.getProps("");
  }

  @Test
  public void test2()  throws Throwable  {
      Login login0 = new Login("R", "R");
      assertNotNull(login0);
      
      // Undeclared exception!
      try {
        login0.setUsername("R");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Login login0 = new Login("}");
      try {
        login0.authenticate("}", "}", "}");
        fail("Expecting exception: LoginException");
      } catch(LoginException e) {
        /*
         * UserMgr undefined
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Login login0 = new Login("Lu4");
      login0.setPassword("Lu4");
      assertEquals("/mnt/fastdata/ac1gf/SF110/dist/75_openhre", login0.getSecurityLogFilePath());
  }

  @Test
  public void test5()  throws Throwable  {
      Login login0 = new Login("");
      User user0 = login0.getUser();
      assertNull(user0);
  }

  @Test
  public void test6()  throws Throwable  {
      String string0 = Login.getSecurityLogFilePath();
      assertEquals("/mnt/fastdata/ac1gf/SF110/dist/75_openhre", string0);
  }

  @Test
  public void test7()  throws Throwable  {
      Login login0 = new Login("");
      // Undeclared exception!
      try {
        login0.logOut();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      Login login0 = new Login("35C:x,)>L gf");
      String string0 = login0.getUsername();
      assertEquals("", string0);
  }

  @Test
  public void test9()  throws Throwable  {
      Login login0 = new Login("7'G", "7'G");
      assertNotNull(login0);
      
      String string0 = login0.getIpAddr();
      assertNotNull(string0);
      assertEquals("7'G", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      Login login0 = new Login("R", "R");
      assertNotNull(login0);
      
      login0.getUserId();
      assertEquals("R", login0.getIpAddr());
  }

  @Test
  public void test11()  throws Throwable  {
      Login login0 = new Login("");
      String string0 = login0.getEmail();
      assertNull(string0);
  }

  @Test
  public void test12()  throws Throwable  {
      Login login0 = new Login("7'G", "7'G");
      assertNotNull(login0);
      
      // Undeclared exception!
      try {
        login0.getLdapService();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      Login login0 = new Login("");
      assertNotNull(login0);
      
      boolean boolean0 = login0.accessDecision((User) null, "", "");
      assertEquals(true, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          Login login0 = new Login("35C:x,)>L gf");
          User user0 = new User("35C:x,)>L gf", "35C:x,)>L gf");
          login0.log(user0, "35C:x,)>L gf");
          assertEquals("", user0.getCountry());
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test15()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          Login login0 = new Login("/.", "/.");
          assertNotNull(login0);
          
          login0.log((User) null, "/.");
          assertEquals("/.", login0.getIpAddr());
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test16()  throws Throwable  {
      Login login0 = new Login("Lu4");
      try {
        login0.changePassword("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
