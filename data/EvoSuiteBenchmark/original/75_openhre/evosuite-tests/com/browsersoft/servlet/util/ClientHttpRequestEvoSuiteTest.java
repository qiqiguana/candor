/*
 * This file was automatically generated by EvoSuite
 */

package com.browsersoft.servlet.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.browsersoft.servlet.util.ClientHttpRequest;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLStreamHandler;
import java.net.UnknownServiceException;
import java.util.List;
import java.util.Map;
import org.apache.axis.transport.jms.JMSURLConnection;
import org.apache.axis.transport.mail.Handler;
import org.apache.commons.httpclient.ConnectMethod;
import org.apache.commons.httpclient.HttpMethod;
import org.apache.commons.httpclient.util.HttpURLConnection;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ClientHttpRequestEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      File file0 = new File("g", "g");
      URI uRI0 = file0.toURI();
      URL uRL0 = uRI0.toURL();
      try {
        ClientHttpRequest.post(uRL0, "g", (Object) "---------------------------012", "---------------------------012", (Object) "---------------------------012");
        fail("Expecting exception: UnknownServiceException");
      } catch(UnknownServiceException e) {
        /*
         * protocol doesn't support output
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      JMSURLConnection jMSURLConnection0 = new JMSURLConnection((URL) null);
      ClientHttpRequest clientHttpRequest0 = new ClientHttpRequest((URLConnection) jMSURLConnection0);
      Map<String, List<String>> map0 = jMSURLConnection0.getHeaderFields();
      try {
        clientHttpRequest0.post((Map) null, map0);
        fail("Expecting exception: UnknownServiceException");
      } catch(UnknownServiceException e) {
        /*
         * protocol doesn't support output
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Handler handler0 = new Handler();
      URL uRL0 = new URL("'nn5%*(`3q`8V", "'nn5%*(`3q`8V", 97, "'nn5%*(`3q`8V", (URLStreamHandler) handler0);
      JMSURLConnection jMSURLConnection0 = new JMSURLConnection(uRL0);
      ClientHttpRequest clientHttpRequest0 = new ClientHttpRequest((URLConnection) jMSURLConnection0);
      Object[] objectArray0 = new Object[7];
      // Undeclared exception!
      try {
        clientHttpRequest0.post(objectArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      JMSURLConnection jMSURLConnection0 = new JMSURLConnection((URL) null);
      ClientHttpRequest clientHttpRequest0 = new ClientHttpRequest((URLConnection) jMSURLConnection0);
      File file0 = new File("---------------------------012");
      try {
        clientHttpRequest0.post("---------------------------012", (Object) file0, "---------------------------012", (Object) null, "---------------------------012", (Object) null);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
        /*
         * ---------------------------012 (No such file or directory)
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      JMSURLConnection jMSURLConnection0 = new JMSURLConnection((URL) null);
      ClientHttpRequest clientHttpRequest0 = new ClientHttpRequest((URLConnection) jMSURLConnection0);
      try {
        clientHttpRequest0.post((String[]) null, (Object[]) null);
        fail("Expecting exception: UnknownServiceException");
      } catch(UnknownServiceException e) {
        /*
         * protocol doesn't support output
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      org.apache.axis.transport.java.Handler handler0 = new org.apache.axis.transport.java.Handler();
      URL uRL0 = new URL("M", "M", 1421, "M", (URLStreamHandler) handler0);
      JMSURLConnection jMSURLConnection0 = new JMSURLConnection(uRL0);
      Map<String, List<String>> map0 = jMSURLConnection0.getRequestProperties();
      // Undeclared exception!
      try {
        ClientHttpRequest.post(uRL0, (Map) map0, (Map) map0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      JMSURLConnection jMSURLConnection0 = new JMSURLConnection((URL) null);
      ClientHttpRequest clientHttpRequest0 = new ClientHttpRequest((URLConnection) jMSURLConnection0);
      ConnectMethod connectMethod0 = new ConnectMethod();
      HttpURLConnection httpURLConnection0 = new HttpURLConnection((HttpMethod) connectMethod0, (URL) null);
      Map<String, List<String>> map0 = httpURLConnection0.getRequestProperties();
      try {
        clientHttpRequest0.post(map0);
        fail("Expecting exception: UnknownServiceException");
      } catch(UnknownServiceException e) {
        /*
         * protocol doesn't support output
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try {
        ClientHttpRequest.post((URL) null, stringArray0, (Object[]) stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      JMSURLConnection jMSURLConnection0 = new JMSURLConnection((URL) null);
      Map<String, List<String>> map0 = jMSURLConnection0.getHeaderFields();
      // Undeclared exception!
      try {
        ClientHttpRequest.post((URL) null, (Map) map0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      // Undeclared exception!
      try {
        ClientHttpRequest.post((URL) null, "UbOc(HXqug>xPqY", (Object) "http.socket.receivebuffer");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      org.apache.axis.transport.java.Handler handler0 = new org.apache.axis.transport.java.Handler();
      URL uRL0 = new URL("bh)GI=7[FdS7x", "bh)GI=7[FdS7x", 0, "bh)GI=7[FdS7x", (URLStreamHandler) handler0);
      // Undeclared exception!
      try {
        ClientHttpRequest.post(uRL0, "bh)GI=7[FdS7x", (Object) null, (String) null, (Object) null, "bh)GI=7[FdS7x", (Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      Handler handler0 = new Handler();
      URL uRL0 = new URL("'nn5%*(`3q`8V", "'nn5%*(`3q`8V", 97, "'nn5%*(`3q`8V", (URLStreamHandler) handler0);
      JMSURLConnection jMSURLConnection0 = new JMSURLConnection(uRL0);
      ClientHttpRequest clientHttpRequest0 = new ClientHttpRequest((URLConnection) jMSURLConnection0);
      String[] stringArray0 = new String[4];
      clientHttpRequest0.setCookies(stringArray0);
      assertEquals(true, jMSURLConnection0.getDoOutput());
  }

  @Test
  public void test12()  throws Throwable  {
      JMSURLConnection jMSURLConnection0 = new JMSURLConnection((URL) null);
      ClientHttpRequest clientHttpRequest0 = new ClientHttpRequest((URLConnection) jMSURLConnection0);
      Map<String, List<String>> map0 = jMSURLConnection0.getHeaderFields();
      clientHttpRequest0.setCookies(map0);
      assertEquals(true, jMSURLConnection0.getDoOutput());
  }

  @Test
  public void test13()  throws Throwable  {
      Handler handler0 = new Handler();
      URL uRL0 = new URL("'nn5%*(`3q`8V", "'nn5%*(`3q`8V", 97, "'nn5%*(`3q`8V", (URLStreamHandler) handler0);
      JMSURLConnection jMSURLConnection0 = new JMSURLConnection(uRL0);
      ClientHttpRequest clientHttpRequest0 = new ClientHttpRequest((URLConnection) jMSURLConnection0);
      clientHttpRequest0.setParameters((Map) null);
      assertEquals(true, jMSURLConnection0.getDoOutput());
      assertEquals("4", clientHttpRequest0.randomString());
  }

  @Test
  public void test14()  throws Throwable  {
      Handler handler0 = new Handler();
      URL uRL0 = new URL("'nn5%*(`3q`8V", "'nn5%*(`3q`8V", 97, "'nn5%*(`3q`8V", (URLStreamHandler) handler0);
      JMSURLConnection jMSURLConnection0 = new JMSURLConnection(uRL0);
      ClientHttpRequest clientHttpRequest0 = new ClientHttpRequest((URLConnection) jMSURLConnection0);
      Object[] objectArray0 = new Object[1];
      clientHttpRequest0.setParameters(objectArray0);
      assertEquals(true, jMSURLConnection0.getDoOutput());
      assertEquals("4", clientHttpRequest0.randomString());
  }
}
