/*
 * This file was automatically generated by EvoSuite
 */

package org.sourceforge.ifx.framework.complextype;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.sourceforge.ifx.framework.complextype.ChkIssueAddRs_Type;
import org.sourceforge.ifx.framework.element.AsyncRqUID;
import org.sourceforge.ifx.framework.element.CSPRefId;
import org.sourceforge.ifx.framework.element.ChkIssueInfo;
import org.sourceforge.ifx.framework.element.ChkIssueRec;
import org.sourceforge.ifx.framework.element.CustId;
import org.sourceforge.ifx.framework.element.MsgRqHdr;
import org.sourceforge.ifx.framework.element.MsgRsHdr;
import org.sourceforge.ifx.framework.element.RqUID;
import org.sourceforge.ifx.framework.element.SPRefId;
import org.sourceforge.ifx.framework.element.Status;

@RunWith(EvoSuiteRunner.class)
public class ChkIssueAddRs_TypeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ChkIssueAddRs_Type chkIssueAddRs_Type0 = new ChkIssueAddRs_Type();
      MsgRsHdr msgRsHdr0 = new MsgRsHdr();
      chkIssueAddRs_Type0.setMsgRsHdr(msgRsHdr0);
      assertEquals("org.sourceforge.ifx.framework.element.MsgRsHdr = {\n  MsgAuthCode = NULL\n  EMVRsData = NULL\n  ServerTerminalSeqId = NULL\n}", msgRsHdr0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      ChkIssueAddRs_Type chkIssueAddRs_Type0 = new ChkIssueAddRs_Type();
      chkIssueAddRs_Type0.setAsyncRqUID((AsyncRqUID) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.ChkIssueAddRs_Type = {\n  Status = NULL\n  RqUID = NULL\n  MsgRqHdr = NULL\n  MsgRsHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  ChkIssueInfo = NULL\n  ChkIssueRec = NULL\n  CSPRefId = NULL\n  SPRefId = NULL\n}", chkIssueAddRs_Type0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      ChkIssueAddRs_Type chkIssueAddRs_Type0 = new ChkIssueAddRs_Type();
      String string0 = chkIssueAddRs_Type0.toString();
      assertEquals("org.sourceforge.ifx.framework.complextype.ChkIssueAddRs_Type = {\n  Status = NULL\n  RqUID = NULL\n  MsgRqHdr = NULL\n  MsgRsHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  ChkIssueInfo = NULL\n  ChkIssueRec = NULL\n  CSPRefId = NULL\n  SPRefId = NULL\n}", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      ChkIssueAddRs_Type chkIssueAddRs_Type0 = new ChkIssueAddRs_Type();
      ChkIssueRec chkIssueRec0 = new ChkIssueRec();
      chkIssueAddRs_Type0.setChkIssueRec(chkIssueRec0);
      assertEquals("org.sourceforge.ifx.framework.complextype.ChkIssueAddRs_Type = {\n  Status = NULL\n  RqUID = NULL\n  MsgRqHdr = NULL\n  MsgRsHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  ChkIssueInfo = NULL\n  ChkIssueRec = org.sourceforge.ifx.framework.element.ChkIssueRec = {\n    ChkIssueInfo = NULL\n    ChkIssueId = NULL\n    ChkIssueStatus = NULL\n  }\n  CSPRefId = NULL\n  SPRefId = NULL\n}", chkIssueAddRs_Type0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      ChkIssueAddRs_Type chkIssueAddRs_Type0 = new ChkIssueAddRs_Type();
      SPRefId sPRefId0 = new SPRefId();
      chkIssueAddRs_Type0.setSPRefId(sPRefId0);
      assertNull(sPRefId0.getString());
  }

  @Test
  public void test5()  throws Throwable  {
      ChkIssueAddRs_Type chkIssueAddRs_Type0 = new ChkIssueAddRs_Type();
      CSPRefId cSPRefId0 = new CSPRefId();
      chkIssueAddRs_Type0.setCSPRefId(cSPRefId0);
      assertEquals("org.sourceforge.ifx.framework.complextype.ChkIssueAddRs_Type = {\n  Status = NULL\n  RqUID = NULL\n  MsgRqHdr = NULL\n  MsgRsHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  ChkIssueInfo = NULL\n  ChkIssueRec = NULL\n  CSPRefId = null\n  SPRefId = NULL\n}", chkIssueAddRs_Type0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      ChkIssueAddRs_Type chkIssueAddRs_Type0 = new ChkIssueAddRs_Type();
      CustId custId0 = new CustId();
      chkIssueAddRs_Type0.setCustId(custId0);
      assertEquals("org.sourceforge.ifx.framework.complextype.ChkIssueAddRs_Type = {\n  Status = NULL\n  RqUID = NULL\n  MsgRqHdr = NULL\n  MsgRsHdr = NULL\n  AsyncRqUID = NULL\n  CustId = org.sourceforge.ifx.framework.element.CustId = {\n    SPName = NULL\n    CustPermId = NULL\n    CustLoginId = NULL\n    CardMagData = NULL\n    CardLogicalData = NULL\n  }\n  ChkIssueInfo = NULL\n  ChkIssueRec = NULL\n  CSPRefId = NULL\n  SPRefId = NULL\n}", chkIssueAddRs_Type0.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      ChkIssueAddRs_Type chkIssueAddRs_Type0 = new ChkIssueAddRs_Type();
      boolean boolean0 = chkIssueAddRs_Type0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      ChkIssueAddRs_Type chkIssueAddRs_Type0 = new ChkIssueAddRs_Type();
      chkIssueAddRs_Type0.setStatus((Status) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.ChkIssueAddRs_Type = {\n  Status = NULL\n  RqUID = NULL\n  MsgRqHdr = NULL\n  MsgRsHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  ChkIssueInfo = NULL\n  ChkIssueRec = NULL\n  CSPRefId = NULL\n  SPRefId = NULL\n}", chkIssueAddRs_Type0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      ChkIssueAddRs_Type chkIssueAddRs_Type0 = new ChkIssueAddRs_Type();
      MsgRqHdr msgRqHdr0 = new MsgRqHdr();
      chkIssueAddRs_Type0.setMsgRqHdr(msgRqHdr0);
      assertEquals("org.sourceforge.ifx.framework.complextype.ChkIssueAddRs_Type = {\n  Status = NULL\n  RqUID = NULL\n  MsgRqHdr = org.sourceforge.ifx.framework.element.MsgRqHdr = {\n    EMVRqData = NULL\n    NetworkTrnInfo = NULL\n    ClientTerminalSeqId = NULL\n    PointOfServiceData = NULL\n    MsgAuthCode = NULL\n  }\n  MsgRsHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  ChkIssueInfo = NULL\n  ChkIssueRec = NULL\n  CSPRefId = NULL\n  SPRefId = NULL\n}", chkIssueAddRs_Type0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      ChkIssueAddRs_Type chkIssueAddRs_Type0 = new ChkIssueAddRs_Type();
      ChkIssueInfo chkIssueInfo0 = new ChkIssueInfo();
      chkIssueAddRs_Type0.setChkIssueInfo(chkIssueInfo0);
      assertEquals("org.sourceforge.ifx.framework.complextype.ChkIssueAddRs_Type = {\n  Status = NULL\n  RqUID = NULL\n  MsgRqHdr = NULL\n  MsgRsHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  ChkIssueInfo = org.sourceforge.ifx.framework.element.ChkIssueInfo = {\n    DepAcctId = NULL\n    EffDt = NULL\n    RefInfo = NULL\n    ChkInfo = NULL\n    CurAmt = NULL\n    DueDt = NULL\n    PaidDt = NULL\n    ImageURL = NULL\n  }\n  ChkIssueRec = NULL\n  CSPRefId = NULL\n  SPRefId = NULL\n}", chkIssueAddRs_Type0.toString());
  }

  @Test
  public void test11()  throws Throwable  {
      ChkIssueAddRs_Type chkIssueAddRs_Type0 = new ChkIssueAddRs_Type();
      RqUID rqUID0 = new RqUID();
      chkIssueAddRs_Type0.setRqUID(rqUID0);
      assertNull(rqUID0.getString());
  }
}
