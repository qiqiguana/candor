/*
 * This file was automatically generated by EvoSuite
 */

package org.sourceforge.ifx.framework.pain004.complextype;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.sourceforge.ifx.framework.pain004.complextype.CurrencyAndAmount;
import org.sourceforge.ifx.framework.pain004.complextype.EquivalentAmount;
import org.sourceforge.ifx.framework.pain004.simpletype.CurrencyCode;

@RunWith(EvoSuiteRunner.class)
public class EquivalentAmountEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      EquivalentAmount equivalentAmount0 = new EquivalentAmount();
      boolean boolean0 = equivalentAmount0.equals((Object) "org.sourceforge.ifx.framework.pain004.complextype.EquivalentAmount = {\n  CurrencyCode = NULL\n  CurrencyAndAmount = NULL\n}");
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      EquivalentAmount equivalentAmount0 = new EquivalentAmount();
      equivalentAmount0.setCurrencyCode((CurrencyCode) null);
      assertEquals("org.sourceforge.ifx.framework.pain004.complextype.EquivalentAmount = {\n  CurrencyCode = NULL\n  CurrencyAndAmount = NULL\n}", equivalentAmount0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      EquivalentAmount equivalentAmount0 = new EquivalentAmount();
      CurrencyAndAmount currencyAndAmount0 = new CurrencyAndAmount();
      equivalentAmount0.setCurrencyAndAmount(currencyAndAmount0);
      assertEquals("org.sourceforge.ifx.framework.pain004.complextype.EquivalentAmount = {\n  CurrencyCode = NULL\n  CurrencyAndAmount = org.sourceforge.ifx.framework.pain004.complextype.CurrencyAndAmount = {\n  }\n}", equivalentAmount0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      EquivalentAmount equivalentAmount0 = new EquivalentAmount();
      CurrencyAndAmount currencyAndAmount0 = equivalentAmount0.getCurrencyAndAmount();
      assertNull(currencyAndAmount0);
  }

  @Test
  public void test4()  throws Throwable  {
      EquivalentAmount equivalentAmount0 = new EquivalentAmount();
      CurrencyCode currencyCode0 = equivalentAmount0.getCurrencyCode();
      assertNull(currencyCode0);
  }
}
