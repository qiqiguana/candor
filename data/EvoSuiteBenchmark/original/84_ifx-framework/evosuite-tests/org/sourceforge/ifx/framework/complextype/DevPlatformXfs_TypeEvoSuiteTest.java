/*
 * This file was automatically generated by EvoSuite
 */

package org.sourceforge.ifx.framework.complextype;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.sourceforge.ifx.framework.complextype.DevPlatformXfs_Type;
import org.sourceforge.ifx.framework.element.PlatformXfsAction;
import org.sourceforge.ifx.framework.element.PlatformXfsAppId;
import org.sourceforge.ifx.framework.element.PlatformXfsCmdCode;
import org.sourceforge.ifx.framework.element.PlatformXfsCmdHResult;
import org.sourceforge.ifx.framework.element.PlatformXfsDesc;
import org.sourceforge.ifx.framework.element.PlatformXfsEventId;
import org.sourceforge.ifx.framework.element.PlatformXfsLogicalName;
import org.sourceforge.ifx.framework.element.PlatformXfsPhysicalName;
import org.sourceforge.ifx.framework.element.PlatformXfsRequestId;
import org.sourceforge.ifx.framework.element.PlatformXfsState;
import org.sourceforge.ifx.framework.element.PlatformXfsTimestamp;
import org.sourceforge.ifx.framework.element.PlatformXfsWkstName;

@RunWith(EvoSuiteRunner.class)
public class DevPlatformXfs_TypeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DevPlatformXfs_Type devPlatformXfs_Type0 = new DevPlatformXfs_Type();
      devPlatformXfs_Type0.setPlatformXfsTimestamp((PlatformXfsTimestamp) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.DevPlatformXfs_Type = {\n  PlatformXfsRequestId = NULL\n  PlatformXfsTimestamp = NULL\n  PlatformXfsEventId = NULL\n  PlatformXfsLogicalName = NULL\n  PlatformXfsPhysicalName = NULL\n  PlatformXfsWkstName = NULL\n  PlatformXfsState = NULL\n  PlatformXfsAppId = NULL\n  PlatformXfsAction = NULL\n  PlatformXfsDesc = NULL\n  PlatformXfsCmdCode = NULL\n  PlatformXfsCmdHResult = NULL\n}", devPlatformXfs_Type0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      DevPlatformXfs_Type devPlatformXfs_Type0 = new DevPlatformXfs_Type();
      devPlatformXfs_Type0.setPlatformXfsAppId((PlatformXfsAppId) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.DevPlatformXfs_Type = {\n  PlatformXfsRequestId = NULL\n  PlatformXfsTimestamp = NULL\n  PlatformXfsEventId = NULL\n  PlatformXfsLogicalName = NULL\n  PlatformXfsPhysicalName = NULL\n  PlatformXfsWkstName = NULL\n  PlatformXfsState = NULL\n  PlatformXfsAppId = NULL\n  PlatformXfsAction = NULL\n  PlatformXfsDesc = NULL\n  PlatformXfsCmdCode = NULL\n  PlatformXfsCmdHResult = NULL\n}", devPlatformXfs_Type0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      DevPlatformXfs_Type devPlatformXfs_Type0 = new DevPlatformXfs_Type();
      PlatformXfsWkstName platformXfsWkstName0 = new PlatformXfsWkstName();
      devPlatformXfs_Type0.setPlatformXfsWkstName(platformXfsWkstName0);
      assertEquals("org.sourceforge.ifx.framework.complextype.DevPlatformXfs_Type = {\n  PlatformXfsRequestId = NULL\n  PlatformXfsTimestamp = NULL\n  PlatformXfsEventId = NULL\n  PlatformXfsLogicalName = NULL\n  PlatformXfsPhysicalName = NULL\n  PlatformXfsWkstName = null\n  PlatformXfsState = NULL\n  PlatformXfsAppId = NULL\n  PlatformXfsAction = NULL\n  PlatformXfsDesc = NULL\n  PlatformXfsCmdCode = NULL\n  PlatformXfsCmdHResult = NULL\n}", devPlatformXfs_Type0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      DevPlatformXfs_Type devPlatformXfs_Type0 = new DevPlatformXfs_Type();
      PlatformXfsCmdHResult platformXfsCmdHResult0 = new PlatformXfsCmdHResult();
      devPlatformXfs_Type0.setPlatformXfsCmdHResult(platformXfsCmdHResult0);
      assertEquals("org.sourceforge.ifx.framework.complextype.DevPlatformXfs_Type = {\n  PlatformXfsRequestId = NULL\n  PlatformXfsTimestamp = NULL\n  PlatformXfsEventId = NULL\n  PlatformXfsLogicalName = NULL\n  PlatformXfsPhysicalName = NULL\n  PlatformXfsWkstName = NULL\n  PlatformXfsState = NULL\n  PlatformXfsAppId = NULL\n  PlatformXfsAction = NULL\n  PlatformXfsDesc = NULL\n  PlatformXfsCmdCode = NULL\n  PlatformXfsCmdHResult = Exception! java.lang.NullPointerException\n}", devPlatformXfs_Type0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      DevPlatformXfs_Type devPlatformXfs_Type0 = new DevPlatformXfs_Type();
      devPlatformXfs_Type0.setPlatformXfsLogicalName((PlatformXfsLogicalName) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.DevPlatformXfs_Type = {\n  PlatformXfsRequestId = NULL\n  PlatformXfsTimestamp = NULL\n  PlatformXfsEventId = NULL\n  PlatformXfsLogicalName = NULL\n  PlatformXfsPhysicalName = NULL\n  PlatformXfsWkstName = NULL\n  PlatformXfsState = NULL\n  PlatformXfsAppId = NULL\n  PlatformXfsAction = NULL\n  PlatformXfsDesc = NULL\n  PlatformXfsCmdCode = NULL\n  PlatformXfsCmdHResult = NULL\n}", devPlatformXfs_Type0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      DevPlatformXfs_Type devPlatformXfs_Type0 = new DevPlatformXfs_Type();
      String string0 = devPlatformXfs_Type0.toString();
      assertEquals("org.sourceforge.ifx.framework.complextype.DevPlatformXfs_Type = {\n  PlatformXfsRequestId = NULL\n  PlatformXfsTimestamp = NULL\n  PlatformXfsEventId = NULL\n  PlatformXfsLogicalName = NULL\n  PlatformXfsPhysicalName = NULL\n  PlatformXfsWkstName = NULL\n  PlatformXfsState = NULL\n  PlatformXfsAppId = NULL\n  PlatformXfsAction = NULL\n  PlatformXfsDesc = NULL\n  PlatformXfsCmdCode = NULL\n  PlatformXfsCmdHResult = NULL\n}", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      DevPlatformXfs_Type devPlatformXfs_Type0 = new DevPlatformXfs_Type();
      PlatformXfsDesc platformXfsDesc0 = new PlatformXfsDesc();
      devPlatformXfs_Type0.setPlatformXfsDesc(platformXfsDesc0);
      assertEquals("org.sourceforge.ifx.framework.element.PlatformXfsDesc = {\n  String = NULL\n}", platformXfsDesc0.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      DevPlatformXfs_Type devPlatformXfs_Type0 = new DevPlatformXfs_Type();
      devPlatformXfs_Type0.setPlatformXfsRequestId((PlatformXfsRequestId) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.DevPlatformXfs_Type = {\n  PlatformXfsRequestId = NULL\n  PlatformXfsTimestamp = NULL\n  PlatformXfsEventId = NULL\n  PlatformXfsLogicalName = NULL\n  PlatformXfsPhysicalName = NULL\n  PlatformXfsWkstName = NULL\n  PlatformXfsState = NULL\n  PlatformXfsAppId = NULL\n  PlatformXfsAction = NULL\n  PlatformXfsDesc = NULL\n  PlatformXfsCmdCode = NULL\n  PlatformXfsCmdHResult = NULL\n}", devPlatformXfs_Type0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      DevPlatformXfs_Type devPlatformXfs_Type0 = new DevPlatformXfs_Type();
      PlatformXfsState platformXfsState0 = new PlatformXfsState();
      devPlatformXfs_Type0.setPlatformXfsState(platformXfsState0);
      assertEquals("org.sourceforge.ifx.framework.element.PlatformXfsState = {\n  String = Exception! java.lang.reflect.InvocationTargetException\n}", platformXfsState0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      DevPlatformXfs_Type devPlatformXfs_Type0 = new DevPlatformXfs_Type();
      devPlatformXfs_Type0.setPlatformXfsPhysicalName((PlatformXfsPhysicalName) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.DevPlatformXfs_Type = {\n  PlatformXfsRequestId = NULL\n  PlatformXfsTimestamp = NULL\n  PlatformXfsEventId = NULL\n  PlatformXfsLogicalName = NULL\n  PlatformXfsPhysicalName = NULL\n  PlatformXfsWkstName = NULL\n  PlatformXfsState = NULL\n  PlatformXfsAppId = NULL\n  PlatformXfsAction = NULL\n  PlatformXfsDesc = NULL\n  PlatformXfsCmdCode = NULL\n  PlatformXfsCmdHResult = NULL\n}", devPlatformXfs_Type0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      DevPlatformXfs_Type devPlatformXfs_Type0 = new DevPlatformXfs_Type();
      devPlatformXfs_Type0.setPlatformXfsCmdCode((PlatformXfsCmdCode) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.DevPlatformXfs_Type = {\n  PlatformXfsRequestId = NULL\n  PlatformXfsTimestamp = NULL\n  PlatformXfsEventId = NULL\n  PlatformXfsLogicalName = NULL\n  PlatformXfsPhysicalName = NULL\n  PlatformXfsWkstName = NULL\n  PlatformXfsState = NULL\n  PlatformXfsAppId = NULL\n  PlatformXfsAction = NULL\n  PlatformXfsDesc = NULL\n  PlatformXfsCmdCode = NULL\n  PlatformXfsCmdHResult = NULL\n}", devPlatformXfs_Type0.toString());
  }

  @Test
  public void test11()  throws Throwable  {
      DevPlatformXfs_Type devPlatformXfs_Type0 = new DevPlatformXfs_Type();
      boolean boolean0 = devPlatformXfs_Type0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      DevPlatformXfs_Type devPlatformXfs_Type0 = new DevPlatformXfs_Type();
      PlatformXfsEventId platformXfsEventId0 = new PlatformXfsEventId();
      devPlatformXfs_Type0.setPlatformXfsEventId(platformXfsEventId0);
      assertEquals("org.sourceforge.ifx.framework.complextype.DevPlatformXfs_Type = {\n  PlatformXfsRequestId = NULL\n  PlatformXfsTimestamp = NULL\n  PlatformXfsEventId = Exception! java.lang.NullPointerException\n}", devPlatformXfs_Type0.toString());
  }

  @Test
  public void test13()  throws Throwable  {
      DevPlatformXfs_Type devPlatformXfs_Type0 = new DevPlatformXfs_Type();
      PlatformXfsAction platformXfsAction0 = new PlatformXfsAction();
      devPlatformXfs_Type0.setPlatformXfsAction(platformXfsAction0);
      assertEquals("org.sourceforge.ifx.framework.element.PlatformXfsAction = {\n  String = Exception! java.lang.reflect.InvocationTargetException\n}", platformXfsAction0.toString());
  }
}
