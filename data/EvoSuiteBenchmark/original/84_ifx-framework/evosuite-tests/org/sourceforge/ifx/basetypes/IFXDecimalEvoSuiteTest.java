/*
 * This file was automatically generated by EvoSuite
 */

package org.sourceforge.ifx.basetypes;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.sourceforge.ifx.basetypes.IFXDecimal;

@RunWith(EvoSuiteRunner.class)
public class IFXDecimalEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      IFXDecimal iFXDecimal0 = new IFXDecimal();
      iFXDecimal0.setString("&@=aA)Z}F/S*F8mY&");
      assertEquals("org.sourceforge.ifx.basetypes.IFXDecimal = {\n  String = Exception! java.lang.ClassCastException: java.lang.String cannot be cast to org.sourceforge.ifx.basetypes.IFXObject\n}", iFXDecimal0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      IFXDecimal iFXDecimal0 = new IFXDecimal();
      // Undeclared exception!
      try {
        iFXDecimal0.equals((Object) iFXDecimal0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      IFXDecimal iFXDecimal0 = new IFXDecimal();
      Object object0 = new Object();
      boolean boolean0 = iFXDecimal0.equals(object0);
      assertEquals(false, boolean0);
  }
}
