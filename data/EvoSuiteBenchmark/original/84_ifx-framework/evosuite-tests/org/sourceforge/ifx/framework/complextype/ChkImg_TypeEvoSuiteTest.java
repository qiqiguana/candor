/*
 * This file was automatically generated by EvoSuite
 */

package org.sourceforge.ifx.framework.complextype;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.sourceforge.ifx.framework.complextype.ChkImg_Type;
import org.sourceforge.ifx.framework.element.ChkImgBack;
import org.sourceforge.ifx.framework.element.ChkImgFront;
import org.sourceforge.ifx.framework.element.CryptType;
import org.sourceforge.ifx.framework.element.SecObjId;

@RunWith(EvoSuiteRunner.class)
public class ChkImg_TypeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ChkImg_Type chkImg_Type0 = new ChkImg_Type();
      boolean boolean0 = chkImg_Type0.equals((Object) "org.sourceforge.ifx.framework.element.ChkImgBack = {\n  ContentType = NULL\n  BinLength = NULL\n  BinData = NULL\n}");
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      ChkImg_Type chkImg_Type0 = new ChkImg_Type();
      ChkImgFront chkImgFront0 = chkImg_Type0.getChkImgFront();
      assertNull(chkImgFront0);
  }

  @Test
  public void test2()  throws Throwable  {
      ChkImg_Type chkImg_Type0 = new ChkImg_Type();
      CryptType cryptType0 = chkImg_Type0.getCryptType();
      assertNull(cryptType0);
  }

  @Test
  public void test3()  throws Throwable  {
      ChkImg_Type chkImg_Type0 = new ChkImg_Type();
      ChkImgFront chkImgFront0 = new ChkImgFront();
      chkImg_Type0.setChkImgFront(chkImgFront0);
      assertEquals("org.sourceforge.ifx.framework.complextype.ChkImg_Type = {\n  CryptType = NULL\n  SecObjId = NULL\n  ChkImgFront = org.sourceforge.ifx.framework.element.ChkImgFront = {\n    ContentType = NULL\n    BinLength = NULL\n    BinData = NULL\n  }\n  ChkImgBack = NULL\n}", chkImg_Type0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      ChkImg_Type chkImg_Type0 = new ChkImg_Type();
      chkImg_Type0.setChkImgBack((ChkImgBack) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.ChkImg_Type = {\n  CryptType = NULL\n  SecObjId = NULL\n  ChkImgFront = NULL\n  ChkImgBack = NULL\n}", chkImg_Type0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      ChkImg_Type chkImg_Type0 = new ChkImg_Type();
      SecObjId secObjId0 = chkImg_Type0.getSecObjId();
      assertNull(secObjId0);
  }

  @Test
  public void test6()  throws Throwable  {
      ChkImg_Type chkImg_Type0 = new ChkImg_Type();
      ChkImgBack chkImgBack0 = chkImg_Type0.getChkImgBack();
      assertNull(chkImgBack0);
  }

  @Test
  public void test7()  throws Throwable  {
      ChkImg_Type chkImg_Type0 = new ChkImg_Type();
      SecObjId secObjId0 = new SecObjId();
      chkImg_Type0.setSecObjId(secObjId0);
      assertEquals("org.sourceforge.ifx.framework.element.SecObjId = {\n  String = NULL\n}", secObjId0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      ChkImg_Type chkImg_Type0 = new ChkImg_Type();
      chkImg_Type0.setCryptType((CryptType) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.ChkImg_Type = {\n  CryptType = NULL\n  SecObjId = NULL\n  ChkImgFront = NULL\n  ChkImgBack = NULL\n}", chkImg_Type0.toString());
  }
}
