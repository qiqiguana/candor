/*
 * This file was automatically generated by EvoSuite
 */

package org.sourceforge.ifx.framework.complextype;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.sourceforge.ifx.framework.complextype.XferAdviseRq_Type;
import org.sourceforge.ifx.framework.element.AsyncRqUID;
import org.sourceforge.ifx.framework.element.CustId;
import org.sourceforge.ifx.framework.element.MsgRqHdr;
import org.sourceforge.ifx.framework.element.RqUID;
import org.sourceforge.ifx.framework.element.XferId;
import org.sourceforge.ifx.framework.element.XferRec;
import org.sourceforge.ifx.framework.element.XferStatus;

@RunWith(EvoSuiteRunner.class)
public class XferAdviseRq_TypeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      XferAdviseRq_Type xferAdviseRq_Type0 = new XferAdviseRq_Type();
      RqUID rqUID0 = xferAdviseRq_Type0.getRqUID();
      assertNull(rqUID0);
  }

  @Test
  public void test1()  throws Throwable  {
      XferAdviseRq_Type xferAdviseRq_Type0 = new XferAdviseRq_Type();
      boolean boolean0 = xferAdviseRq_Type0.equals((Object) "org.sourceforge.ifx.framework.element.RecXferMod = {\n  String = NULL\n}");
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      XferAdviseRq_Type xferAdviseRq_Type0 = new XferAdviseRq_Type();
      xferAdviseRq_Type0.setMsgRqHdr((MsgRqHdr) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.XferAdviseRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  XferRec = NULL\n  XferId = NULL\n  XferStatus = NULL\n}", xferAdviseRq_Type0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      XferAdviseRq_Type xferAdviseRq_Type0 = new XferAdviseRq_Type();
      xferAdviseRq_Type0.setXferRec((XferRec) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.XferAdviseRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  XferRec = NULL\n  XferId = NULL\n  XferStatus = NULL\n}", xferAdviseRq_Type0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      XferAdviseRq_Type xferAdviseRq_Type0 = new XferAdviseRq_Type();
      xferAdviseRq_Type0.setXferId((XferId) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.XferAdviseRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  XferRec = NULL\n  XferId = NULL\n  XferStatus = NULL\n}", xferAdviseRq_Type0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      XferAdviseRq_Type xferAdviseRq_Type0 = new XferAdviseRq_Type();
      XferId xferId0 = xferAdviseRq_Type0.getXferId();
      assertNull(xferId0);
  }

  @Test
  public void test6()  throws Throwable  {
      XferAdviseRq_Type xferAdviseRq_Type0 = new XferAdviseRq_Type();
      CustId custId0 = xferAdviseRq_Type0.getCustId();
      assertNull(custId0);
  }

  @Test
  public void test7()  throws Throwable  {
      XferAdviseRq_Type xferAdviseRq_Type0 = new XferAdviseRq_Type();
      XferStatus xferStatus0 = xferAdviseRq_Type0.getXferStatus();
      assertNull(xferStatus0);
  }

  @Test
  public void test8()  throws Throwable  {
      XferAdviseRq_Type xferAdviseRq_Type0 = new XferAdviseRq_Type();
      xferAdviseRq_Type0.setRqUID((RqUID) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.XferAdviseRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  XferRec = NULL\n  XferId = NULL\n  XferStatus = NULL\n}", xferAdviseRq_Type0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      XferAdviseRq_Type xferAdviseRq_Type0 = new XferAdviseRq_Type();
      MsgRqHdr msgRqHdr0 = xferAdviseRq_Type0.getMsgRqHdr();
      assertNull(msgRqHdr0);
  }

  @Test
  public void test10()  throws Throwable  {
      XferAdviseRq_Type xferAdviseRq_Type0 = new XferAdviseRq_Type();
      CustId custId0 = new CustId();
      xferAdviseRq_Type0.setCustId(custId0);
      assertEquals("org.sourceforge.ifx.framework.complextype.XferAdviseRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = org.sourceforge.ifx.framework.element.CustId = {\n    SPName = NULL\n    CustPermId = NULL\n    CustLoginId = NULL\n    CardMagData = NULL\n    CardLogicalData = NULL\n  }\n  XferRec = NULL\n  XferId = NULL\n  XferStatus = NULL\n}", xferAdviseRq_Type0.toString());
  }

  @Test
  public void test11()  throws Throwable  {
      XferAdviseRq_Type xferAdviseRq_Type0 = new XferAdviseRq_Type();
      XferRec xferRec0 = xferAdviseRq_Type0.getXferRec();
      assertNull(xferRec0);
  }

  @Test
  public void test12()  throws Throwable  {
      XferAdviseRq_Type xferAdviseRq_Type0 = new XferAdviseRq_Type();
      xferAdviseRq_Type0.setXferStatus((XferStatus) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.XferAdviseRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  XferRec = NULL\n  XferId = NULL\n  XferStatus = NULL\n}", xferAdviseRq_Type0.toString());
  }

  @Test
  public void test13()  throws Throwable  {
      XferAdviseRq_Type xferAdviseRq_Type0 = new XferAdviseRq_Type();
      AsyncRqUID asyncRqUID0 = new AsyncRqUID();
      xferAdviseRq_Type0.setAsyncRqUID(asyncRqUID0);
      assertEquals("org.sourceforge.ifx.framework.complextype.XferAdviseRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = null\n  CustId = NULL\n  XferRec = NULL\n  XferId = NULL\n  XferStatus = NULL\n}", xferAdviseRq_Type0.toString());
  }

  @Test
  public void test14()  throws Throwable  {
      XferAdviseRq_Type xferAdviseRq_Type0 = new XferAdviseRq_Type();
      AsyncRqUID asyncRqUID0 = xferAdviseRq_Type0.getAsyncRqUID();
      assertNull(asyncRqUID0);
  }
}
