/*
 * This file was automatically generated by EvoSuite
 */

package org.sourceforge.ifx.framework.complextype;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.sourceforge.ifx.framework.complextype.RecChkOrdAddRq_Type;
import org.sourceforge.ifx.framework.element.AsyncRqUID;
import org.sourceforge.ifx.framework.element.ChkOrdInfo;
import org.sourceforge.ifx.framework.element.CustId;
import org.sourceforge.ifx.framework.element.DupChkOverride;
import org.sourceforge.ifx.framework.element.MsgRqHdr;
import org.sourceforge.ifx.framework.element.RecModelInfo;
import org.sourceforge.ifx.framework.element.RqUID;

@RunWith(EvoSuiteRunner.class)
public class RecChkOrdAddRq_TypeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RecChkOrdAddRq_Type recChkOrdAddRq_Type0 = new RecChkOrdAddRq_Type();
      boolean boolean0 = recChkOrdAddRq_Type0.equals((Object) "org.sourceforge.ifx.framework.element.IssDiscData = {\n  Bytes = NULL\n  String = Exception! java.lang.reflect.InvocationTargetException\n}");
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      RecChkOrdAddRq_Type recChkOrdAddRq_Type0 = new RecChkOrdAddRq_Type();
      String string0 = recChkOrdAddRq_Type0.toString();
      assertEquals("org.sourceforge.ifx.framework.complextype.RecChkOrdAddRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  ChkOrdInfo = NULL\n  RecModelInfo = NULL\n  DupChkOverride = NULL\n}", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      RecChkOrdAddRq_Type recChkOrdAddRq_Type0 = new RecChkOrdAddRq_Type();
      CustId custId0 = new CustId();
      recChkOrdAddRq_Type0.setCustId(custId0);
      assertEquals("org.sourceforge.ifx.framework.element.CustId = {\n  SPName = NULL\n  CustPermId = NULL\n  CustLoginId = NULL\n  CardMagData = NULL\n  CardLogicalData = NULL\n}", custId0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      RecChkOrdAddRq_Type recChkOrdAddRq_Type0 = new RecChkOrdAddRq_Type();
      RqUID rqUID0 = recChkOrdAddRq_Type0.getRqUID();
      recChkOrdAddRq_Type0.setRqUID(rqUID0);
      assertEquals("org.sourceforge.ifx.framework.complextype.RecChkOrdAddRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  ChkOrdInfo = NULL\n  RecModelInfo = NULL\n  DupChkOverride = NULL\n}", recChkOrdAddRq_Type0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      RecChkOrdAddRq_Type recChkOrdAddRq_Type0 = new RecChkOrdAddRq_Type();
      recChkOrdAddRq_Type0.setDupChkOverride((DupChkOverride) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.RecChkOrdAddRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  ChkOrdInfo = NULL\n  RecModelInfo = NULL\n  DupChkOverride = NULL\n}", recChkOrdAddRq_Type0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      RecChkOrdAddRq_Type recChkOrdAddRq_Type0 = new RecChkOrdAddRq_Type();
      ChkOrdInfo chkOrdInfo0 = new ChkOrdInfo();
      recChkOrdAddRq_Type0.setChkOrdInfo(chkOrdInfo0);
      assertEquals("org.sourceforge.ifx.framework.element.ChkOrdInfo = {\n  Count = NULL\n  DepAcctId = NULL\n  CardAcctId = NULL\n  LoanAcctId = NULL\n  ChkPrint = NULL\n  ChkText = NULL\n  CustNameAddr = NULL\n  PersonInfo = NULL\n  DeliveryDestination = NULL\n  ChkNumPrefix = NULL\n  ChkNumStart = NULL\n  ChkNumSuffix = NULL\n  ChkBkStyleId = NULL\n  DeliveryMethod = NULL\n  BillingMethod = NULL\n  CoverMngrm = NULL\n  CoverStyleId = NULL\n  ArtWorkId = NULL\n  IncEndrsmntStmp = NULL\n  FontId = NULL\n  OvrSigText = NULL\n  IncSecSigLine = NULL\n  ClubAcctId = NULL\n  VoucherTypeId = NULL\n  BaseEnvr = NULL\n}", chkOrdInfo0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      RecChkOrdAddRq_Type recChkOrdAddRq_Type0 = new RecChkOrdAddRq_Type();
      AsyncRqUID asyncRqUID0 = new AsyncRqUID();
      recChkOrdAddRq_Type0.setAsyncRqUID(asyncRqUID0);
      assertNull(asyncRqUID0.getString());
  }

  @Test
  public void test7()  throws Throwable  {
      RecChkOrdAddRq_Type recChkOrdAddRq_Type0 = new RecChkOrdAddRq_Type();
      MsgRqHdr msgRqHdr0 = recChkOrdAddRq_Type0.getMsgRqHdr();
      recChkOrdAddRq_Type0.setMsgRqHdr(msgRqHdr0);
      assertEquals("org.sourceforge.ifx.framework.complextype.RecChkOrdAddRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  ChkOrdInfo = NULL\n  RecModelInfo = NULL\n  DupChkOverride = NULL\n}", recChkOrdAddRq_Type0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      RecChkOrdAddRq_Type recChkOrdAddRq_Type0 = new RecChkOrdAddRq_Type();
      RecModelInfo recModelInfo0 = new RecModelInfo();
      recChkOrdAddRq_Type0.setRecModelInfo(recModelInfo0);
      assertEquals("org.sourceforge.ifx.framework.element.RecModelInfo = {\n  Freq = NULL\n  NumInsts = NULL\n  FinalPrcDt = NULL\n  FinalDueDt = NULL\n  InitialCurAmt = NULL\n  FinalCurAmt = NULL\n  Nickname = NULL\n  SkipNextN = NULL\n}", recModelInfo0.toString());
  }
}
