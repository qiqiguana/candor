/*
 * This file was automatically generated by EvoSuite
 */

package org.sourceforge.ifx.framework.pain002.complextype;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.sourceforge.ifx.framework.pain002.complextype.ClearingSystemMemberIdentificationChoice;
import org.sourceforge.ifx.framework.pain004.simpletype.AustrianBankleitzahlIdentifier;
import org.sourceforge.ifx.framework.pain004.simpletype.CHIPSParticipantIdentifier;
import org.sourceforge.ifx.framework.pain004.simpletype.CHIPSUniversalIdentifier;
import org.sourceforge.ifx.framework.pain004.simpletype.CanadianPaymentsARNIdentifier;
import org.sourceforge.ifx.framework.pain004.simpletype.ExtensiveBranchNetworkIdentifier;
import org.sourceforge.ifx.framework.pain004.simpletype.FedwireRoutingNumberIdentifier;
import org.sourceforge.ifx.framework.pain004.simpletype.GermanBankleitzahlIdentifier;
import org.sourceforge.ifx.framework.pain004.simpletype.HongKongBankIdentifier;
import org.sourceforge.ifx.framework.pain004.simpletype.IrishNSCIdentifier;
import org.sourceforge.ifx.framework.pain004.simpletype.ItalianDomesticIdentifier;
import org.sourceforge.ifx.framework.pain004.simpletype.NewZealandNCCIdentifier;
import org.sourceforge.ifx.framework.pain004.simpletype.PortugueseNCCIdentifier;
import org.sourceforge.ifx.framework.pain004.simpletype.RussianCentralBankIdentificationCodeIdentifier;
import org.sourceforge.ifx.framework.pain004.simpletype.SmallNetworkIdentifier;
import org.sourceforge.ifx.framework.pain004.simpletype.SouthAfricanNCCIdentifier;
import org.sourceforge.ifx.framework.pain004.simpletype.SpanishDomesticInterbankingIdentifier;
import org.sourceforge.ifx.framework.pain004.simpletype.SwissBCIdentifier;
import org.sourceforge.ifx.framework.pain004.simpletype.SwissSICIdentifier;
import org.sourceforge.ifx.framework.pain004.simpletype.UKDomesticSortCodeIdentifier;

@RunWith(EvoSuiteRunner.class)
public class ClearingSystemMemberIdentificationChoiceEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      SwissBCIdentifier swissBCIdentifier0 = clearingSystemMemberIdentificationChoice0.getSwissBCIdentifier();
      assertNull(swissBCIdentifier0);
  }

  @Test
  public void test1()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      GermanBankleitzahlIdentifier germanBankleitzahlIdentifier0 = clearingSystemMemberIdentificationChoice0.getGermanBankleitzahlIdentifier();
      assertNull(germanBankleitzahlIdentifier0);
  }

  @Test
  public void test2()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      FedwireRoutingNumberIdentifier fedwireRoutingNumberIdentifier0 = new FedwireRoutingNumberIdentifier();
      clearingSystemMemberIdentificationChoice0.setFedwireRoutingNumberIdentifier(fedwireRoutingNumberIdentifier0);
      assertEquals("org.sourceforge.ifx.framework.pain004.simpletype.FedwireRoutingNumberIdentifier = {\n  String = NULL\n}", fedwireRoutingNumberIdentifier0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      SwissBCIdentifier swissBCIdentifier0 = new SwissBCIdentifier();
      clearingSystemMemberIdentificationChoice0.setSwissBCIdentifier(swissBCIdentifier0);
      assertNull(swissBCIdentifier0.getString());
  }

  @Test
  public void test4()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      NewZealandNCCIdentifier newZealandNCCIdentifier0 = clearingSystemMemberIdentificationChoice0.getNewZealandNCCIdentifier();
      clearingSystemMemberIdentificationChoice0.setNewZealandNCCIdentifier(newZealandNCCIdentifier0);
      assertEquals("org.sourceforge.ifx.framework.pain002.complextype.ClearingSystemMemberIdentificationChoice = {\n  CHIPSUniversalIdentifier = NULL\n  NewZealandNCCIdentifier = NULL\n  IrishNSCIdentifier = NULL\n  UKDomesticSortCodeIdentifier = NULL\n  CHIPSParticipantIdentifier = NULL\n  SwissBCIdentifier = NULL\n  FedwireRoutingNumberIdentifier = NULL\n  PortugueseNCCIdentifier = NULL\n  RussianCentralBankIdentificationCodeIdentifier = NULL\n  ItalianDomesticIdentifier = NULL\n  AustrianBankleitzahlIdentifier = NULL\n  CanadianPaymentsARNIdentifier = NULL\n  SwissSICIdentifier = NULL\n  GermanBankleitzahlIdentifier = NULL\n  SpanishDomesticInterbankingIdentifier = NULL\n  SouthAfricanNCCIdentifier = NULL\n  HongKongBankIdentifier = NULL\n  ExtensiveBranchNetworkIdentifier = NULL\n  SmallNetworkIdentifier = NULL\n}", clearingSystemMemberIdentificationChoice0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      SmallNetworkIdentifier smallNetworkIdentifier0 = clearingSystemMemberIdentificationChoice0.getSmallNetworkIdentifier();
      assertNull(smallNetworkIdentifier0);
  }

  @Test
  public void test6()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      clearingSystemMemberIdentificationChoice0.setExtensiveBranchNetworkIdentifier((ExtensiveBranchNetworkIdentifier) null);
      assertEquals("org.sourceforge.ifx.framework.pain002.complextype.ClearingSystemMemberIdentificationChoice = {\n  CHIPSUniversalIdentifier = NULL\n  NewZealandNCCIdentifier = NULL\n  IrishNSCIdentifier = NULL\n  UKDomesticSortCodeIdentifier = NULL\n  CHIPSParticipantIdentifier = NULL\n  SwissBCIdentifier = NULL\n  FedwireRoutingNumberIdentifier = NULL\n  PortugueseNCCIdentifier = NULL\n  RussianCentralBankIdentificationCodeIdentifier = NULL\n  ItalianDomesticIdentifier = NULL\n  AustrianBankleitzahlIdentifier = NULL\n  CanadianPaymentsARNIdentifier = NULL\n  SwissSICIdentifier = NULL\n  GermanBankleitzahlIdentifier = NULL\n  SpanishDomesticInterbankingIdentifier = NULL\n  SouthAfricanNCCIdentifier = NULL\n  HongKongBankIdentifier = NULL\n  ExtensiveBranchNetworkIdentifier = NULL\n  SmallNetworkIdentifier = NULL\n}", clearingSystemMemberIdentificationChoice0.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      clearingSystemMemberIdentificationChoice0.setCHIPSParticipantIdentifier((CHIPSParticipantIdentifier) null);
      assertEquals("org.sourceforge.ifx.framework.pain002.complextype.ClearingSystemMemberIdentificationChoice = {\n  CHIPSUniversalIdentifier = NULL\n  NewZealandNCCIdentifier = NULL\n  IrishNSCIdentifier = NULL\n  UKDomesticSortCodeIdentifier = NULL\n  CHIPSParticipantIdentifier = NULL\n  SwissBCIdentifier = NULL\n  FedwireRoutingNumberIdentifier = NULL\n  PortugueseNCCIdentifier = NULL\n  RussianCentralBankIdentificationCodeIdentifier = NULL\n  ItalianDomesticIdentifier = NULL\n  AustrianBankleitzahlIdentifier = NULL\n  CanadianPaymentsARNIdentifier = NULL\n  SwissSICIdentifier = NULL\n  GermanBankleitzahlIdentifier = NULL\n  SpanishDomesticInterbankingIdentifier = NULL\n  SouthAfricanNCCIdentifier = NULL\n  HongKongBankIdentifier = NULL\n  ExtensiveBranchNetworkIdentifier = NULL\n  SmallNetworkIdentifier = NULL\n}", clearingSystemMemberIdentificationChoice0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      PortugueseNCCIdentifier portugueseNCCIdentifier0 = clearingSystemMemberIdentificationChoice0.getPortugueseNCCIdentifier();
      assertNull(portugueseNCCIdentifier0);
  }

  @Test
  public void test9()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      SmallNetworkIdentifier smallNetworkIdentifier0 = new SmallNetworkIdentifier();
      clearingSystemMemberIdentificationChoice0.setSmallNetworkIdentifier(smallNetworkIdentifier0);
      assertEquals("org.sourceforge.ifx.framework.pain002.complextype.ClearingSystemMemberIdentificationChoice = {\n  CHIPSUniversalIdentifier = NULL\n  NewZealandNCCIdentifier = NULL\n  IrishNSCIdentifier = NULL\n  UKDomesticSortCodeIdentifier = NULL\n  CHIPSParticipantIdentifier = NULL\n  SwissBCIdentifier = NULL\n  FedwireRoutingNumberIdentifier = NULL\n  PortugueseNCCIdentifier = NULL\n  RussianCentralBankIdentificationCodeIdentifier = NULL\n  ItalianDomesticIdentifier = NULL\n  AustrianBankleitzahlIdentifier = NULL\n  CanadianPaymentsARNIdentifier = NULL\n  SwissSICIdentifier = NULL\n  GermanBankleitzahlIdentifier = NULL\n  SpanishDomesticInterbankingIdentifier = NULL\n  SouthAfricanNCCIdentifier = NULL\n  HongKongBankIdentifier = NULL\n  ExtensiveBranchNetworkIdentifier = NULL\n  SmallNetworkIdentifier = null\n}", clearingSystemMemberIdentificationChoice0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      clearingSystemMemberIdentificationChoice0.setIrishNSCIdentifier((IrishNSCIdentifier) null);
      assertEquals("org.sourceforge.ifx.framework.pain002.complextype.ClearingSystemMemberIdentificationChoice = {\n  CHIPSUniversalIdentifier = NULL\n  NewZealandNCCIdentifier = NULL\n  IrishNSCIdentifier = NULL\n  UKDomesticSortCodeIdentifier = NULL\n  CHIPSParticipantIdentifier = NULL\n  SwissBCIdentifier = NULL\n  FedwireRoutingNumberIdentifier = NULL\n  PortugueseNCCIdentifier = NULL\n  RussianCentralBankIdentificationCodeIdentifier = NULL\n  ItalianDomesticIdentifier = NULL\n  AustrianBankleitzahlIdentifier = NULL\n  CanadianPaymentsARNIdentifier = NULL\n  SwissSICIdentifier = NULL\n  GermanBankleitzahlIdentifier = NULL\n  SpanishDomesticInterbankingIdentifier = NULL\n  SouthAfricanNCCIdentifier = NULL\n  HongKongBankIdentifier = NULL\n  ExtensiveBranchNetworkIdentifier = NULL\n  SmallNetworkIdentifier = NULL\n}", clearingSystemMemberIdentificationChoice0.toString());
  }

  @Test
  public void test11()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      ExtensiveBranchNetworkIdentifier extensiveBranchNetworkIdentifier0 = clearingSystemMemberIdentificationChoice0.getExtensiveBranchNetworkIdentifier();
      assertNull(extensiveBranchNetworkIdentifier0);
  }

  @Test
  public void test12()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      RussianCentralBankIdentificationCodeIdentifier russianCentralBankIdentificationCodeIdentifier0 = new RussianCentralBankIdentificationCodeIdentifier();
      clearingSystemMemberIdentificationChoice0.setRussianCentralBankIdentificationCodeIdentifier(russianCentralBankIdentificationCodeIdentifier0);
      assertEquals("org.sourceforge.ifx.framework.pain004.simpletype.RussianCentralBankIdentificationCodeIdentifier = {\n  String = NULL\n}", russianCentralBankIdentificationCodeIdentifier0.toString());
  }

  @Test
  public void test13()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      SouthAfricanNCCIdentifier southAfricanNCCIdentifier0 = new SouthAfricanNCCIdentifier();
      clearingSystemMemberIdentificationChoice0.setSouthAfricanNCCIdentifier(southAfricanNCCIdentifier0);
      assertEquals("org.sourceforge.ifx.framework.pain004.simpletype.SouthAfricanNCCIdentifier = {\n  String = NULL\n}", southAfricanNCCIdentifier0.toString());
  }

  @Test
  public void test14()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      IrishNSCIdentifier irishNSCIdentifier0 = clearingSystemMemberIdentificationChoice0.getIrishNSCIdentifier();
      assertNull(irishNSCIdentifier0);
  }

  @Test
  public void test15()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      SwissSICIdentifier swissSICIdentifier0 = clearingSystemMemberIdentificationChoice0.getSwissSICIdentifier();
      assertNull(swissSICIdentifier0);
  }

  @Test
  public void test16()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      CanadianPaymentsARNIdentifier canadianPaymentsARNIdentifier0 = clearingSystemMemberIdentificationChoice0.getCanadianPaymentsARNIdentifier();
      assertNull(canadianPaymentsARNIdentifier0);
  }

  @Test
  public void test17()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      clearingSystemMemberIdentificationChoice0.setCHIPSUniversalIdentifier((CHIPSUniversalIdentifier) null);
      assertEquals("org.sourceforge.ifx.framework.pain002.complextype.ClearingSystemMemberIdentificationChoice = {\n  CHIPSUniversalIdentifier = NULL\n  NewZealandNCCIdentifier = NULL\n  IrishNSCIdentifier = NULL\n  UKDomesticSortCodeIdentifier = NULL\n  CHIPSParticipantIdentifier = NULL\n  SwissBCIdentifier = NULL\n  FedwireRoutingNumberIdentifier = NULL\n  PortugueseNCCIdentifier = NULL\n  RussianCentralBankIdentificationCodeIdentifier = NULL\n  ItalianDomesticIdentifier = NULL\n  AustrianBankleitzahlIdentifier = NULL\n  CanadianPaymentsARNIdentifier = NULL\n  SwissSICIdentifier = NULL\n  GermanBankleitzahlIdentifier = NULL\n  SpanishDomesticInterbankingIdentifier = NULL\n  SouthAfricanNCCIdentifier = NULL\n  HongKongBankIdentifier = NULL\n  ExtensiveBranchNetworkIdentifier = NULL\n  SmallNetworkIdentifier = NULL\n}", clearingSystemMemberIdentificationChoice0.toString());
  }

  @Test
  public void test18()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      UKDomesticSortCodeIdentifier uKDomesticSortCodeIdentifier0 = clearingSystemMemberIdentificationChoice0.getUKDomesticSortCodeIdentifier();
      clearingSystemMemberIdentificationChoice0.setUKDomesticSortCodeIdentifier(uKDomesticSortCodeIdentifier0);
      assertEquals("org.sourceforge.ifx.framework.pain002.complextype.ClearingSystemMemberIdentificationChoice = {\n  CHIPSUniversalIdentifier = NULL\n  NewZealandNCCIdentifier = NULL\n  IrishNSCIdentifier = NULL\n  UKDomesticSortCodeIdentifier = NULL\n  CHIPSParticipantIdentifier = NULL\n  SwissBCIdentifier = NULL\n  FedwireRoutingNumberIdentifier = NULL\n  PortugueseNCCIdentifier = NULL\n  RussianCentralBankIdentificationCodeIdentifier = NULL\n  ItalianDomesticIdentifier = NULL\n  AustrianBankleitzahlIdentifier = NULL\n  CanadianPaymentsARNIdentifier = NULL\n  SwissSICIdentifier = NULL\n  GermanBankleitzahlIdentifier = NULL\n  SpanishDomesticInterbankingIdentifier = NULL\n  SouthAfricanNCCIdentifier = NULL\n  HongKongBankIdentifier = NULL\n  ExtensiveBranchNetworkIdentifier = NULL\n  SmallNetworkIdentifier = NULL\n}", clearingSystemMemberIdentificationChoice0.toString());
  }

  @Test
  public void test19()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      AustrianBankleitzahlIdentifier austrianBankleitzahlIdentifier0 = clearingSystemMemberIdentificationChoice0.getAustrianBankleitzahlIdentifier();
      assertNull(austrianBankleitzahlIdentifier0);
  }

  @Test
  public void test20()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      clearingSystemMemberIdentificationChoice0.setCanadianPaymentsARNIdentifier((CanadianPaymentsARNIdentifier) null);
      assertEquals("org.sourceforge.ifx.framework.pain002.complextype.ClearingSystemMemberIdentificationChoice = {\n  CHIPSUniversalIdentifier = NULL\n  NewZealandNCCIdentifier = NULL\n  IrishNSCIdentifier = NULL\n  UKDomesticSortCodeIdentifier = NULL\n  CHIPSParticipantIdentifier = NULL\n  SwissBCIdentifier = NULL\n  FedwireRoutingNumberIdentifier = NULL\n  PortugueseNCCIdentifier = NULL\n  RussianCentralBankIdentificationCodeIdentifier = NULL\n  ItalianDomesticIdentifier = NULL\n  AustrianBankleitzahlIdentifier = NULL\n  CanadianPaymentsARNIdentifier = NULL\n  SwissSICIdentifier = NULL\n  GermanBankleitzahlIdentifier = NULL\n  SpanishDomesticInterbankingIdentifier = NULL\n  SouthAfricanNCCIdentifier = NULL\n  HongKongBankIdentifier = NULL\n  ExtensiveBranchNetworkIdentifier = NULL\n  SmallNetworkIdentifier = NULL\n}", clearingSystemMemberIdentificationChoice0.toString());
  }

  @Test
  public void test21()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      SpanishDomesticInterbankingIdentifier spanishDomesticInterbankingIdentifier0 = clearingSystemMemberIdentificationChoice0.getSpanishDomesticInterbankingIdentifier();
      assertNull(spanishDomesticInterbankingIdentifier0);
  }

  @Test
  public void test22()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      FedwireRoutingNumberIdentifier fedwireRoutingNumberIdentifier0 = clearingSystemMemberIdentificationChoice0.getFedwireRoutingNumberIdentifier();
      assertNull(fedwireRoutingNumberIdentifier0);
  }

  @Test
  public void test23()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      AustrianBankleitzahlIdentifier austrianBankleitzahlIdentifier0 = new AustrianBankleitzahlIdentifier();
      clearingSystemMemberIdentificationChoice0.setAustrianBankleitzahlIdentifier(austrianBankleitzahlIdentifier0);
      assertNull(austrianBankleitzahlIdentifier0.getString());
  }

  @Test
  public void test24()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      clearingSystemMemberIdentificationChoice0.setSpanishDomesticInterbankingIdentifier((SpanishDomesticInterbankingIdentifier) null);
      assertEquals("org.sourceforge.ifx.framework.pain002.complextype.ClearingSystemMemberIdentificationChoice = {\n  CHIPSUniversalIdentifier = NULL\n  NewZealandNCCIdentifier = NULL\n  IrishNSCIdentifier = NULL\n  UKDomesticSortCodeIdentifier = NULL\n  CHIPSParticipantIdentifier = NULL\n  SwissBCIdentifier = NULL\n  FedwireRoutingNumberIdentifier = NULL\n  PortugueseNCCIdentifier = NULL\n  RussianCentralBankIdentificationCodeIdentifier = NULL\n  ItalianDomesticIdentifier = NULL\n  AustrianBankleitzahlIdentifier = NULL\n  CanadianPaymentsARNIdentifier = NULL\n  SwissSICIdentifier = NULL\n  GermanBankleitzahlIdentifier = NULL\n  SpanishDomesticInterbankingIdentifier = NULL\n  SouthAfricanNCCIdentifier = NULL\n  HongKongBankIdentifier = NULL\n  ExtensiveBranchNetworkIdentifier = NULL\n  SmallNetworkIdentifier = NULL\n}", clearingSystemMemberIdentificationChoice0.toString());
  }

  @Test
  public void test25()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      clearingSystemMemberIdentificationChoice0.setHongKongBankIdentifier((HongKongBankIdentifier) null);
      assertEquals("org.sourceforge.ifx.framework.pain002.complextype.ClearingSystemMemberIdentificationChoice = {\n  CHIPSUniversalIdentifier = NULL\n  NewZealandNCCIdentifier = NULL\n  IrishNSCIdentifier = NULL\n  UKDomesticSortCodeIdentifier = NULL\n  CHIPSParticipantIdentifier = NULL\n  SwissBCIdentifier = NULL\n  FedwireRoutingNumberIdentifier = NULL\n  PortugueseNCCIdentifier = NULL\n  RussianCentralBankIdentificationCodeIdentifier = NULL\n  ItalianDomesticIdentifier = NULL\n  AustrianBankleitzahlIdentifier = NULL\n  CanadianPaymentsARNIdentifier = NULL\n  SwissSICIdentifier = NULL\n  GermanBankleitzahlIdentifier = NULL\n  SpanishDomesticInterbankingIdentifier = NULL\n  SouthAfricanNCCIdentifier = NULL\n  HongKongBankIdentifier = NULL\n  ExtensiveBranchNetworkIdentifier = NULL\n  SmallNetworkIdentifier = NULL\n}", clearingSystemMemberIdentificationChoice0.toString());
  }

  @Test
  public void test26()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      RussianCentralBankIdentificationCodeIdentifier russianCentralBankIdentificationCodeIdentifier0 = clearingSystemMemberIdentificationChoice0.getRussianCentralBankIdentificationCodeIdentifier();
      assertNull(russianCentralBankIdentificationCodeIdentifier0);
  }

  @Test
  public void test27()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      ItalianDomesticIdentifier italianDomesticIdentifier0 = clearingSystemMemberIdentificationChoice0.getItalianDomesticIdentifier();
      assertNull(italianDomesticIdentifier0);
  }

  @Test
  public void test28()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      CHIPSParticipantIdentifier cHIPSParticipantIdentifier0 = clearingSystemMemberIdentificationChoice0.getCHIPSParticipantIdentifier();
      assertNull(cHIPSParticipantIdentifier0);
  }

  @Test
  public void test29()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      ItalianDomesticIdentifier italianDomesticIdentifier0 = new ItalianDomesticIdentifier();
      clearingSystemMemberIdentificationChoice0.setItalianDomesticIdentifier(italianDomesticIdentifier0);
      assertNull(italianDomesticIdentifier0.getString());
  }

  @Test
  public void test30()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      boolean boolean0 = clearingSystemMemberIdentificationChoice0.equals((Object) "org.sourceforge.ifx.framework.pain004.simpletype.AustrianBankleitzahlIdentifier = {\n  String = NULL\n}");
      assertEquals(false, boolean0);
  }

  @Test
  public void test31()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      GermanBankleitzahlIdentifier germanBankleitzahlIdentifier0 = new GermanBankleitzahlIdentifier();
      clearingSystemMemberIdentificationChoice0.setGermanBankleitzahlIdentifier(germanBankleitzahlIdentifier0);
      assertEquals("org.sourceforge.ifx.framework.pain004.simpletype.GermanBankleitzahlIdentifier = {\n  String = NULL\n}", germanBankleitzahlIdentifier0.toString());
  }

  @Test
  public void test32()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      HongKongBankIdentifier hongKongBankIdentifier0 = clearingSystemMemberIdentificationChoice0.getHongKongBankIdentifier();
      assertNull(hongKongBankIdentifier0);
  }

  @Test
  public void test33()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      SouthAfricanNCCIdentifier southAfricanNCCIdentifier0 = clearingSystemMemberIdentificationChoice0.getSouthAfricanNCCIdentifier();
      assertNull(southAfricanNCCIdentifier0);
  }

  @Test
  public void test34()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      SwissSICIdentifier swissSICIdentifier0 = new SwissSICIdentifier();
      clearingSystemMemberIdentificationChoice0.setSwissSICIdentifier(swissSICIdentifier0);
      assertNull(swissSICIdentifier0.getString());
  }

  @Test
  public void test35()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      CHIPSUniversalIdentifier cHIPSUniversalIdentifier0 = clearingSystemMemberIdentificationChoice0.getCHIPSUniversalIdentifier();
      assertNull(cHIPSUniversalIdentifier0);
  }

  @Test
  public void test36()  throws Throwable  {
      ClearingSystemMemberIdentificationChoice clearingSystemMemberIdentificationChoice0 = new ClearingSystemMemberIdentificationChoice();
      PortugueseNCCIdentifier portugueseNCCIdentifier0 = new PortugueseNCCIdentifier();
      clearingSystemMemberIdentificationChoice0.setPortugueseNCCIdentifier(portugueseNCCIdentifier0);
      assertNull(portugueseNCCIdentifier0.getString());
  }
}
