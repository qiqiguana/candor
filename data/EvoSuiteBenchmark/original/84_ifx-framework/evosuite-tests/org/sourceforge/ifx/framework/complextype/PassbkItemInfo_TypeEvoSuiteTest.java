/*
 * This file was automatically generated by EvoSuite
 */

package org.sourceforge.ifx.framework.complextype;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.sourceforge.ifx.framework.complextype.PassbkItemInfo_Type;
import org.sourceforge.ifx.framework.element.BaseEnvr;
import org.sourceforge.ifx.framework.element.PassbkId;
import org.sourceforge.ifx.framework.element.PassbkItemDetail;

@RunWith(EvoSuiteRunner.class)
public class PassbkItemInfo_TypeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PassbkItemInfo_Type passbkItemInfo_Type0 = new PassbkItemInfo_Type();
      BaseEnvr baseEnvr0 = passbkItemInfo_Type0.getBaseEnvr();
      assertNull(baseEnvr0);
  }

  @Test
  public void test1()  throws Throwable  {
      PassbkItemInfo_Type passbkItemInfo_Type0 = new PassbkItemInfo_Type();
      passbkItemInfo_Type0.setPassbkItemDetail((PassbkItemDetail) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.PassbkItemInfo_Type = {\n  PassbkId = NULL\n  PassbkItemDetail = NULL\n  BaseEnvr = NULL\n}", passbkItemInfo_Type0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      PassbkItemInfo_Type passbkItemInfo_Type0 = new PassbkItemInfo_Type();
      PassbkItemDetail passbkItemDetail0 = passbkItemInfo_Type0.getPassbkItemDetail();
      assertNull(passbkItemDetail0);
  }

  @Test
  public void test3()  throws Throwable  {
      PassbkItemInfo_Type passbkItemInfo_Type0 = new PassbkItemInfo_Type();
      boolean boolean0 = passbkItemInfo_Type0.equals((Object) "org.sourceforge.ifx.framework.element.Environment = {\n  String = NULL\n}");
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      PassbkItemInfo_Type passbkItemInfo_Type0 = new PassbkItemInfo_Type();
      PassbkId passbkId0 = passbkItemInfo_Type0.getPassbkId();
      assertNull(passbkId0);
  }

  @Test
  public void test5()  throws Throwable  {
      PassbkItemInfo_Type passbkItemInfo_Type0 = new PassbkItemInfo_Type();
      BaseEnvr baseEnvr0 = new BaseEnvr();
      passbkItemInfo_Type0.setBaseEnvr(baseEnvr0);
      assertEquals("org.sourceforge.ifx.framework.complextype.PassbkItemInfo_Type = {\n  PassbkId = NULL\n  PassbkItemDetail = NULL\n  BaseEnvr = org.sourceforge.ifx.framework.element.BaseEnvr = {\n    CreatedDt = NULL\n    CreateRefId = NULL\n    ClientCreateDt = NULL\n    ClientBusinessDt = NULL\n    CustId = NULL\n    NetworkTrnInfo = NULL\n    ServerTerminalSeqId = NULL\n    PointOfServiceData = NULL\n    ClientTerminalSeqId = NULL\n  }\n}", passbkItemInfo_Type0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      PassbkItemInfo_Type passbkItemInfo_Type0 = new PassbkItemInfo_Type();
      PassbkId passbkId0 = new PassbkId();
      passbkItemInfo_Type0.setPassbkId(passbkId0);
      assertEquals("org.sourceforge.ifx.framework.complextype.PassbkItemInfo_Type = {\n  PassbkId = null\n  PassbkItemDetail = NULL\n  BaseEnvr = NULL\n}", passbkItemInfo_Type0.toString());
  }
}
