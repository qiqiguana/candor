/*
 * This file was automatically generated by EvoSuite
 */

package org.sourceforge.ifx.framework.complextype;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.sourceforge.ifx.framework.complextype.ChkIssueAddRq_Type;
import org.sourceforge.ifx.framework.element.AsyncRqUID;
import org.sourceforge.ifx.framework.element.ChkIssueInfo;
import org.sourceforge.ifx.framework.element.CustId;
import org.sourceforge.ifx.framework.element.MsgRqHdr;
import org.sourceforge.ifx.framework.element.RqUID;

@RunWith(EvoSuiteRunner.class)
public class ChkIssueAddRq_TypeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ChkIssueAddRq_Type chkIssueAddRq_Type0 = new ChkIssueAddRq_Type();
      CustId custId0 = new CustId();
      chkIssueAddRq_Type0.setCustId(custId0);
      assertEquals("org.sourceforge.ifx.framework.element.CustId = {\n  SPName = NULL\n  CustPermId = NULL\n  CustLoginId = NULL\n  CardMagData = NULL\n  CardLogicalData = NULL\n}", custId0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      ChkIssueAddRq_Type chkIssueAddRq_Type0 = new ChkIssueAddRq_Type();
      MsgRqHdr msgRqHdr0 = chkIssueAddRq_Type0.getMsgRqHdr();
      assertNull(msgRqHdr0);
  }

  @Test
  public void test2()  throws Throwable  {
      ChkIssueAddRq_Type chkIssueAddRq_Type0 = new ChkIssueAddRq_Type();
      ChkIssueInfo chkIssueInfo0 = chkIssueAddRq_Type0.getChkIssueInfo();
      assertNull(chkIssueInfo0);
  }

  @Test
  public void test3()  throws Throwable  {
      ChkIssueAddRq_Type chkIssueAddRq_Type0 = new ChkIssueAddRq_Type();
      ChkIssueInfo chkIssueInfo0 = new ChkIssueInfo();
      chkIssueAddRq_Type0.setChkIssueInfo(chkIssueInfo0);
      assertEquals("org.sourceforge.ifx.framework.element.ChkIssueInfo = {\n  DepAcctId = NULL\n  EffDt = NULL\n  RefInfo = NULL\n  ChkInfo = NULL\n  CurAmt = NULL\n  DueDt = NULL\n  PaidDt = NULL\n  ImageURL = NULL\n}", chkIssueInfo0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      ChkIssueAddRq_Type chkIssueAddRq_Type0 = new ChkIssueAddRq_Type();
      AsyncRqUID asyncRqUID0 = new AsyncRqUID();
      chkIssueAddRq_Type0.setAsyncRqUID(asyncRqUID0);
      assertNull(asyncRqUID0.getString());
  }

  @Test
  public void test5()  throws Throwable  {
      ChkIssueAddRq_Type chkIssueAddRq_Type0 = new ChkIssueAddRq_Type();
      boolean boolean0 = chkIssueAddRq_Type0.equals((Object) "org.sourceforge.ifx.framework.element.POSOperation = {\n  String = NULL\n}");
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      ChkIssueAddRq_Type chkIssueAddRq_Type0 = new ChkIssueAddRq_Type();
      RqUID rqUID0 = new RqUID();
      chkIssueAddRq_Type0.setRqUID(rqUID0);
      assertNull(rqUID0.getString());
  }

  @Test
  public void test7()  throws Throwable  {
      ChkIssueAddRq_Type chkIssueAddRq_Type0 = new ChkIssueAddRq_Type();
      MsgRqHdr msgRqHdr0 = new MsgRqHdr();
      chkIssueAddRq_Type0.setMsgRqHdr(msgRqHdr0);
      assertEquals("org.sourceforge.ifx.framework.complextype.ChkIssueAddRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = org.sourceforge.ifx.framework.element.MsgRqHdr = {\n    EMVRqData = NULL\n    NetworkTrnInfo = NULL\n    ClientTerminalSeqId = NULL\n    PointOfServiceData = NULL\n    MsgAuthCode = NULL\n  }\n  AsyncRqUID = NULL\n  CustId = NULL\n  ChkIssueInfo = NULL\n}", chkIssueAddRq_Type0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      ChkIssueAddRq_Type chkIssueAddRq_Type0 = new ChkIssueAddRq_Type();
      AsyncRqUID asyncRqUID0 = chkIssueAddRq_Type0.getAsyncRqUID();
      assertNull(asyncRqUID0);
  }

  @Test
  public void test9()  throws Throwable  {
      ChkIssueAddRq_Type chkIssueAddRq_Type0 = new ChkIssueAddRq_Type();
      CustId custId0 = chkIssueAddRq_Type0.getCustId();
      assertNull(custId0);
  }

  @Test
  public void test10()  throws Throwable  {
      ChkIssueAddRq_Type chkIssueAddRq_Type0 = new ChkIssueAddRq_Type();
      RqUID rqUID0 = chkIssueAddRq_Type0.getRqUID();
      assertNull(rqUID0);
  }
}
