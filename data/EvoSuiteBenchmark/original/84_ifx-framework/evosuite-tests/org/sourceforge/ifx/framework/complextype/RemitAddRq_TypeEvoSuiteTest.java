/*
 * This file was automatically generated by EvoSuite
 */

package org.sourceforge.ifx.framework.complextype;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.sourceforge.ifx.framework.complextype.RemitAddRq_Type;
import org.sourceforge.ifx.framework.element.AsyncRqUID;
import org.sourceforge.ifx.framework.element.CustId;
import org.sourceforge.ifx.framework.element.DupChkOverride;
import org.sourceforge.ifx.framework.element.EffDt;
import org.sourceforge.ifx.framework.element.MsgRqHdr;
import org.sourceforge.ifx.framework.element.RemitInfo;
import org.sourceforge.ifx.framework.element.RqUID;

@RunWith(EvoSuiteRunner.class)
public class RemitAddRq_TypeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RemitAddRq_Type remitAddRq_Type0 = new RemitAddRq_Type();
      RqUID rqUID0 = remitAddRq_Type0.getRqUID();
      assertNull(rqUID0);
  }

  @Test
  public void test1()  throws Throwable  {
      RemitAddRq_Type remitAddRq_Type0 = new RemitAddRq_Type();
      AsyncRqUID asyncRqUID0 = new AsyncRqUID();
      remitAddRq_Type0.setAsyncRqUID(asyncRqUID0);
      assertEquals("org.sourceforge.ifx.framework.element.AsyncRqUID = {\n  String = NULL\n}", asyncRqUID0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      RemitAddRq_Type remitAddRq_Type0 = new RemitAddRq_Type();
      remitAddRq_Type0.setEffDt((EffDt) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.RemitAddRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  EffDt = NULL\n  RemitInfo = NULL\n  DupChkOverride = NULL\n}", remitAddRq_Type0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      RemitAddRq_Type remitAddRq_Type0 = new RemitAddRq_Type();
      RemitInfo remitInfo0 = remitAddRq_Type0.getRemitInfo();
      remitAddRq_Type0.setRemitInfo(remitInfo0);
      assertEquals("org.sourceforge.ifx.framework.complextype.RemitAddRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  EffDt = NULL\n  RemitInfo = NULL\n  DupChkOverride = NULL\n}", remitAddRq_Type0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      RemitAddRq_Type remitAddRq_Type0 = new RemitAddRq_Type();
      EffDt effDt0 = remitAddRq_Type0.getEffDt();
      assertNull(effDt0);
  }

  @Test
  public void test5()  throws Throwable  {
      RemitAddRq_Type remitAddRq_Type0 = new RemitAddRq_Type();
      CustId custId0 = new CustId();
      remitAddRq_Type0.setCustId(custId0);
      assertEquals("org.sourceforge.ifx.framework.element.CustId = {\n  SPName = NULL\n  CustPermId = NULL\n  CustLoginId = NULL\n  CardMagData = NULL\n  CardLogicalData = NULL\n}", custId0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      RemitAddRq_Type remitAddRq_Type0 = new RemitAddRq_Type();
      remitAddRq_Type0.setMsgRqHdr((MsgRqHdr) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.RemitAddRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  EffDt = NULL\n  RemitInfo = NULL\n  DupChkOverride = NULL\n}", remitAddRq_Type0.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      RemitAddRq_Type remitAddRq_Type0 = new RemitAddRq_Type();
      MsgRqHdr msgRqHdr0 = remitAddRq_Type0.getMsgRqHdr();
      assertNull(msgRqHdr0);
  }

  @Test
  public void test8()  throws Throwable  {
      RemitAddRq_Type remitAddRq_Type0 = new RemitAddRq_Type();
      boolean boolean0 = remitAddRq_Type0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      RemitAddRq_Type remitAddRq_Type0 = new RemitAddRq_Type();
      CustId custId0 = remitAddRq_Type0.getCustId();
      assertNull(custId0);
  }

  @Test
  public void test10()  throws Throwable  {
      RemitAddRq_Type remitAddRq_Type0 = new RemitAddRq_Type();
      DupChkOverride dupChkOverride0 = remitAddRq_Type0.getDupChkOverride();
      assertNull(dupChkOverride0);
  }

  @Test
  public void test11()  throws Throwable  {
      RemitAddRq_Type remitAddRq_Type0 = new RemitAddRq_Type();
      remitAddRq_Type0.setRqUID((RqUID) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.RemitAddRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  EffDt = NULL\n  RemitInfo = NULL\n  DupChkOverride = NULL\n}", remitAddRq_Type0.toString());
  }

  @Test
  public void test12()  throws Throwable  {
      RemitAddRq_Type remitAddRq_Type0 = new RemitAddRq_Type();
      DupChkOverride dupChkOverride0 = new DupChkOverride();
      remitAddRq_Type0.setDupChkOverride(dupChkOverride0);
      assertNull(dupChkOverride0.getString());
  }

  @Test
  public void test13()  throws Throwable  {
      RemitAddRq_Type remitAddRq_Type0 = new RemitAddRq_Type();
      AsyncRqUID asyncRqUID0 = remitAddRq_Type0.getAsyncRqUID();
      assertNull(asyncRqUID0);
  }
}
