/*
 * This file was automatically generated by EvoSuite
 */

package org.sourceforge.ifx.framework.complextype;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.sourceforge.ifx.framework.complextype.ChkAcceptAddRq_Type;
import org.sourceforge.ifx.framework.element.AsyncRqUID;
import org.sourceforge.ifx.framework.element.ChkAcceptInfo;
import org.sourceforge.ifx.framework.element.CustId;
import org.sourceforge.ifx.framework.element.MsgRqHdr;
import org.sourceforge.ifx.framework.element.RqUID;

@RunWith(EvoSuiteRunner.class)
public class ChkAcceptAddRq_TypeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ChkAcceptAddRq_Type chkAcceptAddRq_Type0 = new ChkAcceptAddRq_Type();
      ChkAcceptInfo chkAcceptInfo0 = chkAcceptAddRq_Type0.getChkAcceptInfo();
      assertNull(chkAcceptInfo0);
  }

  @Test
  public void test1()  throws Throwable  {
      ChkAcceptAddRq_Type chkAcceptAddRq_Type0 = new ChkAcceptAddRq_Type();
      boolean boolean0 = chkAcceptAddRq_Type0.equals((Object) "org.sourceforge.ifx.framework.element.Addr1 = {\n  String = NULL\n}");
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      ChkAcceptAddRq_Type chkAcceptAddRq_Type0 = new ChkAcceptAddRq_Type();
      chkAcceptAddRq_Type0.setCustId((CustId) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.ChkAcceptAddRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  ChkAcceptInfo = NULL\n}", chkAcceptAddRq_Type0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      ChkAcceptAddRq_Type chkAcceptAddRq_Type0 = new ChkAcceptAddRq_Type();
      MsgRqHdr msgRqHdr0 = chkAcceptAddRq_Type0.getMsgRqHdr();
      assertNull(msgRqHdr0);
  }

  @Test
  public void test4()  throws Throwable  {
      ChkAcceptAddRq_Type chkAcceptAddRq_Type0 = new ChkAcceptAddRq_Type();
      AsyncRqUID asyncRqUID0 = new AsyncRqUID();
      chkAcceptAddRq_Type0.setAsyncRqUID(asyncRqUID0);
      assertEquals("org.sourceforge.ifx.framework.element.AsyncRqUID = {\n  String = NULL\n}", asyncRqUID0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      ChkAcceptAddRq_Type chkAcceptAddRq_Type0 = new ChkAcceptAddRq_Type();
      RqUID rqUID0 = new RqUID();
      chkAcceptAddRq_Type0.setRqUID(rqUID0);
      assertEquals("org.sourceforge.ifx.framework.complextype.ChkAcceptAddRq_Type = {\n  RqUID = null\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  ChkAcceptInfo = NULL\n}", chkAcceptAddRq_Type0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      ChkAcceptAddRq_Type chkAcceptAddRq_Type0 = new ChkAcceptAddRq_Type();
      CustId custId0 = chkAcceptAddRq_Type0.getCustId();
      assertNull(custId0);
  }

  @Test
  public void test7()  throws Throwable  {
      ChkAcceptAddRq_Type chkAcceptAddRq_Type0 = new ChkAcceptAddRq_Type();
      AsyncRqUID asyncRqUID0 = chkAcceptAddRq_Type0.getAsyncRqUID();
      assertNull(asyncRqUID0);
  }

  @Test
  public void test8()  throws Throwable  {
      ChkAcceptAddRq_Type chkAcceptAddRq_Type0 = new ChkAcceptAddRq_Type();
      ChkAcceptInfo chkAcceptInfo0 = new ChkAcceptInfo();
      chkAcceptAddRq_Type0.setChkAcceptInfo(chkAcceptInfo0);
      assertEquals("org.sourceforge.ifx.framework.element.ChkAcceptInfo = {\n  ChkAcceptType = NULL\n  CompositeCurAmt = NULL\n  CreditId = NULL\n  SettleInd = NULL\n  TruncatedInd = NULL\n  CreditMediaChkInfo = NULL\n}", chkAcceptInfo0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      ChkAcceptAddRq_Type chkAcceptAddRq_Type0 = new ChkAcceptAddRq_Type();
      MsgRqHdr msgRqHdr0 = new MsgRqHdr();
      chkAcceptAddRq_Type0.setMsgRqHdr(msgRqHdr0);
      assertEquals("org.sourceforge.ifx.framework.complextype.ChkAcceptAddRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = org.sourceforge.ifx.framework.element.MsgRqHdr = {\n    EMVRqData = NULL\n    NetworkTrnInfo = NULL\n    ClientTerminalSeqId = NULL\n    PointOfServiceData = NULL\n    MsgAuthCode = NULL\n  }\n  AsyncRqUID = NULL\n  CustId = NULL\n  ChkAcceptInfo = NULL\n}", chkAcceptAddRq_Type0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      ChkAcceptAddRq_Type chkAcceptAddRq_Type0 = new ChkAcceptAddRq_Type();
      RqUID rqUID0 = chkAcceptAddRq_Type0.getRqUID();
      assertNull(rqUID0);
  }
}
