/*
 * This file was automatically generated by EvoSuite
 */

package org.sourceforge.ifx.framework.complextype;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.sourceforge.ifx.framework.complextype.CompRemitStmtAddRq_Type;
import org.sourceforge.ifx.framework.element.AsyncRqUID;
import org.sourceforge.ifx.framework.element.CompRemitStmtInfo;
import org.sourceforge.ifx.framework.element.CustId;
import org.sourceforge.ifx.framework.element.DupChkOverride;
import org.sourceforge.ifx.framework.element.EffDt;
import org.sourceforge.ifx.framework.element.MsgRqHdr;
import org.sourceforge.ifx.framework.element.RqUID;

@RunWith(EvoSuiteRunner.class)
public class CompRemitStmtAddRq_TypeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CompRemitStmtAddRq_Type compRemitStmtAddRq_Type0 = new CompRemitStmtAddRq_Type();
      String string0 = compRemitStmtAddRq_Type0.toString();
      assertEquals("org.sourceforge.ifx.framework.complextype.CompRemitStmtAddRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  EffDt = NULL\n  CompRemitStmtInfo = NULL\n  DupChkOverride = NULL\n}", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      CompRemitStmtAddRq_Type compRemitStmtAddRq_Type0 = new CompRemitStmtAddRq_Type();
      RqUID rqUID0 = new RqUID();
      compRemitStmtAddRq_Type0.setRqUID(rqUID0);
      assertEquals("org.sourceforge.ifx.framework.element.RqUID = {\n  String = NULL\n}", rqUID0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      CompRemitStmtAddRq_Type compRemitStmtAddRq_Type0 = new CompRemitStmtAddRq_Type();
      compRemitStmtAddRq_Type0.setMsgRqHdr((MsgRqHdr) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.CompRemitStmtAddRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  EffDt = NULL\n  CompRemitStmtInfo = NULL\n  DupChkOverride = NULL\n}", compRemitStmtAddRq_Type0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      CompRemitStmtAddRq_Type compRemitStmtAddRq_Type0 = new CompRemitStmtAddRq_Type();
      AsyncRqUID asyncRqUID0 = new AsyncRqUID();
      compRemitStmtAddRq_Type0.setAsyncRqUID(asyncRqUID0);
      assertNull(asyncRqUID0.getString());
  }

  @Test
  public void test4()  throws Throwable  {
      CompRemitStmtAddRq_Type compRemitStmtAddRq_Type0 = new CompRemitStmtAddRq_Type();
      CompRemitStmtInfo compRemitStmtInfo0 = new CompRemitStmtInfo();
      compRemitStmtAddRq_Type0.setCompRemitStmtInfo(compRemitStmtInfo0);
      assertEquals("org.sourceforge.ifx.framework.element.CompRemitStmtInfo = {\n  Count = NULL\n  LockboxDepId = NULL\n  DepAcctId = NULL\n  CurAmt = NULL\n  RefInfo = NULL\n  PrcDt = NULL\n  BatchInfo = NULL\n  LockboxURL = NULL\n}", compRemitStmtInfo0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      CompRemitStmtAddRq_Type compRemitStmtAddRq_Type0 = new CompRemitStmtAddRq_Type();
      compRemitStmtAddRq_Type0.setDupChkOverride((DupChkOverride) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.CompRemitStmtAddRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  EffDt = NULL\n  CompRemitStmtInfo = NULL\n  DupChkOverride = NULL\n}", compRemitStmtAddRq_Type0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      CompRemitStmtAddRq_Type compRemitStmtAddRq_Type0 = new CompRemitStmtAddRq_Type();
      compRemitStmtAddRq_Type0.setEffDt((EffDt) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.CompRemitStmtAddRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  EffDt = NULL\n  CompRemitStmtInfo = NULL\n  DupChkOverride = NULL\n}", compRemitStmtAddRq_Type0.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      CompRemitStmtAddRq_Type compRemitStmtAddRq_Type0 = new CompRemitStmtAddRq_Type();
      CustId custId0 = new CustId();
      compRemitStmtAddRq_Type0.setCustId(custId0);
      assertEquals("org.sourceforge.ifx.framework.complextype.CompRemitStmtAddRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = org.sourceforge.ifx.framework.element.CustId = {\n    SPName = NULL\n    CustPermId = NULL\n    CustLoginId = NULL\n    CardMagData = NULL\n    CardLogicalData = NULL\n  }\n  EffDt = NULL\n  CompRemitStmtInfo = NULL\n  DupChkOverride = NULL\n}", compRemitStmtAddRq_Type0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      CompRemitStmtAddRq_Type compRemitStmtAddRq_Type0 = new CompRemitStmtAddRq_Type();
      boolean boolean0 = compRemitStmtAddRq_Type0.equals((Object) null);
      assertEquals(false, boolean0);
  }
}
