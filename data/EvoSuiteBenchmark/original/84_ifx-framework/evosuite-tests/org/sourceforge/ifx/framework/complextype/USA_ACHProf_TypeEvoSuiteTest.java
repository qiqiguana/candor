/*
 * This file was automatically generated by EvoSuite
 */

package org.sourceforge.ifx.framework.complextype;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.sourceforge.ifx.framework.complextype.USA_ACHProf_Type;
import org.sourceforge.ifx.framework.element.CanWind;
import org.sourceforge.ifx.framework.element.DaysWith;
import org.sourceforge.ifx.framework.element.DfltDaysToPay;

@RunWith(EvoSuiteRunner.class)
public class USA_ACHProf_TypeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      USA_ACHProf_Type uSA_ACHProf_Type0 = new USA_ACHProf_Type();
      uSA_ACHProf_Type0.setCanWind((CanWind) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.USA_ACHProf_Type = {\n  DaysWith = NULL\n  DfltDaysToPay = NULL\n  CanWind = NULL\n}", uSA_ACHProf_Type0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      USA_ACHProf_Type uSA_ACHProf_Type0 = new USA_ACHProf_Type();
      Object object0 = new Object();
      boolean boolean0 = uSA_ACHProf_Type0.equals(object0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      USA_ACHProf_Type uSA_ACHProf_Type0 = new USA_ACHProf_Type();
      CanWind canWind0 = uSA_ACHProf_Type0.getCanWind();
      assertNull(canWind0);
  }

  @Test
  public void test3()  throws Throwable  {
      USA_ACHProf_Type uSA_ACHProf_Type0 = new USA_ACHProf_Type();
      uSA_ACHProf_Type0.setDaysWith((DaysWith) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.USA_ACHProf_Type = {\n  DaysWith = NULL\n  DfltDaysToPay = NULL\n  CanWind = NULL\n}", uSA_ACHProf_Type0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      USA_ACHProf_Type uSA_ACHProf_Type0 = new USA_ACHProf_Type();
      DfltDaysToPay dfltDaysToPay0 = uSA_ACHProf_Type0.getDfltDaysToPay();
      assertNull(dfltDaysToPay0);
  }

  @Test
  public void test5()  throws Throwable  {
      USA_ACHProf_Type uSA_ACHProf_Type0 = new USA_ACHProf_Type();
      uSA_ACHProf_Type0.setDfltDaysToPay((DfltDaysToPay) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.USA_ACHProf_Type = {\n  DaysWith = NULL\n  DfltDaysToPay = NULL\n  CanWind = NULL\n}", uSA_ACHProf_Type0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      USA_ACHProf_Type uSA_ACHProf_Type0 = new USA_ACHProf_Type();
      DaysWith daysWith0 = uSA_ACHProf_Type0.getDaysWith();
      assertNull(daysWith0);
  }
}
