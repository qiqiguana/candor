/*
 * This file was automatically generated by EvoSuite
 */

package org.sourceforge.ifx.framework.complextype;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.sourceforge.ifx.framework.complextype.RecXferModRq_Type;
import org.sourceforge.ifx.framework.element.AsyncRqUID;
import org.sourceforge.ifx.framework.element.CustId;
import org.sourceforge.ifx.framework.element.ModPending;
import org.sourceforge.ifx.framework.element.MsgRqHdr;
import org.sourceforge.ifx.framework.element.RecModelInfo;
import org.sourceforge.ifx.framework.element.RecXferId;
import org.sourceforge.ifx.framework.element.RqUID;
import org.sourceforge.ifx.framework.element.XferInfo;

@RunWith(EvoSuiteRunner.class)
public class RecXferModRq_TypeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RecXferModRq_Type recXferModRq_Type0 = new RecXferModRq_Type();
      recXferModRq_Type0.setXferInfo((XferInfo) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.RecXferModRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  RecXferId = NULL\n  XferInfo = NULL\n  RecModelInfo = NULL\n  ModPending = NULL\n}", recXferModRq_Type0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      RecXferModRq_Type recXferModRq_Type0 = new RecXferModRq_Type();
      RecModelInfo recModelInfo0 = new RecModelInfo();
      recXferModRq_Type0.setRecModelInfo(recModelInfo0);
      assertEquals("org.sourceforge.ifx.framework.complextype.RecXferModRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  RecXferId = NULL\n  XferInfo = NULL\n  RecModelInfo = org.sourceforge.ifx.framework.element.RecModelInfo = {\n    Freq = NULL\n    NumInsts = NULL\n    FinalPrcDt = NULL\n    FinalDueDt = NULL\n    InitialCurAmt = NULL\n    FinalCurAmt = NULL\n    Nickname = NULL\n    SkipNextN = NULL\n  }\n  ModPending = NULL\n}", recXferModRq_Type0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      RecXferModRq_Type recXferModRq_Type0 = new RecXferModRq_Type();
      recXferModRq_Type0.setModPending((ModPending) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.RecXferModRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  RecXferId = NULL\n  XferInfo = NULL\n  RecModelInfo = NULL\n  ModPending = NULL\n}", recXferModRq_Type0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      RecXferModRq_Type recXferModRq_Type0 = new RecXferModRq_Type();
      recXferModRq_Type0.setCustId((CustId) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.RecXferModRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  RecXferId = NULL\n  XferInfo = NULL\n  RecModelInfo = NULL\n  ModPending = NULL\n}", recXferModRq_Type0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      RecXferModRq_Type recXferModRq_Type0 = new RecXferModRq_Type();
      String string0 = recXferModRq_Type0.toString();
      assertEquals("org.sourceforge.ifx.framework.complextype.RecXferModRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  RecXferId = NULL\n  XferInfo = NULL\n  RecModelInfo = NULL\n  ModPending = NULL\n}", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      RecXferModRq_Type recXferModRq_Type0 = new RecXferModRq_Type();
      RqUID rqUID0 = new RqUID();
      recXferModRq_Type0.setRqUID(rqUID0);
      assertNull(rqUID0.getString());
  }

  @Test
  public void test6()  throws Throwable  {
      RecXferModRq_Type recXferModRq_Type0 = new RecXferModRq_Type();
      recXferModRq_Type0.setAsyncRqUID((AsyncRqUID) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.RecXferModRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  RecXferId = NULL\n  XferInfo = NULL\n  RecModelInfo = NULL\n  ModPending = NULL\n}", recXferModRq_Type0.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      RecXferModRq_Type recXferModRq_Type0 = new RecXferModRq_Type();
      recXferModRq_Type0.setMsgRqHdr((MsgRqHdr) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.RecXferModRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  RecXferId = NULL\n  XferInfo = NULL\n  RecModelInfo = NULL\n  ModPending = NULL\n}", recXferModRq_Type0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      RecXferModRq_Type recXferModRq_Type0 = new RecXferModRq_Type();
      boolean boolean0 = recXferModRq_Type0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      RecXferModRq_Type recXferModRq_Type0 = new RecXferModRq_Type();
      RecXferId recXferId0 = new RecXferId();
      recXferModRq_Type0.setRecXferId(recXferId0);
      assertEquals("org.sourceforge.ifx.framework.complextype.RecXferModRq_Type = {\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  RecXferId = null\n  XferInfo = NULL\n  RecModelInfo = NULL\n  ModPending = NULL\n}", recXferModRq_Type0.toString());
  }
}
