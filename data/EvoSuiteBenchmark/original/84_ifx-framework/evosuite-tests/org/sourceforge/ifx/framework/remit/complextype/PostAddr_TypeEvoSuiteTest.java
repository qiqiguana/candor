/*
 * This file was automatically generated by EvoSuite
 */

package org.sourceforge.ifx.framework.remit.complextype;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.sourceforge.ifx.framework.element.Addr1;
import org.sourceforge.ifx.framework.element.Addr2;
import org.sourceforge.ifx.framework.element.Addr3;
import org.sourceforge.ifx.framework.element.Addr4;
import org.sourceforge.ifx.framework.element.AddrType;
import org.sourceforge.ifx.framework.element.City;
import org.sourceforge.ifx.framework.element.Country;
import org.sourceforge.ifx.framework.element.EndDt;
import org.sourceforge.ifx.framework.element.PostalCode;
import org.sourceforge.ifx.framework.element.StartDt;
import org.sourceforge.ifx.framework.element.StateProv;
import org.sourceforge.ifx.framework.remit.complextype.PostAddr_Type;

@RunWith(EvoSuiteRunner.class)
public class PostAddr_TypeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PostAddr_Type postAddr_Type0 = new PostAddr_Type();
      Addr3 addr3_0 = postAddr_Type0.getAddr3();
      assertNull(addr3_0);
  }

  @Test
  public void test1()  throws Throwable  {
      PostAddr_Type postAddr_Type0 = new PostAddr_Type();
      StartDt startDt0 = postAddr_Type0.getStartDt();
      assertNull(startDt0);
  }

  @Test
  public void test2()  throws Throwable  {
      PostAddr_Type postAddr_Type0 = new PostAddr_Type();
      AddrType addrType0 = postAddr_Type0.getAddrType();
      assertNull(addrType0);
  }

  @Test
  public void test3()  throws Throwable  {
      PostAddr_Type postAddr_Type0 = new PostAddr_Type();
      postAddr_Type0.setCity((City) null);
      assertEquals("org.sourceforge.ifx.framework.remit.complextype.PostAddr_Type = {\n  Country = NULL\n  Addr1 = NULL\n  Addr2 = NULL\n  Addr3 = NULL\n  Addr4 = NULL\n  City = NULL\n  StateProv = NULL\n  PostalCode = NULL\n  AddrType = NULL\n  StartDt = NULL\n  EndDt = NULL\n}", postAddr_Type0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      PostAddr_Type postAddr_Type0 = new PostAddr_Type();
      postAddr_Type0.setAddr1((Addr1) null);
      assertEquals("org.sourceforge.ifx.framework.remit.complextype.PostAddr_Type = {\n  Country = NULL\n  Addr1 = NULL\n  Addr2 = NULL\n  Addr3 = NULL\n  Addr4 = NULL\n  City = NULL\n  StateProv = NULL\n  PostalCode = NULL\n  AddrType = NULL\n  StartDt = NULL\n  EndDt = NULL\n}", postAddr_Type0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      PostAddr_Type postAddr_Type0 = new PostAddr_Type();
      boolean boolean0 = postAddr_Type0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      PostAddr_Type postAddr_Type0 = new PostAddr_Type();
      PostalCode postalCode0 = postAddr_Type0.getPostalCode();
      assertNull(postalCode0);
  }

  @Test
  public void test7()  throws Throwable  {
      PostAddr_Type postAddr_Type0 = new PostAddr_Type();
      Addr1 addr1_0 = postAddr_Type0.getAddr1();
      assertNull(addr1_0);
  }

  @Test
  public void test8()  throws Throwable  {
      PostAddr_Type postAddr_Type0 = new PostAddr_Type();
      Country country0 = postAddr_Type0.getCountry();
      assertNull(country0);
  }

  @Test
  public void test9()  throws Throwable  {
      PostAddr_Type postAddr_Type0 = new PostAddr_Type();
      postAddr_Type0.setStateProv((StateProv) null);
      assertEquals("org.sourceforge.ifx.framework.remit.complextype.PostAddr_Type = {\n  Country = NULL\n  Addr1 = NULL\n  Addr2 = NULL\n  Addr3 = NULL\n  Addr4 = NULL\n  City = NULL\n  StateProv = NULL\n  PostalCode = NULL\n  AddrType = NULL\n  StartDt = NULL\n  EndDt = NULL\n}", postAddr_Type0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      PostAddr_Type postAddr_Type0 = new PostAddr_Type();
      PostalCode postalCode0 = new PostalCode();
      postAddr_Type0.setPostalCode(postalCode0);
      assertNull(postalCode0.getString());
  }

  @Test
  public void test11()  throws Throwable  {
      PostAddr_Type postAddr_Type0 = new PostAddr_Type();
      Country country0 = new Country();
      postAddr_Type0.setCountry(country0);
      assertEquals("org.sourceforge.ifx.framework.element.Country = {\n  String = NULL\n}", country0.toString());
  }

  @Test
  public void test12()  throws Throwable  {
      PostAddr_Type postAddr_Type0 = new PostAddr_Type();
      EndDt endDt0 = new EndDt();
      postAddr_Type0.setEndDt(endDt0);
      assertEquals("org.sourceforge.ifx.framework.element.EndDt = {\n  String = NULL\n}", endDt0.toString());
  }

  @Test
  public void test13()  throws Throwable  {
      PostAddr_Type postAddr_Type0 = new PostAddr_Type();
      postAddr_Type0.setStartDt((StartDt) null);
      assertEquals("org.sourceforge.ifx.framework.remit.complextype.PostAddr_Type = {\n  Country = NULL\n  Addr1 = NULL\n  Addr2 = NULL\n  Addr3 = NULL\n  Addr4 = NULL\n  City = NULL\n  StateProv = NULL\n  PostalCode = NULL\n  AddrType = NULL\n  StartDt = NULL\n  EndDt = NULL\n}", postAddr_Type0.toString());
  }

  @Test
  public void test14()  throws Throwable  {
      PostAddr_Type postAddr_Type0 = new PostAddr_Type();
      postAddr_Type0.setAddr4((Addr4) null);
      assertEquals("org.sourceforge.ifx.framework.remit.complextype.PostAddr_Type = {\n  Country = NULL\n  Addr1 = NULL\n  Addr2 = NULL\n  Addr3 = NULL\n  Addr4 = NULL\n  City = NULL\n  StateProv = NULL\n  PostalCode = NULL\n  AddrType = NULL\n  StartDt = NULL\n  EndDt = NULL\n}", postAddr_Type0.toString());
  }

  @Test
  public void test15()  throws Throwable  {
      PostAddr_Type postAddr_Type0 = new PostAddr_Type();
      postAddr_Type0.setAddrType((AddrType) null);
      assertEquals("org.sourceforge.ifx.framework.remit.complextype.PostAddr_Type = {\n  Country = NULL\n  Addr1 = NULL\n  Addr2 = NULL\n  Addr3 = NULL\n  Addr4 = NULL\n  City = NULL\n  StateProv = NULL\n  PostalCode = NULL\n  AddrType = NULL\n  StartDt = NULL\n  EndDt = NULL\n}", postAddr_Type0.toString());
  }

  @Test
  public void test16()  throws Throwable  {
      PostAddr_Type postAddr_Type0 = new PostAddr_Type();
      Addr3 addr3_0 = new Addr3();
      postAddr_Type0.setAddr3(addr3_0);
      assertEquals("org.sourceforge.ifx.framework.remit.complextype.PostAddr_Type = {\n  Country = NULL\n  Addr1 = NULL\n  Addr2 = NULL\n  Addr3 = null\n  Addr4 = NULL\n  City = NULL\n  StateProv = NULL\n  PostalCode = NULL\n  AddrType = NULL\n  StartDt = NULL\n  EndDt = NULL\n}", postAddr_Type0.toString());
  }

  @Test
  public void test17()  throws Throwable  {
      PostAddr_Type postAddr_Type0 = new PostAddr_Type();
      StateProv stateProv0 = postAddr_Type0.getStateProv();
      assertNull(stateProv0);
  }

  @Test
  public void test18()  throws Throwable  {
      PostAddr_Type postAddr_Type0 = new PostAddr_Type();
      postAddr_Type0.setAddr2((Addr2) null);
      assertEquals("org.sourceforge.ifx.framework.remit.complextype.PostAddr_Type = {\n  Country = NULL\n  Addr1 = NULL\n  Addr2 = NULL\n  Addr3 = NULL\n  Addr4 = NULL\n  City = NULL\n  StateProv = NULL\n  PostalCode = NULL\n  AddrType = NULL\n  StartDt = NULL\n  EndDt = NULL\n}", postAddr_Type0.toString());
  }

  @Test
  public void test19()  throws Throwable  {
      PostAddr_Type postAddr_Type0 = new PostAddr_Type();
      Addr4 addr4_0 = postAddr_Type0.getAddr4();
      assertNull(addr4_0);
  }

  @Test
  public void test20()  throws Throwable  {
      PostAddr_Type postAddr_Type0 = new PostAddr_Type();
      Addr2 addr2_0 = postAddr_Type0.getAddr2();
      assertNull(addr2_0);
  }

  @Test
  public void test21()  throws Throwable  {
      PostAddr_Type postAddr_Type0 = new PostAddr_Type();
      EndDt endDt0 = postAddr_Type0.getEndDt();
      assertNull(endDt0);
  }

  @Test
  public void test22()  throws Throwable  {
      PostAddr_Type postAddr_Type0 = new PostAddr_Type();
      City city0 = postAddr_Type0.getCity();
      assertNull(city0);
  }
}
