/*
 * This file was automatically generated by EvoSuite
 */

package org.sourceforge.ifx.framework.complextype;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.sourceforge.ifx.framework.complextype.BalRevRq_Type;
import org.sourceforge.ifx.framework.element.AsyncRqUID;
import org.sourceforge.ifx.framework.element.BalMsgRqInfo;
import org.sourceforge.ifx.framework.element.CustId;
import org.sourceforge.ifx.framework.element.Desc;
import org.sourceforge.ifx.framework.element.MsgRqHdr;
import org.sourceforge.ifx.framework.element.RevReasonCode;
import org.sourceforge.ifx.framework.element.RqUID;
import org.sourceforge.ifx.framework.element.TerminalId;

@RunWith(EvoSuiteRunner.class)
public class BalRevRq_TypeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BalRevRq_Type balRevRq_Type0 = new BalRevRq_Type();
      AsyncRqUID asyncRqUID0 = new AsyncRqUID();
      balRevRq_Type0.setAsyncRqUID(asyncRqUID0);
      assertEquals("org.sourceforge.ifx.framework.complextype.BalRevRq_Type = {\n  Desc = NULL\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = null\n  CustId = NULL\n  TerminalId = NULL\n  RevReasonCode = NULL\n  BalMsgRqInfo = NULL\n}", balRevRq_Type0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      BalRevRq_Type balRevRq_Type0 = new BalRevRq_Type();
      AsyncRqUID asyncRqUID0 = balRevRq_Type0.getAsyncRqUID();
      assertNull(asyncRqUID0);
  }

  @Test
  public void test2()  throws Throwable  {
      BalRevRq_Type balRevRq_Type0 = new BalRevRq_Type();
      balRevRq_Type0.setCustId((CustId) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.BalRevRq_Type = {\n  Desc = NULL\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  TerminalId = NULL\n  RevReasonCode = NULL\n  BalMsgRqInfo = NULL\n}", balRevRq_Type0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      BalRevRq_Type balRevRq_Type0 = new BalRevRq_Type();
      Desc desc0 = balRevRq_Type0.getDesc();
      assertNull(desc0);
  }

  @Test
  public void test4()  throws Throwable  {
      BalRevRq_Type balRevRq_Type0 = new BalRevRq_Type();
      TerminalId terminalId0 = new TerminalId();
      balRevRq_Type0.setTerminalId(terminalId0);
      assertEquals("org.sourceforge.ifx.framework.complextype.BalRevRq_Type = {\n  Desc = NULL\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  TerminalId = null\n  RevReasonCode = NULL\n  BalMsgRqInfo = NULL\n}", balRevRq_Type0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      BalRevRq_Type balRevRq_Type0 = new BalRevRq_Type();
      balRevRq_Type0.setMsgRqHdr((MsgRqHdr) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.BalRevRq_Type = {\n  Desc = NULL\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  TerminalId = NULL\n  RevReasonCode = NULL\n  BalMsgRqInfo = NULL\n}", balRevRq_Type0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      BalRevRq_Type balRevRq_Type0 = new BalRevRq_Type();
      RevReasonCode revReasonCode0 = balRevRq_Type0.getRevReasonCode();
      assertNull(revReasonCode0);
  }

  @Test
  public void test7()  throws Throwable  {
      BalRevRq_Type balRevRq_Type0 = new BalRevRq_Type();
      Desc desc0 = new Desc();
      balRevRq_Type0.setDesc(desc0);
      assertNull(desc0.getString());
  }

  @Test
  public void test8()  throws Throwable  {
      BalRevRq_Type balRevRq_Type0 = new BalRevRq_Type();
      balRevRq_Type0.setRqUID((RqUID) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.BalRevRq_Type = {\n  Desc = NULL\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  TerminalId = NULL\n  RevReasonCode = NULL\n  BalMsgRqInfo = NULL\n}", balRevRq_Type0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      BalRevRq_Type balRevRq_Type0 = new BalRevRq_Type();
      MsgRqHdr msgRqHdr0 = balRevRq_Type0.getMsgRqHdr();
      assertNull(msgRqHdr0);
  }

  @Test
  public void test10()  throws Throwable  {
      BalRevRq_Type balRevRq_Type0 = new BalRevRq_Type();
      RevReasonCode revReasonCode0 = new RevReasonCode();
      balRevRq_Type0.setRevReasonCode(revReasonCode0);
      assertEquals("org.sourceforge.ifx.framework.complextype.BalRevRq_Type = {\n  Desc = NULL\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  TerminalId = NULL\n  RevReasonCode = null\n  BalMsgRqInfo = NULL\n}", balRevRq_Type0.toString());
  }

  @Test
  public void test11()  throws Throwable  {
      BalRevRq_Type balRevRq_Type0 = new BalRevRq_Type();
      balRevRq_Type0.setBalMsgRqInfo((BalMsgRqInfo) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.BalRevRq_Type = {\n  Desc = NULL\n  RqUID = NULL\n  MsgRqHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  TerminalId = NULL\n  RevReasonCode = NULL\n  BalMsgRqInfo = NULL\n}", balRevRq_Type0.toString());
  }

  @Test
  public void test12()  throws Throwable  {
      BalRevRq_Type balRevRq_Type0 = new BalRevRq_Type();
      boolean boolean0 = balRevRq_Type0.equals((Object) "org.sourceforge.ifx.framework.element.AmtX = {\n  CurCode = NULL\n  Amt = NULL\n  CurRate = NULL\n  CurConvertRule = NULL\n}");
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      BalRevRq_Type balRevRq_Type0 = new BalRevRq_Type();
      RqUID rqUID0 = balRevRq_Type0.getRqUID();
      assertNull(rqUID0);
  }

  @Test
  public void test14()  throws Throwable  {
      BalRevRq_Type balRevRq_Type0 = new BalRevRq_Type();
      CustId custId0 = balRevRq_Type0.getCustId();
      assertNull(custId0);
  }

  @Test
  public void test15()  throws Throwable  {
      BalRevRq_Type balRevRq_Type0 = new BalRevRq_Type();
      TerminalId terminalId0 = balRevRq_Type0.getTerminalId();
      assertNull(terminalId0);
  }

  @Test
  public void test16()  throws Throwable  {
      BalRevRq_Type balRevRq_Type0 = new BalRevRq_Type();
      BalMsgRqInfo balMsgRqInfo0 = balRevRq_Type0.getBalMsgRqInfo();
      assertNull(balMsgRqInfo0);
  }
}
