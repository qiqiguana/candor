/*
 * This file was automatically generated by EvoSuite
 */

package org.sourceforge.ifx.framework.complextype;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.sourceforge.ifx.framework.complextype.Fee_Type;
import org.sourceforge.ifx.framework.element.CurAmt;
import org.sourceforge.ifx.framework.element.FeeType;
import org.sourceforge.ifx.framework.element.MaxCurAmt;
import org.sourceforge.ifx.framework.element.MinCurAmt;
import org.sourceforge.ifx.framework.element.Rate;

@RunWith(EvoSuiteRunner.class)
public class Fee_TypeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Fee_Type fee_Type0 = new Fee_Type();
      fee_Type0.setMinCurAmt((MinCurAmt) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.Fee_Type = {\n  FeeType = NULL\n  CurAmt = NULL\n  Rate = NULL\n  MinCurAmt = NULL\n  MaxCurAmt = NULL\n}", fee_Type0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      Fee_Type fee_Type0 = new Fee_Type();
      boolean boolean0 = fee_Type0.equals((Object) "org.sourceforge.ifx.framework.element.CurConvertRule = {\n  String = NULL\n}");
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      Fee_Type fee_Type0 = new Fee_Type();
      fee_Type0.setRate((Rate) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.Fee_Type = {\n  FeeType = NULL\n  CurAmt = NULL\n  Rate = NULL\n  MinCurAmt = NULL\n  MaxCurAmt = NULL\n}", fee_Type0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      Fee_Type fee_Type0 = new Fee_Type();
      MaxCurAmt maxCurAmt0 = fee_Type0.getMaxCurAmt();
      fee_Type0.setMaxCurAmt(maxCurAmt0);
      assertEquals("org.sourceforge.ifx.framework.complextype.Fee_Type = {\n  FeeType = NULL\n  CurAmt = NULL\n  Rate = NULL\n  MinCurAmt = NULL\n  MaxCurAmt = NULL\n}", fee_Type0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      Fee_Type fee_Type0 = new Fee_Type();
      fee_Type0.setFeeType((FeeType) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.Fee_Type = {\n  FeeType = NULL\n  CurAmt = NULL\n  Rate = NULL\n  MinCurAmt = NULL\n  MaxCurAmt = NULL\n}", fee_Type0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      Fee_Type fee_Type0 = new Fee_Type();
      fee_Type0.setCurAmt((CurAmt) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.Fee_Type = {\n  FeeType = NULL\n  CurAmt = NULL\n  Rate = NULL\n  MinCurAmt = NULL\n  MaxCurAmt = NULL\n}", fee_Type0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      Fee_Type fee_Type0 = new Fee_Type();
      String string0 = fee_Type0.toString();
      assertEquals("org.sourceforge.ifx.framework.complextype.Fee_Type = {\n  FeeType = NULL\n  CurAmt = NULL\n  Rate = NULL\n  MinCurAmt = NULL\n  MaxCurAmt = NULL\n}", string0);
  }
}
