/*
 * This file was automatically generated by EvoSuite
 */

package org.sourceforge.ifx.framework.complextype;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.sourceforge.ifx.framework.complextype.XferAddRs_Type;
import org.sourceforge.ifx.framework.element.AsyncRqUID;
import org.sourceforge.ifx.framework.element.CSPRefId;
import org.sourceforge.ifx.framework.element.CustId;
import org.sourceforge.ifx.framework.element.DupChkOverride;
import org.sourceforge.ifx.framework.element.MsgRqHdr;
import org.sourceforge.ifx.framework.element.MsgRsHdr;
import org.sourceforge.ifx.framework.element.RqUID;
import org.sourceforge.ifx.framework.element.SPRefId;
import org.sourceforge.ifx.framework.element.Status;
import org.sourceforge.ifx.framework.element.XferInfo;
import org.sourceforge.ifx.framework.element.XferRec;

@RunWith(EvoSuiteRunner.class)
public class XferAddRs_TypeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      XferAddRs_Type xferAddRs_Type0 = new XferAddRs_Type();
      String string0 = xferAddRs_Type0.toString();
      assertEquals("org.sourceforge.ifx.framework.complextype.XferAddRs_Type = {\n  Status = NULL\n  RqUID = NULL\n  MsgRqHdr = NULL\n  MsgRsHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  XferInfo = NULL\n  DupChkOverride = NULL\n  XferRec = NULL\n  CSPRefId = NULL\n  SPRefId = NULL\n}", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      XferAddRs_Type xferAddRs_Type0 = new XferAddRs_Type();
      xferAddRs_Type0.setXferRec((XferRec) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.XferAddRs_Type = {\n  Status = NULL\n  RqUID = NULL\n  MsgRqHdr = NULL\n  MsgRsHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  XferInfo = NULL\n  DupChkOverride = NULL\n  XferRec = NULL\n  CSPRefId = NULL\n  SPRefId = NULL\n}", xferAddRs_Type0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      XferAddRs_Type xferAddRs_Type0 = new XferAddRs_Type();
      xferAddRs_Type0.setStatus((Status) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.XferAddRs_Type = {\n  Status = NULL\n  RqUID = NULL\n  MsgRqHdr = NULL\n  MsgRsHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  XferInfo = NULL\n  DupChkOverride = NULL\n  XferRec = NULL\n  CSPRefId = NULL\n  SPRefId = NULL\n}", xferAddRs_Type0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      XferAddRs_Type xferAddRs_Type0 = new XferAddRs_Type();
      xferAddRs_Type0.setAsyncRqUID((AsyncRqUID) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.XferAddRs_Type = {\n  Status = NULL\n  RqUID = NULL\n  MsgRqHdr = NULL\n  MsgRsHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  XferInfo = NULL\n  DupChkOverride = NULL\n  XferRec = NULL\n  CSPRefId = NULL\n  SPRefId = NULL\n}", xferAddRs_Type0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      XferAddRs_Type xferAddRs_Type0 = new XferAddRs_Type();
      xferAddRs_Type0.setCustId((CustId) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.XferAddRs_Type = {\n  Status = NULL\n  RqUID = NULL\n  MsgRqHdr = NULL\n  MsgRsHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  XferInfo = NULL\n  DupChkOverride = NULL\n  XferRec = NULL\n  CSPRefId = NULL\n  SPRefId = NULL\n}", xferAddRs_Type0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      XferAddRs_Type xferAddRs_Type0 = new XferAddRs_Type();
      CSPRefId cSPRefId0 = new CSPRefId();
      xferAddRs_Type0.setCSPRefId(cSPRefId0);
      assertEquals("org.sourceforge.ifx.framework.complextype.XferAddRs_Type = {\n  Status = NULL\n  RqUID = NULL\n  MsgRqHdr = NULL\n  MsgRsHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  XferInfo = NULL\n  DupChkOverride = NULL\n  XferRec = NULL\n  CSPRefId = null\n  SPRefId = NULL\n}", xferAddRs_Type0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      XferAddRs_Type xferAddRs_Type0 = new XferAddRs_Type();
      SPRefId sPRefId0 = new SPRefId();
      xferAddRs_Type0.setSPRefId(sPRefId0);
      assertEquals("org.sourceforge.ifx.framework.complextype.XferAddRs_Type = {\n  Status = NULL\n  RqUID = NULL\n  MsgRqHdr = NULL\n  MsgRsHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  XferInfo = NULL\n  DupChkOverride = NULL\n  XferRec = NULL\n  CSPRefId = NULL\n  SPRefId = null\n}", xferAddRs_Type0.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      XferAddRs_Type xferAddRs_Type0 = new XferAddRs_Type();
      MsgRsHdr msgRsHdr0 = new MsgRsHdr();
      xferAddRs_Type0.setMsgRsHdr(msgRsHdr0);
      assertEquals("org.sourceforge.ifx.framework.element.MsgRsHdr = {\n  MsgAuthCode = NULL\n  EMVRsData = NULL\n  ServerTerminalSeqId = NULL\n}", msgRsHdr0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      XferAddRs_Type xferAddRs_Type0 = new XferAddRs_Type();
      XferInfo xferInfo0 = new XferInfo();
      xferAddRs_Type0.setXferInfo(xferInfo0);
      assertEquals("org.sourceforge.ifx.framework.element.XferInfo = {\n  DepAcctIdFrom = NULL\n  CardAcctIdFrom = NULL\n  LoanAcctIdFrom = NULL\n  DepAcctIdTo = NULL\n  CardAcctIdTo = NULL\n  LoanAcctIdTo = NULL\n  CurAmt = NULL\n  DueDt = NULL\n  Category = NULL\n  ImmediateXfer = NULL\n  ForExRateInfo = NULL\n  ForExDealId = NULL\n  RefInfo = NULL\n  BaseEnvr = NULL\n}", xferInfo0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      XferAddRs_Type xferAddRs_Type0 = new XferAddRs_Type();
      xferAddRs_Type0.setDupChkOverride((DupChkOverride) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.XferAddRs_Type = {\n  Status = NULL\n  RqUID = NULL\n  MsgRqHdr = NULL\n  MsgRsHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  XferInfo = NULL\n  DupChkOverride = NULL\n  XferRec = NULL\n  CSPRefId = NULL\n  SPRefId = NULL\n}", xferAddRs_Type0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      XferAddRs_Type xferAddRs_Type0 = new XferAddRs_Type();
      boolean boolean0 = xferAddRs_Type0.equals((Object) "org.sourceforge.ifx.framework.element.AdditionalStatus = {\n  StatusCode = NULL\n  ServerStatusCode = NULL\n  Severity = NULL\n  StatusDesc = NULL\n}");
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      XferAddRs_Type xferAddRs_Type0 = new XferAddRs_Type();
      RqUID rqUID0 = new RqUID();
      xferAddRs_Type0.setRqUID(rqUID0);
      assertEquals("org.sourceforge.ifx.framework.complextype.XferAddRs_Type = {\n  Status = NULL\n  RqUID = null\n  MsgRqHdr = NULL\n  MsgRsHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  XferInfo = NULL\n  DupChkOverride = NULL\n  XferRec = NULL\n  CSPRefId = NULL\n  SPRefId = NULL\n}", xferAddRs_Type0.toString());
  }

  @Test
  public void test12()  throws Throwable  {
      XferAddRs_Type xferAddRs_Type0 = new XferAddRs_Type();
      xferAddRs_Type0.setMsgRqHdr((MsgRqHdr) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.XferAddRs_Type = {\n  Status = NULL\n  RqUID = NULL\n  MsgRqHdr = NULL\n  MsgRsHdr = NULL\n  AsyncRqUID = NULL\n  CustId = NULL\n  XferInfo = NULL\n  DupChkOverride = NULL\n  XferRec = NULL\n  CSPRefId = NULL\n  SPRefId = NULL\n}", xferAddRs_Type0.toString());
  }
}
