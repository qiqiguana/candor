/*
 * This file was automatically generated by EvoSuite
 */

package org.sourceforge.ifx.framework.complextype;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.sourceforge.ifx.framework.complextype.PassbkInfo_Type;
import org.sourceforge.ifx.framework.element.BaseEnvr;
import org.sourceforge.ifx.framework.element.CardAcctId;
import org.sourceforge.ifx.framework.element.ClientChgCode;
import org.sourceforge.ifx.framework.element.DepAcctId;
import org.sourceforge.ifx.framework.element.LoanAcctId;
import org.sourceforge.ifx.framework.element.Name;
import org.sourceforge.ifx.framework.element.PassbkFormat;
import org.sourceforge.ifx.framework.element.PassbkLastBalPrinted;
import org.sourceforge.ifx.framework.element.PassbkLastItemPrinted;
import org.sourceforge.ifx.framework.element.PassbkLinesPerPage;
import org.sourceforge.ifx.framework.element.PassbkNextLine;
import org.sourceforge.ifx.framework.element.PassbkNextPage;
import org.sourceforge.ifx.framework.element.PassbkPagesPerBook;

@RunWith(EvoSuiteRunner.class)
public class PassbkInfo_TypeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PassbkInfo_Type passbkInfo_Type0 = new PassbkInfo_Type();
      PassbkLinesPerPage passbkLinesPerPage0 = new PassbkLinesPerPage();
      passbkInfo_Type0.setPassbkLinesPerPage(passbkLinesPerPage0);
      assertEquals("org.sourceforge.ifx.framework.element.PassbkLinesPerPage = {\n  String = Exception! java.lang.reflect.InvocationTargetException\n}", passbkLinesPerPage0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      PassbkInfo_Type passbkInfo_Type0 = new PassbkInfo_Type();
      String string0 = passbkInfo_Type0.toString();
      assertEquals("org.sourceforge.ifx.framework.complextype.PassbkInfo_Type = {\n  Name = NULL\n  DepAcctId = NULL\n  CardAcctId = NULL\n  LoanAcctId = NULL\n  PassbkLastItemPrinted = NULL\n  PassbkLastBalPrinted = NULL\n  PassbkNextLine = NULL\n  PassbkNextPage = NULL\n  PassbkFormat = NULL\n  PassbkLinesPerPage = NULL\n  PassbkPagesPerBook = NULL\n  ClientChgCode = NULL\n  BaseEnvr = NULL\n}", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      PassbkInfo_Type passbkInfo_Type0 = new PassbkInfo_Type();
      passbkInfo_Type0.setPassbkLastBalPrinted((PassbkLastBalPrinted) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.PassbkInfo_Type = {\n  Name = NULL\n  DepAcctId = NULL\n  CardAcctId = NULL\n  LoanAcctId = NULL\n  PassbkLastItemPrinted = NULL\n  PassbkLastBalPrinted = NULL\n  PassbkNextLine = NULL\n  PassbkNextPage = NULL\n  PassbkFormat = NULL\n  PassbkLinesPerPage = NULL\n  PassbkPagesPerBook = NULL\n  ClientChgCode = NULL\n  BaseEnvr = NULL\n}", passbkInfo_Type0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      PassbkInfo_Type passbkInfo_Type0 = new PassbkInfo_Type();
      passbkInfo_Type0.setLoanAcctId((LoanAcctId) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.PassbkInfo_Type = {\n  Name = NULL\n  DepAcctId = NULL\n  CardAcctId = NULL\n  LoanAcctId = NULL\n  PassbkLastItemPrinted = NULL\n  PassbkLastBalPrinted = NULL\n  PassbkNextLine = NULL\n  PassbkNextPage = NULL\n  PassbkFormat = NULL\n  PassbkLinesPerPage = NULL\n  PassbkPagesPerBook = NULL\n  ClientChgCode = NULL\n  BaseEnvr = NULL\n}", passbkInfo_Type0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      PassbkInfo_Type passbkInfo_Type0 = new PassbkInfo_Type();
      PassbkPagesPerBook passbkPagesPerBook0 = new PassbkPagesPerBook();
      passbkInfo_Type0.setPassbkPagesPerBook(passbkPagesPerBook0);
      assertEquals("org.sourceforge.ifx.framework.complextype.PassbkInfo_Type = {\n  Name = NULL\n  DepAcctId = NULL\n  CardAcctId = NULL\n  LoanAcctId = NULL\n  PassbkLastItemPrinted = NULL\n  PassbkLastBalPrinted = NULL\n  PassbkNextLine = NULL\n  PassbkNextPage = NULL\n  PassbkFormat = NULL\n  PassbkLinesPerPage = NULL\n  PassbkPagesPerBook = Exception! java.lang.NullPointerException\n}", passbkInfo_Type0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      PassbkInfo_Type passbkInfo_Type0 = new PassbkInfo_Type();
      passbkInfo_Type0.setBaseEnvr((BaseEnvr) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.PassbkInfo_Type = {\n  Name = NULL\n  DepAcctId = NULL\n  CardAcctId = NULL\n  LoanAcctId = NULL\n  PassbkLastItemPrinted = NULL\n  PassbkLastBalPrinted = NULL\n  PassbkNextLine = NULL\n  PassbkNextPage = NULL\n  PassbkFormat = NULL\n  PassbkLinesPerPage = NULL\n  PassbkPagesPerBook = NULL\n  ClientChgCode = NULL\n  BaseEnvr = NULL\n}", passbkInfo_Type0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      PassbkInfo_Type passbkInfo_Type0 = new PassbkInfo_Type();
      passbkInfo_Type0.setPassbkNextLine((PassbkNextLine) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.PassbkInfo_Type = {\n  Name = NULL\n  DepAcctId = NULL\n  CardAcctId = NULL\n  LoanAcctId = NULL\n  PassbkLastItemPrinted = NULL\n  PassbkLastBalPrinted = NULL\n  PassbkNextLine = NULL\n  PassbkNextPage = NULL\n  PassbkFormat = NULL\n  PassbkLinesPerPage = NULL\n  PassbkPagesPerBook = NULL\n  ClientChgCode = NULL\n  BaseEnvr = NULL\n}", passbkInfo_Type0.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      PassbkInfo_Type passbkInfo_Type0 = new PassbkInfo_Type();
      passbkInfo_Type0.setDepAcctId((DepAcctId) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.PassbkInfo_Type = {\n  Name = NULL\n  DepAcctId = NULL\n  CardAcctId = NULL\n  LoanAcctId = NULL\n  PassbkLastItemPrinted = NULL\n  PassbkLastBalPrinted = NULL\n  PassbkNextLine = NULL\n  PassbkNextPage = NULL\n  PassbkFormat = NULL\n  PassbkLinesPerPage = NULL\n  PassbkPagesPerBook = NULL\n  ClientChgCode = NULL\n  BaseEnvr = NULL\n}", passbkInfo_Type0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      PassbkInfo_Type passbkInfo_Type0 = new PassbkInfo_Type();
      passbkInfo_Type0.setClientChgCode((ClientChgCode) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.PassbkInfo_Type = {\n  Name = NULL\n  DepAcctId = NULL\n  CardAcctId = NULL\n  LoanAcctId = NULL\n  PassbkLastItemPrinted = NULL\n  PassbkLastBalPrinted = NULL\n  PassbkNextLine = NULL\n  PassbkNextPage = NULL\n  PassbkFormat = NULL\n  PassbkLinesPerPage = NULL\n  PassbkPagesPerBook = NULL\n  ClientChgCode = NULL\n  BaseEnvr = NULL\n}", passbkInfo_Type0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      PassbkInfo_Type passbkInfo_Type0 = new PassbkInfo_Type();
      boolean boolean0 = passbkInfo_Type0.equals((Object) "org.sourceforge.ifx.framework.element.CreatedDt = {\n  String = Exception! java.lang.ClassCastException: java.lang.String cannot be cast to org.sourceforge.ifx.basetypes.IFXObject\n}");
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      PassbkInfo_Type passbkInfo_Type0 = new PassbkInfo_Type();
      passbkInfo_Type0.setName((Name) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.PassbkInfo_Type = {\n  Name = NULL\n  DepAcctId = NULL\n  CardAcctId = NULL\n  LoanAcctId = NULL\n  PassbkLastItemPrinted = NULL\n  PassbkLastBalPrinted = NULL\n  PassbkNextLine = NULL\n  PassbkNextPage = NULL\n  PassbkFormat = NULL\n  PassbkLinesPerPage = NULL\n  PassbkPagesPerBook = NULL\n  ClientChgCode = NULL\n  BaseEnvr = NULL\n}", passbkInfo_Type0.toString());
  }

  @Test
  public void test11()  throws Throwable  {
      PassbkInfo_Type passbkInfo_Type0 = new PassbkInfo_Type();
      passbkInfo_Type0.setPassbkFormat((PassbkFormat) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.PassbkInfo_Type = {\n  Name = NULL\n  DepAcctId = NULL\n  CardAcctId = NULL\n  LoanAcctId = NULL\n  PassbkLastItemPrinted = NULL\n  PassbkLastBalPrinted = NULL\n  PassbkNextLine = NULL\n  PassbkNextPage = NULL\n  PassbkFormat = NULL\n  PassbkLinesPerPage = NULL\n  PassbkPagesPerBook = NULL\n  ClientChgCode = NULL\n  BaseEnvr = NULL\n}", passbkInfo_Type0.toString());
  }

  @Test
  public void test12()  throws Throwable  {
      PassbkInfo_Type passbkInfo_Type0 = new PassbkInfo_Type();
      passbkInfo_Type0.setPassbkNextPage((PassbkNextPage) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.PassbkInfo_Type = {\n  Name = NULL\n  DepAcctId = NULL\n  CardAcctId = NULL\n  LoanAcctId = NULL\n  PassbkLastItemPrinted = NULL\n  PassbkLastBalPrinted = NULL\n  PassbkNextLine = NULL\n  PassbkNextPage = NULL\n  PassbkFormat = NULL\n  PassbkLinesPerPage = NULL\n  PassbkPagesPerBook = NULL\n  ClientChgCode = NULL\n  BaseEnvr = NULL\n}", passbkInfo_Type0.toString());
  }

  @Test
  public void test13()  throws Throwable  {
      PassbkInfo_Type passbkInfo_Type0 = new PassbkInfo_Type();
      PassbkLastItemPrinted passbkLastItemPrinted0 = new PassbkLastItemPrinted();
      passbkInfo_Type0.setPassbkLastItemPrinted(passbkLastItemPrinted0);
      assertEquals("org.sourceforge.ifx.framework.complextype.PassbkInfo_Type = {\n  Name = NULL\n  DepAcctId = NULL\n  CardAcctId = NULL\n  LoanAcctId = NULL\n  PassbkLastItemPrinted = null\n  PassbkLastBalPrinted = NULL\n  PassbkNextLine = NULL\n  PassbkNextPage = NULL\n  PassbkFormat = NULL\n  PassbkLinesPerPage = NULL\n  PassbkPagesPerBook = NULL\n  ClientChgCode = NULL\n  BaseEnvr = NULL\n}", passbkInfo_Type0.toString());
  }

  @Test
  public void test14()  throws Throwable  {
      PassbkInfo_Type passbkInfo_Type0 = new PassbkInfo_Type();
      passbkInfo_Type0.setCardAcctId((CardAcctId) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.PassbkInfo_Type = {\n  Name = NULL\n  DepAcctId = NULL\n  CardAcctId = NULL\n  LoanAcctId = NULL\n  PassbkLastItemPrinted = NULL\n  PassbkLastBalPrinted = NULL\n  PassbkNextLine = NULL\n  PassbkNextPage = NULL\n  PassbkFormat = NULL\n  PassbkLinesPerPage = NULL\n  PassbkPagesPerBook = NULL\n  ClientChgCode = NULL\n  BaseEnvr = NULL\n}", passbkInfo_Type0.toString());
  }
}
