/*
 * This file was automatically generated by EvoSuite
 */

package org.sourceforge.ifx.framework.complextype;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.sourceforge.ifx.framework.complextype.RecXferRec_Type;
import org.sourceforge.ifx.framework.element.RecModelInfo;
import org.sourceforge.ifx.framework.element.RecXferId;
import org.sourceforge.ifx.framework.element.RemainingInsts;
import org.sourceforge.ifx.framework.element.XferInfo;

@RunWith(EvoSuiteRunner.class)
public class RecXferRec_TypeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RecXferRec_Type recXferRec_Type0 = new RecXferRec_Type();
      boolean boolean0 = recXferRec_Type0.equals((Object) "org.sourceforge.ifx.framework.element.OriginatorType = {\n  String = Exception! java.lang.reflect.InvocationTargetException\n}");
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      RecXferRec_Type recXferRec_Type0 = new RecXferRec_Type();
      XferInfo xferInfo0 = new XferInfo();
      recXferRec_Type0.setXferInfo(xferInfo0);
      assertEquals("org.sourceforge.ifx.framework.complextype.RecXferRec_Type = {\n  RecXferId = NULL\n  XferInfo = org.sourceforge.ifx.framework.element.XferInfo = {\n    DepAcctIdFrom = NULL\n    CardAcctIdFrom = NULL\n    LoanAcctIdFrom = NULL\n    DepAcctIdTo = NULL\n    CardAcctIdTo = NULL\n    LoanAcctIdTo = NULL\n    CurAmt = NULL\n    DueDt = NULL\n    Category = NULL\n    ImmediateXfer = NULL\n    ForExRateInfo = NULL\n    ForExDealId = NULL\n    RefInfo = NULL\n    BaseEnvr = NULL\n  }\n  RecModelInfo = NULL\n  RemainingInsts = NULL\n}", recXferRec_Type0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      RecXferRec_Type recXferRec_Type0 = new RecXferRec_Type();
      RemainingInsts remainingInsts0 = recXferRec_Type0.getRemainingInsts();
      assertNull(remainingInsts0);
  }

  @Test
  public void test3()  throws Throwable  {
      RecXferRec_Type recXferRec_Type0 = new RecXferRec_Type();
      recXferRec_Type0.setRecXferId((RecXferId) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.RecXferRec_Type = {\n  RecXferId = NULL\n  XferInfo = NULL\n  RecModelInfo = NULL\n  RemainingInsts = NULL\n}", recXferRec_Type0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      RecXferRec_Type recXferRec_Type0 = new RecXferRec_Type();
      recXferRec_Type0.setRemainingInsts((RemainingInsts) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.RecXferRec_Type = {\n  RecXferId = NULL\n  XferInfo = NULL\n  RecModelInfo = NULL\n  RemainingInsts = NULL\n}", recXferRec_Type0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      RecXferRec_Type recXferRec_Type0 = new RecXferRec_Type();
      RecXferId recXferId0 = recXferRec_Type0.getRecXferId();
      assertNull(recXferId0);
  }

  @Test
  public void test6()  throws Throwable  {
      RecXferRec_Type recXferRec_Type0 = new RecXferRec_Type();
      XferInfo xferInfo0 = recXferRec_Type0.getXferInfo();
      assertNull(xferInfo0);
  }

  @Test
  public void test7()  throws Throwable  {
      RecXferRec_Type recXferRec_Type0 = new RecXferRec_Type();
      recXferRec_Type0.setRecModelInfo((RecModelInfo) null);
      assertEquals("org.sourceforge.ifx.framework.complextype.RecXferRec_Type = {\n  RecXferId = NULL\n  XferInfo = NULL\n  RecModelInfo = NULL\n  RemainingInsts = NULL\n}", recXferRec_Type0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      RecXferRec_Type recXferRec_Type0 = new RecXferRec_Type();
      RecModelInfo recModelInfo0 = recXferRec_Type0.getRecModelInfo();
      assertNull(recModelInfo0);
  }
}
