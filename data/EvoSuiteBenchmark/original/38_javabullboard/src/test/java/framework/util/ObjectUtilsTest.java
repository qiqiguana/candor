package framework.util;

import junit.framework.TestCase;
// JUnitDoclet begin import
import framework.util.ObjectUtils;
// JUnitDoclet end import

/**
* Generated by JUnitDoclet, a tool provided by
* ObjectFab GmbH under LGPL.
* Please see www.junitdoclet.org, www.gnu.org
* and www.objectfab.de for informations about
* the tool, the licence and the authors.
*/


public class ObjectUtilsTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
  // JUnitDoclet begin class
  framework.util.ObjectUtils objectutils = null;
  // JUnitDoclet end class
  
  public ObjectUtilsTest(String name) {
    // JUnitDoclet begin method ObjectUtilsTest
    super(name);
    // JUnitDoclet end method ObjectUtilsTest
  }
  
  public framework.util.ObjectUtils createInstance() throws Exception {
    // JUnitDoclet begin method testcase.createInstance
    return new framework.util.ObjectUtils();
    // JUnitDoclet end method testcase.createInstance
  }
  
  protected void setUp() throws Exception {
    // JUnitDoclet begin method testcase.setUp
    super.setUp();
    objectutils = createInstance();
    // JUnitDoclet end method testcase.setUp
  }
  
  protected void tearDown() throws Exception {
    // JUnitDoclet begin method testcase.tearDown
    objectutils = null;
    super.tearDown();
    // JUnitDoclet end method testcase.tearDown
  }
  
  public void testGetClassName() throws Exception {
    // JUnitDoclet begin method getClassName
    // JUnitDoclet end method getClassName
  }
  
  public void testIsClassName() throws Exception {
    // JUnitDoclet begin method isClassName
    // JUnitDoclet end method isClassName
  }
  
  public void testForName() throws Exception {
    // JUnitDoclet begin method forName
    // JUnitDoclet end method forName
  }
  
  public void testGetFullDirectory() throws Exception {
    // JUnitDoclet begin method getFullDirectory
    // JUnitDoclet end method getFullDirectory
  }
  
  public void testCopyProperties() throws Exception {
    // JUnitDoclet begin method copyProperties
    // JUnitDoclet end method copyProperties
  }
  
  public void testValuesAreDifferent() throws Exception {
    // JUnitDoclet begin method valuesAreDifferent
    // JUnitDoclet end method valuesAreDifferent
  }
  
  public void testIsPrimitive() throws Exception {
    // JUnitDoclet begin method isPrimitive
    // JUnitDoclet end method isPrimitive
  }
  
  public void testIsMatching() throws Exception {
    // JUnitDoclet begin method isMatching
    // JUnitDoclet end method isMatching
  }
  
  public void testToCollection() throws Exception {
    // JUnitDoclet begin method toCollection
    // JUnitDoclet end method toCollection
  }
  
  public void testGetTargetClass() throws Exception {
    // JUnitDoclet begin method getTargetClass
    // JUnitDoclet end method getTargetClass
  }
  
  
  
  /**
  * JUnitDoclet moves marker to this method, if there is not match
  * for them in the regenerated code and if the marker is not empty.
  * This way, no test gets lost when regenerating after renaming.
  * Method testVault is supposed to be empty.
  */
  public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
  }
  
  public static void main(String[] args) {
    // JUnitDoclet begin method testcase.main
    junit.textui.TestRunner.run(ObjectUtilsTest.class);
    // JUnitDoclet end method testcase.main
  }
}
