package framework.util;

import junit.framework.TestCase;
// JUnitDoclet begin import
import framework.util.StringUtils;
// JUnitDoclet end import

/**
* Generated by JUnitDoclet, a tool provided by
* ObjectFab GmbH under LGPL.
* Please see www.junitdoclet.org, www.gnu.org
* and www.objectfab.de for informations about
* the tool, the licence and the authors.
*/


public class StringUtilsTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
  // JUnitDoclet begin class
  framework.util.StringUtils stringutils = null;
  // JUnitDoclet end class
  
  public StringUtilsTest(String name) {
    // JUnitDoclet begin method StringUtilsTest
    super(name);
    // JUnitDoclet end method StringUtilsTest
  }
  
  public framework.util.StringUtils createInstance() throws Exception {
    // JUnitDoclet begin method testcase.createInstance
    return new framework.util.StringUtils();
    // JUnitDoclet end method testcase.createInstance
  }
  
  protected void setUp() throws Exception {
    // JUnitDoclet begin method testcase.setUp
    super.setUp();
    stringutils = createInstance();
    // JUnitDoclet end method testcase.setUp
  }
  
  protected void tearDown() throws Exception {
    // JUnitDoclet begin method testcase.tearDown
    stringutils = null;
    super.tearDown();
    // JUnitDoclet end method testcase.tearDown
  }
  
  public void testGetKeywordPath() throws Exception {
    // JUnitDoclet begin method getKeywordPath
    // JUnitDoclet end method getKeywordPath
  }
  
  public void testGetKeywordDirectory() throws Exception {
    // JUnitDoclet begin method getKeywordDirectory
    // JUnitDoclet end method getKeywordDirectory
  }
  
  public void testGetKeywordFileExtension() throws Exception {
    // JUnitDoclet begin method getKeywordFileExtension
    // JUnitDoclet end method getKeywordFileExtension
  }
  
  public void testGetKeywords() throws Exception {
    // JUnitDoclet begin method getKeywords
    // JUnitDoclet end method getKeywords
  }
  
  public void testPrettyPrint() throws Exception {
    // JUnitDoclet begin method prettyPrint
    // JUnitDoclet end method prettyPrint
  }
  
  public void testIsWhitespace() throws Exception {
    // JUnitDoclet begin method isWhitespace
    // JUnitDoclet end method isWhitespace
  }
  
  public void testIsPositiveInteger() throws Exception {
    // JUnitDoclet begin method isPositiveInteger
    // JUnitDoclet end method isPositiveInteger
  }
  
  public void testIsPositiveFloat() throws Exception {
    // JUnitDoclet begin method isPositiveFloat
    // JUnitDoclet end method isPositiveFloat
  }
  
  public void testIsInteger() throws Exception {
    // JUnitDoclet begin method isInteger
    // JUnitDoclet end method isInteger
  }
  
  public void testIsFloat() throws Exception {
    // JUnitDoclet begin method isFloat
    // JUnitDoclet end method isFloat
  }
  
  public void testIsEmail() throws Exception {
    // JUnitDoclet begin method isEmail
    // JUnitDoclet end method isEmail
  }
  
  public void testIsBoolean() throws Exception {
    // JUnitDoclet begin method isBoolean
    // JUnitDoclet end method isBoolean
  }
  
  public void testMatchPattern() throws Exception {
    // JUnitDoclet begin method matchPattern
    // JUnitDoclet end method matchPattern
  }
  
  public void testStringArrayToList() throws Exception {
    // JUnitDoclet begin method stringArrayToList
    // JUnitDoclet end method stringArrayToList
  }
  
  public void testListToStringArray() throws Exception {
    // JUnitDoclet begin method listToStringArray
    // JUnitDoclet end method listToStringArray
  }
  
  public void testStringToList() throws Exception {
    // JUnitDoclet begin method stringToList
    // JUnitDoclet end method stringToList
  }
  
  public void testStringToStringArray() throws Exception {
    // JUnitDoclet begin method stringToStringArray
    // JUnitDoclet end method stringToStringArray
  }
  
  public void testTrimEmptyToNull() throws Exception {
    // JUnitDoclet begin method trimEmptyToNull
    // JUnitDoclet end method trimEmptyToNull
  }
  
  public void testReplacePattern() throws Exception {
    // JUnitDoclet begin method replacePattern
    // JUnitDoclet end method replacePattern
  }
  
  public void testReplace() throws Exception {
    // JUnitDoclet begin method replace
    // JUnitDoclet end method replace
  }
  
  public void testInitCap() throws Exception {
    // JUnitDoclet begin method initCap
    // JUnitDoclet end method initCap
  }
  
  public void testExists() throws Exception {
    // JUnitDoclet begin method exists
    // JUnitDoclet end method exists
  }
  
  public void testValueOf() throws Exception {
    // JUnitDoclet begin method valueOf
    // JUnitDoclet end method valueOf
  }
  
  public void testToUpperFirstChar() throws Exception {
    // JUnitDoclet begin method toUpperFirstChar
    // JUnitDoclet end method toUpperFirstChar
  }
  
  public void testGetJavaName() throws Exception {
    // JUnitDoclet begin method getJavaName
    // JUnitDoclet end method getJavaName
  }
  
  public void testIsJavaName() throws Exception {
    // JUnitDoclet begin method isJavaName
    // JUnitDoclet end method isJavaName
  }
  
  public void testIsJavaPackageName() throws Exception {
    // JUnitDoclet begin method isJavaPackageName
    // JUnitDoclet end method isJavaPackageName
  }
  
  public void testReplaceTokens() throws Exception {
    // JUnitDoclet begin method replaceTokens
    // JUnitDoclet end method replaceTokens
  }
  
  public void testRemoveWhitespaces() throws Exception {
    // JUnitDoclet begin method removeWhitespaces
    // JUnitDoclet end method removeWhitespaces
  }
  
  public void testReformat() throws Exception {
    // JUnitDoclet begin method reformat
    // JUnitDoclet end method reformat
  }
  
  public void testStringToWordList() throws Exception {
    // JUnitDoclet begin method stringToWordList
    // JUnitDoclet end method stringToWordList
  }
  
  
  
  /**
  * JUnitDoclet moves marker to this method, if there is not match
  * for them in the regenerated code and if the marker is not empty.
  * This way, no test gets lost when regenerating after renaming.
  * Method testVault is supposed to be empty.
  */
  public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
  }
  
  public static void main(String[] args) {
    // JUnitDoclet begin method testcase.main
    junit.textui.TestRunner.run(StringUtilsTest.class);
    // JUnitDoclet end method testcase.main
  }
}
