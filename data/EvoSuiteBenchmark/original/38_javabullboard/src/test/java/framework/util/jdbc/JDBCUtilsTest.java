package framework.util.jdbc;

import junit.framework.TestCase;
// JUnitDoclet begin import
import framework.util.jdbc.JDBCUtils;
// JUnitDoclet end import

/**
* Generated by JUnitDoclet, a tool provided by
* ObjectFab GmbH under LGPL.
* Please see www.junitdoclet.org, www.gnu.org
* and www.objectfab.de for informations about
* the tool, the licence and the authors.
*/


public class JDBCUtilsTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
  // JUnitDoclet begin class
  framework.util.jdbc.JDBCUtils jdbcutils = null;
  // JUnitDoclet end class
  
  public JDBCUtilsTest(String name) {
    // JUnitDoclet begin method JDBCUtilsTest
    super(name);
    // JUnitDoclet end method JDBCUtilsTest
  }
  
  public framework.util.jdbc.JDBCUtils createInstance() throws Exception {
    // JUnitDoclet begin method testcase.createInstance
    return new framework.util.jdbc.JDBCUtils();
    // JUnitDoclet end method testcase.createInstance
  }
  
  protected void setUp() throws Exception {
    // JUnitDoclet begin method testcase.setUp
    super.setUp();
    jdbcutils = createInstance();
    // JUnitDoclet end method testcase.setUp
  }
  
  protected void tearDown() throws Exception {
    // JUnitDoclet begin method testcase.tearDown
    jdbcutils = null;
    super.tearDown();
    // JUnitDoclet end method testcase.tearDown
  }
  
  public void testGetConnectionMetaData() throws Exception {
    // JUnitDoclet begin method getConnectionMetaData
    // JUnitDoclet end method getConnectionMetaData
  }
  
  public void testGetDatabaseSchemas() throws Exception {
    // JUnitDoclet begin method getDatabaseSchemas
    // JUnitDoclet end method getDatabaseSchemas
  }
  
  public void testGetTableTypes() throws Exception {
    // JUnitDoclet begin method getTableTypes
    // JUnitDoclet end method getTableTypes
  }
  
  public void testGetDatabaseTables() throws Exception {
    // JUnitDoclet begin method getDatabaseTables
    // JUnitDoclet end method getDatabaseTables
  }
  
  public void testGetTablePrimaryKeys() throws Exception {
    // JUnitDoclet begin method getTablePrimaryKeys
    // JUnitDoclet end method getTablePrimaryKeys
  }
  
  public void testGetTableColumns() throws Exception {
    // JUnitDoclet begin method getTableColumns
    // JUnitDoclet end method getTableColumns
  }
  
  public void testGetResultSetAsCollectionOfMap() throws Exception {
    // JUnitDoclet begin method getResultSetAsCollectionOfMap
    // JUnitDoclet end method getResultSetAsCollectionOfMap
  }
  
  public void testGetFirstColumnOfFirstRow() throws Exception {
    // JUnitDoclet begin method getFirstColumnOfFirstRow
    // JUnitDoclet end method getFirstColumnOfFirstRow
  }
  
  public void testGetDatabaseNonSQL92Keywords() throws Exception {
    // JUnitDoclet begin method getDatabaseNonSQL92Keywords
    // JUnitDoclet end method getDatabaseNonSQL92Keywords
  }
  
  public void testGetDatabaseKeywords() throws Exception {
    // JUnitDoclet begin method getDatabaseKeywords
    // JUnitDoclet end method getDatabaseKeywords
  }
  
  public void testGetNextVal() throws Exception {
    // JUnitDoclet begin method getNextVal
    // JUnitDoclet end method getNextVal
  }
  
  public void testGetRowCountFromQuery() throws Exception {
    // JUnitDoclet begin method getRowCountFromQuery
    // JUnitDoclet end method getRowCountFromQuery
  }
  
  public void testGetRowCountFromResultSet() throws Exception {
    // JUnitDoclet begin method getRowCountFromResultSet
    // JUnitDoclet end method getRowCountFromResultSet
  }
  
  public void testReplaceBindVariablesWithNull() throws Exception {
    // JUnitDoclet begin method replaceBindVariablesWithNull
    // JUnitDoclet end method replaceBindVariablesWithNull
  }
  
  public void testGetResultSetType() throws Exception {
    // JUnitDoclet begin method getResultSetType
    // JUnitDoclet end method getResultSetType
  }
  
  public void testExecuteQuery() throws Exception {
    // JUnitDoclet begin method executeQuery
    // JUnitDoclet end method executeQuery
  }
  
  public void testExecuteUpdate() throws Exception {
    // JUnitDoclet begin method executeUpdate
    // JUnitDoclet end method executeUpdate
  }
  
  
  
  /**
  * JUnitDoclet moves marker to this method, if there is not match
  * for them in the regenerated code and if the marker is not empty.
  * This way, no test gets lost when regenerating after renaming.
  * Method testVault is supposed to be empty.
  */
  public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
  }
  
  public static void main(String[] args) {
    // JUnitDoclet begin method testcase.main
    junit.textui.TestRunner.run(JDBCUtilsTest.class);
    // JUnitDoclet end method testcase.main
  }
}
