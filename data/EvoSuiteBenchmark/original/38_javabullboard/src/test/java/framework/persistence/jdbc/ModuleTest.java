package framework.persistence.jdbc;

import junit.framework.TestCase;
// JUnitDoclet begin import
import framework.persistence.jdbc.Module;
// JUnitDoclet end import

/**
* Generated by JUnitDoclet, a tool provided by
* ObjectFab GmbH under LGPL.
* Please see www.junitdoclet.org, www.gnu.org
* and www.objectfab.de for informations about
* the tool, the licence and the authors.
*/


public class ModuleTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
  // JUnitDoclet begin class
  framework.persistence.jdbc.Module module = null;
  // JUnitDoclet end class
  
  public ModuleTest(String name) {
    // JUnitDoclet begin method ModuleTest
    super(name);
    // JUnitDoclet end method ModuleTest
  }
  
  public framework.persistence.jdbc.Module createInstance() throws Exception {
    // JUnitDoclet begin method testcase.createInstance
    return new framework.persistence.jdbc.Module();
    // JUnitDoclet end method testcase.createInstance
  }
  
  protected void setUp() throws Exception {
    // JUnitDoclet begin method testcase.setUp
    super.setUp();
    module = createInstance();
    // JUnitDoclet end method testcase.setUp
  }
  
  protected void tearDown() throws Exception {
    // JUnitDoclet begin method testcase.tearDown
    module = null;
    super.tearDown();
    // JUnitDoclet end method testcase.tearDown
  }
  
  public void testGetPoolName() throws Exception {
    // JUnitDoclet begin method getPoolName
    // JUnitDoclet end method getPoolName
  }
  
  public void testIsConnected() throws Exception {
    // JUnitDoclet begin method isConnected
    // JUnitDoclet end method isConnected
  }
  
  public void testGetConnection() throws Exception {
    // JUnitDoclet begin method getConnection
    // JUnitDoclet end method getConnection
  }
  
  public void testConnect() throws Exception {
    // JUnitDoclet begin method connect
    // JUnitDoclet end method connect
  }
  
  public void testDisconnect() throws Exception {
    // JUnitDoclet begin method disconnect
    // JUnitDoclet end method disconnect
  }
  
  public void testCommit() throws Exception {
    // JUnitDoclet begin method commit
    // JUnitDoclet end method commit
  }
  
  public void testRollback() throws Exception {
    // JUnitDoclet begin method rollback
    // JUnitDoclet end method rollback
  }
  
  
  
  /**
  * JUnitDoclet moves marker to this method, if there is not match
  * for them in the regenerated code and if the marker is not empty.
  * This way, no test gets lost when regenerating after renaming.
  * Method testVault is supposed to be empty.
  */
  public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
  }
  
  public static void main(String[] args) {
    // JUnitDoclet begin method testcase.main
    junit.textui.TestRunner.run(ModuleTest.class);
    // JUnitDoclet end method testcase.main
  }
}
