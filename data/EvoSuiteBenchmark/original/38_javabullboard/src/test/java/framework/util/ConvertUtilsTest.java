package framework.util;

import java.util.Date;
import java.sql.Timestamp;
import java.util.Locale;
import junit.framework.TestCase;
// JUnitDoclet begin import
// import framework.GlobalParameters;
import framework.util.ConvertUtils;
// JUnitDoclet end import

/**
* Generated by JUnitDoclet, a tool provided by
* ObjectFab GmbH under LGPL.
* Please see www.junitdoclet.org, www.gnu.org
* and www.objectfab.de for informations about
* the tool, the licence and the authors.
*/


public class ConvertUtilsTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
  // JUnitDoclet begin class
  //framework.util.ConvertUtils convertutils = null;
  // JUnitDoclet end class
  
  public ConvertUtilsTest(String name) {
    // JUnitDoclet begin method ConvertUtilsTest
    super(name);
    // JUnitDoclet end method ConvertUtilsTest
  }
  
  public framework.util.ConvertUtils createInstance() throws Exception {
    // JUnitDoclet begin method testcase.createInstance
    //return new framework.util.ConvertUtils();
    return null;
    // JUnitDoclet end method testcase.createInstance
  }
  
  protected void setUp() throws Exception {
    // JUnitDoclet begin method testcase.setUp
    super.setUp();
    //convertutils = createInstance();
    // JUnitDoclet end method testcase.setUp
  }
  
  protected void tearDown() throws Exception {
    // JUnitDoclet begin method testcase.tearDown
    //convertutils = null;
    super.tearDown();
    // JUnitDoclet end method testcase.tearDown
  }
  
  public void testGetDefaultDatePattern() throws Exception {
    // JUnitDoclet begin method getDefaultDatePattern
    // NDC.push("testGetDefaultDatePattern");

    String value = ConvertUtils.getDefaultDatePattern();
    assertTrue(value!=null && value.length()>0);

    //NDC.remove();
    // JUnitDoclet end method getDefaultDatePattern
  }
  
  public void testGetDefaultTimePattern() throws Exception {
    // JUnitDoclet begin method getDefaultTimePattern
    //NDC.push("testGetDefaultTimePattern");

    String value = ConvertUtils.getDefaultTimePattern();
    assertTrue(value!=null && value.length()>0);

    //NDC.remove();
    // JUnitDoclet end method getDefaultTimePattern
  }
  
  public void testGetDefaultTimestampPattern() throws Exception {
    // JUnitDoclet begin method getDefaultTimestampPattern
    //NDC.push("testGetDefaultTimestampPattern");

    String value = ConvertUtils.getDefaultTimestampPattern();
    assertTrue(value!=null && value.length()>0);

    //NDC.remove();
    // JUnitDoclet end method getDefaultTimestampPattern
  }
  
  public void testGetDefaultLocale() throws Exception {
    // JUnitDoclet begin method getDefaultLocale
   // NDC.push("testGetDefaultLocale");

    Locale value = ConvertUtils.getDefaultLocale();
    assertNotNull(value);

    //NDC.remove();
    // JUnitDoclet end method getDefaultLocale
  }
  
  public void testConvertString() throws Exception {
    // JUnitDoclet begin method convertString
    //NDC.push("testConvertString");
    String value = null;
    
    int i = 1;
    value = ConvertUtils.convertString(i);
    assertEquals(value, "1");

    boolean b = true;
    value = ConvertUtils.convertString(b);
    assertEquals(value, "true");

    Object o = "TEST";
    value = ConvertUtils.convertString(o);
    assertEquals(value, "TEST");
    
    Date d = new Date(251852400000l);
    String datePattern = "dd MMM yyyy";
    Locale locale = Locale.FRENCH;
    value = ConvertUtils.convertString(d, datePattern, locale);
    // log.info("testConvertString: value="+value);
    assertEquals(value, "25 dï¿½c. 1977");

    Timestamp t = new Timestamp(251852400000l);
    String timePattern = "hh:mm:ss";
    value = ConvertUtils.convertString(t, timePattern, locale);
    // log.info("testConvertString: value="+value);
    assertEquals(value, "12:00:00");

    //NDC.remove();
    // JUnitDoclet end method convertString
  }
  
  public void testConvert() throws Exception {
    // JUnitDoclet begin method convert
    // JUnitDoclet end method convert
  }
  
  public void testConvertByte() throws Exception {
    // JUnitDoclet begin method convertByte
    // JUnitDoclet end method convertByte
  }
  
  public void testConvertFloat() throws Exception {
    // JUnitDoclet begin method convertFloat
    // JUnitDoclet end method convertFloat
  }
  
  public void testConvertShort() throws Exception {
    // JUnitDoclet begin method convertShort
    // JUnitDoclet end method convertShort
  }
  
  public void testConvertCharacter() throws Exception {
    // JUnitDoclet begin method convertCharacter
    // JUnitDoclet end method convertCharacter
  }
  
  public void testConvertBooleanType() throws Exception {
    // JUnitDoclet begin method convertBooleanType
    // JUnitDoclet end method convertBooleanType
  }
  
  public void testConvertBoolean() throws Exception {
    // JUnitDoclet begin method convertBoolean
    // JUnitDoclet end method convertBoolean
  }
  
  public void testConvertDouble() throws Exception {
    // JUnitDoclet begin method convertDouble
    // JUnitDoclet end method convertDouble
  }
  
  public void testConvertLong() throws Exception {
    // JUnitDoclet begin method convertLong
    // JUnitDoclet end method convertLong
  }
  
  public void testConvertBigInteger() throws Exception {
    // JUnitDoclet begin method convertBigInteger
    // JUnitDoclet end method convertBigInteger
  }
  
  public void testConvertBigDecimal() throws Exception {
    // JUnitDoclet begin method convertBigDecimal
    // JUnitDoclet end method convertBigDecimal
  }
  
  public void testConvertInteger() throws Exception {
    // JUnitDoclet begin method convertInteger
    // JUnitDoclet end method convertInteger
  }
  
  public void testConvertInt() throws Exception {
    // JUnitDoclet begin method convertInt
    // JUnitDoclet end method convertInt
  }
  
  public void testConvertSqlDate() throws Exception {
    // JUnitDoclet begin method convertSqlDate
    // JUnitDoclet end method convertSqlDate
  }
  
  public void testConvertUtilDate() throws Exception {
    // JUnitDoclet begin method convertUtilDate
    // JUnitDoclet end method convertUtilDate
  }
  
  public void testConvertTimestamp() throws Exception {
    // JUnitDoclet begin method convertTimestamp
    // JUnitDoclet end method convertTimestamp
  }
  
  
  
  /**
  * JUnitDoclet moves marker to this method, if there is not match
  * for them in the regenerated code and if the marker is not empty.
  * This way, no test gets lost when regenerating after renaming.
  * Method testVault is supposed to be empty.
  */
  public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
  }
  
  public static void main(String[] args) {
    // JUnitDoclet begin method testcase.main
    //System.out.println(ConvertUtils.convertUtilDate("1977-12-25").getTime());
    junit.textui.TestRunner.run(ConvertUtilsTest.class);
    // JUnitDoclet end method testcase.main
  }
}
