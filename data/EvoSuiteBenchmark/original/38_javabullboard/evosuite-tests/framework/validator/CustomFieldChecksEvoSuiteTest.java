/*
 * This file was automatically generated by EvoSuite
 */

package framework.validator;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import framework.validator.CustomFieldChecks;
import javax.servlet.http.HttpServletRequest;
import org.apache.commons.validator.Field;
import org.apache.commons.validator.ValidatorAction;
import org.apache.struts.action.ActionErrors;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CustomFieldChecksEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CustomFieldChecks customFieldChecks0 = new CustomFieldChecks();
      assertNotNull(customFieldChecks0);
  }

  @Test
  public void test1()  throws Throwable  {
      ValidatorAction validatorAction0 = new ValidatorAction();
      Field field0 = new Field();
      ActionErrors actionErrors0 = new ActionErrors();
      boolean boolean0 = CustomFieldChecks.validateClassName((Object) false, validatorAction0, field0, actionErrors0, (HttpServletRequest) null);
      assertEquals(1, actionErrors0.size());
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      Field field0 = new Field();
      ActionErrors actionErrors0 = new ActionErrors();
      boolean boolean0 = CustomFieldChecks.validateClassName((Object) "java.lang.Object", (ValidatorAction) null, field0, actionErrors0, (HttpServletRequest) null);
      assertEquals(true, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      ValidatorAction validatorAction0 = new ValidatorAction();
      Field field0 = new Field();
      ActionErrors actionErrors0 = new ActionErrors();
      boolean boolean0 = CustomFieldChecks.validateJavaName((Object) validatorAction0, validatorAction0, field0, actionErrors0, (HttpServletRequest) null);
      assertEquals(false, actionErrors0.isEmpty());
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      ValidatorAction validatorAction0 = new ValidatorAction();
      Field field0 = new Field();
      ActionErrors actionErrors0 = new ActionErrors();
      boolean boolean0 = CustomFieldChecks.validateJavaName((Object) "HTTP", validatorAction0, field0, actionErrors0, (HttpServletRequest) null);
      assertEquals(true, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      Field field0 = new Field();
      ActionErrors actionErrors0 = new ActionErrors((ActionErrors) null);
      // Undeclared exception!
      try {
        CustomFieldChecks.validateJavaPackageName((Object) "Constant: name=null  value=null\n", (ValidatorAction) null, field0, actionErrors0, (HttpServletRequest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      ValidatorAction validatorAction0 = new ValidatorAction();
      Field field0 = new Field();
      ActionErrors actionErrors0 = new ActionErrors();
      boolean boolean0 = CustomFieldChecks.validateJavaPackageName((Object) null, validatorAction0, field0, actionErrors0, (HttpServletRequest) null);
      assertEquals(true, boolean0);
  }
}
