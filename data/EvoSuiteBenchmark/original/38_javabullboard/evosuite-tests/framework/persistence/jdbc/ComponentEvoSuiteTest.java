/*
 * This file was automatically generated by EvoSuite
 */

package framework.persistence.jdbc;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import framework.persistence.jdbc.Attribute;
import framework.persistence.jdbc.Entity;
import framework.persistence.jdbc.Module;
import framework.persistence.jdbc.View;
import java.util.Map;
import org.apache.xerces.dom.DocumentImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ComponentEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Entity entity0 = new Entity();
      entity0.setPackageName("getCollection: Counting rows by scrolling to last");
      assertEquals(0, entity0.getAttributesSize());
  }

  @Test
  public void test1()  throws Throwable  {
      View view0 = new View();
      Map<Object, Object> map0 = view0.describe();
      assertNotNull(map0);
      
      // Undeclared exception!
      try {
        view0.addAttributes(map0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * java.lang.Integer cannot be cast to framework.persistence.jdbc.Attribute
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      View view0 = new View();
      view0.setName("");
      assertEquals(10, view0.getRowsPerPage());
  }

  @Test
  public void test3()  throws Throwable  {
      Entity entity0 = new Entity();
      entity0.setTargetClassName("@Ch[hO");
      assertNull(entity0.getComment());
  }

  @Test
  public void test4()  throws Throwable  {
      Entity entity0 = new Entity();
      entity0.setSqlQuery("gTSZIC`4a");
      assertEquals(0L, entity0.getTimestamp());
  }

  @Test
  public void test5()  throws Throwable  {
      Entity entity0 = new Entity();
      entity0.setModule((Module) null);
      assertNull(entity0.getFullName());
  }

  @Test
  public void test6()  throws Throwable  {
      Entity entity0 = new Entity();
      entity0.setComment("");
      assertEquals(0, entity0.getAttributesSize());
  }

  @Test
  public void test7()  throws Throwable  {
      View view0 = new View();
      Attribute attribute0 = new Attribute();
      view0.addAttribute(attribute0);
      view0.clone();
      assertEquals(1, view0.getAttributesSize());
      assertEquals("{startIndex=0, sqlQuery=null, targetClassName=java.util.HashMap, packageName=null, class=class framework.persistence.jdbc.View, attributesSize=1, bindVariables=null, version=null, timestamp=0, rowsPerPage=10, rowCountMethod=java, name=null, retrieveRowCount=false, attributes={null={scale=null, precision=null, columnType=null, primaryKey=false, name=null, keySeq=0, columnName=null, class=class framework.persistence.jdbc.Attribute, nullable=false, columnTypeName=null, columnClassName=null}}, fullName=null, parameters=null, tokenValues=null, comment=null, maxFetchSize=0}", view0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      View view0 = new View();
      view0.setTimestamp((long) (-116));
      assertEquals((-116L), view0.getTimestamp());
      assertEquals("{startIndex=0, sqlQuery=null, targetClassName=java.util.HashMap, packageName=null, class=class framework.persistence.jdbc.View, attributesSize=0, bindVariables=null, version=null, timestamp=-116, rowsPerPage=10, rowCountMethod=java, name=null, retrieveRowCount=false, attributes={}, fullName=null, parameters=null, tokenValues=null, comment=null, maxFetchSize=0}", view0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      Entity entity0 = new Entity();
      entity0.setVersion("2");
      assertNull(entity0.getPackageName());
  }

  @Test
  public void test10()  throws Throwable  {
      View view0 = new View();
      view0.removeAttribute("aiwt%o~* -~a");
      assertEquals(0, view0.getMaxFetchSize());
  }

  @Test
  public void test11()  throws Throwable  {
      Entity entity0 = new Entity();
      Entity entity1 = (Entity)entity0.clone();
      assertNotNull(entity1);
      assertNotSame(entity0, entity1);
  }

  @Test
  public void test12()  throws Throwable  {
      Entity entity0 = new Entity();
      Attribute attribute0 = new Attribute();
      entity0.addAttribute(attribute0);
      entity0.removeAttributes();
      assertEquals(0, entity0.getAttributesSize());
      assertEquals("{attributeCollection=[], connection=null, module=null, sqlQuery=null, targetClassName=java.util.HashMap, packageName=null, objectName=null, class=class framework.persistence.jdbc.Entity, attributesSize=0, version=null, timestamp=0, name=null, primaryKeys=[], attributes={}, fullName=null, comment=null}", entity0.toString());
  }

  @Test
  public void test13()  throws Throwable  {
      Entity entity0 = new Entity();
      entity0.removeAttribute("");
      assertNull(entity0.getComment());
  }

  @Test
  public void test14()  throws Throwable  {
      Entity entity0 = new Entity();
      Attribute attribute0 = new Attribute();
      entity0.addAttribute(attribute0);
      attribute0.setColumnName("");
      entity0.getAttributeByColumnName((String) null);
      assertEquals("{attributeCollection=[{scale=null, precision=null, columnType=null, primaryKey=false, name=null, keySeq=0, columnName=, class=class framework.persistence.jdbc.Attribute, nullable=false, columnTypeName=null, columnClassName=null}], connection=null, module=null, sqlQuery=null, targetClassName=java.util.HashMap, packageName=null, objectName=null, class=class framework.persistence.jdbc.Entity, attributesSize=1, version=null, timestamp=0, name=null, primaryKeys=[], attributes={null={scale=null, precision=null, columnType=null, primaryKey=false, name=null, keySeq=0, columnName=, class=class framework.persistence.jdbc.Attribute, nullable=false, columnTypeName=null, columnClassName=null}}, fullName=null, comment=null}", entity0.toString());
  }

  @Test
  public void test15()  throws Throwable  {
      Entity entity0 = new Entity();
      Attribute attribute0 = new Attribute();
      attribute0.setColumnName("gTSZIC`4a");
      entity0.addAttribute(attribute0);
      Attribute attribute1 = entity0.getAttributeByColumnName("gTSZIC`4a");
      assertNotNull(attribute1);
      assertEquals("{attributeCollection=[{scale=null, precision=null, columnType=null, primaryKey=false, name=null, keySeq=0, columnName=gTSZIC`4a, class=class framework.persistence.jdbc.Attribute, nullable=false, columnTypeName=null, columnClassName=null}], connection=null, module=null, sqlQuery=null, targetClassName=java.util.HashMap, packageName=null, objectName=null, class=class framework.persistence.jdbc.Entity, attributesSize=1, version=null, timestamp=0, name=null, primaryKeys=[], attributes={null={scale=null, precision=null, columnType=null, primaryKey=false, name=null, keySeq=0, columnName=gTSZIC`4a, class=class framework.persistence.jdbc.Attribute, nullable=false, columnTypeName=null, columnClassName=null}}, fullName=null, comment=null}", entity0.toString());
  }

  @Test
  public void test16()  throws Throwable  {
      View view0 = new View();
      Entity entity0 = new Entity();
      Map<Object, Object> map0 = entity0.getAttributes();
      view0.addAttributes(map0);
      assertNull(view0.getPackageName());
  }

  @Test
  public void test17()  throws Throwable  {
      Entity entity0 = new Entity();
      DocumentImpl documentImpl0 = (DocumentImpl)entity0.toXML();
      assertNotNull(documentImpl0);
      assertEquals("{attributeCollection=[], connection=null, module=null, sqlQuery=null, targetClassName=java.util.HashMap, packageName=null, objectName=null, class=class framework.persistence.jdbc.Entity, attributesSize=0, version=null, timestamp=0, name=null, primaryKeys=[], attributes={}, fullName=null, comment=null}", entity0.toString());
  }
}
