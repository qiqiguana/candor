/*
 * This file was automatically generated by EvoSuite
 */

package framework.persistence.jdbc;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import framework.persistence.jdbc.Component;
import framework.persistence.jdbc.Entity;
import framework.persistence.jdbc.EntityManager;
import java.util.Map;
import java.util.Properties;
import org.apache.xerces.dom.DocumentImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class EntityManagerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      EntityManager entityManager0 = EntityManager.getInstance();
      Entity entity0 = (Entity)entityManager0.getNew();
      assertNotNull(entity0);
      
      Properties properties0 = new Properties();
      boolean boolean0 = entityManager0.isValidInternal((Component) entity0, (Map) properties0);
      assertEquals(true, boolean0);
      assertEquals(false, entityManager0.isCacheSizeLimited());
  }

  @Test
  public void test1()  throws Throwable  {
      EntityManager entityManager0 = EntityManager.getInstance();
      Entity entity0 = (Entity)entityManager0.getNew();
      assertNotNull(entity0);
      
      DocumentImpl documentImpl0 = (DocumentImpl)entityManager0.convertDOM((Component) entity0);
      assertNotNull(documentImpl0);
      assertEquals(0, entityManager0.getCacheSizeLimit());
  }
}
