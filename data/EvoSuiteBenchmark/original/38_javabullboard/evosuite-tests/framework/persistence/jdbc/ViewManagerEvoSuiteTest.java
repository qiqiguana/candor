/*
 * This file was automatically generated by EvoSuite
 */

package framework.persistence.jdbc;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import framework.persistence.jdbc.Component;
import framework.persistence.jdbc.View;
import framework.persistence.jdbc.ViewManager;
import java.lang.reflect.InvocationTargetException;
import java.sql.Connection;
import java.util.Map;
import java.util.Properties;
import org.apache.xerces.dom.DocumentImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ViewManagerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ViewManager viewManager0 = ViewManager.getInstance();
      View view0 = (View)viewManager0.getNew();
      assertNotNull(view0);
      
      DocumentImpl documentImpl0 = (DocumentImpl)viewManager0.convertDOM((Component) view0);
      assertNotNull(documentImpl0);
      assertEquals(60000L, viewManager0.getCacheTimerInterval());
  }

  @Test
  public void test1()  throws Throwable  {
      ViewManager viewManager0 = ViewManager.getInstance();
      View view0 = new View();
      assertNotNull(view0);
      
      Properties properties0 = new Properties();
      boolean boolean0 = viewManager0.isValidInternal((Component) view0, (Map) properties0);
      assertEquals(true, boolean0);
      assertEquals(false, viewManager0.isCacheIdleTimeoutUsed());
  }

  @Test
  public void test2()  throws Throwable  {
      ViewManager viewManager0 = new ViewManager();
      try {
        viewManager0.getViewFromQuery((Connection) null, "db", "db", "db", "db", "db");
        fail("Expecting exception: InvocationTargetException");
      } catch(InvocationTargetException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ViewManager viewManager0 = ViewManager.getInstance();
      assertNotNull(viewManager0);
      
      int int0 = viewManager0.getDefaultMaxFetchSize();
      assertEquals(100, int0);
  }
}
