/*
 * This file was automatically generated by EvoSuite
 */

package framework.persistence.jdbc;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import framework.persistence.jdbc.Attribute;
import framework.persistence.jdbc.Entity;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class EntityEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Entity entity0 = new Entity();
      assertNotNull(entity0);
      
      HashMap<Entity, Entity> hashMap0 = new HashMap<Entity, Entity>();
      try {
        entity0.store((Map) hashMap0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
        /*
         * An update was called without where clause (No primary key provided)
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Entity entity0 = new Entity();
      assertNotNull(entity0);
      
      LinkedList<Entity> linkedList0 = new LinkedList<Entity>();
      try {
        entity0.remove((Collection) linkedList0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
        /*
         * Connection is null!
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Entity entity0 = new Entity();
      assertNotNull(entity0);
      
      Map<Object, Object> map0 = entity0.describe();
      assertNotNull(map0);
      
      try {
        entity0.create(map0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: -1
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Entity entity0 = new Entity();
      assertNotNull(entity0);
      
      HashMap<List<Object>, String> hashMap0 = new HashMap<List<Object>, String>();
      try {
        entity0.load((Map) hashMap0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
        /*
         * This select cannot be called without where clause (No primary key provided)
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Entity entity0 = new Entity();
      assertNotNull(entity0);
      
      entity0.removeAttribute("^s*$");
      assertEquals("{attributeCollection=[], connection=null, module=null, sqlQuery=null, targetClassName=java.util.HashMap, packageName=null, objectName=null, class=class framework.persistence.jdbc.Entity, attributesSize=0, version=null, timestamp=0, name=null, primaryKeys=[], attributes={}, fullName=null, comment=null}", entity0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      Entity entity0 = new Entity();
      assertNotNull(entity0);
      
      entity0.setObjectName(">Q");
      assertEquals("{attributeCollection=[], connection=null, module=null, sqlQuery=null, targetClassName=java.util.HashMap, packageName=null, objectName=>Q, class=class framework.persistence.jdbc.Entity, attributesSize=0, version=null, timestamp=0, name=null, primaryKeys=[], attributes={}, fullName=null, comment=null}", entity0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      Entity entity0 = new Entity();
      assertNotNull(entity0);
      
      Collection<Object> collection0 = entity0.getPrimaryKeys();
      entity0.setPrimaryKeys(collection0);
      assertEquals("{attributeCollection=[], connection=null, module=null, sqlQuery=null, targetClassName=java.util.HashMap, packageName=null, objectName=null, class=class framework.persistence.jdbc.Entity, attributesSize=0, version=null, timestamp=0, name=null, primaryKeys=[], attributes={}, fullName=null, comment=null}", entity0.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      Entity entity0 = new Entity();
      assertNotNull(entity0);
      
      Map<Object, Object> map0 = entity0.getAttributes();
      try {
        entity0.remove(map0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
        /*
         * An update was called without where clause (No primary key provided)
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      Entity entity0 = new Entity();
      assertNotNull(entity0);
      
      Attribute attribute0 = new Attribute();
      entity0.addAttribute(attribute0);
      assertEquals(1, entity0.getAttributesSize());
      assertEquals("{attributeCollection=[{scale=null, precision=null, columnType=null, primaryKey=false, name=null, keySeq=0, columnName=null, class=class framework.persistence.jdbc.Attribute, nullable=false, columnTypeName=null, columnClassName=null}], connection=null, module=null, sqlQuery=null, targetClassName=java.util.HashMap, packageName=null, objectName=null, class=class framework.persistence.jdbc.Entity, attributesSize=1, version=null, timestamp=0, name=null, primaryKeys=[], attributes={null={scale=null, precision=null, columnType=null, primaryKey=false, name=null, keySeq=0, columnName=null, class=class framework.persistence.jdbc.Attribute, nullable=false, columnTypeName=null, columnClassName=null}}, fullName=null, comment=null}", entity0.toString());
  }
}
