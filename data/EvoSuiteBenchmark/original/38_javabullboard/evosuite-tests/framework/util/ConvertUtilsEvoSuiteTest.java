/*
 * This file was automatically generated by EvoSuite
 */

package framework.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import framework.util.ConvertUtils;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.sql.Timestamp;
import java.util.Date;
import java.util.Locale;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ConvertUtilsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Class<?> class0 = Timestamp.class;
      Locale locale0 = Locale.JAPAN;
      String string0 = (String)ConvertUtils.convert("K", (Class) class0, "K", locale0);
      assertNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      Date date0 = ConvertUtils.convertUtilDate("bpx`R");
      assertNull(date0);
  }

  @Test
  public void test2()  throws Throwable  {
      ConvertUtils.convertCharacter("");
  }

  @Test
  public void test3()  throws Throwable  {
      ConvertUtils.convertByte("'xx6hb'ju$9_`8%mr");
  }

  @Test
  public void test4()  throws Throwable  {
      BigDecimal bigDecimal0 = ConvertUtils.convertBigDecimal("hh:mm:ss");
      assertNull(bigDecimal0);
  }

  @Test
  public void test5()  throws Throwable  {
      String[] stringArray0 = new String[4];
      Class<?> class0 = Float.class;
      Object object0 = ConvertUtils.convert(stringArray0, (Class) class0);
      assertNotNull(object0);
  }

  @Test
  public void test6()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      Class<?> class0 = Short.class;
      Short short0 = (Short)ConvertUtils.convert("+]q'h'", (Class) class0, "1970-01-01", locale0);
      assertNull(short0);
  }

  @Test
  public void test7()  throws Throwable  {
      ConvertUtils.convertLong("hh:mm:ss");
  }

  @Test
  public void test8()  throws Throwable  {
      ConvertUtils.convertInteger("bpx`R");
  }

  @Test
  public void test9()  throws Throwable  {
      Class<?> class0 = BigInteger.class;
      BigInteger bigInteger0 = (BigInteger)ConvertUtils.convert("+]q'h'", (Class) class0);
      assertNull(bigInteger0);
  }

  @Test
  public void test10()  throws Throwable  {
      Locale locale0 = ConvertUtils.getDefaultLocale();
      java.sql.Date date0 = ConvertUtils.convertSqlDate("0", "0", locale0);
      assertNotNull(date0);
      assertEquals("31 Dec 1969 23:00:00 GMT", date0.toGMTString());
  }

  @Test
  public void test11()  throws Throwable  {
      java.sql.Date date0 = ConvertUtils.convertSqlDate("");
      assertNull(date0);
  }

  @Test
  public void test12()  throws Throwable  {
      String string0 = ConvertUtils.convertString(1587);
      assertNotNull(string0);
      assertEquals("1587", string0);
  }

  @Test
  public void test13()  throws Throwable  {
      ConvertUtils convertUtils0 = new ConvertUtils();
      assertEquals("yyyy-MM-dd", convertUtils0.getDefaultDatePattern());
  }

  @Test
  public void test14()  throws Throwable  {
      ConvertUtils.convertDouble("bpx`R");
  }

  @Test
  public void test15()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      Timestamp timestamp0 = ConvertUtils.convertTimestamp("{kS|{rZa!@W`;=(vw", "{kS|{rZa!@W`;=(vw", locale0);
      assertNull(timestamp0);
  }

  @Test
  public void test16()  throws Throwable  {
      String string0 = ConvertUtils.convertString(true);
      assertEquals("true", string0);
  }

  @Test
  public void test17()  throws Throwable  {
      String string0 = ConvertUtils.convertString((Object) "yyyy-MM-dd hh:mm:ss");
      assertNotNull(string0);
      assertEquals("yyyy-MM-dd hh:mm:ss", string0);
  }

  @Test
  public void test18()  throws Throwable  {
      boolean boolean0 = ConvertUtils.convertBooleanType("0", false);
      assertEquals(false, boolean0);
  }

  @Test
  public void test19()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      Date date0 = new Date((long) 0);
      String string0 = ConvertUtils.convertString(date0, "bpx`R", locale0);
      assertNull(string0);
  }

  @Test
  public void test20()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      String string0 = ConvertUtils.convertString((Date) null, "bpx`R", locale0);
      assertNull(string0);
  }

  @Test
  public void test21()  throws Throwable  {
      Date date0 = new Date((-596L));
      String string0 = ConvertUtils.convertString(date0, (String) null, (Locale) null);
      assertNotNull(string0);
      assertEquals("1970-01-01", string0);
  }

  @Test
  public void test22()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Timestamp timestamp0 = new Timestamp(363L);
      String string0 = ConvertUtils.convertString(timestamp0, "*)", locale0);
      assertEquals("*)", string0);
      assertNotNull(string0);
  }

  @Test
  public void test23()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      String string0 = ConvertUtils.convertString((Timestamp) null, "{kS|{rZa!@W`;=(vw", locale0);
      assertNull(string0);
  }

  @Test
  public void test24()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp(363L);
      String string0 = ConvertUtils.convertString(timestamp0, (String) null, (Locale) null);
      assertEquals("1970-01-01 01:00:00", string0);
      assertNotNull(string0);
  }

  @Test
  public void test25()  throws Throwable  {
      Class<?> class0 = Date.class;
      Character character0 = (Character)ConvertUtils.convert("'xx6hb'ju$9_`8%mr", (Class) class0);
      assertNull(character0);
  }

  @Test
  public void test26()  throws Throwable  {
      Class<?> class0 = ConvertUtils.class;
      Locale locale0 = Locale.JAPANESE;
      String string0 = (String)ConvertUtils.convert("hh:mm:ss", (Class) class0, "bpx`R", locale0);
      assertNotNull(string0);
      assertEquals("hh:mm:ss", string0);
  }

  @Test
  public void test27()  throws Throwable  {
      Class<?> class0 = Short.class;
      Object object0 = ConvertUtils.convert((String[]) null, (Class) class0);
      assertNull(object0);
  }

  @Test
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[5];
      Class<?> class0 = Short.class;
      Object object0 = ConvertUtils.convert(stringArray0, (Class) class0);
      assertNotNull(object0);
  }

  @Test
  public void test29()  throws Throwable  {
      String[] stringArray0 = new String[2];
      Class<?> class0 = Date.class;
      Object object0 = ConvertUtils.convert(stringArray0, (Class) class0);
      assertNotNull(object0);
  }

  @Test
  public void test30()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "*)";
      stringArray0[1] = "*)";
      stringArray0[2] = "*)";
      Class<?> class0 = ConvertUtils.class;
      Object object0 = ConvertUtils.convert(stringArray0, (Class) class0);
      assertNotSame(stringArray0, object0);
      assertNotNull(object0);
  }

  @Test
  public void test31()  throws Throwable  {
      boolean boolean0 = ConvertUtils.convertBooleanType("KR(J", false);
      assertEquals(false, boolean0);
  }

  @Test
  public void test32()  throws Throwable  {
      boolean boolean0 = ConvertUtils.convertBooleanType("false", false);
      assertEquals(false, boolean0);
  }

  @Test
  public void test33()  throws Throwable  {
      int int0 = ConvertUtils.convertInt("9", (-66));
      assertEquals(9, int0);
  }

  @Test
  public void test34()  throws Throwable  {
      int int0 = ConvertUtils.convertInt("bpx`R", 0);
      assertEquals(0, int0);
  }
}
