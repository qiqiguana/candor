/*
 * This file was automatically generated by EvoSuite
 */

package framework.util.jdbc;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sun.rowset.JoinRowSetImpl;
import framework.util.jdbc.JDBCUtils;
import framework.util.jdbc.Parameter;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Time;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Map;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JDBCUtilsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      try {
        JDBCUtils.getFirstColumnOfFirstRow((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      JDBCUtils jDBCUtils0 = new JDBCUtils();
      assertNotNull(jDBCUtils0);
  }

  @Test
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[9];
      try {
        JDBCUtils.getDatabaseTables((Connection) null, "", "", "", stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      try {
        JDBCUtils.getTablePrimaryKeys((Connection) null, "U)d`<pYJ'XW$Q1\u0017", "U)d`<pYJ'XW$Q1\u0017", "U)d`<pYJ'XW$Q1\u0017");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      try {
        JDBCUtils.getDatabaseSchemas((Connection) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      try {
        JDBCUtils.getTableTypes((Connection) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      try {
        JDBCUtils.getTableColumns((Connection) null, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      try {
        JDBCUtils.getTableColumns((Connection) null, "", "", "", "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      LinkedList<Map<String, Time>> linkedList0 = new LinkedList<Map<String, Time>>();
      try {
        JDBCUtils.executeUpdate((Connection) null, "3820(Unknown)", (Collection) linkedList0, (Object) "connpool_is_poolcreated", (Collection) linkedList0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
        /*
         * Connection is null!
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      ArrayList<Time> arrayList0 = new ArrayList<Time>();
      try {
        JDBCUtils.getRowCountFromQuery((Connection) null, "connpool_pool_size", (Collection) arrayList0, (Object) null, (Collection) arrayList0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
        /*
         * Connection is null!
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      try {
        JDBCUtils.getTablePrimaryKeys((Connection) null, "nl");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      JoinRowSetImpl joinRowSetImpl0 = new JoinRowSetImpl();
      int int0 = JDBCUtils.getRowCountFromResultSet((ResultSet) joinRowSetImpl0);
      assertEquals(0, int0);
  }

  @Test
  public void test12()  throws Throwable  {
      try {
        JDBCUtils.getConnectionMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      try {
        JDBCUtils.getDatabaseKeywords();
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
        /*
         * .src/main/resources/keyword/default.kw (No such file or directory)
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      try {
        JDBCUtils.getDatabaseTables((Connection) null, "];6+fGk!p");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      String string0 = JDBCUtils.replaceBindVariablesWithNull("");
      assertEquals("", string0);
  }

  @Test
  public void test16()  throws Throwable  {
      String string0 = JDBCUtils.getResultSetType(3802);
      assertNotNull(string0);
      assertEquals("3802(Unknown)", string0);
  }

  @Test
  public void test17()  throws Throwable  {
      String string0 = JDBCUtils.getResultSetType(1005);
      assertNotNull(string0);
      assertEquals("1005(TYPE_SCROLL_SENSITIVE)", string0);
  }

  @Test
  public void test18()  throws Throwable  {
      Parameter parameter0 = new Parameter("", "jqb-vxC&", "", "", "jqb-vxC&");
      boolean boolean0 = JDBCUtils.isValidParameter(parameter0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try {
        JDBCUtils.isValidParameter((Parameter) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test20()  throws Throwable  {
      Parameter parameter0 = new Parameter("<o.zq(pe1<pH\"G0%u", "", "<o.zq(pe1<pH\"G0%u", "connpool_pool_size", "connpool_pool_size");
      boolean boolean0 = JDBCUtils.isValidParameter(parameter0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test21()  throws Throwable  {
      Parameter parameter0 = new Parameter("o.zq(pe1<*H\";*G0ru", "o.zq(pe1<*H\";*G0ru", "o.zq(pe1<*H\";*G0ru", "connpool_pool_size", "connpool_pool_size");
      boolean boolean0 = JDBCUtils.isValidParameter(parameter0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test22()  throws Throwable  {
      Parameter parameter0 = new Parameter();
      boolean boolean0 = JDBCUtils.isValidParameter(parameter0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test23()  throws Throwable  {
      Parameter parameter0 = new Parameter();
      parameter0.setValue((Object) "{name=null, value=null, columnName=null, class=class framework.util.jdbc.Parameter, nextValue=null, operator=null}");
      boolean boolean0 = JDBCUtils.isValidParameter(parameter0);
      assertEquals(true, boolean0);
  }
}
