/*
 * This file was automatically generated by EvoSuite
 */

package framework.util.jdbc;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import framework.util.jdbc.Parameter;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ParameterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Parameter parameter0 = new Parameter();
      parameter0.setName("t]f]up");
      assertEquals("t]f]up", parameter0.getName());
  }

  @Test
  public void test1()  throws Throwable  {
      Parameter parameter0 = new Parameter();
      parameter0.setOperator("ORDER BY");
      assertEquals("ORDER BY", parameter0.getOperator());
  }

  @Test
  public void test2()  throws Throwable  {
      Parameter parameter0 = new Parameter();
      // Undeclared exception!
      try {
        parameter0.toString();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * org/apache/log4j/spi/LoggingEvent
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Parameter parameter0 = new Parameter();
      parameter0.setValue((Object) null);
      assertNull(parameter0.getOperator());
  }

  @Test
  public void test4()  throws Throwable  {
      Parameter parameter0 = new Parameter();
      parameter0.setColumnName("");
      assertEquals("", parameter0.getColumnName());
  }

  @Test
  public void test5()  throws Throwable  {
      Parameter parameter0 = new Parameter("", "", "", (Object) null, "ORDER BY");
      assertEquals("", parameter0.getOperator());
      assertEquals("", parameter0.getColumnName());
      assertEquals("", parameter0.getName());
  }

  @Test
  public void test6()  throws Throwable  {
      Parameter parameter0 = new Parameter();
      parameter0.setNextValue((Object) "DESC");
      assertNull(parameter0.getColumnName());
  }
}
