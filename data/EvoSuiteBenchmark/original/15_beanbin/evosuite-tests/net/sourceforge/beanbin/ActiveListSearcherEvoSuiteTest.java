/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.beanbin;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.Serializable;
import net.sourceforge.beanbin.AbstractSearcher;
import net.sourceforge.beanbin.ActiveList;
import net.sourceforge.beanbin.ActiveListSearcher;
import net.sourceforge.beanbin.BeanBinException;
import net.sourceforge.beanbin.query.SortBy;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ActiveListSearcherEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ActiveList<Serializable> activeList0 = new ActiveList<Serializable>();
      Class<Object> class0 = activeList0.getClazz();
      assertNull(class0);
  }

  @Test
  public void test1()  throws Throwable  {
      ActiveList<AbstractSearcher<Serializable>> activeList0 = new ActiveList<AbstractSearcher<Serializable>>();
      Class<?> class0 = ActiveListSearcher.class;
      activeList0.setClazz(class0);
  }

  @Test
  public void test2()  throws Throwable  {
      Class<?> class0 = ActiveListSearcher.class;
      ActiveListSearcher<Serializable> activeListSearcher0 = new ActiveListSearcher<Serializable>(class0);
      assertNotNull(activeListSearcher0);
  }

  @Test
  public void test3()  throws Throwable  {
      ActiveList<Serializable> activeList0 = new ActiveList<Serializable>();
      activeList0.setList(activeList0);
      SortBy sortBy0 = SortBy.ASCENDING;
      // Undeclared exception!
      try {
        activeList0.sortBy("8C,.", sortBy0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      ActiveList<Serializable> activeList0 = new ActiveList<Serializable>();
      // Undeclared exception!
      try {
        activeList0.getList();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
