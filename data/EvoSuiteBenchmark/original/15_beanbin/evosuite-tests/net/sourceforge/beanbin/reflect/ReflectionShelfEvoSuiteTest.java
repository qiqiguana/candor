/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.beanbin.reflect;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sourceforge.beanbin.query.Criteria;
import net.sourceforge.beanbin.query.Query;
import net.sourceforge.beanbin.query.SearchType;
import net.sourceforge.beanbin.reflect.ReflectionShelf;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ReflectionShelfEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ReflectionShelf reflectionShelf0 = ReflectionShelf.getInstance();
      SearchType searchType0 = SearchType.LESSTHANOREQUALTO;
      Criteria criteria0 = new Criteria("", (Object) "OR", searchType0);
      Query query0 = new Query(criteria0);
      Object object0 = reflectionShelf0.get(query0);
      assertNull(object0);
  }

  @Test
  public void test1()  throws Throwable  {
      ReflectionShelf reflectionShelf0 = ReflectionShelf.getInstance();
      SearchType searchType0 = SearchType.LESSTHANOREQUALTO;
      Criteria criteria0 = new Criteria("", (Object) "OR", searchType0);
      Query query0 = new Query(criteria0);
      Object object0 = new Object();
      reflectionShelf0.put(query0, object0);
      assertEquals(" LESSTHANOREQUALTO OR", query0.toString());
  }
}
