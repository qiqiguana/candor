/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.beanbin.data.ejb3.dao.search;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.HashMap;
import java.util.Map;
import net.sourceforge.beanbin.BeanBinException;
import net.sourceforge.beanbin.data.ejb3.dao.Parameters;
import net.sourceforge.beanbin.data.ejb3.dao.search.EqualsBuilder;
import net.sourceforge.beanbin.query.Criteria;
import net.sourceforge.beanbin.query.SearchType;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class EqualsBuilderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      SearchType searchType0 = SearchType.DOESNOTEQUAL;
      Criteria criteria0 = new Criteria("", (Object) "", searchType0);
      HashMap<String, Parameters> hashMap0 = new HashMap<String, Parameters>();
      equalsBuilder0.initialize(criteria0, (Map<String, Parameters>) hashMap0);
      String string0 = equalsBuilder0.getQueryString();
      assertEquals("beanbinmainclass. = :4", equalsBuilder0.getJPAQL());
      assertNotNull(string0);
      assertEquals(" = :2", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      SearchType searchType0 = SearchType.LESSTHAN;
      Criteria criteria0 = new Criteria("*~", (Object) "*~", searchType0);
      HashMap<String, Parameters> hashMap0 = new HashMap<String, Parameters>();
      equalsBuilder0.initialize(criteria0, (Map<String, Parameters>) hashMap0);
      String string0 = equalsBuilder0.getQueryString();
      assertEquals("*~ like '%~'", string0);
      assertNotNull(string0);
  }
}
