/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.beanbin;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.List;
import net.sourceforge.beanbin.AbstractSearcher;
import net.sourceforge.beanbin.ActiveList;
import net.sourceforge.beanbin.ActiveListSearcher;
import net.sourceforge.beanbin.BeanBinException;
import net.sourceforge.beanbin.BeanBinSearcher;
import net.sourceforge.beanbin.Searcher;
import net.sourceforge.beanbin.query.Conditional;
import net.sourceforge.beanbin.query.Query;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AbstractSearcherEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ActiveList<String> activeList0 = new ActiveList<String>();
      // Undeclared exception!
      try {
        activeList0.and();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Class<?> class0 = Conditional.class;
      BeanBinSearcher<Searcher<String>> beanBinSearcher0 = new BeanBinSearcher<Searcher<String>>(class0);
      List<String> list0 = beanBinSearcher0.getIndexProperties();
      beanBinSearcher0.setIndexProperties(list0);
      assertEquals(0, list0.size());
  }

  @Test
  public void test2()  throws Throwable  {
      Class<?> class0 = AbstractSearcher.class;
      BeanBinSearcher<String> beanBinSearcher0 = new BeanBinSearcher<String>(class0);
      try {
        beanBinSearcher0.sortBy("Q");
        fail("Expecting exception: BeanBinException");
      } catch(BeanBinException e) {
        /*
         * BeanBinDAOFactory: Need to specify class name in environment or system property, or as an applet parameter, or in an application resource file:  java.naming.factory.initial
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      BeanBinSearcher<String> beanBinSearcher0 = new BeanBinSearcher<String>();
      Float float0 = new Float((-1792.7184209589673));
      // Undeclared exception!
      try {
        beanBinSearcher0.greaterThanOrEqualTo(";", (Number) float0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      BeanBinSearcher<Object> beanBinSearcher0 = new BeanBinSearcher<Object>();
      // Undeclared exception!
      try {
        beanBinSearcher0.or();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      BeanBinSearcher<Object> beanBinSearcher0 = new BeanBinSearcher<Object>();
      // Undeclared exception!
      try {
        beanBinSearcher0.lessThan("SN4<=", (Number) (short)9);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      BeanBinSearcher<Object> beanBinSearcher0 = new BeanBinSearcher<Object>();
      // Undeclared exception!
      try {
        beanBinSearcher0.greaterThan("S=Lb$N'", (Number) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Class<?> class0 = AbstractSearcher.class;
      BeanBinSearcher<Integer> beanBinSearcher0 = new BeanBinSearcher<Integer>(class0);
      try {
        beanBinSearcher0.contains("]yuFcbc8aU+", "11111111111111111111111111100000");
        fail("Expecting exception: BeanBinException");
      } catch(BeanBinException e) {
        /*
         * BeanBinDAOFactory: Need to specify class name in environment or system property, or as an applet parameter, or in an application resource file:  java.naming.factory.initial
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      Class<?> class0 = Class.class;
      BeanBinSearcher<String> beanBinSearcher0 = new BeanBinSearcher<String>(class0);
      try {
        beanBinSearcher0.fetchSize((-15));
        fail("Expecting exception: BeanBinException");
      } catch(BeanBinException e) {
        /*
         * BeanBinDAOFactory: Need to specify class name in environment or system property, or as an applet parameter, or in an application resource file:  java.naming.factory.initial
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      ActiveListSearcher<Integer> activeListSearcher0 = new ActiveListSearcher<Integer>();
      Long long0 = new Long(15L);
      // Undeclared exception!
      try {
        activeListSearcher0.lessThanOrEqualTo((String) null, (Number) long0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      BeanBinSearcher<Searcher<String>> beanBinSearcher0 = new BeanBinSearcher<Searcher<String>>();
      BeanBinSearcher<String> beanBinSearcher1 = new BeanBinSearcher<String>();
      // Undeclared exception!
      try {
        beanBinSearcher0.matches((String) null, (Object) beanBinSearcher1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      BeanBinSearcher<Object> beanBinSearcher0 = new BeanBinSearcher<Object>();
      Query query0 = new Query();
      // Undeclared exception!
      try {
        beanBinSearcher0.lookup(query0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
