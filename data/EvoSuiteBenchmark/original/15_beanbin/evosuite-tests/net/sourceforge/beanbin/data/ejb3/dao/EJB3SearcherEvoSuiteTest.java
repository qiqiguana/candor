/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.beanbin.data.ejb3.dao;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Locale;
import java.util.Map;
import java.util.Properties;
import javax.persistence.DiscriminatorValue;
import javax.persistence.EntityManager;
import javax.persistence.ExcludeSuperclassListeners;
import javax.persistence.FieldResult;
import javax.persistence.spi.PersistenceUnitTransactionType;
import net.sourceforge.beanbin.BeanBinException;
import net.sourceforge.beanbin.data.ejb3.dao.EJB3Searcher;
import net.sourceforge.beanbin.query.Criteria;
import net.sourceforge.beanbin.query.IndexCriteria;
import net.sourceforge.beanbin.query.Query;
import net.sourceforge.beanbin.query.SearchType;
import net.sourceforge.beanbin.query.SortBy;
import org.dom4j.Node;
import org.hibernate.SessionFactory;
import org.hibernate.ejb.CurrentEntityManagerImpl;
import org.hibernate.event.FlushEvent;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class EJB3SearcherEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Class<?> class0 = Locale.class;
      Query query0 = new Query();
      EJB3Searcher eJB3Searcher0 = new EJB3Searcher((Class) class0, query0, (EntityManager) null);
      // Undeclared exception!
      try {
        eJB3Searcher0.getResults((javax.persistence.Query) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Class<?> class0 = DiscriminatorValue.class;
      Query query0 = new Query();
      EJB3Searcher eJB3Searcher0 = new EJB3Searcher((Class) class0, query0, (EntityManager) null);
      SearchType searchType0 = SearchType.DOESNOTEQUAL;
      Criteria criteria0 = new Criteria("ij{<W'", (Object) "ij{<W'", searchType0);
      query0.add(criteria0);
      // Undeclared exception!
      try {
        eJB3Searcher0.getSize();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Class<?> class0 = DiscriminatorValue.class;
      Query query0 = new Query();
      SortBy sortBy0 = SortBy.ASCENDING;
      query0.setSortBy("", sortBy0);
      EJB3Searcher eJB3Searcher0 = new EJB3Searcher((Class) class0, query0, (EntityManager) null);
      // Undeclared exception!
      try {
        eJB3Searcher0.getSize();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Class<?> class0 = ExcludeSuperclassListeners.class;
      Query query0 = new Query();
      SortBy sortBy0 = SortBy.DESENDING;
      query0.setSortBy("Remove Tmprodcer ", sortBy0);
      EJB3Searcher eJB3Searcher0 = new EJB3Searcher((Class) class0, query0, (EntityManager) null);
      // Undeclared exception!
      try {
        eJB3Searcher0.getSize();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Class<?> class0 = FlushEvent.class;
      Query query0 = new Query();
      query0.setSortBy("", (SortBy) null);
      EJB3Searcher eJB3Searcher0 = new EJB3Searcher((Class) class0, query0, (EntityManager) null);
      // Undeclared exception!
      try {
        eJB3Searcher0.getSize();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      Class<?> class0 = EJB3Searcher.class;
      Query query0 = new Query();
      SearchType searchType0 = SearchType.GREATERTHANOREQUALTO;
      Criteria criteria0 = new Criteria("|Jf", (Object) " for update of |Jf with lock", searchType0);
      query0.and(criteria0);
      EJB3Searcher eJB3Searcher0 = new EJB3Searcher((Class) class0, query0, (EntityManager) null);
      query0.or(criteria0);
      // Undeclared exception!
      try {
        eJB3Searcher0.getResults();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Class<?> class0 = ExcludeSuperclassListeners.class;
      Query query0 = new Query();
      SearchType searchType0 = SearchType.LESSTHAN;
      Criteria criteria0 = new Criteria("Remove Tmprodcer ", (Object) "Remove Tmprodcer ", searchType0);
      query0.add(criteria0);
      query0.and(criteria0);
      EJB3Searcher eJB3Searcher0 = new EJB3Searcher((Class) class0, query0, (EntityManager) null);
      // Undeclared exception!
      try {
        eJB3Searcher0.getSize();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Class<?> class0 = Node.class;
      IndexCriteria indexCriteria0 = new IndexCriteria("Os=j}Qsd", "Os=j}Qsd");
      Query query0 = new Query((Criteria) indexCriteria0);
      PersistenceUnitTransactionType persistenceUnitTransactionType0 = PersistenceUnitTransactionType.RESOURCE_LOCAL;
      Properties properties0 = new Properties();
      CurrentEntityManagerImpl currentEntityManagerImpl0 = new CurrentEntityManagerImpl((SessionFactory) null, persistenceUnitTransactionType0, (Map) properties0);
      EJB3Searcher eJB3Searcher0 = new EJB3Searcher((Class) class0, query0, (EntityManager) currentEntityManagerImpl0);
      try {
        eJB3Searcher0.getSize();
        fail("Expecting exception: BeanBinException");
      } catch(BeanBinException e) {
        /*
         * BeanBinDAOFactory: Need to specify class name in environment or system property, or as an applet parameter, or in an application resource file:  java.naming.factory.initial
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      Class<?> class0 = FieldResult.class;
      SearchType searchType0 = SearchType.EQUALS;
      Criteria criteria0 = new Criteria("after_statement", (Object) "imm_time", searchType0);
      Query query0 = new Query(criteria0);
      EJB3Searcher eJB3Searcher0 = new EJB3Searcher((Class) class0, query0, (EntityManager) null);
      // Undeclared exception!
      try {
        eJB3Searcher0.getResults();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      Class<?> class0 = ExcludeSuperclassListeners.class;
      Query query0 = new Query();
      SearchType searchType0 = SearchType.CONTAINS;
      Criteria criteria0 = new Criteria("Remove Tmprodcer ", (Object) "Remove Tmprodcer ", searchType0);
      query0.and(criteria0);
      EJB3Searcher eJB3Searcher0 = new EJB3Searcher((Class) class0, query0, (EntityManager) null);
      // Undeclared exception!
      try {
        eJB3Searcher0.getSize();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      Class<?> class0 = EJB3Searcher.class;
      SearchType searchType0 = SearchType.LESSTHANOREQUALTO;
      Criteria criteria0 = new Criteria("ij{<W'", (Object) class0, searchType0);
      Query query0 = new Query(criteria0);
      EJB3Searcher eJB3Searcher0 = new EJB3Searcher((Class) class0, query0, (EntityManager) null);
      // Undeclared exception!
      try {
        eJB3Searcher0.getResults();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      SearchType searchType0 = SearchType.GREATERTHAN;
      Criteria criteria0 = new Criteria("", (Object) "ij{<W'", searchType0);
      Query query0 = new Query(criteria0);
      Class<?> class0 = EJB3Searcher.class;
      EJB3Searcher eJB3Searcher0 = new EJB3Searcher((Class) class0, query0, (EntityManager) null);
      // Undeclared exception!
      try {
        eJB3Searcher0.getResults();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
