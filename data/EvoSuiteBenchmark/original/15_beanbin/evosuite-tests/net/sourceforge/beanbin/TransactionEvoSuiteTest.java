/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.beanbin;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sourceforge.beanbin.BeanBinException;
import net.sourceforge.beanbin.Transaction;
import net.sourceforge.beanbin.command.ActiveListCommand;
import net.sourceforge.beanbin.command.RemoveEntity;
import net.sourceforge.beanbin.data.BeanBinDAO;
import net.sourceforge.beanbin.data.ejb3.EJB3BeanBinDAO;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TransactionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Class<?> class0 = Transaction.class;
      EJB3BeanBinDAO eJB3BeanBinDAO0 = new EJB3BeanBinDAO();
      Transaction transaction0 = new Transaction((BeanBinDAO) eJB3BeanBinDAO0, (Class) class0);
      transaction0.addCommand((ActiveListCommand) null);
      assertEquals(false, transaction0.hasNotBegun());
  }

  @Test
  public void test1()  throws Throwable  {
      EJB3BeanBinDAO eJB3BeanBinDAO0 = new EJB3BeanBinDAO();
      Class<?> class0 = Transaction.class;
      Transaction transaction0 = new Transaction((BeanBinDAO) eJB3BeanBinDAO0, (Class) class0);
      transaction0.begin();
      RemoveEntity removeEntity0 = new RemoveEntity((Object) "DESENDING");
      transaction0.addCommand((ActiveListCommand) removeEntity0);
      assertEquals(false, transaction0.hasNotBegun());
  }

  @Test
  public void test2()  throws Throwable  {
      EJB3BeanBinDAO eJB3BeanBinDAO0 = new EJB3BeanBinDAO();
      Class<?> class0 = Transaction.class;
      Transaction transaction0 = new Transaction((BeanBinDAO) eJB3BeanBinDAO0, (Class) class0);
      transaction0.begin();
      // Undeclared exception!
      try {
        transaction0.commit();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Class<?> class0 = Transaction.class;
      EJB3BeanBinDAO eJB3BeanBinDAO0 = new EJB3BeanBinDAO();
      Transaction transaction0 = new Transaction((BeanBinDAO) eJB3BeanBinDAO0, (Class) class0);
      try {
        transaction0.commit();
        fail("Expecting exception: BeanBinException");
      } catch(BeanBinException e) {
        /*
         * You must begin a transaction before you can commit.
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      EJB3BeanBinDAO eJB3BeanBinDAO0 = new EJB3BeanBinDAO();
      Class<?> class0 = Transaction.class;
      Transaction transaction0 = new Transaction((BeanBinDAO) eJB3BeanBinDAO0, (Class) class0);
      transaction0.begin();
      boolean boolean0 = transaction0.hasNotBegun();
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      EJB3BeanBinDAO eJB3BeanBinDAO0 = new EJB3BeanBinDAO();
      Class<?> class0 = Transaction.class;
      Transaction transaction0 = new Transaction((BeanBinDAO) eJB3BeanBinDAO0, (Class) class0);
      boolean boolean0 = transaction0.hasNotBegun();
      assertEquals(true, boolean0);
  }
}
