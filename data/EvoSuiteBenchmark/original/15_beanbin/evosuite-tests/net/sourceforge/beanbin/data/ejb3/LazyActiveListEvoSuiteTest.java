/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.beanbin.data.ejb3;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Set;
import net.sourceforge.beanbin.ActiveList;
import net.sourceforge.beanbin.data.ejb3.LazyActiveList;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LazyActiveListEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LazyActiveList<Integer> lazyActiveList0 = new LazyActiveList<Integer>();
      lazyActiveList0.setProperty("vFJMpxz[5w1gJ");
      assertEquals("vFJMpxz[5w1gJ", lazyActiveList0.getProperty());
  }

  @Test
  public void test1()  throws Throwable  {
      LazyActiveList<ActiveList<Object>> lazyActiveList0 = new LazyActiveList<ActiveList<Object>>();
      ActiveList<Object> activeList0 = new ActiveList<Object>();
      // Undeclared exception!
      try {
        lazyActiveList0.add(activeList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      LazyActiveList<Object> lazyActiveList0 = new LazyActiveList<Object>();
      boolean boolean0 = lazyActiveList0.isInitialized();
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      LazyActiveList<String> lazyActiveList0 = new LazyActiveList<String>();
      String string0 = lazyActiveList0.getProperty();
      assertNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      LazyActiveList<ActiveList<ActiveList<Integer>>> lazyActiveList0 = new LazyActiveList<ActiveList<ActiveList<Integer>>>();
      lazyActiveList0.setKey((Object) null);
      assertNull(lazyActiveList0.getProperty());
  }

  @Test
  public void test5()  throws Throwable  {
      LazyActiveList<Set<Object>> lazyActiveList0 = new LazyActiveList<Set<Object>>();
      Object object0 = lazyActiveList0.getKey();
      assertNull(object0);
  }

  @Test
  public void test6()  throws Throwable  {
      LazyActiveList<String> lazyActiveList0 = new LazyActiveList<String>();
      lazyActiveList0.setInitialized(false);
      assertEquals(false, lazyActiveList0.isInitialized());
  }
}
