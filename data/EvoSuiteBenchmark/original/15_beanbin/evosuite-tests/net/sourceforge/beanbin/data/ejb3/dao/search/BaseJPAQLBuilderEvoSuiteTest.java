/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.beanbin.data.ejb3.dao.search;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.HashMap;
import java.util.Map;
import net.sourceforge.beanbin.BeanBinException;
import net.sourceforge.beanbin.data.ejb3.dao.Parameters;
import net.sourceforge.beanbin.data.ejb3.dao.search.ContainsBuilder;
import net.sourceforge.beanbin.data.ejb3.dao.search.GreaterThanBuilder;
import net.sourceforge.beanbin.data.ejb3.dao.search.WildcardBuilder;
import net.sourceforge.beanbin.query.Criteria;
import net.sourceforge.beanbin.query.SearchType;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BaseJPAQLBuilderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      GreaterThanBuilder greaterThanBuilder0 = new GreaterThanBuilder();
      SearchType searchType0 = SearchType.GREATERTHAN;
      Criteria criteria0 = new Criteria(")o@eiDq'7I{PZ", (Object) "GREATERTHAN", searchType0);
      HashMap<String, Parameters> hashMap0 = new HashMap<String, Parameters>();
      greaterThanBuilder0.initialize(criteria0, (Map<String, Parameters>) hashMap0);
      String string0 = greaterThanBuilder0.getQueryString();
      assertNotNull(string0);
      
      String string1 = greaterThanBuilder0.getQueryString();
      assertEquals(9, greaterThanBuilder0.getIndex());
      assertFalse(string1.equals(string0));
  }

  @Test
  public void test1()  throws Throwable  {
      WildcardBuilder wildcardBuilder0 = new WildcardBuilder();
      try {
        wildcardBuilder0.getParameters();
        fail("Expecting exception: BeanBinException");
      } catch(BeanBinException e) {
        /*
         * You must initialize this JPA-QL Builder before you can use it!
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ContainsBuilder containsBuilder0 = new ContainsBuilder();
      try {
        containsBuilder0.getJPAQL();
        fail("Expecting exception: BeanBinException");
      } catch(BeanBinException e) {
        /*
         * You must initialize this JPA-QL Builder before you can use it!
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      SearchType searchType0 = SearchType.GREATERTHAN;
      Criteria criteria0 = new Criteria(")o@eiDq'7I{PZ", (Object) "GREATERTHAN", searchType0);
      HashMap<String, Parameters> hashMap0 = new HashMap<String, Parameters>();
      ContainsBuilder containsBuilder0 = new ContainsBuilder();
      containsBuilder0.initialize(criteria0, (Map<String, Parameters>) hashMap0);
      String string0 = containsBuilder0.getJPAQL();
      assertNotNull(string0);
  }
}
