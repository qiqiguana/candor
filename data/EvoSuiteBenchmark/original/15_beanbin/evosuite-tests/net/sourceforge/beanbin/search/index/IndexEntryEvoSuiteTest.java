/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.beanbin.search.index;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.List;
import net.sourceforge.beanbin.search.index.IndexEntry;
import net.sourceforge.beanbin.search.index.IndexField;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class IndexEntryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Class<?> class0 = IndexEntry.class;
      Object object0 = new Object();
      IndexEntry indexEntry0 = new IndexEntry((Class) class0, object0);
      List<IndexField> list0 = indexEntry0.getFields();
      assertEquals(0, list0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      Class<?> class0 = Class.class;
      IndexEntry indexEntry0 = new IndexEntry((Class) class0, (Object) "");
      Class<Object> class1 = indexEntry0.getTargetClass();
      assertEquals(false, class1.isLocalClass());
  }

  @Test
  public void test2()  throws Throwable  {
      Class<?> class0 = Class.class;
      Object object0 = new Object();
      IndexEntry indexEntry0 = new IndexEntry((Class) class0, object0);
      Object object1 = indexEntry0.getKey();
      assertSame(object0, object1);
  }

  @Test
  public void test3()  throws Throwable  {
      Class<?> class0 = IndexField.class;
      IndexEntry indexEntry0 = new IndexEntry((Class) class0, (Object) null);
      IndexField indexField0 = new IndexField("LlU");
      indexEntry0.addField(indexField0);
      IndexField indexField1 = indexEntry0.getField("");
      assertNull(indexField1);
  }

  @Test
  public void test4()  throws Throwable  {
      Class<?> class0 = IndexEntry.class;
      Object object0 = new Object();
      IndexEntry indexEntry0 = new IndexEntry((Class) class0, object0);
      IndexField indexField0 = new IndexField("97>h!;$U");
      indexEntry0.addField(indexField0);
      IndexField indexField1 = indexEntry0.getField("97>h!;$U");
      assertSame(indexField1, indexField0);
  }
}
