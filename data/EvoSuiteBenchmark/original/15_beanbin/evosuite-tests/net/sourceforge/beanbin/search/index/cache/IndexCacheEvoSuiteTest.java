/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.beanbin.search.index.cache;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.List;
import net.sourceforge.beanbin.BeanBinException;
import net.sourceforge.beanbin.search.index.cache.IndexCache;
import net.sourceforge.beanbin.search.index.cache.Properties;
import net.sourceforge.beanbin.search.index.cache.Results;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class IndexCacheEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      IndexCache indexCache0 = new IndexCache();
      Class<?> class0 = Object.class;
      Results results0 = new Results();
      indexCache0.add((Class) class0, results0);
      indexCache0.addCache(indexCache0);
  }

  @Test
  public void test1()  throws Throwable  {
      IndexCache indexCache0 = new IndexCache();
      Class<?> class0 = Object.class;
      Results results0 = new Results();
      String string0 = "UkY\\u_";
      List<String> list0 = indexCache0.getValues((Class) class0, (Object) results0, string0);
      assertNull(list0);
  }

  @Test
  public void test2()  throws Throwable  {
      IndexCache indexCache0 = new IndexCache();
      Class<?> class0 = Object.class;
      Results results0 = new Results();
      String string0 = "UkY\\u_";
      Object object0 = new Object();
      indexCache0.add((Class) class0, results0);
      List<String> list0 = indexCache0.getValues((Class) class0, object0, string0);
      assertNull(list0);
  }

  @Test
  public void test3()  throws Throwable  {
      IndexCache indexCache0 = new IndexCache();
      Class<?> class0 = Properties.class;
      Results results0 = new Results();
      indexCache0.add((Class) class0, results0);
      Properties properties0 = new Properties();
      results0.add((Object) "[]", properties0);
      List<String> list0 = indexCache0.getValues((Class) class0, (Object) "[]", "[]");
      assertNull(list0);
  }

  @Test
  public void test4()  throws Throwable  {
      IndexCache indexCache0 = new IndexCache();
      Class<?> class0 = Object.class;
      Results results0 = new Results();
      IndexCache indexCache1 = new IndexCache();
      indexCache1.add((Class) class0, results0);
      indexCache0.addCache(indexCache1);
      assertNotSame(indexCache1, indexCache0);
  }
}
