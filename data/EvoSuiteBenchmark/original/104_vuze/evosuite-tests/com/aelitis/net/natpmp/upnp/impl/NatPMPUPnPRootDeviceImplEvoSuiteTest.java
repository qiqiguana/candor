/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.net.natpmp.upnp.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.plugins.upnp.UPnPPlugin;
import com.aelitis.net.natpmp.NatPMPDevice;
import com.aelitis.net.natpmp.upnp.impl.NatPMPUPnPRootDeviceImpl;
import com.aelitis.net.upnp.UPnP;
import com.aelitis.net.upnp.UPnPException;
import com.aelitis.net.upnp.UPnPRootDeviceListener;
import com.aelitis.net.upnp.services.UPnPWANConnectionListener;
import java.net.URL;
import org.evosuite.testcase.TestCaseExecutor;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class NatPMPUPnPRootDeviceImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      NatPMPUPnPRootDeviceImpl natPMPUPnPRootDeviceImpl0 = new NatPMPUPnPRootDeviceImpl((UPnP) null, (NatPMPDevice) null);
      assertNotNull(natPMPUPnPRootDeviceImpl0);
      
      NatPMPUPnPRootDeviceImpl.NatPMPUPnPDevice natPMPUPnPRootDeviceImpl_NatPMPUPnPDevice0 = natPMPUPnPRootDeviceImpl0.new NatPMPUPnPDevice();
      natPMPUPnPRootDeviceImpl_NatPMPUPnPDevice0.getModelURL();
      assertEquals("natpmp", natPMPUPnPRootDeviceImpl0.getUSN());
  }

  @Test
  public void test1()  throws Throwable  {
      NatPMPUPnPRootDeviceImpl natPMPUPnPRootDeviceImpl0 = new NatPMPUPnPRootDeviceImpl((UPnP) null, (NatPMPDevice) null);
      assertNotNull(natPMPUPnPRootDeviceImpl0);
      
      NatPMPUPnPRootDeviceImpl.NatPMPUPnPDevice natPMPUPnPRootDeviceImpl_NatPMPUPnPDevice0 = natPMPUPnPRootDeviceImpl0.new NatPMPUPnPDevice();
      String string0 = natPMPUPnPRootDeviceImpl_NatPMPUPnPDevice0.getDeviceType();
      assertEquals("natpmp", natPMPUPnPRootDeviceImpl0.getUSN());
      assertEquals("NatPMP", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      NatPMPUPnPRootDeviceImpl natPMPUPnPRootDeviceImpl0 = new NatPMPUPnPRootDeviceImpl((UPnP) null, (NatPMPDevice) null);
      assertNotNull(natPMPUPnPRootDeviceImpl0);
      
      NatPMPUPnPRootDeviceImpl.NatPMPUPnPDevice natPMPUPnPRootDeviceImpl_NatPMPUPnPDevice0 = natPMPUPnPRootDeviceImpl0.new NatPMPUPnPDevice();
      natPMPUPnPRootDeviceImpl_NatPMPUPnPDevice0.getManufacturer();
      assertEquals("natpmp", natPMPUPnPRootDeviceImpl0.getUSN());
  }

  @Test
  public void test3()  throws Throwable  {
      NatPMPUPnPRootDeviceImpl natPMPUPnPRootDeviceImpl0 = new NatPMPUPnPRootDeviceImpl((UPnP) null, (NatPMPDevice) null);
      assertNotNull(natPMPUPnPRootDeviceImpl0);
      
      NatPMPUPnPRootDeviceImpl.NatPMPUPnPDevice natPMPUPnPRootDeviceImpl_NatPMPUPnPDevice0 = natPMPUPnPRootDeviceImpl0.new NatPMPUPnPDevice();
      natPMPUPnPRootDeviceImpl_NatPMPUPnPDevice0.getManufacturerURL();
      assertEquals("natpmp", natPMPUPnPRootDeviceImpl0.getUSN());
  }

  @Test
  public void test4()  throws Throwable  {
      NatPMPUPnPRootDeviceImpl natPMPUPnPRootDeviceImpl0 = new NatPMPUPnPRootDeviceImpl((UPnP) null, (NatPMPDevice) null);
      assertNotNull(natPMPUPnPRootDeviceImpl0);
      
      NatPMPUPnPRootDeviceImpl.NatPMPUPnPDevice natPMPUPnPRootDeviceImpl_NatPMPUPnPDevice0 = natPMPUPnPRootDeviceImpl0.new NatPMPUPnPDevice();
      natPMPUPnPRootDeviceImpl_NatPMPUPnPDevice0.getModelDescription();
      assertEquals("natpmp", natPMPUPnPRootDeviceImpl0.getUSN());
  }

  @Test
  public void test5()  throws Throwable  {
      NatPMPUPnPRootDeviceImpl natPMPUPnPRootDeviceImpl0 = new NatPMPUPnPRootDeviceImpl((UPnP) null, (NatPMPDevice) null);
      assertNotNull(natPMPUPnPRootDeviceImpl0);
      
      NatPMPUPnPRootDeviceImpl.NatPMPUPnPWANConnection natPMPUPnPRootDeviceImpl_NatPMPUPnPWANConnection0 = natPMPUPnPRootDeviceImpl0.new NatPMPUPnPWANConnection();
      natPMPUPnPRootDeviceImpl_NatPMPUPnPWANConnection0.deletePortMapping(true, 0);
      assertEquals("natpmp", natPMPUPnPRootDeviceImpl0.getUSN());
  }

  @Test
  public void test6()  throws Throwable  {
      NatPMPUPnPRootDeviceImpl natPMPUPnPRootDeviceImpl0 = new NatPMPUPnPRootDeviceImpl((UPnP) null, (NatPMPDevice) null);
      assertNotNull(natPMPUPnPRootDeviceImpl0);
      
      NatPMPUPnPRootDeviceImpl.NatPMPUPnPWANConnection natPMPUPnPRootDeviceImpl_NatPMPUPnPWANConnection0 = natPMPUPnPRootDeviceImpl0.new NatPMPUPnPWANConnection();
      natPMPUPnPRootDeviceImpl_NatPMPUPnPWANConnection0.addPortMapping(true, (-1291), "on<#*WV'1kV");
      assertEquals("natpmp", natPMPUPnPRootDeviceImpl0.getUSN());
  }

  @Test
  public void test7()  throws Throwable  {
      NatPMPUPnPRootDeviceImpl natPMPUPnPRootDeviceImpl0 = new NatPMPUPnPRootDeviceImpl((UPnP) null, (NatPMPDevice) null);
      assertNotNull(natPMPUPnPRootDeviceImpl0);
      
      NatPMPUPnPRootDeviceImpl.NatPMPUPnPWANConnection natPMPUPnPRootDeviceImpl_NatPMPUPnPWANConnection0 = natPMPUPnPRootDeviceImpl0.new NatPMPUPnPWANConnection();
      // Undeclared exception!
      try {
        natPMPUPnPRootDeviceImpl_NatPMPUPnPWANConnection0.getExternalIPAddress();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      NatPMPUPnPRootDeviceImpl natPMPUPnPRootDeviceImpl0 = new NatPMPUPnPRootDeviceImpl((UPnP) null, (NatPMPDevice) null);
      NatPMPUPnPRootDeviceImpl.NatPMPUPnPWANConnection natPMPUPnPRootDeviceImpl_NatPMPUPnPWANConnection0 = natPMPUPnPRootDeviceImpl0.new NatPMPUPnPWANConnection();
      UPnPPlugin uPnPPlugin0 = new UPnPPlugin();
      natPMPUPnPRootDeviceImpl_NatPMPUPnPWANConnection0.removeListener((UPnPWANConnectionListener) uPnPPlugin0);
  }

  @Test
  public void test9()  throws Throwable  {
      NatPMPUPnPRootDeviceImpl natPMPUPnPRootDeviceImpl0 = new NatPMPUPnPRootDeviceImpl((UPnP) null, (NatPMPDevice) null);
      assertNotNull(natPMPUPnPRootDeviceImpl0);
      
      NatPMPUPnPRootDeviceImpl.NatPMPUPnPWANConnection natPMPUPnPRootDeviceImpl_NatPMPUPnPWANConnection0 = natPMPUPnPRootDeviceImpl0.new NatPMPUPnPWANConnection();
      boolean boolean0 = natPMPUPnPRootDeviceImpl_NatPMPUPnPWANConnection0.isConnectable();
      assertEquals("natpmp", natPMPUPnPRootDeviceImpl0.getUSN());
      assertEquals(true, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      NatPMPUPnPRootDeviceImpl natPMPUPnPRootDeviceImpl0 = new NatPMPUPnPRootDeviceImpl((UPnP) null, (NatPMPDevice) null);
      assertNotNull(natPMPUPnPRootDeviceImpl0);
      
      NatPMPUPnPRootDeviceImpl.NatPMPUPnPWANConnection natPMPUPnPRootDeviceImpl_NatPMPUPnPWANConnection0 = natPMPUPnPRootDeviceImpl0.new NatPMPUPnPWANConnection();
      natPMPUPnPRootDeviceImpl_NatPMPUPnPWANConnection0.getGenericService();
      assertEquals("natpmp", natPMPUPnPRootDeviceImpl0.getUSN());
  }

  @Test
  public void test11()  throws Throwable  {
      NatPMPUPnPRootDeviceImpl natPMPUPnPRootDeviceImpl0 = new NatPMPUPnPRootDeviceImpl((UPnP) null, (NatPMPDevice) null);
      assertNotNull(natPMPUPnPRootDeviceImpl0);
      
      NatPMPUPnPRootDeviceImpl.NatPMPUPnPWANConnection natPMPUPnPRootDeviceImpl_NatPMPUPnPWANConnection0 = natPMPUPnPRootDeviceImpl0.new NatPMPUPnPWANConnection();
      natPMPUPnPRootDeviceImpl_NatPMPUPnPWANConnection0.getAction("");
      assertEquals("natpmp", natPMPUPnPRootDeviceImpl0.getUSN());
  }

  @Test
  public void test12()  throws Throwable  {
      NatPMPUPnPRootDeviceImpl natPMPUPnPRootDeviceImpl0 = new NatPMPUPnPRootDeviceImpl((UPnP) null, (NatPMPDevice) null);
      assertNotNull(natPMPUPnPRootDeviceImpl0);
      
      NatPMPUPnPRootDeviceImpl.NatPMPUPnPWANConnection natPMPUPnPRootDeviceImpl_NatPMPUPnPWANConnection0 = natPMPUPnPRootDeviceImpl0.new NatPMPUPnPWANConnection();
      natPMPUPnPRootDeviceImpl_NatPMPUPnPWANConnection0.getActions();
      assertEquals("natpmp", natPMPUPnPRootDeviceImpl0.getUSN());
  }

  @Test
  public void test13()  throws Throwable  {
      NatPMPUPnPRootDeviceImpl natPMPUPnPRootDeviceImpl0 = new NatPMPUPnPRootDeviceImpl((UPnP) null, (NatPMPDevice) null);
      assertNotNull(natPMPUPnPRootDeviceImpl0);
      
      NatPMPUPnPRootDeviceImpl.NatPMPUPnPWANConnection natPMPUPnPRootDeviceImpl_NatPMPUPnPWANConnection0 = natPMPUPnPRootDeviceImpl0.new NatPMPUPnPWANConnection();
      natPMPUPnPRootDeviceImpl_NatPMPUPnPWANConnection0.getStateVariable("");
      assertEquals("natpmp", natPMPUPnPRootDeviceImpl0.getUSN());
  }

  @Test
  public void test14()  throws Throwable  {
      NatPMPUPnPRootDeviceImpl natPMPUPnPRootDeviceImpl0 = new NatPMPUPnPRootDeviceImpl((UPnP) null, (NatPMPDevice) null);
      assertNotNull(natPMPUPnPRootDeviceImpl0);
      
      NatPMPUPnPRootDeviceImpl.NatPMPUPnPWANConnection natPMPUPnPRootDeviceImpl_NatPMPUPnPWANConnection0 = natPMPUPnPRootDeviceImpl0.new NatPMPUPnPWANConnection();
      boolean boolean0 = natPMPUPnPRootDeviceImpl_NatPMPUPnPWANConnection0.getDirectInvocations();
      assertEquals(true, boolean0);
      assertEquals("natpmp", natPMPUPnPRootDeviceImpl0.getUSN());
  }

  @Test
  public void test15()  throws Throwable  {
      NatPMPUPnPRootDeviceImpl natPMPUPnPRootDeviceImpl0 = new NatPMPUPnPRootDeviceImpl((UPnP) null, (NatPMPDevice) null);
      assertNotNull(natPMPUPnPRootDeviceImpl0);
      
      natPMPUPnPRootDeviceImpl0.getUPnP();
      assertEquals("natpmp", natPMPUPnPRootDeviceImpl0.getUSN());
  }

  @Test
  public void test16()  throws Throwable  {
      NatPMPUPnPRootDeviceImpl natPMPUPnPRootDeviceImpl0 = new NatPMPUPnPRootDeviceImpl((UPnP) null, (NatPMPDevice) null);
      assertNotNull(natPMPUPnPRootDeviceImpl0);
      
      URL uRL0 = natPMPUPnPRootDeviceImpl0.getLocation();
      assertNotNull(uRL0);
      assertEquals("natpmp", natPMPUPnPRootDeviceImpl0.getUSN());
  }

  @Test
  public void test17()  throws Throwable  {
      NatPMPUPnPRootDeviceImpl natPMPUPnPRootDeviceImpl0 = new NatPMPUPnPRootDeviceImpl((UPnP) null, (NatPMPDevice) null);
      assertNotNull(natPMPUPnPRootDeviceImpl0);
      
      natPMPUPnPRootDeviceImpl0.removeListener((UPnPRootDeviceListener) null);
      assertEquals("natpmp", natPMPUPnPRootDeviceImpl0.getUSN());
  }

  @Test
  public void test18()  throws Throwable  {
      NatPMPUPnPRootDeviceImpl natPMPUPnPRootDeviceImpl0 = new NatPMPUPnPRootDeviceImpl((UPnP) null, (NatPMPDevice) null);
      assertNotNull(natPMPUPnPRootDeviceImpl0);
      
      String string0 = natPMPUPnPRootDeviceImpl0.getInfo();
      assertEquals("Nat-PMP", string0);
      assertEquals("natpmp", natPMPUPnPRootDeviceImpl0.getUSN());
  }

  @Test
  public void test19()  throws Throwable  {
      NatPMPUPnPRootDeviceImpl natPMPUPnPRootDeviceImpl0 = new NatPMPUPnPRootDeviceImpl((UPnP) null, (NatPMPDevice) null);
      assertNotNull(natPMPUPnPRootDeviceImpl0);
      
      String string0 = natPMPUPnPRootDeviceImpl0.getUSN();
      assertEquals("natpmp", string0);
      assertNotNull(string0);
  }

  @Test
  public void test20()  throws Throwable  {
      NatPMPUPnPRootDeviceImpl natPMPUPnPRootDeviceImpl0 = new NatPMPUPnPRootDeviceImpl((UPnP) null, (NatPMPDevice) null);
      assertNotNull(natPMPUPnPRootDeviceImpl0);
      
      boolean boolean0 = natPMPUPnPRootDeviceImpl0.isDestroyed();
      assertEquals(false, boolean0);
      assertEquals("natpmp", natPMPUPnPRootDeviceImpl0.getUSN());
  }
}
