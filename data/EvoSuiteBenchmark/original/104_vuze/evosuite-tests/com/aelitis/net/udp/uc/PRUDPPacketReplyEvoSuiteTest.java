/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.net.udp.uc;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.versioncheck.VersionCheckClientUDPReply;
import com.aelitis.net.udp.uc.PRUDPPacketHandler;
import com.aelitis.net.udp.uc.PRUDPPacketReply;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PRUDPPacketReplyEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      VersionCheckClientUDPReply versionCheckClientUDPReply0 = new VersionCheckClientUDPReply(7);
      String string0 = versionCheckClientUDPReply0.getString();
      assertEquals("type=33,addr=null:reply[trans=7]", string0);
      assertNotNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      VersionCheckClientUDPReply versionCheckClientUDPReply0 = new VersionCheckClientUDPReply(7);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) byteArrayOutputStream0);
      versionCheckClientUDPReply0.serialise(dataOutputStream0);
      assertEquals(10, dataOutputStream0.size());
      assertEquals("\u0000\u0000\u0000!\u0000\u0000\u0000\u0007\u0000\u0000", byteArrayOutputStream0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      InetSocketAddress inetSocketAddress0 = new InetSocketAddress(1028);
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte)24;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (int) (byte)0, 1028);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) bufferedInputStream0);
      try {
        PRUDPPacketReply.deserialiseReply((PRUDPPacketHandler) null, inetSocketAddress0, dataInputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * No decoder registered for action '24'
         */
      }
  }
}
