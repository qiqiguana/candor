/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.net.natpmp.upnp.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.net.natpmp.NatPMPDevice;
import com.aelitis.net.natpmp.upnp.impl.NatPMPImpl;
import com.aelitis.net.upnp.UPnPException;
import com.aelitis.net.upnp.services.UPnPWANConnectionPortMapping;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class NatPMPImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      NatPMPImpl natPMPImpl0 = new NatPMPImpl((NatPMPDevice) null);
      NatPMPImpl.portMapping natPMPImpl_portMapping0 = natPMPImpl0.new portMapping(32767, true, "zKMxJI>:9E-tTC0", "zKMxJI>:9E-tTC0");
      String string0 = natPMPImpl_portMapping0.getInternalHost();
      assertNotNull(string0);
      assertEquals(true, natPMPImpl_portMapping0.isTCP());
      assertEquals("zKMxJI>:9E-tTC0 [32767:TCP]", natPMPImpl_portMapping0.getString());
      assertEquals(32767, natPMPImpl_portMapping0.getExternalPort());
  }

  @Test
  public void test1()  throws Throwable  {
      NatPMPImpl natPMPImpl0 = new NatPMPImpl((NatPMPDevice) null);
      NatPMPImpl.portMapping natPMPImpl_portMapping0 = natPMPImpl0.new portMapping(1821, false, "|", "|");
      String string0 = natPMPImpl_portMapping0.getString();
      assertNotNull(string0);
      assertEquals("| [1821:UDP]", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      NatPMPImpl natPMPImpl0 = new NatPMPImpl((NatPMPDevice) null);
      UPnPWANConnectionPortMapping[] uPnPWANConnectionPortMappingArray0 = natPMPImpl0.getPortMappings();
      assertNotNull(uPnPWANConnectionPortMappingArray0);
  }

  @Test
  public void test3()  throws Throwable  {
      NatPMPImpl natPMPImpl0 = new NatPMPImpl((NatPMPDevice) null);
      // Undeclared exception!
      try {
        natPMPImpl0.getStatusInfo();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      NatPMPImpl natPMPImpl0 = new NatPMPImpl((NatPMPDevice) null);
      // Undeclared exception!
      try {
        natPMPImpl0.getExternalIPAddress();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      NatPMPImpl natPMPImpl0 = new NatPMPImpl((NatPMPDevice) null);
      NatPMPImpl.portMapping natPMPImpl_portMapping0 = natPMPImpl0.new portMapping(32767, true, "zKMxJI>:9E-tTC0", "zKMxJI>:9E-tTC0");
      String string0 = natPMPImpl_portMapping0.getString();
      assertEquals(true, natPMPImpl_portMapping0.isTCP());
      assertNotNull(string0);
      assertEquals("zKMxJI>:9E-tTC0 [32767:TCP]", string0);
  }
}
