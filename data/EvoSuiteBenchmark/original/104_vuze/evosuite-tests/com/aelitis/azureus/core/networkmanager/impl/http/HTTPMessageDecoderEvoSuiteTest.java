/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.networkmanager.impl.http;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.networkmanager.Transport;
import com.aelitis.azureus.core.networkmanager.impl.http.HTTPMessageDecoder;
import com.aelitis.azureus.core.networkmanager.impl.http.HTTPNetworkConnection;
import com.aelitis.azureus.core.peermanager.messaging.Message;
import com.aelitis.azureus.core.peermanager.messaging.bittorrent.BTUnchoke;
import java.io.IOException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class HTTPMessageDecoderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HTTPMessageDecoder hTTPMessageDecoder0 = new HTTPMessageDecoder();
      int int0 = hTTPMessageDecoder0.getProtocolBytesDecoded();
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      HTTPMessageDecoder hTTPMessageDecoder0 = new HTTPMessageDecoder();
      int int0 = hTTPMessageDecoder0.getDataBytesDecoded();
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      HTTPMessageDecoder hTTPMessageDecoder0 = new HTTPMessageDecoder();
      BTUnchoke bTUnchoke0 = new BTUnchoke((byte) (-15));
      // Undeclared exception!
      try {
        hTTPMessageDecoder0.addMessage((Message) bTUnchoke0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      HTTPMessageDecoder hTTPMessageDecoder0 = new HTTPMessageDecoder("");
      hTTPMessageDecoder0.pauseDecoding();
      assertEquals(0, hTTPMessageDecoder0.getPercentDoneOfCurrentMessage());
  }

  @Test
  public void test4()  throws Throwable  {
      HTTPMessageDecoder hTTPMessageDecoder0 = new HTTPMessageDecoder("ilKeb0e]~+]M?/t[^u");
      assertNotNull(hTTPMessageDecoder0);
      
      int int0 = hTTPMessageDecoder0.getPercentDoneOfCurrentMessage();
      assertEquals(0, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      HTTPMessageDecoder hTTPMessageDecoder0 = new HTTPMessageDecoder();
      int int0 = hTTPMessageDecoder0.getQueueSize();
      assertEquals(0, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      HTTPMessageDecoder hTTPMessageDecoder0 = new HTTPMessageDecoder();
      hTTPMessageDecoder0.pauseInternally();
      assertEquals(0, hTTPMessageDecoder0.getDataBytesDecoded());
  }

  @Test
  public void test7()  throws Throwable  {
      HTTPMessageDecoder hTTPMessageDecoder0 = new HTTPMessageDecoder();
      hTTPMessageDecoder0.setConnection((HTTPNetworkConnection) null);
      assertEquals(0, hTTPMessageDecoder0.getProtocolBytesDecoded());
  }

  @Test
  public void test8()  throws Throwable  {
      HTTPMessageDecoder hTTPMessageDecoder0 = new HTTPMessageDecoder();
      hTTPMessageDecoder0.destroy();
      // Undeclared exception!
      try {
        hTTPMessageDecoder0.setConnection((HTTPNetworkConnection) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      HTTPMessageDecoder hTTPMessageDecoder0 = new HTTPMessageDecoder("");
      try {
        hTTPMessageDecoder0.performStreamDecode((Transport) null, (-648));
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * Internal error - connection not yet assigned
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      HTTPMessageDecoder hTTPMessageDecoder0 = new HTTPMessageDecoder("ilKeb0e]~+]M?/t[^u");
      Message[] messageArray0 = hTTPMessageDecoder0.removeDecodedMessages();
      assertNull(messageArray0);
  }

  @Test
  public void test11()  throws Throwable  {
      HTTPMessageDecoder hTTPMessageDecoder0 = new HTTPMessageDecoder();
      hTTPMessageDecoder0.destroy();
      hTTPMessageDecoder0.resumeDecoding();
      assertEquals(0, hTTPMessageDecoder0.getQueueSize());
  }

  @Test
  public void test12()  throws Throwable  {
      HTTPMessageDecoder hTTPMessageDecoder0 = new HTTPMessageDecoder();
      hTTPMessageDecoder0.resumeDecoding();
      assertEquals(0, hTTPMessageDecoder0.getQueueSize());
  }
}
