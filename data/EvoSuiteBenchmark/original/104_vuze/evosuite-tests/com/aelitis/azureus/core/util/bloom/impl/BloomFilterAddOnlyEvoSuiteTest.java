/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.util.bloom.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.util.bloom.impl.BloomFilterAddOnly;
import java.util.Map;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BloomFilterAddOnlyEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BloomFilterAddOnly bloomFilterAddOnly0 = new BloomFilterAddOnly(1);
      assertNotNull(bloomFilterAddOnly0);
      
      Map<String, Object> map0 = bloomFilterAddOnly0.serialiseToMap();
      assertNotNull(map0);
      
      BloomFilterAddOnly bloomFilterAddOnly1 = new BloomFilterAddOnly(map0);
      assertEquals(4, map0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      BloomFilterAddOnly bloomFilterAddOnly0 = new BloomFilterAddOnly(0);
      BloomFilterAddOnly bloomFilterAddOnly1 = (BloomFilterAddOnly)bloomFilterAddOnly0.getReplica();
      assertEquals("ent=0,max=1", bloomFilterAddOnly1.getString());
  }

  @Test
  public void test2()  throws Throwable  {
      BloomFilterAddOnly bloomFilterAddOnly0 = new BloomFilterAddOnly(1);
      assertNotNull(bloomFilterAddOnly0);
      
      byte[] byteArray0 = new byte[1];
      int int0 = bloomFilterAddOnly0.add(byteArray0);
      assertEquals(1, bloomFilterAddOnly0.getEntryCount());
      assertEquals(1, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      BloomFilterAddOnly bloomFilterAddOnly0 = new BloomFilterAddOnly(1912);
      assertNotNull(bloomFilterAddOnly0);
      
      byte[] byteArray0 = new byte[1];
      int int0 = bloomFilterAddOnly0.remove(byteArray0);
      assertEquals(0, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      BloomFilterAddOnly bloomFilterAddOnly0 = new BloomFilterAddOnly(10000);
      assertNotNull(bloomFilterAddOnly0);
      
      int int0 = bloomFilterAddOnly0.trimValue(10000);
      assertEquals(1, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      BloomFilterAddOnly bloomFilterAddOnly0 = new BloomFilterAddOnly(1);
      bloomFilterAddOnly0.incValue(1);
      // Undeclared exception!
      try {
        bloomFilterAddOnly0.decValue(1);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * remove not supported
         */
      }
  }
}
