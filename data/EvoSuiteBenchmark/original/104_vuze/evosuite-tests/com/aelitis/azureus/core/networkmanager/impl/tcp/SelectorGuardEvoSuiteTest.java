/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.networkmanager.impl.tcp;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.networkmanager.impl.tcp.SelectorGuard;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SelectorGuardEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SelectorGuard selectorGuard0 = new SelectorGuard("aqm*jp<", (SelectorGuard.GuardListener) null);
      selectorGuard0.markPreSelectTime();
      selectorGuard0.verifySelectorIntegrity(0, 17L);
      assertEquals("aqm*jp<", selectorGuard0.getType());
  }

  @Test
  public void test1()  throws Throwable  {
      SelectorGuard selectorGuard0 = new SelectorGuard("aqm*jp<", (SelectorGuard.GuardListener) null);
      String string0 = selectorGuard0.getType();
      assertEquals("aqm*jp<", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      SelectorGuard selectorGuard0 = new SelectorGuard("aqm*jp<", (SelectorGuard.GuardListener) null);
      selectorGuard0.verifySelectorIntegrity(0, 17L);
      selectorGuard0.verifySelectorIntegrity(0, 0);
      selectorGuard0.verifySelectorIntegrity(0, 17L);
      selectorGuard0.verifySelectorIntegrity((-1), 0);
      selectorGuard0.verifySelectorIntegrity((-1), 17L);
      selectorGuard0.verifySelectorIntegrity(0, 2L);
      selectorGuard0.verifySelectorIntegrity(0, 877L);
      selectorGuard0.verifySelectorIntegrity((-1328), 877L);
      selectorGuard0.verifySelectorIntegrity(0, 0);
      selectorGuard0.verifySelectorIntegrity(0, 2L);
      selectorGuard0.verifySelectorIntegrity(0, 17L);
      selectorGuard0.verifySelectorIntegrity(0, 0);
      selectorGuard0.verifySelectorIntegrity(0, 17L);
      selectorGuard0.verifySelectorIntegrity(0, 2L);
      selectorGuard0.verifySelectorIntegrity(0, 17L);
      selectorGuard0.verifySelectorIntegrity(0, 1310L);
      selectorGuard0.verifySelectorIntegrity((-1328), 2L);
      selectorGuard0.verifySelectorIntegrity(0, 17L);
      selectorGuard0.verifySelectorIntegrity((-1328), 17L);
      selectorGuard0.verifySelectorIntegrity((-1967), 0);
      assertEquals("aqm*jp<", selectorGuard0.getType());
  }

  @Test
  public void test3()  throws Throwable  {
      SelectorGuard selectorGuard0 = new SelectorGuard("&B-(o/s]MK;_", (SelectorGuard.GuardListener) null);
      selectorGuard0.verifySelectorIntegrity(14, 14);
      selectorGuard0.verifySelectorIntegrity(14, 14);
      selectorGuard0.verifySelectorIntegrity(14, 14);
      selectorGuard0.verifySelectorIntegrity(14, 14);
      selectorGuard0.verifySelectorIntegrity(14, 14);
      selectorGuard0.verifySelectorIntegrity(14, 14);
      assertEquals("&B-(o/s]MK;_", selectorGuard0.getType());
  }

  @Test
  public void test4()  throws Throwable  {
      SelectorGuard selectorGuard0 = new SelectorGuard("aqm*jp<", (SelectorGuard.GuardListener) null);
      selectorGuard0.verifySelectorIntegrity(0, (-284L));
      assertEquals("aqm*jp<", selectorGuard0.getType());
  }
}
