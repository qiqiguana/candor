/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.networkmanager.admin.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.networkmanager.admin.NetworkAdminASN;
import com.aelitis.azureus.core.networkmanager.admin.NetworkAdminException;
import com.aelitis.azureus.core.networkmanager.admin.impl.NetworkAdminASNImpl;
import java.net.Inet4Address;
import java.net.InetAddress;
import java.net.UnknownHostException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class NetworkAdminASNImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      NetworkAdminASNImpl networkAdminASNImpl0 = new NetworkAdminASNImpl("/3", "/3", "/3");
      networkAdminASNImpl0.setASName("as=/3,asn=/3, bgp_prefx=/3[localhost/127.0.0.1-/127.255.255.255]");
      assertEquals("as=/3,asn=as=/3,asn=/3, bgp_prefx=/3[localhost/127.0.0.1-/127.255.255.255], bgp_prefx=/3[localhost/127.0.0.1-/127.255.255.255]", networkAdminASNImpl0.getString());
  }

  @Test
  public void test1()  throws Throwable  {
      NetworkAdminASNImpl networkAdminASNImpl0 = new NetworkAdminASNImpl("/3", "/3", "/3");
      String string0 = networkAdminASNImpl0.getString();
      assertNotNull(string0);
      assertEquals("as=/3,asn=/3, bgp_prefx=/3[localhost/127.0.0.1-/127.255.255.255]", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      NetworkAdminASNImpl networkAdminASNImpl0 = new NetworkAdminASNImpl("", "", "");
      boolean boolean0 = networkAdminASNImpl0.sameAs((NetworkAdminASN) networkAdminASNImpl0);
      assertEquals("as=,asn=, bgp_prefx=[null-null]", networkAdminASNImpl0.getString());
      assertEquals(true, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      NetworkAdminASNImpl networkAdminASNImpl0 = new NetworkAdminASNImpl((String) null, (String) null, (String) null);
      String string0 = networkAdminASNImpl0.getString();
      assertEquals("as=,asn=, bgp_prefx=[null-null]", string0);
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      NetworkAdminASNImpl networkAdminASNImpl0 = new NetworkAdminASNImpl((String) null, (String) null, (String) null);
      boolean boolean0 = networkAdminASNImpl0.matchesCIDR((InetAddress) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      NetworkAdminASNImpl networkAdminASNImpl0 = new NetworkAdminASNImpl("", "", "");
      boolean boolean0 = networkAdminASNImpl0.matchesCIDR((InetAddress) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      NetworkAdminASNImpl networkAdminASNImpl0 = new NetworkAdminASNImpl("/3", "/3", "/3");
      byte[] byteArray0 = new byte[4];
      Inet4Address inet4Address0 = (Inet4Address)InetAddress.getByAddress("/3", byteArray0);
      boolean boolean0 = networkAdminASNImpl0.matchesCIDR((InetAddress) inet4Address0);
      assertEquals(false, boolean0);
      assertEquals("as=/3,asn=/3, bgp_prefx=/3[localhost/127.0.0.1-/127.255.255.255]", networkAdminASNImpl0.getString());
  }

  @Test
  public void test7()  throws Throwable  {
      NetworkAdminASNImpl networkAdminASNImpl0 = new NetworkAdminASNImpl("/3", "/3", "/3");
      Inet4Address inet4Address0 = (Inet4Address)networkAdminASNImpl0.getCIDREndAddress();
      boolean boolean0 = networkAdminASNImpl0.matchesCIDR((InetAddress) inet4Address0);
      assertEquals("as=/3,asn=/3, bgp_prefx=/3[localhost/127.0.0.1-/127.255.255.255]", networkAdminASNImpl0.getString());
      assertEquals("127.255.255.255/127.255.255.255", inet4Address0.toString());
      assertEquals(true, boolean0);
  }
}
