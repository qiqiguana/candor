/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.networkmanager.admin.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.networkmanager.admin.impl.NetworkAdminNATUDPReply;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Map;
import org.gudy.azureus2.core3.util.BEncodingException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class NetworkAdminNATUDPReplyEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      NetworkAdminNATUDPReply networkAdminNATUDPReply0 = new NetworkAdminNATUDPReply(1);
      // Undeclared exception!
      try {
        networkAdminNATUDPReply0.serialise((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      NetworkAdminNATUDPReply networkAdminNATUDPReply0 = new NetworkAdminNATUDPReply(1755);
      networkAdminNATUDPReply0.setPayload((Map) null);
      assertEquals(false, networkAdminNATUDPReply0.hasContinuation());
  }

  @Test
  public void test2()  throws Throwable  {
      NetworkAdminNATUDPReply networkAdminNATUDPReply0 = new NetworkAdminNATUDPReply(1755);
      String string0 = networkAdminNATUDPReply0.getString();
      assertEquals("type=41,addr=null:reply[trans=1755]", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      NetworkAdminNATUDPReply networkAdminNATUDPReply0 = new NetworkAdminNATUDPReply(1);
      Map<Object, Object> map0 = networkAdminNATUDPReply0.getPayload();
      assertNull(map0);
  }

  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)42;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) byteArrayInputStream0);
      NetworkAdminNATUDPReply networkAdminNATUDPReply0 = null;
      try {
        networkAdminNATUDPReply0 = new NetworkAdminNATUDPReply(dataInputStream0, (int) (byte)0);
        fail("Expecting exception: BEncodingException");
      } catch(BEncodingException e) {
        /*
         * BDecoder: unknown command '0, remainder = \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) byteArrayInputStream0);
      NetworkAdminNATUDPReply networkAdminNATUDPReply0 = null;
      try {
        networkAdminNATUDPReply0 = new NetworkAdminNATUDPReply(dataInputStream0, (-175));
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * invalid length
         */
      }
  }
}
