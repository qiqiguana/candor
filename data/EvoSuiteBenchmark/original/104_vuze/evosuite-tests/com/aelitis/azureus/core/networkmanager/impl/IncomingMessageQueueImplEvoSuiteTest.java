/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.networkmanager.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.networkmanager.IncomingMessageQueue;
import com.aelitis.azureus.core.networkmanager.NetworkConnection;
import com.aelitis.azureus.core.networkmanager.impl.IncomingMessageQueueImpl;
import com.aelitis.azureus.core.peermanager.messaging.Message;
import com.aelitis.azureus.core.peermanager.messaging.MessageStreamDecoder;
import com.aelitis.azureus.core.peermanager.messaging.azureus.AZMessageDecoder;
import com.aelitis.azureus.core.peermanager.messaging.azureus.AZMetaData;
import com.aelitis.azureus.core.peermanager.messaging.bittorrent.BTMessageDecoder;
import java.io.IOException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class IncomingMessageQueueImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BTMessageDecoder bTMessageDecoder0 = new BTMessageDecoder();
      IncomingMessageQueueImpl incomingMessageQueueImpl0 = new IncomingMessageQueueImpl((MessageStreamDecoder) bTMessageDecoder0, (NetworkConnection) null);
      incomingMessageQueueImpl0.cancelQueueListener((IncomingMessageQueue.MessageQueueListener) null);
      assertEquals(-1, incomingMessageQueueImpl0.getPercentDoneOfCurrentMessage());
  }

  @Test
  public void test1()  throws Throwable  {
      AZMessageDecoder aZMessageDecoder0 = new AZMessageDecoder();
      IncomingMessageQueueImpl incomingMessageQueueImpl0 = new IncomingMessageQueueImpl((MessageStreamDecoder) aZMessageDecoder0, (NetworkConnection) null);
      AZMessageDecoder aZMessageDecoder1 = (AZMessageDecoder)incomingMessageQueueImpl0.getDecoder();
      assertEquals(0, aZMessageDecoder1.getProtocolBytesDecoded());
  }

  @Test
  public void test2()  throws Throwable  {
      AZMessageDecoder aZMessageDecoder0 = new AZMessageDecoder();
      IncomingMessageQueueImpl incomingMessageQueueImpl0 = new IncomingMessageQueueImpl((MessageStreamDecoder) aZMessageDecoder0, (NetworkConnection) null);
      // Undeclared exception!
      try {
        incomingMessageQueueImpl0.setDecoder((MessageStreamDecoder) aZMessageDecoder0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      AZMessageDecoder aZMessageDecoder0 = new AZMessageDecoder();
      IncomingMessageQueueImpl incomingMessageQueueImpl0 = new IncomingMessageQueueImpl((MessageStreamDecoder) aZMessageDecoder0, (NetworkConnection) null);
      incomingMessageQueueImpl0.resumeQueueProcessing();
      assertEquals(-1, incomingMessageQueueImpl0.getPercentDoneOfCurrentMessage());
  }

  @Test
  public void test4()  throws Throwable  {
      AZMessageDecoder aZMessageDecoder0 = new AZMessageDecoder();
      IncomingMessageQueueImpl incomingMessageQueueImpl0 = new IncomingMessageQueueImpl((MessageStreamDecoder) aZMessageDecoder0, (NetworkConnection) null);
      assertNotNull(incomingMessageQueueImpl0);
      
      int int0 = incomingMessageQueueImpl0.getPercentDoneOfCurrentMessage();
      assertEquals((-1), int0);
  }

  @Test
  public void test5()  throws Throwable  {
      BTMessageDecoder bTMessageDecoder0 = new BTMessageDecoder();
      IncomingMessageQueueImpl incomingMessageQueueImpl0 = new IncomingMessageQueueImpl((MessageStreamDecoder) bTMessageDecoder0, (NetworkConnection) null);
      incomingMessageQueueImpl0.destroy();
      assertEquals(-1, incomingMessageQueueImpl0.getPercentDoneOfCurrentMessage());
  }

  @Test
  public void test6()  throws Throwable  {
      IncomingMessageQueueImpl incomingMessageQueueImpl0 = null;
      try {
        incomingMessageQueueImpl0 = new IncomingMessageQueueImpl((MessageStreamDecoder) null, (NetworkConnection) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * stream_decoder is null
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      BTMessageDecoder bTMessageDecoder0 = new BTMessageDecoder();
      IncomingMessageQueueImpl incomingMessageQueueImpl0 = new IncomingMessageQueueImpl((MessageStreamDecoder) bTMessageDecoder0, (NetworkConnection) null);
      try {
        incomingMessageQueueImpl0.receiveFromTransport(1);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * no queue listeners registered!
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      BTMessageDecoder bTMessageDecoder0 = new BTMessageDecoder();
      IncomingMessageQueueImpl incomingMessageQueueImpl0 = new IncomingMessageQueueImpl((MessageStreamDecoder) bTMessageDecoder0, (NetworkConnection) null);
      assertNotNull(incomingMessageQueueImpl0);
      
      int int0 = incomingMessageQueueImpl0.receiveFromTransport((int) (byte) (-41));
      assertEquals(0, int0);
  }

  @Test
  public void test9()  throws Throwable  {
      BTMessageDecoder bTMessageDecoder0 = new BTMessageDecoder();
      IncomingMessageQueueImpl incomingMessageQueueImpl0 = new IncomingMessageQueueImpl((MessageStreamDecoder) bTMessageDecoder0, (NetworkConnection) null);
      AZMetaData aZMetaData0 = new AZMetaData((int) (byte) (-41), (byte) (-41));
      incomingMessageQueueImpl0.notifyOfExternallyReceivedMessage((Message) aZMetaData0);
      assertEquals(-1, incomingMessageQueueImpl0.getPercentDoneOfCurrentMessage());
  }
}
