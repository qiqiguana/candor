/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.peermanager.messaging.bittorrent;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.peermanager.messaging.Message;
import com.aelitis.azureus.core.peermanager.messaging.MessageException;
import com.aelitis.azureus.core.peermanager.messaging.bittorrent.BTRawMessage;
import org.gudy.azureus2.core3.util.DirectByteBuffer;
import org.gudy.azureus2.core3.util.DirectByteBufferPool;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BTRawMessageEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BTRawMessage bTRawMessage0 = new BTRawMessage((DirectByteBuffer) null);
      DirectByteBuffer[] directByteBufferArray0 = bTRawMessage0.getData();
      assertNotNull(directByteBufferArray0);
  }

  @Test
  public void test1()  throws Throwable  {
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte)45, (byte)45);
      BTRawMessage bTRawMessage0 = new BTRawMessage(directByteBuffer0);
      int int0 = bTRawMessage0.getPriority();
      assertEquals(2, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte)45, (byte)45);
      BTRawMessage bTRawMessage0 = new BTRawMessage(directByteBuffer0);
      String string0 = bTRawMessage0.getFeatureID();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      BTRawMessage bTRawMessage0 = new BTRawMessage((DirectByteBuffer) null);
      DirectByteBuffer[] directByteBufferArray0 = bTRawMessage0.getRawData();
      assertNotNull(directByteBufferArray0);
  }

  @Test
  public void test4()  throws Throwable  {
      BTRawMessage bTRawMessage0 = new BTRawMessage((DirectByteBuffer) null);
      String string0 = bTRawMessage0.getID();
      assertEquals("", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      BTRawMessage bTRawMessage0 = new BTRawMessage((DirectByteBuffer) null);
      try {
        bTRawMessage0.deserialize((DirectByteBuffer) null, (byte)3);
        fail("Expecting exception: MessageException");
      } catch(MessageException e) {
        /*
         * not imp
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      BTRawMessage bTRawMessage0 = new BTRawMessage((DirectByteBuffer) null);
      BTRawMessage bTRawMessage1 = (BTRawMessage)bTRawMessage0.getBaseMessage();
      assertEquals(1, bTRawMessage1.getType());
  }

  @Test
  public void test7()  throws Throwable  {
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte)45, (byte)45);
      BTRawMessage bTRawMessage0 = new BTRawMessage(directByteBuffer0);
      int int0 = bTRawMessage0.getType();
      assertEquals(1, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte)45, (byte)45);
      BTRawMessage bTRawMessage0 = new BTRawMessage(directByteBuffer0);
      String string0 = bTRawMessage0.getDescription();
      assertEquals("<raw bt data>", string0);
  }

  @Test
  public void test9()  throws Throwable  {
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte)45, (byte)45);
      BTRawMessage bTRawMessage0 = new BTRawMessage(directByteBuffer0);
      byte byte0 = bTRawMessage0.getVersion();
      assertEquals((byte)1, byte0);
  }

  @Test
  public void test10()  throws Throwable  {
      BTRawMessage bTRawMessage0 = new BTRawMessage((DirectByteBuffer) null);
      byte[] byteArray0 = bTRawMessage0.getIDBytes();
      assertNull(byteArray0);
  }

  @Test
  public void test11()  throws Throwable  {
      BTRawMessage bTRawMessage0 = new BTRawMessage((DirectByteBuffer) null);
      int int0 = bTRawMessage0.getFeatureSubID();
      assertEquals(0, int0);
  }

  @Test
  public void test12()  throws Throwable  {
      BTRawMessage bTRawMessage0 = new BTRawMessage((DirectByteBuffer) null);
      boolean boolean0 = bTRawMessage0.isNoDelay();
      assertEquals(true, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte) (-1), 3);
      BTRawMessage bTRawMessage0 = new BTRawMessage(directByteBuffer0);
      bTRawMessage0.setNoDelay();
      assertEquals("", bTRawMessage0.getID());
  }

  @Test
  public void test14()  throws Throwable  {
      BTRawMessage bTRawMessage0 = new BTRawMessage((DirectByteBuffer) null);
      Message[] messageArray0 = bTRawMessage0.messagesToRemove();
      assertNull(messageArray0);
  }

  @Test
  public void test15()  throws Throwable  {
      BTRawMessage bTRawMessage0 = new BTRawMessage((DirectByteBuffer) null);
      bTRawMessage0.destroy();
      assertEquals("", bTRawMessage0.getID());
  }

  @Test
  public void test16()  throws Throwable  {
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte) (-1), 3);
      BTRawMessage bTRawMessage0 = new BTRawMessage(directByteBuffer0);
      bTRawMessage0.destroy();
      assertEquals("", bTRawMessage0.getID());
  }
}
