/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.networkmanager.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.networkmanager.impl.TransportHelper;
import com.aelitis.azureus.core.networkmanager.impl.TransportHelperFilterTransparent;
import com.aelitis.azureus.core.networkmanager.impl.tcp.TCPTransportHelper;
import com.aelitis.azureus.core.peermanager.messaging.bittorrent.BTMessageDecoder;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import org.gudy.azureus2.core3.util.DirectByteBuffer;
import org.gudy.azureus2.core3.util.DirectByteBufferPool;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TransportHelperFilterTransparentEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TCPTransportHelper tCPTransportHelper0 = new TCPTransportHelper((SocketChannel) null);
      TransportHelperFilterTransparent transportHelperFilterTransparent0 = new TransportHelperFilterTransparent((TransportHelper) tCPTransportHelper0, true);
      transportHelperFilterTransparent0.setTrace(true);
      assertEquals(false, transportHelperFilterTransparent0.hasBufferedRead());
  }

  @Test
  public void test1()  throws Throwable  {
      TCPTransportHelper tCPTransportHelper0 = new TCPTransportHelper((SocketChannel) null);
      TransportHelperFilterTransparent transportHelperFilterTransparent0 = new TransportHelperFilterTransparent((TransportHelper) tCPTransportHelper0, true);
      String string0 = transportHelperFilterTransparent0.getName(false);
      assertEquals("Plain", string0);
      assertNotNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      TCPTransportHelper tCPTransportHelper0 = new TCPTransportHelper((SocketChannel) null);
      TransportHelperFilterTransparent transportHelperFilterTransparent0 = new TransportHelperFilterTransparent((TransportHelper) tCPTransportHelper0, true);
      boolean boolean0 = transportHelperFilterTransparent0.hasBufferedWrite();
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      TCPTransportHelper tCPTransportHelper0 = new TCPTransportHelper((SocketChannel) null);
      TransportHelperFilterTransparent transportHelperFilterTransparent0 = new TransportHelperFilterTransparent((TransportHelper) tCPTransportHelper0, true);
      BTMessageDecoder bTMessageDecoder0 = new BTMessageDecoder();
      ByteBuffer byteBuffer0 = bTMessageDecoder0.destroy();
      transportHelperFilterTransparent0.insertRead(byteBuffer0);
      boolean boolean0 = transportHelperFilterTransparent0.hasBufferedRead();
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      TCPTransportHelper tCPTransportHelper0 = new TCPTransportHelper((SocketChannel) null);
      TransportHelperFilterTransparent transportHelperFilterTransparent0 = new TransportHelperFilterTransparent((TransportHelper) tCPTransportHelper0, true);
      BTMessageDecoder bTMessageDecoder0 = new BTMessageDecoder();
      ByteBuffer byteBuffer0 = bTMessageDecoder0.destroy();
      int int0 = transportHelperFilterTransparent0.write(byteBuffer0, false);
      assertEquals(0, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      TransportHelperFilterTransparent transportHelperFilterTransparent0 = new TransportHelperFilterTransparent((TransportHelper) null, true);
      boolean boolean0 = transportHelperFilterTransparent0.isEncrypted();
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      TCPTransportHelper tCPTransportHelper0 = new TCPTransportHelper((SocketChannel) null);
      TransportHelperFilterTransparent transportHelperFilterTransparent0 = new TransportHelperFilterTransparent((TransportHelper) tCPTransportHelper0, true);
      ByteBuffer[] byteBufferArray0 = new ByteBuffer[8];
      long long0 = transportHelperFilterTransparent0.write(byteBufferArray0, 0, 0);
      assertEquals(0L, long0);
  }

  @Test
  public void test7()  throws Throwable  {
      TCPTransportHelper tCPTransportHelper0 = new TCPTransportHelper((SocketChannel) null);
      TransportHelperFilterTransparent transportHelperFilterTransparent0 = new TransportHelperFilterTransparent((TransportHelper) tCPTransportHelper0, true);
      boolean boolean0 = transportHelperFilterTransparent0.hasBufferedRead();
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      TransportHelperFilterTransparent transportHelperFilterTransparent0 = new TransportHelperFilterTransparent((TransportHelper) null, true);
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte) (-15), 1864);
      ByteBuffer byteBuffer0 = directByteBuffer0.getBuffer((byte) (-15));
      transportHelperFilterTransparent0.insertRead(byteBuffer0);
      boolean boolean0 = transportHelperFilterTransparent0.hasBufferedRead();
      assertEquals(true, transportHelperFilterTransparent0.hasBufferedRead());
      assertEquals(true, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      TCPTransportHelper tCPTransportHelper0 = new TCPTransportHelper((SocketChannel) null);
      TransportHelperFilterTransparent transportHelperFilterTransparent0 = new TransportHelperFilterTransparent((TransportHelper) tCPTransportHelper0, true);
      ByteBuffer[] byteBufferArray0 = new ByteBuffer[8];
      long long0 = transportHelperFilterTransparent0.read(byteBufferArray0, 0, 0);
      assertEquals(0L, long0);
  }

  @Test
  public void test10()  throws Throwable  {
      TCPTransportHelper tCPTransportHelper0 = new TCPTransportHelper((SocketChannel) null);
      TransportHelperFilterTransparent transportHelperFilterTransparent0 = new TransportHelperFilterTransparent((TransportHelper) tCPTransportHelper0, true);
      BTMessageDecoder bTMessageDecoder0 = new BTMessageDecoder();
      ByteBuffer byteBuffer0 = bTMessageDecoder0.destroy();
      transportHelperFilterTransparent0.insertRead(byteBuffer0);
      int int0 = transportHelperFilterTransparent0.read(byteBuffer0);
      assertEquals(0, int0);
  }

  @Test
  public void test11()  throws Throwable  {
      TransportHelperFilterTransparent transportHelperFilterTransparent0 = new TransportHelperFilterTransparent((TransportHelper) null, true);
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte) (-15), 1864);
      ByteBuffer byteBuffer0 = directByteBuffer0.getBuffer((byte) (-15));
      BTMessageDecoder bTMessageDecoder0 = new BTMessageDecoder();
      ByteBuffer byteBuffer1 = bTMessageDecoder0.destroy();
      transportHelperFilterTransparent0.insertRead(byteBuffer1);
      // Undeclared exception!
      try {
        transportHelperFilterTransparent0.read(byteBuffer0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TransportHelperFilterTransparent transportHelperFilterTransparent0 = new TransportHelperFilterTransparent((TransportHelper) null, true);
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte) (-15), 1864);
      ByteBuffer[] byteBufferArray0 = new ByteBuffer[5];
      ByteBuffer byteBuffer0 = directByteBuffer0.getBuffer((byte) (-15));
      transportHelperFilterTransparent0.insertRead(byteBuffer0);
      assertEquals("java.nio.DirectByteBuffer[pos=30 lim=1864 cap=2048]", byteBuffer0.toString());
      
      long long0 = transportHelperFilterTransparent0.read(byteBufferArray0, (int) (byte) (-15), (int) (byte) (-15));
      assertEquals(0L, long0);
  }

  @Test
  public void test13()  throws Throwable  {
      TCPTransportHelper tCPTransportHelper0 = new TCPTransportHelper((SocketChannel) null);
      TransportHelperFilterTransparent transportHelperFilterTransparent0 = new TransportHelperFilterTransparent((TransportHelper) tCPTransportHelper0, true);
      BTMessageDecoder bTMessageDecoder0 = new BTMessageDecoder();
      ByteBuffer byteBuffer0 = bTMessageDecoder0.destroy();
      int int0 = transportHelperFilterTransparent0.read(byteBuffer0);
      assertEquals(0, int0);
  }

  @Test
  public void test14()  throws Throwable  {
      TCPTransportHelper tCPTransportHelper0 = new TCPTransportHelper((SocketChannel) null);
      TransportHelperFilterTransparent transportHelperFilterTransparent0 = new TransportHelperFilterTransparent((TransportHelper) tCPTransportHelper0, true);
      String string0 = transportHelperFilterTransparent0.getName(true);
      assertNotNull(string0);
      assertEquals("Plain (TCP)", string0);
  }

  @Test
  public void test15()  throws Throwable  {
      TCPTransportHelper tCPTransportHelper0 = new TCPTransportHelper((SocketChannel) null);
      TransportHelperFilterTransparent transportHelperFilterTransparent0 = new TransportHelperFilterTransparent((TransportHelper) tCPTransportHelper0, false);
      String string0 = transportHelperFilterTransparent0.getName(true);
      assertNotNull(string0);
      assertEquals("None (TCP)", string0);
  }
}
