/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.networkmanager.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.networkmanager.impl.ByteBucketST;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ByteBucketSTEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ByteBucketST byteBucketST0 = new ByteBucketST(1602);
      byteBucketST0.setRate(0);
      assertEquals(0, byteBucketST0.getRate());
      assertEquals(1460, byteBucketST0.getBurstRate());
  }

  @Test
  public void test1()  throws Throwable  {
      ByteBucketST byteBucketST0 = new ByteBucketST((-1922));
      int int0 = byteBucketST0.getRate();
      assertEquals(0, byteBucketST0.getAvailableByteCount());
      assertEquals(1460, byteBucketST0.getBurstRate());
      assertEquals((-1922), int0);
  }

  @Test
  public void test2()  throws Throwable  {
      ByteBucketST byteBucketST0 = new ByteBucketST((-1922));
      int int0 = byteBucketST0.getBurstRate();
      assertEquals(0, byteBucketST0.getAvailableByteCount());
      assertEquals(1460, int0);
      assertEquals(-1922, byteBucketST0.getRate());
  }

  @Test
  public void test3()  throws Throwable  {
      ByteBucketST byteBucketST0 = new ByteBucketST((-1922));
      int int0 = byteBucketST0.getAvailableByteCount();
      assertEquals(0, int0);
      assertEquals(-1922, byteBucketST0.getRate());
      assertEquals(1460, byteBucketST0.getBurstRate());
  }

  @Test
  public void test4()  throws Throwable  {
      ByteBucketST byteBucketST0 = new ByteBucketST((-1922));
      byteBucketST0.setBytesUsed((-1922));
      byteBucketST0.setRate((-1922), (-1922));
      assertEquals(0, byteBucketST0.getRate());
  }

  @Test
  public void test5()  throws Throwable  {
      ByteBucketST byteBucketST0 = new ByteBucketST(28);
      byteBucketST0.setBytesUsed(28);
      assertEquals(-28, byteBucketST0.getAvailableByteCount());
      assertEquals(28, byteBucketST0.getRate());
  }

  @Test
  public void test6()  throws Throwable  {
      ByteBucketST byteBucketST0 = new ByteBucketST((-1922));
      byteBucketST0.setRate((-1922), (-1922));
      assertEquals(0, byteBucketST0.getRate());
  }

  @Test
  public void test7()  throws Throwable  {
      ByteBucketST byteBucketST0 = new ByteBucketST((-1922));
      byteBucketST0.setFrozen(false);
      assertEquals(1460, byteBucketST0.getBurstRate());
      assertEquals(-1922, byteBucketST0.getRate());
      assertEquals(0, byteBucketST0.getAvailableByteCount());
  }

  @Test
  public void test8()  throws Throwable  {
      ByteBucketST byteBucketST0 = new ByteBucketST(1602);
      byteBucketST0.setFrozen(true);
      byteBucketST0.setFrozen(true);
      assertEquals(1922, byteBucketST0.getBurstRate());
      assertEquals(1602, byteBucketST0.getRate());
      assertEquals(0, byteBucketST0.getAvailableByteCount());
  }

  @Test
  public void test9()  throws Throwable  {
      ByteBucketST byteBucketST0 = new ByteBucketST(1602);
      byteBucketST0.setFrozen(true);
      int int0 = byteBucketST0.getAvailableByteCount();
      assertEquals(0, int0);
      assertEquals(1602, byteBucketST0.getRate());
      assertEquals(1922, byteBucketST0.getBurstRate());
  }
}
