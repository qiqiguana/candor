/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.lws;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.lws.LWSDiskManager;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LWSDiskManagerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.calcChecking();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * calcChecking not implemented
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.isWritten();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * isWritten not implemented
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.reDownloadBlock((-20));
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * reDownloadBlock not implemented
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      boolean boolean0 = lWSDiskManager_sePiece0.isInteresting();
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.getPieceNumber();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * getPieceNumber not implemented
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.setWritten((int) (short) (-1390));
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * setWritten not implemented
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      lWSDiskManager_sePiece0.setReadCount((short) (-1390));
      assertEquals(true, lWSDiskManager_sePiece0.isDone());
  }

  @Test
  public void test7()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.setNeeded(true);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * setNeeded not implemented
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.isWritten(1);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * isWritten not implemented
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.getNbWritten();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * getNbWritten not implemented
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      boolean boolean0 = lWSDiskManager_sePiece0.isSkipped();
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.isNeeded();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * isNeeded not implemented
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.clearChecking();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * clearChecking not implemented
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      String string0 = lWSDiskManager_sePiece0.getString();
      assertEquals("", string0);
  }

  @Test
  public void test14()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.getBlockSize((-486));
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * getBlockSize not implemented
         */
      }
  }

  @Test
  public void test15()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      boolean boolean0 = lWSDiskManager_sePiece0.isDownloadable();
      assertEquals(false, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      boolean boolean0 = lWSDiskManager_sePiece0.isDone();
      assertEquals(true, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.calcDone();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * calcDone not implemented
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.getLength();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * getLength not implemented
         */
      }
  }

  @Test
  public void test19()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.isNeedsCheck();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * isNeedsCheck not implemented
         */
      }
  }

  @Test
  public void test20()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.setDownloadable();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * setRequestable not implemented
         */
      }
  }

  @Test
  public void test21()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.getManager();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * getManager not implemented
         */
      }
  }

  @Test
  public void test22()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.clearNeeded();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * clearNeeded not implemented
         */
      }
  }

  @Test
  public void test23()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.setChecking();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * setChecking not implemented
         */
      }
  }

  @Test
  public void test24()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.calcNeeded();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * calcNeeded not implemented
         */
      }
  }

  @Test
  public void test25()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.setNeeded();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * setNeeded not implemented
         */
      }
  }

  @Test
  public void test26()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      boolean boolean0 = lWSDiskManager_sePiece0.isChecking();
      assertEquals(false, boolean0);
  }

  @Test
  public void test27()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.getWritten();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * getWritten not implemented
         */
      }
  }

  @Test
  public void test28()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.setChecking(false);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * setChecking not implemented
         */
      }
  }

  @Test
  public void test29()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.reset();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * reset not implemented
         */
      }
  }

  @Test
  public void test30()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      short short0 = lWSDiskManager_sePiece0.getReadCount();
      assertEquals((short)0, short0);
  }

  @Test
  public void test31()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      // Undeclared exception!
      try {
        lWSDiskManager_sePiece0.getNbBlocks();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * getNbBlocks not implemented
         */
      }
  }

  @Test
  public void test32()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      lWSDiskManager_sePiece0.setDone(true);
      assertEquals(true, lWSDiskManager_sePiece0.isDone());
  }

  @Test
  public void test33()  throws Throwable  {
      LWSDiskManager.sePiece lWSDiskManager_sePiece0 = new LWSDiskManager.sePiece();
      lWSDiskManager_sePiece0.setDone(false);
      assertEquals(false, lWSDiskManager_sePiece0.isInteresting());
  }
}
