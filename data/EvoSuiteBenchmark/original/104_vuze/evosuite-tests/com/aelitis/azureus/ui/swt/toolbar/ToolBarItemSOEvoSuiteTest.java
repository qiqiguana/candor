/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.ui.swt.toolbar;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.ui.swt.skin.SWTSkinButtonUtility;
import com.aelitis.azureus.ui.swt.skin.SWTSkinObject;
import com.aelitis.azureus.ui.swt.skin.SWTSkinObjectText;
import com.aelitis.azureus.ui.swt.toolbar.ToolBarItemSO;
import com.aelitis.azureus.ui.swt.views.skin.SBC_ActivityTableView;
import com.aelitis.azureus.ui.swt.views.skin.ToolBarView;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.gudy.azureus2.plugins.ui.toolbar.UIToolBarActivationListener;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ToolBarItemSOEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO((ToolBarView) null, "y4R~kCGR]rM% b$(^.", true);
      toolBarItemSO0.dispose();
      assertEquals(false, toolBarItemSO0.isAlwaysAvailable());
      assertEquals("main", toolBarItemSO0.getGroupID());
      assertEquals("image.toolbar.run", toolBarItemSO0.getImageID());
      assertEquals(false, toolBarItemSO0.enabled);
      assertEquals("y4R~kCGR]rM% b$(^.", toolBarItemSO0.getID());
      assertEquals(0L, toolBarItemSO0.getState());
  }

  @Test
  public void test1()  throws Throwable  {
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "c/b!]`s`;f=:w", "c/b!]`s`;f=:w");
      long long0 = toolBarItemSO0.getDefaultState();
      assertEquals(0L, long0);
      assertEquals(false, toolBarItemSO0.isAlwaysAvailable());
      assertEquals("main", toolBarItemSO0.getGroupID());
      assertEquals(false, toolBarItemSO0.enabled);
      assertEquals("c/b!]`s`;f=:w", toolBarItemSO0.getImageID());
      assertEquals("c/b!]`s`;f=:w", toolBarItemSO0.getID());
  }

  @Test
  public void test2()  throws Throwable  {
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO((ToolBarView) null, "y4R~kCGR]rM% b$(^.", true);
      toolBarItemSO0.setSkinTitle((SWTSkinObjectText) null);
      assertEquals("main", toolBarItemSO0.getGroupID());
      assertEquals(false, toolBarItemSO0.isAlwaysAvailable());
      assertEquals("image.toolbar.run", toolBarItemSO0.getImageID());
      assertEquals(false, toolBarItemSO0.enabled);
      assertEquals("y4R~kCGR]rM% b$(^.", toolBarItemSO0.getID());
  }

  @Test
  public void test3()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          ToolBarView toolBarView0 = new ToolBarView();
          ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "t", true);
          SBC_ActivityTableView sBC_ActivityTableView0 = new SBC_ActivityTableView();
          toolBarItemSO0.setDefaultActivationListener((UIToolBarActivationListener) sBC_ActivityTableView0);
          assertEquals("main", toolBarItemSO0.getGroupID());
          assertEquals("image.toolbar.run", toolBarItemSO0.getImageID());
          assertEquals(false, toolBarItemSO0.isAlwaysAvailable());
          assertEquals(false, toolBarItemSO0.enabled);
          assertEquals("t", toolBarItemSO0.getID());
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test4()  throws Throwable  {
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "t", true);
      toolBarItemSO0.setGroupID("image.toolbar.run");
      assertEquals("image.toolbar.run", toolBarItemSO0.getGroupID());
      assertEquals("t", toolBarItemSO0.getID());
  }

  @Test
  public void test5()  throws Throwable  {
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "x4UwZ5", "x4UwZ5", "x4UwZ5");
      assertNotNull(toolBarItemSO0);
      
      toolBarItemSO0.getSkinButton();
      assertEquals(false, toolBarItemSO0.isAlwaysAvailable());
      assertEquals(false, toolBarItemSO0.enabled);
      assertEquals("main", toolBarItemSO0.getGroupID());
      assertEquals("x4UwZ5.tooltip", toolBarItemSO0.getTooltipID());
      assertEquals("x4UwZ5", toolBarItemSO0.getID());
      assertEquals("x4UwZ5", toolBarItemSO0.getImageID());
  }

  @Test
  public void test6()  throws Throwable  {
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "", true);
      // Undeclared exception!
      try {
        toolBarItemSO0.triggerToolBarItem((-1326L), (Object) "image.toolbar.run");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "r", true);
      boolean boolean0 = toolBarItemSO0.isAlwaysAvailable();
      assertEquals("main", toolBarItemSO0.getGroupID());
      assertEquals("r", toolBarItemSO0.getID());
      assertEquals("image.toolbar.run", toolBarItemSO0.getImageID());
      assertEquals(false, boolean0);
      assertEquals(false, toolBarItemSO0.enabled);
  }

  @Test
  public void test8()  throws Throwable  {
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "", true);
      toolBarItemSO0.setTooltipID("");
      assertEquals("", toolBarItemSO0.getTooltipID());
      assertEquals("main", toolBarItemSO0.getGroupID());
      assertEquals("image.toolbar.run", toolBarItemSO0.getImageID());
      assertEquals(false, toolBarItemSO0.isAlwaysAvailable());
      assertEquals(false, toolBarItemSO0.enabled);
      assertEquals("", toolBarItemSO0.getID());
  }

  @Test
  public void test9()  throws Throwable  {
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "c/b!]`s`;f=:w", "c/b!]`s`;f=:w");
      toolBarItemSO0.getDefaultActivationListener();
      assertEquals(false, toolBarItemSO0.isAlwaysAvailable());
      assertEquals("c/b!]`s`;f=:w", toolBarItemSO0.getID());
      assertEquals("main", toolBarItemSO0.getGroupID());
      assertEquals("c/b!]`s`;f=:w", toolBarItemSO0.getImageID());
      assertEquals(false, toolBarItemSO0.enabled);
  }

  @Test
  public void test10()  throws Throwable  {
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "r", true);
      String string0 = toolBarItemSO0.getTextID();
      assertEquals("image.toolbar.run", toolBarItemSO0.getImageID());
      assertEquals("r", toolBarItemSO0.getID());
      assertEquals("main", toolBarItemSO0.getGroupID());
      assertNull(string0);
      assertEquals(false, toolBarItemSO0.isAlwaysAvailable());
      assertEquals(false, toolBarItemSO0.enabled);
  }

  @Test
  public void test11()  throws Throwable  {
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "x4UwZ5", "x4UwZ5", "x4UwZ5");
      assertNotNull(toolBarItemSO0);
      
      String string0 = toolBarItemSO0.getImageID();
      assertEquals("x4UwZ5", string0);
      assertNotNull(string0);
      assertEquals(false, toolBarItemSO0.enabled);
      assertEquals(false, toolBarItemSO0.isAlwaysAvailable());
      assertEquals("x4UwZ5.tooltip", toolBarItemSO0.getTooltipID());
      assertEquals("x4UwZ5", toolBarItemSO0.getID());
      assertEquals("main", toolBarItemSO0.getGroupID());
  }

  @Test
  public void test12()  throws Throwable  {
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "", true);
      String string0 = toolBarItemSO0.getTooltipID();
      assertEquals(false, toolBarItemSO0.isAlwaysAvailable());
      assertNull(string0);
      assertEquals("", toolBarItemSO0.getID());
      assertEquals("image.toolbar.run", toolBarItemSO0.getImageID());
      assertEquals("main", toolBarItemSO0.getGroupID());
      assertEquals(false, toolBarItemSO0.enabled);
  }

  @Test
  public void test13()  throws Throwable  {
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "x4UwZ5", "x4UwZ5", "x4UwZ5");
      assertNotNull(toolBarItemSO0);
      
      toolBarItemSO0.setState(927L);
      // Undeclared exception!
      try {
        toolBarItemSO0.setSkinButton((SWTSkinButtonUtility) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "c/b!]`s`;f=:w", "c/b!]`s`;f=:w");
      SWTSkinButtonUtility sWTSkinButtonUtility0 = new SWTSkinButtonUtility((SWTSkinObject) null);
      toolBarItemSO0.setSkinButton(sWTSkinButtonUtility0);
      // Undeclared exception!
      try {
        toolBarItemSO0.setState(0L);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "x4UwZ5", "x4UwZ5", "x4UwZ5");
      assertNotNull(toolBarItemSO0);
      
      toolBarItemSO0.setState(927L);
      long long0 = toolBarItemSO0.getState();
      assertEquals(3L, toolBarItemSO0.getState());
      assertEquals(true, toolBarItemSO0.enabled);
      assertEquals(3L, long0);
  }

  @Test
  public void test16()  throws Throwable  {
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "c/b!]`s`;f=:w", "c/b!]`s`;f=:w");
      toolBarItemSO0.setState(0L);
      assertEquals(false, toolBarItemSO0.isAlwaysAvailable());
      assertEquals("c/b!]`s`;f=:w", toolBarItemSO0.getImageID());
      assertEquals(0L, toolBarItemSO0.getState());
      assertEquals("main", toolBarItemSO0.getGroupID());
      assertEquals("c/b!]`s`;f=:w", toolBarItemSO0.getID());
  }

  @Test
  public void test17()  throws Throwable  {
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "c/b!]`s`;f=:w", "c/b!]`s`;f=:w");
      SWTSkinButtonUtility sWTSkinButtonUtility0 = new SWTSkinButtonUtility((SWTSkinObject) null);
      toolBarItemSO0.setSkinButton(sWTSkinButtonUtility0);
      toolBarView0.addToolBarItem(toolBarItemSO0, "c/b!]`s`;f=:w", (SWTSkinObject) null);
      assertEquals(0L, toolBarItemSO0.getDefaultState());
      assertEquals(false, toolBarItemSO0.enabled);
      assertEquals("c/b!]`s`;f=:w", toolBarItemSO0.getImageID());
      assertEquals("main", toolBarItemSO0.getGroupID());
      assertEquals(false, toolBarItemSO0.isAlwaysAvailable());
      assertEquals("c/b!]`s`;f=:w", toolBarItemSO0.getID());
  }

  @Test
  public void test18()  throws Throwable  {
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "c/b!]`s`;f=:w", "c/b!]`s`;f=:w");
      toolBarItemSO0.setAlwaysAvailable(true);
      toolBarItemSO0.setState(0L);
      assertEquals(true, toolBarItemSO0.isAlwaysAvailable());
      assertEquals(true, toolBarItemSO0.enabled);
  }

  @Test
  public void test19()  throws Throwable  {
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "c/b!]`s`;f=:w", "c/b!]`s`;f=:w");
      SWTSkinButtonUtility sWTSkinButtonUtility0 = new SWTSkinButtonUtility((SWTSkinObject) null);
      toolBarItemSO0.setSkinButton(sWTSkinButtonUtility0);
      toolBarItemSO0.setAlwaysAvailable(true);
      assertEquals(true, toolBarItemSO0.enabled);
      assertEquals(true, toolBarItemSO0.isAlwaysAvailable());
      assertEquals("main", toolBarItemSO0.getGroupID());
  }

  @Test
  public void test20()  throws Throwable  {
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "t", true);
      toolBarItemSO0.setImageID("image.toolbar.run");
      assertEquals(false, toolBarItemSO0.isAlwaysAvailable());
      assertEquals(false, toolBarItemSO0.enabled);
      assertEquals("main", toolBarItemSO0.getGroupID());
      assertEquals("image.toolbar.run", toolBarItemSO0.getImageID());
      assertEquals("t", toolBarItemSO0.getID());
  }

  @Test
  public void test21()  throws Throwable  {
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "c/b!]`s`;f=:w", "c/b!]`s`;f=:w");
      SWTSkinButtonUtility sWTSkinButtonUtility0 = new SWTSkinButtonUtility((SWTSkinObject) null);
      toolBarItemSO0.setSkinButton(sWTSkinButtonUtility0);
      assertEquals("c/b!]`s`;f=:w", toolBarItemSO0.getImageID());
      
      toolBarItemSO0.setImageID("c/b!]`s`;f=:w");
      assertEquals(false, toolBarItemSO0.isAlwaysAvailable());
      assertEquals("c/b!]`s`;f=:w", toolBarItemSO0.getID());
      assertEquals("main", toolBarItemSO0.getGroupID());
      assertEquals(false, toolBarItemSO0.enabled);
  }

  @Test
  public void test22()  throws Throwable  {
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "c/b!]`s`;f=:w", "c/b!]`s`;f=:w");
      toolBarItemSO0.setTextID("c/b!]`s`;f=:w");
      assertEquals(false, toolBarItemSO0.enabled);
      assertEquals("c/b!]`s`;f=:w", toolBarItemSO0.getID());
      assertEquals("c/b!]`s`;f=:w", toolBarItemSO0.getImageID());
      assertEquals(false, toolBarItemSO0.isAlwaysAvailable());
      assertEquals("main", toolBarItemSO0.getGroupID());
  }

  @Test
  public void test23()  throws Throwable  {
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO((ToolBarView) null, "y4R~kCGR]rM% b$(^.", true);
      toolBarItemSO0.setAlwaysAvailable(false);
      assertEquals("y4R~kCGR]rM% b$(^.", toolBarItemSO0.getID());
      assertEquals("image.toolbar.run", toolBarItemSO0.getImageID());
      assertEquals(false, toolBarItemSO0.enabled);
      assertEquals(false, toolBarItemSO0.isAlwaysAvailable());
      assertEquals("main", toolBarItemSO0.getGroupID());
  }
}
