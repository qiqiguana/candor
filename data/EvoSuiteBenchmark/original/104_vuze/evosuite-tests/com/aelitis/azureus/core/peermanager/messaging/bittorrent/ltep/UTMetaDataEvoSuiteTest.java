/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.peermanager.messaging.bittorrent.ltep;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.peermanager.messaging.MessageException;
import com.aelitis.azureus.core.peermanager.messaging.bittorrent.ltep.UTMetaData;
import java.nio.ByteBuffer;
import java.util.HashMap;
import java.util.Map;
import org.gudy.azureus2.core3.util.DirectByteBuffer;
import org.gudy.azureus2.core3.util.DirectByteBufferPool;
import org.gudy.azureus2.core3.util.ReferenceCountedDirectByteBuffer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UTMetaDataEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UTMetaData uTMetaData0 = new UTMetaData(0, (byte) (-25));
      int int0 = uTMetaData0.getFeatureSubID();
      assertEquals(-25, uTMetaData0.getVersion());
      assertEquals(0, uTMetaData0.getMessageType());
      assertEquals(3, int0);
      assertEquals(0, uTMetaData0.getPiece());
  }

  @Test
  public void test1()  throws Throwable  {
      UTMetaData uTMetaData0 = new UTMetaData(0, (byte) (-25));
      byte[] byteArray0 = uTMetaData0.getIDBytes();
      assertEquals(0, uTMetaData0.getPiece());
      assertNotNull(byteArray0);
      assertEquals(0, uTMetaData0.getMessageType());
      assertEquals(-25, uTMetaData0.getVersion());
  }

  @Test
  public void test2()  throws Throwable  {
      UTMetaData uTMetaData0 = new UTMetaData(1, (ByteBuffer) null, 1, (byte) (-65));
      assertNotNull(uTMetaData0);
      
      byte byte0 = uTMetaData0.getVersion();
      assertEquals((byte) (-65), byte0);
      assertEquals(2, uTMetaData0.getMessageType());
      assertEquals(1, uTMetaData0.getPiece());
  }

  @Test
  public void test3()  throws Throwable  {
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte)0, 2000);
      ByteBuffer byteBuffer0 = directByteBuffer0.getBuffer((byte)94);
      UTMetaData uTMetaData0 = new UTMetaData((-782), byteBuffer0, 329, (byte)94);
      DirectByteBuffer directByteBuffer1 = uTMetaData0.getMetadata();
      assertEquals(-782, uTMetaData0.getPiece());
      assertEquals(94, uTMetaData0.getVersion());
      assertEquals(1, uTMetaData0.getMessageType());
      assertNotNull(directByteBuffer1);
  }

  @Test
  public void test4()  throws Throwable  {
      UTMetaData uTMetaData0 = new UTMetaData(307, (byte)79);
      int int0 = uTMetaData0.getPiece();
      assertEquals(79, uTMetaData0.getVersion());
      assertEquals(307, int0);
      assertEquals(0, uTMetaData0.getMessageType());
  }

  @Test
  public void test5()  throws Throwable  {
      UTMetaData uTMetaData0 = new UTMetaData(25, (byte)114);
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte)114, (byte)114);
      try {
        uTMetaData0.deserialize(directByteBuffer0, (byte)114);
        fail("Expecting exception: MessageException");
      } catch(MessageException e) {
        /*
         * decode failed
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      UTMetaData uTMetaData0 = new UTMetaData(307, (byte)79);
      String string0 = uTMetaData0.getFeatureID();
      assertEquals(0, uTMetaData0.getMessageType());
      assertEquals("LT1", string0);
      assertEquals(307, uTMetaData0.getPiece());
      assertEquals(79, uTMetaData0.getVersion());
  }

  @Test
  public void test7()  throws Throwable  {
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte)0, 1027);
      ReferenceCountedDirectByteBuffer referenceCountedDirectByteBuffer0 = directByteBuffer0.getReferenceCountedBuffer();
      ByteBuffer byteBuffer0 = referenceCountedDirectByteBuffer0.getBuffer((byte)76);
      UTMetaData uTMetaData0 = new UTMetaData(1027, byteBuffer0, (int) (byte)76, (byte)76);
      String string0 = uTMetaData0.getDescription();
      assertEquals(1027, uTMetaData0.getPiece());
      assertEquals("ut_metadata", string0);
      assertEquals(1, uTMetaData0.getMessageType());
      assertEquals(76, uTMetaData0.getVersion());
  }

  @Test
  public void test8()  throws Throwable  {
      UTMetaData uTMetaData0 = new UTMetaData(307, (byte)79);
      uTMetaData0.setMetadata((DirectByteBuffer) null);
      assertEquals(307, uTMetaData0.getPiece());
      assertEquals(79, uTMetaData0.getVersion());
      assertEquals(0, uTMetaData0.getMessageType());
  }

  @Test
  public void test9()  throws Throwable  {
      UTMetaData uTMetaData0 = new UTMetaData(1, (ByteBuffer) null, 1, (byte) (-65));
      assertNotNull(uTMetaData0);
      
      int int0 = uTMetaData0.getType();
      assertEquals(0, int0);
      assertEquals(2, uTMetaData0.getMessageType());
      assertEquals(1, uTMetaData0.getPiece());
      assertEquals(-65, uTMetaData0.getVersion());
  }

  @Test
  public void test10()  throws Throwable  {
      UTMetaData uTMetaData0 = new UTMetaData(1, (ByteBuffer) null, 1, (byte) (-65));
      assertNotNull(uTMetaData0);
      
      int int0 = uTMetaData0.getMessageType();
      assertEquals(2, int0);
      assertEquals(1, uTMetaData0.getPiece());
      assertEquals(-65, uTMetaData0.getVersion());
  }

  @Test
  public void test11()  throws Throwable  {
      UTMetaData uTMetaData0 = new UTMetaData(0, (byte) (-25));
      String string0 = uTMetaData0.getID();
      assertEquals(0, uTMetaData0.getPiece());
      assertEquals(-25, uTMetaData0.getVersion());
      assertEquals(0, uTMetaData0.getMessageType());
      assertEquals("ut_metadata", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte)79, (byte)79);
      UTMetaData uTMetaData0 = new UTMetaData((Map) null, directByteBuffer0, (byte)0);
      assertNotNull(uTMetaData0);
      assertEquals(0, uTMetaData0.getVersion());
  }

  @Test
  public void test13()  throws Throwable  {
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte)0, 2000);
      UTMetaData uTMetaData0 = null;
      try {
        uTMetaData0 = new UTMetaData((Map) hashMap0, directByteBuffer0, (byte)94);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      UTMetaData uTMetaData0 = new UTMetaData(0, (byte) (-25));
      DirectByteBuffer[] directByteBufferArray0 = uTMetaData0.getData();
      assertNotNull(directByteBufferArray0);
      
      uTMetaData0.getData();
      assertEquals(0, uTMetaData0.getPiece());
      assertEquals(-25, uTMetaData0.getVersion());
      assertEquals(0, uTMetaData0.getMessageType());
  }

  @Test
  public void test15()  throws Throwable  {
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte)0, 1027);
      ReferenceCountedDirectByteBuffer referenceCountedDirectByteBuffer0 = directByteBuffer0.getReferenceCountedBuffer();
      ByteBuffer byteBuffer0 = referenceCountedDirectByteBuffer0.getBuffer((byte)76);
      UTMetaData uTMetaData0 = new UTMetaData(1027, byteBuffer0, (int) (byte)76, (byte)76);
      uTMetaData0.getData();
      assertEquals("java.nio.DirectByteBuffer[pos=59 lim=1027 cap=2048]", byteBuffer0.toString());
      assertEquals(1027, uTMetaData0.getPiece());
  }

  @Test
  public void test16()  throws Throwable  {
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte)0, 2000);
      ByteBuffer byteBuffer0 = directByteBuffer0.getBuffer((byte)94);
      UTMetaData uTMetaData0 = new UTMetaData((-782), byteBuffer0, 329, (byte)94);
      uTMetaData0.destroy();
      assertEquals(-782, uTMetaData0.getPiece());
      assertEquals(1, uTMetaData0.getMessageType());
      assertEquals(94, uTMetaData0.getVersion());
  }

  @Test
  public void test17()  throws Throwable  {
      UTMetaData uTMetaData0 = new UTMetaData(0, (byte) (-25));
      DirectByteBuffer[] directByteBufferArray0 = uTMetaData0.getData();
      assertNotNull(directByteBufferArray0);
      
      uTMetaData0.destroy();
      assertEquals(0, uTMetaData0.getMessageType());
      assertEquals(-25, uTMetaData0.getVersion());
      assertEquals(0, uTMetaData0.getPiece());
  }
}
