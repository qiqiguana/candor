/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.metasearch.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.metasearch.impl.DateParserClassic;
import java.util.Date;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DateParserClassicEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DateParserClassic dateParserClassic0 = new DateParserClassic();
      assertNotNull(dateParserClassic0);
      
      Date date0 = dateParserClassic0.parseDate("45 mins ago");
      assertNotNull(date0);
      assertEquals(1372796256060L, date0.getTime());
  }

  @Test
  public void test1()  throws Throwable  {
      DateParserClassic dateParserClassic0 = new DateParserClassic("y-day ", false, "y-day ");
      assertNotNull(dateParserClassic0);
      
      dateParserClassic0.parseDate("y-day ");
      assertEquals(false, dateParserClassic0.auto);
  }

  @Test
  public void test2()  throws Throwable  {
      DateParserClassic dateParserClassic0 = new DateParserClassic();
      assertNotNull(dateParserClassic0);
      
      dateParserClassic0.parseDate((String) null);
      assertEquals(true, dateParserClassic0.auto);
  }

  @Test
  public void test3()  throws Throwable  {
      DateParserClassic dateParserClassic0 = new DateParserClassic();
      assertNotNull(dateParserClassic0);
      
      Date date0 = dateParserClassic0.parseDate("Today 05:34");
      assertEquals(1372743276611L, date0.getTime());
      assertNotNull(date0);
  }

  @Test
  public void test4()  throws Throwable  {
      DateParserClassic dateParserClassic0 = new DateParserClassic();
      assertNotNull(dateParserClassic0);
      
      Date date0 = dateParserClassic0.parseDate("Y-Day 21:55");
      assertNotNull(date0);
      assertEquals(1372715736975L, date0.getTime());
  }

  @Test
  public void test5()  throws Throwable  {
      DateParserClassic dateParserClassic0 = new DateParserClassic();
      assertNotNull(dateParserClassic0);
      
      dateParserClassic0.parseDate("mon");
      assertEquals(true, dateParserClassic0.auto);
  }

  @Test
  public void test6()  throws Throwable  {
      DateParserClassic dateParserClassic0 = new DateParserClassic();
      assertNotNull(dateParserClassic0);
      
      Date date0 = dateParserClassic0.parseDate("jW-GlI");
      assertNotNull(date0);
      assertEquals(1372798957480L, date0.getTime());
  }

  @Test
  public void test7()  throws Throwable  {
      DateParserClassic dateParserClassic0 = new DateParserClassic();
      assertNotNull(dateParserClassic0);
      
      Date date0 = dateParserClassic0.parseDate("02-01 02:53");
      assertEquals(1359687217624L, date0.getTime());
      assertNotNull(date0);
  }

  @Test
  public void test8()  throws Throwable  {
      DateParserClassic dateParserClassic0 = new DateParserClassic();
      assertNotNull(dateParserClassic0);
      
      dateParserClassic0.parseDate("MM-dq ;#(Tyyyy");
      assertEquals(true, dateParserClassic0.auto);
  }

  @Test
  public void test9()  throws Throwable  {
      DateParserClassic dateParserClassic0 = new DateParserClassic();
      assertNotNull(dateParserClassic0);
      
      Date date0 = dateParserClassic0.parseDate("yesterday");
      assertNotNull(date0);
      assertEquals(1372712557952L, date0.getTime());
  }

  @Test
  public void test10()  throws Throwable  {
      DateParserClassic dateParserClassic0 = new DateParserClassic();
      assertNotNull(dateParserClassic0);
      
      dateParserClassic0.parseDate("dd mmm|@y");
      assertEquals(true, dateParserClassic0.auto);
  }

  @Test
  public void test11()  throws Throwable  {
      DateParserClassic dateParserClassic0 = new DateParserClassic();
      assertNotNull(dateParserClassic0);
      
      Date date0 = dateParserClassic0.parseDate("10 months agEo");
      assertNotNull(date0);
      assertEquals(1372798958308L, date0.getTime());
  }

  @Test
  public void test12()  throws Throwable  {
      DateParserClassic dateParserClassic0 = new DateParserClassic();
      assertNotNull(dateParserClassic0);
      
      Date date0 = dateParserClassic0.parseDate("3 hours <go");
      assertNotNull(date0);
      assertEquals(1372798958472L, date0.getTime());
  }

  @Test
  public void test13()  throws Throwable  {
      DateParserClassic dateParserClassic0 = new DateParserClassic();
      assertNotNull(dateParserClassic0);
      
      Date date0 = dateParserClassic0.parseDate("week");
      assertNotNull(date0);
      assertEquals(1372798958645L, date0.getTime());
  }

  @Test
  public void test14()  throws Throwable  {
      DateParserClassic dateParserClassic0 = new DateParserClassic();
      assertNotNull(dateParserClassic0);
      
      Date date0 = dateParserClassic0.parseDate("year");
      assertEquals(1372798958822L, date0.getTime());
      assertNotNull(date0);
  }

  @Test
  public void test15()  throws Throwable  {
      DateParserClassic dateParserClassic0 = new DateParserClassic();
      assertNotNull(dateParserClassic0);
      
      Date date0 = dateParserClassic0.parseDate("2 days ago");
      assertEquals(1372626158978L, date0.getTime());
      assertNotNull(date0);
  }

  @Test
  public void test16()  throws Throwable  {
      DateParserClassic dateParserClassic0 = new DateParserClassic();
      assertNotNull(dateParserClassic0);
      
      dateParserClassic0.parseDate("month");
      assertEquals(true, dateParserClassic0.auto);
  }

  @Test
  public void test17()  throws Throwable  {
      DateParserClassic dateParserClassic0 = new DateParserClassic();
      assertNotNull(dateParserClassic0);
      
      dateParserClassic0.parseDate("k__ggw");
      assertEquals(true, dateParserClassic0.auto);
  }
}
