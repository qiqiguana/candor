/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.peermanager.messaging.bittorrent;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.peermanager.messaging.MessageException;
import com.aelitis.azureus.core.peermanager.messaging.bittorrent.BTSuggestPiece;
import org.gudy.azureus2.core3.util.DirectByteBuffer;
import org.gudy.azureus2.core3.util.DirectByteBufferPool;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BTSuggestPieceEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BTSuggestPiece bTSuggestPiece0 = new BTSuggestPiece((-1800), (byte)41);
      int int0 = bTSuggestPiece0.getType();
      assertEquals(41, bTSuggestPiece0.getVersion());
      assertEquals(0, int0);
      assertEquals("BT_SUGGEST_PIECE piece #-1800", bTSuggestPiece0.getDescription());
  }

  @Test
  public void test1()  throws Throwable  {
      BTSuggestPiece bTSuggestPiece0 = new BTSuggestPiece(1828, (byte) (-38));
      int int0 = bTSuggestPiece0.getPieceNumber();
      assertEquals(-38, bTSuggestPiece0.getVersion());
      assertEquals(1828, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      BTSuggestPiece bTSuggestPiece0 = new BTSuggestPiece((-729), (byte)5);
      try {
        bTSuggestPiece0.deserialize((DirectByteBuffer) null, (byte)5);
        fail("Expecting exception: MessageException");
      } catch(MessageException e) {
        /*
         * [BT_SUGGEST_PIECE] decode error: data == null
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      BTSuggestPiece bTSuggestPiece0 = new BTSuggestPiece(0, (byte)104);
      String string0 = bTSuggestPiece0.getDescription();
      String string1 = bTSuggestPiece0.getDescription();
      assertSame(string1, string0);
      assertEquals("BT_SUGGEST_PIECE piece #0", string1);
      assertNotNull(string1);
      assertEquals(104, bTSuggestPiece0.getVersion());
  }

  @Test
  public void test4()  throws Throwable  {
      BTSuggestPiece bTSuggestPiece0 = new BTSuggestPiece((-1800), (byte)41);
      DirectByteBuffer[] directByteBufferArray0 = bTSuggestPiece0.getData();
      assertNotNull(directByteBufferArray0);
      
      bTSuggestPiece0.getData();
      assertEquals(-1800, bTSuggestPiece0.getPieceNumber());
      assertEquals(41, bTSuggestPiece0.getVersion());
      assertEquals("BT_SUGGEST_PIECE piece #-1800", bTSuggestPiece0.getDescription());
  }

  @Test
  public void test5()  throws Throwable  {
      BTSuggestPiece bTSuggestPiece0 = new BTSuggestPiece((int) (byte)111, (byte)0);
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte)87, (byte)4);
      BTSuggestPiece bTSuggestPiece1 = (BTSuggestPiece)bTSuggestPiece0.deserialize(directByteBuffer0, (byte)87);
      assertEquals(111, bTSuggestPiece0.getPieceNumber());
      assertEquals(87, bTSuggestPiece1.getVersion());
      assertEquals("BT_SUGGEST_PIECE piece #0", bTSuggestPiece1.getDescription());
      assertNotNull(bTSuggestPiece1);
  }

  @Test
  public void test6()  throws Throwable  {
      BTSuggestPiece bTSuggestPiece0 = new BTSuggestPiece(0, (byte)104);
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte)104, (byte)104);
      try {
        bTSuggestPiece0.deserialize(directByteBuffer0, (byte)104);
        fail("Expecting exception: MessageException");
      } catch(MessageException e) {
        /*
         * [BT_SUGGEST_PIECE] decode error: payload.remaining[104] != 12
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      BTSuggestPiece bTSuggestPiece0 = new BTSuggestPiece((int) (byte)111, (byte)0);
      bTSuggestPiece0.getVersion();
      BTSuggestPiece bTSuggestPiece1 = new BTSuggestPiece((-869), (byte)111);
      byte[] byteArray0 = bTSuggestPiece1.getIDBytes();
      assertNotNull(byteArray0);
      
      BTSuggestPiece bTSuggestPiece2 = new BTSuggestPiece(8, (byte)0);
      int int0 = bTSuggestPiece2.getFeatureSubID();
      assertEquals(13, int0);
      
      BTSuggestPiece bTSuggestPiece3 = new BTSuggestPiece(0, (byte)4);
      String string0 = bTSuggestPiece2.getFeatureID();
      assertEquals("BT1", string0);
      assertEquals(8, bTSuggestPiece2.getPieceNumber());
      
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte)87, (byte)4);
      BTSuggestPiece bTSuggestPiece4 = (BTSuggestPiece)bTSuggestPiece3.deserialize(directByteBuffer0, (byte)87);
      assertNotNull(bTSuggestPiece4);
      assertEquals(0, bTSuggestPiece4.getPieceNumber());
      
      bTSuggestPiece3.getType();
      assertEquals(4, bTSuggestPiece3.getVersion());
      assertEquals("BT_SUGGEST_PIECE piece #0", bTSuggestPiece3.getDescription());
  }

  @Test
  public void test8()  throws Throwable  {
      BTSuggestPiece bTSuggestPiece0 = new BTSuggestPiece(0, (byte)104);
      bTSuggestPiece0.destroy();
      assertEquals(104, bTSuggestPiece0.getVersion());
      assertEquals(0, bTSuggestPiece0.getPieceNumber());
      assertEquals("BT_SUGGEST_PIECE piece #0", bTSuggestPiece0.getDescription());
  }

  @Test
  public void test9()  throws Throwable  {
      BTSuggestPiece bTSuggestPiece0 = new BTSuggestPiece((-1800), (byte)41);
      DirectByteBuffer[] directByteBufferArray0 = bTSuggestPiece0.getData();
      assertNotNull(directByteBufferArray0);
      
      bTSuggestPiece0.destroy();
      assertEquals(41, bTSuggestPiece0.getVersion());
      assertEquals(-1800, bTSuggestPiece0.getPieceNumber());
  }
}
