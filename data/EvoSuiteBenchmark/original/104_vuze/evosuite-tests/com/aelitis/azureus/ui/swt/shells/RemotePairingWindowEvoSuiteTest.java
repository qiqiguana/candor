/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.ui.swt.shells;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.ui.swt.shells.RemotePairingWindow;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RemotePairingWindowEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RemotePairingWindow.testPairingClass remotePairingWindow_testPairingClass0 = new RemotePairingWindow.testPairingClass();
      assertNotNull(remotePairingWindow_testPairingClass0);
      
      int int0 = remotePairingWindow_testPairingClass0.getOutcome();
      assertEquals("Success", remotePairingWindow_testPairingClass0.getErrorMessage());
      assertEquals(1, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      RemotePairingWindow.testPairingClass remotePairingWindow_testPairingClass0 = new RemotePairingWindow.testPairingClass();
      assertNotNull(remotePairingWindow_testPairingClass0);
      
      String string0 = remotePairingWindow_testPairingClass0.getErrorMessage();
      assertEquals(1, remotePairingWindow_testPairingClass0.getOutcome());
      assertEquals("Success", string0);
      assertNotNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      RemotePairingWindow.testPairingClass remotePairingWindow_testPairingClass0 = new RemotePairingWindow.testPairingClass();
      assertNotNull(remotePairingWindow_testPairingClass0);
      
      remotePairingWindow_testPairingClass0.cancel();
      assertEquals("Success", remotePairingWindow_testPairingClass0.getErrorMessage());
      assertEquals(1, remotePairingWindow_testPairingClass0.getOutcome());
  }

  @Test
  public void test3()  throws Throwable  {
      RemotePairingWindow.open();
  }

  @Test
  public void test4()  throws Throwable  {
      RemotePairingWindow remotePairingWindow0 = RemotePairingWindow.instance;
      // Undeclared exception!
      try {
        remotePairingWindow0.switchToCode();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      RemotePairingWindow remotePairingWindow0 = new RemotePairingWindow();
      assertNotNull(remotePairingWindow0);
  }

  @Test
  public void test6()  throws Throwable  {
      RemotePairingWindow remotePairingWindow0 = RemotePairingWindow.instance;
      remotePairingWindow0.testPairing(true);
  }

  @Test
  public void test7()  throws Throwable  {
      RemotePairingWindow.testPairingClass remotePairingWindow_testPairingClass0 = new RemotePairingWindow.testPairingClass();
      assertNotNull(remotePairingWindow_testPairingClass0);
      
      remotePairingWindow_testPairingClass0.inc();
      assertEquals(1, remotePairingWindow_testPairingClass0.curOutcome);
      assertEquals(2, remotePairingWindow_testPairingClass0.getOutcome());
  }
}
