/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.proxy.socks.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.proxy.socks.impl.AESocksProxyAddressImpl;
import java.net.Inet4Address;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AESocksProxyAddressImplEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      AESocksProxyAddressImpl aESocksProxyAddressImpl0 = new AESocksProxyAddressImpl("127.0.0.1", (InetAddress) null, 8);
      assertNotNull(aESocksProxyAddressImpl0);
      
      int int0 = aESocksProxyAddressImpl0.getPort();
      assertEquals(8, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      AESocksProxyAddressImpl aESocksProxyAddressImpl0 = new AESocksProxyAddressImpl("127.0.0.1", (InetAddress) null, 8);
      assertNotNull(aESocksProxyAddressImpl0);
      
      Inet4Address inet4Address0 = (Inet4Address)aESocksProxyAddressImpl0.getAddress();
      assertEquals(8, aESocksProxyAddressImpl0.getPort());
      assertNotNull(inet4Address0);
  }

  @Test
  public void test2()  throws Throwable  {
      AESocksProxyAddressImpl aESocksProxyAddressImpl0 = new AESocksProxyAddressImpl("127.0.0.1", (InetAddress) null, 8);
      assertNotNull(aESocksProxyAddressImpl0);
      
      String string0 = aESocksProxyAddressImpl0.getUnresolvedAddress();
      assertEquals(8, aESocksProxyAddressImpl0.getPort());
      assertNotNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          Inet4Address inet4Address0 = (Inet4Address)InetAddress.getLocalHost();
          AESocksProxyAddressImpl aESocksProxyAddressImpl0 = new AESocksProxyAddressImpl("..", (InetAddress) inet4Address0, 8);
          assertEquals(8, aESocksProxyAddressImpl0.getPort());
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test4()  throws Throwable  {
      AESocksProxyAddressImpl aESocksProxyAddressImpl0 = new AESocksProxyAddressImpl("QO`b=2w>N^Et", (InetAddress) null, 1101);
      assertNotNull(aESocksProxyAddressImpl0);
      assertEquals(1101, aESocksProxyAddressImpl0.getPort());
  }

  @Test
  public void test5()  throws Throwable  {
      AESocksProxyAddressImpl aESocksProxyAddressImpl0 = new AESocksProxyAddressImpl(".32652.3994245.66MVr", (InetAddress) null, 1101);
      assertEquals(1101, aESocksProxyAddressImpl0.getPort());
      assertNotNull(aESocksProxyAddressImpl0);
  }

  @Test
  public void test6()  throws Throwable  {
      AESocksProxyAddressImpl aESocksProxyAddressImpl0 = new AESocksProxyAddressImpl("..", (InetAddress) null, 8);
      assertNotNull(aESocksProxyAddressImpl0);
      assertEquals(8, aESocksProxyAddressImpl0.getPort());
  }
}
