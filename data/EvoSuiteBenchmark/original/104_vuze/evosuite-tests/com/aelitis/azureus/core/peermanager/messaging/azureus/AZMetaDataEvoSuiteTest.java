/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.peermanager.messaging.azureus;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.peermanager.messaging.MessageException;
import com.aelitis.azureus.core.peermanager.messaging.azureus.AZMetaData;
import java.nio.ByteBuffer;
import java.util.HashMap;
import java.util.Map;
import org.gudy.azureus2.core3.util.DirectByteBuffer;
import org.gudy.azureus2.core3.util.DirectByteBufferPool;
import org.gudy.azureus2.core3.util.ReferenceCountedDirectByteBuffer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AZMetaDataEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AZMetaData aZMetaData0 = new AZMetaData(1, (byte) (-71));
      int int0 = aZMetaData0.getType();
      assertEquals(0, int0);
      assertEquals(-71, aZMetaData0.getVersion());
      assertEquals("AZ_METADATA piece #1, mt=0", aZMetaData0.getDescription());
  }

  @Test
  public void test1()  throws Throwable  {
      AZMetaData aZMetaData0 = new AZMetaData(0, (byte)68);
      byte byte0 = aZMetaData0.getVersion();
      assertEquals((byte)68, byte0);
      assertEquals("AZ_METADATA piece #0, mt=0", aZMetaData0.getDescription());
  }

  @Test
  public void test2()  throws Throwable  {
      AZMetaData aZMetaData0 = new AZMetaData(0, (byte)68);
      int int0 = aZMetaData0.getPiece();
      assertEquals(0, int0);
      assertEquals(0, aZMetaData0.getMessageType());
      assertEquals(68, aZMetaData0.getVersion());
  }

  @Test
  public void test3()  throws Throwable  {
      AZMetaData aZMetaData0 = new AZMetaData(1821, (ByteBuffer) null, 0, (byte) (-15));
      assertNotNull(aZMetaData0);
      
      aZMetaData0.setMetadata((DirectByteBuffer) null);
      assertEquals(-15, aZMetaData0.getVersion());
      assertEquals("AZ_METADATA piece #1821, mt=2", aZMetaData0.getDescription());
      assertEquals(2, aZMetaData0.getMessageType());
  }

  @Test
  public void test4()  throws Throwable  {
      AZMetaData aZMetaData0 = new AZMetaData(0, (byte)68);
      String string0 = aZMetaData0.getDescription();
      assertNotNull(string0);
      assertEquals("AZ_METADATA piece #0, mt=0", string0);
      assertEquals(68, aZMetaData0.getVersion());
  }

  @Test
  public void test5()  throws Throwable  {
      AZMetaData aZMetaData0 = new AZMetaData(0, (byte)116);
      byte[] byteArray0 = aZMetaData0.getIDBytes();
      assertNotNull(byteArray0);
      assertEquals(116, aZMetaData0.getVersion());
      assertEquals("AZ_METADATA piece #0, mt=0", aZMetaData0.getDescription());
      assertEquals(0, aZMetaData0.getPiece());
  }

  @Test
  public void test6()  throws Throwable  {
      AZMetaData aZMetaData0 = new AZMetaData(0, (byte)116);
      int int0 = aZMetaData0.getFeatureSubID();
      assertEquals(8, int0);
      assertEquals("AZ_METADATA piece #0, mt=0", aZMetaData0.getDescription());
      assertEquals(116, aZMetaData0.getVersion());
  }

  @Test
  public void test7()  throws Throwable  {
      AZMetaData aZMetaData0 = new AZMetaData(0, (byte)68);
      aZMetaData0.getMetadata();
      assertEquals(68, aZMetaData0.getVersion());
      assertEquals("AZ_METADATA piece #0, mt=0", aZMetaData0.getDescription());
  }

  @Test
  public void test8()  throws Throwable  {
      AZMetaData aZMetaData0 = new AZMetaData(0, (byte)68);
      String string0 = aZMetaData0.getFeatureID();
      assertEquals("AZ_METADATA piece #0, mt=0", aZMetaData0.getDescription());
      assertEquals("AZ1", string0);
      assertEquals(68, aZMetaData0.getVersion());
  }

  @Test
  public void test9()  throws Throwable  {
      AZMetaData aZMetaData0 = new AZMetaData(1821, (ByteBuffer) null, 0, (byte) (-15));
      assertNotNull(aZMetaData0);
      
      int int0 = aZMetaData0.getMessageType();
      assertEquals("AZ_METADATA piece #1821, mt=2", aZMetaData0.getDescription());
      assertEquals(-15, aZMetaData0.getVersion());
      assertEquals(2, int0);
  }

  @Test
  public void test10()  throws Throwable  {
      AZMetaData aZMetaData0 = new AZMetaData(1, (byte) (-71));
      // Undeclared exception!
      try {
        aZMetaData0.deserialize((DirectByteBuffer) null, (byte)35);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte) (-10), 496);
      ReferenceCountedDirectByteBuffer referenceCountedDirectByteBuffer0 = directByteBuffer0.getReferenceCountedBuffer();
      ByteBuffer byteBuffer0 = referenceCountedDirectByteBuffer0.getBuffer((byte)31);
      AZMetaData aZMetaData0 = new AZMetaData(1, byteBuffer0, 1, (byte) (-36));
      DirectByteBuffer[] directByteBufferArray0 = aZMetaData0.getData();
      assertEquals(-36, aZMetaData0.getVersion());
      assertNotNull(directByteBufferArray0);
      assertEquals("AZ_METADATA piece #1, mt=1", aZMetaData0.getDescription());
      assertEquals(1, aZMetaData0.getPiece());
  }

  @Test
  public void test12()  throws Throwable  {
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte) (-10), 496);
      AZMetaData aZMetaData0 = new AZMetaData((Map) null, directByteBuffer0, (byte)1);
      assertEquals(1, aZMetaData0.getVersion());
      assertNotNull(aZMetaData0);
  }

  @Test
  public void test13()  throws Throwable  {
      HashMap<Long, Integer> hashMap0 = new HashMap<Long, Integer>();
      AZMetaData aZMetaData0 = null;
      try {
        aZMetaData0 = new AZMetaData((Map) hashMap0, (DirectByteBuffer) null, (byte)0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      AZMetaData aZMetaData0 = new AZMetaData(0, (byte)68);
      DirectByteBuffer[] directByteBufferArray0 = aZMetaData0.getData();
      assertNotNull(directByteBufferArray0);
      
      aZMetaData0.getData();
      assertEquals(68, aZMetaData0.getVersion());
      assertEquals(0, aZMetaData0.getPiece());
      assertEquals("AZ_METADATA piece #0, mt=0", aZMetaData0.getDescription());
  }

  @Test
  public void test15()  throws Throwable  {
      AZMetaData aZMetaData0 = new AZMetaData(1, (byte) (-71));
      DirectByteBuffer[] directByteBufferArray0 = aZMetaData0.getData();
      assertNotNull(directByteBufferArray0);
      
      aZMetaData0.destroy();
      assertEquals("AZ_METADATA piece #1, mt=0", aZMetaData0.getDescription());
      assertEquals(-71, aZMetaData0.getVersion());
  }

  @Test
  public void test16()  throws Throwable  {
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte) (-10), 496);
      ReferenceCountedDirectByteBuffer referenceCountedDirectByteBuffer0 = directByteBuffer0.getReferenceCountedBuffer();
      ByteBuffer byteBuffer0 = referenceCountedDirectByteBuffer0.getBuffer((byte)31);
      AZMetaData aZMetaData0 = new AZMetaData(1, byteBuffer0, 1, (byte) (-36));
      aZMetaData0.destroy();
      assertEquals(-36, aZMetaData0.getVersion());
      assertEquals("AZ_METADATA piece #1, mt=1", aZMetaData0.getDescription());
      assertEquals(1, aZMetaData0.getPiece());
  }
}
