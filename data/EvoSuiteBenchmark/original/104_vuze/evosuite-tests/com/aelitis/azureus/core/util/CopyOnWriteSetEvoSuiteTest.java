/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.util.CopyOnWriteSet;
import java.util.Iterator;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CopyOnWriteSetEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CopyOnWriteSet<Object> copyOnWriteSet0 = new CopyOnWriteSet<Object>();
      boolean boolean0 = copyOnWriteSet0.contains((Object) copyOnWriteSet0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      CopyOnWriteSet<Object> copyOnWriteSet0 = new CopyOnWriteSet<Object>();
      int int0 = copyOnWriteSet0.size();
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      CopyOnWriteSet<Object> copyOnWriteSet0 = new CopyOnWriteSet<Object>();
      Iterator<Object> iterator0 = copyOnWriteSet0.iterator();
      assertEquals(false, iterator0.hasNext());
  }

  @Test
  public void test3()  throws Throwable  {
      CopyOnWriteSet<Object> copyOnWriteSet0 = new CopyOnWriteSet<Object>();
      copyOnWriteSet0.add((Object) true);
      assertEquals(1, copyOnWriteSet0.size());
  }

  @Test
  public void test4()  throws Throwable  {
      CopyOnWriteSet<Object> copyOnWriteSet0 = new CopyOnWriteSet<Object>();
      boolean boolean0 = copyOnWriteSet0.remove((Object) true);
      assertEquals(false, boolean0);
  }
}
