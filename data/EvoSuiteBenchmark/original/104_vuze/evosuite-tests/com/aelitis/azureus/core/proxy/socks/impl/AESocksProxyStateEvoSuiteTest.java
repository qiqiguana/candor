/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.proxy.socks.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.proxy.socks.AESocksProxyConnection;
import com.aelitis.azureus.core.proxy.socks.impl.AESocksProxyState;
import java.io.IOException;
import java.nio.channels.SocketChannel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AESocksProxyStateEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AESocksProxyState aESocksProxyState0 = new AESocksProxyState((AESocksProxyConnection) null);
      try {
        aESocksProxyState0.connect((SocketChannel) null);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * Connect not supported: null
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      AESocksProxyState aESocksProxyState0 = new AESocksProxyState((AESocksProxyConnection) null);
      try {
        aESocksProxyState0.write((SocketChannel) null);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * Write not supported: null
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      AESocksProxyState aESocksProxyState0 = new AESocksProxyState((AESocksProxyConnection) null);
      try {
        aESocksProxyState0.read((SocketChannel) null);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * Read not supported: null
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      AESocksProxyState aESocksProxyState0 = new AESocksProxyState((AESocksProxyConnection) null);
      String string0 = aESocksProxyState0.getStateName();
      assertEquals("com.aelitis.azureus.core.proxy.socks.impl.AESocksProxyState, buffer = null", string0);
      assertNotNull(string0);
  }
}
