/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.security;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.security.CryptoECCUtils;
import com.aelitis.azureus.core.security.CryptoManagerException;
import java.security.PrivateKey;
import java.security.PublicKey;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CryptoECCUtilsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      try {
        CryptoECCUtils.createKeys();
        fail("Expecting exception: CryptoManagerException");
      } catch(CryptoManagerException e) {
        /*
         * Failed to create keys
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      try {
        CryptoECCUtils.rawdataToPubkey(byteArray0);
        fail("Expecting exception: CryptoManagerException");
      } catch(CryptoManagerException e) {
        /*
         * Failed to decode public key
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[28];
      try {
        CryptoECCUtils.rawdataToPrivkey(byteArray0);
        fail("Expecting exception: CryptoManagerException");
      } catch(CryptoManagerException e) {
        /*
         * Failed to decode private key
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      CryptoECCUtils cryptoECCUtils0 = new CryptoECCUtils();
      assertNotNull(cryptoECCUtils0);
  }

  @Test
  public void test4()  throws Throwable  {
      try {
        CryptoECCUtils.keyToRawdata((PrivateKey) null);
        fail("Expecting exception: CryptoManagerException");
      } catch(CryptoManagerException e) {
        /*
         * Invalid private key
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      try {
        CryptoECCUtils.keyToRawdata((PublicKey) null);
        fail("Expecting exception: CryptoManagerException");
      } catch(CryptoManagerException e) {
        /*
         * Invalid public key
         */
      }
  }
}
