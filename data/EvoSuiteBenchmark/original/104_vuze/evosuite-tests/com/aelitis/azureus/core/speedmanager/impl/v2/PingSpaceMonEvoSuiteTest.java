/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.speedmanager.impl.v2;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.speedmanager.impl.v2.PSMonitorListener;
import com.aelitis.azureus.core.speedmanager.impl.v2.PingSpaceMon;
import com.aelitis.azureus.core.speedmanager.impl.v2.TransferMode;
import org.evosuite.runtime.System;
import org.evosuite.testcase.CodeUnderTestException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PingSpaceMonEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PingSpaceMon.DefaultLimitEstimate pingSpaceMon_DefaultLimitEstimate0 = new PingSpaceMon.DefaultLimitEstimate();
      long long0 = pingSpaceMon_DefaultLimitEstimate0.getWhen();
      assertEquals(0L, long0);
  }

  @Test
  public void test1()  throws Throwable  {
      PingSpaceMon.DefaultLimitEstimate pingSpaceMon_DefaultLimitEstimate0 = new PingSpaceMon.DefaultLimitEstimate();
      String string0 = pingSpaceMon_DefaultLimitEstimate0.getString();
      assertEquals("default", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      PingSpaceMon.DefaultLimitEstimate pingSpaceMon_DefaultLimitEstimate0 = new PingSpaceMon.DefaultLimitEstimate();
      float float0 = pingSpaceMon_DefaultLimitEstimate0.getEstimateType();
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test
  public void test3()  throws Throwable  {
      PingSpaceMon.DefaultLimitEstimate pingSpaceMon_DefaultLimitEstimate0 = new PingSpaceMon.DefaultLimitEstimate();
      int[][] intArray0 = pingSpaceMon_DefaultLimitEstimate0.getSegments();
      assertNotNull(intArray0);
  }

  @Test
  public void test4()  throws Throwable  {
      PingSpaceMon.DefaultLimitEstimate pingSpaceMon_DefaultLimitEstimate0 = new PingSpaceMon.DefaultLimitEstimate();
      float float0 = pingSpaceMon_DefaultLimitEstimate0.getMetricRating();
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test
  public void test5()  throws Throwable  {
      PingSpaceMon.DefaultLimitEstimate pingSpaceMon_DefaultLimitEstimate0 = new PingSpaceMon.DefaultLimitEstimate();
      int int0 = pingSpaceMon_DefaultLimitEstimate0.getBytesPerSec();
      assertEquals(1, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      PingSpaceMon.DefaultLimitEstimate pingSpaceMon_DefaultLimitEstimate0 = (PingSpaceMon.DefaultLimitEstimate)PingSpaceMon.getDownloadEstCapacity();
      assertEquals(0L, pingSpaceMon_DefaultLimitEstimate0.getWhen());
  }

  @Test
  public void test7()  throws Throwable  {
      PingSpaceMon pingSpaceMon0 = new PingSpaceMon();
      assertEquals(false, pingSpaceMon0.checkForLowerLimits());
      
      pingSpaceMon0.removeListener((PSMonitorListener) null);
      assertEquals(900000L, pingSpaceMon0.nextCheck);
  }

  @Test
  public void test8()  throws Throwable  {
      PingSpaceMon.DefaultLimitEstimate pingSpaceMon_DefaultLimitEstimate0 = (PingSpaceMon.DefaultLimitEstimate)PingSpaceMon.getUploadLimit(true);
      assertEquals((-1.0F), pingSpaceMon_DefaultLimitEstimate0.getMetricRating(), 0.01F);
  }

  @Test
  public void test9()  throws Throwable  {
      PingSpaceMon.DefaultLimitEstimate pingSpaceMon_DefaultLimitEstimate0 = (PingSpaceMon.DefaultLimitEstimate)PingSpaceMon.getDownloadLimit();
      assertEquals((-1.0F), pingSpaceMon_DefaultLimitEstimate0.getMetricRating(), 0.01F);
  }

  @Test
  public void test10()  throws Throwable  {
      PingSpaceMon.DefaultLimitEstimate pingSpaceMon_DefaultLimitEstimate0 = (PingSpaceMon.DefaultLimitEstimate)PingSpaceMon.getUploadEstCapacity();
      assertEquals(0L, pingSpaceMon_DefaultLimitEstimate0.getWhen());
  }

  @Test
  public void test11()  throws Throwable  {
      PingSpaceMon pingSpaceMon0 = new PingSpaceMon();
      assertEquals(false, pingSpaceMon0.checkForLowerLimits());
      
      pingSpaceMon0.addListener((PSMonitorListener) null);
      // Undeclared exception!
      try {
        pingSpaceMon0.addListener((PSMonitorListener) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      PingSpaceMon pingSpaceMon0 = new PingSpaceMon();
      TransferMode transferMode0 = new TransferMode();
      pingSpaceMon0.updateStatus(transferMode0);
  }

  @Test
  public void test13()  throws Throwable  {
      System.setCurrentTimeMillis((-9223372036854775781L));
      PingSpaceMon pingSpaceMon0 = new PingSpaceMon();
      pingSpaceMon0.addListener((PSMonitorListener) null);
      TransferMode transferMode0 = new TransferMode();
      pingSpaceMon0.updateStatus(transferMode0);
  }
}
