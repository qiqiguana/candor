/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.metasearch.impl.plugin;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.metasearch.impl.plugin.PluginEngine;
import com.aelitis.azureus.core.metasearch.impl.plugin.PluginResult;
import org.gudy.azureus2.plugins.utils.search.SearchResult;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PluginResultEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PluginResult pluginResult0 = new PluginResult((PluginEngine) null, (SearchResult) null, ".,I{dQk{");
      // Undeclared exception!
      try {
        pluginResult0.toJSONMap();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      PluginResult pluginResult0 = new PluginResult((PluginEngine) null, (SearchResult) null, "");
      int int0 = pluginResult0.getVotes();
      assertEquals((-1.0F), pluginResult0.getAccuracy(), 0.01F);
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      PluginResult pluginResult0 = new PluginResult((PluginEngine) null, (SearchResult) null, "Alg.Alias.Signature.SHA1withRSAEncryption");
      String string0 = pluginResult0.getSearchQuery();
      assertEquals("Alg.Alias.Signature.SHA1withRSAEncryption", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      PluginResult pluginResult0 = new PluginResult((PluginEngine) null, (SearchResult) null, ".,I{dQk{");
      String string0 = pluginResult0.getDownloadLink();
      assertNotNull(string0);
      assertEquals(" : 0 s, 0p, ", pluginResult0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      PluginResult pluginResult0 = new PluginResult((PluginEngine) null, (SearchResult) null, "Alg.Alias.Signature.SHA1withRSAEncryption");
      String string0 = pluginResult0.getPlayLink();
      assertNotNull(string0);
      assertEquals(" : 0 s, 0p, ", pluginResult0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      PluginResult pluginResult0 = new PluginResult((PluginEngine) null, (SearchResult) null, "f?*(l56OA?|gC;,nET");
      String string0 = pluginResult0.getDownloadButtonLink();
      assertNotNull(string0);
      assertEquals(" : 0 s, 0p, ", pluginResult0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      PluginResult pluginResult0 = new PluginResult((PluginEngine) null, (SearchResult) null, "2+=a{7g5*on7}c(");
      String string0 = pluginResult0.getUID();
      assertNotNull(string0);
      assertEquals(" : 0 s, 0p, ", pluginResult0.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      PluginResult pluginResult0 = new PluginResult((PluginEngine) null, (SearchResult) null, "f?*(l56OA?|gC;,nET");
      String string0 = pluginResult0.getCDPLink();
      assertNotNull(string0);
      assertEquals(" : 0 s, 0p, ", pluginResult0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      PluginResult pluginResult0 = new PluginResult((PluginEngine) null, (SearchResult) null, "Alg.Alias.Signature.SHA1withRSAEncryption");
      pluginResult0.setCategory((String) null);
      assertEquals(0, pluginResult0.getVotes());
  }

  @Test
  public void test9()  throws Throwable  {
      PluginResult pluginResult0 = new PluginResult((PluginEngine) null, (SearchResult) null, "");
      pluginResult0.setContentType("");
      assertEquals(0, pluginResult0.getNbPeers());
  }

  @Test
  public void test10()  throws Throwable  {
      PluginResult pluginResult0 = new PluginResult((PluginEngine) null, (SearchResult) null, ".,I{dQk{");
      int int0 = pluginResult0.getVotesDown();
      assertEquals((-9223372036854775808L), pluginResult0.getSize());
      assertEquals(0, int0);
  }

  @Test
  public void test11()  throws Throwable  {
      PluginResult pluginResult0 = new PluginResult((PluginEngine) null, (SearchResult) null, "2+=a{7g5*on7}c(");
      String string0 = pluginResult0.getDRMKey();
      assertNotNull(string0);
      assertEquals(" : 0 s, 0p, ", pluginResult0.toString());
  }

  @Test
  public void test12()  throws Throwable  {
      PluginResult pluginResult0 = new PluginResult((PluginEngine) null, (SearchResult) null, "Alg.Alias.Signature.SHA1withRSAEncryption");
      boolean boolean0 = pluginResult0.isPrivate();
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      PluginResult pluginResult0 = new PluginResult((PluginEngine) null, (SearchResult) null, "f?*(l56OA?|gC;,nET");
      String string0 = pluginResult0.getContentType();
      assertNotNull(string0);
      assertEquals(" : 0 s, 0p, ", pluginResult0.toString());
  }

  @Test
  public void test14()  throws Throwable  {
      PluginResult pluginResult0 = new PluginResult((PluginEngine) null, (SearchResult) null, "Alg.Alias.Signature.SHA1withRSAEncryption");
      String string0 = pluginResult0.getHash();
      assertNull(string0);
  }

  @Test
  public void test15()  throws Throwable  {
      PluginResult pluginResult0 = new PluginResult((PluginEngine) null, (SearchResult) null, "2+=a{7g5*on7}c(");
      float float0 = pluginResult0.getAccuracy();
      assertEquals((-1.0F), float0, 0.01F);
  }
}
