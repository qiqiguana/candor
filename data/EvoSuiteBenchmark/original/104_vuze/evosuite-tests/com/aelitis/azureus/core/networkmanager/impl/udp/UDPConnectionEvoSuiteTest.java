/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.networkmanager.impl.udp;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.networkmanager.impl.udp.UDPConnection;
import com.aelitis.azureus.core.networkmanager.impl.udp.UDPConnectionSet;
import com.aelitis.azureus.core.networkmanager.impl.udp.UDPTransportHelper;
import java.io.IOException;
import java.nio.ByteBuffer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UDPConnectionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UDPConnection uDPConnection0 = new UDPConnection((UDPConnectionSet) null, (-6));
      int int0 = uDPConnection0.getID();
      assertEquals((-6), int0);
      assertEquals(true, uDPConnection0.isConnected());
  }

  @Test
  public void test1()  throws Throwable  {
      UDPConnection uDPConnection0 = new UDPConnection((UDPConnectionSet) null, 1921);
      assertEquals(true, uDPConnection0.isConnected());
      
      // Undeclared exception!
      try {
        uDPConnection0.failed((Throwable) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      UDPConnection uDPConnection0 = new UDPConnection((UDPConnectionSet) null, (-2));
      assertEquals(true, uDPConnection0.isConnected());
      
      // Undeclared exception!
      try {
        uDPConnection0.close((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      UDPConnection uDPConnection0 = new UDPConnection((UDPConnectionSet) null, 13);
      uDPConnection0.setID(13);
      assertEquals(13, uDPConnection0.getID());
      assertEquals(true, uDPConnection0.isConnected());
  }

  @Test
  public void test4()  throws Throwable  {
      UDPConnection uDPConnection0 = new UDPConnection((UDPConnectionSet) null, 1773);
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try {
        uDPConnection0.setSecret(byteArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      UDPConnection uDPConnection0 = new UDPConnection((UDPConnectionSet) null, 4);
      // Undeclared exception!
      try {
        uDPConnection0.canWrite();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      UDPConnection uDPConnection0 = new UDPConnection((UDPConnectionSet) null, 1921);
      uDPConnection0.setTransport((UDPTransportHelper) null);
      assertEquals(1921, uDPConnection0.getID());
      assertEquals(true, uDPConnection0.isConnected());
  }

  @Test
  public void test7()  throws Throwable  {
      UDPConnection uDPConnection0 = new UDPConnection((UDPConnectionSet) null, 18);
      // Undeclared exception!
      try {
        uDPConnection0.getSelector();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      UDPConnection uDPConnection0 = new UDPConnection((UDPConnectionSet) null, 1980);
      // Undeclared exception!
      try {
        uDPConnection0.sent();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      UDPConnection uDPConnection0 = new UDPConnection((UDPConnectionSet) null, 18);
      boolean boolean0 = uDPConnection0.isConnected();
      assertEquals(true, boolean0);
      assertEquals(18, uDPConnection0.getID());
  }

  @Test
  public void test10()  throws Throwable  {
      UDPConnection uDPConnection0 = new UDPConnection((UDPConnectionSet) null, 1921, (UDPTransportHelper) null);
      assertEquals(1921, uDPConnection0.getID());
      assertEquals(true, uDPConnection0.isConnected());
  }

  @Test
  public void test11()  throws Throwable  {
      UDPConnection uDPConnection0 = new UDPConnection((UDPConnectionSet) null, 592);
      ByteBuffer[] byteBufferArray0 = new ByteBuffer[8];
      // Undeclared exception!
      try {
        uDPConnection0.write(byteBufferArray0, 0, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      UDPConnection uDPConnection0 = new UDPConnection((UDPConnectionSet) null, 21);
      // Undeclared exception!
      try {
        uDPConnection0.isIncoming();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      UDPConnection uDPConnection0 = new UDPConnection((UDPConnectionSet) null, 1921);
      uDPConnection0.getTransport();
      assertEquals(true, uDPConnection0.isConnected());
      assertEquals(1921, uDPConnection0.getID());
  }

  @Test
  public void test14()  throws Throwable  {
      UDPConnection uDPConnection0 = new UDPConnection((UDPConnectionSet) null, 157);
      boolean boolean0 = uDPConnection0.canRead();
      assertEquals(false, boolean0);
      assertEquals(157, uDPConnection0.getID());
      assertEquals(true, uDPConnection0.isConnected());
  }

  @Test
  public void test15()  throws Throwable  {
      UDPConnection uDPConnection0 = new UDPConnection((UDPConnectionSet) null, 592);
      int int0 = uDPConnection0.read((ByteBuffer) null);
      assertEquals(true, uDPConnection0.isConnected());
      assertEquals(592, uDPConnection0.getID());
      assertEquals(0, int0);
  }

  @Test
  public void test16()  throws Throwable  {
      UDPConnection uDPConnection0 = new UDPConnection((UDPConnectionSet) null, (-6));
      uDPConnection0.poll();
      assertEquals(-6, uDPConnection0.getID());
      assertEquals(true, uDPConnection0.isConnected());
  }
}
