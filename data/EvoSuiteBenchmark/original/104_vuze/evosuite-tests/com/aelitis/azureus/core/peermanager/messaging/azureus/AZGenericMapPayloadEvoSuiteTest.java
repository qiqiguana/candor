/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.peermanager.messaging.azureus;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.peermanager.messaging.MessageException;
import com.aelitis.azureus.core.peermanager.messaging.azureus.AZGenericMapPayload;
import java.util.HashMap;
import java.util.Map;
import org.gudy.azureus2.core3.util.DirectByteBuffer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AZGenericMapPayloadEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      AZGenericMapPayload aZGenericMapPayload0 = new AZGenericMapPayload("", (Map) hashMap0, (byte)60);
      int int0 = aZGenericMapPayload0.getFeatureSubID();
      assertEquals(2, int0);
      assertEquals(60, aZGenericMapPayload0.getVersion());
      assertEquals("", aZGenericMapPayload0.getDescription());
  }

  @Test
  public void test1()  throws Throwable  {
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      AZGenericMapPayload aZGenericMapPayload0 = new AZGenericMapPayload("", (Map) hashMap0, (byte)16);
      String string0 = aZGenericMapPayload0.getDescription();
      assertNotNull(string0);
      assertEquals(16, aZGenericMapPayload0.getVersion());
      assertEquals("", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      AZGenericMapPayload aZGenericMapPayload0 = new AZGenericMapPayload("", (Map) hashMap0, (byte)60);
      Map<Object, Object> map0 = aZGenericMapPayload0.getMapPayload();
      assertEquals(60, aZGenericMapPayload0.getVersion());
      assertNotNull(map0);
      assertEquals("", aZGenericMapPayload0.getID());
      assertEquals("", aZGenericMapPayload0.getDescription());
  }

  @Test
  public void test3()  throws Throwable  {
      AZGenericMapPayload aZGenericMapPayload0 = new AZGenericMapPayload("", (Map) null, (byte)106);
      try {
        aZGenericMapPayload0.deserialize((DirectByteBuffer) null, (byte)106);
        fail("Expecting exception: MessageException");
      } catch(MessageException e) {
        /*
         * [] decode error: stream == null
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      AZGenericMapPayload aZGenericMapPayload0 = new AZGenericMapPayload("", (Map) hashMap0, (byte)60);
      byte byte0 = aZGenericMapPayload0.getVersion();
      assertEquals("", aZGenericMapPayload0.getDescription());
      assertEquals((byte)60, byte0);
  }

  @Test
  public void test5()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      AZGenericMapPayload aZGenericMapPayload0 = new AZGenericMapPayload("", (Map) hashMap0, (byte)18);
      String string0 = aZGenericMapPayload0.getFeatureID();
      assertEquals(18, aZGenericMapPayload0.getVersion());
      assertEquals("", aZGenericMapPayload0.getDescription());
      assertEquals("AZ1", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      AZGenericMapPayload aZGenericMapPayload0 = new AZGenericMapPayload("", (Map) hashMap0, (byte)60);
      byte[] byteArray0 = aZGenericMapPayload0.getIDBytes();
      assertEquals(60, aZGenericMapPayload0.getVersion());
      assertEquals("", aZGenericMapPayload0.getID());
      assertNotNull(byteArray0);
      assertEquals("", aZGenericMapPayload0.getDescription());
  }

  @Test
  public void test7()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      AZGenericMapPayload aZGenericMapPayload0 = new AZGenericMapPayload("", (Map) hashMap0, (byte)60);
      int int0 = aZGenericMapPayload0.getType();
      assertEquals(60, aZGenericMapPayload0.getVersion());
      assertEquals(0, int0);
      assertEquals("", aZGenericMapPayload0.getID());
  }

  @Test
  public void test8()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      AZGenericMapPayload aZGenericMapPayload0 = new AZGenericMapPayload("put(byte[])", (Map) hashMap0, (byte) (-95));
      DirectByteBuffer[] directByteBufferArray0 = aZGenericMapPayload0.getData();
      assertNotNull(directByteBufferArray0);
      
      aZGenericMapPayload0.getData();
      assertEquals(-95, aZGenericMapPayload0.getVersion());
      assertEquals("put(byte[])", aZGenericMapPayload0.getID());
      assertEquals("put(byte[])", aZGenericMapPayload0.getDescription());
  }

  @Test
  public void test9()  throws Throwable  {
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      AZGenericMapPayload aZGenericMapPayload0 = new AZGenericMapPayload("", (Map) hashMap0, (byte)82);
      aZGenericMapPayload0.destroy();
      assertEquals("", aZGenericMapPayload0.getID());
      assertEquals(82, aZGenericMapPayload0.getVersion());
      assertEquals("", aZGenericMapPayload0.getDescription());
  }

  @Test
  public void test10()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      AZGenericMapPayload aZGenericMapPayload0 = new AZGenericMapPayload("put(byte[])", (Map) hashMap0, (byte) (-95));
      DirectByteBuffer[] directByteBufferArray0 = aZGenericMapPayload0.getData();
      assertNotNull(directByteBufferArray0);
      
      aZGenericMapPayload0.destroy();
      assertEquals(-95, aZGenericMapPayload0.getVersion());
      assertEquals("put(byte[])", aZGenericMapPayload0.getDescription());
      assertEquals("put(byte[])", aZGenericMapPayload0.getID());
  }
}
