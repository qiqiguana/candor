/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.launcher.classloading;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.launcher.classloading.PrimaryClassloader;
import com.aelitis.azureus.launcher.classloading.SecondaryClassLoader;
import java.net.URL;
import org.evosuite.runtime.System;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PrimaryClassloaderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try {
        PrimaryClassloader.getBootstrappedLoader();
        fail("Expecting exception: System.SystemExitException");
      } catch(System.SystemExitException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      PrimaryClassloader primaryClassloader0 = new PrimaryClassloader(classLoader0);
      URL[] uRLArray0 = new URL[1];
      SecondaryClassLoader secondaryClassLoader0 = new SecondaryClassLoader(uRLArray0, primaryClassloader0);
      // Undeclared exception!
      try {
        primaryClassloader0.loadClass("", true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      PrimaryClassloader primaryClassloader0 = new PrimaryClassloader(classLoader0);
      try {
        primaryClassloader0.loadClass("com.aelitis.azureus.launcher.classloadingar", true);
        fail("Expecting exception: ClassNotFoundException");
      } catch(ClassNotFoundException e) {
        /*
         * com.aelitis.azureus.launcher.classloadingar
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      PrimaryClassloader primaryClassloader0 = new PrimaryClassloader(classLoader0);
      primaryClassloader0.registerSecondaryClassloader((SecondaryClassLoader) null);
      try {
        primaryClassloader0.loadClass("", true);
        fail("Expecting exception: ClassNotFoundException");
      } catch(ClassNotFoundException e) {
        /*
         * 
         */
      }
  }
}
