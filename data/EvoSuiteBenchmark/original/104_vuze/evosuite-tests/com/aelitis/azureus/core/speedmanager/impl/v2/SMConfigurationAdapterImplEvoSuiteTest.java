/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.speedmanager.impl.v2;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.speedmanager.SpeedManagerLimitEstimate;
import com.aelitis.azureus.core.speedmanager.impl.v2.SMConfigurationAdapterImpl;
import com.aelitis.azureus.core.speedmanager.impl.v2.SpeedLimitConfidence;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SMConfigurationAdapterImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SMConfigurationAdapterImpl sMConfigurationAdapterImpl0 = new SMConfigurationAdapterImpl();
      sMConfigurationAdapterImpl0.setDownloadLimit((SpeedManagerLimitEstimate) null);
  }

  @Test
  public void test1()  throws Throwable  {
      SMConfigurationAdapterImpl sMConfigurationAdapterImpl0 = new SMConfigurationAdapterImpl();
      SMConfigurationAdapterImpl.SMConfigLimitEstimate sMConfigurationAdapterImpl_SMConfigLimitEstimate0 = (SMConfigurationAdapterImpl.SMConfigLimitEstimate)sMConfigurationAdapterImpl0.getDownloadLimit();
      assertNotNull(sMConfigurationAdapterImpl_SMConfigLimitEstimate0);
      assertEquals("estiamte: 61440 (-0.1) ", sMConfigurationAdapterImpl_SMConfigLimitEstimate0.getString());
  }

  @Test
  public void test2()  throws Throwable  {
      SMConfigurationAdapterImpl sMConfigurationAdapterImpl0 = new SMConfigurationAdapterImpl();
      sMConfigurationAdapterImpl0.setUploadLimit((SpeedManagerLimitEstimate) null);
  }

  @Test
  public void test3()  throws Throwable  {
      SMConfigurationAdapterImpl sMConfigurationAdapterImpl0 = new SMConfigurationAdapterImpl();
      SMConfigurationAdapterImpl.SMConfigLimitEstimate sMConfigurationAdapterImpl_SMConfigLimitEstimate0 = (SMConfigurationAdapterImpl.SMConfigLimitEstimate)sMConfigurationAdapterImpl0.getUploadLimit();
      assertEquals("estiamte: 30720 (-0.1) ", sMConfigurationAdapterImpl_SMConfigLimitEstimate0.getString());
      assertNotNull(sMConfigurationAdapterImpl_SMConfigLimitEstimate0);
  }

  @Test
  public void test4()  throws Throwable  {
      SpeedLimitConfidence speedLimitConfidence0 = SpeedLimitConfidence.convertType((float) 0);
      SMConfigurationAdapterImpl.SMConfigLimitEstimate sMConfigurationAdapterImpl_SMConfigLimitEstimate0 = new SMConfigurationAdapterImpl.SMConfigLimitEstimate(0, speedLimitConfidence0);
      sMConfigurationAdapterImpl_SMConfigLimitEstimate0.getSegments();
      assertEquals(0, sMConfigurationAdapterImpl_SMConfigLimitEstimate0.getBytesPerSec());
      assertEquals("estiamte: 0 (0.0) ", sMConfigurationAdapterImpl_SMConfigLimitEstimate0.getString());
  }

  @Test
  public void test5()  throws Throwable  {
      SpeedLimitConfidence speedLimitConfidence0 = SpeedLimitConfidence.HIGH;
      SMConfigurationAdapterImpl.SMConfigLimitEstimate sMConfigurationAdapterImpl_SMConfigLimitEstimate0 = new SMConfigurationAdapterImpl.SMConfigLimitEstimate((-300), speedLimitConfidence0);
      int int0 = sMConfigurationAdapterImpl_SMConfigLimitEstimate0.getBytesPerSec();
      assertEquals(0.8F, sMConfigurationAdapterImpl_SMConfigLimitEstimate0.getEstimateType(), 0.01F);
      assertEquals((-300), int0);
  }

  @Test
  public void test6()  throws Throwable  {
      SpeedLimitConfidence speedLimitConfidence0 = SpeedLimitConfidence.HIGH;
      SMConfigurationAdapterImpl.SMConfigLimitEstimate sMConfigurationAdapterImpl_SMConfigLimitEstimate0 = new SMConfigurationAdapterImpl.SMConfigLimitEstimate(0, speedLimitConfidence0);
      String string0 = sMConfigurationAdapterImpl_SMConfigLimitEstimate0.getString();
      assertEquals("estiamte: 0 (0.8) ", string0);
      assertNotNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      SpeedLimitConfidence speedLimitConfidence0 = SpeedLimitConfidence.MED;
      SMConfigurationAdapterImpl.SMConfigLimitEstimate sMConfigurationAdapterImpl_SMConfigLimitEstimate0 = new SMConfigurationAdapterImpl.SMConfigLimitEstimate((-543), speedLimitConfidence0);
      long long0 = sMConfigurationAdapterImpl_SMConfigLimitEstimate0.getWhen();
      assertEquals(0L, long0);
      assertEquals("estiamte: -543 (0.5) ", sMConfigurationAdapterImpl_SMConfigLimitEstimate0.getString());
  }

  @Test
  public void test8()  throws Throwable  {
      SpeedLimitConfidence speedLimitConfidence0 = SpeedLimitConfidence.ABSOLUTE;
      SMConfigurationAdapterImpl.SMConfigLimitEstimate sMConfigurationAdapterImpl_SMConfigLimitEstimate0 = new SMConfigurationAdapterImpl.SMConfigLimitEstimate(1, speedLimitConfidence0);
      float float0 = sMConfigurationAdapterImpl_SMConfigLimitEstimate0.getMetricRating();
      assertEquals("estiamte: 1 (1.0) ", sMConfigurationAdapterImpl_SMConfigLimitEstimate0.getString());
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test
  public void test9()  throws Throwable  {
      SpeedLimitConfidence speedLimitConfidence0 = SpeedLimitConfidence.parseString((String) null);
      SMConfigurationAdapterImpl.SMConfigLimitEstimate sMConfigurationAdapterImpl_SMConfigLimitEstimate0 = new SMConfigurationAdapterImpl.SMConfigLimitEstimate(1771, speedLimitConfidence0);
      float float0 = sMConfigurationAdapterImpl_SMConfigLimitEstimate0.getEstimateType();
      assertEquals((-0.1F), float0, 0.01F);
      assertEquals(1771, sMConfigurationAdapterImpl_SMConfigLimitEstimate0.getBytesPerSec());
  }
}
