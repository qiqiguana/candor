/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.ui.swt.skin;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.ui.swt.skin.SWTColorWithAlpha;
import com.aelitis.azureus.ui.swt.skin.SWTSkinProperties;
import com.aelitis.azureus.ui.swt.skin.SWTSkinPropertiesImpl;
import com.aelitis.azureus.ui.swt.skin.SWTSkinPropertiesParamImpl;
import java.util.ResourceBundle;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.eclipse.swt.graphics.Color;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.instrumentation.InstrumentingClassLoader;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SWTSkinPropertiesParamImplEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      SWTSkinPropertiesImpl sWTSkinPropertiesImpl0 = new SWTSkinPropertiesImpl();
      String[] stringArray0 = new String[6];
      SWTSkinPropertiesParamImpl sWTSkinPropertiesParamImpl0 = new SWTSkinPropertiesParamImpl((SWTSkinProperties) sWTSkinPropertiesImpl0, stringArray0);
      int[] intArray0 = sWTSkinPropertiesParamImpl0.getColorValue((String) null);
      assertNotNull(intArray0);
  }

  @Test
  public void test1()  throws Throwable  {
      SWTSkinPropertiesImpl sWTSkinPropertiesImpl0 = new SWTSkinPropertiesImpl();
      String[] stringArray0 = new String[7];
      SWTSkinPropertiesParamImpl sWTSkinPropertiesParamImpl0 = new SWTSkinPropertiesParamImpl((SWTSkinProperties) sWTSkinPropertiesImpl0, stringArray0);
      InstrumentingClassLoader instrumentingClassLoader0 = (InstrumentingClassLoader)sWTSkinPropertiesParamImpl0.getClassLoader();
      assertNotNull(instrumentingClassLoader0);
  }

  @Test
  public void test2()  throws Throwable  {
      SWTSkinPropertiesImpl sWTSkinPropertiesImpl0 = new SWTSkinPropertiesImpl();
      String[] stringArray0 = new String[7];
      SWTSkinPropertiesParamImpl sWTSkinPropertiesParamImpl0 = new SWTSkinPropertiesParamImpl((SWTSkinProperties) sWTSkinPropertiesImpl0, stringArray0);
      String string0 = sWTSkinPropertiesParamImpl0.getStringValue((String) null, "W =~I.?%=X");
      assertEquals("W =~I.?%=X", string0);
  }

  @Test
  public void test3()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          SWTSkinPropertiesImpl sWTSkinPropertiesImpl0 = new SWTSkinPropertiesImpl();
          String[] stringArray0 = new String[7];
          SWTSkinPropertiesParamImpl sWTSkinPropertiesParamImpl0 = new SWTSkinPropertiesParamImpl((SWTSkinProperties) sWTSkinPropertiesImpl0, stringArray0);
          sWTSkinPropertiesParamImpl0.addResourceBundle((ResourceBundle) null, (String) null);
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test4()  throws Throwable  {
      SWTSkinPropertiesImpl sWTSkinPropertiesImpl0 = new SWTSkinPropertiesImpl();
      String[] stringArray0 = new String[7];
      SWTSkinPropertiesParamImpl sWTSkinPropertiesParamImpl0 = new SWTSkinPropertiesParamImpl((SWTSkinProperties) sWTSkinPropertiesImpl0, stringArray0);
      int int0 = sWTSkinPropertiesParamImpl0.getIntValue("W =~I.?%=X", 0);
      assertEquals(0, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      SWTSkinPropertiesImpl sWTSkinPropertiesImpl0 = new SWTSkinPropertiesImpl();
      String[] stringArray0 = new String[7];
      SWTSkinPropertiesParamImpl sWTSkinPropertiesParamImpl0 = new SWTSkinPropertiesParamImpl((SWTSkinProperties) sWTSkinPropertiesImpl0, stringArray0);
      String[] stringArray1 = sWTSkinPropertiesParamImpl0.getParamValues();
      assertSame(stringArray0, stringArray1);
  }

  @Test
  public void test6()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          SWTSkinPropertiesImpl sWTSkinPropertiesImpl0 = new SWTSkinPropertiesImpl();
          String[] stringArray0 = new String[8];
          SWTSkinPropertiesParamImpl sWTSkinPropertiesParamImpl0 = new SWTSkinPropertiesParamImpl((SWTSkinProperties) sWTSkinPropertiesImpl0, stringArray0);
          ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
          sWTSkinPropertiesParamImpl0.addResourceBundle((ResourceBundle) null, (String) null, classLoader0);
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test7()  throws Throwable  {
      SWTSkinPropertiesImpl sWTSkinPropertiesImpl0 = new SWTSkinPropertiesImpl();
      String[] stringArray0 = new String[6];
      SWTSkinPropertiesParamImpl sWTSkinPropertiesParamImpl0 = new SWTSkinPropertiesParamImpl((SWTSkinProperties) sWTSkinPropertiesImpl0, stringArray0);
      sWTSkinPropertiesParamImpl0.addProperty("f", (String) null);
  }

  @Test
  public void test8()  throws Throwable  {
      SWTSkinPropertiesImpl sWTSkinPropertiesImpl0 = new SWTSkinPropertiesImpl();
      String[] stringArray0 = new String[7];
      SWTSkinPropertiesParamImpl sWTSkinPropertiesParamImpl0 = new SWTSkinPropertiesParamImpl((SWTSkinProperties) sWTSkinPropertiesImpl0, stringArray0);
      String[] stringArray1 = sWTSkinPropertiesParamImpl0.getStringArray("W =~I.?%=X");
      assertNull(stringArray1);
  }

  @Test
  public void test9()  throws Throwable  {
      SWTSkinPropertiesImpl sWTSkinPropertiesImpl0 = new SWTSkinPropertiesImpl();
      String[] stringArray0 = new String[6];
      SWTSkinPropertiesParamImpl sWTSkinPropertiesParamImpl0 = new SWTSkinPropertiesParamImpl((SWTSkinProperties) sWTSkinPropertiesImpl0, stringArray0);
      boolean boolean0 = sWTSkinPropertiesParamImpl0.hasKey((String) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      SWTSkinPropertiesImpl sWTSkinPropertiesImpl0 = new SWTSkinPropertiesImpl();
      String[] stringArray0 = new String[7];
      SWTSkinPropertiesParamImpl sWTSkinPropertiesParamImpl0 = new SWTSkinPropertiesParamImpl((SWTSkinProperties) sWTSkinPropertiesImpl0, stringArray0);
      String string0 = sWTSkinPropertiesParamImpl0.getStringValue("W =~I.?%=X", stringArray0, "W =~I.?%=X");
      assertEquals("W =~I.?%=X", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      SWTSkinPropertiesImpl sWTSkinPropertiesImpl0 = new SWTSkinPropertiesImpl();
      String[] stringArray0 = new String[6];
      SWTSkinPropertiesParamImpl sWTSkinPropertiesParamImpl0 = new SWTSkinPropertiesParamImpl((SWTSkinProperties) sWTSkinPropertiesImpl0, stringArray0);
      sWTSkinPropertiesParamImpl0.clearCache();
  }

  @Test
  public void test12()  throws Throwable  {
      SWTSkinPropertiesImpl sWTSkinPropertiesImpl0 = new SWTSkinPropertiesImpl();
      String[] stringArray0 = new String[6];
      SWTSkinPropertiesParamImpl sWTSkinPropertiesParamImpl0 = new SWTSkinPropertiesParamImpl((SWTSkinProperties) sWTSkinPropertiesImpl0, stringArray0);
      String string0 = sWTSkinPropertiesParamImpl0.getStringValue((String) null, stringArray0);
      assertNull(string0);
  }

  @Test
  public void test13()  throws Throwable  {
      SWTSkinPropertiesImpl sWTSkinPropertiesImpl0 = new SWTSkinPropertiesImpl();
      String[] stringArray0 = new String[6];
      SWTSkinPropertiesParamImpl sWTSkinPropertiesParamImpl0 = new SWTSkinPropertiesParamImpl((SWTSkinProperties) sWTSkinPropertiesImpl0, stringArray0);
      Color color0 = sWTSkinPropertiesParamImpl0.getColor((String) null, (Color) null);
      assertNull(color0);
  }

  @Test
  public void test14()  throws Throwable  {
      SWTSkinPropertiesImpl sWTSkinPropertiesImpl0 = new SWTSkinPropertiesImpl();
      String[] stringArray0 = new String[6];
      SWTSkinPropertiesParamImpl sWTSkinPropertiesParamImpl0 = new SWTSkinPropertiesParamImpl((SWTSkinProperties) sWTSkinPropertiesImpl0, stringArray0);
      String[] stringArray1 = sWTSkinPropertiesParamImpl0.getStringArray("e", stringArray0);
      assertNull(stringArray1);
  }

  @Test
  public void test15()  throws Throwable  {
      SWTSkinPropertiesImpl sWTSkinPropertiesImpl0 = new SWTSkinPropertiesImpl();
      String[] stringArray0 = new String[7];
      SWTSkinPropertiesParamImpl sWTSkinPropertiesParamImpl0 = new SWTSkinPropertiesParamImpl((SWTSkinProperties) sWTSkinPropertiesImpl0, stringArray0);
      boolean boolean0 = sWTSkinPropertiesParamImpl0.getBooleanValue("W =~I.?%=X", false);
      assertEquals(false, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      SWTSkinPropertiesImpl sWTSkinPropertiesImpl0 = new SWTSkinPropertiesImpl();
      String[] stringArray0 = new String[8];
      SWTSkinPropertiesParamImpl sWTSkinPropertiesParamImpl0 = new SWTSkinPropertiesParamImpl((SWTSkinProperties) sWTSkinPropertiesImpl0, stringArray0);
      SWTColorWithAlpha sWTColorWithAlpha0 = sWTSkinPropertiesParamImpl0.getColorWithAlpha((String) null);
      assertNotNull(sWTColorWithAlpha0);
  }

  @Test
  public void test17()  throws Throwable  {
      SWTSkinPropertiesImpl sWTSkinPropertiesImpl0 = new SWTSkinPropertiesImpl();
      String[] stringArray0 = new String[6];
      SWTSkinPropertiesParamImpl sWTSkinPropertiesParamImpl0 = new SWTSkinPropertiesParamImpl((SWTSkinProperties) sWTSkinPropertiesImpl0, stringArray0);
      String string0 = sWTSkinPropertiesParamImpl0.getReferenceID("f");
      assertNull(string0);
  }

  @Test
  public void test18()  throws Throwable  {
      SWTSkinPropertiesImpl sWTSkinPropertiesImpl0 = new SWTSkinPropertiesImpl();
      String[] stringArray0 = new String[8];
      SWTSkinPropertiesParamImpl sWTSkinPropertiesParamImpl0 = new SWTSkinPropertiesParamImpl((SWTSkinProperties) sWTSkinPropertiesImpl0, stringArray0);
      String string0 = sWTSkinPropertiesParamImpl0.getStringValue((String) null);
      assertNull(string0);
  }
}
