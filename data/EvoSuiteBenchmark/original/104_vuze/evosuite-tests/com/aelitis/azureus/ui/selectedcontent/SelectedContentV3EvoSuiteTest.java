/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.ui.selectedcontent;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.activities.VuzeActivitiesEntry;
import com.aelitis.azureus.ui.selectedcontent.DownloadUrlInfo;
import com.aelitis.azureus.ui.selectedcontent.ISelectedContent;
import com.aelitis.azureus.ui.selectedcontent.SelectedContent;
import com.aelitis.azureus.ui.selectedcontent.SelectedContentV3;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.gudy.azureus2.core3.download.DownloadManager;
import org.gudy.azureus2.core3.torrent.TOTorrent;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SelectedContentV3EvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          VuzeActivitiesEntry vuzeActivitiesEntry0 = new VuzeActivitiesEntry((-1504L), "Vf6:ONpJH*9w", "Vf6:ONpJH*9w", "Vf6:ONpJH*9w", "Vf6:ONpJH*9w", "Vf6:ONpJH*9w");
          SelectedContentV3 selectedContentV3_0 = vuzeActivitiesEntry0.createSelectedContentObject();
          assertNotNull(selectedContentV3_0);
          
          DownloadUrlInfo downloadUrlInfo0 = new DownloadUrlInfo("Vf6:ONpJH*9w");
          selectedContentV3_0.setDownloadInfo(downloadUrlInfo0);
          SelectedContentV3 selectedContentV3_1 = vuzeActivitiesEntry0.createSelectedContentObject();
          boolean boolean0 = selectedContentV3_1.sameAs((ISelectedContent) selectedContentV3_0);
          assertEquals(false, boolean0);
          assertEquals(true, selectedContentV3_0.isPlatformContent());
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test1()  throws Throwable  {
      SelectedContent selectedContent0 = new SelectedContent("^C", "^C");
      SelectedContentV3 selectedContentV3_0 = new SelectedContentV3(selectedContent0);
      assertEquals("^C", selectedContentV3_0.getDisplayName());
  }

  @Test
  public void test2()  throws Throwable  {
      SelectedContentV3 selectedContentV3_0 = new SelectedContentV3();
      boolean boolean0 = selectedContentV3_0.isPlatformContent();
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      VuzeActivitiesEntry vuzeActivitiesEntry0 = new VuzeActivitiesEntry();
      SelectedContentV3 selectedContentV3_0 = vuzeActivitiesEntry0.createSelectedContentObject();
      selectedContentV3_0.setCanPlay(false);
      assertEquals(false, selectedContentV3_0.canPlay());
  }

  @Test
  public void test4()  throws Throwable  {
      SelectedContentV3 selectedContentV3_0 = new SelectedContentV3();
      TOTorrent tOTorrent0 = selectedContentV3_0.getTorrent();
      assertNull(tOTorrent0);
  }

  @Test
  public void test5()  throws Throwable  {
      SelectedContentV3 selectedContentV3_0 = new SelectedContentV3("Ls", "Ls", false, true);
      selectedContentV3_0.getDownloadManager();
      assertEquals(false, selectedContentV3_0.isPlatformContent());
      assertEquals(true, selectedContentV3_0.canPlay());
  }

  @Test
  public void test6()  throws Throwable  {
      SelectedContentV3 selectedContentV3_0 = new SelectedContentV3();
      DownloadUrlInfo downloadUrlInfo0 = selectedContentV3_0.getDownloadInfo();
      assertNull(downloadUrlInfo0);
  }

  @Test
  public void test7()  throws Throwable  {
      SelectedContentV3 selectedContentV3_0 = new SelectedContentV3();
      byte[] byteArray0 = selectedContentV3_0.getImageBytes();
      assertNull(byteArray0);
  }

  @Test
  public void test8()  throws Throwable  {
      SelectedContentV3 selectedContentV3_0 = new SelectedContentV3();
      boolean boolean0 = selectedContentV3_0.canPlay();
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      SelectedContentV3 selectedContentV3_0 = new SelectedContentV3("Ls", "Ls", false, true);
      int int0 = selectedContentV3_0.getFileIndex();
      assertEquals(true, selectedContentV3_0.canPlay());
      assertEquals((-1), int0);
      assertEquals(false, selectedContentV3_0.isPlatformContent());
  }

  @Test
  public void test10()  throws Throwable  {
      SelectedContentV3 selectedContentV3_0 = new SelectedContentV3();
      selectedContentV3_0.setHash((String) null);
      assertEquals(false, selectedContentV3_0.isPlatformContent());
  }

  @Test
  public void test11()  throws Throwable  {
      SelectedContentV3 selectedContentV3_0 = new SelectedContentV3();
      String string0 = selectedContentV3_0.getThumbURL();
      assertNull(string0);
  }

  @Test
  public void test12()  throws Throwable  {
      SelectedContentV3 selectedContentV3_0 = new SelectedContentV3();
      selectedContentV3_0.setTorrent((TOTorrent) null);
      assertEquals(false, selectedContentV3_0.canPlay());
  }

  @Test
  public void test13()  throws Throwable  {
      SelectedContentV3 selectedContentV3_0 = new SelectedContentV3("Ls", "Ls", false, true);
      SelectedContentV3 selectedContentV3_1 = new SelectedContentV3("Ls", "Ls", true, false);
      boolean boolean0 = selectedContentV3_0.sameAs((ISelectedContent) selectedContentV3_1);
      assertEquals(true, selectedContentV3_0.canPlay());
      assertEquals(false, boolean0);
      assertEquals(true, selectedContentV3_1.isPlatformContent());
  }

  @Test
  public void test14()  throws Throwable  {
      SelectedContentV3 selectedContentV3_0 = new SelectedContentV3();
      boolean boolean0 = selectedContentV3_0.sameAs((ISelectedContent) selectedContentV3_0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      SelectedContentV3 selectedContentV3_0 = new SelectedContentV3();
      SelectedContent selectedContent0 = new SelectedContent((DownloadManager) null, 0);
      boolean boolean0 = selectedContentV3_0.sameAs((ISelectedContent) selectedContent0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      SelectedContentV3 selectedContentV3_0 = new SelectedContentV3();
      SelectedContentV3 selectedContentV3_1 = new SelectedContentV3("yO.Jt8t", "yO.Jt8t", false, false);
      boolean boolean0 = selectedContentV3_0.sameAs((ISelectedContent) selectedContentV3_1);
      assertEquals(false, selectedContentV3_1.isPlatformContent());
      assertEquals(false, boolean0);
      assertEquals(false, selectedContentV3_1.canPlay());
  }

  @Test
  public void test17()  throws Throwable  {
      SelectedContentV3 selectedContentV3_0 = new SelectedContentV3("Ls", "Ls", false, true);
      SelectedContentV3 selectedContentV3_1 = new SelectedContentV3("Ls", "Ls", false, false);
      boolean boolean0 = selectedContentV3_0.sameAs((ISelectedContent) selectedContentV3_1);
      assertEquals(true, selectedContentV3_0.canPlay());
      assertEquals(false, selectedContentV3_0.isPlatformContent());
      assertEquals(false, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      SelectedContentV3 selectedContentV3_0 = new SelectedContentV3();
      SelectedContentV3 selectedContentV3_1 = new SelectedContentV3((DownloadManager) null);
      assertNotNull(selectedContentV3_1);
      
      boolean boolean0 = selectedContentV3_0.sameAs((ISelectedContent) selectedContentV3_1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test19()  throws Throwable  {
      SelectedContentV3 selectedContentV3_0 = new SelectedContentV3();
      selectedContentV3_0.setThumbURL("");
      VuzeActivitiesEntry vuzeActivitiesEntry0 = new VuzeActivitiesEntry();
      SelectedContentV3 selectedContentV3_1 = vuzeActivitiesEntry0.createSelectedContentObject();
      boolean boolean0 = selectedContentV3_0.sameAs((ISelectedContent) selectedContentV3_1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test20()  throws Throwable  {
      SelectedContentV3 selectedContentV3_0 = new SelectedContentV3();
      selectedContentV3_0.setThumbURL("N");
      VuzeActivitiesEntry vuzeActivitiesEntry0 = new VuzeActivitiesEntry();
      SelectedContentV3 selectedContentV3_1 = vuzeActivitiesEntry0.createSelectedContentObject();
      boolean boolean0 = selectedContentV3_1.sameAs((ISelectedContent) selectedContentV3_0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test21()  throws Throwable  {
      SelectedContentV3 selectedContentV3_0 = new SelectedContentV3();
      byte[] byteArray0 = new byte[2];
      selectedContentV3_0.setImageBytes(byteArray0);
      VuzeActivitiesEntry vuzeActivitiesEntry0 = new VuzeActivitiesEntry((long) (byte)125, (String) null, (String) null, (String) null, (String) null, (String) null);
      SelectedContentV3 selectedContentV3_1 = vuzeActivitiesEntry0.createSelectedContentObject();
      boolean boolean0 = selectedContentV3_0.sameAs((ISelectedContent) selectedContentV3_1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test22()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          VuzeActivitiesEntry vuzeActivitiesEntry0 = new VuzeActivitiesEntry((-1504L), "Vf6:ONpJH*9w", "Vf6:ONpJH*9w", "Vf6:ONpJH*9w", "Vf6:ONpJH*9w", "Vf6:ONpJH*9w");
          SelectedContentV3 selectedContentV3_0 = vuzeActivitiesEntry0.createSelectedContentObject();
          assertNotNull(selectedContentV3_0);
          
          DownloadUrlInfo downloadUrlInfo0 = new DownloadUrlInfo("Vf6:ONpJH*9w");
          selectedContentV3_0.setDownloadInfo(downloadUrlInfo0);
          SelectedContentV3 selectedContentV3_1 = vuzeActivitiesEntry0.createSelectedContentObject();
          boolean boolean0 = selectedContentV3_0.sameAs((ISelectedContent) selectedContentV3_1);
          assertEquals(true, selectedContentV3_0.isPlatformContent());
          assertEquals(false, boolean0);
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }
}
