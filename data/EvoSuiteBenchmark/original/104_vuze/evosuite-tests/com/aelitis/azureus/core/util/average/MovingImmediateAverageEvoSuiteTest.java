/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.util.average;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.util.average.MovingImmediateAverage;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MovingImmediateAverageEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MovingImmediateAverage movingImmediateAverage0 = new MovingImmediateAverage(1);
      assertNotNull(movingImmediateAverage0);
      
      double double0 = movingImmediateAverage0.getAverage();
      assertEquals(0.0, double0, 0.01D);
      assertEquals(0, movingImmediateAverage0.getSampleCount());
  }

  @Test
  public void test1()  throws Throwable  {
      MovingImmediateAverage movingImmediateAverage0 = new MovingImmediateAverage(1);
      assertNotNull(movingImmediateAverage0);
      
      movingImmediateAverage0.reset();
      assertEquals(0, movingImmediateAverage0.getSampleCount());
  }

  @Test
  public void test2()  throws Throwable  {
      MovingImmediateAverage movingImmediateAverage0 = new MovingImmediateAverage(1);
      assertNotNull(movingImmediateAverage0);
      
      movingImmediateAverage0.update((double) 1);
      movingImmediateAverage0.update((double) 1);
      int int0 = movingImmediateAverage0.getSampleCount();
      assertEquals(1.0, movingImmediateAverage0.getAverage(), 0.01D);
      assertEquals(1, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      MovingImmediateAverage movingImmediateAverage0 = new MovingImmediateAverage(1);
      assertNotNull(movingImmediateAverage0);
      
      double[] doubleArray0 = movingImmediateAverage0.getValues();
      assertEquals(0, movingImmediateAverage0.getSampleCount());
      assertNotNull(doubleArray0);
  }

  @Test
  public void test4()  throws Throwable  {
      MovingImmediateAverage movingImmediateAverage0 = new MovingImmediateAverage(1);
      assertNotNull(movingImmediateAverage0);
      
      int int0 = movingImmediateAverage0.getSampleCount();
      assertEquals(0, int0);
  }
}
