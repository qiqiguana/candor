/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.devices.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.devices.impl.DeviceManagerImpl;
import com.aelitis.azureus.core.devices.impl.DeviceTivoManager;
import java.io.IOException;
import java.net.Inet4Address;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.Map;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DeviceTivoManagerEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      DeviceTivoManager deviceTivoManager0 = new DeviceTivoManager((DeviceManagerImpl) null);
      boolean boolean0 = deviceTivoManager0.isEnabled();
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          DeviceTivoManager deviceTivoManager0 = new DeviceTivoManager((DeviceManagerImpl) null);
          deviceTivoManager0.search();
          assertEquals(false, deviceTivoManager0.isEnabled());
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test2()  throws Throwable  {
      DeviceTivoManager deviceTivoManager0 = new DeviceTivoManager((DeviceManagerImpl) null);
      // Undeclared exception!
      try {
        deviceTivoManager0.setEnabled(false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          DeviceTivoManager deviceTivoManager0 = new DeviceTivoManager((DeviceManagerImpl) null);
          deviceTivoManager0.setEnabled(true);
          assertEquals(false, deviceTivoManager0.isEnabled());
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test4()  throws Throwable  {
      DeviceTivoManager deviceTivoManager0 = new DeviceTivoManager((DeviceManagerImpl) null);
      byte[] byteArray0 = deviceTivoManager0.encodeBeacon(false, 902);
      assertNotNull(byteArray0);
  }

  @Test
  public void test5()  throws Throwable  {
      DeviceTivoManager deviceTivoManager0 = new DeviceTivoManager((DeviceManagerImpl) null);
      byte[] byteArray0 = deviceTivoManager0.encodeBeacon(true, 902);
      assertNotNull(byteArray0);
      
      Map<String, String> map0 = deviceTivoManager0.decodeBeacon(byteArray0, 46);
      assertEquals(3, map0.size());
      assertNotNull(map0);
  }

  @Test
  public void test6()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          DeviceTivoManager deviceTivoManager0 = new DeviceTivoManager((DeviceManagerImpl) null);
          byte[] byteArray0 = new byte[32];
          Inet4Address inet4Address0 = (Inet4Address)InetAddress.getLocalHost();
          boolean boolean0 = deviceTivoManager0.receiveBeacon((InetAddress) inet4Address0, byteArray0, (-23));
          assertEquals(false, boolean0);
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test7()  throws Throwable  {
      DeviceTivoManager deviceTivoManager0 = new DeviceTivoManager((DeviceManagerImpl) null);
      deviceTivoManager0.log("[4@L1.BQ1<dY^y4TBl");
      assertEquals(false, deviceTivoManager0.isEnabled());
  }
}
