/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.networkmanager.impl.udp;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.networkmanager.impl.TransportHelper;
import com.aelitis.azureus.core.networkmanager.impl.tcp.TCPTransportHelper;
import com.aelitis.azureus.core.networkmanager.impl.udp.UDPConnectionManager;
import com.aelitis.azureus.core.networkmanager.impl.udp.UDPSelector;
import java.nio.channels.SocketChannel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UDPSelectorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UDPSelector uDPSelector0 = new UDPSelector((UDPConnectionManager) null);
      TCPTransportHelper tCPTransportHelper0 = new TCPTransportHelper((SocketChannel) null);
      uDPSelector0.ready((TransportHelper) tCPTransportHelper0, (TransportHelper.selectListener) null, (Object) "BT_REQUEST");
      uDPSelector0.ready((TransportHelper) tCPTransportHelper0, (TransportHelper.selectListener) null, (Object) "BT_DHT_PORT");
      assertEquals(10000, tCPTransportHelper0.getReadTimeout());
  }

  @Test
  public void test1()  throws Throwable  {
      UDPSelector uDPSelector0 = new UDPSelector((UDPConnectionManager) null);
      uDPSelector0.destroy();
      TCPTransportHelper tCPTransportHelper0 = new TCPTransportHelper((SocketChannel) null);
      // Undeclared exception!
      try {
        uDPSelector0.ready((TransportHelper) tCPTransportHelper0, (TransportHelper.selectListener) null, (Object) "BT_UNINTERESTED");
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class org.gudy.azureus2.core3.util.Debug
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      UDPSelector uDPSelector0 = new UDPSelector((UDPConnectionManager) null);
      uDPSelector0.ready((TransportHelper) null, (TransportHelper.selectListener) null, (Object) "BT_PIECE", (Throwable) null);
  }

  @Test
  public void test3()  throws Throwable  {
      UDPSelector uDPSelector0 = new UDPSelector((UDPConnectionManager) null);
      uDPSelector0.destroy();
      // Undeclared exception!
      try {
        uDPSelector0.ready((TransportHelper) null, (TransportHelper.selectListener) null, (Object) "AZ_REQUEST_HINT", (Throwable) null);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class org.gudy.azureus2.core3.util.Debug
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      UDPSelector uDPSelector0 = new UDPSelector((UDPConnectionManager) null);
      uDPSelector0.ready((TransportHelper) null, (TransportHelper.selectListener) null, (Object) "BT_HAVE_NONE");
      uDPSelector0.ready((TransportHelper) null, (TransportHelper.selectListener) null, (Object) "BT_PIECE", (Throwable) null);
  }

  @Test
  public void test5()  throws Throwable  {
      UDPSelector uDPSelector0 = new UDPSelector((UDPConnectionManager) null);
      TCPTransportHelper tCPTransportHelper0 = new TCPTransportHelper((SocketChannel) null);
      uDPSelector0.ready((TransportHelper) tCPTransportHelper0, (TransportHelper.selectListener) null, (Object) "BT_REQUEST");
      uDPSelector0.cancel((TransportHelper) tCPTransportHelper0, (TransportHelper.selectListener) null);
      assertEquals(false, tCPTransportHelper0.minimiseOverheads());
  }

  @Test
  public void test6()  throws Throwable  {
      UDPSelector uDPSelector0 = new UDPSelector((UDPConnectionManager) null);
      TCPTransportHelper tCPTransportHelper0 = new TCPTransportHelper((SocketChannel) null);
      uDPSelector0.ready((TransportHelper) tCPTransportHelper0, (TransportHelper.selectListener) null, (Object) "BT_REQUEST");
      TCPTransportHelper tCPTransportHelper1 = new TCPTransportHelper((SocketChannel) null);
      uDPSelector0.cancel((TransportHelper) tCPTransportHelper1, (TransportHelper.selectListener) null);
      assertEquals(false, tCPTransportHelper1.isClosed());
  }
}
