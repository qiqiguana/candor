/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.peermanager.messaging.azureus;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.peermanager.messaging.MessageException;
import com.aelitis.azureus.core.peermanager.messaging.azureus.AZStatRequest;
import java.util.HashMap;
import java.util.Map;
import org.gudy.azureus2.core3.util.DirectByteBuffer;
import org.gudy.azureus2.core3.util.DirectByteBufferPool;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AZStatRequestEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AZStatRequest aZStatRequest0 = new AZStatRequest((Map) null, (byte)25);
      byte byte0 = aZStatRequest0.getVersion();
      assertEquals((byte)25, byte0);
  }

  @Test
  public void test1()  throws Throwable  {
      HashMap<String, Map<String, Integer>> hashMap0 = new HashMap<String, Map<String, Integer>>();
      AZStatRequest aZStatRequest0 = new AZStatRequest((Map) hashMap0, (byte)18);
      String string0 = aZStatRequest0.getDescription();
      assertNotNull(string0);
      assertEquals("AZ_STAT_REQ: {}", string0);
      assertEquals(18, aZStatRequest0.getVersion());
  }

  @Test
  public void test2()  throws Throwable  {
      AZStatRequest aZStatRequest0 = new AZStatRequest((Map) null, (byte)25);
      String string0 = aZStatRequest0.getFeatureID();
      assertEquals("AZ1", string0);
      assertEquals(25, aZStatRequest0.getVersion());
  }

  @Test
  public void test3()  throws Throwable  {
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      AZStatRequest aZStatRequest0 = new AZStatRequest((Map) hashMap0, (byte)49);
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte)49, (byte)49);
      try {
        aZStatRequest0.deserialize(directByteBuffer0, (byte) (-1));
        fail("Expecting exception: MessageException");
      } catch(MessageException e) {
        /*
         * [AZ_STAT_REQ] payload stream b-decode error: BDecoder: unknown command '0, remainder = \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      AZStatRequest aZStatRequest0 = new AZStatRequest((Map) null, (byte)25);
      aZStatRequest0.getRequest();
      assertEquals(25, aZStatRequest0.getVersion());
  }

  @Test
  public void test5()  throws Throwable  {
      AZStatRequest aZStatRequest0 = new AZStatRequest((Map) null, (byte)3);
      int int0 = aZStatRequest0.getType();
      assertEquals(0, int0);
      assertEquals(3, aZStatRequest0.getVersion());
  }

  @Test
  public void test6()  throws Throwable  {
      AZStatRequest aZStatRequest0 = new AZStatRequest((Map) null, (byte)3);
      byte[] byteArray0 = aZStatRequest0.getIDBytes();
      assertNotNull(byteArray0);
      assertEquals(3, aZStatRequest0.getVersion());
  }

  @Test
  public void test7()  throws Throwable  {
      AZStatRequest aZStatRequest0 = new AZStatRequest((Map) null, (byte)3);
      int int0 = aZStatRequest0.getFeatureSubID();
      assertEquals(3, aZStatRequest0.getVersion());
      assertEquals(6, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      AZStatRequest aZStatRequest0 = new AZStatRequest((Map) null, (byte)3);
      DirectByteBuffer[] directByteBufferArray0 = aZStatRequest0.getData();
      assertNotNull(directByteBufferArray0);
      
      aZStatRequest0.getData();
      assertEquals(3, aZStatRequest0.getVersion());
  }

  @Test
  public void test9()  throws Throwable  {
      AZStatRequest aZStatRequest0 = new AZStatRequest((Map) null, (byte)25);
      aZStatRequest0.destroy();
      assertEquals(25, aZStatRequest0.getVersion());
  }

  @Test
  public void test10()  throws Throwable  {
      HashMap<String, Map<String, Integer>> hashMap0 = new HashMap<String, Map<String, Integer>>();
      AZStatRequest aZStatRequest0 = new AZStatRequest((Map) hashMap0, (byte)18);
      DirectByteBuffer[] directByteBufferArray0 = aZStatRequest0.getData();
      assertNotNull(directByteBufferArray0);
      
      aZStatRequest0.destroy();
      assertEquals(18, aZStatRequest0.getVersion());
  }
}
