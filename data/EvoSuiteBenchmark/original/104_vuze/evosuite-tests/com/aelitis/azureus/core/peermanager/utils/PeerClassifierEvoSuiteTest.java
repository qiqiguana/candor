/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.peermanager.utils;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.peermanager.utils.PeerClassifier;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PeerClassifierEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      boolean boolean0 = PeerClassifier.isAzureusIP("Trans");
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      boolean boolean0 = PeerClassifier.isClientTypeAllowed("Trans");
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      PeerClassifier.setAzureusIP("Trans");
  }

  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[29];
      String string0 = PeerClassifier.getClientDescription(byteArray0);
      assertEquals("Unknown [-----------------------------]", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[29];
      String string0 = PeerClassifier.getPrintablePeerID(byteArray0);
      assertEquals("-----------------------------", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      PeerClassifier peerClassifier0 = new PeerClassifier();
      assertNotNull(peerClassifier0);
  }

  @Test
  public void test6()  throws Throwable  {
      boolean boolean0 = PeerClassifier.fullySupportsFE("Trans");
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      boolean boolean0 = PeerClassifier.fullySupportsFE("\u00B5");
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      boolean boolean0 = PeerClassifier.fullySupportsFE("-----------------------------");
      assertEquals(true, boolean0);
  }
}
