/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.util.bloom.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.util.bloom.impl.BloomFilterAddRemove8Bit;
import com.aelitis.azureus.core.util.bloom.impl.BloomFilterImpl;
import java.util.Map;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BloomFilterAddRemove8BitEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BloomFilterAddRemove8Bit bloomFilterAddRemove8Bit0 = new BloomFilterAddRemove8Bit(0);
      Map<String, Object> map0 = bloomFilterAddRemove8Bit0.serialiseToMap();
      assertNotNull(map0);
      
      BloomFilterImpl.deserialiseFromMap(map0);
      assertEquals(4, map0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      BloomFilterAddRemove8Bit bloomFilterAddRemove8Bit0 = new BloomFilterAddRemove8Bit(0);
      byte[] byteArray0 = new byte[8];
      bloomFilterAddRemove8Bit0.add(byteArray0);
      bloomFilterAddRemove8Bit0.add(byteArray0);
      bloomFilterAddRemove8Bit0.add(byteArray0);
      bloomFilterAddRemove8Bit0.add(byteArray0);
      bloomFilterAddRemove8Bit0.add(byteArray0);
      bloomFilterAddRemove8Bit0.add(byteArray0);
      bloomFilterAddRemove8Bit0.add(byteArray0);
      bloomFilterAddRemove8Bit0.add(byteArray0);
      bloomFilterAddRemove8Bit0.incValue(0);
      bloomFilterAddRemove8Bit0.add(byteArray0);
      bloomFilterAddRemove8Bit0.add(byteArray0);
      bloomFilterAddRemove8Bit0.incValue((int) (byte)0);
      bloomFilterAddRemove8Bit0.add(byteArray0);
      bloomFilterAddRemove8Bit0.incValue((int) (byte)0);
      byte[] byteArray1 = new byte[10];
      bloomFilterAddRemove8Bit0.add(byteArray1);
      bloomFilterAddRemove8Bit0.add(byteArray1);
      bloomFilterAddRemove8Bit0.add(byteArray0);
      bloomFilterAddRemove8Bit0.add(byteArray0);
      byte[] byteArray2 = new byte[4];
      bloomFilterAddRemove8Bit0.add(byteArray2);
      byte[] byteArray3 = new byte[10];
      bloomFilterAddRemove8Bit0.add(byteArray3);
      bloomFilterAddRemove8Bit0.add(byteArray2);
      byte[] byteArray4 = new byte[7];
      bloomFilterAddRemove8Bit0.add(byteArray1);
      bloomFilterAddRemove8Bit0.add(byteArray0);
      bloomFilterAddRemove8Bit0.add(byteArray0);
      bloomFilterAddRemove8Bit0.add(byteArray0);
      bloomFilterAddRemove8Bit0.add(byteArray4);
      bloomFilterAddRemove8Bit0.add(byteArray4);
      bloomFilterAddRemove8Bit0.add(byteArray2);
      bloomFilterAddRemove8Bit0.add(byteArray2);
      bloomFilterAddRemove8Bit0.add(byteArray4);
      byte[] byteArray5 = new byte[1];
      bloomFilterAddRemove8Bit0.add(byteArray5);
      bloomFilterAddRemove8Bit0.add(byteArray5);
      bloomFilterAddRemove8Bit0.add(byteArray1);
      byte[] byteArray6 = new byte[4];
      bloomFilterAddRemove8Bit0.add(byteArray6);
      bloomFilterAddRemove8Bit0.add(byteArray6);
      bloomFilterAddRemove8Bit0.add(byteArray5);
      byte[] byteArray7 = new byte[21];
      bloomFilterAddRemove8Bit0.add(byteArray0);
      bloomFilterAddRemove8Bit0.add(byteArray0);
      bloomFilterAddRemove8Bit0.incValue(0);
      bloomFilterAddRemove8Bit0.add(byteArray7);
      bloomFilterAddRemove8Bit0.add(byteArray5);
      bloomFilterAddRemove8Bit0.incValue((int) (byte)0);
      bloomFilterAddRemove8Bit0.incValue((int) (byte)0);
      bloomFilterAddRemove8Bit0.add(byteArray6);
      bloomFilterAddRemove8Bit0.add(byteArray2);
      bloomFilterAddRemove8Bit0.add(byteArray5);
      bloomFilterAddRemove8Bit0.add(byteArray6);
      bloomFilterAddRemove8Bit0.add(byteArray6);
      bloomFilterAddRemove8Bit0.add(byteArray3);
      bloomFilterAddRemove8Bit0.add(byteArray4);
      bloomFilterAddRemove8Bit0.add(byteArray6);
      bloomFilterAddRemove8Bit0.add(byteArray4);
      bloomFilterAddRemove8Bit0.add(byteArray0);
      bloomFilterAddRemove8Bit0.add(byteArray6);
      bloomFilterAddRemove8Bit0.add(byteArray5);
      int int0 = bloomFilterAddRemove8Bit0.add(byteArray6);
      assertEquals("ent=1,max=1", bloomFilterAddRemove8Bit0.getString());
      assertEquals(252, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      BloomFilterAddRemove8Bit bloomFilterAddRemove8Bit0 = new BloomFilterAddRemove8Bit(0);
      BloomFilterAddRemove8Bit bloomFilterAddRemove8Bit1 = (BloomFilterAddRemove8Bit)bloomFilterAddRemove8Bit0.getReplica();
      assertEquals("ent=0,max=1", bloomFilterAddRemove8Bit1.getString());
  }

  @Test
  public void test3()  throws Throwable  {
      BloomFilterAddRemove8Bit bloomFilterAddRemove8Bit0 = new BloomFilterAddRemove8Bit(1506);
      byte[] byteArray0 = new byte[9];
      int int0 = bloomFilterAddRemove8Bit0.remove(byteArray0);
      assertEquals(0, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      BloomFilterAddRemove8Bit bloomFilterAddRemove8Bit0 = new BloomFilterAddRemove8Bit(0);
      int int0 = bloomFilterAddRemove8Bit0.trimValue(1243);
      assertEquals(255, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      BloomFilterAddRemove8Bit bloomFilterAddRemove8Bit0 = new BloomFilterAddRemove8Bit(0);
      byte[] byteArray0 = new byte[8];
      bloomFilterAddRemove8Bit0.add(byteArray0);
      assertEquals(1, bloomFilterAddRemove8Bit0.getEntryCount());
      
      int int0 = bloomFilterAddRemove8Bit0.remove(byteArray0);
      assertEquals(0, int0);
  }
}
