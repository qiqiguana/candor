/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.peermanager.peerdb;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.peermanager.peerdb.PeerDatabase;
import com.aelitis.azureus.core.peermanager.peerdb.PeerExchangerItem;
import com.aelitis.azureus.core.peermanager.peerdb.PeerItem;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PeerExchangerItemEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PeerExchangerItem peerExchangerItem0 = new PeerExchangerItem((PeerDatabase) null, (PeerItem) null, (PeerExchangerItem.Helper) null);
      PeerItem peerItem0 = peerExchangerItem0.getBasePeer();
      assertNull(peerItem0);
  }

  @Test
  public void test1()  throws Throwable  {
      PeerExchangerItem peerExchangerItem0 = new PeerExchangerItem((PeerDatabase) null, (PeerItem) null, (PeerExchangerItem.Helper) null);
      PeerItem[] peerItemArray0 = peerExchangerItem0.getConnectedPeers();
      assertNotNull(peerItemArray0);
  }

  @Test
  public void test2()  throws Throwable  {
      PeerExchangerItem peerExchangerItem0 = new PeerExchangerItem((PeerDatabase) null, (PeerItem) null, (PeerExchangerItem.Helper) null);
      PeerExchangerItem.Helper peerExchangerItem_Helper0 = peerExchangerItem0.getHelper();
      assertNull(peerExchangerItem_Helper0);
  }

  @Test
  public void test3()  throws Throwable  {
      PeerExchangerItem peerExchangerItem0 = new PeerExchangerItem((PeerDatabase) null, (PeerItem) null, (PeerExchangerItem.Helper) null);
      boolean boolean0 = peerExchangerItem0.isConnectedToPeer((PeerItem) null);
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      PeerExchangerItem peerExchangerItem0 = new PeerExchangerItem((PeerDatabase) null, (PeerItem) null, (PeerExchangerItem.Helper) null);
      peerExchangerItem0.dropConnectedPeer((PeerItem) null);
  }

  @Test
  public void test5()  throws Throwable  {
      PeerExchangerItem peerExchangerItem0 = new PeerExchangerItem((PeerDatabase) null, (PeerItem) null, (PeerExchangerItem.Helper) null);
      // Undeclared exception!
      try {
        peerExchangerItem0.seedStatusChanged();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      PeerExchangerItem peerExchangerItem0 = new PeerExchangerItem((PeerDatabase) null, (PeerItem) null, (PeerExchangerItem.Helper) null);
      peerExchangerItem0.disableStateMaintenance();
      peerExchangerItem0.notifyAdded((PeerItem) null);
  }

  @Test
  public void test7()  throws Throwable  {
      PeerExchangerItem peerExchangerItem0 = new PeerExchangerItem((PeerDatabase) null, (PeerItem) null, (PeerExchangerItem.Helper) null);
      // Undeclared exception!
      try {
        peerExchangerItem0.destroy();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      PeerExchangerItem peerExchangerItem0 = new PeerExchangerItem((PeerDatabase) null, (PeerItem) null, (PeerExchangerItem.Helper) null);
      peerExchangerItem0.addConnectedPeer((PeerItem) null);
  }

  @Test
  public void test9()  throws Throwable  {
      PeerExchangerItem peerExchangerItem0 = new PeerExchangerItem((PeerDatabase) null, (PeerItem) null, (PeerExchangerItem.Helper) null);
      peerExchangerItem0.disableStateMaintenance();
      peerExchangerItem0.addConnectedPeer((PeerItem) null);
  }

  @Test
  public void test10()  throws Throwable  {
      PeerExchangerItem peerExchangerItem0 = new PeerExchangerItem((PeerDatabase) null, (PeerItem) null, (PeerExchangerItem.Helper) null);
      peerExchangerItem0.notifyAdded((PeerItem) null);
      peerExchangerItem0.notifyDropped((PeerItem) null);
  }

  @Test
  public void test11()  throws Throwable  {
      PeerExchangerItem peerExchangerItem0 = new PeerExchangerItem((PeerDatabase) null, (PeerItem) null, (PeerExchangerItem.Helper) null);
      peerExchangerItem0.notifyDropped((PeerItem) null);
      peerExchangerItem0.notifyAdded((PeerItem) null);
  }

  @Test
  public void test12()  throws Throwable  {
      PeerExchangerItem peerExchangerItem0 = new PeerExchangerItem((PeerDatabase) null, (PeerItem) null, (PeerExchangerItem.Helper) null);
      peerExchangerItem0.notifyAdded((PeerItem) null);
      peerExchangerItem0.notifyAdded((PeerItem) null);
  }

  @Test
  public void test13()  throws Throwable  {
      PeerExchangerItem peerExchangerItem0 = new PeerExchangerItem((PeerDatabase) null, (PeerItem) null, (PeerExchangerItem.Helper) null);
      peerExchangerItem0.disableStateMaintenance();
      peerExchangerItem0.notifyDropped((PeerItem) null);
  }

  @Test
  public void test14()  throws Throwable  {
      PeerExchangerItem peerExchangerItem0 = new PeerExchangerItem((PeerDatabase) null, (PeerItem) null, (PeerExchangerItem.Helper) null);
      peerExchangerItem0.notifyDropped((PeerItem) null);
      peerExchangerItem0.notifyDropped((PeerItem) null);
  }

  @Test
  public void test15()  throws Throwable  {
      PeerExchangerItem peerExchangerItem0 = new PeerExchangerItem((PeerDatabase) null, (PeerItem) null, (PeerExchangerItem.Helper) null);
      peerExchangerItem0.notifyAdded((PeerItem) null);
      PeerItem[] peerItemArray0 = peerExchangerItem0.getNewlyAddedPeerConnections();
      assertNotNull(peerItemArray0);
  }

  @Test
  public void test16()  throws Throwable  {
      PeerExchangerItem peerExchangerItem0 = new PeerExchangerItem((PeerDatabase) null, (PeerItem) null, (PeerExchangerItem.Helper) null);
      PeerItem[] peerItemArray0 = peerExchangerItem0.getNewlyAddedPeerConnections();
      assertNull(peerItemArray0);
  }

  @Test
  public void test17()  throws Throwable  {
      PeerExchangerItem peerExchangerItem0 = new PeerExchangerItem((PeerDatabase) null, (PeerItem) null, (PeerExchangerItem.Helper) null);
      peerExchangerItem0.notifyDropped((PeerItem) null);
      PeerItem[] peerItemArray0 = peerExchangerItem0.getNewlyDroppedPeerConnections();
      assertNotNull(peerItemArray0);
  }

  @Test
  public void test18()  throws Throwable  {
      PeerExchangerItem peerExchangerItem0 = new PeerExchangerItem((PeerDatabase) null, (PeerItem) null, (PeerExchangerItem.Helper) null);
      PeerItem[] peerItemArray0 = peerExchangerItem0.getNewlyDroppedPeerConnections();
      assertNull(peerItemArray0);
  }

  @Test
  public void test19()  throws Throwable  {
      PeerExchangerItem peerExchangerItem0 = new PeerExchangerItem((PeerDatabase) null, (PeerItem) null, (PeerExchangerItem.Helper) null);
      peerExchangerItem0.disableStateMaintenance();
      peerExchangerItem0.enableStateMaintenance();
  }

  @Test
  public void test20()  throws Throwable  {
      PeerExchangerItem peerExchangerItem0 = new PeerExchangerItem((PeerDatabase) null, (PeerItem) null, (PeerExchangerItem.Helper) null);
      peerExchangerItem0.enableStateMaintenance();
  }
}
