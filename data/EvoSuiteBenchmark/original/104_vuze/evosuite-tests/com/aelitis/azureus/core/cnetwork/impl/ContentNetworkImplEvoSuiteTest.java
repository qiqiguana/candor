/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.cnetwork.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.cnetwork.ContentNetworkPropertyChangeListener;
import com.aelitis.azureus.core.cnetwork.impl.ContentNetworkImpl;
import com.aelitis.azureus.core.cnetwork.impl.ContentNetworkManagerImpl;
import com.aelitis.azureus.core.cnetwork.impl.ContentNetworkVuzeGeneric;
import com.aelitis.azureus.core.vuzefile.VuzeFileImpl;
import java.io.IOException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ContentNetworkImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, 0L, 0L, "", (Map<String, Object>) null, (Set<Integer>) null, "", "", "", "", "", "", "", "", "", "");
      // Undeclared exception!
      try {
        contentNetworkVuzeGeneric0.remove();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HashSet<Integer> hashSet0 = new HashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, 0L, 0L, "Socks server is requesting authentication, please setup user and password in config", (Map<String, Object>) hashMap0, (Set<Integer>) hashSet0, "Socks server is requesting authentication, please setup user and password in config", "Socks server is requesting authentication, please setup user and password in config", "Socks server is requesting authentication, please setup user and password in config", "Socks server is requesting authentication, please setup user and password in config", "Socks server is requesting authentication, please setup user and password in config", "Socks server is requesting authentication, please setup user and password in config", "Socks server is requesting authentication, please setup user and password in config", "Socks server is requesting authentication, please setup user and password in config", "Socks server is requesting authentication, please setup user and password in config");
      assertEquals(false, contentNetworkVuzeGeneric0.isStartupNetwork());
      
      contentNetworkVuzeGeneric0.setStartupNetwork(true);
      assertEquals(true, contentNetworkVuzeGeneric0.isStartupNetwork());
      assertEquals("cnetwork.net.0.props", contentNetworkVuzeGeneric0.getPropertiesKey());
  }

  @Test
  public void test2()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      TreeSet<Integer> treeSet0 = new TreeSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, (-202L), (-202L), "Z|6)!", (Map<String, Object>) hashMap0, (Set<Integer>) treeSet0, "Z|6)!", "Z|6)!", "Z|6)!", "Z|6)!", "Z|6)!", "Z|6)!", "Z|6)!", "Z|6)!", "Z|6)!");
      boolean boolean0 = contentNetworkVuzeGeneric0.isStartupNetwork();
      assertEquals("-202 - Z|6)!: version=-202, site=Z|6)!", contentNetworkVuzeGeneric0.getString());
      assertEquals("cnetwork.net.-202.props", contentNetworkVuzeGeneric0.getPropertiesKey());
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HashSet<Integer> hashSet0 = new HashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, 0L, 0L, "Socks server is requesting authentication, please setup user and password in config", (Map<String, Object>) hashMap0, (Set<Integer>) hashSet0, "Socks server is requesting authentication, please setup user and password in config", "Socks server is requesting authentication, please setup user and password in config", "Socks server is requesting authentication, please setup user and password in config", "Socks server is requesting authentication, please setup user and password in config", "Socks server is requesting authentication, please setup user and password in config", "Socks server is requesting authentication, please setup user and password in config", "Socks server is requesting authentication, please setup user and password in config", "Socks server is requesting authentication, please setup user and password in config", "Socks server is requesting authentication, please setup user and password in config");
      String string0 = contentNetworkVuzeGeneric0.getTorrentDownloadService("Socks server is requesting authentication, please setup user and password in config", "Socks server is requesting authentication, please setup user and password in config");
      assertEquals("Socks server is requesting authentication, please setup user and password in configdownload/Socks server is requesting authentication, please setup user and password in config.torrent?referal=Socks%20server%20is%20requesting%20authentication%2C%20please%20setup%20user%20and%20password%20in%20config&azid=D5FXK5A2S3I2CM6LMSPZPP5YRUT7T5NZ&azv=4.7.2.1_CVS&locale=en&os.name=Linux&vzemb=1", string0);
      assertEquals("0 - Socks server is requesting authentication, please setup user and password in config: version=0, site=Socks server is requesting authentication, please setup user and password in config", contentNetworkVuzeGeneric0.getString());
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      HashSet<Integer> hashSet0 = new HashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, 2000L, 2000L, "RkS1UX:z", (Map<String, Object>) null, (Set<Integer>) hashSet0, "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z");
      contentNetworkVuzeGeneric0.addPersistentPropertyChangeListener((ContentNetworkPropertyChangeListener) null);
      contentNetworkVuzeGeneric0.setPersistentProperty("RkS1UX:z", "RkS1UX:zdetails/RkS1UX:zsearch?q=RkS1UX%3Az&azid=D5FXK5A2S3I2CM6LMSPZPP5YRUT7T5NZ&azv=4.7.2.1_CVS&locale=en&os.name=Linux&vzemb=1&rand=0.html?azid=D5FXK5A2S3I2CM6LMSPZPP5YRUT7T5NZ&azv=4.7.2.1_CVS&locale=en&os.name=Linux&vzemb=1&client_ref=RkS1UX%3Az");
      assertEquals(false, contentNetworkVuzeGeneric0.isStartupNetwork());
      assertEquals("2000 - RkS1UX:z: version=2000, site=RkS1UX:z", contentNetworkVuzeGeneric0.getString());
      assertEquals("cnetwork.net.2000.props", contentNetworkVuzeGeneric0.getPropertiesKey());
  }

  @Test
  public void test5()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, (-2L), (-2L), "Bs);DjPD~G", (Map<String, Object>) hashMap0, (Set<Integer>) linkedHashSet0, "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G");
      contentNetworkVuzeGeneric0.setTransientProperty((Object) "{}", (Object) "{}");
      assertEquals("-2 - Bs);DjPD~G: version=-2, site=Bs);DjPD~G", contentNetworkVuzeGeneric0.getString());
  }

  @Test
  public void test6()  throws Throwable  {
      HashSet<Integer> hashSet0 = new HashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, 2000L, 2000L, "RkS1UX:z", (Map<String, Object>) null, (Set<Integer>) hashSet0, "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z");
      String string0 = contentNetworkVuzeGeneric0.getExternalSiteRelativeURL("RkS1UX:z", false);
      assertNull(string0);
      assertEquals("2000 - RkS1UX:z: version=2000, site=RkS1UX:z", contentNetworkVuzeGeneric0.getString());
      assertEquals("RkS1UX:z", contentNetworkVuzeGeneric0.getName());
  }

  @Test
  public void test7()  throws Throwable  {
      HashSet<Integer> hashSet0 = new HashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, (-1350L), (-1350L), (String) null, (Map<String, Object>) null, (Set<Integer>) hashSet0, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null);
      String string0 = contentNetworkVuzeGeneric0.getAddFriendURL((String) null);
      assertEquals("nulluser/AddFriend.html?ts=0.9311966152024215&bg_color=null&azid=D5FXK5A2S3I2CM6LMSPZPP5YRUT7T5NZ&azv=4.7.2.1_CVS&locale=en&os.name=Linux&vzemb=1", string0);
      assertNotNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HashSet<Integer> hashSet0 = new HashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, 0L, 0L, "KXs&g6-09", (Map<String, Object>) hashMap0, (Set<Integer>) hashSet0, "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09");
      Map<String, Object> map0 = contentNetworkVuzeGeneric0.getPersistentPropertyDefaults();
      assertEquals("0 - KXs&g6-09: version=0, site=KXs&g6-09", contentNetworkVuzeGeneric0.getString());
      assertNotNull(map0);
  }

  @Test
  public void test9()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HashSet<Integer> hashSet0 = new HashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, 0L, 0L, "KXs&g6-09", (Map<String, Object>) hashMap0, (Set<Integer>) hashSet0, "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09");
      boolean boolean0 = contentNetworkVuzeGeneric0.isSameAs((ContentNetworkImpl) contentNetworkVuzeGeneric0);
      assertEquals(true, boolean0);
      assertEquals("0 - KXs&g6-09: version=0, site=KXs&g6-09", contentNetworkVuzeGeneric0.getString());
  }

  @Test
  public void test10()  throws Throwable  {
      HashSet<Integer> hashSet0 = new HashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, 2000L, 2000L, "RkS1UX:z", (Map<String, Object>) null, (Set<Integer>) hashSet0, "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z");
      String string0 = contentNetworkVuzeGeneric0.getContentDetailsService("RkS1UX:zsearch?q=RkS1UX%3Az&azid=D5FXK5A2S3I2CM6LMSPZPP5YRUT7T5NZ&azv=4.7.2.1_CVS&locale=en&os.name=Linux&vzemb=1&rand=0", "RkS1UX:z");
      assertEquals("RkS1UX:zdetails/RkS1UX:zsearch?q=RkS1UX%3Az&azid=D5FXK5A2S3I2CM6LMSPZPP5YRUT7T5NZ&azv=4.7.2.1_CVS&locale=en&os.name=Linux&vzemb=1&rand=0.html?azid=D5FXK5A2S3I2CM6LMSPZPP5YRUT7T5NZ&azv=4.7.2.1_CVS&locale=en&os.name=Linux&vzemb=1&client_ref=RkS1UX%3Az", string0);
      assertNotNull(string0);
      assertEquals("2000 - RkS1UX:z: version=2000, site=RkS1UX:z", contentNetworkVuzeGeneric0.getString());
  }

  @Test
  public void test11()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HashSet<Integer> hashSet0 = new HashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, 1534L, 1534L, "L", (Map<String, Object>) hashMap0, (Set<Integer>) hashSet0, "L", "L", "L", "L", "L", "L", "L", "L", "L");
      // Undeclared exception!
      try {
        contentNetworkVuzeGeneric0.getXSearchService("L", false);
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class org.gudy.azureus2.pluginsimpl.local.PluginInitializer
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      HashSet<Integer> hashSet0 = new HashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, 2000L, 2000L, "RkS1UX:z", (Map<String, Object>) null, (Set<Integer>) hashSet0, "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z");
      String string0 = contentNetworkVuzeGeneric0.getSearchService("RkS1UX:z");
      assertEquals("2000 - RkS1UX:z: version=2000, site=RkS1UX:z", contentNetworkVuzeGeneric0.getString());
      assertEquals("RkS1UX:zsearch?q=RkS1UX%3Az&azid=D5FXK5A2S3I2CM6LMSPZPP5YRUT7T5NZ&azv=4.7.2.1_CVS&locale=en&os.name=Linux&vzemb=1&rand=0", string0);
      assertNotNull(string0);
  }

  @Test
  public void test13()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HashSet<Integer> hashSet0 = new HashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, 0L, 0L, "KXs&g6-09", (Map<String, Object>) hashMap0, (Set<Integer>) hashSet0, "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09");
      VuzeFileImpl vuzeFileImpl0 = (VuzeFileImpl)contentNetworkVuzeGeneric0.getVuzeFile();
      assertEquals("Content Network", vuzeFileImpl0.getName());
      assertNotNull(vuzeFileImpl0);
      assertEquals("0 - KXs&g6-09: version=0, site=KXs&g6-09", contentNetworkVuzeGeneric0.getString());
  }

  @Test
  public void test14()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, 0L, 0L, "FrlsY Ez.\"kp8wxu", (Map<String, Object>) hashMap0, (Set<Integer>) linkedHashSet0, "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu");
      String string0 = contentNetworkVuzeGeneric0.getLoginService("0 - FrlsY Ez.\"kp8wxu: version=0, site=FrlsY Ez.\"kp8wxu");
      assertNotNull(string0);
      assertEquals("FrlsY Ez.\"kp8wxulogin.start?msg=0%20-%20FrlsY%20Ez.%22kp8wxu%3A%20version%3D0%2C%20site%3DFrlsY%20Ez.%22kp8wxu&azid=D5FXK5A2S3I2CM6LMSPZPP5YRUT7T5NZ&azv=4.7.2.1_CVS&locale=en&os.name=Linux&vzemb=1", string0);
      assertEquals("0 - FrlsY Ez.\"kp8wxu: version=0, site=FrlsY Ez.\"kp8wxu", contentNetworkVuzeGeneric0.getString());
  }

  @Test
  public void test15()  throws Throwable  {
      HashSet<Integer> hashSet0 = new HashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, 2000L, 2000L, "<+bFh5GZf'AE0<,DK", (Map<String, Object>) null, (Set<Integer>) hashSet0, "<+bFh5GZf'AE0<,DK", "<+bFh5GZf'AE0<,DK", "<+bFh5GZf'AE0<,DK", "<+bFh5GZf'AE0<,DK", "<+bFh5GZf'AE0<,DK", "<+bFh5GZf'AE0<,DK", "<+bFh5GZf'AE0<,DK", "<+bFh5GZf'AE0<,DK", "<+bFh5GZf'AE0<,DK", "<+bFh5GZf'AE0<,DK");
      contentNetworkVuzeGeneric0.updateFrom((ContentNetworkImpl) contentNetworkVuzeGeneric0);
      assertEquals("2000 - <+bFh5GZf'AE0<,DK: version=2000, site=<+bFh5GZf'AE0<,DK", contentNetworkVuzeGeneric0.getString());
      assertEquals(2000L, contentNetworkVuzeGeneric0.getID());
  }

  @Test
  public void test16()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, 0L, 0L, "FrlsY Ez.\"kp8wxu", (Map<String, Object>) hashMap0, (Set<Integer>) linkedHashSet0, "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu");
      assertEquals(true, contentNetworkVuzeGeneric0.isStartupNetwork());
      
      contentNetworkVuzeGeneric0.destroy();
      assertEquals("0 - FrlsY Ez.\"kp8wxu: version=0, site=FrlsY Ez.\"kp8wxu", contentNetworkVuzeGeneric0.getString());
  }

  @Test
  public void test17()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, 0L, 0L, "FrlsY Ez.\"kp8wxu", (Map<String, Object>) hashMap0, (Set<Integer>) linkedHashSet0, "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu");
      String string0 = contentNetworkVuzeGeneric0.getCommentService("FrlsY Ez.\"kp8wxu");
      assertEquals("FrlsY Ez.\"kp8wxucomment/FrlsY Ez.\"kp8wxu.html?azid=D5FXK5A2S3I2CM6LMSPZPP5YRUT7T5NZ&azv=4.7.2.1_CVS&locale=en&os.name=Linux&vzemb=1&rnd=0.4788191642675963", string0);
      assertNotNull(string0);
  }

  @Test
  public void test18()  throws Throwable  {
      HashSet<Integer> hashSet0 = new HashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, 2000L, 2000L, "RkS1UX:z", (Map<String, Object>) null, (Set<Integer>) hashSet0, "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z");
      String string0 = contentNetworkVuzeGeneric0.getFAQTopicService("RkS1UX:z");
      assertEquals("RkS1UX:zRkS1UX:z", string0);
      assertEquals("2000 - RkS1UX:z: version=2000, site=RkS1UX:z", contentNetworkVuzeGeneric0.getString());
      assertNotNull(string0);
  }

  @Test
  public void test19()  throws Throwable  {
      HashSet<Integer> hashSet0 = new HashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, 2000L, 2000L, "RkS1UX:z", (Map<String, Object>) null, (Set<Integer>) hashSet0, "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z");
      String string0 = contentNetworkVuzeGeneric0.getSiteRelativeURL("RkS1UX:z", false);
      assertEquals("2000 - RkS1UX:z: version=2000, site=RkS1UX:z", contentNetworkVuzeGeneric0.getString());
      assertNotNull(string0);
      assertEquals("RkS1UX:zRkS1UX:z", string0);
  }

  @Test
  public void test20()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, (-2L), (-2L), "Bs);DjPD~G", (Map<String, Object>) hashMap0, (Set<Integer>) linkedHashSet0, "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G");
      contentNetworkVuzeGeneric0.removePersistentPropertyChangeListener((ContentNetworkPropertyChangeListener) null);
      assertEquals("-2 - Bs);DjPD~G: version=-2, site=Bs);DjPD~G", contentNetworkVuzeGeneric0.getString());
  }

  @Test
  public void test21()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      TreeSet<Integer> treeSet0 = new TreeSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, (-202L), (-202L), "Z|6)!", (Map<String, Object>) hashMap0, (Set<Integer>) treeSet0, "Z|6)!", "Z|6)!", "Z|6)!", "Z|6)!", "Z|6)!", "Z|6)!", "Z|6)!", "Z|6)!", "Z|6)!");
      contentNetworkVuzeGeneric0.getTransientProperty((Object) (-202L));
      assertEquals("-202 - Z|6)!: version=-202, site=Z|6)!", contentNetworkVuzeGeneric0.getString());
      assertEquals("cnetwork.net.-202.props", contentNetworkVuzeGeneric0.getPropertiesKey());
  }

  @Test
  public void test22()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HashSet<Integer> hashSet0 = new HashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, 0L, 0L, "KXs&g6-09", (Map<String, Object>) hashMap0, (Set<Integer>) hashSet0, "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09");
      String string0 = contentNetworkVuzeGeneric0.getProfileService("KXs&g6-09", "KXs&g6-09");
      assertNotNull(string0);
      assertEquals("0 - KXs&g6-09: version=0, site=KXs&g6-09", contentNetworkVuzeGeneric0.getString());
      assertEquals("KXs&g6-09profile/KXs%26g6-09?azid=D5FXK5A2S3I2CM6LMSPZPP5YRUT7T5NZ&azv=4.7.2.1_CVS&locale=en&os.name=Linux&vzemb=1&client_ref=KXs%26g6-09", string0);
  }

  @Test
  public void test23()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HashSet<Integer> hashSet0 = new HashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, 0L, 0L, "KXs&g6-09", (Map<String, Object>) hashMap0, (Set<Integer>) hashSet0, "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09", "KXs&g6-09");
      String string0 = contentNetworkVuzeGeneric0.getSubscriptionURL("KXs&g6-09");
      assertEquals("KXs&g6-09xsearch/index.php?subscription=KXs&g6-09&azid=D5FXK5A2S3I2CM6LMSPZPP5YRUT7T5NZ&azv=4.7.2.1_CVS&locale=en&os.name=Linux&vzemb=1", string0);
      assertEquals("0 - KXs&g6-09: version=0, site=KXs&g6-09", contentNetworkVuzeGeneric0.getString());
      assertNotNull(string0);
  }

  @Test
  public void test24()  throws Throwable  {
      HashMap<Map<Object, Boolean>, String> hashMap0 = new HashMap<Map<Object, Boolean>, String>();
      try {
        ContentNetworkImpl.importFromBEncodedMapStatic((ContentNetworkManagerImpl) null, (Map) hashMap0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * Unsupported network type: 0
         */
      }
  }

  @Test
  public void test25()  throws Throwable  {
      HashSet<Integer> hashSet0 = new HashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, 2000L, 2000L, "RkS1UX:z", (Map<String, Object>) null, (Set<Integer>) hashSet0, "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z", "RkS1UX:z");
      contentNetworkVuzeGeneric0.setPersistentProperty("RkS1UX:z", (Object) null);
      assertEquals("2000 - RkS1UX:z: version=2000, site=RkS1UX:z", contentNetworkVuzeGeneric0.getString());
      assertEquals(true, contentNetworkVuzeGeneric0.isStartupNetwork());
      assertEquals("RkS1UX:z", contentNetworkVuzeGeneric0.getName());
  }

  @Test
  public void test26()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, (-2L), (-2L), "Bs);DjPD~G", (Map<String, Object>) hashMap0, (Set<Integer>) linkedHashSet0, "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G", "Bs);DjPD~G");
      contentNetworkVuzeGeneric0.setStartupNetwork(false);
      assertEquals("cnetwork.net.-2.props", contentNetworkVuzeGeneric0.getPropertiesKey());
      assertEquals("-2 - Bs);DjPD~G: version=-2, site=Bs);DjPD~G", contentNetworkVuzeGeneric0.getString());
      assertEquals(false, contentNetworkVuzeGeneric0.isStartupNetwork());
  }

  @Test
  public void test27()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, 0L, 0L, "FrlsY Ez.\"kp8wxu", (Map<String, Object>) hashMap0, (Set<Integer>) linkedHashSet0, "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu", "FrlsY Ez.\"kp8wxu");
      contentNetworkVuzeGeneric0.getPersistentProperty("FrlsY Ez.\"kp8wxu");
      assertEquals("cnetwork.net.0.props", contentNetworkVuzeGeneric0.getPropertiesKey());
      assertEquals("0 - FrlsY Ez.\"kp8wxu: version=0, site=FrlsY Ez.\"kp8wxu", contentNetworkVuzeGeneric0.getString());
      assertEquals("FrlsY Ez.\"kp8wxu", contentNetworkVuzeGeneric0.getName());
  }

  @Test
  public void test28()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      TreeSet<Integer> treeSet0 = new TreeSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, (-4L), (-4L), "*z_TQ]R(%k^`J", (Map<String, Object>) hashMap0, (Set<Integer>) treeSet0, "*z_TQ]R(%k^`J", "*z_TQ]R(%k^`J", "*z_TQ]R(%k^`J", "*z_TQ]R(%k^`J", "*z_TQ]R(%k^`J", "*z_TQ]R(%k^`J", "*z_TQ]R(%k^`J", "*z_TQ]R(%k^`J", "*z_TQ]R(%k^`J");
      contentNetworkVuzeGeneric0.isStartupNetwork();
      assertEquals("cnetwork.net.-4.props", contentNetworkVuzeGeneric0.getPropertiesKey());
      assertEquals("-4 - *z_TQ]R(%k^`J: version=-4, site=*z_TQ]R(%k^`J", contentNetworkVuzeGeneric0.getString());
  }

  @Test
  public void test29()  throws Throwable  {
      HashSet<Integer> hashSet0 = new HashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, (-1350L), (-1350L), (String) null, (Map<String, Object>) null, (Set<Integer>) hashSet0, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null);
      boolean boolean0 = contentNetworkVuzeGeneric0.isStartupNetwork();
      assertEquals("-1350 - null: version=-1350, site=null", contentNetworkVuzeGeneric0.getString());
      assertEquals("cnetwork.net.-1350.props", contentNetworkVuzeGeneric0.getPropertiesKey());
      assertEquals(false, boolean0);
  }

  @Test
  public void test30()  throws Throwable  {
      HashSet<Integer> hashSet0 = new HashSet<Integer>();
      ContentNetworkVuzeGeneric contentNetworkVuzeGeneric0 = new ContentNetworkVuzeGeneric((ContentNetworkManagerImpl) null, 2000L, 2000L, "<+bFh5GZf'AE0<,DK", (Map<String, Object>) null, (Set<Integer>) hashSet0, "<+bFh5GZf'AE0<,DK", "<+bFh5GZf'AE0<,DK", "<+bFh5GZf'AE0<,DK", "<+bFh5GZf'AE0<,DK", "<+bFh5GZf'AE0<,DK", "<+bFh5GZf'AE0<,DK", "<+bFh5GZf'AE0<,DK", "<+bFh5GZf'AE0<,DK", "<+bFh5GZf'AE0<,DK", "<+bFh5GZf'AE0<,DK");
      boolean boolean0 = contentNetworkVuzeGeneric0.isStartupNetwork();
      assertEquals(true, boolean0);
      assertEquals("2000 - <+bFh5GZf'AE0<,DK: version=2000, site=<+bFh5GZf'AE0<,DK", contentNetworkVuzeGeneric0.getString());
  }
}
