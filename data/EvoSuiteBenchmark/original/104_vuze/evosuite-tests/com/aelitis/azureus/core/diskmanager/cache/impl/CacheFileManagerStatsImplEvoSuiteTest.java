/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.diskmanager.cache.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.diskmanager.cache.impl.CacheFileManagerImpl;
import com.aelitis.azureus.core.diskmanager.cache.impl.CacheFileManagerStatsImpl;
import org.gudy.azureus2.core3.torrent.TOTorrent;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CacheFileManagerStatsImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CacheFileManagerImpl cacheFileManagerImpl0 = new CacheFileManagerImpl();
      CacheFileManagerStatsImpl cacheFileManagerStatsImpl0 = new CacheFileManagerStatsImpl(cacheFileManagerImpl0);
      long long0 = cacheFileManagerStatsImpl0.getBytesWrittenToCache();
      assertEquals(0L, long0);
  }

  @Test
  public void test1()  throws Throwable  {
      CacheFileManagerImpl cacheFileManagerImpl0 = new CacheFileManagerImpl();
      CacheFileManagerStatsImpl cacheFileManagerStatsImpl0 = new CacheFileManagerStatsImpl(cacheFileManagerImpl0);
      long long0 = cacheFileManagerStatsImpl0.getAverageBytesWrittenToFile();
      assertEquals(0L, long0);
  }

  @Test
  public void test2()  throws Throwable  {
      CacheFileManagerImpl cacheFileManagerImpl0 = new CacheFileManagerImpl();
      CacheFileManagerStatsImpl cacheFileManagerStatsImpl0 = new CacheFileManagerStatsImpl(cacheFileManagerImpl0);
      long long0 = cacheFileManagerStatsImpl0.getAverageBytesReadFromCache();
      assertEquals(0L, long0);
  }

  @Test
  public void test3()  throws Throwable  {
      CacheFileManagerImpl cacheFileManagerImpl0 = new CacheFileManagerImpl();
      CacheFileManagerStatsImpl cacheFileManagerStatsImpl0 = new CacheFileManagerStatsImpl(cacheFileManagerImpl0);
      long long0 = cacheFileManagerStatsImpl0.getAverageBytesWrittenToCache();
      assertEquals(0L, long0);
  }

  @Test
  public void test4()  throws Throwable  {
      CacheFileManagerImpl cacheFileManagerImpl0 = new CacheFileManagerImpl();
      CacheFileManagerStatsImpl cacheFileManagerStatsImpl0 = new CacheFileManagerStatsImpl(cacheFileManagerImpl0);
      long[] longArray0 = new long[3];
      // Undeclared exception!
      try {
        cacheFileManagerStatsImpl0.getBytesInCache((TOTorrent) null, longArray0, longArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Offsets/Lengths are not in ascending order
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      CacheFileManagerImpl cacheFileManagerImpl0 = new CacheFileManagerImpl();
      CacheFileManagerStatsImpl cacheFileManagerStatsImpl0 = new CacheFileManagerStatsImpl(cacheFileManagerImpl0);
      long long0 = cacheFileManagerStatsImpl0.getBytesWrittenToFile();
      assertEquals(0L, long0);
  }

  @Test
  public void test6()  throws Throwable  {
      CacheFileManagerImpl cacheFileManagerImpl0 = new CacheFileManagerImpl();
      CacheFileManagerStatsImpl cacheFileManagerStatsImpl0 = new CacheFileManagerStatsImpl(cacheFileManagerImpl0);
      long long0 = cacheFileManagerStatsImpl0.getCacheWriteCount();
      assertEquals(0L, long0);
  }

  @Test
  public void test7()  throws Throwable  {
      CacheFileManagerImpl cacheFileManagerImpl0 = new CacheFileManagerImpl();
      CacheFileManagerStatsImpl cacheFileManagerStatsImpl0 = new CacheFileManagerStatsImpl(cacheFileManagerImpl0);
      long long0 = cacheFileManagerStatsImpl0.getUsedSize();
      assertEquals(0L, long0);
  }

  @Test
  public void test8()  throws Throwable  {
      CacheFileManagerImpl cacheFileManagerImpl0 = new CacheFileManagerImpl();
      CacheFileManagerStatsImpl cacheFileManagerStatsImpl0 = new CacheFileManagerStatsImpl(cacheFileManagerImpl0);
      long long0 = cacheFileManagerStatsImpl0.getBytesReadFromFile();
      assertEquals(0L, long0);
  }

  @Test
  public void test9()  throws Throwable  {
      CacheFileManagerImpl cacheFileManagerImpl0 = new CacheFileManagerImpl();
      CacheFileManagerStatsImpl cacheFileManagerStatsImpl0 = new CacheFileManagerStatsImpl(cacheFileManagerImpl0);
      cacheFileManagerStatsImpl0.update();
      assertEquals(0L, cacheFileManagerStatsImpl0.getFileWriteCount());
  }

  @Test
  public void test10()  throws Throwable  {
      CacheFileManagerImpl cacheFileManagerImpl0 = new CacheFileManagerImpl();
      CacheFileManagerStatsImpl cacheFileManagerStatsImpl0 = new CacheFileManagerStatsImpl(cacheFileManagerImpl0);
      long long0 = cacheFileManagerStatsImpl0.getBytesReadFromCache();
      assertEquals(0L, long0);
  }

  @Test
  public void test11()  throws Throwable  {
      CacheFileManagerImpl cacheFileManagerImpl0 = new CacheFileManagerImpl();
      CacheFileManagerStatsImpl cacheFileManagerStatsImpl0 = new CacheFileManagerStatsImpl(cacheFileManagerImpl0);
      long long0 = cacheFileManagerStatsImpl0.getFileWriteCount();
      assertEquals(0L, long0);
  }

  @Test
  public void test12()  throws Throwable  {
      CacheFileManagerImpl cacheFileManagerImpl0 = new CacheFileManagerImpl();
      CacheFileManagerStatsImpl cacheFileManagerStatsImpl0 = new CacheFileManagerStatsImpl(cacheFileManagerImpl0);
      long long0 = cacheFileManagerStatsImpl0.getFileReadCount();
      assertEquals(0L, long0);
  }

  @Test
  public void test13()  throws Throwable  {
      CacheFileManagerImpl cacheFileManagerImpl0 = new CacheFileManagerImpl();
      CacheFileManagerStatsImpl cacheFileManagerStatsImpl0 = new CacheFileManagerStatsImpl(cacheFileManagerImpl0);
      long long0 = cacheFileManagerStatsImpl0.getSize();
      assertEquals(4194304L, long0);
  }

  @Test
  public void test14()  throws Throwable  {
      CacheFileManagerImpl cacheFileManagerImpl0 = new CacheFileManagerImpl();
      CacheFileManagerStatsImpl cacheFileManagerStatsImpl0 = new CacheFileManagerStatsImpl(cacheFileManagerImpl0);
      long long0 = cacheFileManagerStatsImpl0.getAverageBytesReadFromFile();
      assertEquals(0L, long0);
  }

  @Test
  public void test15()  throws Throwable  {
      CacheFileManagerImpl cacheFileManagerImpl0 = new CacheFileManagerImpl();
      CacheFileManagerStatsImpl cacheFileManagerStatsImpl0 = new CacheFileManagerStatsImpl(cacheFileManagerImpl0);
      long long0 = cacheFileManagerStatsImpl0.getCacheReadCount();
      assertEquals(0L, long0);
  }
}
