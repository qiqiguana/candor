/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.clientmessageservice.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.clientmessageservice.impl.ClientConnection;
import com.aelitis.azureus.core.clientmessageservice.impl.ClientMessage;
import com.aelitis.azureus.core.clientmessageservice.impl.ClientMessageHandler;
import java.util.HashMap;
import java.util.Map;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ClientMessageEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ClientMessage clientMessage0 = new ClientMessage("J^*", (ClientConnection) null, (Map) null, (ClientMessageHandler) null);
      clientMessage0.setHandler((ClientMessageHandler) null);
      assertEquals("J^*", clientMessage0.getMessageID());
  }

  @Test
  public void test1()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>(1, 1);
      ClientMessage clientMessage0 = new ClientMessage((String) null, (ClientConnection) null, (Map) hashMap0, (ClientMessageHandler) null);
      String string0 = clientMessage0.getMessageID();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>(1, 1);
      ClientMessage clientMessage0 = new ClientMessage((String) null, (ClientConnection) null, (Map) hashMap0, (ClientMessageHandler) null);
      Map<Object, Object> map0 = clientMessage0.getPayload();
      assertEquals(true, map0.isEmpty());
  }

  @Test
  public void test3()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>(1, 1);
      ClientMessage clientMessage0 = new ClientMessage((String) null, (ClientConnection) null, (Map) hashMap0, (ClientMessageHandler) null);
      ClientConnection clientConnection0 = clientMessage0.getClient();
      assertNull(clientConnection0);
  }

  @Test
  public void test4()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>(1, 1);
      ClientMessage clientMessage0 = new ClientMessage((String) null, (ClientConnection) null, (Map) hashMap0, (ClientMessageHandler) null);
      ClientMessageHandler clientMessageHandler0 = clientMessage0.getHandler();
      assertNull(clientMessageHandler0);
  }

  @Test
  public void test5()  throws Throwable  {
      ClientMessage clientMessage0 = new ClientMessage("J^*", (ClientConnection) null, (Map) null, (ClientMessageHandler) null);
      // Undeclared exception!
      try {
        clientMessage0.reportComplete();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>(1, 1);
      ClientMessage clientMessage0 = new ClientMessage((String) null, (ClientConnection) null, (Map) hashMap0, (ClientMessageHandler) null);
      // Undeclared exception!
      try {
        clientMessage0.reportFailed((Throwable) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
