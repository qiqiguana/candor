/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.peermanager.peerdb;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.peermanager.peerdb.PeerDatabase;
import com.aelitis.azureus.core.peermanager.peerdb.PeerExchangerItem;
import com.aelitis.azureus.core.peermanager.peerdb.PeerItem;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PeerDatabaseEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PeerDatabase peerDatabase0 = new PeerDatabase();
      PeerExchangerItem peerExchangerItem0 = peerDatabase0.registerPeerConnection((PeerItem) null, (PeerExchangerItem.Helper) null);
      peerExchangerItem0.addConnectedPeer((PeerItem) null);
      peerDatabase0.getNextOptimisticConnectPeer();
      peerDatabase0.getNextOptimisticConnectPeer();
      assertEquals("pc=1,dp=0", peerDatabase0.getString());
      assertEquals(1, peerDatabase0.getExchangedPeersUsed());
  }

  @Test
  public void test1()  throws Throwable  {
      PeerDatabase peerDatabase0 = new PeerDatabase();
      int int0 = peerDatabase0.getDiscoveredPeerCount();
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      PeerDatabase peerDatabase0 = new PeerDatabase();
      PeerItem peerItem0 = peerDatabase0.getSelfPeer();
      assertNull(peerItem0);
  }

  @Test
  public void test3()  throws Throwable  {
      PeerDatabase peerDatabase0 = new PeerDatabase();
      String string0 = peerDatabase0.getString();
      assertNotNull(string0);
      assertEquals("pc=0,dp=0", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      PeerDatabase peerDatabase0 = new PeerDatabase();
      PeerItem[] peerItemArray0 = peerDatabase0.getDiscoveredPeers();
      assertNotNull(peerItemArray0);
  }

  @Test
  public void test5()  throws Throwable  {
      PeerDatabase peerDatabase0 = new PeerDatabase();
      int int0 = peerDatabase0.getExchangedPeersUsed();
      assertEquals(0, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      PeerDatabase peerDatabase0 = new PeerDatabase();
      peerDatabase0.setSelfPeer((PeerItem) null);
      assertEquals("pc=0,dp=0", peerDatabase0.getString());
  }

  @Test
  public void test7()  throws Throwable  {
      PeerDatabase peerDatabase0 = new PeerDatabase();
      peerDatabase0.registerPeerConnection((PeerItem) null, (PeerExchangerItem.Helper) null);
      // Undeclared exception!
      try {
        peerDatabase0.registerPeerConnection((PeerItem) null, (PeerExchangerItem.Helper) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      PeerDatabase peerDatabase0 = new PeerDatabase();
      peerDatabase0.deregisterPeerConnection((PeerItem) null);
      assertEquals("pc=0,dp=0", peerDatabase0.getString());
  }

  @Test
  public void test9()  throws Throwable  {
      PeerDatabase peerDatabase0 = new PeerDatabase();
      peerDatabase0.addDiscoveredPeer((PeerItem) null);
      peerDatabase0.addDiscoveredPeer((PeerItem) null);
      assertEquals(1, peerDatabase0.getDiscoveredPeerCount());
      assertEquals("pc=0,dp=1", peerDatabase0.getString());
  }

  @Test
  public void test10()  throws Throwable  {
      PeerDatabase peerDatabase0 = new PeerDatabase();
      peerDatabase0.registerPeerConnection((PeerItem) null, (PeerExchangerItem.Helper) null);
      peerDatabase0.addDiscoveredPeer((PeerItem) null);
      assertEquals("pc=1,dp=1", peerDatabase0.getString());
      assertEquals(1, peerDatabase0.getDiscoveredPeerCount());
  }

  @Test
  public void test11()  throws Throwable  {
      PeerDatabase peerDatabase0 = new PeerDatabase();
      PeerExchangerItem peerExchangerItem0 = peerDatabase0.registerPeerConnection((PeerItem) null, (PeerExchangerItem.Helper) null);
      peerExchangerItem0.addConnectedPeer((PeerItem) null);
      peerDatabase0.addDiscoveredPeer((PeerItem) null);
      assertEquals("pc=1,dp=0", peerDatabase0.getString());
      assertEquals(0, peerDatabase0.getDiscoveredPeerCount());
  }

  @Test
  public void test12()  throws Throwable  {
      PeerDatabase peerDatabase0 = new PeerDatabase();
      PeerItem[] peerItemArray0 = peerDatabase0.getDiscoveredPeers("m");
      assertNotNull(peerItemArray0);
  }

  @Test
  public void test13()  throws Throwable  {
      PeerDatabase peerDatabase0 = new PeerDatabase();
      peerDatabase0.addDiscoveredPeer((PeerItem) null);
      // Undeclared exception!
      try {
        peerDatabase0.getDiscoveredPeers("m");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      PeerDatabase peerDatabase0 = new PeerDatabase();
      peerDatabase0.addDiscoveredPeer((PeerItem) null);
      assertEquals(1, peerDatabase0.getDiscoveredPeerCount());
      
      peerDatabase0.getNextOptimisticConnectPeer();
      assertEquals("pc=0,dp=0", peerDatabase0.getString());
  }

  @Test
  public void test15()  throws Throwable  {
      PeerDatabase peerDatabase0 = new PeerDatabase();
      int int0 = peerDatabase0.getExchangedPeerCount();
      assertEquals(0, int0);
  }
}
