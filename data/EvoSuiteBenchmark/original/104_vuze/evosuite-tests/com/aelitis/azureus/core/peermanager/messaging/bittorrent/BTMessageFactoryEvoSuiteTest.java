/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.peermanager.messaging.bittorrent;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.networkmanager.RawMessage;
import com.aelitis.azureus.core.networkmanager.impl.RawMessageImpl;
import com.aelitis.azureus.core.peermanager.messaging.Message;
import com.aelitis.azureus.core.peermanager.messaging.MessageException;
import com.aelitis.azureus.core.peermanager.messaging.azureus.AZStatRequest;
import com.aelitis.azureus.core.peermanager.messaging.bittorrent.BTMessageFactory;
import com.aelitis.azureus.core.peermanager.messaging.bittorrent.BTRawMessage;
import com.aelitis.azureus.core.peermanager.messaging.bittorrent.BTSuggestPiece;
import java.util.Map;
import org.gudy.azureus2.core3.util.DirectByteBuffer;
import org.gudy.azureus2.core3.util.DirectByteBufferPool;
import org.gudy.azureus2.core3.util.ReferenceCountedDirectByteBuffer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BTMessageFactoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BTMessageFactory bTMessageFactory0 = new BTMessageFactory();
      assertNotNull(bTMessageFactory0);
  }

  @Test
  public void test1()  throws Throwable  {
      BTMessageFactory.init();
  }

  @Test
  public void test2()  throws Throwable  {
      Message[] messageArray0 = new Message[1];
      BTMessageFactory.LegacyData bTMessageFactory_LegacyData0 = new BTMessageFactory.LegacyData(0, true, messageArray0, (byte)0);
      assertNotNull(bTMessageFactory_LegacyData0);
  }

  @Test
  public void test3()  throws Throwable  {
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte)96, (byte)96);
      try {
        BTMessageFactory.createBTMessage(directByteBuffer0);
        fail("Expecting exception: MessageException");
      } catch(MessageException e) {
        /*
         * [BT_CHOKE] decode error: payload not empty [95]
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte) (-13), 155);
      ReferenceCountedDirectByteBuffer referenceCountedDirectByteBuffer0 = directByteBuffer0.getReferenceCountedBuffer();
      int int0 = BTMessageFactory.getMessageType((DirectByteBuffer) referenceCountedDirectByteBuffer0);
      assertEquals(0, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte)81, 1410);
      directByteBuffer0.put((byte)81, (byte)81);
      int int0 = BTMessageFactory.getMessageType(directByteBuffer0);
      assertEquals(0, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      AZStatRequest aZStatRequest0 = new AZStatRequest((Map) null, (byte)96);
      RawMessage rawMessage0 = BTMessageFactory.createBTRawMessage((Message) aZStatRequest0);
      assertNull(rawMessage0);
  }

  @Test
  public void test7()  throws Throwable  {
      BTRawMessage bTRawMessage0 = new BTRawMessage((DirectByteBuffer) null);
      BTRawMessage bTRawMessage1 = (BTRawMessage)BTMessageFactory.createBTRawMessage((Message) bTRawMessage0);
      assertEquals(1, bTRawMessage1.getType());
  }

  @Test
  public void test8()  throws Throwable  {
      BTSuggestPiece bTSuggestPiece0 = new BTSuggestPiece(155, (byte) (-13));
      RawMessageImpl rawMessageImpl0 = (RawMessageImpl)BTMessageFactory.createBTRawMessage((Message) bTSuggestPiece0);
      assertEquals(0, rawMessageImpl0.getType());
  }
}
