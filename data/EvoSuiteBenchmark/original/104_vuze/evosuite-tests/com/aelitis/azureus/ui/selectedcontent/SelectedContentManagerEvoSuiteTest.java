/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.ui.selectedcontent;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.ui.common.table.TableView;
import com.aelitis.azureus.ui.selectedcontent.ISelectedContent;
import com.aelitis.azureus.ui.selectedcontent.SelectedContent;
import com.aelitis.azureus.ui.selectedcontent.SelectedContentListener;
import com.aelitis.azureus.ui.selectedcontent.SelectedContentManager;
import com.aelitis.azureus.ui.selectedcontent.SelectedContentV3;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.gudy.azureus2.core3.download.DownloadManager;
import org.gudy.azureus2.core3.tracker.host.TRHostTorrent;
import org.gudy.azureus2.ui.swt.views.MyTrackerView;
import org.gudy.azureus2.ui.swt.views.table.TableViewSWT;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SelectedContentManagerEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      String string0 = SelectedContentManager.getCurrentySelectedViewID();
      assertNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          ISelectedContent[] iSelectedContentArray0 = SelectedContentManager.getCurrentlySelectedContent();
          MyTrackerView myTrackerView0 = new MyTrackerView();
          TableViewSWT<TRHostTorrent> tableViewSWT0 = myTrackerView0.initYourTableView();
          SelectedContentManager.changeCurrentlySelectedContent("U+", iSelectedContentArray0, (TableView) tableViewSWT0);
          assertEquals("MyTracker", tableViewSWT0.getTableID());
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test2()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          SelectedContentManager.clearCurrentlySelectedContent();
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test3()  throws Throwable  {
      TableView<Object> tableView0 = SelectedContentManager.getCurrentlySelectedTableView();
      assertNull(tableView0);
  }

  @Test
  public void test4()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          ISelectedContent[] iSelectedContentArray0 = new ISelectedContent[5];
          SelectedContentV3 selectedContentV3_0 = new SelectedContentV3();
          SelectedContentManager selectedContentManager0 = new SelectedContentManager();
          SelectedContentManager.getDMSFromSelectedContent();
          iSelectedContentArray0[0] = (ISelectedContent) selectedContentV3_0;
          SelectedContentManager.clearCurrentlySelectedContent();
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test5()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          ISelectedContent[] iSelectedContentArray0 = SelectedContentManager.getCurrentlySelectedContent();
          SelectedContentManager.changeCurrentlySelectedContent("", iSelectedContentArray0, (TableView) null);
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test6()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          ISelectedContent[] iSelectedContentArray0 = SelectedContentManager.getCurrentlySelectedContent();
          ISelectedContent[] iSelectedContentArray1 = SelectedContentManager.getCurrentlySelectedContent();
          SelectedContentManager.changeCurrentlySelectedContent("", iSelectedContentArray1, (TableView) null);
          assertSame(iSelectedContentArray1, iSelectedContentArray0);
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test7()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          ISelectedContent[] iSelectedContentArray0 = new ISelectedContent[3];
          SelectedContent selectedContent0 = new SelectedContent();
          iSelectedContentArray0[1] = (ISelectedContent) selectedContent0;
          SelectedContent selectedContent1 = new SelectedContent("", "");
          iSelectedContentArray0[2] = (ISelectedContent) selectedContent1;
          SelectedContentManager.changeCurrentlySelectedContent("'V7M}!L0", iSelectedContentArray0);
          SelectedContentManager.triggerSelectedContentListeners();
          // Undeclared exception!
          try {
            SelectedContentManager.addCurrentlySelectedContentListener((SelectedContentListener) null);
            fail("Expecting exception: NullPointerException");
          } catch(NullPointerException e) {
          }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test8()  throws Throwable  {
      ISelectedContent[] iSelectedContentArray0 = new ISelectedContent[1];
      SelectedContentV3 selectedContentV3_0 = new SelectedContentV3();
      iSelectedContentArray0[0] = (ISelectedContent) selectedContentV3_0;
      SelectedContentManager.convertSelectedContentToObject(iSelectedContentArray0);
      DownloadManager[] downloadManagerArray0 = SelectedContentManager.getDMSFromSelectedContent();
      assertNull(downloadManagerArray0);
  }

  @Test
  public void test9()  throws Throwable  {
      // Undeclared exception!
      Object object0 = null;
      try {
        object0 = SelectedContentManager.convertSelectedContentToObject((ISelectedContent[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      ISelectedContent[] iSelectedContentArray0 = new ISelectedContent[2];
      SelectedContent selectedContent0 = new SelectedContent("", "");
      iSelectedContentArray0[0] = (ISelectedContent) selectedContent0;
      iSelectedContentArray0[1] = (ISelectedContent) selectedContent0;
      Object object0 = SelectedContentManager.convertSelectedContentToObject(iSelectedContentArray0);
      assertNotNull(object0);
  }
}
