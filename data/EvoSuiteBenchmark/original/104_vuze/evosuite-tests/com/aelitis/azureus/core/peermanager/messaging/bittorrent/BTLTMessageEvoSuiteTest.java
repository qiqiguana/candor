/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.peermanager.messaging.bittorrent;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.peermanager.messaging.Message;
import com.aelitis.azureus.core.peermanager.messaging.MessageException;
import com.aelitis.azureus.core.peermanager.messaging.azureus.AZMetaData;
import com.aelitis.azureus.core.peermanager.messaging.azureus.AZRequestHint;
import com.aelitis.azureus.core.peermanager.messaging.azureus.AZStatRequest;
import com.aelitis.azureus.core.peermanager.messaging.bittorrent.BTLTMessage;
import java.nio.ByteBuffer;
import java.util.Map;
import org.gudy.azureus2.core3.util.DirectByteBuffer;
import org.gudy.azureus2.core3.util.DirectByteBufferPool;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BTLTMessageEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte)124, 6);
      ByteBuffer byteBuffer0 = directByteBuffer0.getBuffer((byte)124);
      AZMetaData aZMetaData0 = new AZMetaData(4096, byteBuffer0, 893, (byte)124);
      BTLTMessage bTLTMessage0 = new BTLTMessage((Message) aZMetaData0, (byte)124);
      try {
        bTLTMessage0.deserialize(directByteBuffer0, (byte) (-118));
        fail("Expecting exception: MessageException");
      } catch(MessageException e) {
        /*
         * BTLTMessage cannot be used for message deserialization!
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      AZStatRequest aZStatRequest0 = new AZStatRequest((Map) null, (byte)55);
      BTLTMessage bTLTMessage0 = new BTLTMessage((Message) aZStatRequest0, (byte)55);
      String string0 = bTLTMessage0.getID();
      assertEquals((byte)55, bTLTMessage0.extension_id);
      assertEquals("BT_LT_EXT_MESSAGE", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      AZRequestHint aZRequestHint0 = new AZRequestHint(0, 0, 0, 0, (byte)0);
      BTLTMessage bTLTMessage0 = new BTLTMessage((Message) aZRequestHint0, (byte)0);
      String string0 = bTLTMessage0.getFeatureID();
      assertNotNull(string0);
      assertEquals((byte)0, bTLTMessage0.extension_id);
  }

  @Test
  public void test3()  throws Throwable  {
      BTLTMessage bTLTMessage0 = new BTLTMessage((Message) null, (byte)64);
      // Undeclared exception!
      try {
        bTLTMessage0.getDescription();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      AZRequestHint aZRequestHint0 = new AZRequestHint((-697), 906, 1195, (-66), (byte)7);
      BTLTMessage bTLTMessage0 = new BTLTMessage((Message) aZRequestHint0, (byte)47);
      byte[] byteArray0 = bTLTMessage0.getIDBytes();
      assertEquals((byte)47, bTLTMessage0.extension_id);
      assertNotNull(byteArray0);
  }

  @Test
  public void test5()  throws Throwable  {
      AZRequestHint aZRequestHint0 = new AZRequestHint(0, 0, 0, 0, (byte)0);
      BTLTMessage bTLTMessage0 = new BTLTMessage((Message) aZRequestHint0, (byte)0);
      int int0 = bTLTMessage0.getFeatureSubID();
      assertEquals((byte)0, bTLTMessage0.extension_id);
      assertEquals(3, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      AZRequestHint aZRequestHint0 = new AZRequestHint(0, 0, 0, 0, (byte)0);
      BTLTMessage bTLTMessage0 = new BTLTMessage((Message) aZRequestHint0, (byte)0);
      byte byte0 = bTLTMessage0.getVersion();
      assertEquals((byte)0, byte0);
      assertEquals((byte)0, bTLTMessage0.extension_id);
  }

  @Test
  public void test7()  throws Throwable  {
      AZRequestHint aZRequestHint0 = new AZRequestHint((-697), 906, 1195, (-66), (byte)7);
      BTLTMessage bTLTMessage0 = new BTLTMessage((Message) aZRequestHint0, (byte)47);
      int int0 = bTLTMessage0.getType();
      assertEquals((byte)47, bTLTMessage0.extension_id);
      assertEquals(0, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      BTLTMessage bTLTMessage0 = new BTLTMessage((Message) null, (byte) (-59));
      bTLTMessage0.destroy();
      assertEquals((byte) (-59), bTLTMessage0.extension_id);
  }

  @Test
  public void test9()  throws Throwable  {
      AZStatRequest aZStatRequest0 = new AZStatRequest((Map) null, (byte)55);
      BTLTMessage bTLTMessage0 = new BTLTMessage((Message) aZStatRequest0, (byte)55);
      bTLTMessage0.destroy();
      assertEquals((byte)55, bTLTMessage0.extension_id);
  }

  @Test
  public void test10()  throws Throwable  {
      AZStatRequest aZStatRequest0 = new AZStatRequest((Map) null, (byte)55);
      BTLTMessage bTLTMessage0 = new BTLTMessage((Message) aZStatRequest0, (byte)55);
      DirectByteBuffer[] directByteBufferArray0 = bTLTMessage0.getData();
      assertNotNull(directByteBufferArray0);
      
      bTLTMessage0.destroy();
      assertEquals((byte)55, bTLTMessage0.extension_id);
  }

  @Test
  public void test11()  throws Throwable  {
      AZStatRequest aZStatRequest0 = new AZStatRequest((Map) null, (byte)55);
      BTLTMessage bTLTMessage0 = new BTLTMessage((Message) aZStatRequest0, (byte)55);
      DirectByteBuffer[] directByteBufferArray0 = bTLTMessage0.getData();
      assertNotNull(directByteBufferArray0);
      
      bTLTMessage0.getData();
      assertEquals((byte)55, bTLTMessage0.extension_id);
  }
}
