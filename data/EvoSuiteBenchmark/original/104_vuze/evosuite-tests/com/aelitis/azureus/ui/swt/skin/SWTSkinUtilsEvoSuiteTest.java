/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.ui.swt.skin;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.ui.swt.skin.SWTSkin;
import com.aelitis.azureus.ui.swt.skin.SWTSkinObject;
import com.aelitis.azureus.ui.swt.skin.SWTSkinObjectBrowser;
import com.aelitis.azureus.ui.swt.skin.SWTSkinUtils;
import org.eclipse.swt.widgets.Widget;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SWTSkinUtilsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SWTSkinUtils.MouseEnterExitListener sWTSkinUtils_MouseEnterExitListener0 = null;
      try {
        sWTSkinUtils_MouseEnterExitListener0 = new SWTSkinUtils.MouseEnterExitListener((Widget) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try {
        SWTSkinUtils.setVisibility((SWTSkin) null, (String) null, (String) null, false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      SWTSkinUtils sWTSkinUtils0 = new SWTSkinUtils();
      assertNotNull(sWTSkinUtils0);
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = SWTSkinUtils.getAlignment("=hMik`|", 1);
      assertEquals(1, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = SWTSkinUtils.getAlignment((String) null, 1095);
      assertEquals(1095, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = SWTSkinUtils.getTileMode((String) null);
      assertEquals(0, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = SWTSkinUtils.getTileMode("tA77");
      assertEquals(0, int0);
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = SWTSkinUtils.getTileMode("");
      assertEquals(0, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      SWTSkinObjectBrowser sWTSkinObjectBrowser0 = SWTSkinUtils.findBrowserSO((SWTSkinObject) null);
      assertNull(sWTSkinObjectBrowser0);
  }
}
