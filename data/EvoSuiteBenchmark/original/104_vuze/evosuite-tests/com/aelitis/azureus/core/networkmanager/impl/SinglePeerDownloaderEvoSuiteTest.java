/*
 * This file was automatically generated by EvoSuite
 */

package com.aelitis.azureus.core.networkmanager.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.core.networkmanager.NetworkConnectionBase;
import com.aelitis.azureus.core.networkmanager.RateHandler;
import com.aelitis.azureus.core.networkmanager.impl.SinglePeerDownloader;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SinglePeerDownloaderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SinglePeerDownloader singlePeerDownloader0 = new SinglePeerDownloader((NetworkConnectionBase) null, (RateHandler) null);
      boolean boolean0 = singlePeerDownloader0.getPriorityBoost();
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      SinglePeerDownloader singlePeerDownloader0 = new SinglePeerDownloader((NetworkConnectionBase) null, (RateHandler) null);
      // Undeclared exception!
      try {
        singlePeerDownloader0.getString();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      SinglePeerDownloader singlePeerDownloader0 = new SinglePeerDownloader((NetworkConnectionBase) null, (RateHandler) null);
      int int0 = singlePeerDownloader0.getConnectionCount();
      assertEquals(1, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      SinglePeerDownloader singlePeerDownloader0 = new SinglePeerDownloader((NetworkConnectionBase) null, (RateHandler) null);
      RateHandler rateHandler0 = singlePeerDownloader0.getRateHandler();
      assertNull(rateHandler0);
  }

  @Test
  public void test4()  throws Throwable  {
      SinglePeerDownloader singlePeerDownloader0 = new SinglePeerDownloader((NetworkConnectionBase) null, (RateHandler) null);
      long long0 = singlePeerDownloader0.getBytesReadyToWrite();
      assertEquals(0L, long0);
  }

  @Test
  public void test5()  throws Throwable  {
      SinglePeerDownloader singlePeerDownloader0 = new SinglePeerDownloader((NetworkConnectionBase) null, (RateHandler) null);
      int int0 = singlePeerDownloader0.getPriority();
      assertEquals(0, int0);
  }
}
