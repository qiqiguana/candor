/*
 * This file was automatically generated by EvoSuite
 */

package org.pf.file;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.File;
import org.junit.BeforeClass;
import org.pf.file.FileFinder;

@RunWith(EvoSuiteRunner.class)
public class FileFinderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FileFinder fileFinder0 = new FileFinder();
      boolean boolean0 = fileFinder0.handleFile((File) null);
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      File[] fileArray0 = FileFinder.findFiles("RDQqv.|", "RDQqv.|", true);
      assertNotNull(fileArray0);
  }

  @Test
  public void test2()  throws Throwable  {
      FileFinder fileFinder0 = new FileFinder();
      boolean boolean0 = fileFinder0.handleException((Exception) null, (File) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      FileFinder fileFinder0 = new FileFinder();
      boolean boolean0 = fileFinder0.directoryStart((File) null, 1210);
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      FileFinder fileFinder0 = new FileFinder();
      File file0 = new File("", "");
      boolean boolean0 = fileFinder0.directoryEnd(file0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try {
        FileFinder.findFiles("+UTDe9@'", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * FileFinder.findFiles(): pattern is null
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      File file0 = FileFinder.findFile("fp-ile:");
      assertNull(file0);
  }

  @Test
  public void test7()  throws Throwable  {
      File file0 = FileFinder.findFile("");
      assertEquals("", file0.getPath());
  }

  @Test
  public void test8()  throws Throwable  {
      // Undeclared exception!
      try {
        FileFinder.findFiles((String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * FileFinder.findFiles(): dir is null
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      File[] fileArray0 = FileFinder.findFiles("", "", true, '{');
      assertNotNull(fileArray0);
  }
}
