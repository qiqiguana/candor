/*
 * This file was automatically generated by EvoSuite
 */

package org.pf.text;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.pf.text.StringExaminer;

@RunWith(EvoSuiteRunner.class)
public class StringExaminerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      StringExaminer stringExaminer0 = new StringExaminer("");
      String string0 = stringExaminer0.upToEnd();
      assertEquals("", stringExaminer0.upToEnd());
      assertEquals(false, stringExaminer0.ignoreCase());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      StringExaminer stringExaminer0 = new StringExaminer("5>O", true);
      boolean boolean0 = stringExaminer0.skipAfter("5>O");
      assertEquals(true, stringExaminer0.ignoreCase());
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      StringExaminer stringExaminer0 = new StringExaminer("'m?}||ml4B&&`Sf}4$", false);
      assertEquals("'m?}||ml4B&&`Sf}4$", stringExaminer0.upToEnd());
      
      String string0 = stringExaminer0.peekUpToEnd();
      assertEquals("", stringExaminer0.peekUpToEnd());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      StringExaminer stringExaminer0 = new StringExaminer("");
      stringExaminer0.skipBefore((String) null);
      assertEquals(false, stringExaminer0.ignoreCase());
  }

  @Test
  public void test4()  throws Throwable  {
      StringExaminer stringExaminer0 = new StringExaminer("");
      boolean boolean0 = stringExaminer0.skipBefore("");
      assertEquals(false, boolean0);
      assertEquals(false, stringExaminer0.ignoreCase());
  }

  @Test
  public void test5()  throws Throwable  {
      StringExaminer stringExaminer0 = new StringExaminer("+QsUH?LJ+$U*^^F7");
      stringExaminer0.nextNoneWhitespaceChar();
      boolean boolean0 = stringExaminer0.skipBefore("+QsUH?LJ+$U*^^F7");
      assertEquals("", stringExaminer0.upToEnd());
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      StringExaminer stringExaminer0 = new StringExaminer("'m?}||ml4B&&`Sf}4$", false);
      boolean boolean0 = stringExaminer0.skipBefore("'m?}||ml4B&&`Sf}4$");
      assertEquals("", stringExaminer0.peekUpToEnd());
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      StringExaminer stringExaminer0 = new StringExaminer(".", true);
      boolean boolean0 = stringExaminer0.charsAreEqual('!', '3');
      assertEquals(true, stringExaminer0.ignoreCase());
      assertEquals(false, boolean0);
  }
}
