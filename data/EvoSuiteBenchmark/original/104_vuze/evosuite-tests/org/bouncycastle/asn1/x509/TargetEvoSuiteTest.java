/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1.x509;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Hashtable;
import java.util.Vector;
import org.bouncycastle.asn1.DEREncodable;
import org.bouncycastle.asn1.DERObject;
import org.bouncycastle.asn1.DERObjectIdentifier;
import org.bouncycastle.asn1.DERTaggedObject;
import org.bouncycastle.asn1.x509.GeneralName;
import org.bouncycastle.asn1.x509.Target;
import org.bouncycastle.asn1.x509.X509Name;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TargetEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Target target0 = new Target(0, (GeneralName) null);
      GeneralName generalName0 = target0.getTargetName();
      assertNull(generalName0);
  }

  @Test
  public void test1()  throws Throwable  {
      Vector<Target> vector0 = new Vector<Target>();
      Hashtable<Object, Object> hashtable0 = X509Name.RFC2253Symbols;
      X509Name x509Name0 = new X509Name((Vector) vector0, (Hashtable) hashtable0);
      GeneralName generalName0 = new GeneralName(x509Name0);
      Target target0 = new Target(0, generalName0);
      GeneralName generalName1 = target0.getTargetGroup();
      assertNull(generalName1);
  }

  @Test
  public void test2()  throws Throwable  {
      DERObjectIdentifier dERObjectIdentifier0 = X509Name.EmailAddress;
      DERTaggedObject dERTaggedObject0 = new DERTaggedObject(1, (DEREncodable) dERObjectIdentifier0);
      // Undeclared exception!
      try {
        Target.getInstance((Object) dERTaggedObject0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * org.bouncycastle.asn1.DERObjectIdentifier cannot be cast to org.bouncycastle.asn1.ASN1TaggedObject
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Target target0 = new Target(0, (GeneralName) null);
      Target target1 = Target.getInstance((Object) target0);
      assertSame(target1, target0);
  }

  @Test
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try {
        Target.getInstance((Object) "BER");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * unknown object in factory: class java.lang.String
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      GeneralName generalName0 = new GeneralName((DERObject) null, 1953);
      Target target0 = null;
      try {
        target0 = new Target(1953, generalName0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * unknown tag: 1953
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Target target0 = new Target(0, (GeneralName) null);
      DERTaggedObject dERTaggedObject0 = (DERTaggedObject)target0.getDERObject();
      assertEquals(true, dERTaggedObject0.isExplicit());
      assertEquals(1, dERTaggedObject0.getTagNo());
  }

  @Test
  public void test7()  throws Throwable  {
      Vector<Target> vector0 = new Vector<Target>();
      Hashtable<Object, Object> hashtable0 = X509Name.RFC2253Symbols;
      X509Name x509Name0 = new X509Name((Vector) vector0, (Hashtable) hashtable0);
      GeneralName generalName0 = new GeneralName(x509Name0);
      Target target0 = new Target(0, generalName0);
      DERTaggedObject dERTaggedObject0 = (DERTaggedObject)target0.toASN1Object();
      assertEquals("[0]4: ", dERTaggedObject0.toString());
  }
}
