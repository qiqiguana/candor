/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1.x509;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.bouncycastle.asn1.ASN1Encodable;
import org.bouncycastle.asn1.ASN1Sequence;
import org.bouncycastle.asn1.ASN1Set;
import org.bouncycastle.asn1.BERSequence;
import org.bouncycastle.asn1.BERSet;
import org.bouncycastle.asn1.DERConstructedSet;
import org.bouncycastle.asn1.DEREncodable;
import org.bouncycastle.asn1.DEREncodableVector;
import org.bouncycastle.asn1.DERObjectIdentifier;
import org.bouncycastle.asn1.DERSequence;
import org.bouncycastle.asn1.x509.Attribute;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AttributeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DEREncodableVector dEREncodableVector0 = new DEREncodableVector();
      DERConstructedSet dERConstructedSet0 = new DERConstructedSet(dEREncodableVector0);
      Attribute attribute0 = new Attribute((DERObjectIdentifier) null, (ASN1Set) dERConstructedSet0);
      DERConstructedSet dERConstructedSet1 = (DERConstructedSet)attribute0.getAttrValues();
      assertEquals(0, dERConstructedSet1.size());
  }

  @Test
  public void test1()  throws Throwable  {
      BERSet bERSet0 = new BERSet((DEREncodable) null);
      Attribute attribute0 = new Attribute((DERObjectIdentifier) null, (ASN1Set) bERSet0);
      DERSequence dERSequence0 = (DERSequence)attribute0.getDERObject();
      assertEquals("[null, [null]]", dERSequence0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      BERSet bERSet0 = new BERSet();
      Attribute attribute0 = new Attribute((DERObjectIdentifier) null, (ASN1Set) bERSet0);
      DERObjectIdentifier dERObjectIdentifier0 = attribute0.getAttrType();
      assertNull(dERObjectIdentifier0);
  }

  @Test
  public void test3()  throws Throwable  {
      Attribute attribute0 = Attribute.getInstance((Object) null);
      assertNull(attribute0);
  }

  @Test
  public void test4()  throws Throwable  {
      BERSet bERSet0 = new BERSet((DEREncodable) null);
      Attribute attribute0 = new Attribute((DERObjectIdentifier) null, (ASN1Set) bERSet0);
      Attribute attribute1 = Attribute.getInstance((Object) attribute0);
      assertSame(attribute0, attribute1);
  }

  @Test
  public void test5()  throws Throwable  {
      DEREncodableVector dEREncodableVector0 = new DEREncodableVector();
      BERSequence bERSequence0 = new BERSequence(dEREncodableVector0);
      // Undeclared exception!
      try {
        Attribute.getInstance((Object) bERSequence0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Bad sequence size: 0
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try {
        Attribute.getInstance((Object) "BER");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * unknown object in factory
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      ASN1Encodable[] aSN1EncodableArray0 = new ASN1Encodable[2];
      DERSequence dERSequence0 = new DERSequence(aSN1EncodableArray0);
      Attribute attribute0 = new Attribute((ASN1Sequence) dERSequence0);
      assertNotNull(attribute0);
  }
}
