/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.math.BigInteger;
import java.util.Date;
import org.bouncycastle.asn1.ASN1Object;
import org.bouncycastle.asn1.ASN1SequenceParser;
import org.bouncycastle.asn1.ASN1SetParser;
import org.bouncycastle.asn1.BERConstructedOctetString;
import org.bouncycastle.asn1.BERConstructedSequence;
import org.bouncycastle.asn1.BERSequence;
import org.bouncycastle.asn1.BERSet;
import org.bouncycastle.asn1.BERTaggedObject;
import org.bouncycastle.asn1.DERBMPString;
import org.bouncycastle.asn1.DERBoolean;
import org.bouncycastle.asn1.DERConstructedSequence;
import org.bouncycastle.asn1.DERConstructedSet;
import org.bouncycastle.asn1.DEREncodable;
import org.bouncycastle.asn1.DEREncodableVector;
import org.bouncycastle.asn1.DERGeneralString;
import org.bouncycastle.asn1.DERIA5String;
import org.bouncycastle.asn1.DERInteger;
import org.bouncycastle.asn1.DERObject;
import org.bouncycastle.asn1.DERPrintableString;
import org.bouncycastle.asn1.DERSequence;
import org.bouncycastle.asn1.DERSet;
import org.bouncycastle.asn1.DERT61String;
import org.bouncycastle.asn1.DERTaggedObject;
import org.bouncycastle.asn1.DERUTCTime;
import org.bouncycastle.asn1.DERUnknownTag;
import org.bouncycastle.asn1.DERVisibleString;
import org.bouncycastle.asn1.util.ASN1Dump;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ASN1DumpEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ASN1Dump aSN1Dump0 = new ASN1Dump();
      assertNotNull(aSN1Dump0);
  }

  @Test
  public void test1()  throws Throwable  {
      DERBMPString dERBMPString0 = new DERBMPString("CjNKkgI0`5{Z");
      String string0 = ASN1Dump._dumpAsString("CjNKkgI0`5{Z", (DERObject) dERBMPString0);
      assertEquals("CjNKkgI0`5{ZBMPString(CjNKkgI0`5{Z) \n", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      BERSequence bERSequence0 = new BERSequence((DEREncodable) null);
      String string0 = ASN1Dump._dumpAsString("unknown object type DER", (DERObject) bERSequence0);
      assertEquals("unknown object type DERDER Sequence\nunknown object type DER    NULL\n", string0);
      assertNotNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      DEREncodableVector dEREncodableVector0 = new DEREncodableVector();
      BERConstructedSequence bERConstructedSequence0 = new BERConstructedSequence();
      BERSequence bERSequence0 = new BERSequence((DEREncodable) bERConstructedSequence0);
      ASN1SequenceParser aSN1SequenceParser0 = bERSequence0.parser();
      dEREncodableVector0.add((DEREncodable) aSN1SequenceParser0);
      BERSet bERSet0 = new BERSet(dEREncodableVector0);
      String string0 = ASN1Dump.dumpAsString((Object) bERSet0);
      assertEquals("BER Set\n    DER Sequence\n        BER ConstructedSequence\n", string0);
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      DERConstructedSequence dERConstructedSequence0 = new DERConstructedSequence();
      BERTaggedObject bERTaggedObject0 = new BERTaggedObject(true, 10, (DEREncodable) dERConstructedSequence0);
      String string0 = ASN1Dump._dumpAsString("U", (DERObject) bERTaggedObject0);
      assertNotNull(string0);
      assertEquals("UBER Tagged [10]\nU    DER ConstructedSequence\n", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-104);
      DERTaggedObject dERTaggedObject0 = (DERTaggedObject)ASN1Object.fromByteArray(byteArray0);
      String string0 = ASN1Dump.dumpAsString((Object) dERTaggedObject0);
      assertEquals("Tagged [24] IMPLICIT \n    NULL\n", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      DERBoolean dERBoolean0 = new DERBoolean(false);
      DERConstructedSet dERConstructedSet0 = new DERConstructedSet((DEREncodable) dERBoolean0);
      String string0 = ASN1Dump._dumpAsString("CjNKkgI0`5{ZBMPString(CjNKkgI0`5{Z) \n", (DERObject) dERConstructedSet0);
      assertEquals("CjNKkgI0`5{ZBMPString(CjNKkgI0`5{Z) \nConstructedSet\nCjNKkgI0`5{ZBMPString(CjNKkgI0`5{Z) \n    Boolean(false)\n", string0);
  }

  @Test
  public void test7()  throws Throwable  {
      BERSet bERSet0 = new BERSet((DEREncodable) null);
      String string0 = ASN1Dump.dumpAsString((Object) bERSet0);
      assertEquals("BER Set\n    NULL\n", string0);
  }

  @Test
  public void test8()  throws Throwable  {
      DEREncodableVector dEREncodableVector0 = new DEREncodableVector();
      byte[] byteArray0 = new byte[3];
      DERGeneralString dERGeneralString0 = new DERGeneralString(byteArray0);
      dEREncodableVector0.add((DEREncodable) dERGeneralString0);
      BERSet bERSet0 = new BERSet(dEREncodableVector0);
      String string0 = ASN1Dump.dumpAsString((Object) bERSet0);
      assertEquals("BER Set\n    \u0000\u0000\u0000\n", string0);
  }

  @Test
  public void test9()  throws Throwable  {
      DERSet dERSet0 = new DERSet((DEREncodable) null);
      String string0 = ASN1Dump._dumpAsString("", (DERObject) dERSet0);
      assertEquals("DER Set\n    NULL\n", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      DERGeneralString dERGeneralString0 = new DERGeneralString(byteArray0);
      DERSet dERSet0 = new DERSet((DEREncodable) dERGeneralString0);
      String string0 = ASN1Dump.dumpAsString((Object) dERSet0);
      assertEquals("DER Set\n    \u0000\u0000\u0000\n", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      DERInteger dERInteger0 = new DERInteger(bigInteger0);
      String string0 = ASN1Dump._dumpAsString("", (DERObject) dERInteger0);
      assertEquals("Integer(0)\n", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      BERConstructedOctetString bERConstructedOctetString0 = new BERConstructedOctetString(byteArray0);
      DERSequence dERSequence0 = new DERSequence((DEREncodable) bERConstructedOctetString0);
      BERSequence bERSequence0 = new BERSequence((DEREncodable) dERSequence0);
      String string0 = ASN1Dump.dumpAsString((Object) bERSequence0);
      assertNotNull(string0);
      assertEquals("DER Sequence\n    DER Sequence\n        #000000[3] \n", string0);
  }

  @Test
  public void test13()  throws Throwable  {
      DERIA5String dERIA5String0 = new DERIA5String("", true);
      String string0 = ASN1Dump.dumpAsString((Object) dERIA5String0);
      assertEquals("IA5String() \n", string0);
  }

  @Test
  public void test14()  throws Throwable  {
      DERPrintableString dERPrintableString0 = new DERPrintableString("");
      String string0 = ASN1Dump._dumpAsString("", (DERObject) dERPrintableString0);
      assertEquals("PrintableString() \n", string0);
  }

  @Test
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      DERVisibleString dERVisibleString0 = new DERVisibleString(byteArray0);
      String string0 = ASN1Dump._dumpAsString("U", (DERObject) dERVisibleString0);
      assertEquals("UVisibleString(\u0000\u0000\u0000\u0000) \n", string0);
  }

  @Test
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      DERT61String dERT61String0 = new DERT61String(byteArray0);
      String string0 = ASN1Dump._dumpAsString("Tagged [", (DERObject) dERT61String0);
      assertEquals("Tagged [T61String(\u0000\u0000\u0000\u0000\u0000) \n", string0);
  }

  @Test
  public void test17()  throws Throwable  {
      Date date0 = new Date();
      DERUTCTime dERUTCTime0 = new DERUTCTime(date0);
      ASN1Dump.dumpAsString((Object) dERUTCTime0);
      assertEquals(1372728193425L, date0.getTime());
  }

  @Test
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      DERUnknownTag dERUnknownTag0 = new DERUnknownTag((-1), byteArray0);
      String string0 = ASN1Dump._dumpAsString("xJwp^c;.", (DERObject) dERUnknownTag0);
      assertEquals("xJwp^c;.Unknown -1 0000\n", string0);
  }

  @Test
  public void test19()  throws Throwable  {
      String string0 = ASN1Dump.dumpAsString((Object) "DER");
      assertEquals("unknown object type DER", string0);
      assertNotNull(string0);
  }

  @Test
  public void test20()  throws Throwable  {
      DERConstructedSet dERConstructedSet0 = new DERConstructedSet();
      ASN1SetParser aSN1SetParser0 = dERConstructedSet0.parser();
      String string0 = ASN1Dump.dumpAsString((Object) aSN1SetParser0);
      assertEquals("ConstructedSet\n", string0);
  }
}
