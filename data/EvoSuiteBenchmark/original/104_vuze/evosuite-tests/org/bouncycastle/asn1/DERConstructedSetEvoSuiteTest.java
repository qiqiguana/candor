/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import org.bouncycastle.asn1.DERApplicationSpecific;
import org.bouncycastle.asn1.DERConstructedSet;
import org.bouncycastle.asn1.DEREncodable;
import org.bouncycastle.asn1.DEREncodableVector;
import org.bouncycastle.asn1.DERUTCTime;
import org.bouncycastle.asn1.DERUnknownTag;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DERConstructedSetEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      DERUnknownTag dERUnknownTag0 = new DERUnknownTag(0, byteArray0);
      DERConstructedSet dERConstructedSet0 = new DERConstructedSet((DEREncodable) dERUnknownTag0);
      int int0 = dERConstructedSet0.getSize();
      assertEquals(1, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      DERConstructedSet dERConstructedSet0 = new DERConstructedSet();
      DERApplicationSpecific dERApplicationSpecific0 = null;
      try {
        dERApplicationSpecific0 = new DERApplicationSpecific(false, 582, (DEREncodable) dERConstructedSet0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * unsupported tag number
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      DERUnknownTag dERUnknownTag0 = new DERUnknownTag(0, byteArray0);
      DERConstructedSet dERConstructedSet0 = new DERConstructedSet((DEREncodable) dERUnknownTag0);
      DEREncodableVector dEREncodableVector0 = new DEREncodableVector();
      dEREncodableVector0.add((DEREncodable) dERConstructedSet0);
      assertEquals(1, dERConstructedSet0.size());
      
      DERConstructedSet dERConstructedSet1 = new DERConstructedSet(dEREncodableVector0);
      assertNotNull(dERConstructedSet1);
      assertEquals(1, dERConstructedSet1.getSize());
  }

  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      DERUTCTime dERUTCTime0 = new DERUTCTime(byteArray0);
      DERConstructedSet dERConstructedSet0 = new DERConstructedSet((DEREncodable) dERUTCTime0);
      byte[] byteArray1 = dERConstructedSet0.getDEREncoded();
      assertNotNull(byteArray1);
      assertEquals(1, dERConstructedSet0.size());
      assertEquals(1, dERConstructedSet0.getSize());
  }
}
