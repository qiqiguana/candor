/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.bouncycastle.asn1.ASN1TaggedObject;
import org.bouncycastle.asn1.BERConstructedOctetString;
import org.bouncycastle.asn1.BERTaggedObject;
import org.bouncycastle.asn1.DERBMPString;
import org.bouncycastle.asn1.DERBitString;
import org.bouncycastle.asn1.DEREncodable;
import org.bouncycastle.asn1.DERObject;
import org.bouncycastle.asn1.DERTaggedObject;
import org.bouncycastle.asn1.DERVisibleString;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DERBitStringEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      DERVisibleString dERVisibleString0 = new DERVisibleString(byteArray0);
      DERBitString dERBitString0 = new DERBitString((DEREncodable) dERVisibleString0);
      DERBitString dERBitString1 = new DERBitString(byteArray0, (-1536));
      boolean boolean0 = dERBitString0.equals((Object) dERBitString1);
      assertEquals(-1536, dERBitString1.getPadBits());
      assertEquals(false, boolean0);
      assertEquals("#030C001A09000000000000000000", dERBitString0.getString());
  }

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      DERBitString dERBitString0 = new DERBitString(byteArray0, (int) (byte)0);
      int int0 = dERBitString0.intValue();
      assertEquals(0, int0);
      assertEquals("#0306000000000000", dERBitString0.getString());
  }

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      DERBitString dERBitString0 = new DERBitString(byteArray0, (int) (byte)54);
      BERTaggedObject bERTaggedObject0 = new BERTaggedObject(0, (DEREncodable) dERBitString0);
      DERBitString dERBitString1 = DERBitString.getInstance((ASN1TaggedObject) bERTaggedObject0, true);
      assertEquals("#0309360000000000000000", dERBitString1.toString());
      assertNotNull(dERBitString1);
  }

  @Test
  public void test3()  throws Throwable  {
      DERBitString dERBitString0 = new DERBitString((byte)1, 0);
      int int0 = dERBitString0.intValue();
      assertEquals(1, int0);
      assertEquals("#03020001", dERBitString0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      DERBitString dERBitString0 = new DERBitString(byteArray0);
      String string0 = dERBitString0.toString();
      assertNotNull(string0);
      assertEquals("#030A00000000000000000000", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = DERBitString.getPadBits(0);
      assertEquals(7, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = DERBitString.getPadBits(1988);
      assertEquals(0, int0);
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = DERBitString.getPadBits(55);
      assertEquals(0, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      byte[] byteArray0 = DERBitString.getBytes(0);
      assertNotNull(byteArray0);
  }

  @Test
  public void test9()  throws Throwable  {
      byte[] byteArray0 = DERBitString.getBytes((int) (byte) (-55));
      assertNotNull(byteArray0);
  }

  @Test
  public void test10()  throws Throwable  {
      DERBitString dERBitString0 = DERBitString.getInstance((Object) null);
      assertNull(dERBitString0);
  }

  @Test
  public void test11()  throws Throwable  {
      DERTaggedObject dERTaggedObject0 = new DERTaggedObject(54);
      // Undeclared exception!
      try {
        DERBitString.getInstance((Object) dERTaggedObject0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * illegal object in getInstance: org.bouncycastle.asn1.DERSequence
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BERConstructedOctetString bERConstructedOctetString0 = new BERConstructedOctetString(byteArray0);
      DERBitString dERBitString0 = DERBitString.getInstance((Object) bERConstructedOctetString0);
      assertNotNull(dERBitString0);
      
      int int0 = dERBitString0.hashCode();
      assertEquals("#03080000000000000000", dERBitString0.getString());
      assertEquals(0, int0);
  }

  @Test
  public void test13()  throws Throwable  {
      DERBitString dERBitString0 = new DERBitString((byte)1, 0);
      assertNotNull(dERBitString0);
      
      boolean boolean0 = dERBitString0.asn1Equals((DERObject) dERBitString0);
      assertEquals(true, boolean0);
      assertEquals("#03020001", dERBitString0.getString());
  }

  @Test
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      DERBitString dERBitString0 = new DERBitString(byteArray0);
      DERBMPString dERBMPString0 = new DERBMPString("");
      boolean boolean0 = dERBitString0.asn1Equals((DERObject) dERBMPString0);
      assertEquals(false, boolean0);
      assertEquals("#030A00000000000000000000", dERBitString0.getString());
  }

  @Test
  public void test15()  throws Throwable  {
      DERBitString dERBitString0 = new DERBitString((byte)124, 0);
      DERBitString dERBitString1 = new DERBitString((byte) (-1), (byte) (-1));
      boolean boolean0 = dERBitString1.asn1Equals((DERObject) dERBitString0);
      assertEquals(false, boolean0);
      assertEquals("#0302FFFF", dERBitString1.toString());
  }

  @Test
  public void test16()  throws Throwable  {
      DERBitString dERBitString0 = new DERBitString((byte)1, 0);
      DERBitString dERBitString1 = new DERBitString((byte)1, (byte)1);
      boolean boolean0 = dERBitString1.asn1Equals((DERObject) dERBitString0);
      assertFalse(dERBitString0.equals(dERBitString1));
      assertEquals(false, boolean0);
      assertEquals("#03020101", dERBitString1.toString());
  }
}
