/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.bouncycastle.asn1.DERSequenceGenerator;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DERGeneratorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DERSequenceGenerator dERSequenceGenerator0 = new DERSequenceGenerator((OutputStream) byteArrayOutputStream0);
      dERSequenceGenerator0.close();
      assertEquals(2, byteArrayOutputStream0.size());
      assertEquals("0\u0000", byteArrayOutputStream0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      DERSequenceGenerator dERSequenceGenerator0 = new DERSequenceGenerator((OutputStream) null, 1, false);
      byte[] byteArray0 = new byte[10];
      // Undeclared exception!
      try {
        dERSequenceGenerator0.writeDEREncoded(1, byteArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      DERSequenceGenerator dERSequenceGenerator0 = new DERSequenceGenerator((OutputStream) pipedOutputStream0, 0, true);
      byte[] byteArray0 = new byte[32];
      dERSequenceGenerator0.writeDEREncoded(0, byteArray0);
  }

  @Test
  public void test3()  throws Throwable  {
      DERSequenceGenerator dERSequenceGenerator0 = new DERSequenceGenerator((OutputStream) null, 307, false);
      // Undeclared exception!
      try {
        dERSequenceGenerator0.close();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DERSequenceGenerator dERSequenceGenerator0 = new DERSequenceGenerator((OutputStream) byteArrayOutputStream0);
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      dERSequenceGenerator0.writeDEREncoded((OutputStream) byteArrayOutputStream0, 1583, (InputStream) byteArrayInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals("/\u0006\u0000\u0000\u0000\u0000\u0000\u0000", byteArrayOutputStream0.toString());
  }
}
