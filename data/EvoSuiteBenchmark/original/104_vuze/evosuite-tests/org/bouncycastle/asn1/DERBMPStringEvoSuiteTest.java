/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.bouncycastle.asn1.ASN1TaggedObject;
import org.bouncycastle.asn1.BERConstructedOctetString;
import org.bouncycastle.asn1.BERTaggedObject;
import org.bouncycastle.asn1.DERBMPString;
import org.bouncycastle.asn1.DERBoolean;
import org.bouncycastle.asn1.DEREncodable;
import org.bouncycastle.asn1.DERObject;
import org.bouncycastle.asn1.DERVisibleString;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DERBMPStringEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DERBMPString dERBMPString0 = new DERBMPString("");
      int int0 = dERBMPString0.hashCode();
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      DERBMPString dERBMPString0 = new DERBMPString(byteArray0);
      assertNotNull(dERBMPString0);
      
      String string0 = dERBMPString0.toString();
      assertEquals("\u0000\u0000", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      DERBMPString dERBMPString0 = DERBMPString.getInstance((Object) null);
      assertNull(dERBMPString0);
  }

  @Test
  public void test3()  throws Throwable  {
      DERBMPString dERBMPString0 = new DERBMPString("NULL");
      BERTaggedObject bERTaggedObject0 = new BERTaggedObject(false, 60, (DEREncodable) dERBMPString0);
      DERBMPString dERBMPString1 = DERBMPString.getInstance((ASN1TaggedObject) bERTaggedObject0, false);
      assertEquals("[60]NULL", bERTaggedObject0.toString());
      assertNotNull(dERBMPString1);
  }

  @Test
  public void test4()  throws Throwable  {
      DERBoolean dERBoolean0 = DERBoolean.getInstance(false);
      BERConstructedOctetString bERConstructedOctetString0 = new BERConstructedOctetString((DEREncodable) dERBoolean0);
      DERBMPString dERBMPString0 = DERBMPString.getInstance((Object) bERConstructedOctetString0);
      assertNotNull(dERBMPString0);
      
      byte[] byteArray0 = dERBMPString0.getDEREncoded();
      assertNotNull(byteArray0);
      assertEquals("\u0101", dERBMPString0.toString());
      assertEquals("\u0101", dERBMPString0.getString());
  }

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      DERVisibleString dERVisibleString0 = new DERVisibleString(byteArray0);
      BERTaggedObject bERTaggedObject0 = new BERTaggedObject(1306, (DEREncodable) dERVisibleString0);
      // Undeclared exception!
      try {
        DERBMPString.getInstance((Object) bERTaggedObject0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * illegal object in getInstance: org.bouncycastle.asn1.DERVisibleString
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      DERBMPString dERBMPString0 = new DERBMPString(byteArray0);
      assertNotNull(dERBMPString0);
      
      boolean boolean0 = dERBMPString0.asn1Equals((DERObject) dERBMPString0);
      assertEquals("\u0000\u0000\u0000", dERBMPString0.getString());
      assertEquals(true, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      DERBMPString dERBMPString0 = new DERBMPString("NULL");
      BERTaggedObject bERTaggedObject0 = new BERTaggedObject(false, 60, (DEREncodable) dERBMPString0);
      boolean boolean0 = dERBMPString0.equals((Object) bERTaggedObject0);
      assertEquals("[60]NULL", bERTaggedObject0.toString());
      assertEquals(false, boolean0);
  }
}
