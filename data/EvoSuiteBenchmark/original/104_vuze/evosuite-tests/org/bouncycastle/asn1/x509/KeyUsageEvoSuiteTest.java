/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1.x509;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.bouncycastle.asn1.ASN1OctetString;
import org.bouncycastle.asn1.BERConstructedOctetString;
import org.bouncycastle.asn1.DERBitString;
import org.bouncycastle.asn1.DEREncodable;
import org.bouncycastle.asn1.x509.KeyUsage;
import org.bouncycastle.asn1.x509.X509Extension;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class KeyUsageEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      KeyUsage keyUsage0 = new KeyUsage((int) (byte)0);
      BERConstructedOctetString bERConstructedOctetString0 = new BERConstructedOctetString((DEREncodable) keyUsage0);
      X509Extension x509Extension0 = new X509Extension(true, (ASN1OctetString) bERConstructedOctetString0);
      KeyUsage keyUsage1 = (KeyUsage)KeyUsage.getInstance((Object) x509Extension0);
      assertTrue(keyUsage0.equals(keyUsage1));
  }

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      DERBitString dERBitString0 = new DERBitString(byteArray0, (int) (byte)0);
      KeyUsage keyUsage0 = new KeyUsage(dERBitString0);
      KeyUsage keyUsage1 = (KeyUsage)KeyUsage.getInstance((Object) keyUsage0);
      assertSame(keyUsage0, keyUsage1);
  }

  @Test
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try {
        KeyUsage.getInstance((Object) "KeyUsage: 0xfda8");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * illegal object in getInstance: java.lang.String
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      KeyUsage keyUsage0 = new KeyUsage((-600));
      String string0 = keyUsage0.toString();
      assertNotNull(string0);
      assertEquals("KeyUsage: 0xfda8", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      KeyUsage keyUsage0 = new KeyUsage((int) (byte)0);
      String string0 = keyUsage0.toString();
      assertNotNull(string0);
      assertEquals("KeyUsage: 0x0", string0);
  }
}
