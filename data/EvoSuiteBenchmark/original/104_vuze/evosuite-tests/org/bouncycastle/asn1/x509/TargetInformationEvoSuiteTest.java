/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1.x509;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.bouncycastle.asn1.DERConstructedSequence;
import org.bouncycastle.asn1.x509.Target;
import org.bouncycastle.asn1.x509.TargetInformation;
import org.bouncycastle.asn1.x509.Targets;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TargetInformationEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Target[] targetArray0 = new Target[13];
      TargetInformation targetInformation0 = new TargetInformation(targetArray0);
      int int0 = targetInformation0.hashCode();
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      DERConstructedSequence dERConstructedSequence0 = new DERConstructedSequence();
      TargetInformation targetInformation0 = TargetInformation.getInstance((Object) dERConstructedSequence0);
      assertNotNull(targetInformation0);
  }

  @Test
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try {
        TargetInformation.getInstance((Object) "2.5.4.46");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * unknown object in factory: class java.lang.String
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Target[] targetArray0 = new Target[13];
      TargetInformation targetInformation0 = new TargetInformation(targetArray0);
      Targets[] targetsArray0 = targetInformation0.getTargetsObjects();
      assertNotNull(targetsArray0);
  }
}
