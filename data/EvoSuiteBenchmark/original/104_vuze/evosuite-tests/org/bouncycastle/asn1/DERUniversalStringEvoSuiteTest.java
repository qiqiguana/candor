/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.bouncycastle.asn1.ASN1TaggedObject;
import org.bouncycastle.asn1.BERConstructedOctetString;
import org.bouncycastle.asn1.DEREncodable;
import org.bouncycastle.asn1.DERObject;
import org.bouncycastle.asn1.DERTaggedObject;
import org.bouncycastle.asn1.DERUniversalString;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DERUniversalStringEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      DERUniversalString dERUniversalString0 = new DERUniversalString(byteArray0);
      String string0 = dERUniversalString0.toString();
      assertNotNull(string0);
      assertEquals("#1C09000000000000000000", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      DERUniversalString dERUniversalString0 = new DERUniversalString(byteArray0);
      int int0 = dERUniversalString0.hashCode();
      assertEquals(312242651, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      DERUniversalString dERUniversalString0 = new DERUniversalString(byteArray0);
      DERTaggedObject dERTaggedObject0 = new DERTaggedObject(1, (DEREncodable) dERUniversalString0);
      DERUniversalString dERUniversalString1 = DERUniversalString.getInstance((ASN1TaggedObject) dERTaggedObject0, false);
      assertSame(dERUniversalString1, dERUniversalString0);
  }

  @Test
  public void test3()  throws Throwable  {
      DERUniversalString dERUniversalString0 = DERUniversalString.getInstance((Object) null);
      assertNull(dERUniversalString0);
  }

  @Test
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try {
        DERUniversalString.getInstance((Object) "x$N");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * illegal object in getInstance: java.lang.String
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BERConstructedOctetString bERConstructedOctetString0 = new BERConstructedOctetString(byteArray0);
      DERUniversalString dERUniversalString0 = DERUniversalString.getInstance((Object) bERConstructedOctetString0);
      assertEquals("#1C09000000000000000000", dERUniversalString0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      DERUniversalString dERUniversalString0 = new DERUniversalString(byteArray0);
      boolean boolean0 = dERUniversalString0.asn1Equals((DERObject) dERUniversalString0);
      assertEquals(true, boolean0);
      assertEquals("#1C09000000000000000000", dERUniversalString0.getString());
  }

  @Test
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      DERUniversalString dERUniversalString0 = new DERUniversalString(byteArray0);
      boolean boolean0 = dERUniversalString0.asn1Equals((DERObject) null);
      assertEquals(false, boolean0);
  }
}
