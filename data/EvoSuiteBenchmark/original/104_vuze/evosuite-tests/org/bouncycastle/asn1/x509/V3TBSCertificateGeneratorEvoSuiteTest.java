/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1.x509;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Date;
import java.util.Hashtable;
import java.util.Vector;
import org.bouncycastle.asn1.ASN1Sequence;
import org.bouncycastle.asn1.ASN1TaggedObject;
import org.bouncycastle.asn1.BERSequence;
import org.bouncycastle.asn1.DEREncodable;
import org.bouncycastle.asn1.DERInteger;
import org.bouncycastle.asn1.DERObjectIdentifier;
import org.bouncycastle.asn1.DERUTCTime;
import org.bouncycastle.asn1.x509.AlgorithmIdentifier;
import org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;
import org.bouncycastle.asn1.x509.Time;
import org.bouncycastle.asn1.x509.V3TBSCertificateGenerator;
import org.bouncycastle.asn1.x509.X509DefaultEntryConverter;
import org.bouncycastle.asn1.x509.X509Extensions;
import org.bouncycastle.asn1.x509.X509Name;
import org.bouncycastle.asn1.x509.X509NameEntryConverter;
import org.evosuite.testcase.CodeUnderTestException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class V3TBSCertificateGeneratorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      V3TBSCertificateGenerator v3TBSCertificateGenerator0 = new V3TBSCertificateGenerator();
      Date date0 = new Date();
      DERUTCTime dERUTCTime0 = new DERUTCTime(date0);
      v3TBSCertificateGenerator0.setStartDate(dERUTCTime0);
      assertEquals(1372728985576L, date0.getTime());
  }

  @Test
  public void test1()  throws Throwable  {
      V3TBSCertificateGenerator v3TBSCertificateGenerator0 = new V3TBSCertificateGenerator();
      // Undeclared exception!
      try {
        v3TBSCertificateGenerator0.setEndDate((DERUTCTime) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * unknown object passed to Time
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      V3TBSCertificateGenerator v3TBSCertificateGenerator0 = new V3TBSCertificateGenerator();
      v3TBSCertificateGenerator0.setExtensions((X509Extensions) null);
  }

  @Test
  public void test3()  throws Throwable  {
      V3TBSCertificateGenerator v3TBSCertificateGenerator0 = new V3TBSCertificateGenerator();
      BERSequence bERSequence0 = new BERSequence();
      X509Extensions x509Extensions0 = new X509Extensions((ASN1Sequence) bERSequence0);
      v3TBSCertificateGenerator0.setExtensions(x509Extensions0);
  }

  @Test
  public void test4()  throws Throwable  {
      V3TBSCertificateGenerator v3TBSCertificateGenerator0 = new V3TBSCertificateGenerator();
      // Undeclared exception!
      try {
        v3TBSCertificateGenerator0.generateTBSCertificate();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * not all mandatory fields set in V3 TBScertificate generator
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      V3TBSCertificateGenerator v3TBSCertificateGenerator0 = new V3TBSCertificateGenerator();
  }

  @Test
  public void test6()  throws Throwable  {
      V3TBSCertificateGenerator v3TBSCertificateGenerator0 = new V3TBSCertificateGenerator();
      DERObjectIdentifier dERObjectIdentifier0 = X509Name.SURNAME;
      AlgorithmIdentifier algorithmIdentifier0 = new AlgorithmIdentifier(dERObjectIdentifier0, dERObjectIdentifier0);
      v3TBSCertificateGenerator0.setSignature(algorithmIdentifier0);
  }

  @Test
  public void test7()  throws Throwable  {
      V3TBSCertificateGenerator v3TBSCertificateGenerator0 = new V3TBSCertificateGenerator();
      DERObjectIdentifier dERObjectIdentifier0 = X509Name.SURNAME;
      AlgorithmIdentifier algorithmIdentifier0 = new AlgorithmIdentifier(dERObjectIdentifier0, dERObjectIdentifier0);
      Vector<Integer> vector0 = new Vector<Integer>();
      Hashtable<Object, Object> hashtable0 = X509Name.SymbolLookUp;
      X509DefaultEntryConverter x509DefaultEntryConverter0 = new X509DefaultEntryConverter();
      X509Name x509Name0 = new X509Name((Vector) vector0, (Hashtable) hashtable0, (X509NameEntryConverter) x509DefaultEntryConverter0);
      v3TBSCertificateGenerator0.setIssuer(x509Name0);
      v3TBSCertificateGenerator0.setSignature(algorithmIdentifier0);
  }

  @Test
  public void test8()  throws Throwable  {
      V3TBSCertificateGenerator v3TBSCertificateGenerator0 = new V3TBSCertificateGenerator();
      DERObjectIdentifier dERObjectIdentifier0 = X509Name.SURNAME;
      AlgorithmIdentifier algorithmIdentifier0 = new AlgorithmIdentifier(dERObjectIdentifier0, dERObjectIdentifier0);
      Date date0 = new Date();
      Time time0 = new Time(date0);
      v3TBSCertificateGenerator0.setStartDate(time0);
      Vector<Integer> vector0 = new Vector<Integer>();
      Hashtable<Object, Object> hashtable0 = X509Name.SymbolLookUp;
      X509DefaultEntryConverter x509DefaultEntryConverter0 = new X509DefaultEntryConverter();
      X509Name x509Name0 = new X509Name((Vector) vector0, (Hashtable) hashtable0, (X509NameEntryConverter) x509DefaultEntryConverter0);
      v3TBSCertificateGenerator0.setIssuer(x509Name0);
      v3TBSCertificateGenerator0.setSignature(algorithmIdentifier0);
  }

  @Test
  public void test9()  throws Throwable  {
      V3TBSCertificateGenerator v3TBSCertificateGenerator0 = new V3TBSCertificateGenerator();
      DERObjectIdentifier dERObjectIdentifier0 = X509Name.SURNAME;
      AlgorithmIdentifier algorithmIdentifier0 = new AlgorithmIdentifier(dERObjectIdentifier0, dERObjectIdentifier0);
      Date date0 = new Date();
      Time time0 = new Time(date0);
      v3TBSCertificateGenerator0.setStartDate(time0);
      v3TBSCertificateGenerator0.setEndDate(time0);
      Vector<Integer> vector0 = new Vector<Integer>();
      Hashtable<Object, Object> hashtable0 = X509Name.SymbolLookUp;
      X509DefaultEntryConverter x509DefaultEntryConverter0 = new X509DefaultEntryConverter();
      X509Name x509Name0 = new X509Name((Vector) vector0, (Hashtable) hashtable0, (X509NameEntryConverter) x509DefaultEntryConverter0);
      v3TBSCertificateGenerator0.setIssuer(x509Name0);
      v3TBSCertificateGenerator0.setSignature(algorithmIdentifier0);
  }

  @Test
  public void test10()  throws Throwable  {
      V3TBSCertificateGenerator v3TBSCertificateGenerator0 = new V3TBSCertificateGenerator();
      DERObjectIdentifier dERObjectIdentifier0 = X509Name.SURNAME;
      AlgorithmIdentifier algorithmIdentifier0 = new AlgorithmIdentifier(dERObjectIdentifier0, dERObjectIdentifier0);
      Date date0 = new Date();
      Time time0 = new Time(date0);
      v3TBSCertificateGenerator0.setStartDate(time0);
      v3TBSCertificateGenerator0.setEndDate(time0);
      Vector<Integer> vector0 = new Vector<Integer>();
      Hashtable<Object, Object> hashtable0 = X509Name.SymbolLookUp;
      X509DefaultEntryConverter x509DefaultEntryConverter0 = new X509DefaultEntryConverter();
      X509Name x509Name0 = new X509Name((Vector) vector0, (Hashtable) hashtable0, (X509NameEntryConverter) x509DefaultEntryConverter0);
      v3TBSCertificateGenerator0.setIssuer(x509Name0);
      v3TBSCertificateGenerator0.setSubject(x509Name0);
      v3TBSCertificateGenerator0.setSignature(algorithmIdentifier0);
  }

  @Test
  public void test11()  throws Throwable  {
      V3TBSCertificateGenerator v3TBSCertificateGenerator0 = new V3TBSCertificateGenerator();
      DERObjectIdentifier dERObjectIdentifier0 = X509Name.SURNAME;
      AlgorithmIdentifier algorithmIdentifier0 = new AlgorithmIdentifier(dERObjectIdentifier0, dERObjectIdentifier0);
      Date date0 = new Date();
      Time time0 = new Time(date0);
      v3TBSCertificateGenerator0.setStartDate(time0);
      v3TBSCertificateGenerator0.setEndDate(time0);
      Vector<Integer> vector0 = new Vector<Integer>();
      Hashtable<Object, Object> hashtable0 = X509Name.SymbolLookUp;
      X509DefaultEntryConverter x509DefaultEntryConverter0 = new X509DefaultEntryConverter();
      X509Name x509Name0 = new X509Name((Vector) vector0, (Hashtable) hashtable0, (X509NameEntryConverter) x509DefaultEntryConverter0);
      v3TBSCertificateGenerator0.setIssuer(x509Name0);
      v3TBSCertificateGenerator0.setSubject(x509Name0);
      v3TBSCertificateGenerator0.setSignature(algorithmIdentifier0);
  }

  @Test
  public void test12()  throws Throwable  {
      V3TBSCertificateGenerator v3TBSCertificateGenerator0 = new V3TBSCertificateGenerator();
      DERObjectIdentifier dERObjectIdentifier0 = X509Name.SURNAME;
      AlgorithmIdentifier algorithmIdentifier0 = new AlgorithmIdentifier(dERObjectIdentifier0, dERObjectIdentifier0);
      Date date0 = new Date();
      Time time0 = new Time(date0);
      v3TBSCertificateGenerator0.setStartDate(time0);
      v3TBSCertificateGenerator0.setEndDate(time0);
      Vector<Integer> vector0 = new Vector<Integer>();
      Hashtable<Object, Object> hashtable0 = X509Name.SymbolLookUp;
      X509DefaultEntryConverter x509DefaultEntryConverter0 = new X509DefaultEntryConverter();
      X509Name x509Name0 = new X509Name((Vector) vector0, (Hashtable) hashtable0, (X509NameEntryConverter) x509DefaultEntryConverter0);
      v3TBSCertificateGenerator0.setIssuer(x509Name0);
      v3TBSCertificateGenerator0.setSubject(x509Name0);
      X509Extensions x509Extensions0 = new X509Extensions((Vector) vector0, (Hashtable) x509Name0.DefaultSymbols);
      v3TBSCertificateGenerator0.extensions = (org.bouncycastle.asn1.x509.X509Extensions) x509Extensions0;
      v3TBSCertificateGenerator0.setSignature(algorithmIdentifier0);
  }
}
