/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1.pkcs;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.bouncycastle.asn1.ASN1Sequence;
import org.bouncycastle.asn1.ASN1TaggedObject;
import org.bouncycastle.asn1.BERSequence;
import org.bouncycastle.asn1.BERTaggedObject;
import org.bouncycastle.asn1.DEREncodable;
import org.bouncycastle.asn1.DERObjectIdentifier;
import org.bouncycastle.asn1.DERTaggedObject;
import org.bouncycastle.asn1.pkcs.ContentInfo;
import org.bouncycastle.asn1.pkcs.MacData;
import org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers;
import org.bouncycastle.asn1.pkcs.Pfx;
import org.bouncycastle.asn1.x509.AlgorithmIdentifier;
import org.bouncycastle.asn1.x509.DigestInfo;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PfxEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DERObjectIdentifier dERObjectIdentifier0 = PKCSObjectIdentifiers.pkcs_9_at_extendedCertificateAttributes;
      ContentInfo contentInfo0 = new ContentInfo(dERObjectIdentifier0, dERObjectIdentifier0);
      Pfx pfx0 = new Pfx(contentInfo0, (MacData) null);
      MacData macData0 = pfx0.getMacData();
      assertNull(macData0);
  }

  @Test
  public void test1()  throws Throwable  {
      DERObjectIdentifier dERObjectIdentifier0 = PKCSObjectIdentifiers.pkcs_9_at_unstructuredName;
      ContentInfo contentInfo0 = new ContentInfo(dERObjectIdentifier0, dERObjectIdentifier0);
      byte[] byteArray0 = new byte[17];
      DigestInfo digestInfo0 = new DigestInfo((AlgorithmIdentifier) null, byteArray0);
      MacData macData0 = new MacData(digestInfo0, byteArray0, (int) (byte)0);
      Pfx pfx0 = new Pfx(contentInfo0, macData0);
      ContentInfo contentInfo1 = pfx0.getAuthSafe();
      assertSame(contentInfo0, contentInfo1);
  }

  @Test
  public void test2()  throws Throwable  {
      DERObjectIdentifier dERObjectIdentifier0 = PKCSObjectIdentifiers.pkcs_9_at_extendedCertificateAttributes;
      ContentInfo contentInfo0 = new ContentInfo(dERObjectIdentifier0, dERObjectIdentifier0);
      Pfx pfx0 = new Pfx(contentInfo0, (MacData) null);
      DERTaggedObject dERTaggedObject0 = new DERTaggedObject(false, (-1), (DEREncodable) pfx0);
      BERSequence bERSequence0 = (BERSequence)ASN1Sequence.getInstance((ASN1TaggedObject) dERTaggedObject0, false);
      Pfx pfx1 = new Pfx((ASN1Sequence) bERSequence0);
      assertNotNull(pfx1);
      assertEquals(2, bERSequence0.size());
  }

  @Test
  public void test3()  throws Throwable  {
      DERObjectIdentifier dERObjectIdentifier0 = PKCSObjectIdentifiers.pkcs_9_at_unstructuredName;
      ContentInfo contentInfo0 = new ContentInfo(dERObjectIdentifier0, dERObjectIdentifier0);
      byte[] byteArray0 = new byte[17];
      DigestInfo digestInfo0 = new DigestInfo((AlgorithmIdentifier) null, byteArray0);
      MacData macData0 = new MacData(digestInfo0, byteArray0, (int) (byte)0);
      Pfx pfx0 = new Pfx(contentInfo0, macData0);
      BERTaggedObject bERTaggedObject0 = new BERTaggedObject(0, (DEREncodable) pfx0);
      BERSequence bERSequence0 = (BERSequence)ASN1Sequence.getInstance((ASN1TaggedObject) bERTaggedObject0, true);
      Pfx pfx1 = new Pfx((ASN1Sequence) bERSequence0);
      assertEquals(3, bERSequence0.size());
      assertNotNull(pfx1);
  }
}
