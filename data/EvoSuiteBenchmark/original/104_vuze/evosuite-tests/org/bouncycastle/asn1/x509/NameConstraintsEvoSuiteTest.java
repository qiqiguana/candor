/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1.x509;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Vector;
import org.bouncycastle.asn1.ASN1Encodable;
import org.bouncycastle.asn1.ASN1Sequence;
import org.bouncycastle.asn1.BERSequence;
import org.bouncycastle.asn1.DEREncodable;
import org.bouncycastle.asn1.DERSequence;
import org.bouncycastle.asn1.DERTaggedObject;
import org.bouncycastle.asn1.x509.GeneralSubtree;
import org.bouncycastle.asn1.x509.NameConstraints;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class NameConstraintsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Vector<GeneralSubtree> vector0 = new Vector<GeneralSubtree>();
      NameConstraints nameConstraints0 = new NameConstraints(vector0, vector0);
      DERSequence dERSequence0 = (DERSequence)nameConstraints0.getPermittedSubtrees();
      assertEquals(0, dERSequence0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      BERSequence bERSequence0 = new BERSequence();
      NameConstraints nameConstraints0 = new NameConstraints((ASN1Sequence) bERSequence0);
      ASN1Sequence aSN1Sequence0 = nameConstraints0.getExcludedSubtrees();
      assertNull(aSN1Sequence0);
  }

  @Test
  public void test2()  throws Throwable  {
      DERTaggedObject dERTaggedObject0 = new DERTaggedObject(336);
      DERSequence dERSequence0 = new DERSequence((DEREncodable) dERTaggedObject0);
      NameConstraints nameConstraints0 = new NameConstraints((ASN1Sequence) dERSequence0);
      assertNotNull(nameConstraints0);
  }

  @Test
  public void test3()  throws Throwable  {
      ASN1Encodable[] aSN1EncodableArray0 = new ASN1Encodable[14];
      NameConstraints nameConstraints0 = new NameConstraints((Vector) null, (Vector) null);
      assertNotNull(nameConstraints0);
      
      DERSequence dERSequence0 = (DERSequence)nameConstraints0.toASN1Object();
      DERTaggedObject dERTaggedObject0 = new DERTaggedObject(false, 0, (DEREncodable) dERSequence0);
      aSN1EncodableArray0[0] = (ASN1Encodable) dERTaggedObject0;
      DERSequence dERSequence1 = new DERSequence(aSN1EncodableArray0);
      NameConstraints nameConstraints1 = null;
      try {
        nameConstraints1 = new NameConstraints((ASN1Sequence) dERSequence1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      DERTaggedObject dERTaggedObject0 = new DERTaggedObject(true, 1, (DEREncodable) null);
      BERSequence bERSequence0 = new BERSequence((DEREncodable) dERTaggedObject0);
      NameConstraints nameConstraints0 = new NameConstraints((ASN1Sequence) bERSequence0);
      assertNotNull(nameConstraints0);
  }

  @Test
  public void test5()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      vector0.add("U%X3Q38V");
      NameConstraints nameConstraints0 = null;
      try {
        nameConstraints0 = new NameConstraints(vector0, vector0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Vector<GeneralSubtree> vector0 = new Vector<GeneralSubtree>();
      NameConstraints nameConstraints0 = new NameConstraints(vector0, vector0);
      assertNotNull(nameConstraints0);
      
      DERSequence dERSequence0 = (DERSequence)nameConstraints0.getDERObject();
      assertEquals("[[0][], [1][]]", dERSequence0.toString());
  }
}
