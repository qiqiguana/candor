/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1.x509;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.NoSuchElementException;
import org.bouncycastle.asn1.ASN1TaggedObject;
import org.bouncycastle.asn1.DEREncodable;
import org.bouncycastle.asn1.DERObjectIdentifier;
import org.bouncycastle.asn1.DERSequence;
import org.bouncycastle.asn1.DERTaggedObject;
import org.bouncycastle.asn1.x509.AlgorithmIdentifier;
import org.bouncycastle.asn1.x509.DigestInfo;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DigestInfoEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DERTaggedObject dERTaggedObject0 = new DERTaggedObject(true, 804, (DEREncodable) null);
      // Undeclared exception!
      try {
        DigestInfo.getInstance((ASN1TaggedObject) dERTaggedObject0, false);
        fail("Expecting exception: NoSuchElementException");
      } catch(NoSuchElementException e) {
        /*
         * Vector Enumeration
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      AlgorithmIdentifier algorithmIdentifier0 = new AlgorithmIdentifier((DERObjectIdentifier) null, (DEREncodable) null);
      DigestInfo digestInfo0 = new DigestInfo(algorithmIdentifier0, byteArray0);
      DERSequence dERSequence0 = (DERSequence)digestInfo0.toASN1Object();
      assertEquals(2, dERSequence0.size());
  }

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      DigestInfo digestInfo0 = new DigestInfo((AlgorithmIdentifier) null, byteArray0);
      byte[] byteArray1 = digestInfo0.getDigest();
      assertSame(byteArray1, byteArray0);
  }

  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      AlgorithmIdentifier algorithmIdentifier0 = new AlgorithmIdentifier((DERObjectIdentifier) null, (DEREncodable) null);
      DigestInfo digestInfo0 = new DigestInfo(algorithmIdentifier0, byteArray0);
      AlgorithmIdentifier algorithmIdentifier1 = digestInfo0.getAlgorithmId();
      assertSame(algorithmIdentifier1, algorithmIdentifier0);
  }

  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      AlgorithmIdentifier algorithmIdentifier0 = new AlgorithmIdentifier((DERObjectIdentifier) null, (DEREncodable) null);
      DigestInfo digestInfo0 = new DigestInfo(algorithmIdentifier0, byteArray0);
      DigestInfo digestInfo1 = DigestInfo.getInstance((Object) digestInfo0);
      assertSame(digestInfo1, digestInfo0);
  }

  @Test
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try {
        DigestInfo.getInstance((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * unknown object in factory
         */
      }
  }
}
