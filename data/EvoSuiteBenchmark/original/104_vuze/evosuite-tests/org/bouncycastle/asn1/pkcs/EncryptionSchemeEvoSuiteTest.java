/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1.pkcs;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.bouncycastle.asn1.ASN1Encodable;
import org.bouncycastle.asn1.ASN1Sequence;
import org.bouncycastle.asn1.DERObject;
import org.bouncycastle.asn1.DERSequence;
import org.bouncycastle.asn1.pkcs.EncryptionScheme;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class EncryptionSchemeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ASN1Encodable[] aSN1EncodableArray0 = new ASN1Encodable[2];
      DERSequence dERSequence0 = new DERSequence(aSN1EncodableArray0);
      EncryptionScheme encryptionScheme0 = new EncryptionScheme((ASN1Sequence) dERSequence0);
      DERSequence dERSequence1 = (DERSequence)encryptionScheme0.getDERObject();
      assertEquals(2, dERSequence1.size());
  }

  @Test
  public void test1()  throws Throwable  {
      ASN1Encodable[] aSN1EncodableArray0 = new ASN1Encodable[2];
      DERSequence dERSequence0 = new DERSequence(aSN1EncodableArray0);
      EncryptionScheme encryptionScheme0 = new EncryptionScheme((ASN1Sequence) dERSequence0);
      DERObject dERObject0 = encryptionScheme0.getObject();
      assertNull(dERObject0);
  }
}
