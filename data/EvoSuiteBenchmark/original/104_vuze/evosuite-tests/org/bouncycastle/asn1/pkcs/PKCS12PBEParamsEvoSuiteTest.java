/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1.pkcs;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.math.BigInteger;
import org.bouncycastle.asn1.BERSequence;
import org.bouncycastle.asn1.DERSequence;
import org.bouncycastle.asn1.pkcs.PKCS12PBEParams;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PKCS12PBEParamsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BERSequence bERSequence0 = new BERSequence();
      // Undeclared exception!
      try {
        PKCS12PBEParams.getInstance((Object) bERSequence0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 0 >= 0
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      PKCS12PBEParams pKCS12PBEParams0 = new PKCS12PBEParams(byteArray0, (-1954));
      DERSequence dERSequence0 = (DERSequence)pKCS12PBEParams0.getDERObject();
      assertEquals("[#00000000000000000000, -1954]", dERSequence0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      PKCS12PBEParams pKCS12PBEParams0 = new PKCS12PBEParams(byteArray0, (int) (byte) (-38));
      byte[] byteArray1 = pKCS12PBEParams0.getIV();
      assertSame(byteArray0, byteArray1);
  }

  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      PKCS12PBEParams pKCS12PBEParams0 = new PKCS12PBEParams(byteArray0, (int) (byte) (-38));
      BigInteger bigInteger0 = pKCS12PBEParams0.getIterations();
      assertNotNull(bigInteger0);
      assertEquals("-38", bigInteger0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      PKCS12PBEParams pKCS12PBEParams0 = new PKCS12PBEParams(byteArray0, (-1954));
      PKCS12PBEParams pKCS12PBEParams1 = PKCS12PBEParams.getInstance((Object) pKCS12PBEParams0);
      assertSame(pKCS12PBEParams0, pKCS12PBEParams1);
  }

  @Test
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try {
        PKCS12PBEParams.getInstance((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * unknown object in factory
         */
      }
  }
}
