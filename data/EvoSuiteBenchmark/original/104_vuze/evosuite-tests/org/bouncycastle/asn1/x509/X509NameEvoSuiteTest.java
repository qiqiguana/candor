/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1.x509;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Hashtable;
import java.util.Vector;
import org.bouncycastle.asn1.ASN1Set;
import org.bouncycastle.asn1.ASN1TaggedObject;
import org.bouncycastle.asn1.BERConstructedOctetString;
import org.bouncycastle.asn1.BERSequence;
import org.bouncycastle.asn1.BERTaggedObject;
import org.bouncycastle.asn1.DEREncodable;
import org.bouncycastle.asn1.DEREncodableVector;
import org.bouncycastle.asn1.DERObjectIdentifier;
import org.bouncycastle.asn1.DERSet;
import org.bouncycastle.asn1.DERString;
import org.bouncycastle.asn1.DERT61String;
import org.bouncycastle.asn1.DERTaggedObject;
import org.bouncycastle.asn1.x509.X509DefaultEntryConverter;
import org.bouncycastle.asn1.x509.X509Name;
import org.bouncycastle.asn1.x509.X509NameEntryConverter;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class X509NameEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      X509Name x509Name0 = new X509Name(vector0, vector0);
      DERObjectIdentifier dERObjectIdentifier0 = X509Name.DATE_OF_BIRTH;
      Vector<Object> vector1 = x509Name0.getValues(dERObjectIdentifier0);
      X509Name x509Name1 = new X509Name((Vector) vector1, (Hashtable) x509Name0.SymbolLookUp);
      assertTrue(x509Name0.equals(x509Name1));
  }

  @Test
  public void test1()  throws Throwable  {
      X509Name x509Name0 = X509Name.getInstance((Object) null);
      assertNull(x509Name0);
  }

  @Test
  public void test2()  throws Throwable  {
      DERTaggedObject dERTaggedObject0 = new DERTaggedObject(0);
      // Undeclared exception!
      try {
        X509Name.getInstance((Object) dERTaggedObject0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * unknown object in factory \"org.bouncycastle.asn1.DERTaggedObject\"
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      DERTaggedObject dERTaggedObject0 = new DERTaggedObject(48);
      DERSet dERSet0 = (DERSet)ASN1Set.getInstance((ASN1TaggedObject) dERTaggedObject0, false);
      BERTaggedObject bERTaggedObject0 = new BERTaggedObject(48, (DEREncodable) dERSet0);
      X509Name x509Name0 = X509Name.getInstance((ASN1TaggedObject) bERTaggedObject0, false);
      assertEquals(false, x509Name0.DefaultReverse);
  }

  @Test
  public void test4()  throws Throwable  {
      Hashtable<String, DERObjectIdentifier> hashtable0 = new Hashtable<String, DERObjectIdentifier>();
      X509Name x509Name0 = new X509Name(hashtable0);
      assertNotNull(x509Name0);
      
      byte[] byteArray0 = x509Name0.getDEREncoded();
      assertNotNull(byteArray0);
      
      BERConstructedOctetString bERConstructedOctetString0 = new BERConstructedOctetString(byteArray0);
      boolean boolean0 = x509Name0.equals((Object) bERConstructedOctetString0, false);
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      Vector<DERString> vector0 = new Vector<DERString>();
      DERT61String dERT61String0 = new DERT61String("OID.H5K");
      vector0.add((DERString) dERT61String0);
      X509DefaultEntryConverter x509DefaultEntryConverter0 = new X509DefaultEntryConverter();
      X509Name x509Name0 = new X509Name((Vector) vector0, (Vector) vector0, (X509NameEntryConverter) x509DefaultEntryConverter0);
      assertNotNull(x509Name0);
      
      DERObjectIdentifier dERObjectIdentifier0 = X509Name.C;
      Vector<Object> vector1 = x509Name0.getValues(dERObjectIdentifier0);
      assertNotNull(vector1);
      assertEquals("[]", vector1.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      X509Name x509Name0 = null;
      try {
        x509Name0 = new X509Name(true, (Hashtable) null, "v=:i>N*($6");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      X509DefaultEntryConverter x509DefaultEntryConverter0 = new X509DefaultEntryConverter();
      X509Name x509Name0 = null;
      try {
        x509Name0 = new X509Name("/5K=w@em*2.r", (X509NameEntryConverter) x509DefaultEntryConverter0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Unknown object id - /5K - passed to distinguished name
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      X509DefaultEntryConverter x509DefaultEntryConverter0 = new X509DefaultEntryConverter();
      X509Name x509Name0 = null;
      try {
        x509Name0 = new X509Name(true, "4j^W=BXmr}Vh=Tezg", (X509NameEntryConverter) x509DefaultEntryConverter0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * string 4j^W not an OID
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      X509Name x509Name0 = null;
      try {
        x509Name0 = new X509Name("i");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * badly formated directory string
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      DEREncodableVector dEREncodableVector0 = new DEREncodableVector();
      BERSequence bERSequence0 = new BERSequence(dEREncodableVector0);
      X509Name x509Name0 = X509Name.getInstance((Object) bERSequence0);
      assertNotNull(x509Name0);
      
      boolean boolean0 = x509Name0.equals((Object) bERSequence0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      DEREncodableVector dEREncodableVector0 = new DEREncodableVector();
      BERSequence bERSequence0 = new BERSequence(dEREncodableVector0);
      X509Name x509Name0 = X509Name.getInstance((Object) bERSequence0);
      assertNotNull(x509Name0);
      
      boolean boolean0 = x509Name0.equals((Object) bERSequence0, true);
      assertEquals(true, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      Hashtable<String, DERObjectIdentifier> hashtable0 = new Hashtable<String, DERObjectIdentifier>();
      X509Name x509Name0 = new X509Name(hashtable0);
      assertNotNull(x509Name0);
      
      int int0 = x509Name0.hashCode();
      assertEquals(0, int0);
  }
}
