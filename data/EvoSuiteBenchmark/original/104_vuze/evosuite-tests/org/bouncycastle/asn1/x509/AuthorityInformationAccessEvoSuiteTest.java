/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1.x509;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.util.Vector;
import org.bouncycastle.asn1.ASN1OctetString;
import org.bouncycastle.asn1.ASN1Sequence;
import org.bouncycastle.asn1.ASN1TaggedObject;
import org.bouncycastle.asn1.BERConstructedOctetString;
import org.bouncycastle.asn1.BERConstructedSequence;
import org.bouncycastle.asn1.DERBoolean;
import org.bouncycastle.asn1.DERConstructedSequence;
import org.bouncycastle.asn1.DEREncodable;
import org.bouncycastle.asn1.DERObject;
import org.bouncycastle.asn1.DERObjectIdentifier;
import org.bouncycastle.asn1.DERSequence;
import org.bouncycastle.asn1.DERTaggedObject;
import org.bouncycastle.asn1.DERUnknownTag;
import org.bouncycastle.asn1.x509.AccessDescription;
import org.bouncycastle.asn1.x509.AuthorityInformationAccess;
import org.bouncycastle.asn1.x509.GeneralName;
import org.bouncycastle.asn1.x509.X509Extension;
import org.bouncycastle.asn1.x509.X509Name;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AuthorityInformationAccessEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BERConstructedSequence bERConstructedSequence0 = new BERConstructedSequence();
      AuthorityInformationAccess authorityInformationAccess0 = new AuthorityInformationAccess((ASN1Sequence) bERConstructedSequence0);
      // Undeclared exception!
      try {
        authorityInformationAccess0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 0
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      DERConstructedSequence dERConstructedSequence0 = new DERConstructedSequence();
      AuthorityInformationAccess authorityInformationAccess0 = new AuthorityInformationAccess((ASN1Sequence) dERConstructedSequence0);
      AccessDescription[] accessDescriptionArray0 = authorityInformationAccess0.getAccessDescriptions();
      assertNotNull(accessDescriptionArray0);
  }

  @Test
  public void test2()  throws Throwable  {
      DERObjectIdentifier dERObjectIdentifier0 = X509Name.SERIALNUMBER;
      GeneralName generalName0 = new GeneralName((DERObject) dERObjectIdentifier0, 2030);
      AuthorityInformationAccess authorityInformationAccess0 = new AuthorityInformationAccess(dERObjectIdentifier0, generalName0);
      AuthorityInformationAccess authorityInformationAccess1 = AuthorityInformationAccess.getInstance((Object) authorityInformationAccess0);
      assertSame(authorityInformationAccess1, authorityInformationAccess0);
  }

  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      DERUnknownTag dERUnknownTag0 = new DERUnknownTag(0, byteArray0);
      DERTaggedObject dERTaggedObject0 = new DERTaggedObject(290, (DEREncodable) dERUnknownTag0);
      DERSequence dERSequence0 = (DERSequence)ASN1Sequence.getInstance((ASN1TaggedObject) dERTaggedObject0, false);
      // Undeclared exception!
      try {
        AuthorityInformationAccess.getInstance((Object) dERSequence0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * unknown object in factory
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      DERBoolean dERBoolean0 = new DERBoolean(true);
      Vector<Object> vector0 = new Vector<Object>();
      BERConstructedOctetString bERConstructedOctetString0 = new BERConstructedOctetString(vector0);
      X509Extension x509Extension0 = new X509Extension(dERBoolean0, (ASN1OctetString) bERConstructedOctetString0);
      // Undeclared exception!
      try {
        AuthorityInformationAccess.getInstance((Object) x509Extension0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * unknown object in factory
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      DERObjectIdentifier dERObjectIdentifier0 = X509Name.SERIALNUMBER;
      GeneralName generalName0 = new GeneralName((DERObject) dERObjectIdentifier0, 2030);
      AuthorityInformationAccess authorityInformationAccess0 = new AuthorityInformationAccess(dERObjectIdentifier0, generalName0);
      byte[] byteArray0 = authorityInformationAccess0.getEncoded("");
      assertNotNull(byteArray0);
  }
}
