/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.math.BigInteger;
import org.bouncycastle.asn1.ASN1TaggedObject;
import org.bouncycastle.asn1.BERConstructedSequence;
import org.bouncycastle.asn1.BERTaggedObject;
import org.bouncycastle.asn1.DEREncodable;
import org.bouncycastle.asn1.DERIA5String;
import org.bouncycastle.asn1.DERInteger;
import org.bouncycastle.asn1.DERObject;
import org.bouncycastle.asn1.DEROctetString;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DERIntegerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DERInteger dERInteger0 = new DERInteger((-1915));
      assertNotNull(dERInteger0);
      
      byte[] byteArray0 = dERInteger0.getDEREncoded();
      assertEquals("-1915", dERInteger0.toString());
      assertNotNull(byteArray0);
  }

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      DERInteger dERInteger0 = new DERInteger(bigInteger0);
      String string0 = dERInteger0.toString();
      assertEquals("0", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      DERInteger dERInteger0 = DERInteger.getInstance((Object) null);
      assertNull(dERInteger0);
  }

  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      DERInteger dERInteger0 = new DERInteger(bigInteger0);
      DERInteger dERInteger1 = DERInteger.getInstance((Object) dERInteger0);
      assertSame(dERInteger0, dERInteger1);
  }

  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      DEROctetString dEROctetString0 = new DEROctetString(byteArray0);
      DERInteger dERInteger0 = DERInteger.getInstance((Object) dEROctetString0);
      assertEquals("0", dERInteger0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      BERConstructedSequence bERConstructedSequence0 = new BERConstructedSequence();
      BERTaggedObject bERTaggedObject0 = new BERTaggedObject(false, 754, (DEREncodable) bERConstructedSequence0);
      BERTaggedObject bERTaggedObject1 = new BERTaggedObject(13, (DEREncodable) bERTaggedObject0);
      // Undeclared exception!
      try {
        DERInteger.getInstance((ASN1TaggedObject) bERTaggedObject1, false);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * illegal object in getInstance: org.bouncycastle.asn1.BERConstructedSequence
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      DERInteger dERInteger0 = new DERInteger(0);
      assertNotNull(dERInteger0);
      
      int int0 = dERInteger0.hashCode();
      assertEquals(0, int0);
  }

  @Test
  public void test7()  throws Throwable  {
      DERInteger dERInteger0 = new DERInteger(0);
      assertNotNull(dERInteger0);
      
      boolean boolean0 = dERInteger0.asn1Equals((DERObject) dERInteger0);
      assertEquals("0", dERInteger0.toString());
      assertEquals(true, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      DERInteger dERInteger0 = new DERInteger(0);
      assertNotNull(dERInteger0);
      
      DERIA5String dERIA5String0 = new DERIA5String("GMT", true);
      boolean boolean0 = dERInteger0.asn1Equals((DERObject) dERIA5String0);
      assertEquals(false, boolean0);
      assertEquals("0", dERInteger0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      DERInteger dERInteger0 = new DERInteger(0);
      assertNotNull(dERInteger0);
      
      BigInteger bigInteger0 = dERInteger0.getPositiveValue();
      assertNotNull(bigInteger0);
      
      BigInteger bigInteger1 = bigInteger0.setBit(21);
      DERInteger dERInteger1 = new DERInteger(bigInteger1);
      boolean boolean0 = dERInteger0.asn1Equals((DERObject) dERInteger1);
      assertEquals(false, boolean0);
      assertEquals(2097152, bigInteger1.intValue());
  }

  @Test
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      DERInteger dERInteger0 = new DERInteger(0);
      assertNotNull(dERInteger0);
      
      byteArray0[0] = (byte) (-125);
      DERInteger dERInteger1 = new DERInteger(byteArray0);
      boolean boolean0 = dERInteger0.asn1Equals((DERObject) dERInteger1);
      assertFalse(dERInteger1.equals(dERInteger0));
      assertEquals(false, boolean0);
      assertEquals("0", dERInteger0.toString());
  }
}
