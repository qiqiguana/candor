/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import org.bouncycastle.asn1.BERNull;
import org.bouncycastle.asn1.BERTaggedObject;
import org.bouncycastle.asn1.DERApplicationSpecific;
import org.bouncycastle.asn1.DERBoolean;
import org.bouncycastle.asn1.DERConstructedSequence;
import org.bouncycastle.asn1.DEREncodable;
import org.bouncycastle.asn1.DERInteger;
import org.bouncycastle.asn1.DERNull;
import org.bouncycastle.asn1.DERObject;
import org.bouncycastle.asn1.DERUnknownTag;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DERApplicationSpecificEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      DERApplicationSpecific dERApplicationSpecific0 = new DERApplicationSpecific((-1273), byteArray0);
      int int0 = dERApplicationSpecific0.hashCode();
      assertEquals((-1273), int0);
  }

  @Test
  public void test1()  throws Throwable  {
      DERNull dERNull0 = new DERNull();
      DERApplicationSpecific dERApplicationSpecific0 = new DERApplicationSpecific(11, (DEREncodable) dERNull0);
      assertNotNull(dERApplicationSpecific0);
      
      boolean boolean0 = dERApplicationSpecific0.asn1Equals((DERObject) dERApplicationSpecific0);
      assertEquals(true, boolean0);
      assertEquals(43, dERApplicationSpecific0.getApplicationTag());
  }

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      DERApplicationSpecific dERApplicationSpecific0 = new DERApplicationSpecific((-1273), byteArray0);
      DERUnknownTag dERUnknownTag0 = (DERUnknownTag)dERApplicationSpecific0.getObject((-1273));
      assertEquals(7, dERUnknownTag0.getTag());
      assertEquals(-1273, dERApplicationSpecific0.getApplicationTag());
      assertNotNull(dERUnknownTag0);
  }

  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      DERApplicationSpecific dERApplicationSpecific0 = new DERApplicationSpecific((-1273), byteArray0);
      DERObject dERObject0 = dERApplicationSpecific0.getObject();
      assertEquals(-1273, dERApplicationSpecific0.getApplicationTag());
      assertNotNull(dERObject0);
  }

  @Test
  public void test4()  throws Throwable  {
      BERNull bERNull0 = new BERNull();
      BERTaggedObject bERTaggedObject0 = new BERTaggedObject(false, 56298, (DEREncodable) bERNull0);
      DERApplicationSpecific dERApplicationSpecific0 = null;
      try {
        dERApplicationSpecific0 = new DERApplicationSpecific(56298, (DEREncodable) bERTaggedObject0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * unsupported tag number
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      DERInteger dERInteger0 = new DERInteger(21);
      DERApplicationSpecific dERApplicationSpecific0 = new DERApplicationSpecific(false, 21, (DEREncodable) dERInteger0);
      assertNotNull(dERApplicationSpecific0);
      
      boolean boolean0 = dERApplicationSpecific0.isConstructed();
      assertEquals(false, boolean0);
      assertEquals(21, dERApplicationSpecific0.getApplicationTag());
  }

  @Test
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      DERApplicationSpecific dERApplicationSpecific0 = new DERApplicationSpecific(46, byteArray0);
      boolean boolean0 = dERApplicationSpecific0.isConstructed();
      assertEquals(true, boolean0);
      assertEquals(46, dERApplicationSpecific0.getApplicationTag());
  }

  @Test
  public void test7()  throws Throwable  {
      DERBoolean dERBoolean0 = DERBoolean.getInstance(true);
      DERApplicationSpecific dERApplicationSpecific0 = new DERApplicationSpecific(true, 16, (DEREncodable) dERBoolean0);
      assertNotNull(dERApplicationSpecific0);
      
      try {
        dERApplicationSpecific0.getObject(16);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * unsupported tag number
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      DERApplicationSpecific dERApplicationSpecific0 = new DERApplicationSpecific((-1389), byteArray0);
      DERConstructedSequence dERConstructedSequence0 = new DERConstructedSequence();
      boolean boolean0 = dERApplicationSpecific0.asn1Equals((DERObject) dERConstructedSequence0);
      assertEquals(false, boolean0);
      assertEquals(-1389, dERApplicationSpecific0.getApplicationTag());
  }

  @Test
  public void test9()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      DERApplicationSpecific dERApplicationSpecific0 = new DERApplicationSpecific((-1389), byteArray0);
      DERApplicationSpecific dERApplicationSpecific1 = new DERApplicationSpecific(false, (int) (byte)0, (DEREncodable) dERApplicationSpecific0);
      assertNotNull(dERApplicationSpecific1);
      
      boolean boolean0 = dERApplicationSpecific0.equals((Object) dERApplicationSpecific1);
      assertEquals(-1389, dERApplicationSpecific0.getApplicationTag());
      assertEquals(false, boolean0);
      assertEquals(0, dERApplicationSpecific1.getApplicationTag());
  }

  @Test
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      DERApplicationSpecific dERApplicationSpecific0 = new DERApplicationSpecific((-1389), byteArray0);
      byte[] byteArray1 = new byte[2];
      DERApplicationSpecific dERApplicationSpecific1 = new DERApplicationSpecific((-1389), byteArray1);
      boolean boolean0 = dERApplicationSpecific1.asn1Equals((DERObject) dERApplicationSpecific0);
      assertEquals(-1389, dERApplicationSpecific0.getApplicationTag());
      assertEquals(false, boolean0);
  }
}
