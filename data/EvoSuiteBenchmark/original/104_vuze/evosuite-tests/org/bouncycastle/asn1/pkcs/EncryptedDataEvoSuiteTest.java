/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1.pkcs;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.bouncycastle.asn1.ASN1OctetString;
import org.bouncycastle.asn1.ASN1Sequence;
import org.bouncycastle.asn1.BERConstructedSequence;
import org.bouncycastle.asn1.BERSequence;
import org.bouncycastle.asn1.DEREncodable;
import org.bouncycastle.asn1.DERInteger;
import org.bouncycastle.asn1.DERObjectIdentifier;
import org.bouncycastle.asn1.pkcs.EncryptedData;
import org.bouncycastle.asn1.x509.AlgorithmIdentifier;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class EncryptedDataEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AlgorithmIdentifier algorithmIdentifier0 = new AlgorithmIdentifier((DERObjectIdentifier) null, (DEREncodable) null);
      EncryptedData encryptedData0 = new EncryptedData((DERObjectIdentifier) null, algorithmIdentifier0, (DEREncodable) null);
      DERObjectIdentifier dERObjectIdentifier0 = encryptedData0.getContentType();
      assertNull(dERObjectIdentifier0);
  }

  @Test
  public void test1()  throws Throwable  {
      AlgorithmIdentifier algorithmIdentifier0 = new AlgorithmIdentifier((DERObjectIdentifier) null, (DEREncodable) null);
      EncryptedData encryptedData0 = new EncryptedData((DERObjectIdentifier) null, algorithmIdentifier0, (DEREncodable) null);
      BERSequence bERSequence0 = (BERSequence)encryptedData0.getDERObject();
      assertEquals("[0, [null, [null, null], [0]null]]", bERSequence0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      AlgorithmIdentifier algorithmIdentifier0 = new AlgorithmIdentifier((DERObjectIdentifier) null, (DEREncodable) null);
      EncryptedData encryptedData0 = new EncryptedData((DERObjectIdentifier) null, algorithmIdentifier0, (DEREncodable) null);
      AlgorithmIdentifier algorithmIdentifier1 = encryptedData0.getEncryptionAlgorithm();
      assertNotNull(algorithmIdentifier1);
  }

  @Test
  public void test3()  throws Throwable  {
      BERConstructedSequence bERConstructedSequence0 = new BERConstructedSequence();
      // Undeclared exception!
      try {
        EncryptedData.getInstance((Object) bERConstructedSequence0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 0 >= 0
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try {
        EncryptedData.getInstance((Object) "DER");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * unknown object in factory
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      DERInteger dERInteger0 = new DERInteger(byteArray0);
      BERSequence bERSequence0 = new BERSequence((DEREncodable) dERInteger0);
      EncryptedData encryptedData0 = null;
      try {
        encryptedData0 = new EncryptedData((ASN1Sequence) bERSequence0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 1 >= 1
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)88;
      DERInteger dERInteger0 = new DERInteger(byteArray0);
      BERSequence bERSequence0 = new BERSequence((DEREncodable) dERInteger0);
      EncryptedData encryptedData0 = null;
      try {
        encryptedData0 = new EncryptedData((ASN1Sequence) bERSequence0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * sequence not version 0
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      AlgorithmIdentifier algorithmIdentifier0 = new AlgorithmIdentifier((DERObjectIdentifier) null, (DEREncodable) null);
      EncryptedData encryptedData0 = new EncryptedData((DERObjectIdentifier) null, algorithmIdentifier0, (DEREncodable) null);
      BERSequence bERSequence0 = new BERSequence();
      encryptedData0.data = (org.bouncycastle.asn1.ASN1Sequence) bERSequence0;
      ASN1OctetString aSN1OctetString0 = encryptedData0.getContent();
      assertNull(aSN1OctetString0);
  }

  @Test
  public void test8()  throws Throwable  {
      AlgorithmIdentifier algorithmIdentifier0 = new AlgorithmIdentifier((DERObjectIdentifier) null, (DEREncodable) null);
      EncryptedData encryptedData0 = new EncryptedData((DERObjectIdentifier) null, algorithmIdentifier0, (DEREncodable) null);
      ASN1OctetString aSN1OctetString0 = encryptedData0.getContent();
      assertNull(aSN1OctetString0);
  }
}
