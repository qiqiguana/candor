/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.io.OutputStream;
import java.math.BigInteger;
import org.bouncycastle.asn1.BEROutputStream;
import org.bouncycastle.asn1.BERSet;
import org.bouncycastle.asn1.BERTaggedObject;
import org.bouncycastle.asn1.DERBoolean;
import org.bouncycastle.asn1.DEREncodable;
import org.bouncycastle.asn1.DEREnumerated;
import org.bouncycastle.asn1.DERGeneralizedTime;
import org.bouncycastle.asn1.DEROctetString;
import org.bouncycastle.asn1.DEROutputStream;
import org.bouncycastle.asn1.DERSequence;
import org.bouncycastle.asn1.DERTaggedObject;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BERTaggedObjectEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BERTaggedObject bERTaggedObject0 = new BERTaggedObject(0);
      BEROutputStream bEROutputStream0 = new BEROutputStream((OutputStream) null);
      // Undeclared exception!
      try {
        bERTaggedObject0.encode((DEROutputStream) bEROutputStream0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      DEREnumerated dEREnumerated0 = new DEREnumerated(bigInteger0);
      BERSet bERSet0 = new BERSet((DEREncodable) dEREnumerated0);
      BERTaggedObject bERTaggedObject0 = new BERTaggedObject(false, (-6), (DEREncodable) bERSet0);
      byte[] byteArray0 = bERTaggedObject0.getEncoded("");
      assertNotNull(byteArray0);
  }

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      DERGeneralizedTime dERGeneralizedTime0 = new DERGeneralizedTime(byteArray0);
      BERTaggedObject bERTaggedObject0 = new BERTaggedObject(14, (DEREncodable) dERGeneralizedTime0);
      byte[] byteArray1 = bERTaggedObject0.getEncoded("");
      assertNotSame(byteArray0, byteArray1);
  }

  @Test
  public void test3()  throws Throwable  {
      BERTaggedObject bERTaggedObject0 = new BERTaggedObject(1600);
      byte[] byteArray0 = bERTaggedObject0.getDEREncoded();
      assertNotNull(byteArray0);
  }

  @Test
  public void test4()  throws Throwable  {
      BERTaggedObject bERTaggedObject0 = new BERTaggedObject(1600);
      bERTaggedObject0.empty = true;
      byte[] byteArray0 = bERTaggedObject0.getEncoded("");
      assertNotNull(byteArray0);
  }

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      DEROctetString dEROctetString0 = new DEROctetString(byteArray0);
      BERTaggedObject bERTaggedObject0 = new BERTaggedObject(false, (-6), (DEREncodable) dEROctetString0);
      byte[] byteArray1 = bERTaggedObject0.getEncoded("");
      assertNotSame(byteArray0, byteArray1);
  }

  @Test
  public void test6()  throws Throwable  {
      DERTaggedObject dERTaggedObject0 = new DERTaggedObject(14);
      DERSequence dERSequence0 = new DERSequence((DEREncodable) dERTaggedObject0);
      BERTaggedObject bERTaggedObject0 = new BERTaggedObject(false, 14, (DEREncodable) dERSequence0);
      byte[] byteArray0 = bERTaggedObject0.getEncoded("");
      assertNotNull(byteArray0);
  }

  @Test
  public void test7()  throws Throwable  {
      DERBoolean dERBoolean0 = new DERBoolean(false);
      BERTaggedObject bERTaggedObject0 = new BERTaggedObject(false, 1585, (DEREncodable) dERBoolean0);
      // Undeclared exception!
      try {
        bERTaggedObject0.getEncoded();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * not implemented: org.bouncycastle.asn1.DERBoolean
         */
      }
  }
}
