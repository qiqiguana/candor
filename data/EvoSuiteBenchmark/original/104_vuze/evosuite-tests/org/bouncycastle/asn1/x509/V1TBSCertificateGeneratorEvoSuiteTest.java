/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1.x509;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.math.BigInteger;
import java.util.Date;
import java.util.Vector;
import org.bouncycastle.asn1.DEREncodable;
import org.bouncycastle.asn1.DERInteger;
import org.bouncycastle.asn1.DERObjectIdentifier;
import org.bouncycastle.asn1.DERUTCTime;
import org.bouncycastle.asn1.x509.AlgorithmIdentifier;
import org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;
import org.bouncycastle.asn1.x509.TBSCertificateStructure;
import org.bouncycastle.asn1.x509.Time;
import org.bouncycastle.asn1.x509.V1TBSCertificateGenerator;
import org.bouncycastle.asn1.x509.X509DefaultEntryConverter;
import org.bouncycastle.asn1.x509.X509Name;
import org.bouncycastle.asn1.x509.X509NameEntryConverter;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class V1TBSCertificateGeneratorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      V1TBSCertificateGenerator v1TBSCertificateGenerator0 = new V1TBSCertificateGenerator();
      v1TBSCertificateGenerator0.setEndDate((Time) null);
  }

  @Test
  public void test1()  throws Throwable  {
      V1TBSCertificateGenerator v1TBSCertificateGenerator0 = new V1TBSCertificateGenerator();
      // Undeclared exception!
      try {
        v1TBSCertificateGenerator0.setStartDate((DERUTCTime) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * unknown object passed to Time
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      V1TBSCertificateGenerator v1TBSCertificateGenerator0 = new V1TBSCertificateGenerator();
      Date date0 = new Date();
      DERUTCTime dERUTCTime0 = new DERUTCTime(date0);
      v1TBSCertificateGenerator0.setEndDate(dERUTCTime0);
      assertEquals(1372729732354L, date0.getTime());
  }

  @Test
  public void test3()  throws Throwable  {
      V1TBSCertificateGenerator v1TBSCertificateGenerator0 = new V1TBSCertificateGenerator();
      // Undeclared exception!
      try {
        v1TBSCertificateGenerator0.generateTBSCertificate();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * not all mandatory fields set in V1 TBScertificate generator
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      V1TBSCertificateGenerator v1TBSCertificateGenerator0 = new V1TBSCertificateGenerator();
      BigInteger bigInteger0 = BigInteger.ZERO;
      DERInteger dERInteger0 = new DERInteger(bigInteger0);
      v1TBSCertificateGenerator0.setSerialNumber(dERInteger0);
      // Undeclared exception!
      try {
        v1TBSCertificateGenerator0.generateTBSCertificate();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * not all mandatory fields set in V1 TBScertificate generator
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      V1TBSCertificateGenerator v1TBSCertificateGenerator0 = new V1TBSCertificateGenerator();
      BigInteger bigInteger0 = BigInteger.ZERO;
      DERInteger dERInteger0 = new DERInteger(bigInteger0);
      DERObjectIdentifier dERObjectIdentifier0 = X509Name.EmailAddress;
      AlgorithmIdentifier algorithmIdentifier0 = new AlgorithmIdentifier(dERObjectIdentifier0);
      v1TBSCertificateGenerator0.setSignature(algorithmIdentifier0);
      v1TBSCertificateGenerator0.setSerialNumber(dERInteger0);
      // Undeclared exception!
      try {
        v1TBSCertificateGenerator0.generateTBSCertificate();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * not all mandatory fields set in V1 TBScertificate generator
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      V1TBSCertificateGenerator v1TBSCertificateGenerator0 = new V1TBSCertificateGenerator();
      BigInteger bigInteger0 = BigInteger.ZERO;
      Vector<String> vector0 = new Vector<String>();
      X509DefaultEntryConverter x509DefaultEntryConverter0 = new X509DefaultEntryConverter();
      DERObjectIdentifier dERObjectIdentifier0 = X509Name.UnstructuredAddress;
      X509Name x509Name0 = new X509Name((Vector) vector0, (Vector) vector0, (X509NameEntryConverter) x509DefaultEntryConverter0);
      v1TBSCertificateGenerator0.setIssuer(x509Name0);
      DERInteger dERInteger0 = new DERInteger(bigInteger0);
      AlgorithmIdentifier algorithmIdentifier0 = new AlgorithmIdentifier(dERObjectIdentifier0);
      v1TBSCertificateGenerator0.setSignature(algorithmIdentifier0);
      v1TBSCertificateGenerator0.setSerialNumber(dERInteger0);
      // Undeclared exception!
      try {
        v1TBSCertificateGenerator0.generateTBSCertificate();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * not all mandatory fields set in V1 TBScertificate generator
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      V1TBSCertificateGenerator v1TBSCertificateGenerator0 = new V1TBSCertificateGenerator();
      BigInteger bigInteger0 = BigInteger.ZERO;
      Vector<String> vector0 = new Vector<String>();
      X509DefaultEntryConverter x509DefaultEntryConverter0 = new X509DefaultEntryConverter();
      DERObjectIdentifier dERObjectIdentifier0 = X509Name.UnstructuredAddress;
      X509Name x509Name0 = new X509Name((Vector) vector0, (Vector) vector0, (X509NameEntryConverter) x509DefaultEntryConverter0);
      Date date0 = new Date();
      Time time0 = new Time(date0);
      v1TBSCertificateGenerator0.setStartDate(time0);
      v1TBSCertificateGenerator0.setIssuer(x509Name0);
      DERInteger dERInteger0 = new DERInteger(bigInteger0);
      AlgorithmIdentifier algorithmIdentifier0 = new AlgorithmIdentifier(dERObjectIdentifier0);
      v1TBSCertificateGenerator0.setSignature(algorithmIdentifier0);
      v1TBSCertificateGenerator0.setSerialNumber(dERInteger0);
      // Undeclared exception!
      try {
        v1TBSCertificateGenerator0.generateTBSCertificate();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * not all mandatory fields set in V1 TBScertificate generator
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      V1TBSCertificateGenerator v1TBSCertificateGenerator0 = new V1TBSCertificateGenerator();
      BigInteger bigInteger0 = BigInteger.ZERO;
      Vector<String> vector0 = new Vector<String>();
      X509DefaultEntryConverter x509DefaultEntryConverter0 = new X509DefaultEntryConverter();
      DERObjectIdentifier dERObjectIdentifier0 = X509Name.UnstructuredAddress;
      X509Name x509Name0 = new X509Name((Vector) vector0, (Vector) vector0, (X509NameEntryConverter) x509DefaultEntryConverter0);
      Date date0 = new Date();
      Time time0 = new Time(date0);
      v1TBSCertificateGenerator0.endDate = (org.bouncycastle.asn1.x509.Time) time0;
      v1TBSCertificateGenerator0.setStartDate(time0);
      v1TBSCertificateGenerator0.setIssuer(x509Name0);
      DERInteger dERInteger0 = new DERInteger(bigInteger0);
      AlgorithmIdentifier algorithmIdentifier0 = new AlgorithmIdentifier(dERObjectIdentifier0);
      v1TBSCertificateGenerator0.setSignature(algorithmIdentifier0);
      v1TBSCertificateGenerator0.setSerialNumber(dERInteger0);
      // Undeclared exception!
      try {
        v1TBSCertificateGenerator0.generateTBSCertificate();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * not all mandatory fields set in V1 TBScertificate generator
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      V1TBSCertificateGenerator v1TBSCertificateGenerator0 = new V1TBSCertificateGenerator();
      BigInteger bigInteger0 = BigInteger.ZERO;
      Vector<String> vector0 = new Vector<String>();
      X509DefaultEntryConverter x509DefaultEntryConverter0 = new X509DefaultEntryConverter();
      DERObjectIdentifier dERObjectIdentifier0 = X509Name.UnstructuredAddress;
      X509Name x509Name0 = new X509Name((Vector) vector0, (Vector) vector0, (X509NameEntryConverter) x509DefaultEntryConverter0);
      Date date0 = new Date();
      Time time0 = new Time(date0);
      v1TBSCertificateGenerator0.endDate = (org.bouncycastle.asn1.x509.Time) time0;
      v1TBSCertificateGenerator0.setStartDate(time0);
      v1TBSCertificateGenerator0.setSubject(x509Name0);
      v1TBSCertificateGenerator0.setIssuer(x509Name0);
      DERInteger dERInteger0 = new DERInteger(bigInteger0);
      AlgorithmIdentifier algorithmIdentifier0 = new AlgorithmIdentifier(dERObjectIdentifier0);
      v1TBSCertificateGenerator0.setSignature(algorithmIdentifier0);
      v1TBSCertificateGenerator0.setSerialNumber(dERInteger0);
      // Undeclared exception!
      try {
        v1TBSCertificateGenerator0.generateTBSCertificate();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * not all mandatory fields set in V1 TBScertificate generator
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      V1TBSCertificateGenerator v1TBSCertificateGenerator0 = new V1TBSCertificateGenerator();
      BigInteger bigInteger0 = BigInteger.ZERO;
      Vector<String> vector0 = new Vector<String>();
      X509DefaultEntryConverter x509DefaultEntryConverter0 = new X509DefaultEntryConverter();
      DERObjectIdentifier dERObjectIdentifier0 = X509Name.UnstructuredAddress;
      X509Name x509Name0 = new X509Name((Vector) vector0, (Vector) vector0, (X509NameEntryConverter) x509DefaultEntryConverter0);
      Date date0 = new Date();
      SubjectPublicKeyInfo subjectPublicKeyInfo0 = new SubjectPublicKeyInfo((AlgorithmIdentifier) null, (DEREncodable) null);
      v1TBSCertificateGenerator0.setSubjectPublicKeyInfo(subjectPublicKeyInfo0);
      Time time0 = new Time(date0);
      v1TBSCertificateGenerator0.endDate = (org.bouncycastle.asn1.x509.Time) time0;
      v1TBSCertificateGenerator0.setStartDate(time0);
      v1TBSCertificateGenerator0.setSubject(x509Name0);
      v1TBSCertificateGenerator0.setIssuer(x509Name0);
      DERInteger dERInteger0 = new DERInteger(bigInteger0);
      AlgorithmIdentifier algorithmIdentifier0 = new AlgorithmIdentifier(dERObjectIdentifier0);
      v1TBSCertificateGenerator0.setSignature(algorithmIdentifier0);
      v1TBSCertificateGenerator0.setSerialNumber(dERInteger0);
      TBSCertificateStructure tBSCertificateStructure0 = v1TBSCertificateGenerator0.generateTBSCertificate();
      assertEquals(1, tBSCertificateStructure0.getVersion());
  }
}
