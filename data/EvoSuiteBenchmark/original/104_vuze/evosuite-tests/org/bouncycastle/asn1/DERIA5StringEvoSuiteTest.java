/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Vector;
import org.bouncycastle.asn1.ASN1TaggedObject;
import org.bouncycastle.asn1.BERConstructedOctetString;
import org.bouncycastle.asn1.BERTaggedObject;
import org.bouncycastle.asn1.DEREncodable;
import org.bouncycastle.asn1.DERIA5String;
import org.bouncycastle.asn1.DERObject;
import org.bouncycastle.asn1.DEROctetString;
import org.bouncycastle.asn1.DERTaggedObject;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DERIA5StringEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DERIA5String dERIA5String0 = new DERIA5String("7PpA&.yeu{dy8])++");
      int int0 = dERIA5String0.hashCode();
      assertEquals(770989963, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      DERIA5String dERIA5String0 = new DERIA5String("7PpA&.yeu{dy8])++");
      DERTaggedObject dERTaggedObject0 = new DERTaggedObject(506, (DEREncodable) dERIA5String0);
      DERIA5String dERIA5String1 = DERIA5String.getInstance((ASN1TaggedObject) dERTaggedObject0, false);
      assertEquals("[506]7PpA&.yeu{dy8])++", dERTaggedObject0.toString());
      assertNotNull(dERIA5String1);
      assertEquals("7PpA&.yeu{dy8])++", dERIA5String0.getString());
  }

  @Test
  public void test2()  throws Throwable  {
      DERIA5String dERIA5String0 = new DERIA5String("7PpA&.yeu{dy8])++");
      byte[] byteArray0 = dERIA5String0.getDEREncoded();
      assertEquals("7PpA&.yeu{dy8])++", dERIA5String0.toString());
      assertNotNull(byteArray0);
      assertEquals("7PpA&.yeu{dy8])++", dERIA5String0.getString());
  }

  @Test
  public void test3()  throws Throwable  {
      DERIA5String dERIA5String0 = new DERIA5String("7PpA&.yeu{dy8])++");
      String string0 = dERIA5String0.toString();
      assertEquals("7PpA&.yeu{dy8])++", string0);
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      BERTaggedObject bERTaggedObject0 = new BERTaggedObject((-1995), (DEREncodable) null);
      DERIA5String dERIA5String0 = DERIA5String.getInstance((Object) bERTaggedObject0);
      assertNull(dERIA5String0);
  }

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      DEROctetString dEROctetString0 = new DEROctetString(byteArray0);
      DERIA5String dERIA5String0 = DERIA5String.getInstance((Object) dEROctetString0);
      assertNotNull(dERIA5String0);
      assertEquals("\u0000", dERIA5String0.getString());
  }

  @Test
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try {
        DERIA5String.getInstance((Object) "BER");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * illegal object in getInstance: java.lang.String
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      DERIA5String dERIA5String0 = new DERIA5String("6`-ZWT6o6q~", true);
      assertNotNull(dERIA5String0);
      
      Vector<Integer> vector0 = new Vector<Integer>();
      BERConstructedOctetString bERConstructedOctetString0 = new BERConstructedOctetString(vector0);
      boolean boolean0 = dERIA5String0.asn1Equals((DERObject) bERConstructedOctetString0);
      assertEquals(false, boolean0);
      assertEquals("6`-ZWT6o6q~", dERIA5String0.getString());
  }

  @Test
  public void test8()  throws Throwable  {
      DERIA5String dERIA5String0 = null;
      try {
        dERIA5String0 = new DERIA5String("!\u001E\u0000\u00DF.\u00AA", true);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * string contains illegal characters
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      DERIA5String dERIA5String0 = new DERIA5String("7PpA&.yeu{dy8])++");
      boolean boolean0 = dERIA5String0.asn1Equals((DERObject) dERIA5String0);
      assertEquals("7PpA&.yeu{dy8])++", dERIA5String0.getString());
      assertEquals(true, boolean0);
  }
}
