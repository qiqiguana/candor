/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.asn1;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import org.bouncycastle.asn1.BERNull;
import org.bouncycastle.asn1.BEROutputStream;
import org.bouncycastle.asn1.BERSet;
import org.bouncycastle.asn1.DEREncodable;
import org.bouncycastle.asn1.DEREncodableVector;
import org.bouncycastle.asn1.DEROutputStream;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BERSetEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BERNull bERNull0 = BERNull.INSTANCE;
      BERSet bERSet0 = new BERSet((DEREncodable) bERNull0);
      assertEquals(1, bERSet0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      DEREncodableVector dEREncodableVector0 = new DEREncodableVector();
      BERSet bERSet0 = new BERSet(dEREncodableVector0);
      byte[] byteArray0 = bERSet0.getDEREncoded();
      assertNotNull(byteArray0);
  }

  @Test
  public void test2()  throws Throwable  {
      BERSet bERSet0 = new BERSet();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      BEROutputStream bEROutputStream0 = new BEROutputStream((OutputStream) pipedOutputStream0);
      try {
        bERSet0.encode((DEROutputStream) bEROutputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * Pipe not connected
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      DEREncodableVector dEREncodableVector0 = new DEREncodableVector();
      dEREncodableVector0.add((DEREncodable) null);
      BERSet bERSet0 = new BERSet(dEREncodableVector0, true);
      byte[] byteArray0 = bERSet0.getEncoded();
      assertNotNull(byteArray0);
  }
}
