/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.crypto;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.math.BigInteger;
import org.bouncycastle.crypto.BlockCipher;
import org.bouncycastle.crypto.BufferedBlockCipher;
import org.bouncycastle.crypto.CipherParameters;
import org.bouncycastle.crypto.DataLengthException;
import org.bouncycastle.crypto.InvalidCipherTextException;
import org.bouncycastle.crypto.params.DSAParameters;
import org.bouncycastle.math.ec.ECConstants;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BufferedBlockCipherEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BufferedBlockCipher bufferedBlockCipher0 = new BufferedBlockCipher();
      BlockCipher blockCipher0 = bufferedBlockCipher0.getUnderlyingCipher();
      assertNull(blockCipher0);
  }

  @Test
  public void test1()  throws Throwable  {
      BufferedBlockCipher bufferedBlockCipher0 = new BufferedBlockCipher();
      BigInteger bigInteger0 = ECConstants.FOUR;
      DSAParameters dSAParameters0 = new DSAParameters(bigInteger0, bigInteger0, bigInteger0);
      // Undeclared exception!
      try {
        bufferedBlockCipher0.init(true, (CipherParameters) dSAParameters0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      BufferedBlockCipher bufferedBlockCipher0 = new BufferedBlockCipher();
      byte[] byteArray0 = new byte[10];
      // Undeclared exception!
      try {
        bufferedBlockCipher0.processBytes(byteArray0, (int) (byte)24, (int) (byte)0, byteArray0, (int) (byte)0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      BufferedBlockCipher bufferedBlockCipher0 = new BufferedBlockCipher();
      // Undeclared exception!
      try {
        bufferedBlockCipher0.getUpdateOutputSize((-1336));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      BufferedBlockCipher bufferedBlockCipher0 = new BufferedBlockCipher();
      // Undeclared exception!
      try {
        bufferedBlockCipher0.getOutputSize((-342));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      BufferedBlockCipher bufferedBlockCipher0 = new BufferedBlockCipher();
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try {
        bufferedBlockCipher0.processBytes(byteArray0, (int) (byte) (-1), (int) (byte) (-1), byteArray0, (int) (byte)0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Can't have a negative input length!
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      BufferedBlockCipher bufferedBlockCipher0 = new BufferedBlockCipher();
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try {
        bufferedBlockCipher0.doFinal(byteArray0, (-1098));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      BufferedBlockCipher bufferedBlockCipher0 = new BufferedBlockCipher();
      byte[] byteArray0 = new byte[9];
      try {
        bufferedBlockCipher0.doFinal(byteArray0, (int) (byte)43);
        fail("Expecting exception: DataLengthException");
      } catch(DataLengthException e) {
        /*
         * output buffer too short for doFinal()
         */
      }
  }
}
