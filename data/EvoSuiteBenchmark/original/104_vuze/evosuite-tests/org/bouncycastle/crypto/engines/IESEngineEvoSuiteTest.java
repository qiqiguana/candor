/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.crypto.engines;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.bouncycastle.crypto.BasicAgreement;
import org.bouncycastle.crypto.BufferedBlockCipher;
import org.bouncycastle.crypto.CipherParameters;
import org.bouncycastle.crypto.DerivationFunction;
import org.bouncycastle.crypto.Digest;
import org.bouncycastle.crypto.Mac;
import org.bouncycastle.crypto.agreement.ECDHBasicAgreement;
import org.bouncycastle.crypto.digests.RIPEMD320Digest;
import org.bouncycastle.crypto.engines.IESEngine;
import org.bouncycastle.crypto.generators.KDF2BytesGenerator;
import org.bouncycastle.crypto.macs.HMac;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class IESEngineEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ECDHBasicAgreement eCDHBasicAgreement0 = new ECDHBasicAgreement();
      RIPEMD320Digest rIPEMD320Digest0 = new RIPEMD320Digest();
      KDF2BytesGenerator kDF2BytesGenerator0 = new KDF2BytesGenerator((Digest) rIPEMD320Digest0);
      HMac hMac0 = new HMac((Digest) rIPEMD320Digest0);
      IESEngine iESEngine0 = new IESEngine((BasicAgreement) eCDHBasicAgreement0, (DerivationFunction) kDF2BytesGenerator0, (Mac) hMac0, (BufferedBlockCipher) null);
      assertEquals(false, iESEngine0.forEncryption);
  }

  @Test
  public void test1()  throws Throwable  {
      ECDHBasicAgreement eCDHBasicAgreement0 = new ECDHBasicAgreement();
      RIPEMD320Digest rIPEMD320Digest0 = new RIPEMD320Digest();
      KDF2BytesGenerator kDF2BytesGenerator0 = new KDF2BytesGenerator((Digest) rIPEMD320Digest0);
      HMac hMac0 = new HMac((Digest) rIPEMD320Digest0);
      IESEngine iESEngine0 = new IESEngine((BasicAgreement) eCDHBasicAgreement0, (DerivationFunction) kDF2BytesGenerator0, (Mac) hMac0);
      iESEngine0.init(false, (CipherParameters) null, (CipherParameters) null, (CipherParameters) null);
      assertEquals(false, iESEngine0.forEncryption);
  }
}
