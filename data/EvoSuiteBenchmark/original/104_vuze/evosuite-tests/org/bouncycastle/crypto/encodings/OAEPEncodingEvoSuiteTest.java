/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.crypto.encodings;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.math.BigInteger;
import org.bouncycastle.crypto.AsymmetricBlockCipher;
import org.bouncycastle.crypto.CipherParameters;
import org.bouncycastle.crypto.DataLengthException;
import org.bouncycastle.crypto.Digest;
import org.bouncycastle.crypto.InvalidCipherTextException;
import org.bouncycastle.crypto.digests.MD5Digest;
import org.bouncycastle.crypto.digests.RIPEMD128Digest;
import org.bouncycastle.crypto.encodings.OAEPEncoding;
import org.bouncycastle.crypto.engines.RSAEngine;
import org.bouncycastle.crypto.params.ParametersWithRandom;
import org.bouncycastle.crypto.params.RSAKeyParameters;
import org.bouncycastle.math.ec.ECConstants;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class OAEPEncodingEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RSAEngine rSAEngine0 = new RSAEngine();
      MD5Digest mD5Digest0 = new MD5Digest();
      OAEPEncoding oAEPEncoding0 = new OAEPEncoding((AsymmetricBlockCipher) rSAEngine0, (Digest) mD5Digest0);
      RSAEngine rSAEngine1 = (RSAEngine)oAEPEncoding0.getUnderlyingCipher();
      assertSame(rSAEngine0, rSAEngine1);
  }

  @Test
  public void test1()  throws Throwable  {
      RSAEngine rSAEngine0 = new RSAEngine();
      MD5Digest mD5Digest0 = new MD5Digest();
      OAEPEncoding oAEPEncoding0 = new OAEPEncoding((AsymmetricBlockCipher) rSAEngine0, (Digest) mD5Digest0);
      assertNotNull(oAEPEncoding0);
      
      BigInteger bigInteger0 = ECConstants.ZERO;
      RSAKeyParameters rSAKeyParameters0 = new RSAKeyParameters(false, bigInteger0, bigInteger0);
      oAEPEncoding0.init(false, (CipherParameters) rSAKeyParameters0);
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try {
        oAEPEncoding0.encodeBlock(byteArray0, (int) (byte)0, (int) (byte)0);
        fail("Expecting exception: DataLengthException");
      } catch(DataLengthException e) {
        /*
         * input too large for RSA cipher.
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      RSAEngine rSAEngine0 = new RSAEngine();
      MD5Digest mD5Digest0 = new MD5Digest();
      OAEPEncoding oAEPEncoding0 = new OAEPEncoding((AsymmetricBlockCipher) rSAEngine0, (Digest) mD5Digest0);
      assertNotNull(oAEPEncoding0);
      
      OAEPEncoding oAEPEncoding1 = new OAEPEncoding((AsymmetricBlockCipher) oAEPEncoding0);
      BigInteger bigInteger0 = ECConstants.ZERO;
      RSAKeyParameters rSAKeyParameters0 = new RSAKeyParameters(true, bigInteger0, bigInteger0);
      oAEPEncoding0.init(true, (CipherParameters) rSAKeyParameters0);
      int int0 = oAEPEncoding1.getOutputBlockSize();
      assertEquals((-41), int0);
      assertEquals(0, oAEPEncoding0.getOutputBlockSize());
  }

  @Test
  public void test3()  throws Throwable  {
      RIPEMD128Digest rIPEMD128Digest0 = new RIPEMD128Digest();
      byte[] byteArray0 = new byte[8];
      OAEPEncoding oAEPEncoding0 = new OAEPEncoding((AsymmetricBlockCipher) null, (Digest) rIPEMD128Digest0, byteArray0);
      ParametersWithRandom parametersWithRandom0 = new ParametersWithRandom((CipherParameters) null);
      // Undeclared exception!
      try {
        oAEPEncoding0.init(false, (CipherParameters) parametersWithRandom0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      RSAEngine rSAEngine0 = new RSAEngine();
      MD5Digest mD5Digest0 = new MD5Digest();
      OAEPEncoding oAEPEncoding0 = new OAEPEncoding((AsymmetricBlockCipher) rSAEngine0, (Digest) mD5Digest0);
      assertNotNull(oAEPEncoding0);
      
      BigInteger bigInteger0 = ECConstants.ZERO;
      RSAKeyParameters rSAKeyParameters0 = new RSAKeyParameters(true, bigInteger0, bigInteger0);
      oAEPEncoding0.init(true, (CipherParameters) rSAKeyParameters0);
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try {
        oAEPEncoding0.processBlock(byteArray0, (int) (byte) (-5), (int) (byte)0);
        fail("Expecting exception: NegativeArraySizeException");
      } catch(NegativeArraySizeException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      RSAEngine rSAEngine0 = new RSAEngine();
      MD5Digest mD5Digest0 = new MD5Digest();
      OAEPEncoding oAEPEncoding0 = new OAEPEncoding((AsymmetricBlockCipher) rSAEngine0, (Digest) mD5Digest0);
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try {
        oAEPEncoding0.processBlock(byteArray0, (int) (byte) (-5), (int) (byte)0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
