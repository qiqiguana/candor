/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.crypto;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.math.BigInteger;
import org.bouncycastle.crypto.AsymmetricCipherKeyPair;
import org.bouncycastle.crypto.CipherParameters;
import org.bouncycastle.crypto.params.ElGamalParameters;
import org.bouncycastle.math.ec.ECConstants;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AsymmetricCipherKeyPairEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BigInteger bigInteger0 = ECConstants.THREE;
      ElGamalParameters elGamalParameters0 = new ElGamalParameters(bigInteger0, bigInteger0);
      AsymmetricCipherKeyPair asymmetricCipherKeyPair0 = new AsymmetricCipherKeyPair((CipherParameters) elGamalParameters0, (CipherParameters) elGamalParameters0);
      ElGamalParameters elGamalParameters1 = (ElGamalParameters)asymmetricCipherKeyPair0.getPublic();
      assertSame(elGamalParameters1, elGamalParameters0);
  }

  @Test
  public void test1()  throws Throwable  {
      BigInteger bigInteger0 = ECConstants.THREE;
      ElGamalParameters elGamalParameters0 = new ElGamalParameters(bigInteger0, bigInteger0);
      AsymmetricCipherKeyPair asymmetricCipherKeyPair0 = new AsymmetricCipherKeyPair((CipherParameters) elGamalParameters0, (CipherParameters) elGamalParameters0);
      ElGamalParameters elGamalParameters1 = (ElGamalParameters)asymmetricCipherKeyPair0.getPrivate();
      assertSame(elGamalParameters1, elGamalParameters0);
  }
}
