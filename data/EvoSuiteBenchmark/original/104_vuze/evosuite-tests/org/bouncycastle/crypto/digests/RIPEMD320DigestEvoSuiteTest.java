/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.crypto.digests;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.bouncycastle.crypto.digests.RIPEMD320Digest;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RIPEMD320DigestEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RIPEMD320Digest rIPEMD320Digest0 = new RIPEMD320Digest();
      byte[] byteArray0 = new byte[49];
      // Undeclared exception!
      try {
        rIPEMD320Digest0.doFinal(byteArray0, (int) (byte)34);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 49
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      RIPEMD320Digest rIPEMD320Digest0 = new RIPEMD320Digest();
      assertNotNull(rIPEMD320Digest0);
      
      int int0 = rIPEMD320Digest0.getDigestSize();
      assertEquals(40, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      RIPEMD320Digest rIPEMD320Digest0 = new RIPEMD320Digest();
      assertNotNull(rIPEMD320Digest0);
      
      String string0 = rIPEMD320Digest0.getAlgorithmName();
      assertEquals("RIPEMD320", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      RIPEMD320Digest rIPEMD320Digest0 = new RIPEMD320Digest();
      RIPEMD320Digest rIPEMD320Digest1 = new RIPEMD320Digest(rIPEMD320Digest0);
      assertEquals("RIPEMD320", rIPEMD320Digest1.getAlgorithmName());
  }

  @Test
  public void test4()  throws Throwable  {
      RIPEMD320Digest rIPEMD320Digest0 = new RIPEMD320Digest();
      byte[] byteArray0 = new byte[35];
      rIPEMD320Digest0.processWord(byteArray0, 14);
      rIPEMD320Digest0.processWord(byteArray0, (int) (byte)17);
      rIPEMD320Digest0.processWord(byteArray0, 14);
      rIPEMD320Digest0.update(byteArray0, 14, 14);
      rIPEMD320Digest0.update(byteArray0, (int) (byte)17, 14);
      rIPEMD320Digest0.processWord(byteArray0, (int) (byte)0);
      rIPEMD320Digest0.processWord(byteArray0, (int) (byte)17);
      rIPEMD320Digest0.processWord(byteArray0, (int) (byte)0);
      rIPEMD320Digest0.processWord(byteArray0, (int) (byte)0);
      rIPEMD320Digest0.finish();
      assertEquals(40, rIPEMD320Digest0.getDigestSize());
  }
}
