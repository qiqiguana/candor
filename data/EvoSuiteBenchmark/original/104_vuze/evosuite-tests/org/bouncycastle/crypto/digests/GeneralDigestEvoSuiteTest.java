/*
 * This file was automatically generated by EvoSuite
 */

package org.bouncycastle.crypto.digests;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.bouncycastle.crypto.digests.MD4Digest;
import org.bouncycastle.crypto.digests.MD5Digest;
import org.bouncycastle.crypto.digests.RIPEMD128Digest;
import org.bouncycastle.crypto.digests.RIPEMD256Digest;
import org.bouncycastle.crypto.digests.RIPEMD320Digest;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class GeneralDigestEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MD4Digest mD4Digest0 = new MD4Digest();
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try {
        mD4Digest0.update(byteArray0, (int) (byte)51, (int) (byte)38);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 51
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      MD5Digest mD5Digest0 = new MD5Digest();
      MD5Digest mD5Digest1 = new MD5Digest(mD5Digest0);
      assertNotSame(mD5Digest1, mD5Digest0);
  }

  @Test
  public void test2()  throws Throwable  {
      RIPEMD256Digest rIPEMD256Digest0 = new RIPEMD256Digest();
      rIPEMD256Digest0.finish();
      assertEquals(32, rIPEMD256Digest0.getDigestSize());
  }

  @Test
  public void test3()  throws Throwable  {
      RIPEMD128Digest rIPEMD128Digest0 = new RIPEMD128Digest();
      byte[] byteArray0 = new byte[9];
      rIPEMD128Digest0.update((byte) (-110));
      rIPEMD128Digest0.update(byteArray0, (int) (byte)57, (-481));
      assertEquals("RIPEMD128", rIPEMD128Digest0.getAlgorithmName());
  }

  @Test
  public void test4()  throws Throwable  {
      RIPEMD320Digest rIPEMD320Digest0 = new RIPEMD320Digest();
      rIPEMD320Digest0.update((byte)98);
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try {
        rIPEMD320Digest0.update(byteArray0, (-839), 473);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      RIPEMD256Digest rIPEMD256Digest0 = new RIPEMD256Digest();
      rIPEMD256Digest0.update(byteArray0, (int) (byte)1, (int) (byte)1);
      assertEquals("RIPEMD256", rIPEMD256Digest0.getAlgorithmName());
  }
}
