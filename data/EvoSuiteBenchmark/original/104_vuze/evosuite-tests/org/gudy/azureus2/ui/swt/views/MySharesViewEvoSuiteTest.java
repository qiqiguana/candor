/*
 * This file was automatically generated by EvoSuite
 */

package org.gudy.azureus2.ui.swt.views;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.ui.common.ToolBarItem;
import com.aelitis.azureus.ui.common.table.TableRowCore;
import com.aelitis.azureus.ui.mdi.MdiEntry;
import com.aelitis.azureus.ui.mdi.MultipleDocumentInterface;
import com.aelitis.azureus.ui.swt.mdi.TabbedEntry;
import com.aelitis.azureus.ui.swt.mdi.TabbedMDI;
import com.aelitis.azureus.ui.swt.skin.SWTSkin;
import com.aelitis.azureus.ui.swt.toolbar.ToolBarItemSO;
import com.aelitis.azureus.ui.swt.views.skin.ToolBarView;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.eclipse.swt.widgets.Menu;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.gudy.azureus2.plugins.sharing.ShareResource;
import org.gudy.azureus2.ui.swt.views.MySharesView;
import org.gudy.azureus2.ui.swt.views.table.TableViewSWT;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MySharesViewEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      MySharesView mySharesView0 = new MySharesView();
      // Undeclared exception!
      try {
        mySharesView0.tableViewInitialized();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class org.eclipse.swt.dnd.DropTarget
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      MySharesView mySharesView0 = new MySharesView();
      mySharesView0.tableViewDestroyed();
      assertEquals("MySharesView", mySharesView0.getPropertiesPrefix());
  }

  @Test
  public void test2()  throws Throwable  {
      MySharesView mySharesView0 = new MySharesView();
      assertNotNull(mySharesView0);
      
      TableViewSWT<Object> tableViewSWT0 = mySharesView0.initYourTableView();
      assertNotNull(tableViewSWT0);
      assertEquals("MyShares", tableViewSWT0.getTableID());
      assertEquals(false, tableViewSWT0.isSingleSelection());
  }

  @Test
  public void test3()  throws Throwable  {
      MySharesView mySharesView0 = new MySharesView();
      mySharesView0.resourceAdded((ShareResource) null);
      assertEquals("My Shares", mySharesView0.getFullTitle());
  }

  @Test
  public void test4()  throws Throwable  {
      MySharesView mySharesView0 = new MySharesView();
      mySharesView0.resourceDeleted((ShareResource) null);
      assertEquals("MySharesView", mySharesView0.getPropertiesPrefix());
  }

  @Test
  public void test5()  throws Throwable  {
      MySharesView mySharesView0 = new MySharesView();
      mySharesView0.addThisColumnSubMenu(", socket: open = ", (Menu) null);
      assertEquals("My Shares", mySharesView0.getFullTitle());
  }

  @Test
  public void test6()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          MySharesView mySharesView0 = new MySharesView();
          assertNotNull(mySharesView0);
          
          TabbedMDI tabbedMDI0 = new TabbedMDI();
          TabbedEntry tabbedEntry0 = new TabbedEntry(tabbedMDI0, (SWTSkin) null, (String) null);
          mySharesView0.titleInfoLinked((MultipleDocumentInterface) tabbedMDI0, (MdiEntry) tabbedEntry0);
          assertEquals(true, tabbedEntry0.hasDropListeners());
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test7()  throws Throwable  {
      MySharesView mySharesView0 = new MySharesView();
      mySharesView0.resourceModified((ShareResource) null, (ShareResource) null);
      assertEquals("My Shares", mySharesView0.getFullTitle());
  }

  @Test
  public void test8()  throws Throwable  {
      MySharesView mySharesView0 = new MySharesView();
      TableRowCore[] tableRowCoreArray0 = new TableRowCore[2];
      mySharesView0.defaultSelected(tableRowCoreArray0, 0);
      assertEquals("MySharesView", mySharesView0.getPropertiesPrefix());
  }

  @Test
  public void test9()  throws Throwable  {
      MySharesView mySharesView0 = new MySharesView();
      mySharesView0.mouseEnter((TableRowCore) null);
      assertEquals("MySharesView", mySharesView0.getPropertiesPrefix());
  }

  @Test
  public void test10()  throws Throwable  {
      MySharesView mySharesView0 = new MySharesView();
      assertNotNull(mySharesView0);
      
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "stop", "stop");
      boolean boolean0 = mySharesView0.toolBarItemActivated((ToolBarItem) toolBarItemSO0, (long) (-1), (Object) "BT_SUGGEST_PIECE");
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      MySharesView mySharesView0 = new MySharesView();
      mySharesView0.reportProgress(1);
      assertEquals("My Shares", mySharesView0.getFullTitle());
  }

  @Test
  public void test12()  throws Throwable  {
      MySharesView mySharesView0 = new MySharesView();
      Object object0 = mySharesView0.getTitleInfoProperty((-380));
      assertNull(object0);
  }

  @Test
  public void test13()  throws Throwable  {
      MySharesView mySharesView0 = new MySharesView();
      mySharesView0.mouseExit((TableRowCore) null);
      assertEquals("My Shares", mySharesView0.getFullTitle());
  }

  @Test
  public void test14()  throws Throwable  {
      MySharesView mySharesView0 = new MySharesView();
      mySharesView0.reportCurrentTask("s");
      assertEquals("My Shares", mySharesView0.getFullTitle());
  }

  @Test
  public void test15()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          MySharesView mySharesView0 = new MySharesView();
          assertNotNull(mySharesView0);
          
          TabbedMDI tabbedMDI0 = new TabbedMDI();
          TabbedEntry tabbedEntry0 = new TabbedEntry(tabbedMDI0, (SWTSkin) null, (String) null);
          boolean boolean0 = mySharesView0.share((Object) tabbedEntry0);
          assertEquals(false, boolean0);
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test16()  throws Throwable  {
      MySharesView mySharesView0 = new MySharesView();
      assertNotNull(mySharesView0);
      
      boolean boolean0 = mySharesView0.share((Object) "BT_KEEP_ALIVE");
      assertEquals(false, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      MySharesView mySharesView0 = new MySharesView();
      mySharesView0.tableRefresh();
      assertEquals("MySharesView", mySharesView0.getPropertiesPrefix());
  }

  @Test
  public void test18()  throws Throwable  {
      MySharesView mySharesView0 = new MySharesView();
      assertNotNull(mySharesView0);
      
      HashMap<String, Long> hashMap0 = new HashMap<String, Long>();
      mySharesView0.refreshToolBarItems((Map<String, Long>) hashMap0);
      assertEquals("{editcolumns=1}", hashMap0.toString());
      assertEquals(1, hashMap0.size());
  }

  @Test
  public void test19()  throws Throwable  {
      MySharesView mySharesView0 = new MySharesView();
      assertNotNull(mySharesView0);
      
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "", "");
      boolean boolean0 = mySharesView0.toolBarItemActivated((ToolBarItem) toolBarItemSO0, 1966L, (Object) "bytes");
      assertEquals(false, boolean0);
  }

  @Test
  public void test20()  throws Throwable  {
      MySharesView mySharesView0 = new MySharesView();
      TableRowCore[] tableRowCoreArray0 = new TableRowCore[3];
      mySharesView0.deselected(tableRowCoreArray0);
      assertEquals("MySharesView", mySharesView0.getPropertiesPrefix());
  }

  @Test
  public void test21()  throws Throwable  {
      MySharesView mySharesView0 = new MySharesView();
      mySharesView0.focusChanged((TableRowCore) null);
      assertEquals("MySharesView", mySharesView0.getPropertiesPrefix());
  }

  @Test
  public void test22()  throws Throwable  {
      MySharesView mySharesView0 = new MySharesView();
      TableRowCore[] tableRowCoreArray0 = new TableRowCore[2];
      mySharesView0.selected(tableRowCoreArray0);
      assertEquals("MySharesView", mySharesView0.getPropertiesPrefix());
  }
}
