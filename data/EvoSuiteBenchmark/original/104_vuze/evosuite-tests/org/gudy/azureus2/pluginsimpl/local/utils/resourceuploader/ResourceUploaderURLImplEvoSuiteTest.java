/*
 * This file was automatically generated by EvoSuite
 */

package org.gudy.azureus2.pluginsimpl.local.utils.resourceuploader;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.apple.net.protocol.archiveresource.Handler;
import java.io.File;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.PasswordAuthentication;
import java.net.URI;
import java.net.URL;
import java.net.URLStreamHandler;
import org.gudy.azureus2.plugins.utils.resourcedownloader.ResourceDownloaderException;
import org.gudy.azureus2.plugins.utils.resourceuploader.ResourceUploaderException;
import org.gudy.azureus2.pluginsimpl.local.utils.resourceuploader.ResourceUploaderURLImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ResourceUploaderURLImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ResourceUploaderURLImpl resourceUploaderURLImpl0 = new ResourceUploaderURLImpl((URL) null, (InputStream) null, "URL_}", "URL_}");
      Object object0 = resourceUploaderURLImpl0.getProperty("URL_}");
      assertNull(object0);
  }

  @Test
  public void test1()  throws Throwable  {
      ResourceUploaderURLImpl resourceUploaderURLImpl0 = new ResourceUploaderURLImpl((URL) null, (InputStream) null, "URL_}", "URL_}");
      resourceUploaderURLImpl0.setAuthenticationOutcome("URL_}", (URL) null, false);
  }

  @Test
  public void test2()  throws Throwable  {
      ResourceUploaderURLImpl resourceUploaderURLImpl0 = new ResourceUploaderURLImpl((URL) null, (InputStream) null, "URL_}", "URL_}");
      resourceUploaderURLImpl0.clearPasswords();
  }

  @Test
  public void test3()  throws Throwable  {
      ResourceUploaderURLImpl resourceUploaderURLImpl0 = new ResourceUploaderURLImpl((URL) null, (InputStream) null, "URL_}", "URL_}");
      resourceUploaderURLImpl0.setProperty("URL_}", (Object) null);
      resourceUploaderURLImpl0.setRequestProperties((HttpURLConnection) null, false);
  }

  @Test
  public void test4()  throws Throwable  {
      File file0 = new File("8zI=ywRQteX", "8zI=ywRQteX");
      URI uRI0 = file0.toURI();
      URL uRL0 = uRI0.toURL();
      ResourceUploaderURLImpl resourceUploaderURLImpl0 = new ResourceUploaderURLImpl(uRL0, (InputStream) null, (String) null, (String) null);
      try {
        resourceUploaderURLImpl0.upload();
        fail("Expecting exception: ResourceUploaderException");
      } catch(ResourceUploaderException e) {
        /*
         * Unexpected error
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      File file0 = new File((String) null, "8zI=ywRQteX");
      URI uRI0 = file0.toURI();
      URL uRL0 = uRI0.toURL();
      ResourceUploaderURLImpl resourceUploaderURLImpl0 = new ResourceUploaderURLImpl(uRL0, (InputStream) null, "8zI=ywRQteX", (String) null);
      try {
        resourceUploaderURLImpl0.upload();
        fail("Expecting exception: ResourceUploaderException");
      } catch(ResourceUploaderException e) {
        /*
         * Unexpected error
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Handler handler0 = new Handler();
      URL uRL0 = new URL("", "", 628, "", (URLStreamHandler) handler0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(628);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) pipedInputStream0);
      ResourceUploaderURLImpl resourceUploaderURLImpl0 = new ResourceUploaderURLImpl(uRL0, (InputStream) pushbackInputStream0, "", "");
      try {
        resourceUploaderURLImpl0.upload();
        fail("Expecting exception: ResourceUploaderException");
      } catch(ResourceUploaderException e) {
        /*
         * Exception while parsing URL '://:628':no protocol: ://:628
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      ResourceUploaderURLImpl resourceUploaderURLImpl0 = new ResourceUploaderURLImpl((URL) null, (InputStream) null, "URL_}", "URL_}");
      resourceUploaderURLImpl0.setProperty("", (Object) null);
      resourceUploaderURLImpl0.setRequestProperties((HttpURLConnection) null, false);
  }

  @Test
  public void test8()  throws Throwable  {
      File file0 = new File("8zI=ywRQteX", "8zI=ywRQteX");
      URI uRI0 = file0.toURI();
      URL uRL0 = uRI0.toURL();
      ResourceUploaderURLImpl resourceUploaderURLImpl0 = new ResourceUploaderURLImpl(uRL0, (InputStream) null, (String) null, (String) null);
      PasswordAuthentication passwordAuthentication0 = resourceUploaderURLImpl0.getAuthentication((String) null, uRL0);
      assertNull(passwordAuthentication0);
  }

  @Test
  public void test9()  throws Throwable  {
      File file0 = new File((String) null, "8zI=ywRQteX");
      URI uRI0 = file0.toURI();
      URL uRL0 = uRI0.toURL();
      ResourceUploaderURLImpl resourceUploaderURLImpl0 = new ResourceUploaderURLImpl(uRL0, (InputStream) null, "8zI=ywRQteX", (String) null);
      PasswordAuthentication passwordAuthentication0 = resourceUploaderURLImpl0.getAuthentication((String) null, uRL0);
      assertNull(passwordAuthentication0);
  }

  @Test
  public void test10()  throws Throwable  {
      ResourceUploaderURLImpl resourceUploaderURLImpl0 = new ResourceUploaderURLImpl((URL) null, (InputStream) null, "URL_}", "URL_}");
      PasswordAuthentication passwordAuthentication0 = resourceUploaderURLImpl0.getAuthentication("URL_}", (URL) null);
      assertEquals("URL_}", passwordAuthentication0.getUserName());
  }
}
