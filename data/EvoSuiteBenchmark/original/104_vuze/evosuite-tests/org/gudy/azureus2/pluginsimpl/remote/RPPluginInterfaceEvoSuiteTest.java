/*
 * This file was automatically generated by EvoSuite
 */

package org.gudy.azureus2.pluginsimpl.remote;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.plugins.sharing.hoster.ShareHosterPlugin;
import org.gudy.azureus2.plugins.PluginEventListener;
import org.gudy.azureus2.plugins.PluginException;
import org.gudy.azureus2.plugins.PluginInterface;
import org.gudy.azureus2.plugins.PluginListener;
import org.gudy.azureus2.plugins.sharing.ShareException;
import org.gudy.azureus2.plugins.ui.config.ConfigSection;
import org.gudy.azureus2.pluginsimpl.local.ui.UIManagerImpl;
import org.gudy.azureus2.pluginsimpl.remote.RPException;
import org.gudy.azureus2.pluginsimpl.remote.RPObject;
import org.gudy.azureus2.pluginsimpl.remote.RPPluginInterface;
import org.gudy.azureus2.pluginsimpl.remote.RPRequest;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RPPluginInterfaceEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getIPC();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getPlatformManager();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getTorrentManager();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      UIManagerImpl uIManagerImpl0 = null;
      try {
        uIManagerImpl0 = new UIManagerImpl((PluginInterface) rPPluginInterface0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getDownloadManager();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.isSigned();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getTracker();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getUtilities();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.removeEventListener((PluginEventListener) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getPerUserPluginDirectoryName();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getPluginVersion();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.isMandatory();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      String string0 = rPPluginInterface0.getAzureusName();
      assertEquals(2L, rPPluginInterface0._connection_id);
      assertEquals("Azureus", string0);
  }

  @Test
  public void test13()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.isUnloadable();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getPluginState();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test15()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getShareManager();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test16()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.isBuiltIn();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test17()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getIPFilter();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test18()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getPluginID();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test19()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getPluginConfigUIFactory();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test20()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      rPPluginInterface0.getConfigSections();
      assertEquals(2L, rPPluginInterface0._connection_id);
      assertEquals(2L, rPPluginInterface0._getConectionId());
  }

  @Test
  public void test21()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getMainlineDHTManager();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test22()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.removeConfigSection((ConfigSection) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test23()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getClientIDManager();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test24()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.isDisabled();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test25()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getPluginManager();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test26()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      Class<?> class0 = RPPluginInterface.class;
      // Undeclared exception!
      try {
        rPPluginInterface0.getLocalPluginInterface((Class) class0, (String) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test27()  throws Throwable  {
      RPRequest rPRequest0 = new RPRequest();
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      rPRequest0.createRemotePluginInterface((PluginInterface) rPPluginInterface0);
      rPRequest0.createRemotePluginInterface((PluginInterface) rPPluginInterface0);
      assertEquals(3L, rPPluginInterface0._connection_id);
      assertEquals(3L, rPPluginInterface0._getConectionId());
  }

  @Test
  public void test28()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getPluginDirectoryName();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test29()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getUpdateManager();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test30()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      rPPluginInterface0.getApplicationName();
      assertEquals("4.7.2.1_CVS", rPPluginInterface0.getAzureusVersion());
      assertEquals("Azureus", rPPluginInterface0.getAzureusName());
      assertEquals(4L, rPPluginInterface0._connection_id);
      assertEquals(4L, rPPluginInterface0._getConectionId());
  }

  @Test
  public void test31()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getPlugin();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test32()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      String string0 = rPPluginInterface0.getAzureusVersion();
      assertEquals((-1L), rPPluginInterface0._connection_id);
      assertEquals("4.7.2.1_CVS", string0);
  }

  @Test
  public void test33()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      long long0 = rPPluginInterface0._getNextRequestId();
      assertEquals(2L, rPPluginInterface0._getNextRequestId());
      assertEquals(1L, long0);
  }

  @Test
  public void test34()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.addConfigSection((ConfigSection) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test35()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.isInitialisationThread();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test36()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.removeListener((PluginListener) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test37()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      ShareHosterPlugin shareHosterPlugin0 = new ShareHosterPlugin();
      // Undeclared exception!
      try {
        rPPluginInterface0.addListener((PluginListener) shareHosterPlugin0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test38()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getLogger();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test39()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getShortCuts();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test40()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      long long0 = rPPluginInterface0._getConectionId();
      assertEquals((-4L), long0);
  }

  @Test
  public void test41()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.uninstall();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test42()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getUIManager();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test43()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getPluginClassLoader();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test44()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getMessageManager();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test45()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getConnectionManager();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test46()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getPluginProperties();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test47()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.setDisabled(false);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test48()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.isShared();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test49()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.unload();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test50()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getPluginName();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test51()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.isOperational();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test52()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      // Undeclared exception!
      try {
        rPPluginInterface0.getDistributedDatabase();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test53()  throws Throwable  {
      RPPluginInterface rPPluginInterface0 = new RPPluginInterface((PluginInterface) null);
      RPRequest rPRequest0 = new RPRequest((RPObject) null, "4.7.2.1_CVS", (Object[]) null);
      // Undeclared exception!
      try {
        rPPluginInterface0._process(rPRequest0);
        fail("Expecting exception: RPException");
      } catch(RPException e) {
        /*
         * Unknown method: 4.7.2.1_CVS
         */
      }
  }
}
