/*
 * This file was automatically generated by EvoSuite
 */

package org.gudy.azureus2.ui.swt.mainwindow;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.eclipse.swt.graphics.Point;
import org.eclipse.swt.widgets.Shell;
import org.gudy.azureus2.core3.logging.LogAlert;
import org.gudy.azureus2.ui.swt.mainwindow.SystemWarningWindow;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SystemWarningWindowEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LogAlert logAlert0 = new LogAlert(true, 1, (String) null);
      SystemWarningWindow systemWarningWindow0 = null;
      try {
        systemWarningWindow0 = new SystemWarningWindow(logAlert0, (Point) null, (Shell) null, (-1));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      LogAlert logAlert0 = new LogAlert(false, 2, (String) null);
      SystemWarningWindow systemWarningWindow0 = null;
      try {
        systemWarningWindow0 = new SystemWarningWindow(logAlert0, (Point) null, (Shell) null, 2);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      LogAlert logAlert0 = new LogAlert((Object) "Views.plugins.", false, "Views.plugins.", (Throwable) null);
      SystemWarningWindow systemWarningWindow0 = new SystemWarningWindow(logAlert0, (Point) null, (Shell) null, (-1));
      assertEquals(0, systemWarningWindow0.numWarningWindowsOpen);
  }

  @Test
  public void test3()  throws Throwable  {
      LogAlert logAlert0 = new LogAlert(false, (-21), "ZL</UJ", (Throwable) null);
      logAlert0.details = "ZL</UJ";
      SystemWarningWindow systemWarningWindow0 = new SystemWarningWindow(logAlert0, (Point) null, (Shell) null, (-1));
      assertEquals(0, systemWarningWindow0.numWarningWindowsOpen);
  }
}
