/*
 * This file was automatically generated by EvoSuite
 */

package org.gudy.azureus2.pluginsimpl.remote;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.gudy.azureus2.plugins.PluginInterface;
import org.gudy.azureus2.plugins.logging.LoggerChannel;
import org.gudy.azureus2.pluginsimpl.remote.RPObject;
import org.gudy.azureus2.pluginsimpl.remote.RPPluginInterface;
import org.gudy.azureus2.pluginsimpl.remote.RPRequest;
import org.gudy.azureus2.pluginsimpl.remote.rpexceptions.RPObjectNoLongerExistsException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RPRequestEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RPRequest rPRequest0 = new RPRequest();
      RPObject rPObject0 = rPRequest0.getObject();
      assertNull(rPObject0);
  }

  @Test
  public void test1()  throws Throwable  {
      RPRequest rPRequest0 = new RPRequest();
      Object[] objectArray0 = rPRequest0.getParams();
      assertNull(objectArray0);
  }

  @Test
  public void test2()  throws Throwable  {
      RPRequest rPRequest0 = new RPRequest();
      PluginInterface pluginInterface0 = rPRequest0.getPluginInterface();
      assertNull(pluginInterface0);
  }

  @Test
  public void test3()  throws Throwable  {
      RPRequest rPRequest0 = new RPRequest();
      rPRequest0.setRPLoggerChannel((LoggerChannel) null);
      assertNull(rPRequest0.getClientIP());
  }

  @Test
  public void test4()  throws Throwable  {
      RPRequest rPRequest0 = new RPRequest();
      String string0 = rPRequest0.getClientIP();
      assertNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      RPRequest rPRequest0 = new RPRequest();
      LoggerChannel loggerChannel0 = rPRequest0.getRPLoggerChannel();
      assertNull(loggerChannel0);
  }

  @Test
  public void test6()  throws Throwable  {
      RPRequest rPRequest0 = new RPRequest();
      String string0 = rPRequest0.getString();
      assertEquals("object=null, method=null, params=null", string0);
      assertNotNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      RPRequest rPRequest0 = new RPRequest();
      String string0 = rPRequest0.getMethod();
      assertNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      RPRequest rPRequest0 = new RPRequest();
      rPRequest0.setPluginInterface((PluginInterface) null);
      assertNull(rPRequest0.getClientIP());
  }

  @Test
  public void test9()  throws Throwable  {
      RPRequest rPRequest0 = new RPRequest();
      // Undeclared exception!
      RPPluginInterface rPPluginInterface0 = null;
      try {
        rPPluginInterface0 = rPRequest0.createRemotePluginInterface((PluginInterface) null);
        fail("Expecting exception: RPObjectNoLongerExistsException");
      } catch(RPObjectNoLongerExistsException e) {
        /*
         * Object no longer exists
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      RPRequest rPRequest0 = new RPRequest();
      long long0 = rPRequest0.getRequestId();
      assertEquals(0L, long0);
  }

  @Test
  public void test11()  throws Throwable  {
      RPRequest rPRequest0 = new RPRequest();
      rPRequest0.setClientIP("Y");
      assertEquals(0L, rPRequest0.request_id);
  }

  @Test
  public void test12()  throws Throwable  {
      RPRequest rPRequest0 = new RPRequest();
      long long0 = rPRequest0.getConnectionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test13()  throws Throwable  {
      RPRequest rPRequest0 = new RPRequest((RPObject) null, (String) null, (Object[]) null);
      assertEquals(0L, rPRequest0.request_id);
  }

  @Test
  public void test14()  throws Throwable  {
      RPObject rPObject0 = new RPObject();
      Object[] objectArray0 = new Object[3];
      RPRequest rPRequest0 = null;
      try {
        rPRequest0 = new RPRequest(rPObject0, "PlusFTUX sourceRef is now ", objectArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
