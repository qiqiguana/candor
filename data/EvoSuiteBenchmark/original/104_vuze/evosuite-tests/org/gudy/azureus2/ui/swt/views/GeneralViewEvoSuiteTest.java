/*
 * This file was automatically generated by EvoSuite
 */

package org.gudy.azureus2.ui.swt.views;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.ui.common.ToolBarItem;
import com.aelitis.azureus.ui.swt.toolbar.ToolBarItemSO;
import com.aelitis.azureus.ui.swt.views.skin.ToolBarView;
import java.util.Map;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.eclipse.swt.widgets.Composite;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.gudy.azureus2.ui.swt.plugins.UISWTView;
import org.gudy.azureus2.ui.swt.plugins.UISWTViewEvent;
import org.gudy.azureus2.ui.swt.plugins.UISWTViewEventListener;
import org.gudy.azureus2.ui.swt.pluginsimpl.UISWTViewEventImpl;
import org.gudy.azureus2.ui.swt.pluginsimpl.UISWTViewImpl;
import org.gudy.azureus2.ui.swt.views.GeneralView;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class GeneralViewEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      GeneralView generalView0 = new GeneralView();
      UISWTViewEventImpl uISWTViewEventImpl0 = new UISWTViewEventImpl((UISWTView) null, 6, (Object) "AZ_SESSION_BITFIELD");
      // Undeclared exception!
      try {
        generalView0.eventOccurred((UISWTViewEvent) uISWTViewEventImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      GeneralView generalView0 = new GeneralView();
      // Undeclared exception!
      try {
        generalView0.initialize((Composite) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Argument cannot be null
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      GeneralView generalView0 = new GeneralView();
      // Undeclared exception!
      try {
        generalView0.refreshToolBarItems((Map<String, Long>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      GeneralView generalView0 = new GeneralView();
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "qENMry`qBxgy", true);
      boolean boolean0 = generalView0.toolBarItemActivated((ToolBarItem) toolBarItemSO0, (long) 0, (Object) "BT_HAVE piece #0");
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      GeneralView generalView0 = new GeneralView();
      generalView0.parameterChanged("==>{u");
      assertEquals(0, generalView0.loopFactor);
  }

  @Test
  public void test5()  throws Throwable  {
      GeneralView generalView0 = new GeneralView();
      generalView0.dataSourceChanged((Object) null);
      assertEquals(0, generalView0.loopFactor);
  }

  @Test
  public void test6()  throws Throwable  {
      GeneralView generalView0 = new GeneralView();
      generalView0.refresh();
      assertEquals(0, generalView0.loopFactor);
  }

  @Test
  public void test7()  throws Throwable  {
      GeneralView generalView0 = new GeneralView();
      generalView0.delete();
      assertEquals(0, generalView0.loopFactor);
  }

  @Test
  public void test8()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          GeneralView generalView0 = new GeneralView();
          UISWTViewImpl uISWTViewImpl0 = new UISWTViewImpl("==>{u", "==>{u", (UISWTViewEventListener) generalView0, (Object) "Max Downloads");
          assertNotNull(uISWTViewImpl0);
          assertEquals("General", uISWTViewImpl0.getFullTitle());
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test9()  throws Throwable  {
      GeneralView generalView0 = new GeneralView();
      UISWTViewEventImpl uISWTViewEventImpl0 = new UISWTViewEventImpl((UISWTView) null, (-770), (Object) "AZ_SESSION_BITFIELD");
      boolean boolean0 = generalView0.eventOccurred((UISWTViewEvent) uISWTViewEventImpl0);
      assertEquals(true, boolean0);
  }
}
