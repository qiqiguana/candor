/*
 * This file was automatically generated by EvoSuite
 */

package org.gudy.azureus2.pluginsimpl.remote;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.List;
import java.util.Map;
import org.gudy.azureus2.plugins.PluginConfig;
import org.gudy.azureus2.plugins.PluginInterface;
import org.gudy.azureus2.pluginsimpl.local.PluginConfigImpl;
import org.gudy.azureus2.pluginsimpl.local.ui.config.StringListParameterImpl;
import org.gudy.azureus2.pluginsimpl.remote.RPException;
import org.gudy.azureus2.pluginsimpl.remote.RPObject;
import org.gudy.azureus2.pluginsimpl.remote.RPPluginConfig;
import org.gudy.azureus2.pluginsimpl.remote.RPRequest;
import org.gudy.azureus2.pluginsimpl.remote.RPRequestDispatcher;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RPPluginConfigEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, (String) null);
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      rPPluginConfig0.setPluginConfigKeyPrefix((String) null);
      assertEquals(1L, rPPluginConfig0._getOID());
  }

  @Test
  public void test1()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "Q(Ug<-Ij!u");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      int[] intArray0 = new int[2];
      // Undeclared exception!
      try {
        rPPluginConfig0.getPluginColorParameter("Q(Ug<-Ij!u", intArray0, false);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "getPluginIntParameter[String,int]");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getPluginStringListParameter("getPluginIntParameter[String,int]");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "no_xcode");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.setCoreFloatParameter("org.eclipse.swt.internal.isActive", (-774.88947F));
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "DragTrackingHandler");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      int[] intArray0 = new int[5];
      // Undeclared exception!
      try {
        rPPluginConfig0.getCoreColorParameter("DragTrackingHandler", intArray0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, (String) null);
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getUnsafeBooleanParameter((String) null, false);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, (String) null);
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getBooleanParameter((String) null, true);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try {
        rPPluginConfig0.setByteParameter("", byteArray0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "Y+gUOF)");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getUnsafeFloatParameter("Y+gUOF)");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "R>");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getCoreFloatParameter("R>");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "%0f7>r!VJmcVdy");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getCoreLongParameter("%0f7>r!VJmcVdy", (long) rPPluginConfig0._object_id);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, (String) null);
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.setUnsafeStringParameter((String) null, (String) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, (String) null);
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.setCoreStringParameter((String) null, (String) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "=");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.hasPluginParameter("=");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, (String) null);
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getFloatParameter((String) null, (float) 0L);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test15()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "PEPeerTransportProtocol:Req");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.setCoreLongParameter("tracker", (long) rPPluginConfig0._object_id);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test16()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "!g[m;^~");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try {
        rPPluginConfig0.setUnsafeByteParameter("!g[m;^~", byteArray0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test17()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, (String) null);
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.setPluginParameter((String) null, 11272192, true);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.removePluginParameter("");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test19()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "R&|(sbe_,`nllg-w1U(");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try {
        rPPluginConfig0.getUnsafeByteParameter("R&|(sbe_,`nllg-w1U(", byteArray0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test20()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "Ai:6lKG");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getCoreColorParameter("Ai:6lKG");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test21()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getPluginMapParameter("", (Map) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test22()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, " m~IlP");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      int[] intArray0 = new int[2];
      // Undeclared exception!
      try {
        rPPluginConfig0.setPluginColorParameter(" m~IlP", intArray0, false);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test23()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, (String) null);
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getPluginBooleanParameter((String) null, false);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test24()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "KfM[F<r&&@gD|?@");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.setIntParameter("KfM[F<r&&@gD|?@", (-1433));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test25()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "@%1rZ0L");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.setLongParameter("@%1rZ0L", 850L);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test26()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "object=");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try {
        rPPluginConfig0.setCoreByteParameter("object=", byteArray0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test27()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, (String) null);
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getCoreByteParameter((String) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test28()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "MyTorrentsView.filter.tooltip");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getPluginParameter("q:8S");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test29()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "US");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getPluginIntParameter("mdinfodictsize", 913);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test30()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.setCoreIntParameter("", (int) (byte) (-50));
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test31()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "[eEfy:XqF@^8");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.hasParameter("[eEfy:XqF@^8");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test32()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "=/x3e");
      RPPluginConfig rPPluginConfig0 = (RPPluginConfig)RPPluginConfig.create((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      RPPluginConfig rPPluginConfig1 = null;
      try {
        rPPluginConfig1 = new RPPluginConfig((PluginConfig) rPPluginConfig0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test33()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, (String) null);
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.setCoreBooleanParameter((String) null, false);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test34()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "org.bouncycastle.jce.provider.BrokenJCEBlockCipher$BrokePBEWithSHA1AndDES");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      StringListParameterImpl stringListParameterImpl0 = new StringListParameterImpl(pluginConfigImpl0, "", "org.bouncycastle.jce.provider.BrokenJCEBlockCipher$BrokePBEWithSHA1AndDES", "", rPPluginConfig0.cached_property_names, rPPluginConfig0.cached_property_names);
      List<Object> list0 = stringListParameterImpl0.getEnabledOnSelectionParameters();
      // Undeclared exception!
      try {
        rPPluginConfig0.setPluginListParameter("org.bouncycastle.jce.provider.BrokenJCEBlockCipher$BrokePBEWithSHA1AndDES", (List) list0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test35()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "A");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getUnsafeColorParameter("A");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test36()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getCoreFloatParameter("", 19.173962F);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test37()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "getPluginIntParameter[String,int]");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getPluginByteParameter("getPluginIntParameter[String,int]");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test38()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "LOW");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getPluginStringParameter("LOW", "LOW");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test39()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getStringParameter("", "");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test40()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, (String) null);
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getUnsafeStringParameter((String) null, (String) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test41()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "/e/+GGz:IQc?b7");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.setPluginParameter("]uZfhu5<S;ko", true);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test42()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "1&HQdQ@9i7k}bT");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.setPluginParameter("1&HQdQ@9i7k}bT", "1&HQdQ@9i7k}bT");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test43()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "=/x3e");
      RPPluginConfig rPPluginConfig0 = (RPPluginConfig)RPPluginConfig.create((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      RPPluginConfig rPPluginConfig1 = (RPPluginConfig)RPPluginConfig.create((PluginConfig) pluginConfigImpl0);
      assertEquals(3409L, rPPluginConfig1._getOID());
  }

  @Test
  public void test44()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "Q(U<-Ij!u3");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      int[] intArray0 = new int[4];
      // Undeclared exception!
      try {
        rPPluginConfig0.getUnsafeColorParameter("Q(U<-Ij!u3", intArray0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test45()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "write(fc)");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getByteParameter("write(fc)");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test46()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getUnsafeStringParameter("");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test47()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "Ngb]V}ZXvW>1q");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getUnsafeByteParameter("[LWIP#3pj{X");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test48()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "M+mXf7*$xZiV~S");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.setFloatParameter("M+mXf7*$xZiV~S", (-17.731134F));
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test49()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "GR~p#NK5_ t");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.setPluginParameter("GR~p#NK5_ t", 65535.0F);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test50()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "!*vI_ZxxQ<c");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      int[] intArray0 = new int[6];
      // Undeclared exception!
      try {
        rPPluginConfig0.setCoreColorParameter((String) null, intArray0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test51()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getPluginConfigSource();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test52()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, (String) null);
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getUnsafeLongParameter((String) null, 0L);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test53()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, (String) null);
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.setUnsafeIntParameter((String) null, 1695);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test54()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getPluginColorParameter("");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test55()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getCoreIntParameter("", 0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test56()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      byte[] byteArray0 = new byte[10];
      // Undeclared exception!
      try {
        rPPluginConfig0.getPluginByteParameter("", byteArray0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test57()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "F");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getPluginConfigKeyPrefix();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test58()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "[vc");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getUnsafeParameterList();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test59()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "lt_handshake");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getCoreStringParameter("lt_handshake");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test60()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, (String) null);
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getPluginFloatParameter((String) null, 4.0F);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test61()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, (String) null);
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      int[] intArray0 = new int[3];
      // Undeclared exception!
      try {
        rPPluginConfig0.getPluginColorParameter((String) null, intArray0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test62()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.getPluginLongParameter("", 0L);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test63()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "CORE_PARAM_BOOLEAN_FRIENDLY_HASH_CHECKING");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.setPluginParameter("Y-Zn#1rSeQj'/;l3", (long) rPPluginConfig0._object_id);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test64()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, (String) null);
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.setPluginParameter((String) null, 1422);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test65()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      // Undeclared exception!
      try {
        rPPluginConfig0.setStringParameter((String) null, (String) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * RPObject:: method not supported
         */
      }
  }

  @Test
  public void test66()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, "");
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      rPPluginConfig0._setRemote((RPRequestDispatcher) null);
      assertEquals(5205L, rPPluginConfig0._getOID());
  }

  @Test
  public void test67()  throws Throwable  {
      PluginConfigImpl pluginConfigImpl0 = new PluginConfigImpl((PluginInterface) null, (String) null);
      RPPluginConfig rPPluginConfig0 = new RPPluginConfig((PluginConfig) pluginConfigImpl0);
      assertNotNull(rPPluginConfig0);
      
      RPRequest rPRequest0 = new RPRequest((RPObject) null, "", rPPluginConfig0.cached_property_values);
      // Undeclared exception!
      try {
        rPPluginConfig0._process(rPRequest0);
        fail("Expecting exception: RPException");
      } catch(RPException e) {
        /*
         * Unknown method: 
         */
      }
  }
}
