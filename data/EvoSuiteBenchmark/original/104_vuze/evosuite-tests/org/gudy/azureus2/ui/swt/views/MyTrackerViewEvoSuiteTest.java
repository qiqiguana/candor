/*
 * This file was automatically generated by EvoSuite
 */

package org.gudy.azureus2.ui.swt.views;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.aelitis.azureus.ui.common.ToolBarItem;
import com.aelitis.azureus.ui.common.table.TableRowCore;
import com.aelitis.azureus.ui.swt.toolbar.ToolBarItemSO;
import com.aelitis.azureus.ui.swt.views.skin.ToolBarView;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.swt.widgets.Menu;
import org.gudy.azureus2.core3.category.Category;
import org.gudy.azureus2.core3.category.impl.CategoryImpl;
import org.gudy.azureus2.core3.tracker.host.TRHostTorrent;
import org.gudy.azureus2.ui.swt.views.MyTrackerView;
import org.gudy.azureus2.ui.swt.views.table.TableViewSWT;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MyTrackerViewEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MyTrackerView myTrackerView0 = new MyTrackerView();
      CategoryImpl categoryImpl0 = new CategoryImpl("b|", 0, (Map<String, String>) null);
      myTrackerView0.categoryRemoved((Category) categoryImpl0);
      assertEquals("b|", categoryImpl0.getName());
  }

  @Test
  public void test1()  throws Throwable  {
      MyTrackerView myTrackerView0 = new MyTrackerView();
      CategoryImpl categoryImpl0 = new CategoryImpl("b|", 0, (Map<String, String>) null);
      myTrackerView0.categoryAdded((Category) categoryImpl0);
      assertEquals("My Tracker", myTrackerView0.getFullTitle());
  }

  @Test
  public void test2()  throws Throwable  {
      MyTrackerView myTrackerView0 = new MyTrackerView();
      myTrackerView0.tableViewInitialized();
      assertEquals("My Tracker", myTrackerView0.getFullTitle());
  }

  @Test
  public void test3()  throws Throwable  {
      MyTrackerView myTrackerView0 = new MyTrackerView();
      myTrackerView0.mouseEnter((TableRowCore) null);
      assertEquals("My Tracker", myTrackerView0.getFullTitle());
  }

  @Test
  public void test4()  throws Throwable  {
      MyTrackerView myTrackerView0 = new MyTrackerView();
      myTrackerView0.torrentRemoved((TRHostTorrent) null);
      assertEquals("MyTrackerView", myTrackerView0.getPropertiesPrefix());
  }

  @Test
  public void test5()  throws Throwable  {
      MyTrackerView myTrackerView0 = new MyTrackerView();
      myTrackerView0.categoryChanged((Category) null);
      assertEquals("My Tracker", myTrackerView0.getFullTitle());
  }

  @Test
  public void test6()  throws Throwable  {
      MyTrackerView myTrackerView0 = new MyTrackerView();
      myTrackerView0.addThisColumnSubMenu("Tracker Announcer is sending a stopped Request", (Menu) null);
      assertEquals("My Tracker", myTrackerView0.getFullTitle());
  }

  @Test
  public void test7()  throws Throwable  {
      MyTrackerView myTrackerView0 = new MyTrackerView();
      myTrackerView0.torrentAdded((TRHostTorrent) null);
      assertEquals("My Tracker", myTrackerView0.getFullTitle());
  }

  @Test
  public void test8()  throws Throwable  {
      MyTrackerView myTrackerView0 = new MyTrackerView();
      myTrackerView0.torrentChanged((TRHostTorrent) null);
      assertEquals("MyTrackerView", myTrackerView0.getPropertiesPrefix());
  }

  @Test
  public void test9()  throws Throwable  {
      MyTrackerView myTrackerView0 = new MyTrackerView();
      TableViewSWT<TRHostTorrent> tableViewSWT0 = myTrackerView0.initYourTableView();
      assertEquals(true, tableViewSWT0.getHeaderVisible());
  }

  @Test
  public void test10()  throws Throwable  {
      MyTrackerView myTrackerView0 = new MyTrackerView();
      myTrackerView0.tableViewDestroyed();
      assertEquals("MyTrackerView", myTrackerView0.getPropertiesPrefix());
  }

  @Test
  public void test11()  throws Throwable  {
      MyTrackerView myTrackerView0 = new MyTrackerView();
      TableRowCore[] tableRowCoreArray0 = new TableRowCore[6];
      myTrackerView0.defaultSelected(tableRowCoreArray0, 0);
      assertEquals("My Tracker", myTrackerView0.getFullTitle());
  }

  @Test
  public void test12()  throws Throwable  {
      MyTrackerView myTrackerView0 = new MyTrackerView();
      myTrackerView0.tableRefresh();
      assertEquals("MyTrackerView", myTrackerView0.getPropertiesPrefix());
  }

  @Test
  public void test13()  throws Throwable  {
      MyTrackerView myTrackerView0 = new MyTrackerView();
      HashMap<String, Long> hashMap0 = new HashMap<String, Long>();
      myTrackerView0.refreshToolBarItems((Map<String, Long>) hashMap0);
      assertEquals(4, hashMap0.size());
      assertEquals("{stop=0, remove=0, start=0, editcolumns=1}", hashMap0.toString());
  }

  @Test
  public void test14()  throws Throwable  {
      MyTrackerView myTrackerView0 = new MyTrackerView();
      ToolBarView toolBarView0 = new ToolBarView();
      ToolBarItemSO toolBarItemSO0 = new ToolBarItemSO(toolBarView0, "", "");
      boolean boolean0 = myTrackerView0.toolBarItemActivated((ToolBarItem) toolBarItemSO0, 0L, (Object) "");
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      MyTrackerView myTrackerView0 = new MyTrackerView();
      TableRowCore[] tableRowCoreArray0 = new TableRowCore[6];
      myTrackerView0.deselected(tableRowCoreArray0);
      assertEquals("MyTrackerView", myTrackerView0.getPropertiesPrefix());
  }

  @Test
  public void test16()  throws Throwable  {
      MyTrackerView myTrackerView0 = new MyTrackerView();
      myTrackerView0.focusChanged((TableRowCore) null);
      assertEquals("MyTrackerView", myTrackerView0.getPropertiesPrefix());
  }

  @Test
  public void test17()  throws Throwable  {
      MyTrackerView myTrackerView0 = new MyTrackerView();
      TableRowCore[] tableRowCoreArray0 = new TableRowCore[7];
      myTrackerView0.selected(tableRowCoreArray0);
      assertEquals("MyTrackerView", myTrackerView0.getPropertiesPrefix());
  }
}
