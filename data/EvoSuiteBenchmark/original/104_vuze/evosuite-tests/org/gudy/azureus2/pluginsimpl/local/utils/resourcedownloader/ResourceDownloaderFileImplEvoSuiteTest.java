/*
 * This file was automatically generated by EvoSuite
 */

package org.gudy.azureus2.pluginsimpl.local.utils.resourcedownloader;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.File;
import java.io.InputStream;
import java.io.PipedInputStream;
import org.gudy.azureus2.plugins.utils.resourcedownloader.ResourceDownloader;
import org.gudy.azureus2.plugins.utils.resourcedownloader.ResourceDownloaderException;
import org.gudy.azureus2.pluginsimpl.local.utils.resourcedownloader.ResourceDownloaderBaseImpl;
import org.gudy.azureus2.pluginsimpl.local.utils.resourcedownloader.ResourceDownloaderFileImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ResourceDownloaderFileImplEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      File file0 = new File("W){|1sr39`fAq@mekx", "W){|1sr39`fAq@mekx");
      ResourceDownloaderFileImpl resourceDownloaderFileImpl0 = new ResourceDownloaderFileImpl((ResourceDownloaderBaseImpl) null, file0);
      ResourceDownloaderFileImpl resourceDownloaderFileImpl1 = (ResourceDownloaderFileImpl)resourceDownloaderFileImpl0.getClone((ResourceDownloaderBaseImpl) null);
      assertNotSame(resourceDownloaderFileImpl0, resourceDownloaderFileImpl1);
  }

  @Test
  public void test1()  throws Throwable  {
      File file0 = new File("W){|1sr39`fAq@mekx", "W){|1sr39`fAq@mekx");
      ResourceDownloaderFileImpl resourceDownloaderFileImpl0 = new ResourceDownloaderFileImpl((ResourceDownloaderBaseImpl) null, file0);
      resourceDownloaderFileImpl0.cancel();
      resourceDownloaderFileImpl0.asyncDownload();
      assertEquals(true, resourceDownloaderFileImpl0.isCancelled());
  }

  @Test
  public void test2()  throws Throwable  {
      File file0 = new File("VY~f8aY6r", "VY~f8aY6r");
      ResourceDownloaderFileImpl resourceDownloaderFileImpl0 = new ResourceDownloaderFileImpl((ResourceDownloaderBaseImpl) null, file0);
      long long0 = resourceDownloaderFileImpl0.getSize();
      assertEquals(0L, long0);
  }

  @Test
  public void test3()  throws Throwable  {
      File file0 = new File((File) null, "$}E_ fLYfk");
      ResourceDownloaderFileImpl resourceDownloaderFileImpl0 = new ResourceDownloaderFileImpl((ResourceDownloaderBaseImpl) null, file0);
      resourceDownloaderFileImpl0.failed((ResourceDownloader) null, (ResourceDownloaderException) null);
      assertEquals(false, resourceDownloaderFileImpl0.isCancelled());
  }

  @Test
  public void test4()  throws Throwable  {
      File file0 = new File("W){|1sr39`fAq@mekx", "W){|1sr39`fAq@mekx");
      ResourceDownloaderFileImpl resourceDownloaderFileImpl0 = new ResourceDownloaderFileImpl((ResourceDownloaderBaseImpl) null, file0);
      resourceDownloaderFileImpl0.setSize(15L);
      assertEquals("W){|1sr39`fAq@mekx/W){|1sr39`fAq@mekx", resourceDownloaderFileImpl0.getName());
  }

  @Test
  public void test5()  throws Throwable  {
      File file0 = new File("http.p0roxoyUs8Per", "http.p0roxoyUs8Per");
      ResourceDownloaderFileImpl resourceDownloaderFileImpl0 = new ResourceDownloaderFileImpl((ResourceDownloaderBaseImpl) null, file0);
      long long0 = resourceDownloaderFileImpl0.getSize();
      assertEquals(0L, long0);
  }

  @Test
  public void test6()  throws Throwable  {
      File file0 = new File("Tracker Port Enable");
      ResourceDownloaderFileImpl resourceDownloaderFileImpl0 = new ResourceDownloaderFileImpl((ResourceDownloaderBaseImpl) null, file0);
      try {
        resourceDownloaderFileImpl0.download();
        fail("Expecting exception: ResourceDownloaderException");
      } catch(ResourceDownloaderException e) {
        /*
         * Tracker Port Enable: Failed to read file
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      File file0 = new File("Tracker Port Enable");
      File file1 = file0.getAbsoluteFile();
      File file2 = file1.getParentFile();
      ResourceDownloaderFileImpl resourceDownloaderFileImpl0 = new ResourceDownloaderFileImpl((ResourceDownloaderBaseImpl) null, file2);
      resourceDownloaderFileImpl0.download();
      assertEquals(34256657L, resourceDownloaderFileImpl0.getSize());
  }

  @Test
  public void test8()  throws Throwable  {
      File file0 = new File("%MS..PT7&j");
      ResourceDownloaderFileImpl resourceDownloaderFileImpl0 = new ResourceDownloaderFileImpl((ResourceDownloaderBaseImpl) null, file0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(18);
      boolean boolean0 = resourceDownloaderFileImpl0.completed((ResourceDownloader) null, (InputStream) pipedInputStream0);
      assertEquals(true, boolean0);
  }
}
