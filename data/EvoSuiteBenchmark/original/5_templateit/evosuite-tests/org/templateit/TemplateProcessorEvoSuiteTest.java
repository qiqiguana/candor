/*
 * This file was automatically generated by EvoSuite
 */

package org.templateit;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.SequenceInputStream;
import org.junit.BeforeClass;
import org.templateit.TemplateProcessor;

@RunWith(EvoSuiteRunner.class)
public class TemplateProcessorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (int) (byte)0, (int) (byte)0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream((InputStream) byteArrayInputStream0, (InputStream) byteArrayInputStream0);
      TemplateProcessor templateProcessor0 = new TemplateProcessor((InputStream) sequenceInputStream0);
      templateProcessor0.keepSheet("$%*/)</NUo");
  }

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      TemplateProcessor templateProcessor0 = new TemplateProcessor((InputStream) byteArrayInputStream0, true);
      assertEquals(-1, byteArrayInputStream0.read());
  }

  @Test
  public void test2()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      TemplateProcessor templateProcessor0 = null;
      try {
        templateProcessor0 = new TemplateProcessor((InputStream) bufferedInputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * Stream closed
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TemplateProcessor templateProcessor0 = null;
      try {
        templateProcessor0 = new TemplateProcessor((InputStream) null, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
