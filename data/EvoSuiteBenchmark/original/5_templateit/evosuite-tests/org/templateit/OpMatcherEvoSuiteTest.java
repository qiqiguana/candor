/*
 * This file was automatically generated by EvoSuite
 */

package org.templateit;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.templateit.OpMatcher;

@RunWith(EvoSuiteRunner.class)
public class OpMatcherEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      OpMatcher opMatcher0 = new OpMatcher();
      assertNotNull(opMatcher0);
  }

  @Test
  public void test1()  throws Throwable  {
      String[] stringArray0 = OpMatcher.matchTemplateBegin((String) null);
      assertNull(stringArray0);
  }

  @Test
  public void test2()  throws Throwable  {
      String[] stringArray0 = OpMatcher.matchTemplateBegin("@tbegin");
      assertNull(stringArray0);
  }

  @Test
  public void test3()  throws Throwable  {
      String[] stringArray0 = OpMatcher.matchTemplateBegin("@template_begin");
      assertNull(stringArray0);
  }

  @Test
  public void test4()  throws Throwable  {
      String[] stringArray0 = OpMatcher.matchTemplateBegin("M=]#7L+IL");
      assertNull(stringArray0);
  }

  @Test
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try {
        OpMatcher.matchTemplateEnd((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      boolean boolean0 = OpMatcher.matchTemplateEnd("@tbegin");
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      boolean boolean0 = OpMatcher.matchTemplateEnd("@template_end");
      assertEquals(true, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      boolean boolean0 = OpMatcher.matchTemplateEnd("@tend");
      assertEquals(true, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      String string0 = OpMatcher.matchTemplateParameter((String) null);
      assertNull(string0);
  }

  @Test
  public void test10()  throws Throwable  {
      String string0 = OpMatcher.matchTemplateParameter("8#, l");
      assertNull(string0);
  }

  @Test
  public void test11()  throws Throwable  {
      String string0 = OpMatcher.matchTemplateParameter("@template_begin");
      assertNull(string0);
  }

  @Test
  public void test12()  throws Throwable  {
      String string0 = OpMatcher.matchTemplateParameter("=b#fqN.");
      assertEquals("fqN", string0);
      assertNotNull(string0);
  }

  @Test
  public void test13()  throws Throwable  {
      String string0 = OpMatcher.matchTemplateParameter("M=]#7L+IL");
      assertEquals("7", string0);
      assertNotNull(string0);
  }

  @Test
  public void test14()  throws Throwable  {
      boolean boolean0 = OpMatcher.matchTemplateName((String) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      boolean boolean0 = OpMatcher.matchTemplateName("7");
      assertEquals(false, boolean0);
  }
}
