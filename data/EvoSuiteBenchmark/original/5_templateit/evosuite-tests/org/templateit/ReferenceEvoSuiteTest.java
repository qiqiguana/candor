/*
 * This file was automatically generated by EvoSuite
 */

package org.templateit;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.templateit.Reference;

@RunWith(EvoSuiteRunner.class)
public class ReferenceEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Reference reference0 = new Reference((-102), 0);
      int int0 = reference0.column();
      assertEquals(0, int0);
      assertEquals("-102,0", reference0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      Reference reference0 = new Reference((-102), 0);
      int int0 = reference0.row();
      assertEquals((-102), int0);
      assertEquals(0, reference0.column());
  }

  @Test
  public void test2()  throws Throwable  {
      Reference reference0 = new Reference((-1), (-1));
      int int0 = reference0.hashCode();
      assertEquals(929, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      Reference reference0 = new Reference((-102), 0);
      String string0 = reference0.toString();
      assertNotNull(string0);
      assertEquals("-102,0", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      Reference reference0 = new Reference((-102), 0);
      boolean boolean0 = reference0.equals((Object) null);
      assertEquals("-102,0", reference0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      Reference reference0 = new Reference((-102), 0);
      boolean boolean0 = reference0.equals((Object) "1,1");
      assertEquals("-102,0", reference0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      Reference reference0 = new Reference((-102), 0);
      Reference reference1 = new Reference(1, 1);
      boolean boolean0 = reference0.equals((Object) reference1);
      assertEquals(1, reference1.column());
      assertEquals(false, boolean0);
      assertEquals("-102,0", reference0.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      Reference reference0 = new Reference((-102), 0);
      Reference reference1 = new Reference(9, 0);
      boolean boolean0 = reference0.equals((Object) reference1);
      assertFalse(reference1.equals(reference0));
      assertEquals("-102,0", reference0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      Reference reference0 = new Reference(0, 0);
      Reference reference1 = new Reference(0, 0);
      boolean boolean0 = reference0.equals((Object) reference1);
      assertEquals(true, boolean0);
      assertEquals("0,0", reference1.toString());
  }
}
