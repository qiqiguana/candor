/*
 * This file was automatically generated by EvoSuite
 */

package org.dom4j.dtd;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.dom4j.dtd.AttributeDecl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AttributeDeclEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AttributeDecl attributeDecl0 = new AttributeDecl("#FIXED", "#FIXED", ">", "#FIXED", "#FIXED");
      attributeDecl0.setElementName("1R<Ot>`t");
      assertEquals("<!ATTLIST 1R<Ot>`t #FIXED > #FIXED \"#FIXED\">", attributeDecl0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      AttributeDecl attributeDecl0 = new AttributeDecl();
      String string0 = attributeDecl0.getElementName();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      AttributeDecl attributeDecl0 = new AttributeDecl("", "ko;lJpr+MN0", "ko;lJpr+MN0", "", "ko;lJpr+MN0");
      attributeDecl0.setAttributeName("<!ATTLIST    >");
      assertEquals("<!ATTLIST  <!ATTLIST    > ko;lJpr+MN0 >", attributeDecl0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      AttributeDecl attributeDecl0 = new AttributeDecl("#FIXED", "#FIXED", ">", "#FIXED", "#FIXED");
      String string0 = attributeDecl0.getValueDefault();
      assertEquals("<!ATTLIST #FIXED #FIXED > #FIXED \"#FIXED\">", attributeDecl0.toString());
      assertNotNull(string0);
      assertEquals("#FIXED", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      AttributeDecl attributeDecl0 = new AttributeDecl("#FIXED", "#FIXED", ">", "#FIXED", "#FIXED");
      String string0 = attributeDecl0.getAttributeName();
      assertEquals("<!ATTLIST #FIXED #FIXED > #FIXED \"#FIXED\">", attributeDecl0.toString());
      assertNotNull(string0);
      assertEquals("#FIXED", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      AttributeDecl attributeDecl0 = new AttributeDecl("}K#/S", "}K#/S", "}K#/S", "}K#/S", "}K#/S");
      attributeDecl0.setType("}K#/S");
      assertEquals("}K#/S", attributeDecl0.getElementName());
  }

  @Test
  public void test6()  throws Throwable  {
      AttributeDecl attributeDecl0 = new AttributeDecl("", "ko;lJpr+MN0", "ko;lJpr+MN0", "", "ko;lJpr+MN0");
      assertEquals("ko;lJpr+MN0", attributeDecl0.getValue());
      
      attributeDecl0.setValue("");
      assertEquals("<!ATTLIST  ko;lJpr+MN0 ko;lJpr+MN0 >", attributeDecl0.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      AttributeDecl attributeDecl0 = new AttributeDecl("", "ko;lJpr+MN0", "ko;lJpr+MN0", "", "ko;lJpr+MN0");
      String string0 = attributeDecl0.getType();
      assertNotNull(string0);
      assertEquals("<!ATTLIST  ko;lJpr+MN0 ko;lJpr+MN0 >", attributeDecl0.toString());
      assertEquals("ko;lJpr+MN0", attributeDecl0.getValue());
      assertEquals("ko;lJpr+MN0", string0);
  }

  @Test
  public void test8()  throws Throwable  {
      AttributeDecl attributeDecl0 = new AttributeDecl("", "ko;lJpr+MN0", "ko;lJpr+MN0", "", "ko;lJpr+MN0");
      String string0 = attributeDecl0.getValue();
      assertEquals("<!ATTLIST  ko;lJpr+MN0 ko;lJpr+MN0 >", attributeDecl0.toString());
      assertNotNull(string0);
      assertEquals("ko;lJpr+MN0", string0);
  }

  @Test
  public void test9()  throws Throwable  {
      AttributeDecl attributeDecl0 = new AttributeDecl("#FIXED", "#FIXED", ">", "#FIXED", "#FIXED");
      attributeDecl0.setValueDefault("<!ATTLIST null 1R<Ot>`t 1R<Ot>`t 1R<Ot>`t>");
      assertEquals("<!ATTLIST #FIXED #FIXED > <!ATTLIST null 1R<Ot>`t 1R<Ot>`t 1R<Ot>`t>>", attributeDecl0.toString());
      assertEquals(">", attributeDecl0.getType());
  }

  @Test
  public void test10()  throws Throwable  {
      AttributeDecl attributeDecl0 = new AttributeDecl();
      String string0 = attributeDecl0.toString();
      assertEquals("<!ATTLIST null null null \"null\">", string0);
      assertNotNull(string0);
  }

  @Test
  public void test11()  throws Throwable  {
      AttributeDecl attributeDecl0 = new AttributeDecl("", "ko;lJpr+MN0", "ko;lJpr+MN0", "", "ko;lJpr+MN0");
      String string0 = attributeDecl0.toString();
      assertNotNull(string0);
      assertEquals("ko;lJpr+MN0", attributeDecl0.getValue());
      assertEquals("<!ATTLIST  ko;lJpr+MN0 ko;lJpr+MN0 >", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      AttributeDecl attributeDecl0 = new AttributeDecl("#FIXED", "#FIXED", "#FIXED", "#FIXED", "#FIXED");
      String string0 = attributeDecl0.toString();
      assertEquals("<!ATTLIST #FIXED #FIXED #FIXED #FIXED \"#FIXED\">", string0);
      assertNotNull(string0);
  }
}
