/*
 * This file was automatically generated by EvoSuite
 */

package org.dom4j.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.List;
import org.dom4j.Node;
import org.dom4j.tree.AbstractBranch;
import org.dom4j.tree.BackedList;
import org.dom4j.tree.LazyList;

@RunWith(EvoSuiteRunner.class)
public class BackedListEvoSuiteTest {


  //Test case number: 0
  /*
   * 4 covered goals:
   * 1 org.dom4j.tree.BackedList.clear()V: I8 Branch 9 IFEQ L117 - false
   * 2 org.dom4j.tree.BackedList.addLocal(Lorg/dom4j/Node;)V: root-Branch
   * 3 org.dom4j.tree.BackedList.<init>(Lorg/dom4j/tree/AbstractBranch;Ljava/util/List;)V: root-Branch
   * 4 org.dom4j.tree.BackedList.<init>(Lorg/dom4j/tree/AbstractBranch;Ljava/util/List;Ljava/util/List;)V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      LazyList<Node> lazyList0 = new LazyList<Node>();
      BackedList<Node> backedList0 = new BackedList<Node>((AbstractBranch) null, (List<Node>) lazyList0, (List<Node>) lazyList0);
      backedList0.addLocal((Node) null);
      // Undeclared exception!
      try {
        backedList0.clear();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 org.dom4j.tree.BackedList.remove(Lorg/dom4j/Node;)Z: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      BackedList<Node> backedList0 = new BackedList<Node>((AbstractBranch) null, (List<Node>) null);
      // Undeclared exception!
      try {
        backedList0.remove((Node) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 org.dom4j.tree.BackedList.add(Lorg/dom4j/Node;)Z: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      LazyList<Node> lazyList0 = new LazyList<Node>();
      BackedList<Node> backedList0 = new BackedList<Node>((AbstractBranch) null, (List<Node>) lazyList0, (List<Node>) lazyList0);
      // Undeclared exception!
      try {
        backedList0.add((Node) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 org.dom4j.tree.BackedList.add(ILorg/dom4j/Node;)V: I3 Branch 1 IFGE L55 - true
   * 2 org.dom4j.tree.BackedList.add(ILorg/dom4j/Node;)V: I25 Branch 2 IF_ICMPLE L58 - true
   * 3 org.dom4j.tree.BackedList.add(ILorg/dom4j/Node;)V: I51 Branch 3 IFNE L65 - false
   */
  @Test
  public void test3()  throws Throwable  {
      LazyList<Node> lazyList0 = new LazyList<Node>();
      BackedList<Node> backedList0 = new BackedList<Node>((AbstractBranch) null, (List<Node>) lazyList0, (List<Node>) lazyList0);
      // Undeclared exception!
      try {
        backedList0.add(0, (Node) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 org.dom4j.tree.BackedList.add(ILorg/dom4j/Node;)V: I25 Branch 2 IF_ICMPLE L58 - false
   */
  @Test
  public void test4()  throws Throwable  {
      LazyList<Node> lazyList0 = new LazyList<Node>();
      BackedList<Node> backedList0 = new BackedList<Node>((AbstractBranch) null, (List<Node>) lazyList0, (List<Node>) lazyList0);
      // Undeclared exception!
      try {
        backedList0.add(831, (Node) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index value: 831 cannot be greater than the size: 0
         */
      }
  }

  //Test case number: 5
  /*
   * 4 covered goals:
   * 1 org.dom4j.tree.BackedList.add(ILorg/dom4j/Node;)V: I51 Branch 3 IFNE L65 - true
   * 2 org.dom4j.tree.BackedList.add(ILorg/dom4j/Node;)V: I65 Branch 4 IF_ICMPGE L67 - false
   * 3 org.dom4j.tree.BackedList.add(ILorg/dom4j/Node;)V: I3 Branch 1 IFGE L55 - true
   * 4 org.dom4j.tree.BackedList.add(ILorg/dom4j/Node;)V: I25 Branch 2 IF_ICMPLE L58 - true
   */
  @Test
  public void test5()  throws Throwable  {
      LazyList<Node> lazyList0 = new LazyList<Node>();
      lazyList0.add((Node) null);
      BackedList<Node> backedList0 = new BackedList<Node>((AbstractBranch) null, (List<Node>) lazyList0, (List<Node>) lazyList0);
      // Undeclared exception!
      try {
        backedList0.add(0, (Node) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * 1 org.dom4j.tree.BackedList.clear()V: I8 Branch 9 IFEQ L117 - true
   * 2 org.dom4j.tree.BackedList.<init>(Lorg/dom4j/tree/AbstractBranch;Ljava/util/List;)V: root-Branch
   * 3 org.dom4j.tree.BackedList.<init>(Lorg/dom4j/tree/AbstractBranch;Ljava/util/List;Ljava/util/List;)V: root-Branch
   */
  @Test
  public void test6()  throws Throwable  {
      LazyList<Node> lazyList0 = new LazyList<Node>();
      BackedList<Node> backedList0 = new BackedList<Node>((AbstractBranch) null, (List<Node>) lazyList0, (List<Node>) lazyList0);
      backedList0.clear();
      assertEquals(true, backedList0.isEmpty());
  }
}
