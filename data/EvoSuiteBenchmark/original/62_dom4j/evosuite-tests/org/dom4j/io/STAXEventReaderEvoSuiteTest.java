/*
 * This file was automatically generated by EvoSuite
 */

package org.dom4j.io;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.events.Attribute;
import javax.xml.stream.events.Comment;
import javax.xml.stream.events.EntityReference;
import javax.xml.stream.events.Namespace;
import javax.xml.stream.events.ProcessingInstruction;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.DocumentFactory;
import org.dom4j.Element;
import org.dom4j.QName;
import org.dom4j.io.STAXEventReader;
import org.dom4j.util.UserDataElement;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class STAXEventReaderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      STAXEventReader sTAXEventReader0 = new STAXEventReader();
      UserDataElement userDataElement0 = new UserDataElement("Vy3s9B4P0y");
      // Undeclared exception!
      try {
        sTAXEventReader0.createAttribute((Element) userDataElement0, (Attribute) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      UserDataElement userDataElement0 = new UserDataElement("nvyfK,b$");
      QName qName0 = userDataElement0.getQName("nvyfK,b$");
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)qName0.getDocumentFactory();
      STAXEventReader sTAXEventReader0 = new STAXEventReader((DocumentFactory) defaultDocumentFactory0);
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (int) (byte)0, 47806);
      try {
        sTAXEventReader0.readDocument((InputStream) byteArrayInputStream0);
        fail("Expecting exception: XMLStreamException");
      } catch(XMLStreamException e) {
        /*
         * ParseError at [row,col]:[1,1]
         * Message: Content is not allowed in prolog.
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      STAXEventReader sTAXEventReader0 = new STAXEventReader((DocumentFactory) null);
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (int) (byte)0, (int) (byte)126);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) byteArrayInputStream0);
      InputStreamReader inputStreamReader0 = new InputStreamReader((InputStream) dataInputStream0);
      try {
        sTAXEventReader0.readDocument((Reader) inputStreamReader0);
        fail("Expecting exception: XMLStreamException");
      } catch(XMLStreamException e) {
        /*
         * ParseError at [row,col]:[1,1]
         * Message: Content is not allowed in prolog.
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      STAXEventReader sTAXEventReader0 = new STAXEventReader();
      javax.xml.namespace.QName qName0 = new javax.xml.namespace.QName("vXz@", "vXz@");
      QName qName1 = sTAXEventReader0.createQName(qName0);
      assertNotNull(qName1);
      assertEquals("vXz@", qName1.getName());
  }

  @Test
  public void test4()  throws Throwable  {
      STAXEventReader sTAXEventReader0 = new STAXEventReader();
      // Undeclared exception!
      try {
        sTAXEventReader0.createProcessingInstruction((ProcessingInstruction) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      STAXEventReader sTAXEventReader0 = new STAXEventReader();
      // Undeclared exception!
      try {
        sTAXEventReader0.createNamespace((Namespace) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      STAXEventReader sTAXEventReader0 = new STAXEventReader((DocumentFactory) null);
      // Undeclared exception!
      try {
        sTAXEventReader0.createEntity((EntityReference) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      STAXEventReader sTAXEventReader0 = new STAXEventReader((DocumentFactory) defaultDocumentFactory0);
      // Undeclared exception!
      try {
        sTAXEventReader0.createComment((Comment) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      STAXEventReader sTAXEventReader0 = new STAXEventReader((DocumentFactory) null);
      sTAXEventReader0.setDocumentFactory((DocumentFactory) null);
  }

  @Test
  public void test9()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      STAXEventReader sTAXEventReader0 = new STAXEventReader((DocumentFactory) defaultDocumentFactory0);
      sTAXEventReader0.setDocumentFactory((DocumentFactory) defaultDocumentFactory0);
  }
}
