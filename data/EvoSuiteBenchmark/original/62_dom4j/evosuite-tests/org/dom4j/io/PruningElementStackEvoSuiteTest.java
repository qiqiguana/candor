/*
 * This file was automatically generated by EvoSuite
 */

package org.dom4j.io;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.Element;
import org.dom4j.ElementHandler;
import org.dom4j.Namespace;
import org.dom4j.QName;
import org.dom4j.dom.DOMDocument;
import org.dom4j.dom.DOMDocumentType;
import org.dom4j.dom.DOMElement;
import org.dom4j.io.PruningElementStack;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class PruningElementStackEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[2];
      PruningElementStack pruningElementStack0 = new PruningElementStack(stringArray0, (ElementHandler) null, 49);
      // Undeclared exception!
      try {
        pruningElementStack0.pathMatches((Element) null, (Element) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[1];
      PruningElementStack pruningElementStack0 = null;
      try {
        pruningElementStack0 = new PruningElementStack(stringArray0, (ElementHandler) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * Invalid path of length: 1 it must be greater than 2
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[2];
      PruningElementStack pruningElementStack0 = new PruningElementStack(stringArray0, (ElementHandler) null, 49);
      Element element0 = pruningElementStack0.popElement();
      assertNull(element0);
  }

  @Test
  public void test3()  throws Throwable  {
      String[] stringArray0 = new String[7];
      PruningElementStack pruningElementStack0 = new PruningElementStack(stringArray0, (ElementHandler) null);
      assertNotNull(pruningElementStack0);
      
      DOMDocumentType dOMDocumentType0 = new DOMDocumentType("S", "xY");
      DOMDocument dOMDocument0 = new DOMDocument(dOMDocumentType0);
      DOMElement dOMElement0 = (DOMElement)dOMDocument0.addElement("S", "xY");
      boolean boolean0 = pruningElementStack0.validElement((Element) dOMElement0, 1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[1] = "j_}+G_(]<J";
      PruningElementStack pruningElementStack0 = new PruningElementStack(stringArray0, (ElementHandler) null, 49);
      assertNotNull(pruningElementStack0);
      
      DOMDocument dOMDocument0 = new DOMDocument();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      QName qName0 = defaultDocumentFactory0.createQName("j_}+G_(]<J", namespace0);
      DOMElement dOMElement0 = (DOMElement)dOMDocument0.addElement(qName0);
      boolean boolean0 = pruningElementStack0.validElement((Element) dOMElement0, 1);
      assertEquals(true, boolean0);
  }
}
