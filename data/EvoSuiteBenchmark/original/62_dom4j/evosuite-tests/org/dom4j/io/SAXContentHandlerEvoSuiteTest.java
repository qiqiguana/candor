/*
 * This file was automatically generated by EvoSuite
 */

package org.dom4j.io;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.InputStream;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.DocumentFactory;
import org.dom4j.Element;
import org.dom4j.ElementHandler;
import org.dom4j.QName;
import org.dom4j.io.ElementStack;
import org.dom4j.io.SAXContentHandler;
import org.dom4j.tree.BaseElement;
import org.dom4j.tree.DefaultDocument;
import org.dom4j.tree.NamespaceStack;
import org.dom4j.util.IndexedElement;
import org.junit.BeforeClass;
import org.xml.sax.Attributes;
import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.AttributesImpl;
import org.xml.sax.helpers.LocatorImpl;

@RunWith(EvoSuiteRunner.class)
public class SAXContentHandlerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      sAXContentHandler0.notationDecl("(j", "(j", "(j");
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
  }

  @Test
  public void test1()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      InputSource inputSource0 = new InputSource((InputStream) null);
      sAXContentHandler0.setInputSource(inputSource0);
      sAXContentHandler0.endDTD();
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
  }

  @Test
  public void test2()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.setElementStack((ElementStack) null);
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
  }

  @Test
  public void test3()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      // Undeclared exception!
      try {
        sAXContentHandler0.error((SAXParseException) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.unparsedEntityDecl("", "", "", "");
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
  }

  @Test
  public void test5()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      // Undeclared exception!
      try {
        sAXContentHandler0.endCDATA();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl((Locator) locatorImpl0);
      sAXContentHandler0.setDocumentLocator((Locator) locator2Impl0);
      DefaultDocument defaultDocument0 = (DefaultDocument)sAXContentHandler0.getDocument();
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertNotNull(defaultDocument0);
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
  }

  @Test
  public void test7()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      
      sAXContentHandler0.setMergeAdjacentText(true);
      sAXContentHandler0.processingInstruction("", "");
      assertEquals(true, sAXContentHandler0.isMergeAdjacentText());
  }

  @Test
  public void test8()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      boolean boolean0 = sAXContentHandler0.isIncludeInternalDTDDeclarations();
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, boolean0);
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
  }

  @Test
  public void test9()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      boolean boolean0 = sAXContentHandler0.isMergeAdjacentText();
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.getEntityResolver();
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test11()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      boolean boolean0 = sAXContentHandler0.isIncludeExternalDTDDeclarations();
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, boolean0);
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
  }

  @Test
  public void test12()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.warning((SAXParseException) null);
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
  }

  @Test
  public void test13()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      sAXContentHandler0.getInputSource();
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
  }

  @Test
  public void test14()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      boolean boolean0 = sAXContentHandler0.isIgnoreComments();
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      
      sAXContentHandler0.setIncludeExternalDTDDeclarations(true);
      sAXContentHandler0.attributeDecl("mQ{|A'D", "mQ{|A'D", "mQ{|A'D", "mQ{|A'D", "mQ{|A'D");
      assertEquals(true, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
  }

  @Test
  public void test16()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) null);
      sAXContentHandler0.endDocument();
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
  }

  @Test
  public void test17()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.setEntityResolver((EntityResolver) sAXContentHandler0);
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
  }

  @Test
  public void test18()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      boolean boolean0 = sAXContentHandler0.isStripWhitespaceText();
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, boolean0);
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
  }

  @Test
  public void test19()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      // Undeclared exception!
      try {
        sAXContentHandler0.fatalError((SAXParseException) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test20()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.endPrefixMapping("2Z");
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
  }

  @Test
  public void test21()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      sAXContentHandler0.startPrefixMapping("", "");
      BaseElement baseElement0 = new BaseElement("");
      sAXContentHandler0.addDeclaredNamespaces((Element) baseElement0);
      assertEquals(false, baseElement0.isTextOnly());
      assertEquals(true, baseElement0.hasContent());
  }

  @Test
  public void test22()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      sAXContentHandler0.processingInstruction(" attribuutes: ", "E{");
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
  }

  @Test
  public void test23()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      sAXContentHandler0.startElement(" attribuutes: ", " attribuutes: ", " attribuutes: ", (Attributes) attributes2Impl0);
      sAXContentHandler0.processingInstruction(" attribuutes: ", " attribuutes: ");
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test24()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.startDocument();
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
  }

  @Test
  public void test25()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      
      sAXContentHandler0.setMergeAdjacentText(true);
      sAXContentHandler0.startDocument();
      sAXContentHandler0.startDocument();
      assertEquals(true, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
  }

  @Test
  public void test26()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl((Attributes) attributesImpl0);
      sAXContentHandler0.startElement("Class [", "Class [", "Class [", (Attributes) attributes2Impl0);
      sAXContentHandler0.startElement("Class [", "Class [", "Class [", (Attributes) attributesImpl0);
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
  }

  @Test
  public void test27()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      sAXContentHandler0.endElement("", "", "");
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
  }

  @Test
  public void test28()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      
      sAXContentHandler0.setMergeAdjacentText(true);
      sAXContentHandler0.endElement("", "", "");
      assertEquals(true, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test29()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      char[] charArray0 = new char[10];
      sAXContentHandler0.characters(charArray0, (int) 'X', (int) 'X');
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
  }

  @Test
  public void test30()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      char[] charArray0 = new char[7];
      sAXContentHandler0.characters(charArray0, (int) '=', (int) '\u0000');
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test31()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      char[] charArray0 = new char[22];
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      sAXContentHandler0.startElement("2.0", "2.0", "2.0", (Attributes) attributes2Impl0);
      // Undeclared exception!
      try {
        sAXContentHandler0.characters(charArray0, (int) 'T', (int) 'o');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: 195
         */
      }
  }

  @Test
  public void test32()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      char[] charArray0 = new char[22];
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      sAXContentHandler0.startElement(" attribuutes: ", " attribuutes: ", " attribuutes: ", (Attributes) attributes2Impl0);
      sAXContentHandler0.startEntity(" attribuutes: ");
      // Undeclared exception!
      try {
        sAXContentHandler0.characters(charArray0, (int) 'T', (int) 'o');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: 195
         */
      }
  }

  @Test
  public void test33()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      
      char[] charArray0 = new char[22];
      sAXContentHandler0.setMergeAdjacentText(true);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      sAXContentHandler0.startElement(" attribuutes: ", " attribuutes: ", " attribuutes: ", (Attributes) attributes2Impl0);
      sAXContentHandler0.startEntity(" attribuutes: ");
      // Undeclared exception!
      try {
        sAXContentHandler0.characters(charArray0, (int) 'T', (int) 'o');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: 195
         */
      }
  }

  @Test
  public void test34()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      char[] charArray0 = new char[22];
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      sAXContentHandler0.startElement("2.0", "2.0", "2.0", (Attributes) attributes2Impl0);
      sAXContentHandler0.startCDATA();
      // Undeclared exception!
      try {
        sAXContentHandler0.characters(charArray0, (int) 'T', (int) 'o');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: 195
         */
      }
  }

  @Test
  public void test35()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      char[] charArray0 = new char[22];
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      sAXContentHandler0.startElement("2.0", "2.0", "2.0", (Attributes) attributes2Impl0);
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      
      sAXContentHandler0.setMergeAdjacentText(true);
      sAXContentHandler0.startCDATA();
      // Undeclared exception!
      try {
        sAXContentHandler0.characters(charArray0, (int) 'T', (int) 'o');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: 195
         */
      }
  }

  @Test
  public void test36()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      char[] charArray0 = new char[7];
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      sAXContentHandler0.startElement("b attributes: ", "b attributes: ", "b attributes: ", (Attributes) attributes2Impl0);
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      
      sAXContentHandler0.setMergeAdjacentText(true);
      // Undeclared exception!
      try {
        sAXContentHandler0.characters(charArray0, (int) 'T', (int) 'o');
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test37()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      sAXContentHandler0.endDTD();
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
  }

  @Test
  public void test38()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      sAXContentHandler0.startDTD("", (String) null, (String) null);
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      
      sAXContentHandler0.setIncludeInternalDTDDeclarations(true);
      sAXContentHandler0.externalEntityDecl("", "", "");
      sAXContentHandler0.endDTD();
      assertEquals(true, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
  }

  @Test
  public void test39()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      NamespaceStack namespaceStack0 = new NamespaceStack();
      QName qName0 = namespaceStack0.getAttributeQName("b attributes: ", "b attributes: ", "b attributes: ");
      IndexedElement indexedElement0 = new IndexedElement(qName0, 2489);
      sAXContentHandler0.addExternalDTDDeclaration((Object) indexedElement0);
      sAXContentHandler0.startDTD("b attributes: ", "b attributes: ", "b attributes: ");
      sAXContentHandler0.endDTD();
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
  }

  @Test
  public void test40()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.startDTD("", "", "");
      sAXContentHandler0.startEntity("");
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test41()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.startEntity("amp");
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
  }

  @Test
  public void test42()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      sAXContentHandler0.endEntity("");
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test43()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.startEntity("");
      sAXContentHandler0.endEntity("");
      sAXContentHandler0.elementDecl("", "");
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
  }

  @Test
  public void test44()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      
      char[] charArray0 = new char[10];
      sAXContentHandler0.setIgnoreComments(true);
      sAXContentHandler0.comment(charArray0, (int) '%', (int) '\u001E');
      assertEquals(true, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
  }

  @Test
  public void test45()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      char[] charArray0 = new char[22];
      sAXContentHandler0.comment(charArray0, 1, 1);
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test46()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0, (ElementHandler) null);
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      
      char[] charArray0 = new char[9];
      sAXContentHandler0.setMergeAdjacentText(true);
      // Undeclared exception!
      try {
        sAXContentHandler0.comment(charArray0, (int) 'p', 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: 112
         */
      }
  }

  @Test
  public void test47()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      char[] charArray0 = new char[10];
      sAXContentHandler0.comment(charArray0, 0, 0);
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
  }

  @Test
  public void test48()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      char[] charArray0 = new char[22];
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      sAXContentHandler0.startElement("2.0", "2.0", "2.0", (Attributes) attributes2Impl0);
      sAXContentHandler0.comment(charArray0, 1, 1);
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
  }

  @Test
  public void test49()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.elementDecl("", "");
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
  }

  @Test
  public void test50()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.startEntity("");
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      
      sAXContentHandler0.setIncludeInternalDTDDeclarations(true);
      sAXContentHandler0.endEntity("");
      sAXContentHandler0.elementDecl("", "");
      sAXContentHandler0.attributeDecl("", "", "", "", "");
      assertEquals(true, sAXContentHandler0.isIncludeInternalDTDDeclarations());
  }

  @Test
  public void test51()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      
      sAXContentHandler0.setIncludeExternalDTDDeclarations(true);
      sAXContentHandler0.elementDecl("5s=KwgDdsH?)E#m", "5s=KwgDdsH?)E#m");
      assertEquals(true, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
  }

  @Test
  public void test52()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      sAXContentHandler0.attributeDecl("", "", "", "", "");
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test53()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.startEntity("");
      sAXContentHandler0.endEntity("");
      sAXContentHandler0.attributeDecl("", "", "", "", "");
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
  }

  @Test
  public void test54()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.startEntity("");
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      
      sAXContentHandler0.setIncludeInternalDTDDeclarations(true);
      sAXContentHandler0.endEntity("");
      sAXContentHandler0.attributeDecl("", "", "", "", "");
      assertEquals(true, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
  }

  @Test
  public void test55()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      sAXContentHandler0.internalEntityDecl("2.0", "2.0");
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test56()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      sAXContentHandler0.startDTD(" attribuutes: ", " attribuutes: ", " attribuutes: ");
      sAXContentHandler0.internalEntityDecl(" attribuutes: ", " attribuutes: ");
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
  }

  @Test
  public void test57()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.startEntity("");
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      
      sAXContentHandler0.setIncludeInternalDTDDeclarations(true);
      sAXContentHandler0.endEntity("");
      sAXContentHandler0.internalEntityDecl("", "");
      assertEquals(true, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
  }

  @Test
  public void test58()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.externalEntityDecl(">o\ncat", ">o\ncat", ">o\ncat");
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
  }

  @Test
  public void test59()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      sAXContentHandler0.startDTD("b attributes: ", "b attributes: ", "b attributes: ");
      sAXContentHandler0.externalEntityDecl("b attributes: ", "b attributes: ", "b attributes: ");
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
  }

  @Test
  public void test60()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      
      sAXContentHandler0.setIncludeExternalDTDDeclarations(true);
      sAXContentHandler0.externalEntityDecl(">o\ncat", ">o\ncat", ">o\ncat");
      sAXContentHandler0.internalEntityDecl(">o\ncat", ">o\ncat");
      assertEquals(true, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test61()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      // Undeclared exception!
      try {
        sAXContentHandler0.completeCurrentTextNode();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test62()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      
      sAXContentHandler0.setStripWhitespaceText(true);
      // Undeclared exception!
      try {
        sAXContentHandler0.completeCurrentTextNode();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test63()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      boolean boolean0 = sAXContentHandler0.isIgnorableEntity("apos");
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(true, boolean0);
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
  }

  @Test
  public void test64()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      boolean boolean0 = sAXContentHandler0.isIgnorableEntity("gt");
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(true, boolean0);
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
  }

  @Test
  public void test65()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      boolean boolean0 = sAXContentHandler0.isIgnorableEntity("lt");
      assertEquals(true, boolean0);
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
  }

  @Test
  public void test66()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      boolean boolean0 = sAXContentHandler0.isIgnorableEntity("quot");
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(true, boolean0);
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
  }

  @Test
  public void test67()  throws Throwable  {
      AttributesImpl attributesImpl0 = new AttributesImpl();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) null);
      sAXContentHandler0.addAttributes((Element) null, (Attributes) attributesImpl0);
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test68()  throws Throwable  {
      AttributesImpl attributesImpl0 = new AttributesImpl();
      attributesImpl0.addAttribute("T\"CnFkS>EcsES6kh8z}", "T\"CnFkS>EcsES6kh8z}", "T\"CnFkS>EcsES6kh8z}", "T\"CnFkS>EcsES6kh8z}", "T\"CnFkS>EcsES6kh8z}");
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) null);
      // Undeclared exception!
      try {
        sAXContentHandler0.addAttributes((Element) null, (Attributes) attributesImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
