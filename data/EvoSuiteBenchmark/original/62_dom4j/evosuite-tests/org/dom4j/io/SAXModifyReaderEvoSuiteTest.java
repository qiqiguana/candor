/*
 * This file was automatically generated by EvoSuite
 */

package org.dom4j.io;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.FileDescriptor;
import java.io.FileReader;
import java.io.Reader;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.DocumentException;
import org.dom4j.DocumentFactory;
import org.dom4j.io.SAXModifyReader;
import org.dom4j.io.XMLWriter;
import org.junit.BeforeClass;
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;

@RunWith(EvoSuiteRunner.class)
public class SAXModifyReaderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SAXModifyReader sAXModifyReader0 = new SAXModifyReader((XMLReader) null);
      assertEquals(false, sAXModifyReader0.isIgnoreComments());
  }

  @Test
  public void test1()  throws Throwable  {
      SAXModifyReader sAXModifyReader0 = new SAXModifyReader((String) null);
      assertEquals(false, sAXModifyReader0.isStripWhitespaceText());
  }

  @Test
  public void test2()  throws Throwable  {
      SAXModifyReader sAXModifyReader0 = new SAXModifyReader();
      sAXModifyReader0.setPruneElements(false);
      assertEquals(false, sAXModifyReader0.isPruneElements());
  }

  @Test
  public void test3()  throws Throwable  {
      SAXModifyReader sAXModifyReader0 = new SAXModifyReader((XMLReader) null, false);
      assertEquals(false, sAXModifyReader0.isPruneElements());
  }

  @Test
  public void test4()  throws Throwable  {
      SAXModifyReader sAXModifyReader0 = new SAXModifyReader((DocumentFactory) null);
      FileDescriptor fileDescriptor0 = FileDescriptor.err;
      FileReader fileReader0 = new FileReader(fileDescriptor0);
      try {
        sAXModifyReader0.read((Reader) fileReader0, (String) null);
        fail("Expecting exception: DocumentException");
      } catch(DocumentException e) {
        /*
         * Bad file descriptor Nested exception: Bad file descriptor
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      SAXModifyReader sAXModifyReader0 = new SAXModifyReader(true);
      sAXModifyReader0.setXMLWriter((XMLWriter) null);
      assertEquals(false, sAXModifyReader0.isStripWhitespaceText());
  }

  @Test
  public void test6()  throws Throwable  {
      SAXModifyReader sAXModifyReader0 = new SAXModifyReader(true);
      boolean boolean0 = sAXModifyReader0.isPruneElements();
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      SAXModifyReader sAXModifyReader0 = new SAXModifyReader((DocumentFactory) defaultDocumentFactory0, true);
      assertEquals(false, sAXModifyReader0.isIgnoreComments());
  }

  @Test
  public void test8()  throws Throwable  {
      SAXModifyReader sAXModifyReader0 = new SAXModifyReader(false);
      XMLWriter xMLWriter0 = sAXModifyReader0.getXMLWriter();
      assertNull(xMLWriter0);
  }
}
