/*
 * This file was automatically generated by EvoSuite
 */

package org.dom4j.io;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.apache.xerces.jaxp.SAXParserImpl;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.Document;
import org.dom4j.io.SAXValidator;
import org.dom4j.tree.DefaultDocument;
import org.junit.BeforeClass;
import org.xml.sax.ErrorHandler;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.XMLFilterImpl;

@RunWith(EvoSuiteRunner.class)
public class SAXValidatorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SAXValidator sAXValidator0 = new SAXValidator();
      SAXParserImpl.JAXPSAXParser sAXParserImpl_JAXPSAXParser0 = (SAXParserImpl.JAXPSAXParser)sAXValidator0.createXMLReader();
      sAXValidator0.setXMLReader((XMLReader) sAXParserImpl_JAXPSAXParser0);
  }

  @Test
  public void test1()  throws Throwable  {
      SAXValidator sAXValidator0 = new SAXValidator();
      SAXParserImpl.JAXPSAXParser sAXParserImpl_JAXPSAXParser0 = (SAXParserImpl.JAXPSAXParser)sAXValidator0.createXMLReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) sAXParserImpl_JAXPSAXParser0);
      sAXValidator0.setErrorHandler((ErrorHandler) xMLFilterImpl0);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      DefaultDocument defaultDocument0 = (DefaultDocument)defaultDocumentFactory0.createDocument(" so cannot add element: ");
      try {
        sAXValidator0.validate((Document) defaultDocument0);
        fail("Expecting exception: SAXParseException");
      } catch(SAXParseException e) {
        /*
         * Premature end of file.
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      SAXValidator sAXValidator0 = new SAXValidator();
      SAXParserImpl.JAXPSAXParser sAXParserImpl_JAXPSAXParser0 = (SAXParserImpl.JAXPSAXParser)sAXValidator0.createXMLReader();
      SAXValidator sAXValidator1 = new SAXValidator((XMLReader) sAXParserImpl_JAXPSAXParser0);
      assertFalse(sAXValidator1.equals(sAXValidator0));
  }

  @Test
  public void test3()  throws Throwable  {
      SAXValidator sAXValidator0 = new SAXValidator();
      ErrorHandler errorHandler0 = sAXValidator0.getErrorHandler();
      assertNull(errorHandler0);
  }

  @Test
  public void test4()  throws Throwable  {
      SAXValidator sAXValidator0 = new SAXValidator();
      sAXValidator0.validate((Document) null);
  }

  @Test
  public void test5()  throws Throwable  {
      SAXValidator sAXValidator0 = new SAXValidator();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      DefaultDocument defaultDocument0 = (DefaultDocument)defaultDocumentFactory0.createDocument(" so cannot add element: ");
      try {
        sAXValidator0.validate((Document) defaultDocument0);
        fail("Expecting exception: SAXParseException");
      } catch(SAXParseException e) {
        /*
         * Premature end of file.
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      SAXValidator sAXValidator0 = new SAXValidator();
      SAXParserImpl.JAXPSAXParser sAXParserImpl_JAXPSAXParser0 = (SAXParserImpl.JAXPSAXParser)sAXValidator0.getXMLReader();
      assertNotNull(sAXParserImpl_JAXPSAXParser0);
      
      SAXParserImpl.JAXPSAXParser sAXParserImpl_JAXPSAXParser1 = (SAXParserImpl.JAXPSAXParser)sAXValidator0.getXMLReader();
      assertSame(sAXParserImpl_JAXPSAXParser1, sAXParserImpl_JAXPSAXParser0);
  }

  @Test
  public void test7()  throws Throwable  {
      SAXValidator sAXValidator0 = new SAXValidator();
      sAXValidator0.getXMLReader();
      sAXValidator0.configureReader();
  }
}
