/*
 * This file was automatically generated by EvoSuite
 */

package org.dom4j.rule;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.dom4j.Element;
import org.dom4j.Namespace;
import org.dom4j.Node;
import org.dom4j.bean.BeanElement;
import org.dom4j.dom.DOMCDATA;
import org.dom4j.dom.DOMText;
import org.dom4j.rule.Action;
import org.dom4j.rule.NullAction;
import org.dom4j.rule.Pattern;
import org.dom4j.rule.Rule;
import org.dom4j.rule.RuleSet;
import org.dom4j.rule.pattern.NodeTypePattern;
import org.dom4j.tree.FlyweightCDATA;
import org.dom4j.util.IndexedElement;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RuleSetEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RuleSet ruleSet0 = new RuleSet();
      ruleSet0.removeRule((Rule) null);
  }

  @Test
  public void test1()  throws Throwable  {
      RuleSet ruleSet0 = new RuleSet();
      NodeTypePattern nodeTypePattern0 = NodeTypePattern.ANY_TEXT;
      NullAction nullAction0 = NullAction.SINGLETON;
      Rule rule0 = new Rule((Pattern) nodeTypePattern0, (Action) nullAction0);
      ruleSet0.addRule(rule0);
      DOMCDATA dOMCDATA0 = new DOMCDATA(";[{`Rj");
      Rule rule1 = ruleSet0.getMatchingRule((Node) dOMCDATA0);
      assertNull(rule1);
  }

  @Test
  public void test2()  throws Throwable  {
      RuleSet ruleSet0 = new RuleSet();
      String string0 = ruleSet0.toString();
      assertNotNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      RuleSet ruleSet0 = new RuleSet();
      ruleSet0.addAll(ruleSet0);
  }

  @Test
  public void test4()  throws Throwable  {
      RuleSet ruleSet0 = new RuleSet();
      FlyweightCDATA flyweightCDATA0 = new FlyweightCDATA(";[{`Rj");
      Rule rule0 = ruleSet0.getMatchingRule((Node) flyweightCDATA0);
      assertNull(rule0);
  }

  @Test
  public void test5()  throws Throwable  {
      RuleSet ruleSet0 = new RuleSet();
      NodeTypePattern nodeTypePattern0 = NodeTypePattern.ANY_TEXT;
      NullAction nullAction0 = NullAction.SINGLETON;
      Rule rule0 = new Rule((Pattern) nodeTypePattern0, (Action) nullAction0);
      ruleSet0.addRule(rule0);
      IndexedElement indexedElement0 = new IndexedElement("org.dom4j.rule.RuleSet@37cd74e0 [RuleSet: [] ]");
      Namespace namespace0 = indexedElement0.getNamespace();
      BeanElement beanElement0 = new BeanElement(";[{`Rj", namespace0, (Object) "text()");
      DOMText dOMText0 = new DOMText((Element) beanElement0, "text()");
      Rule rule1 = ruleSet0.getMatchingRule((Node) dOMText0);
      assertEquals(0.5, rule1.getPriority(), 0.01D);
  }

  @Test
  public void test6()  throws Throwable  {
      RuleSet ruleSet0 = new RuleSet();
      Rule[] ruleArray0 = ruleSet0.getRuleArray();
      assertNotNull(ruleArray0);
      
      Rule[] ruleArray1 = ruleSet0.getRuleArray();
      assertSame(ruleArray1, ruleArray0);
  }
}
