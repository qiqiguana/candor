/*
 * This file was automatically generated by EvoSuite
 */

package org.dom4j.rule.pattern;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.dom4j.Namespace;
import org.dom4j.Node;
import org.dom4j.NodeFilter;
import org.dom4j.NodeType;
import org.dom4j.rule.Pattern;
import org.dom4j.rule.pattern.DefaultPattern;
import org.dom4j.util.NonLazyElement;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DefaultPatternEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultPattern defaultPattern0 = new DefaultPattern((NodeFilter) null);
      String string0 = defaultPattern0.getMatchesNodeName();
      assertNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultPattern defaultPattern0 = new DefaultPattern((NodeFilter) null);
      Pattern[] patternArray0 = defaultPattern0.getUnionPatterns();
      assertNull(patternArray0);
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultPattern defaultPattern0 = new DefaultPattern((NodeFilter) null);
      double double0 = defaultPattern0.getPriority();
      assertEquals(0.5, double0, 0.01D);
  }

  @Test
  public void test3()  throws Throwable  {
      DefaultPattern defaultPattern0 = new DefaultPattern((NodeFilter) null);
      NodeType nodeType0 = defaultPattern0.getMatchType();
      assertEquals("ANY_NODE", nodeType0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      DefaultPattern defaultPattern0 = new DefaultPattern((NodeFilter) null);
      NonLazyElement nonLazyElement0 = new NonLazyElement("/b!]`s`", (Namespace) null);
      // Undeclared exception!
      try {
        defaultPattern0.matches((Node) nonLazyElement0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
