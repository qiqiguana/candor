/*
 * This file was automatically generated by EvoSuite
 */

package org.dom4j.rule;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.dom4j.Node;
import org.dom4j.dom.DOMDocument;
import org.dom4j.dom.DOMDocumentType;
import org.dom4j.dom.DOMElement;
import org.dom4j.rule.Action;
import org.dom4j.rule.Mode;
import org.dom4j.rule.NullAction;
import org.dom4j.rule.Pattern;
import org.dom4j.rule.Rule;
import org.dom4j.rule.RuleManager;
import org.dom4j.rule.pattern.NodeTypePattern;
import org.dom4j.xpath.XPathPattern;
import org.jaxen.pattern.NodeTypeTest;
import org.jaxen.pattern.UnionPattern;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RuleManagerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RuleManager ruleManager0 = new RuleManager();
      Mode mode0 = ruleManager0.getMode("Y\"NxIHF$urj*yy/s|#");
      assertNotNull(mode0);
      
      DOMElement dOMElement0 = new DOMElement("Y\"NxIHF$urj*yy/s|#");
      Rule rule0 = ruleManager0.getMatchingRule("Y\"NxIHF$urj*yy/s|#", (Node) dOMElement0);
      assertNotNull(rule0);
      
      ruleManager0.addRule(rule0);
      assertEquals(1, rule0.getAppearenceCount());
  }

  @Test
  public void test1()  throws Throwable  {
      RuleManager ruleManager0 = new RuleManager();
      ruleManager0.clear();
  }

  @Test
  public void test2()  throws Throwable  {
      RuleManager ruleManager0 = new RuleManager();
      NullAction nullAction0 = new NullAction();
      ruleManager0.setValueOfAction((Action) nullAction0);
      NodeTypePattern nodeTypePattern0 = NodeTypePattern.ANY_DOCUMENT;
      Rule rule0 = ruleManager0.createDefaultRule((Pattern) nodeTypePattern0, (Action) nullAction0);
      ruleManager0.removeRule(rule0);
      assertEquals(-1, rule0.getImportPrecedence());
  }

  @Test
  public void test3()  throws Throwable  {
      RuleManager ruleManager0 = new RuleManager();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((short)0);
      UnionPattern unionPattern0 = new UnionPattern((org.jaxen.pattern.Pattern) nodeTypeTest0, (org.jaxen.pattern.Pattern) nodeTypeTest0);
      XPathPattern xPathPattern0 = new XPathPattern((org.jaxen.pattern.Pattern) unionPattern0);
      NullAction nullAction0 = new NullAction();
      Rule rule0 = new Rule((Pattern) xPathPattern0, (Action) nullAction0);
      ruleManager0.removeRule(rule0);
      ruleManager0.addRule(rule0);
      assertEquals(1, rule0.getAppearenceCount());
  }

  @Test
  public void test4()  throws Throwable  {
      RuleManager ruleManager0 = new RuleManager();
      NullAction nullAction0 = new NullAction();
      NodeTypePattern nodeTypePattern0 = NodeTypePattern.ANY_DOCUMENT;
      Rule rule0 = ruleManager0.createDefaultRule((Pattern) nodeTypePattern0, (Action) nullAction0);
      ruleManager0.removeRule(rule0);
      assertEquals(-1, rule0.getImportPrecedence());
  }

  @Test
  public void test5()  throws Throwable  {
      RuleManager ruleManager0 = new RuleManager();
      Rule rule0 = ruleManager0.getMatchingRule("", (Node) null);
      assertNull(rule0);
  }

  @Test
  public void test6()  throws Throwable  {
      RuleManager ruleManager0 = new RuleManager();
      Mode mode0 = ruleManager0.getMode("Y\"NxIHF$urj*yy/s|#");
      DOMElement dOMElement0 = new DOMElement("Y\"NxIHF$urj*yy/s|#");
      DOMDocumentType dOMDocumentType0 = new DOMDocumentType();
      DOMDocument dOMDocument0 = new DOMDocument("Y\"NxIHF$urj*yy/s|#", dOMElement0, dOMDocumentType0);
      mode0.fireRule((Node) dOMDocument0);
      assertEquals(true, dOMDocument0.hasChildNodes());
  }
}
