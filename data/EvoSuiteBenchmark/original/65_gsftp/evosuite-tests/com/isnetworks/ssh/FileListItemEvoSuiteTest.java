/*
 * This file was automatically generated by EvoSuite
 */

package com.isnetworks.ssh;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.isnetworks.ssh.FileListItem;
import java.io.File;
import java.util.Vector;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FileListItemEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      File file0 = new File("~:w]");
      FileListItem fileListItem0 = new FileListItem(file0);
      fileListItem0.getLastModify();
      assertEquals("null~:w]", fileListItem0.getAbsolutePath());
      assertEquals(false, fileListItem0.isDirectory());
  }

  @Test
  public void test1()  throws Throwable  {
      File file0 = new File("~:w]");
      FileListItem fileListItem0 = new FileListItem(file0);
      fileListItem0.getParent();
      assertEquals("null~:w]", fileListItem0.getAbsolutePath());
      assertEquals(false, fileListItem0.isDirectory());
  }

  @Test
  public void test2()  throws Throwable  {
      FileListItem fileListItem0 = new FileListItem("sb9el%", "sb9el%", true, (-1L), 0L);
      long long0 = fileListItem0.getSize();
      assertEquals((-1L), long0);
      assertEquals(0L, fileListItem0.getLastModify());
      assertEquals(true, fileListItem0.isDirectory());
  }

  @Test
  public void test3()  throws Throwable  {
      FileListItem fileListItem0 = new FileListItem("sb9el%", "sb9el%", true, (-1L), 0L);
      String string0 = fileListItem0.getAbsolutePath();
      assertNotNull(string0);
      assertEquals((-1L), fileListItem0.getSize());
      assertEquals(true, fileListItem0.isDirectory());
      assertEquals(0L, fileListItem0.getLastModify());
      assertEquals("sb9el%sb9el%", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      File file0 = new File("~:w]");
      FileListItem fileListItem0 = new FileListItem(file0);
      String string0 = fileListItem0.getName();
      assertNotNull(string0);
      assertEquals(false, fileListItem0.isDirectory());
      assertEquals("null~:w]", fileListItem0.getAbsolutePath());
  }

  @Test
  public void test5()  throws Throwable  {
      Vector<FileListItem> vector0 = new Vector<FileListItem>();
      FileListItem fileListItem0 = new FileListItem("..", "..", true, (long) (-11), (long) (-11));
      vector0.add(fileListItem0);
      FileListItem.sort(vector0);
      assertEquals(false, vector0.isEmpty());
  }

  @Test
  public void test6()  throws Throwable  {
      FileListItem fileListItem0 = new FileListItem("sb9el%", "sb9el%", true, (-1L), 0L);
      Vector<FileListItem> vector0 = new Vector<FileListItem>();
      vector0.add(fileListItem0);
      FileListItem fileListItem1 = new FileListItem("..", "..", true, (long) (-11), (long) (-11));
      vector0.add(fileListItem1);
      FileListItem.sort(vector0);
      assertEquals(10, vector0.capacity());
  }

  @Test
  public void test7()  throws Throwable  {
      FileListItem fileListItem0 = new FileListItem("sb9el%", "sb9el%", true, (-1L), 0L);
      Vector<FileListItem> vector0 = new Vector<FileListItem>();
      vector0.add(fileListItem0);
      FileListItem fileListItem1 = new FileListItem("", "..", false, (long) (-11), (long) (-11));
      vector0.add(fileListItem1);
      FileListItem.sort(vector0);
      assertEquals(10, vector0.capacity());
  }

  @Test
  public void test8()  throws Throwable  {
      FileListItem fileListItem0 = new FileListItem("sb9el%", "sb9el%", true, (-1L), 0L);
      Vector<FileListItem> vector0 = new Vector<FileListItem>();
      FileListItem fileListItem1 = new FileListItem("S\"H':c8</\tK-eA4", "S\"H':c8</\tK-eA4", false, 1L, 1L);
      vector0.add(fileListItem1);
      vector0.add(fileListItem0);
      FileListItem.sort(vector0);
      assertEquals(2, vector0.size());
  }

  @Test
  public void test9()  throws Throwable  {
      Vector<FileListItem> vector0 = new Vector<FileListItem>();
      FileListItem fileListItem0 = new FileListItem("S\"H':c8</\tK-eA4", "S\"H':c8</\tK-eA4", false, 1L, 1L);
      vector0.add(fileListItem0);
      FileListItem fileListItem1 = new FileListItem("", "..", false, (long) (-11), (long) (-11));
      vector0.add(fileListItem1);
      FileListItem.sort(vector0);
      FileListItem.sort(vector0);
      assertEquals(2, vector0.size());
  }
}
