/*
 * This file was automatically generated by EvoSuite
 */

package umd.cs.shop;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import umd.cs.shop.JSListAxioms;
import umd.cs.shop.JSListLogicalAtoms;
import umd.cs.shop.JSListSubstitution;
import umd.cs.shop.JSPlan;
import umd.cs.shop.JSState;
import umd.cs.shop.JSSubstitution;

@RunWith(EvoSuiteRunner.class)
public class JSListAxiomsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JSListAxioms jSListAxioms0 = new JSListAxioms();
      jSListAxioms0.print();
      assertEquals(0, jSListAxioms0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      JSListAxioms jSListAxioms0 = new JSListAxioms();
      jSListAxioms0.add((Object) "[]");
      // Undeclared exception!
      try {
        jSListAxioms0.print();
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * java.lang.String cannot be cast to umd.cs.shop.JSAxiom
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      JSListAxioms jSListAxioms0 = new JSListAxioms();
      JSPlan jSPlan0 = new JSPlan();
      JSListSubstitution jSListSubstitution0 = jSListAxioms0.TheoremProver((JSListLogicalAtoms) jSPlan0, (JSState) null, (JSSubstitution) null, false);
      assertNotNull(jSListSubstitution0);
      assertEquals(1, jSListSubstitution0.size());
  }
}
