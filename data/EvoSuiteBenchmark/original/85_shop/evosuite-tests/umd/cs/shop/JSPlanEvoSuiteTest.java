/*
 * This file was automatically generated by EvoSuite
 */

package umd.cs.shop;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import umd.cs.shop.JSPlan;
import umd.cs.shop.JSTaskAtom;

@RunWith(EvoSuiteRunner.class)
public class JSPlanEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JSPlan jSPlan0 = new JSPlan();
      // Undeclared exception!
      try {
        jSPlan0.elementCost(1235);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 1235 >= 0
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      JSPlan jSPlan0 = new JSPlan();
      boolean boolean0 = jSPlan0.isFailure();
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      JSPlan jSPlan0 = new JSPlan();
      assertEquals(false, jSPlan0.isFailure());
      
      jSPlan0.assignFailure();
      assertEquals(true, jSPlan0.isFailure());
  }

  @Test
  public void test3()  throws Throwable  {
      JSPlan jSPlan0 = new JSPlan();
      // Undeclared exception!
      try {
        jSPlan0.insertWithCost(1543, (JSTaskAtom) null, (double) 1543);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 1543 > 0
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      JSPlan jSPlan0 = new JSPlan();
      jSPlan0.addWithCost((JSTaskAtom) null, (-353.9499437625844));
      assertEquals("[null]", jSPlan0.toString());
      assertEquals(false, jSPlan0.isFailure());
  }

  @Test
  public void test5()  throws Throwable  {
      JSPlan jSPlan0 = new JSPlan();
      jSPlan0.addElements(jSPlan0);
      assertEquals(false, jSPlan0.isFailure());
  }

  @Test
  public void test6()  throws Throwable  {
      JSPlan jSPlan0 = new JSPlan();
      jSPlan0.printPlan();
      assertEquals(false, jSPlan0.isFailure());
  }

  @Test
  public void test7()  throws Throwable  {
      JSPlan jSPlan0 = new JSPlan();
      jSPlan0.setSize(14);
      // Undeclared exception!
      try {
        jSPlan0.printPlan();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
