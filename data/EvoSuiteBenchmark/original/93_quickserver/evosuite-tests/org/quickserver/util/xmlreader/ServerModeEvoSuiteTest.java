/*
 * This file was automatically generated by EvoSuite
 */

package org.quickserver.util.xmlreader;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.quickserver.util.xmlreader.ServerMode;

@RunWith(EvoSuiteRunner.class)
public class ServerModeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ServerMode serverMode0 = new ServerMode();
      String string0 = serverMode0.toXML("Blocking");
      assertEquals(true, serverMode0.getBlocking());
      assertEquals("Blocking<server-mode>\nBlocking\t<blocking>true</blocking>\nBlocking</server-mode>\n", string0);
      assertNotNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      ServerMode serverMode0 = new ServerMode();
      String string0 = serverMode0.toXML((String) null);
      assertNotNull(string0);
      assertEquals(true, serverMode0.getBlocking());
      assertEquals("<server-mode>\n\t<blocking>true</blocking>\n</server-mode>\n", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      ServerMode serverMode0 = new ServerMode();
      assertEquals(true, serverMode0.getBlocking());
      
      serverMode0.setBlocking(false);
      String string0 = serverMode0.toString();
      assertEquals("Non-Blocking", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      ServerMode serverMode0 = new ServerMode();
      String string0 = serverMode0.toString();
      assertEquals(true, serverMode0.getBlocking());
      assertEquals("Blocking", string0);
  }
}
