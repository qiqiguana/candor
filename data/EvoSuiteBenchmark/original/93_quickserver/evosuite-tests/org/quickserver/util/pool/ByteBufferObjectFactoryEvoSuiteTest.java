/*
 * This file was automatically generated by EvoSuite
 */

package org.quickserver.util.pool;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.quickserver.util.pool.ByteBufferObjectFactory;

@RunWith(EvoSuiteRunner.class)
public class ByteBufferObjectFactoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ByteBufferObjectFactory byteBufferObjectFactory0 = new ByteBufferObjectFactory((-378), true);
      // Undeclared exception!
      try {
        byteBufferObjectFactory0.destroyObject((Object) "L!LN\"dBxt2}aK{DV");
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * java.lang.String cannot be cast to java.nio.ByteBuffer
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ByteBufferObjectFactory byteBufferObjectFactory0 = new ByteBufferObjectFactory((-712), true);
      byteBufferObjectFactory0.activateObject((Object) "");
      assertEquals(true, byteBufferObjectFactory0.useDirectByteBuffer);
      assertEquals((-712), byteBufferObjectFactory0.bufferSize);
  }

  @Test
  public void test2()  throws Throwable  {
      ByteBufferObjectFactory byteBufferObjectFactory0 = new ByteBufferObjectFactory((-1021), false);
      // Undeclared exception!
      try {
        byteBufferObjectFactory0.makeObject();
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ByteBufferObjectFactory byteBufferObjectFactory0 = new ByteBufferObjectFactory((-1), true);
      // Undeclared exception!
      try {
        byteBufferObjectFactory0.makeObject();
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      ByteBufferObjectFactory byteBufferObjectFactory0 = new ByteBufferObjectFactory((-712), true);
      byteBufferObjectFactory0.destroyObject((Object) null);
      assertEquals((-712), byteBufferObjectFactory0.bufferSize);
      assertEquals(true, byteBufferObjectFactory0.useDirectByteBuffer);
  }

  @Test
  public void test5()  throws Throwable  {
      ByteBufferObjectFactory byteBufferObjectFactory0 = new ByteBufferObjectFactory((-712), true);
      Object object0 = new Object();
      boolean boolean0 = byteBufferObjectFactory0.validateObject(object0);
      assertEquals(true, boolean0);
      assertEquals(true, byteBufferObjectFactory0.useDirectByteBuffer);
      assertEquals((-712), byteBufferObjectFactory0.bufferSize);
  }

  @Test
  public void test6()  throws Throwable  {
      ByteBufferObjectFactory byteBufferObjectFactory0 = new ByteBufferObjectFactory((-1021), false);
      boolean boolean0 = byteBufferObjectFactory0.validateObject((Object) null);
      assertEquals(false, byteBufferObjectFactory0.useDirectByteBuffer);
      assertEquals(false, boolean0);
      assertEquals((-1021), byteBufferObjectFactory0.bufferSize);
  }
}
