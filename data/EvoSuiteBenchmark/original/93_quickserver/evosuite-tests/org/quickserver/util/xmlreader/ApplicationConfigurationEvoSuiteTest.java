/*
 * This file was automatically generated by EvoSuite
 */

package org.quickserver.util.xmlreader;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.quickserver.util.xmlreader.ApplicationConfiguration;
import org.quickserver.util.xmlreader.Property;

@RunWith(EvoSuiteRunner.class)
public class ApplicationConfigurationEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ApplicationConfiguration applicationConfiguration0 = new ApplicationConfiguration();
      Property property0 = new Property();
      applicationConfiguration0.addProperty(property0);
      assertEquals(false, applicationConfiguration0.isEmpty());
      assertEquals("gui", applicationConfiguration0.getPromptType());
  }

  @Test
  public void test1()  throws Throwable  {
      ApplicationConfiguration applicationConfiguration0 = new ApplicationConfiguration();
      applicationConfiguration0.setPromptType((String) null);
      assertEquals("gui", applicationConfiguration0.getPromptType());
  }

  @Test
  public void test2()  throws Throwable  {
      ApplicationConfiguration applicationConfiguration0 = new ApplicationConfiguration();
      applicationConfiguration0.setPromptType("gui");
      assertEquals(true, applicationConfiguration0.isEmpty());
  }

  @Test
  public void test3()  throws Throwable  {
      ApplicationConfiguration applicationConfiguration0 = new ApplicationConfiguration();
      applicationConfiguration0.setPromptType("");
      assertEquals("gui", applicationConfiguration0.getPromptType());
  }

  @Test
  public void test4()  throws Throwable  {
      ApplicationConfiguration applicationConfiguration0 = new ApplicationConfiguration();
      applicationConfiguration0.setPromptType("U");
      assertEquals("gui", applicationConfiguration0.getPromptType());
  }

  @Test
  public void test5()  throws Throwable  {
      ApplicationConfiguration applicationConfiguration0 = new ApplicationConfiguration();
      applicationConfiguration0.setPromptType("console");
      assertEquals("console", applicationConfiguration0.getPromptType());
  }

  @Test
  public void test6()  throws Throwable  {
      ApplicationConfiguration applicationConfiguration0 = new ApplicationConfiguration();
      Property property0 = applicationConfiguration0.findProperty("b?*g^");
      assertNull(property0);
      assertEquals("gui", applicationConfiguration0.getPromptType());
  }

  @Test
  public void test7()  throws Throwable  {
      ApplicationConfiguration applicationConfiguration0 = new ApplicationConfiguration();
      applicationConfiguration0.put((Object) "", (Object) "{}");
      Property property0 = applicationConfiguration0.findProperty("");
      assertEquals("{}", property0.getValue());
      assertEquals("", property0.getName());
      assertEquals("gui", applicationConfiguration0.getPromptType());
      assertNotNull(property0);
  }

  @Test
  public void test8()  throws Throwable  {
      ApplicationConfiguration applicationConfiguration0 = new ApplicationConfiguration();
      String string0 = applicationConfiguration0.toXML("");
      assertEquals("<application-configuration>\n\t<prompt-type>gui</prompt-type></application-configuration>\n", string0);
      assertNotNull(string0);
  }

  @Test
  public void test9()  throws Throwable  {
      ApplicationConfiguration applicationConfiguration0 = new ApplicationConfiguration();
      String string0 = applicationConfiguration0.toXML((String) null);
      assertNotNull(string0);
      assertEquals("<application-configuration>\n\t<prompt-type>gui</prompt-type></application-configuration>\n", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      ApplicationConfiguration applicationConfiguration0 = new ApplicationConfiguration();
      Object object0 = new Object();
      applicationConfiguration0.put((Object) "gui", object0);
      // Undeclared exception!
      try {
        applicationConfiguration0.toXML((String) null);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * java.lang.Object cannot be cast to java.lang.String
         */
      }
  }
}
