/*
 * This file was automatically generated by EvoSuite
 */

package org.quickserver.util.xmlreader;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.quickserver.util.xmlreader.KeyStoreInfo;
import org.quickserver.util.xmlreader.SecureStore;
import org.quickserver.util.xmlreader.TrustStoreInfo;

@RunWith(EvoSuiteRunner.class)
public class SecureStoreEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SecureStore secureStore0 = new SecureStore();
      secureStore0.setType((String) null);
      assertEquals("org.quickserver.security.SecureStoreManager", secureStore0.getSecureStoreManager());
      assertEquals("JKS", secureStore0.getType());
      assertEquals("SunX509", secureStore0.getAlgorithm());
  }

  @Test
  public void test1()  throws Throwable  {
      SecureStore secureStore0 = new SecureStore();
      secureStore0.setType("");
      assertEquals("JKS", secureStore0.getType());
      assertEquals("org.quickserver.security.SecureStoreManager", secureStore0.getSecureStoreManager());
      assertEquals("SunX509", secureStore0.getAlgorithm());
  }

  @Test
  public void test2()  throws Throwable  {
      SecureStore secureStore0 = new SecureStore();
      assertEquals("JKS", secureStore0.getType());
      
      secureStore0.setType("JKS");
      assertEquals("SunX509", secureStore0.getAlgorithm());
      assertEquals("org.quickserver.security.SecureStoreManager", secureStore0.getSecureStoreManager());
  }

  @Test
  public void test3()  throws Throwable  {
      SecureStore secureStore0 = new SecureStore();
      secureStore0.setAlgorithm((String) null);
      assertEquals("org.quickserver.security.SecureStoreManager", secureStore0.getSecureStoreManager());
      assertEquals("JKS", secureStore0.getType());
      assertEquals("SunX509", secureStore0.getAlgorithm());
  }

  @Test
  public void test4()  throws Throwable  {
      SecureStore secureStore0 = new SecureStore();
      secureStore0.setAlgorithm("{_dWSu0rBmFf");
      assertEquals("{_dWSu0rBmFf", secureStore0.getAlgorithm());
      assertEquals("JKS", secureStore0.getType());
  }

  @Test
  public void test5()  throws Throwable  {
      SecureStore secureStore0 = new SecureStore();
      secureStore0.setAlgorithm("");
      assertEquals("JKS", secureStore0.getType());
      assertEquals("org.quickserver.security.SecureStoreManager", secureStore0.getSecureStoreManager());
      assertEquals("SunX509", secureStore0.getAlgorithm());
  }

  @Test
  public void test6()  throws Throwable  {
      SecureStore secureStore0 = new SecureStore();
      secureStore0.setProvider((String) null);
      assertEquals("JKS", secureStore0.getType());
      assertEquals("SunX509", secureStore0.getAlgorithm());
      assertEquals("org.quickserver.security.SecureStoreManager", secureStore0.getSecureStoreManager());
  }

  @Test
  public void test7()  throws Throwable  {
      SecureStore secureStore0 = new SecureStore();
      secureStore0.setProvider("");
      assertEquals("SunX509", secureStore0.getAlgorithm());
      assertEquals("org.quickserver.security.SecureStoreManager", secureStore0.getSecureStoreManager());
      assertEquals("JKS", secureStore0.getType());
  }

  @Test
  public void test8()  throws Throwable  {
      SecureStore secureStore0 = new SecureStore();
      secureStore0.setProvider("X{cZa]c_dRBp[NW");
      String string0 = secureStore0.toXML("gY7'90K|mcD@e");
      assertEquals("SunX509", secureStore0.getAlgorithm());
      assertEquals("JKS", secureStore0.getType());
      assertEquals("org.quickserver.security.SecureStoreManager", secureStore0.getSecureStoreManager());
      assertNotNull(string0);
  }

  @Test
  public void test9()  throws Throwable  {
      SecureStore secureStore0 = new SecureStore();
      secureStore0.setKeyStoreInfo((KeyStoreInfo) null);
      assertEquals("JKS", secureStore0.getType());
      assertEquals("SunX509", secureStore0.getAlgorithm());
      assertEquals("org.quickserver.security.SecureStoreManager", secureStore0.getSecureStoreManager());
  }

  @Test
  public void test10()  throws Throwable  {
      SecureStore secureStore0 = new SecureStore();
      secureStore0.setTrustStoreInfo((TrustStoreInfo) null);
      assertEquals("JKS", secureStore0.getType());
      assertEquals("SunX509", secureStore0.getAlgorithm());
      assertEquals("org.quickserver.security.SecureStoreManager", secureStore0.getSecureStoreManager());
  }

  @Test
  public void test11()  throws Throwable  {
      SecureStore secureStore0 = new SecureStore();
      TrustStoreInfo trustStoreInfo0 = new TrustStoreInfo();
      secureStore0.setTrustStoreInfo(trustStoreInfo0);
      String string0 = secureStore0.toXML("");
      assertNotNull(string0);
      assertEquals("<secure-store>\n\t<type>JKS</type>\n\t<algorithm>SunX509</algorithm>\n\t<trust-store-info>\n\t\t<store-file>NONE</store-file>\n\t\t</store-password>\n\t</trust-store-info>\n\t<secure-store-manager>org.quickserver.security.SecureStoreManager</secure-store-manager>\n</secure-store>\n", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      SecureStore secureStore0 = new SecureStore();
      secureStore0.setSecureStoreManager((String) null);
      assertEquals("org.quickserver.security.SecureStoreManager", secureStore0.getSecureStoreManager());
      assertEquals("JKS", secureStore0.getType());
      assertEquals("SunX509", secureStore0.getAlgorithm());
  }

  @Test
  public void test13()  throws Throwable  {
      SecureStore secureStore0 = new SecureStore();
      secureStore0.setSecureStoreManager("");
      assertEquals("SunX509", secureStore0.getAlgorithm());
      assertEquals("org.quickserver.security.SecureStoreManager", secureStore0.getSecureStoreManager());
      assertEquals("JKS", secureStore0.getType());
  }

  @Test
  public void test14()  throws Throwable  {
      SecureStore secureStore0 = new SecureStore();
      assertEquals("org.quickserver.security.SecureStoreManager", secureStore0.getSecureStoreManager());
      
      secureStore0.setSecureStoreManager("org.quickserver.security.SecureStoreManager");
      assertEquals("JKS", secureStore0.getType());
      assertEquals("SunX509", secureStore0.getAlgorithm());
  }

  @Test
  public void test15()  throws Throwable  {
      SecureStore secureStore0 = new SecureStore();
      String string0 = secureStore0.toXML((String) null);
      assertNotNull(string0);
      assertEquals("<secure-store>\n\t<type>JKS</type>\n\t<algorithm>SunX509</algorithm>\n\t<secure-store-manager>org.quickserver.security.SecureStoreManager</secure-store-manager>\n</secure-store>\n", string0);
  }

  @Test
  public void test16()  throws Throwable  {
      SecureStore secureStore0 = new SecureStore();
      KeyStoreInfo keyStoreInfo0 = new KeyStoreInfo();
      secureStore0.setKeyStoreInfo(keyStoreInfo0);
      String string0 = secureStore0.toXML("");
      assertNotNull(string0);
      assertEquals("<secure-store>\n\t<type>JKS</type>\n\t<algorithm>SunX509</algorithm>\n\t<key-store-info>\n\t\t<store-file>NONE</store-file>\n\t\t</store-password>\n\t\t</key-password>\n\t</key-store-info>\n\t<secure-store-manager>org.quickserver.security.SecureStoreManager</secure-store-manager>\n</secure-store>\n", string0);
  }
}
