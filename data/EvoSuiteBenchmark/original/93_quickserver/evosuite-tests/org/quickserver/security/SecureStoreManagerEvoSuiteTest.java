/*
 * This file was automatically generated by EvoSuite
 */

package org.quickserver.security;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sun.net.ssl.internal.ssl.SSLSocketFactoryImpl;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.security.NoSuchAlgorithmException;
import javax.net.ssl.KeyManager;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLServerSocket;
import javax.net.ssl.TrustManager;
import org.quickserver.security.SecureStoreManager;
import org.quickserver.util.xmlreader.QuickServerConfig;

@RunWith(EvoSuiteRunner.class)
public class SecureStoreManagerEvoSuiteTest {


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 org.quickserver.security.SecureStoreManager.getSSLContext(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;: root-Branch
   * 2 org.quickserver.security.SecureStoreManager.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      SecureStoreManager secureStoreManager0 = new SecureStoreManager();
      try {
        secureStoreManager0.getSSLContext(":9:iolqcbKSg&Z4u");
        fail("Expecting exception: NoSuchAlgorithmException");
      } catch(NoSuchAlgorithmException e) {
        /*
         * :9:iolqcbKSg&Z4u SSLContext not available
         */
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 org.quickserver.security.SecureStoreManager.getSocketFactory(Ljavax/net/ssl/SSLContext;)Ljavax/net/ssl/SSLSocketFactory;: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      SecureStoreManager secureStoreManager0 = new SecureStoreManager();
      SSLContext sSLContext0 = SSLContext.getDefault();
      SSLSocketFactoryImpl sSLSocketFactoryImpl0 = (SSLSocketFactoryImpl)secureStoreManager0.getSocketFactory(sSLContext0);
      assertNotNull(sSLSocketFactoryImpl0);
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 org.quickserver.security.SecureStoreManager.loadKeyManagers(Lorg/quickserver/util/xmlreader/QuickServerConfig;)[Ljavax/net/ssl/KeyManager;: I13 Branch 1 IFNONNULL L50 - true
   * 2 org.quickserver.security.SecureStoreManager.loadKeyManagers(Lorg/quickserver/util/xmlreader/QuickServerConfig;)[Ljavax/net/ssl/KeyManager;: I31 Branch 2 IFNONNULL L57 - false
   */
  @Test
  public void test2()  throws Throwable  {
      SecureStoreManager secureStoreManager0 = new SecureStoreManager();
      QuickServerConfig quickServerConfig0 = new QuickServerConfig();
      KeyManager[] keyManagerArray0 = secureStoreManager0.loadKeyManagers(quickServerConfig0);
      assertNull(keyManagerArray0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 org.quickserver.security.SecureStoreManager.loadTrustManagers(Lorg/quickserver/util/xmlreader/QuickServerConfig;)[Ljavax/net/ssl/TrustManager;: I18 Branch 12 IFNONNULL L142 - false
   */
  @Test
  public void test3()  throws Throwable  {
      SecureStoreManager secureStoreManager0 = new SecureStoreManager();
      QuickServerConfig quickServerConfig0 = new QuickServerConfig();
      TrustManager[] trustManagerArray0 = secureStoreManager0.loadTrustManagers(quickServerConfig0);
      assertNull(trustManagerArray0);
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 org.quickserver.security.SecureStoreManager.logSSLServerSocketInfo(Ljavax/net/ssl/SSLServerSocket;)V: I5 Branch 25 IFNE L256 - false
   * 2 org.quickserver.security.SecureStoreManager.<init>()V: root-Branch
   */
  @Test
  public void test4()  throws Throwable  {
      SecureStoreManager secureStoreManager0 = new SecureStoreManager();
      secureStoreManager0.logSSLServerSocketInfo((SSLServerSocket) null);
  }
}
