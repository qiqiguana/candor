/*
 * This file was automatically generated by EvoSuite
 */

package org.quickserver.net.server.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.net.SocketException;
import java.net.SocketTimeoutException;
import org.junit.BeforeClass;
import org.quickserver.net.qsadmin.CommandHandler;
import org.quickserver.net.server.ClientCommandHandler;
import org.quickserver.net.server.ClientHandler;
import org.quickserver.net.server.impl.BlockingClientHandler;
import org.quickserver.net.server.impl.DefaultClientEventHandler;

@RunWith(EvoSuiteRunner.class)
public class DefaultClientEventHandlerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      defaultClientEventHandler0.setClientCommandHandler((ClientCommandHandler) commandHandler0);
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler((-40));
      try {
        defaultClientEventHandler0.gotConnected((ClientHandler) blockingClientHandler0);
        fail("Expecting exception: SocketException");
      } catch(SocketException e) {
        /*
         * Connection is no more open!
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      defaultClientEventHandler0.setClientCommandHandler((ClientCommandHandler) null);
  }

  @Test
  public void test2()  throws Throwable  {
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler();
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      // Undeclared exception!
      try {
        defaultClientEventHandler0.gotConnected((ClientHandler) blockingClientHandler0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      defaultClientEventHandler0.setClientCommandHandler((ClientCommandHandler) commandHandler0);
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler((-40));
      defaultClientEventHandler0.lostConnection((ClientHandler) blockingClientHandler0);
      assertEquals("<ClientHandler-Pool#-40-ID:23>", blockingClientHandler0.getName());
      assertEquals("{<ClientHandler-Pool#-40-ID:23> - [non-connected]}", blockingClientHandler0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler();
      // Undeclared exception!
      try {
        defaultClientEventHandler0.lostConnection((ClientHandler) blockingClientHandler0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      defaultClientEventHandler0.setClientCommandHandler((ClientCommandHandler) commandHandler0);
      try {
        defaultClientEventHandler0.closingConnection((ClientHandler) null);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      // Undeclared exception!
      try {
        defaultClientEventHandler0.closingConnection((ClientHandler) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
