/*
 * This file was automatically generated by EvoSuite
 */

package de.beiri22.stringincrementor.relativestring;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.beiri22.stringincrementor.relativestring.RelativeString;
import de.beiri22.stringincrementor.relativestring.StringLink;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RelativeStringEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RelativeString relativeString0 = new RelativeString();
      relativeString0.setAbsolute("K('sAomq[P)&M7");
      assertEquals(15, relativeString0.getLength());
  }

  @Test
  public void test1()  throws Throwable  {
      RelativeString relativeString0 = new RelativeString();
      // Undeclared exception!
      try {
        relativeString0.getLink((-1639));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      RelativeString relativeString0 = new RelativeString();
      String string0 = relativeString0.getAbsolute();
      assertEquals("", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte)7;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      RelativeString relativeString0 = new RelativeString((InputStream) byteArrayInputStream0);
      relativeString0.debugPrint();
  }

  @Test
  public void test4()  throws Throwable  {
      RelativeString relativeString0 = new RelativeString();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(389);
      relativeString0.bytesToStream((OutputStream) byteArrayOutputStream0);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", byteArrayOutputStream0.toString());
      assertEquals(8, byteArrayOutputStream0.size());
  }

  @Test
  public void test5()  throws Throwable  {
      RelativeString relativeString0 = new RelativeString();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(376);
      relativeString0.addLink((StringLink) null);
      // Undeclared exception!
      try {
        relativeString0.bytesToStream((OutputStream) byteArrayOutputStream0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      RelativeString relativeString0 = new RelativeString((InputStream) byteArrayInputStream0);
      relativeString0.getLength();
  }
}
