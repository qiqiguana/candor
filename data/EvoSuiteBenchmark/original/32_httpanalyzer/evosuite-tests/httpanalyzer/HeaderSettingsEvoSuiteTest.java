/*
 * This file was automatically generated by EvoSuite
 */

package httpanalyzer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import httpanalyzer.HeaderSettings;
import java.net.URI;
import org.apache.http.Header;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpHead;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.methods.HttpRequestBase;

@RunWith(EvoSuiteRunner.class)
public class HeaderSettingsEvoSuiteTest {


  //Test case number: 0
  /*
   * 8 covered goals:
   * 1 httpanalyzer.HeaderSettings.initHeaders(ILjava/lang/String;)V: I41 Branch 1 IFNULL L68 - false
   * 2 httpanalyzer.HeaderSettings.getHeaders()Ljava/lang/String;: I22 Branch 4 IF_ICMPGE L117 - true
   * 3 httpanalyzer.HeaderSettings.getHeaders()Ljava/lang/String;: I22 Branch 4 IF_ICMPGE L117 - false
   * 4 httpanalyzer.HeaderSettings.showHeaders(Lorg/apache/http/client/methods/HttpRequestBase;)Ljava/lang/String;: I19 Branch 5 IF_ICMPGE L127 - true
   * 5 httpanalyzer.HeaderSettings.initHeaders(ILjava/lang/String;)V: I41 Branch 1 IFNULL L68 - true
   * 6 httpanalyzer.HeaderSettings.setHeaders()[Lorg/apache/http/Header;: root-Branch
   * 7 httpanalyzer.HeaderSettings.<init>()V: root-Branch
   * 8 httpanalyzer.HeaderSettings.clearCookie()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      HeaderSettings headerSettings0 = new HeaderSettings();
      String[] stringArray0 = HeaderSettings.userAgents;
      String string0 = headerSettings0.setUserAgent;
      Header[] headerArray0 = HeaderSettings.setHeaders();
      assertNull(headerArray0);
      
      HeaderSettings headerSettings1 = new HeaderSettings();
      HeaderSettings.initHeaders(0, (String) null);
      String string1 = HeaderSettings.getHeaders();
      headerSettings1.setUserAgent = null;
      HeaderSettings.clearCookie();
      HttpGet httpGet0 = new HttpGet();
      String string2 = HeaderSettings.showHeaders((HttpRequestBase) httpGet0);
      assertFalse(string2.equals(string1));
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * 1 httpanalyzer.HeaderSettings.initHeaders(Ljava/lang/String;)V: I20 Branch 2 IF_ICMPGE L80 - true
   * 2 httpanalyzer.HeaderSettings.initHeaders(Ljava/lang/String;)V: I20 Branch 2 IF_ICMPGE L80 - false
   * 3 httpanalyzer.HeaderSettings.initHeaders(Ljava/lang/String;)V: I27 Branch 3 IFGT L81 - false
   */
  @Test
  public void test1()  throws Throwable  {
      HeaderSettings.initHeaders("JF4:FNj~w");
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 httpanalyzer.HeaderSettings.initHeaders(Ljava/lang/String;)V: I27 Branch 3 IFGT L81 - true
   * 2 httpanalyzer.HeaderSettings.initHeaders(Ljava/lang/String;)V: I20 Branch 2 IF_ICMPGE L80 - true
   * 3 httpanalyzer.HeaderSettings.initHeaders(Ljava/lang/String;)V: I20 Branch 2 IF_ICMPGE L80 - false
   */
  @Test
  public void test2()  throws Throwable  {
      HeaderSettings.initHeaders("");
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 httpanalyzer.HeaderSettings.showHeaders(Lorg/apache/http/client/methods/HttpRequestBase;)Ljava/lang/String;: I19 Branch 5 IF_ICMPGE L127 - false
   */
  @Test
  public void test3()  throws Throwable  {
      HttpHead httpHead0 = new HttpHead((URI) null);
      httpHead0.setHeader("HTTP entity too large to be buffered in memory", "HTTP entity too large to be buffered in memory");
      String string0 = HeaderSettings.showHeaders((HttpRequestBase) httpHead0);
      assertNotNull(string0);
      assertEquals("HTTP entity too large to be buffered in memory: HTTP entity too large to be buffered in memory\n", string0);
  }

  //Test case number: 4
  /*
   * 8 covered goals:
   * 1 httpanalyzer.HeaderSettings.showHeaders([Lorg/apache/http/Header;)Ljava/lang/String;: I14 Branch 6 IF_ICMPGE L136 - false
   * 2 httpanalyzer.HeaderSettings.setHeaders()[Lorg/apache/http/Header;: root-Branch
   * 3 httpanalyzer.HeaderSettings.setCookie(Ljava/lang/String;)V: root-Branch
   * 4 httpanalyzer.HeaderSettings.<init>()V: root-Branch
   * 5 httpanalyzer.HeaderSettings.clearCookie()V: root-Branch
   * 6 httpanalyzer.HeaderSettings.showHeaders(Lorg/apache/http/client/methods/HttpRequestBase;)Ljava/lang/String;: I19 Branch 5 IF_ICMPGE L127 - true
   * 7 httpanalyzer.HeaderSettings.showHeaders([Lorg/apache/http/Header;)Ljava/lang/String;: I14 Branch 6 IF_ICMPGE L136 - true
   * 8 httpanalyzer.HeaderSettings.getHeaders()Ljava/lang/String;: I22 Branch 4 IF_ICMPGE L117 - true
   */
  @Test
  public void test4()  throws Throwable  {
      HeaderSettings headerSettings0 = new HeaderSettings();
      String string0 = headerSettings0.setUserAgent;
      HeaderSettings headerSettings1 = new HeaderSettings();
      Header[] headerArray0 = HeaderSettings.setHeaders();
      HeaderSettings.getHeaders();
      String string1 = headerSettings1.setUserAgent;
      HeaderSettings.getHeaders();
      HeaderSettings.showHeaders(headerArray0);
      HeaderSettings.showHeaders(headerArray0);
      HeaderSettings.clearCookie();
      HeaderSettings headerSettings2 = new HeaderSettings();
      HeaderSettings.getHeaders();
      HeaderSettings.getHeaders();
      HeaderSettings.clearCookie();
      HeaderSettings.getHeaders();
      HttpPost httpPost0 = new HttpPost();
      String string2 = headerSettings2.setUserAgent;
      HeaderSettings.showHeaders((HttpRequestBase) httpPost0);
      HeaderSettings.getHeaders();
      HeaderSettings.setCookie((String) null);
      HeaderSettings.setHeaders();
      String string3 = HeaderSettings.showHeaders(headerArray0);
      assertEquals("", string3);
  }
}
