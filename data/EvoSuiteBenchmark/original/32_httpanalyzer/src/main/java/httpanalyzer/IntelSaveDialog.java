/*
 * GNU GENERAL PUBLIC LICENSE
 * Version 3, 29 June 2007
 * 
 * Copyright (C) 2010, vlad
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * IntelSaveDialog.java
 *
 * Created on 31.03.2010, 13:51:12
 */
package httpanalyzer;

import javax.swing.JFileChooser;

/**
 *
 * @author vlad
 */
public class IntelSaveDialog extends javax.swing.JDialog {

    static final String DESCRIPTION_1 = "<html>Content type is ";
    static final String DESCRIPTION_2 = "What would you like to do with it?</html>";
    static int status; // 0 - nothing, 1 - show, 2 - write
    static String fileName;

    /** Creates new form IntelSaveDialog */
    public IntelSaveDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * Get message and set it
     * for showing in Dialog
     * @param message
     */
    public static void setMessage(String message) {
        StringBuffer strBuf = new StringBuffer();
        strBuf.append(DESCRIPTION_1);
        strBuf.append("\"");
        strBuf.append(message);
        strBuf.append("\"<br>");
        strBuf.append(DESCRIPTION_2);
        description.setText(strBuf.toString());
    }
    public static int getStatus (){
        return status;
    }

    public static String getFilename() {
        return fileName;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        iconLabel = new javax.swing.JLabel();
        javax.swing.JLabel warnTitleLabel = new javax.swing.JLabel();
        description = new javax.swing.JLabel();
        saveToButton = new javax.swing.JButton();
        displayButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(httpanalyzer.HttpAnalyzerApp.class).getContext().getResourceMap(IntelSaveDialog.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        iconLabel.setIcon(resourceMap.getIcon("iconLabel.icon")); // NOI18N
        iconLabel.setText(resourceMap.getString("iconLabel.text")); // NOI18N
        iconLabel.setMaximumSize(new java.awt.Dimension(128, 128));
        iconLabel.setName("iconLabel"); // NOI18N

        warnTitleLabel.setFont(warnTitleLabel.getFont().deriveFont(warnTitleLabel.getFont().getStyle() | java.awt.Font.BOLD, warnTitleLabel.getFont().getSize()+4));
        warnTitleLabel.setText(resourceMap.getString("warnTitleLabel.text")); // NOI18N
        warnTitleLabel.setName("warnTitleLabel"); // NOI18N

        description.setFont(resourceMap.getFont("description.font")); // NOI18N
        description.setText(resourceMap.getString("description.text")); // NOI18N
        description.setName("description"); // NOI18N

        saveToButton.setFont(resourceMap.getFont("saveToButton.font")); // NOI18N
        saveToButton.setIcon(resourceMap.getIcon("saveToButton.icon")); // NOI18N
        saveToButton.setText(resourceMap.getString("saveToButton.text")); // NOI18N
        saveToButton.setName("saveToButton"); // NOI18N
        saveToButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveToButtonActionPerformed(evt);
            }
        });

        displayButton.setFont(resourceMap.getFont("displayButton.font")); // NOI18N
        displayButton.setIcon(resourceMap.getIcon("displayButton.icon")); // NOI18N
        displayButton.setText(resourceMap.getString("displayButton.text")); // NOI18N
        displayButton.setToolTipText(resourceMap.getString("displayButton.toolTipText")); // NOI18N
        displayButton.setName("displayButton"); // NOI18N
        displayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayButtonActionPerformed(evt);
            }
        });

        cancelButton.setFont(resourceMap.getFont("cancelButton.font")); // NOI18N
        cancelButton.setIcon(resourceMap.getIcon("cancelButton.icon")); // NOI18N
        cancelButton.setText(resourceMap.getString("cancelButton.text")); // NOI18N
        cancelButton.setToolTipText(resourceMap.getString("cancelButton.toolTipText")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jSeparator1.setName("jSeparator1"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(iconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(description, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                            .addComponent(warnTitleLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(saveToButton)
                        .addGap(53, 53, 53)
                        .addComponent(displayButton)
                        .addGap(18, 18, 18)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(warnTitleLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(description, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(iconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(saveToButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(displayButton)
                        .addComponent(cancelButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveToButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveToButtonActionPerformed
        // TODO add your handling code here:
        //Create a file chooser
        final JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Save content");
        fileChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);

        int returnVal = fileChooser.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            fileName = fileChooser.getSelectedFile().toString();
            status = 2;
            setVisible(false);
        }
    }//GEN-LAST:event_saveToButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        status = 0;
        setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void displayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayButtonActionPerformed
        status =1;
        setVisible(false);
    }//GEN-LAST:event_displayButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                IntelSaveDialog dialog = new IntelSaveDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private static javax.swing.JLabel description;
    private javax.swing.JButton displayButton;
    private javax.swing.JLabel iconLabel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton saveToButton;
    // End of variables declaration//GEN-END:variables
}
