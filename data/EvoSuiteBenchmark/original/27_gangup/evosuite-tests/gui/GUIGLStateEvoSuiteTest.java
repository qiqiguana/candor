/*
 * This file was automatically generated by EvoSuite
 */

package gui;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import gui.GUIGLState;
import gui.gl.XithMapRenderer;
import java.util.Observable;
import org.junit.BeforeClass;
import state.Player;

@RunWith(EvoSuiteRunner.class)
public class GUIGLStateEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      GUIGLState gUIGLState0 = new GUIGLState();
      // Undeclared exception!
      try {
        gUIGLState0.setXMR((XithMapRenderer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      GUIGLState gUIGLState0 = new GUIGLState();
      // Undeclared exception!
      try {
        gUIGLState0.setSelected((Player) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      GUIGLState gUIGLState0 = new GUIGLState();
      Player player0 = new Player(24, "iiecU~!(d3:BL", "iiecU~!(d3:BL", 24);
      // Undeclared exception!
      try {
        gUIGLState0.setSelected(player0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      GUIGLState gUIGLState0 = new GUIGLState();
      Player player0 = new Player();
      gUIGLState0.update((Observable) gUIGLState0, (Object) player0);
      assertEquals(0.0F, player0.getZ(), 0.01F);
  }

  @Test
  public void test4()  throws Throwable  {
      GUIGLState gUIGLState0 = new GUIGLState();
      gUIGLState0.update((Observable) gUIGLState0, (Object) null);
      assertEquals(false, gUIGLState0.hasChanged());
  }

  @Test
  public void test5()  throws Throwable  {
      GUIGLState gUIGLState0 = new GUIGLState();
      gUIGLState0.update((Observable) gUIGLState0, (Object) gUIGLState0);
      assertEquals(0, gUIGLState0.countObservers());
  }
}
