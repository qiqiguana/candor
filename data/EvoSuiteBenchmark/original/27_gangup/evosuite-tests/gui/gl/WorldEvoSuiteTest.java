/*
 * This file was automatically generated by EvoSuite
 */

package gui.gl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.xith3d.datatypes.Coord3f;
import com.xith3d.scenegraph.SpotLight;
import com.xith3d.scenegraph.TransformGroup;
import gui.gl.PickRay;
import gui.gl.World;
import java.awt.Point;
import javax.vecmath.Point3f;
import javax.vecmath.Vector3f;
import map.PathNotFoundException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class WorldEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      World world0 = new World(824, 824, 824);
      world0.save("glVertexAttr6b2hvNV(");
      assertEquals("", world0.getName());
  }

  @Test
  public void test1()  throws Throwable  {
      World world0 = new World(1342, 1342, 1342);
      world0.panZ((float) 1342);
      assertEquals(false, world0.isCompiled());
  }

  @Test
  public void test2()  throws Throwable  {
      World world0 = new World(1342, 1342, 1342);
      assertNotNull(world0);
      
      world0.load("");
      assertEquals(false, world0.getGridVisible());
  }

  @Test
  public void test3()  throws Throwable  {
      World world0 = new World(3, 3, 3);
      assertNotNull(world0);
      
      world0.render();
      assertEquals(false, world0.getGridVisible());
  }

  @Test
  public void test4()  throws Throwable  {
      World world0 = new World(1352, 1352, 1352);
      assertNotNull(world0);
      
      // Undeclared exception!
      try {
        world0.setCellNode(1352, 1352, (TransformGroup) world0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 1352
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      World world0 = new World(0, 0, 2038.1143F);
      assertNotNull(world0);
      
      Vector3f vector3f0 = world0.getOrientation();
      assertEquals(false, world0.getGridVisible());
      assertEquals("(0.0, 0.0, 0.0)", vector3f0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      World world0 = new World(1352, 1352, 1352);
      assertNotNull(world0);
      
      world0.rotXYZ((float) 1025, (-1136.6683F), (-3.6527796F));
      assertEquals(false, world0.getGridVisible());
  }

  @Test
  public void test7()  throws Throwable  {
      World world0 = new World(1352, 1352, 1352);
      assertNotNull(world0);
      
      // Undeclared exception!
      try {
        world0.setTexture("]ts,");
        fail("Expecting exception: Error");
      } catch(Error e) {
        /*
         * Cannot load image grass2.png
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      World world0 = new World(1352, 1352, 1352);
      assertNotNull(world0);
      
      Point3f point3f0 = world0.getPosition();
      assertEquals("(-913952.0, 0.0, -913952.0)", point3f0.toString());
      assertEquals(false, world0.getGridVisible());
      assertNotNull(point3f0);
  }

  @Test
  public void test9()  throws Throwable  {
      World world0 = new World(824, 824, 824);
      assertNotNull(world0);
      
      float[] floatArray0 = new float[10];
      Coord3f coord3f0 = new Coord3f(floatArray0);
      world0.setOrientation((Vector3f) coord3f0);
      assertEquals(false, world0.getGridVisible());
  }

  @Test
  public void test10()  throws Throwable  {
      World world0 = new World(1352, 1352, 1352);
      // Undeclared exception!
      try {
        world0.setCellTexture(1025, 1025, "]Z7\"rsz N<(E>H");
        fail("Expecting exception: Error");
      } catch(Error e) {
        /*
         * Cannot load image ]Z7\"rsz N<(E>H
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      World world0 = new World(0, 0, 2038.1143F);
      assertNotNull(world0);
      
      Point3f point3f0 = new Point3f(0.0F, 1.0F, 2038.1143F);
      Point point0 = world0.gridCoordToCell(point3f0);
      assertEquals("java.awt.Point[x=0,y=1]", point0.toString());
  }

  @Test
  public void test12()  throws Throwable  {
      World world0 = new World(1352, 1352, 1352);
      assertNotNull(world0);
      
      world0.removeAllActors();
      assertEquals(false, world0.getGridVisible());
      assertEquals(3, world0.numChildren());
  }

  @Test
  public void test13()  throws Throwable  {
      World world0 = new World(0, 0, 0);
      assertNotNull(world0);
      
      // Undeclared exception!
      try {
        world0.findPath(1, 1, 0, 636);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      World world0 = new World(1352, 1352, 1352);
      assertNotNull(world0);
      
      world0.panX(668.7169F);
      assertEquals(false, world0.getGridVisible());
  }

  @Test
  public void test15()  throws Throwable  {
      World world0 = new World(3, 3, 3);
      world0.panY((-513.3716F));
      assertEquals(false, world0.getShowBounds());
  }

  @Test
  public void test16()  throws Throwable  {
      World world0 = new World(0, 0, 2038.1143F);
      SpotLight spotLight0 = new SpotLight();
      Point3f point3f0 = new Point3f(0.0F, 1.0F, 2038.1143F);
      Vector3f vector3f0 = spotLight0.getDirection();
      PickRay pickRay0 = new PickRay(point3f0, vector3f0);
      Point3f point3f1 = world0.intersect(pickRay0);
      assertNull(point3f1);
  }

  @Test
  public void test17()  throws Throwable  {
      World world0 = new World(1352, 1352, 1352);
      assertNotNull(world0);
      
      // Undeclared exception!
      try {
        world0.setCellTexture(1025, 1025, "", false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test18()  throws Throwable  {
      World world0 = new World(1342, 1342, 1342);
      // Undeclared exception!
      try {
        world0.setActiveCell(1342, 1342);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
