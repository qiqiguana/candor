/*
 * This file was automatically generated by EvoSuite
 */

package gui.gl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.xith3d.datatypes.Coord3f;
import com.xith3d.scenegraph.Transform3D;
import gui.gl.Camera;
import javax.vecmath.Color3f;
import javax.vecmath.TexCoord3f;
import javax.vecmath.Tuple3f;
import javax.vecmath.Vector3f;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CameraEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Transform3D transform3D0 = new Transform3D();
      Camera camera0 = new Camera(transform3D0);
      camera0.getTransform();
      assertEquals(3L, transform3D0.getStateId());
  }

  @Test
  public void test1()  throws Throwable  {
      Transform3D transform3D0 = new Transform3D();
      Camera camera0 = new Camera(transform3D0);
      TexCoord3f texCoord3f0 = new TexCoord3f();
      camera0.setRotation((Tuple3f) texCoord3f0);
      camera0.performCameraMovement();
      assertEquals(54L, transform3D0.getStateId());
  }

  @Test
  public void test2()  throws Throwable  {
      Transform3D transform3D0 = new Transform3D();
      Camera camera0 = new Camera(transform3D0);
      float[] floatArray0 = new float[8];
      Color3f color3f0 = new Color3f(floatArray0);
      camera0.setTranslation((Tuple3f) color3f0);
      camera0.performCameraMovement();
      assertEquals(163L, transform3D0.getStateId());
  }

  @Test
  public void test3()  throws Throwable  {
      Transform3D transform3D0 = new Transform3D();
      Camera camera0 = new Camera(transform3D0);
      float[] floatArray0 = new float[10];
      Coord3f coord3f0 = new Coord3f(floatArray0);
      camera0.getTranslation((Vector3f) coord3f0);
      assertEquals(271L, transform3D0.getStateId());
  }

  @Test
  public void test4()  throws Throwable  {
      Transform3D transform3D0 = new Transform3D();
      Camera camera0 = new Camera(transform3D0);
      float[] floatArray0 = new float[10];
      Coord3f coord3f0 = new Coord3f(floatArray0);
      camera0.getRotation((Vector3f) coord3f0);
      assertEquals(324L, transform3D0.getStateId());
  }
}
