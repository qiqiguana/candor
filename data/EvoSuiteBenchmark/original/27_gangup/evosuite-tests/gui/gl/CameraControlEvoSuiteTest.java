/*
 * This file was automatically generated by EvoSuite
 */

package gui.gl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.xith3d.datatypes.Coord3f;
import com.xith3d.scenegraph.Canvas3D;
import com.xith3d.scenegraph.Node;
import com.xith3d.scenegraph.Transform3D;
import gui.gl.Camera;
import gui.gl.CameraControl;
import gui.gl.World;
import java.awt.Component;
import java.awt.GraphicsConfiguration;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import javax.swing.Icon;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuDragMouseEvent;
import javax.vecmath.Vector3f;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CameraControlEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Transform3D transform3D0 = Node.IDENTITY;
      Camera camera0 = new Camera(transform3D0);
      Canvas3D canvas3D0 = new Canvas3D((GraphicsConfiguration) null, false);
      World world0 = new World(0, 0, 0);
      CameraControl cameraControl0 = new CameraControl(camera0, canvas3D0, world0);
      MenuElement[] menuElementArray0 = new MenuElement[4];
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("09 H~t$1<2", (Icon) null, false);
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent((Component) jCheckBoxMenuItem0, 1780, (-234L), (-801), (-801), 83, 0, 1767, 0, false, menuElementArray0, menuSelectionManager0);
      cameraControl0.mouseClicked((MouseEvent) menuDragMouseEvent0);
      assertEquals(3L, transform3D0.getStateId());
  }

  @Test
  public void test1()  throws Throwable  {
      Transform3D transform3D0 = Node.IDENTITY;
      Camera camera0 = new Camera(transform3D0);
      Canvas3D canvas3D0 = new Canvas3D((GraphicsConfiguration) null, false);
      World world0 = new World(454, 34750, 0.0F);
      CameraControl cameraControl0 = new CameraControl(camera0, canvas3D0, world0);
      cameraControl0.mouseMoved((MouseEvent) null);
      assertEquals(493L, transform3D0.getStateId());
  }

  @Test
  public void test2()  throws Throwable  {
      Transform3D transform3D0 = Node.IDENTITY;
      Camera camera0 = new Camera(transform3D0);
      Canvas3D canvas3D0 = new Canvas3D((GraphicsConfiguration) null, false);
      World world0 = new World(454, 34750, 0.0F);
      CameraControl cameraControl0 = new CameraControl(camera0, canvas3D0, world0);
      cameraControl0.mouseReleased((MouseEvent) null);
      assertEquals(983L, transform3D0.getStateId());
  }

  @Test
  public void test3()  throws Throwable  {
      Transform3D transform3D0 = Node.IDENTITY;
      Camera camera0 = new Camera(transform3D0);
      Canvas3D canvas3D0 = new Canvas3D((GraphicsConfiguration) null, false);
      World world0 = new World(0, 0, 0);
      CameraControl cameraControl0 = new CameraControl(camera0, canvas3D0, world0);
      MenuElement[] menuElementArray0 = new MenuElement[4];
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("09 H~t$1<2", (Icon) null, false);
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent((Component) jCheckBoxMenuItem0, 1780, (-234L), (-801), (-801), 83, 0, 1767, 0, false, menuElementArray0, menuSelectionManager0);
      cameraControl0.mouseExited((MouseEvent) menuDragMouseEvent0);
      assertEquals(1487L, transform3D0.getStateId());
  }

  @Test
  public void test4()  throws Throwable  {
      Transform3D transform3D0 = Node.IDENTITY;
      Camera camera0 = new Camera(transform3D0);
      Canvas3D canvas3D0 = new Canvas3D((GraphicsConfiguration) null, false);
      World world0 = new World(0, 0, 0);
      CameraControl cameraControl0 = new CameraControl(camera0, canvas3D0, world0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent((Component) canvas3D0, 0, (long) 0, 10794, 33137, 1010, 34398, false, 10794, 1010, 34398);
      cameraControl0.mousePressed((MouseEvent) mouseWheelEvent0);
      assertEquals(1977L, transform3D0.getStateId());
  }

  @Test
  public void test5()  throws Throwable  {
      Transform3D transform3D0 = Node.IDENTITY;
      Camera camera0 = new Camera(transform3D0);
      Canvas3D canvas3D0 = new Canvas3D((GraphicsConfiguration) null, false);
      World world0 = new World(454, 34750, 0.0F);
      CameraControl cameraControl0 = new CameraControl(camera0, canvas3D0, world0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent((Component) canvas3D0, (-1672), (long) 34750, 454, 489, 34750, 34750, 489, 34750, false, 1, 32913, (-1672));
      cameraControl0.mouseDragged((MouseEvent) mouseWheelEvent0);
      assertEquals(2481L, transform3D0.getStateId());
  }

  @Test
  public void test6()  throws Throwable  {
      Transform3D transform3D0 = Node.IDENTITY;
      Camera camera0 = new Camera(transform3D0);
      Canvas3D canvas3D0 = new Canvas3D((GraphicsConfiguration) null, false);
      World world0 = new World(454, 34750, 0.0F);
      CameraControl cameraControl0 = new CameraControl(camera0, canvas3D0, world0);
      Coord3f coord3f0 = new Coord3f();
      cameraControl0.flyTo(coord3f0, (Vector3f) coord3f0, 489, (-137));
      assertEquals(2985L, transform3D0.getStateId());
  }
}
