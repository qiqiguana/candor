/*
 * This file was automatically generated by EvoSuite
 */

package util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import util.Packer;

@RunWith(EvoSuiteRunner.class)
public class PackerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      byte[] byteArray0 = Packer.pack64(981L);
      // Undeclared exception!
      try {
        Packer.unpacks(byteArray0, 998, 32);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: 1030
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = Packer.pack16((short)1457);
      assertNotNull(byteArray0);
      
      float float0 = Packer.unpackf(byteArray0);
      assertEquals(1.6645E-35F, float0, 0.01F);
  }

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      Packer.pack16((short)1778, byteArray0, (int) (byte)0);
  }

  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = Packer.packi(8);
      // Undeclared exception!
      try {
        Packer.unpackl(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 4
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try {
        Packer.packs("UTF-8", byteArray0, (int) (byte)84);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = Packer.packd((double) 8);
      assertNotNull(byteArray0);
      
      double double0 = Packer.unpackd(byteArray0);
      assertEquals(8.0, double0, 0.01D);
  }

  @Test
  public void test6()  throws Throwable  {
      byte[] byteArray0 = Packer.pack16((short)1457);
      long[] longArray0 = new long[7];
      // Undeclared exception!
      try {
        Packer.pack64v(longArray0, 0, byteArray0, 1, (int) (short)1457);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 4
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      byte[] byteArray0 = Packer.packl((long) (byte)26);
      int[] intArray0 = new int[8];
      // Undeclared exception!
      try {
        Packer.pack32v(intArray0, (int) (byte)0, byteArray0, (int) (byte)0, (int) (byte)26);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 8
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      int[] intArray0 = new int[2];
      // Undeclared exception!
      try {
        Packer.unpack32v(byteArray0, (int) (byte)0, intArray0, (int) (byte)6, 107);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 6
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      float[] floatArray0 = new float[10];
      byte[] byteArray0 = Packer.packfv(floatArray0, 1, 1);
      assertNotNull(byteArray0);
  }

  @Test
  public void test10()  throws Throwable  {
      Packer packer0 = new Packer();
      assertNotNull(packer0);
  }

  @Test
  public void test11()  throws Throwable  {
      byte[] byteArray0 = Packer.pack16((short)1457);
      assertNotNull(byteArray0);
      
      String string0 = Packer.unpacks(byteArray0);
      assertNotNull(string0);
      assertEquals("\u0005\uFFFD\u0000\u0000", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      long[] longArray0 = new long[4];
      // Undeclared exception!
      try {
        Packer.unpack64v(byteArray0, (int) (byte) (-60), longArray0, (int) (byte)0, 32);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -60
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      int int0 = Packer.unpacki(byteArray0);
      assertEquals(0, int0);
  }

  @Test
  public void test14()  throws Throwable  {
      byte[] byteArray0 = Packer.pack16((short)0);
      assertNotNull(byteArray0);
      
      short short0 = Packer.unpack16(byteArray0);
      assertEquals((short)0, short0);
  }

  @Test
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      short[] shortArray0 = new short[10];
      Packer.pack16v(shortArray0, (-833), byteArray0, 915, (int) (short)0);
  }

  @Test
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      short[] shortArray0 = new short[8];
      // Undeclared exception!
      try {
        Packer.pack16v(shortArray0, (-106), byteArray0, 1903, 889);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -106
         */
      }
  }

  @Test
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      short[] shortArray0 = new short[5];
      // Undeclared exception!
      try {
        Packer.unpack16v(byteArray0, (int) (byte) (-27), shortArray0, (-281), (int) (short)56);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -27
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      byte[] byteArray0 = Packer.packf((-657.47894F));
      int[] intArray0 = new int[3];
      Packer.pack32v(intArray0, (-1842), byteArray0, 0, (-771));
  }

  @Test
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      int[] intArray0 = new int[3];
      Packer.unpack32v(byteArray0, (-1031), intArray0, 491, (-239));
  }

  @Test
  public void test20()  throws Throwable  {
      byte[] byteArray0 = Packer.pack16((short)1457);
      long[] longArray0 = new long[7];
      Packer.pack64v(longArray0, 0, byteArray0, 1, (-1918));
  }

  @Test
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      long[] longArray0 = new long[5];
      Packer.unpack64v(byteArray0, (-933), longArray0, (-933), (-933));
  }
}
