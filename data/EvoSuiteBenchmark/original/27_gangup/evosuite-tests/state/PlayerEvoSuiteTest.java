/*
 * This file was automatically generated by EvoSuite
 */

package state;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import state.Player;

@RunWith(EvoSuiteRunner.class)
public class PlayerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Player player0 = new Player((-11));
      assertNotNull(player0);
      
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals(false, player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-11", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(true, player0.isConnected());
      assertEquals(false, boolean0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  @Test
  public void test1()  throws Throwable  {
      Player player0 = new Player(1394, "", 1394);
      assertNotNull(player0);
      
      player0.setMoney((float) 1394);
      assertEquals(1394.0F, player0.getMoney(), 0.01F);
  }

  @Test
  public void test2()  throws Throwable  {
      Player player0 = new Player(13, "tUdXjP6j", 13);
      assertNotNull(player0);
      
      float float0 = player0.getX();
      assertEquals(false, player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, float0, 0.01F);
      assertEquals(true, player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(13, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.gangStrength());
  }

  @Test
  public void test3()  throws Throwable  {
      Player player0 = new Player();
      assertNotNull(player0);
      
      int int0 = player0.getPictureId();
      assertEquals(0, int0);
      assertEquals(false, player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(true, player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-1", player0.getName());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(1, player0.gangStrength());
  }

  @Test
  public void test4()  throws Throwable  {
      Player player0 = new Player(1394, "", 1394);
      assertNotNull(player0);
      
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      assertEquals(114, player0.getId());
  }

  @Test
  public void test5()  throws Throwable  {
      Player player0 = new Player(13, "tUdXjP6j", 13);
      assertNotNull(player0);
      
      String string0 = player0.toString();
      assertNotNull(string0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(true, player0.isConnected());
      assertEquals(13, player0.getPictureId());
      assertEquals(false, player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
  }

  @Test
  public void test6()  throws Throwable  {
      Player player0 = new Player(0, (String) null, (String) null, 0, 0);
      assertNotNull(player0);
      
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(true, player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertEquals(false, player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.gangStrength());
  }

  @Test
  public void test7()  throws Throwable  {
      Player player0 = new Player(225);
      assertNotNull(player0);
      
      int int0 = player0.type();
      assertEquals(5, int0);
      assertEquals(false, player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(1, player0.gangStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(true, player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player225", player0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      Player player0 = new Player(1394, "", 1394);
      assertNotNull(player0);
      
      player0.setX((float) 1394);
      assertEquals(1394.0F, player0.getX(), 0.01F);
      assertEquals(1394, player0.getPictureId());
  }

  @Test
  public void test9()  throws Throwable  {
      Player player0 = new Player(1668);
      assertEquals(false, player0.isDead());
      assertNotNull(player0);
      
      player0.setDead();
      assertEquals(true, player0.isDead());
      assertEquals("Player1668", player0.getName());
  }

  @Test
  public void test10()  throws Throwable  {
      Player player0 = new Player(1394, "", 1394);
      assertNotNull(player0);
      
      player0.setY((float) 1394);
      assertEquals(1394.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  @Test
  public void test11()  throws Throwable  {
      Player player0 = new Player(1668);
      assertNotNull(player0);
      
      int int0 = player0.getStrength();
      assertEquals(true, player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player1668", player0.toString());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, int0);
      assertEquals(false, player0.isDead());
  }

  @Test
  public void test12()  throws Throwable  {
      Player player0 = new Player(0, (String) null, (String) null, 0, 0);
      assertNotNull(player0);
      
      player0.getIP();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(false, player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(true, player0.isConnected());
      assertEquals(0, player0.getStrength());
  }

  @Test
  public void test13()  throws Throwable  {
      Player player0 = new Player(1394, "", 1394);
      assertNotNull(player0);
      
      float float0 = player0.getZ();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(true, player0.isConnected());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1394, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(false, player0.isDead());
  }

  @Test
  public void test14()  throws Throwable  {
      Player player0 = new Player(0, (String) null, (String) null, 0, 0);
      assertNotNull(player0);
      
      long long0 = player0.getTimeOfDeath();
      assertEquals(true, player0.isConnected());
      assertEquals(false, player0.isDead());
      assertEquals(0, player0.gangStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, long0);
  }

  @Test
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      assertNotNull(player0);
      
      player0.setConnected(true);
      assertEquals(0, player0.getPictureId());
      assertEquals(true, player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(false, player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
  }

  @Test
  public void test16()  throws Throwable  {
      Player player0 = new Player((-13));
      assertNotNull(player0);
      
      float float0 = player0.getMoney();
      assertEquals(true, player0.isConnected());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(false, player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-13", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  @Test
  public void test17()  throws Throwable  {
      Player player0 = new Player(1668);
      assertNotNull(player0);
      
      player0.setZ((float) 1);
      assertEquals(1.0F, player0.getZ(), 0.01F);
      assertEquals("Player1668", player0.getName());
  }

  @Test
  public void test18()  throws Throwable  {
      Player player0 = new Player(1668);
      assertNotNull(player0);
      
      String string0 = player0.getName();
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(false, player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertNotNull(string0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player1668", string0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(true, player0.isConnected());
  }

  @Test
  public void test19()  throws Throwable  {
      Player player0 = new Player(13, "tUdXjP6j", 13);
      assertNotNull(player0);
      
      boolean boolean0 = player0.isConnected();
      assertEquals(false, player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(true, boolean0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(13, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  @Test
  public void test20()  throws Throwable  {
      Player player0 = new Player(1394, "", 1394);
      assertNotNull(player0);
      
      player0.reset(false);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(false, player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1394, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(true, player0.isConnected());
  }

  @Test
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      assertNotNull(player0);
      
      player0.reset(true);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals(true, player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.gangStrength());
      assertEquals(false, player0.isDead());
  }

  @Test
  public void test22()  throws Throwable  {
      Player player0 = new Player(0, (String) null, (String) null, 0, 0);
      assertNotNull(player0);
      
      int int0 = player0.gangStrength();
      assertEquals(true, player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, int0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertEquals(false, player0.isDead());
  }

  @Test
  public void test23()  throws Throwable  {
      Player player0 = new Player(0, (String) null, (String) null, 0, 0);
      assertNotNull(player0);
      
      boolean boolean0 = player0.isDead();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(false, boolean0);
      assertEquals(true, player0.isConnected());
      assertEquals(0, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  @Test
  public void test24()  throws Throwable  {
      Player player0 = new Player(13, "tUdXjP6j", 13);
      assertNotNull(player0);
      
      player0.setDead((long) 13, false);
      boolean boolean0 = player0.isDead();
      assertEquals(13L, player0.getTimeOfDeath());
      assertEquals(true, boolean0);
  }

  @Test
  public void test25()  throws Throwable  {
      Player player0 = new Player(225);
      assertNotNull(player0);
      
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals(true, player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(false, player0.isDead());
      assertEquals(1, player0.gangStrength());
      assertEquals("Player225", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(false, boolean0);
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  @Test
  public void test26()  throws Throwable  {
      Player player0 = new Player((-13));
      assertNotNull(player0);
      
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertEquals(true, boolean0);
      assertEquals(false, player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(true, player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-13", player0.getName());
  }

  @Test
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      assertNotNull(player0);
      
      byte[] byteArray0 = new byte[14];
      player0.unpack(byteArray0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(false, player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-1", player0.toString());
      assertEquals(true, player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
  }
}
