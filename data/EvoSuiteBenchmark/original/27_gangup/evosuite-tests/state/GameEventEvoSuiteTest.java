/*
 * This file was automatically generated by EvoSuite
 */

package state;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import state.GameEvent;

@RunWith(EvoSuiteRunner.class)
public class GameEventEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      GameEvent gameEvent0 = new GameEvent((long) (-324));
      gameEvent0.setAction(0, 10, 0);
      assertEquals("GameEvent[0,0,10]", gameEvent0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      GameEvent gameEvent0 = new GameEvent();
      int int0 = gameEvent0.getActor();
      assertEquals("GameEvent[-1,-1,-1]", gameEvent0.toString());
      assertEquals((-1), int0);
  }

  @Test
  public void test2()  throws Throwable  {
      GameEvent gameEvent0 = new GameEvent();
      int int0 = gameEvent0.getEventType();
      assertEquals("GameEvent[-1,-1,-1]", gameEvent0.toString());
      assertEquals((-1), int0);
  }

  @Test
  public void test3()  throws Throwable  {
      GameEvent gameEvent0 = new GameEvent();
      byte[] byteArray0 = gameEvent0.pack();
      assertEquals("GameEvent[-1,-1,-1]", gameEvent0.toString());
      assertNotNull(byteArray0);
  }

  @Test
  public void test4()  throws Throwable  {
      GameEvent gameEvent0 = new GameEvent();
      String string0 = gameEvent0.toString();
      assertNotNull(string0);
      assertEquals("GameEvent[-1,-1,-1]", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      GameEvent gameEvent0 = new GameEvent();
      int int0 = gameEvent0.getTarget();
      assertEquals("GameEvent[-1,-1,-1]", gameEvent0.toString());
      assertEquals((-1), int0);
  }

  @Test
  public void test6()  throws Throwable  {
      GameEvent gameEvent0 = new GameEvent();
      byte[] byteArray0 = new byte[8];
      gameEvent0.unpack(byteArray0);
      assertEquals("GameEvent[0,0,0]", gameEvent0.toString());
      assertEquals(0, gameEvent0.getEventType());
  }

  @Test
  public void test7()  throws Throwable  {
      GameEvent gameEvent0 = new GameEvent((-1681), (-1681), (-1681), (-1));
      assertEquals("GameEvent[-1681,-1681,-1681]", gameEvent0.toString());
      assertEquals((-1L), gameEvent0.getTime());
  }

  @Test
  public void test8()  throws Throwable  {
      GameEvent gameEvent0 = new GameEvent();
      gameEvent0.setTime(1722L);
      assertEquals(1722L, gameEvent0.getTime());
      assertEquals(-1, gameEvent0.getActor());
  }

  @Test
  public void test9()  throws Throwable  {
      GameEvent gameEvent0 = new GameEvent();
      gameEvent0.getTime();
      assertEquals("GameEvent[-1,-1,-1]", gameEvent0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      GameEvent gameEvent0 = new GameEvent();
      int int0 = gameEvent0.type();
      assertEquals(3, int0);
      assertEquals("GameEvent[-1,-1,-1]", gameEvent0.toString());
  }
}
