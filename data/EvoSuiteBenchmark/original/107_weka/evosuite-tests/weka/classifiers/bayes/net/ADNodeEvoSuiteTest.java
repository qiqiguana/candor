/*
 * This file was automatically generated by EvoSuite
 */

package weka.classifiers.bayes.net;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.ArrayList;
import java.util.List;
import org.junit.BeforeClass;
import weka.classifiers.bayes.net.ADNode;
import weka.classifiers.bayes.net.VaryNode;
import weka.core.Attribute;
import weka.core.BinarySparseInstance;
import weka.core.DenseInstance;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.TechnicalInformation;

@RunWith(EvoSuiteRunner.class)
public class ADNodeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ADNode aDNode0 = new ADNode();
      TechnicalInformation technicalInformation0 = aDNode0.getTechnicalInformation();
      assertNotNull(technicalInformation0);
      assertEquals("@article{Moore1998,\n   author = {Andrew W. Moore and Mary S. Lee},\n   journal = {Journal of Artificial Intelligence Research},\n   pages = {67-91},\n   title = {Cached Sufficient Statistics for Efficient Machine Learning with Large Datasets},\n   volume = {8},\n   year = {1998}\n}", technicalInformation0.toBibTex());
  }

  @Test
  public void test1()  throws Throwable  {
      ADNode aDNode0 = new ADNode();
      String string0 = aDNode0.getRevision();
      assertEquals("8034", string0);
      assertNotNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("", (List<String>) null);
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("", arrayList0, 0);
      ADNode aDNode0 = ADNode.makeADTree(instances0);
      assertNotNull(aDNode0);
      
      int[] intArray0 = new int[4];
      aDNode0.getCounts(intArray0, intArray0, intArray0, 0, 0, false);
      assertEquals(0, aDNode0.m_nStartNode);
  }

  @Test
  public void test3()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("Ti!uX=N`j;H[,", arrayList0, 0);
      Attribute attribute0 = new Attribute("Ti!uX=N`j;H[,", 0);
      arrayList0.add(attribute0);
      double[] doubleArray0 = new double[1];
      DenseInstance denseInstance0 = new DenseInstance((double) 0, doubleArray0);
      instances0.add((Instance) denseInstance0);
      // Undeclared exception!
      try {
        ADNode.makeADTree(instances0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("BNlv%O `dB(", (List<String>) null);
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("BNlv%O `dB(", arrayList0, 0);
      attribute0.addStringValue("BNlv%O `dB(");
      ADNode aDNode0 = ADNode.makeADTree(instances0);
      assertEquals(0, aDNode0.m_nStartNode);
      assertNotNull(aDNode0);
  }

  @Test
  public void test5()  throws Throwable  {
      ADNode aDNode0 = new ADNode();
      int[] intArray0 = new int[8];
      aDNode0.getCounts(intArray0, intArray0, intArray0, 19, 0, true);
      assertEquals(0, aDNode0.m_nStartNode);
  }

  @Test
  public void test6()  throws Throwable  {
      ADNode aDNode0 = new ADNode();
      int[] intArray0 = new int[8];
      Instance[] instanceArray0 = new Instance[9];
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0);
      instanceArray0[0] = (Instance) binarySparseInstance0;
      aDNode0.m_Instances = (weka.core.Instance[]) instanceArray0;
      // Undeclared exception!
      try {
        aDNode0.getCounts(intArray0, intArray0, intArray0, 0, 0, false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      ADNode aDNode0 = new ADNode();
      aDNode0.m_nStartNode = 56;
      aDNode0.print();
      assertEquals("8034", aDNode0.getRevision());
  }

  @Test
  public void test8()  throws Throwable  {
      ADNode aDNode0 = new ADNode();
      VaryNode[] varyNodeArray0 = new VaryNode[24];
      aDNode0.m_VaryNodes = (weka.classifiers.bayes.net.VaryNode[]) varyNodeArray0;
      // Undeclared exception!
      try {
        aDNode0.print();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("Ti!uX=N`j;H[,", arrayList0, 0);
      ADNode aDNode0 = ADNode.makeADTree(instances0);
      assertNotNull(aDNode0);
      
      aDNode0.print();
      assertEquals(0, aDNode0.m_nCount);
  }
}
