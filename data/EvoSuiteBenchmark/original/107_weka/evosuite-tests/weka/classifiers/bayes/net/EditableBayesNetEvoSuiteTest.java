/*
 * This file was automatically generated by EvoSuite
 */

package weka.classifiers.bayes.net;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.ArrayList;
import org.junit.BeforeClass;
import weka.classifiers.bayes.net.EditableBayesNet;
import weka.core.Attribute;
import weka.core.FastVector;
import weka.core.Instances;

@RunWith(EvoSuiteRunner.class)
public class EditableBayesNetEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(false);
      // Undeclared exception!
      try {
        editableBayesNet0.setPosition(259, (-1), (-1569));
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 259, Size: 0
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("eO", arrayList0, 7);
      Attribute attribute0 = new Attribute("eO");
      arrayList0.add(attribute0);
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(instances0);
      assertEquals(0, instances0.classIndex());
      
      EditableBayesNet.SetPositionAction editableBayesNet_SetPositionAction0 = editableBayesNet0.new SetPositionAction(0, 1, (-1067));
      editableBayesNet_SetPositionAction0.setUndoPosition((-1056), (-1682));
      assertEquals((-1682), editableBayesNet_SetPositionAction0.m_nY2);
  }

  @Test
  public void test2()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("", arrayList0, 7);
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(instances0);
      EditableBayesNet.AddNodeAction editableBayesNet_AddNodeAction0 = editableBayesNet0.new AddNodeAction("", 7, 7, 20);
      editableBayesNet_AddNodeAction0.redo();
      editableBayesNet0.undo();
      EditableBayesNet.AddArcAction editableBayesNet_AddArcAction0 = editableBayesNet0.new AddArcAction(0, 0);
      editableBayesNet_AddArcAction0.redo();
      assertEquals("@relation ''\n\n@attribute '' {Value1,Value2,Value3,Value4,Value5,Value6,Value7}\n\n@data\n", instances0.toString());
      assertEquals((-47.674798651855184), editableBayesNet0.measureEntropyScore(), 0.01D);
  }

  @Test
  public void test3()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet();
      EditableBayesNet.AddArcAction editableBayesNet_AddArcAction0 = editableBayesNet0.new AddArcAction((-768), (-1));
      editableBayesNet_AddArcAction0.undo();
      String string0 = editableBayesNet0.lastActionMsg();
      assertEquals(" Delete Arc Action", editableBayesNet0.lastActionMsg());
      assertEquals(" Delete Arc Action", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(true);
      EditableBayesNet.DelValueAction editableBayesNet_DelValueAction0 = editableBayesNet0.new DelValueAction((-1782), "~x.M2Aq*=U7e]n");
      editableBayesNet_DelValueAction0.redo();
      assertEquals(0, editableBayesNet0.m_nCurrentEditAction);
      assertEquals("Bayes Network Classifier\nnot using ADTree\n#attributes=0 #classindex=-1\nNetwork structure (nodes followed by parents)\nLogScore Bayes: 0.0\nLogScore BDeu: 0.0\nLogScore MDL: 0.0\nLogScore ENTROPY: 0.0\nLogScore AIC: 0.0\n", editableBayesNet0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet();
      EditableBayesNet.DelValueAction editableBayesNet_DelValueAction0 = editableBayesNet0.new DelValueAction(0, ",3hfIo6F");
      // Undeclared exception!
      try {
        editableBayesNet_DelValueAction0.getUndoMsg();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet();
      EditableBayesNet.DelValueAction editableBayesNet_DelValueAction0 = editableBayesNet0.new DelValueAction((-1), "Unexpected EOF on matrix read.");
      // Undeclared exception!
      try {
        editableBayesNet_DelValueAction0.getRedoMsg();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet();
      double[][] doubleArray0 = new double[9][4];
      EditableBayesNet.SetDistributionAction editableBayesNet_SetDistributionAction0 = editableBayesNet0.new SetDistributionAction((-1), doubleArray0);
      editableBayesNet_SetDistributionAction0.redo();
      assertEquals(0, editableBayesNet0.m_nCurrentEditAction);
      assertEquals(true, editableBayesNet0.canUndo());
  }

  @Test
  public void test8()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet();
      double[][] doubleArray0 = new double[8][10];
      EditableBayesNet.SetDistributionAction editableBayesNet_SetDistributionAction0 = editableBayesNet0.new SetDistributionAction((-1), doubleArray0);
      // Undeclared exception!
      try {
        editableBayesNet_SetDistributionAction0.getRedoMsg();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(true);
      double[][] doubleArray0 = new double[9][4];
      EditableBayesNet.SetDistributionAction editableBayesNet_SetDistributionAction0 = editableBayesNet0.new SetDistributionAction((-1), doubleArray0);
      // Undeclared exception!
      try {
        editableBayesNet_SetDistributionAction0.getUndoMsg();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(true);
      double[][] doubleArray0 = new double[5][5];
      EditableBayesNet.SetDistributionAction editableBayesNet_SetDistributionAction0 = editableBayesNet0.new SetDistributionAction(1465, doubleArray0);
      editableBayesNet_SetDistributionAction0.undo();
      assertEquals(false, editableBayesNet0.isChanged());
      assertEquals(1465, editableBayesNet_SetDistributionAction0.m_nTargetNode);
      assertEquals("<?xml version=\"1.0\"?>\n<!-- DTD for the XMLBIF 0.3 format -->\n<!DOCTYPE BIF [\n\t<!ELEMENT BIF ( NETWORK )*>\n\t      <!ATTLIST BIF VERSION CDATA #REQUIRED>\n\t<!ELEMENT NETWORK ( NAME, ( PROPERTY | VARIABLE | DEFINITION )* )>\n\t<!ELEMENT NAME (#PCDATA)>\n\t<!ELEMENT VARIABLE ( NAME, ( OUTCOME |  PROPERTY )* ) >\n\t      <!ATTLIST VARIABLE TYPE (nature|decision|utility) \"nature\">\n\t<!ELEMENT OUTCOME (#PCDATA)>\n\t<!ELEMENT DEFINITION ( FOR | GIVEN | TABLE | PROPERTY )* >\n\t<!ELEMENT FOR (#PCDATA)>\n\t<!ELEMENT GIVEN (#PCDATA)>\n\t<!ELEMENT TABLE (#PCDATA)>\n\t<!ELEMENT PROPERTY (#PCDATA)>\n]>\n\n\n<BIF VERSION=\"0.3\">\n<NETWORK>\n<NAME>New Network</NAME>\n</NETWORK>\n</BIF>\n", editableBayesNet0.toXMLBIF03());
      assertEquals(true, editableBayesNet0.m_bNeedsUndoAction);
      assertEquals("<?xml version=\"1.0\"?>\n<!-- DTD for the XMLBIF 0.3 format -->\n<!DOCTYPE BIF [\n\t<!ELEMENT BIF ( NETWORK )*>\n\t      <!ATTLIST BIF VERSION CDATA #REQUIRED>\n\t<!ELEMENT NETWORK ( NAME, ( PROPERTY | VARIABLE | DEFINITION )* )>\n\t<!ELEMENT NAME (#PCDATA)>\n\t<!ELEMENT VARIABLE ( NAME, ( OUTCOME |  PROPERTY )* ) >\n\t      <!ATTLIST VARIABLE TYPE (nature|decision|utility) \"nature\">\n\t<!ELEMENT OUTCOME (#PCDATA)>\n\t<!ELEMENT DEFINITION ( FOR | GIVEN | TABLE | PROPERTY )* >\n\t<!ELEMENT FOR (#PCDATA)>\n\t<!ELEMENT GIVEN (#PCDATA)>\n\t<!ELEMENT TABLE (#PCDATA)>\n\t<!ELEMENT PROPERTY (#PCDATA)>\n]>\n\n\n<BIF VERSION=\"0.3\">\n<NETWORK>\n<NAME>New Network</NAME>\n</NETWORK>\n</BIF>\n", editableBayesNet0.graph());
  }

  @Test
  public void test11()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(true);
      EditableBayesNet.RenameAction editableBayesNet_RenameAction0 = editableBayesNet0.new RenameAction((-1), "S", "S");
      // Undeclared exception!
      try {
        editableBayesNet_RenameAction0.redo();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(true);
      EditableBayesNet.RenameAction editableBayesNet_RenameAction0 = editableBayesNet0.new RenameAction((-1), "S", "S");
      // Undeclared exception!
      try {
        editableBayesNet_RenameAction0.undo();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(true);
      EditableBayesNet.RenameValueAction editableBayesNet_RenameValueAction0 = editableBayesNet0.new RenameValueAction(85, "eO", "eO");
      // Undeclared exception!
      try {
        editableBayesNet_RenameValueAction0.getUndoMsg();
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 85, Size: 0
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet();
      EditableBayesNet.RenameValueAction editableBayesNet_RenameValueAction0 = editableBayesNet0.new RenameValueAction((-1), (String) null, "}OIdF3S");
      // Undeclared exception!
      try {
        editableBayesNet_RenameValueAction0.getRedoMsg();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet();
      EditableBayesNet.RenameValueAction editableBayesNet_RenameValueAction0 = editableBayesNet0.new RenameValueAction((-1), "`w~&0WQ3T1$-3nAX/O", "Xh9yac20;_v4K>M");
      // Undeclared exception!
      try {
        editableBayesNet_RenameValueAction0.undo();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(true);
      EditableBayesNet.RenameValueAction editableBayesNet_RenameValueAction0 = editableBayesNet0.new RenameValueAction((-1), "S", "S");
      // Undeclared exception!
      try {
        editableBayesNet_RenameValueAction0.redo();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test17()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet();
      // Undeclared exception!
      try {
        editableBayesNet0.getEvidence(1923);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 1923, Size: 0
         */
      }
  }

  @Test
  public void test18()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet();
      String string0 = editableBayesNet0.getRevision();
      assertEquals(true, editableBayesNet0.m_bNeedsUndoAction);
      assertEquals(false, editableBayesNet0.isChanged());
      assertNotNull(string0);
      assertEquals("8034", string0);
  }

  @Test
  public void test19()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(true);
      try {
        editableBayesNet0.deleteNode("-;,@dc/7ep%..+jPBa");
        fail("Expecting exception: Exception");
      } catch(Exception e) {
        /*
         * Could not find node [[-;,@dc/7ep%..+jPBa]]
         */
      }
  }

  @Test
  public void test20()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(true);
      editableBayesNet0.isSaved();
      assertEquals(true, editableBayesNet0.m_bNeedsUndoAction);
      assertEquals(false, editableBayesNet0.isChanged());
      assertEquals("<?xml version=\"1.0\"?>\n<!-- DTD for the XMLBIF 0.3 format -->\n<!DOCTYPE BIF [\n\t<!ELEMENT BIF ( NETWORK )*>\n\t      <!ATTLIST BIF VERSION CDATA #REQUIRED>\n\t<!ELEMENT NETWORK ( NAME, ( PROPERTY | VARIABLE | DEFINITION )* )>\n\t<!ELEMENT NAME (#PCDATA)>\n\t<!ELEMENT VARIABLE ( NAME, ( OUTCOME |  PROPERTY )* ) >\n\t      <!ATTLIST VARIABLE TYPE (nature|decision|utility) \"nature\">\n\t<!ELEMENT OUTCOME (#PCDATA)>\n\t<!ELEMENT DEFINITION ( FOR | GIVEN | TABLE | PROPERTY )* >\n\t<!ELEMENT FOR (#PCDATA)>\n\t<!ELEMENT GIVEN (#PCDATA)>\n\t<!ELEMENT TABLE (#PCDATA)>\n\t<!ELEMENT PROPERTY (#PCDATA)>\n]>\n\n\n<BIF VERSION=\"0.3\">\n<NETWORK>\n<NAME>New Network</NAME>\n</NETWORK>\n</BIF>\n", editableBayesNet0.toXMLBIF03());
  }

  @Test
  public void test21()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("eO", arrayList0, 7);
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(instances0);
      assertNotNull(editableBayesNet0);
      
      try {
        editableBayesNet0.deleteArc("<?xml version=\"1.0\"?>\n<!-- DTD for the XMLBIF 0.3 format -->\n<!DOCTYPE BIF [\n\t<!ELEMENT BIF ( NETWORK )*>\n\t      <!ATTLIST BIF VERSION CDATA #REQUIRED>\n\t<!ELEMENT NETWORK ( NAME, ( PROPERTY | VARIABLE | DEFINITION )* )>\n\t<!ELEMENT NAME (#PCDATA)>\n\t<!ELEMENT VARIABLE ( NAME, ( OUTCOME |  PROPERTY )* ) >\n\t      <!ATTLIST VARIABLE TYPE (nature|decision|utility) \"nature\">\n\t<!ELEMENT OUTCOME (#PCDATA)>\n\t<!ELEMENT DEFINITION ( FOR | GIVEN | TABLE | PROPERTY )* >\n\t<!ELEMENT FOR (#PCDATA)>\n\t<!ELEMENT GIVEN (#PCDATA)>\n\t<!ELEMENT TABLE (#PCDATA)>\n\t<!ELEMENT PROPERTY (#PCDATA)>\n]>\n\n\n<BIF VERSION=\"0.3\">\n<NETWORK>\n<NAME>eO</NAME>\n<VARIABLE TYPE=\"nature\">\n<NAME>eO</NAME>\n<PROPERTY>position = (0,0)</PROPERTY>\n</VARIABLE>\n<DEFINITION>\n<FOR>eO</FOR>\n<TABLE>\n\n</TABLE>\n</DEFINITION>\n</NETWORK>\n</BIF>\n", "eO");
        fail("Expecting exception: Exception");
      } catch(Exception e) {
        /*
         * Could not find node [[<?xml version=\"1.0\"?>
         * <!-- DTD for the XMLBIF 0.3 format -->
         * <!DOCTYPE BIF [
         * \t<!ELEMENT BIF ( NETWORK )*>
         * \t      <!ATTLIST BIF VERSION CDATA #REQUIRED>
         * \t<!ELEMENT NETWORK ( NAME, ( PROPERTY | VARIABLE | DEFINITION )* )>
         * \t<!ELEMENT NAME (#PCDATA)>
         * \t<!ELEMENT VARIABLE ( NAME, ( OUTCOME |  PROPERTY )* ) >
         * \t      <!ATTLIST VARIABLE TYPE (nature|decision|utility) \"nature\">
         * \t<!ELEMENT OUTCOME (#PCDATA)>
         * \t<!ELEMENT DEFINITION ( FOR | GIVEN | TABLE | PROPERTY )* >
         * \t<!ELEMENT FOR (#PCDATA)>
         * \t<!ELEMENT GIVEN (#PCDATA)>
         * \t<!ELEMENT TABLE (#PCDATA)>
         * \t<!ELEMENT PROPERTY (#PCDATA)>
         * ]>
         * 
         * 
         * <BIF VERSION=\"0.3\">
         * <NETWORK>
         * <NAME>eO</NAME>
         * <VARIABLE TYPE=\"nature\">
         * <NAME>eO</NAME>
         * <PROPERTY>position = (0,0)</PROPERTY>
         * </VARIABLE>
         * <DEFINITION>
         * <FOR>eO</FOR>
         * <TABLE>
         * 
         * </TABLE>
         * </DEFINITION>
         * </NETWORK>
         * </BIF>
         * ]]
         */
      }
  }

  @Test
  public void test22()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("eO", arrayList0, 7);
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(instances0);
      assertNotNull(editableBayesNet0);
      
      double[][] doubleArray0 = new double[10][4];
      try {
        editableBayesNet0.setDistribution("eO", doubleArray0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
        /*
         * Could not find node [[eO]]
         */
      }
  }

  @Test
  public void test23()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet();
      // Undeclared exception!
      try {
        editableBayesNet0.getValueName(26, 26);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test24()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("", arrayList0, 7);
      Attribute attribute0 = new Attribute("");
      arrayList0.add(attribute0);
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(instances0);
      EditableBayesNet.AddNodeAction editableBayesNet_AddNodeAction0 = editableBayesNet0.new AddNodeAction("", 7, 7, 20);
      editableBayesNet_AddNodeAction0.redo();
      editableBayesNet0.setData(instances0);
      assertEquals("Relation Name:  \nNum Instances:  0\nNum Attributes: 2\n\n     Name                      Type  Nom  Int Real     Missing      Unique  Dist\n   1                            Num   0%   0%   0%     0 /  0%     0 /  0%     0 \n   2 x                          Nom   0%   0%   0%     0 /  0%     0 /  0%     0 \n", instances0.toSummaryString());
      assertEquals("<?xml version=\"1.0\"?>\n<!-- DTD for the XMLBIF 0.3 format -->\n<!DOCTYPE BIF [\n\t<!ELEMENT BIF ( NETWORK )*>\n\t      <!ATTLIST BIF VERSION CDATA #REQUIRED>\n\t<!ELEMENT NETWORK ( NAME, ( PROPERTY | VARIABLE | DEFINITION )* )>\n\t<!ELEMENT NAME (#PCDATA)>\n\t<!ELEMENT VARIABLE ( NAME, ( OUTCOME |  PROPERTY )* ) >\n\t      <!ATTLIST VARIABLE TYPE (nature|decision|utility) \"nature\">\n\t<!ELEMENT OUTCOME (#PCDATA)>\n\t<!ELEMENT DEFINITION ( FOR | GIVEN | TABLE | PROPERTY )* >\n\t<!ELEMENT FOR (#PCDATA)>\n\t<!ELEMENT GIVEN (#PCDATA)>\n\t<!ELEMENT TABLE (#PCDATA)>\n\t<!ELEMENT PROPERTY (#PCDATA)>\n]>\n\n\n<BIF VERSION=\"0.3\">\n<NETWORK>\n<NAME>-weka.filters.unsupervised.attribute.Reorder-R1-2</NAME>\n<VARIABLE TYPE=\"nature\">\n<NAME></NAME>\n<PROPERTY>position = (0,0)</PROPERTY>\n</VARIABLE>\n<VARIABLE TYPE=\"nature\">\n<NAME>x</NAME>\n<OUTCOME>Value1</OUTCOME>\n<OUTCOME>Value2</OUTCOME>\n<OUTCOME>Value3</OUTCOME>\n<OUTCOME>Value4</OUTCOME>\n<OUTCOME>Value5</OUTCOME>\n<OUTCOME>Value6</OUTCOME>\n<OUTCOME>Value7</OUTCOME>\n<PROPERTY>position = (110,110)</PROPERTY>\n</VARIABLE>\n<DEFINITION>\n<FOR></FOR>\n<TABLE>\n\n</TABLE>\n</DEFINITION>\n<DEFINITION>\n<FOR>x</FOR>\n<TABLE>\n0.14285714285714285 0.14285714285714285 0.14285714285714285 0.14285714285714285 0.14285714285714285 0.14285714285714285 0.14285714285714285 \n</TABLE>\n</DEFINITION>\n</NETWORK>\n</BIF>\n", editableBayesNet0.graph());
  }

  @Test
  public void test25()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(true);
      // Undeclared exception!
      try {
        editableBayesNet0.setEvidence(932, 932);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 932, Size: 0
         */
      }
  }

  @Test
  public void test26()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(true);
      // Undeclared exception!
      try {
        editableBayesNet0.getDistribution("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test27()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet();
      try {
        editableBayesNet0.addArc("vob0xWbb+0m61Iv)", "vob0xWbb+0m61Iv)");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test28()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet();
      double[] doubleArray0 = new double[2];
      // Undeclared exception!
      try {
        editableBayesNet0.setMargin((-958), doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test29()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet();
      // Undeclared exception!
      try {
        editableBayesNet0.getMargin((-421));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test30()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet();
      EditableBayesNet.PasteAction editableBayesNet_PasteAction0 = editableBayesNet0.new PasteAction("", (-1));
      editableBayesNet_PasteAction0.redo();
      assertEquals(false, editableBayesNet0.isChanged());
      assertEquals(true, editableBayesNet0.m_bNeedsUndoAction);
      assertEquals((-1), editableBayesNet_PasteAction0.m_nBase);
  }

  @Test
  public void test31()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet();
      EditableBayesNet.DeleteArcAction editableBayesNet_DeleteArcAction0 = editableBayesNet0.new DeleteArcAction(12, 1923);
      editableBayesNet_DeleteArcAction0.redo();
      assertEquals(0, editableBayesNet0.m_nCurrentEditAction);
      assertEquals((-1), editableBayesNet0.m_nSavedPointer);
  }

  @Test
  public void test32()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("", arrayList0, 7);
      Attribute attribute0 = new Attribute("");
      arrayList0.add(attribute0);
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(instances0);
      assertEquals(0, instances0.classIndex());
      
      editableBayesNet0.setData(instances0);
      assertEquals(false, editableBayesNet0.isChanged());
  }

  @Test
  public void test33()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("eO", arrayList0, 7);
      Attribute attribute0 = new Attribute("eO");
      arrayList0.add(attribute0);
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(instances0);
      assertEquals(0, instances0.classIndex());
      
      double[][] doubleArray0 = new double[10][4];
      editableBayesNet0.setDistribution("eO", doubleArray0);
      assertEquals(Double.NaN, editableBayesNet0.measureAICScore(), 0.01D);
  }

  @Test
  public void test34()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("", arrayList0, 7);
      Attribute attribute0 = new Attribute("");
      arrayList0.add(attribute0);
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(instances0);
      EditableBayesNet.AddNodeAction editableBayesNet_AddNodeAction0 = editableBayesNet0.new AddNodeAction("", 7, 7, 20);
      editableBayesNet_AddNodeAction0.redo();
      editableBayesNet_AddNodeAction0.undo();
      String string0 = editableBayesNet0.undo();
      assertEquals("Relation Name:  \nNum Instances:  0\nNum Attributes: 2\n\n     Name                      Type  Nom  Int Real     Missing      Unique  Dist\n   1                            Num   0%   0%   0%     0 /  0%     0 /  0%     0 \n   2 x                          Nom   0%   0%   0%     0 /  0%     0 /  0%     0 \n", instances0.toSummaryString());
      assertEquals(" Delete Node Action", string0);
  }

  @Test
  public void test35()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("eO", arrayList0, 7);
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(instances0);
      assertNotNull(editableBayesNet0);
      
      editableBayesNet0.paste("<?xml version=\"1.0\"?>\n<!-- DTD for the XMLBIF 0.3 format -->\n<!DOCTYPE BIF [\n\t<!ELEMENT BIF ( NETWORK )*>\n\t      <!ATTLIST BIF VERSION CDATA #REQUIRED>\n\t<!ELEMENT NETWORK ( NAME, ( PROPERTY | VARIABLE | DEFINITION )* )>\n\t<!ELEMENT NAME (#PCDATA)>\n\t<!ELEMENT VARIABLE ( NAME, ( OUTCOME |  PROPERTY )* ) >\n\t      <!ATTLIST VARIABLE TYPE (nature|decision|utility) \"nature\">\n\t<!ELEMENT OUTCOME (#PCDATA)>\n\t<!ELEMENT DEFINITION ( FOR | GIVEN | TABLE | PROPERTY )* >\n\t<!ELEMENT FOR (#PCDATA)>\n\t<!ELEMENT GIVEN (#PCDATA)>\n\t<!ELEMENT TABLE (#PCDATA)>\n\t<!ELEMENT PROPERTY (#PCDATA)>\n]>\n\n\n<BIF VERSION=\"0.3\">\n<NETWORK>\n<NAME>eO</NAME>\n<VARIABLE TYPE=\"nature\">\n<NAME>eO</NAME>\n<PROPERTY>position = (0,0)</PROPERTY>\n</VARIABLE>\n<DEFINITION>\n<FOR>eO</FOR>\n<TABLE>\n\n</TABLE>\n</DEFINITION>\n</NETWORK>\n</BIF>\n");
      assertEquals(0, editableBayesNet0.m_nCurrentEditAction);
      assertEquals(1.0, editableBayesNet0.measureAICScore(), 0.01D);
  }

  @Test
  public void test36()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("eO", arrayList0, 7);
      Attribute attribute0 = new Attribute("eO");
      arrayList0.add(attribute0);
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(instances0);
      assertEquals(0, instances0.classIndex());
      
      editableBayesNet0.paste("<?xml version=\"1.0\"?>\n<!-- DTD for the XMLBIF 0.3 format -->\n<!DOCTYPE BIF [\n\t<!ELEMENT BIF ( NETWORK )*>\n\t      <!ATTLIST BIF VERSION CDATA #REQUIRED>\n\t<!ELEMENT NETWORK ( NAME, ( PROPERTY | VARIABLE | DEFINITION )* )>\n\t<!ELEMENT NAME (#PCDATA)>\n\t<!ELEMENT VARIABLE ( NAME, ( OUTCOME |  PROPERTY )* ) >\n\t      <!ATTLIST VARIABLE TYPE (nature|decision|utility) \"nature\">\n\t<!ELEMENT OUTCOME (#PCDATA)>\n\t<!ELEMENT DEFINITION ( FOR | GIVEN | TABLE | PROPERTY )* >\n\t<!ELEMENT FOR (#PCDATA)>\n\t<!ELEMENT GIVEN (#PCDATA)>\n\t<!ELEMENT TABLE (#PCDATA)>\n\t<!ELEMENT PROPERTY (#PCDATA)>\n]>\n\n\n<BIF VERSION=\"0.3\">\n<NETWORK>\n<NAME>eO</NAME>\n<VARIABLE TYPE=\"nature\">\n<NAME>eO</NAME>\n<PROPERTY>position = (0,0)</PROPERTY>\n</VARIABLE>\n<DEFINITION>\n<FOR>eO</FOR>\n<TABLE>\n\n</TABLE>\n</DEFINITION>\n</NETWORK>\n</BIF>\n");
      assertEquals(" Paste Action", editableBayesNet0.lastActionMsg());
  }

  @Test
  public void test37()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("", arrayList0, 7);
      Attribute attribute0 = new Attribute("");
      arrayList0.add(attribute0);
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(instances0);
      assertEquals(0, instances0.classIndex());
      
      EditableBayesNet.AddArcAction editableBayesNet_AddArcAction0 = editableBayesNet0.new AddArcAction(0, 0);
      editableBayesNet_AddArcAction0.redo();
      assertEquals("<?xml version=\"1.0\"?>\n<!-- DTD for the XMLBIF 0.3 format -->\n<!DOCTYPE BIF [\n\t<!ELEMENT BIF ( NETWORK )*>\n\t      <!ATTLIST BIF VERSION CDATA #REQUIRED>\n\t<!ELEMENT NETWORK ( NAME, ( PROPERTY | VARIABLE | DEFINITION )* )>\n\t<!ELEMENT NAME (#PCDATA)>\n\t<!ELEMENT VARIABLE ( NAME, ( OUTCOME |  PROPERTY )* ) >\n\t      <!ATTLIST VARIABLE TYPE (nature|decision|utility) \"nature\">\n\t<!ELEMENT OUTCOME (#PCDATA)>\n\t<!ELEMENT DEFINITION ( FOR | GIVEN | TABLE | PROPERTY )* >\n\t<!ELEMENT FOR (#PCDATA)>\n\t<!ELEMENT GIVEN (#PCDATA)>\n\t<!ELEMENT TABLE (#PCDATA)>\n\t<!ELEMENT PROPERTY (#PCDATA)>\n]>\n\n\n<BIF VERSION=\"0.3\">\n<NETWORK>\n<NAME></NAME>\n<VARIABLE TYPE=\"nature\">\n<NAME></NAME>\n<PROPERTY>position = (0,0)</PROPERTY>\n</VARIABLE>\n<DEFINITION>\n<FOR></FOR>\n<GIVEN></GIVEN>\n<GIVEN></GIVEN>\n<TABLE>\n</TABLE>\n</DEFINITION>\n</NETWORK>\n</BIF>\n", editableBayesNet0.graph());
  }

  @Test
  public void test38()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("", arrayList0, 7);
      Attribute attribute0 = new Attribute("");
      arrayList0.add(attribute0);
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(instances0);
      EditableBayesNet.AddValueAction editableBayesNet_AddValueAction0 = editableBayesNet0.new AddValueAction(0, "b)Q");
      editableBayesNet_AddValueAction0.redo();
      assertEquals(1, instances0.numAttributes());
      assertEquals("<?xml version=\"1.0\"?>\n<!-- DTD for the XMLBIF 0.3 format -->\n<!DOCTYPE BIF [\n\t<!ELEMENT BIF ( NETWORK )*>\n\t      <!ATTLIST BIF VERSION CDATA #REQUIRED>\n\t<!ELEMENT NETWORK ( NAME, ( PROPERTY | VARIABLE | DEFINITION )* )>\n\t<!ELEMENT NAME (#PCDATA)>\n\t<!ELEMENT VARIABLE ( NAME, ( OUTCOME |  PROPERTY )* ) >\n\t      <!ATTLIST VARIABLE TYPE (nature|decision|utility) \"nature\">\n\t<!ELEMENT OUTCOME (#PCDATA)>\n\t<!ELEMENT DEFINITION ( FOR | GIVEN | TABLE | PROPERTY )* >\n\t<!ELEMENT FOR (#PCDATA)>\n\t<!ELEMENT GIVEN (#PCDATA)>\n\t<!ELEMENT TABLE (#PCDATA)>\n\t<!ELEMENT PROPERTY (#PCDATA)>\n]>\n\n\n<BIF VERSION=\"0.3\">\n<NETWORK>\n<NAME></NAME>\n<VARIABLE TYPE=\"nature\">\n<NAME></NAME>\n<OUTCOME>b)Q</OUTCOME>\n<PROPERTY>position = (0,0)</PROPERTY>\n</VARIABLE>\n<DEFINITION>\n<FOR></FOR>\n<TABLE>\n0.0 \n</TABLE>\n</DEFINITION>\n</NETWORK>\n</BIF>\n", editableBayesNet0.toXMLBIF03());
  }

  @Test
  public void test39()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("", arrayList0, 7);
      Attribute attribute0 = new Attribute("");
      arrayList0.add(attribute0);
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(instances0);
      EditableBayesNet.AddValueAction editableBayesNet_AddValueAction0 = editableBayesNet0.new AddValueAction(0, "b)Q");
      editableBayesNet_AddValueAction0.undo();
      assertEquals("@relation ''\n\n@attribute '' numeric\n\n@data\n", instances0.toString());
      assertEquals((-1), editableBayesNet0.m_nSavedPointer);
  }

  @Test
  public void test40()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet();
      // Undeclared exception!
      try {
        editableBayesNet0.layoutGraph((FastVector) null, (FastVector) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test41()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet();
      // Undeclared exception!
      try {
        editableBayesNet0.alignLeft((FastVector) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test42()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(false);
      // Undeclared exception!
      try {
        editableBayesNet0.alignTop((FastVector) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test43()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet();
      // Undeclared exception!
      try {
        editableBayesNet0.centerVertical((FastVector) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test44()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("eO", arrayList0, 7);
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(instances0);
      assertNotNull(editableBayesNet0);
      
      // Undeclared exception!
      try {
        editableBayesNet0.spaceHorizontal((FastVector) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test45()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet();
      String string0 = editableBayesNet0.graph();
      assertNotNull(string0);
      assertEquals("<!--No model built yet-->", string0);
      assertEquals(false, editableBayesNet0.isChanged());
      assertEquals(true, editableBayesNet0.m_bNeedsUndoAction);
  }

  @Test
  public void test46()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("eO", arrayList0, 7);
      Attribute attribute0 = new Attribute("eO");
      arrayList0.add(attribute0);
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(instances0);
      assertEquals(0, instances0.classIndex());
      
      String string0 = editableBayesNet0.graph();
      assertEquals("<?xml version=\"1.0\"?>\n<!-- DTD for the XMLBIF 0.3 format -->\n<!DOCTYPE BIF [\n\t<!ELEMENT BIF ( NETWORK )*>\n\t      <!ATTLIST BIF VERSION CDATA #REQUIRED>\n\t<!ELEMENT NETWORK ( NAME, ( PROPERTY | VARIABLE | DEFINITION )* )>\n\t<!ELEMENT NAME (#PCDATA)>\n\t<!ELEMENT VARIABLE ( NAME, ( OUTCOME |  PROPERTY )* ) >\n\t      <!ATTLIST VARIABLE TYPE (nature|decision|utility) \"nature\">\n\t<!ELEMENT OUTCOME (#PCDATA)>\n\t<!ELEMENT DEFINITION ( FOR | GIVEN | TABLE | PROPERTY )* >\n\t<!ELEMENT FOR (#PCDATA)>\n\t<!ELEMENT GIVEN (#PCDATA)>\n\t<!ELEMENT TABLE (#PCDATA)>\n\t<!ELEMENT PROPERTY (#PCDATA)>\n]>\n\n\n<BIF VERSION=\"0.3\">\n<NETWORK>\n<NAME>eO</NAME>\n<VARIABLE TYPE=\"nature\">\n<NAME>eO</NAME>\n<PROPERTY>position = (0,0)</PROPERTY>\n</VARIABLE>\n<DEFINITION>\n<FOR>eO</FOR>\n<TABLE>\n\n</TABLE>\n</DEFINITION>\n</NETWORK>\n</BIF>\n", string0);
  }

  @Test
  public void test47()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet();
      String string0 = editableBayesNet0.undo();
      assertEquals(false, editableBayesNet0.isChanged());
      assertEquals(true, editableBayesNet0.m_bNeedsUndoAction);
      assertNotNull(string0);
      assertEquals(false, editableBayesNet0.canUndo());
  }

  @Test
  public void test48()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet();
      String string0 = editableBayesNet0.redo();
      assertEquals(true, editableBayesNet0.m_bNeedsUndoAction);
      assertEquals(false, editableBayesNet0.isChanged());
      assertNotNull(string0);
      assertEquals(false, editableBayesNet0.canUndo());
  }

  @Test
  public void test49()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(false);
      boolean boolean0 = editableBayesNet0.isChanged();
      assertEquals(false, editableBayesNet0.isChanged());
      assertEquals("<!--No model built yet-->", editableBayesNet0.graph());
      assertEquals(true, editableBayesNet0.m_bNeedsUndoAction);
      assertEquals(false, boolean0);
  }

  @Test
  public void test50()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet();
      EditableBayesNet.AddArcAction editableBayesNet_AddArcAction0 = editableBayesNet0.new AddArcAction((-768), (-1));
      editableBayesNet_AddArcAction0.undo();
      boolean boolean0 = editableBayesNet0.isChanged();
      assertEquals(0, editableBayesNet0.m_nCurrentEditAction);
      assertEquals(true, boolean0);
  }

  @Test
  public void test51()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(true);
      String string0 = editableBayesNet0.lastActionMsg();
      assertNotNull(string0);
      assertEquals(true, editableBayesNet0.m_bNeedsUndoAction);
      assertEquals("<?xml version=\"1.0\"?>\n<!-- DTD for the XMLBIF 0.3 format -->\n<!DOCTYPE BIF [\n\t<!ELEMENT BIF ( NETWORK )*>\n\t      <!ATTLIST BIF VERSION CDATA #REQUIRED>\n\t<!ELEMENT NETWORK ( NAME, ( PROPERTY | VARIABLE | DEFINITION )* )>\n\t<!ELEMENT NAME (#PCDATA)>\n\t<!ELEMENT VARIABLE ( NAME, ( OUTCOME |  PROPERTY )* ) >\n\t      <!ATTLIST VARIABLE TYPE (nature|decision|utility) \"nature\">\n\t<!ELEMENT OUTCOME (#PCDATA)>\n\t<!ELEMENT DEFINITION ( FOR | GIVEN | TABLE | PROPERTY )* >\n\t<!ELEMENT FOR (#PCDATA)>\n\t<!ELEMENT GIVEN (#PCDATA)>\n\t<!ELEMENT TABLE (#PCDATA)>\n\t<!ELEMENT PROPERTY (#PCDATA)>\n]>\n\n\n<BIF VERSION=\"0.3\">\n<NETWORK>\n<NAME>New Network</NAME>\n</NETWORK>\n</BIF>\n", editableBayesNet0.toXMLBIF03());
      assertEquals(false, editableBayesNet0.isChanged());
      assertEquals("New Network", editableBayesNet0.getName());
  }

  @Test
  public void test52()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("", arrayList0, 7);
      Attribute attribute0 = new Attribute("");
      arrayList0.add(attribute0);
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(instances0);
      EditableBayesNet.AddNodeAction editableBayesNet_AddNodeAction0 = editableBayesNet0.new AddNodeAction("", 7, 7, 20);
      editableBayesNet_AddNodeAction0.undo();
      String string0 = editableBayesNet0.undo();
      assertEquals("@relation ''\n\n\n@data\n", instances0.toString());
      assertEquals(" Delete Node Action", string0);
  }

  @Test
  public void test53()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet();
      EditableBayesNet.AddArcAction editableBayesNet_AddArcAction0 = editableBayesNet0.new AddArcAction(1938, (FastVector) null);
      editableBayesNet_AddArcAction0.undo();
      assertEquals(1938, editableBayesNet_AddArcAction0.m_nParent);
      assertEquals(false, editableBayesNet0.isChanged());
      assertEquals(true, editableBayesNet0.m_bNeedsUndoAction);
  }

  @Test
  public void test54()  throws Throwable  {
      EditableBayesNet editableBayesNet0 = new EditableBayesNet(true);
      EditableBayesNet.PasteAction editableBayesNet_PasteAction0 = editableBayesNet0.new PasteAction("S", (-1));
      editableBayesNet_PasteAction0.undo();
      assertEquals(true, editableBayesNet0.m_bNeedsUndoAction);
      assertEquals(false, editableBayesNet0.isChanged());
      assertEquals("<?xml version=\"1.0\"?>\n<!-- DTD for the XMLBIF 0.3 format -->\n<!DOCTYPE BIF [\n\t<!ELEMENT BIF ( NETWORK )*>\n\t      <!ATTLIST BIF VERSION CDATA #REQUIRED>\n\t<!ELEMENT NETWORK ( NAME, ( PROPERTY | VARIABLE | DEFINITION )* )>\n\t<!ELEMENT NAME (#PCDATA)>\n\t<!ELEMENT VARIABLE ( NAME, ( OUTCOME |  PROPERTY )* ) >\n\t      <!ATTLIST VARIABLE TYPE (nature|decision|utility) \"nature\">\n\t<!ELEMENT OUTCOME (#PCDATA)>\n\t<!ELEMENT DEFINITION ( FOR | GIVEN | TABLE | PROPERTY )* >\n\t<!ELEMENT FOR (#PCDATA)>\n\t<!ELEMENT GIVEN (#PCDATA)>\n\t<!ELEMENT TABLE (#PCDATA)>\n\t<!ELEMENT PROPERTY (#PCDATA)>\n]>\n\n\n<BIF VERSION=\"0.3\">\n<NETWORK>\n<NAME>New Network</NAME>\n</NETWORK>\n</BIF>\n", editableBayesNet0.toXMLBIF03());
      assertEquals((-1), editableBayesNet_PasteAction0.m_nBase);
      assertEquals("<?xml version=\"1.0\"?>\n<!-- DTD for the XMLBIF 0.3 format -->\n<!DOCTYPE BIF [\n\t<!ELEMENT BIF ( NETWORK )*>\n\t      <!ATTLIST BIF VERSION CDATA #REQUIRED>\n\t<!ELEMENT NETWORK ( NAME, ( PROPERTY | VARIABLE | DEFINITION )* )>\n\t<!ELEMENT NAME (#PCDATA)>\n\t<!ELEMENT VARIABLE ( NAME, ( OUTCOME |  PROPERTY )* ) >\n\t      <!ATTLIST VARIABLE TYPE (nature|decision|utility) \"nature\">\n\t<!ELEMENT OUTCOME (#PCDATA)>\n\t<!ELEMENT DEFINITION ( FOR | GIVEN | TABLE | PROPERTY )* >\n\t<!ELEMENT FOR (#PCDATA)>\n\t<!ELEMENT GIVEN (#PCDATA)>\n\t<!ELEMENT TABLE (#PCDATA)>\n\t<!ELEMENT PROPERTY (#PCDATA)>\n]>\n\n\n<BIF VERSION=\"0.3\">\n<NETWORK>\n<NAME>New Network</NAME>\n</NETWORK>\n</BIF>\n", editableBayesNet0.graph());
  }
}
