/*
 * This file was automatically generated by EvoSuite
 */

package weka.classifiers.bayes;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.ArrayList;
import java.util.Enumeration;
import org.junit.BeforeClass;
import weka.classifiers.bayes.BayesNet;
import weka.core.Attribute;
import weka.core.BinarySparseInstance;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.SparseInstance;

@RunWith(EvoSuiteRunner.class)
public class BayesNetEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      String string0 = bayesNet0.estimatorTipText();
      assertEquals(false, bayesNet0.m_bUseADTree);
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertEquals("Select Estimator algorithm for finding the conditional probability tables of the Bayes Network.", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      Enumeration<Object> enumeration0 = bayesNet0.enumerateMeasures();
      assertNotNull(enumeration0);
      assertEquals(false, bayesNet0.m_bUseADTree);
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertEquals("Bayes Network Classifier\nnot using ADTree: No model built yet.", bayesNet0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      bayesNet0.getMeasure("measureBayesScore");
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertEquals(false, bayesNet0.m_bUseADTree);
  }

  @Test
  public void test3()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      // Undeclared exception!
      try {
        bayesNet0.getParentSet((-1));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      // Undeclared exception!
      try {
        bayesNet0.getParentCardinality((-1));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      bayesNet0.getADTree();
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertEquals(false, bayesNet0.m_bUseADTree);
      assertEquals("Bayes Network Classifier\nnot using ADTree: No model built yet.", bayesNet0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      assertEquals(false, bayesNet0.m_bUseADTree);
      
      bayesNet0.setUseADTree(true);
      bayesNet0.getOptions();
      assertEquals(true, bayesNet0.m_bUseADTree);
      assertEquals(true, bayesNet0.getUseADTree());
  }

  @Test
  public void test7()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      try {
        bayesNet0.estimateCPTs();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      int int0 = bayesNet0.graphType();
      assertEquals(2, int0);
      assertEquals(false, bayesNet0.m_bUseADTree);
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
  }

  @Test
  public void test9()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      try {
        bayesNet0.buildClassifier((Instances) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      bayesNet0.measureBDeuScore();
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertEquals(false, bayesNet0.m_bUseADTree);
  }

  @Test
  public void test11()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      String[] stringArray0 = bayesNet0.getOptions();
      assertNotNull(stringArray0);
      
      bayesNet0.setOptions(stringArray0);
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertEquals(false, bayesNet0.m_bUseADTree);
      assertEquals(false, bayesNet0.getUseADTree());
  }

  @Test
  public void test12()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      bayesNet0.measureAICScore();
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertEquals(false, bayesNet0.m_bUseADTree);
  }

  @Test
  public void test13()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      bayesNet0.getMeasure("measureMDLScore");
      assertEquals(false, bayesNet0.m_bUseADTree);
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
  }

  @Test
  public void test14()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      String string0 = bayesNet0.BIFFileTipText();
      assertEquals("Set the name of a file in BIF XML format. A Bayes network learned from data can be compared with the Bayes network represented by the BIF file. Statistics calculated are o.a. the number of missing and extra arcs.", string0);
      assertEquals(false, bayesNet0.m_bUseADTree);
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
  }

  @Test
  public void test15()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      String string0 = bayesNet0.searchAlgorithmTipText();
      assertEquals(false, bayesNet0.m_bUseADTree);
      assertEquals("Select method used for searching network structures.", string0);
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
  }

  @Test
  public void test16()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      // Undeclared exception!
      try {
        bayesNet0.getName();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test17()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      bayesNet0.getDistributions();
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertEquals(false, bayesNet0.m_bUseADTree);
  }

  @Test
  public void test18()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      double[] doubleArray0 = new double[2];
      SparseInstance sparseInstance0 = new SparseInstance((double) (-1), doubleArray0);
      try {
        bayesNet0.classifyInstance((Instance) sparseInstance0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test19()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      String string0 = bayesNet0.getRevision();
      assertEquals(false, bayesNet0.m_bUseADTree);
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertNotNull(string0);
      assertEquals("8034", string0);
  }

  @Test
  public void test20()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      bayesNet0.getMeasure("measureEntropyScore");
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertEquals(false, bayesNet0.m_bUseADTree);
  }

  @Test
  public void test21()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      try {
        bayesNet0.initCPTs();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test22()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      bayesNet0.setBIFFile("");
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertEquals(false, bayesNet0.m_bUseADTree);
  }

  @Test
  public void test23()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      // Undeclared exception!
      try {
        bayesNet0.getParent((-1), (-1));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test24()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      // Undeclared exception!
      try {
        bayesNet0.getNrOfNodes();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test25()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      try {
        bayesNet0.buildStructure();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test26()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      // Undeclared exception!
      try {
        bayesNet0.getCardinality((-1));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test27()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      String string0 = bayesNet0.useADTreeTipText();
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertEquals(false, bayesNet0.m_bUseADTree);
      assertEquals("When ADTree (the data structure for increasing speed on counts, not to be confused with the classifier under the same name) is used learning time goes down typically. However, because ADTrees are memory intensive, memory problems may occur. Switching this option off makes the structure learning algorithms slower, and run with less memory. By default, ADTrees are used.", string0);
  }

  @Test
  public void test28()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      // Undeclared exception!
      try {
        bayesNet0.getNodeName((-1));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test29()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      String string0 = bayesNet0.graph();
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertEquals("<!--No model built yet-->", string0);
      assertNotNull(string0);
      assertEquals(false, bayesNet0.m_bUseADTree);
  }

  @Test
  public void test30()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      boolean boolean0 = bayesNet0.getUseADTree();
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertEquals(false, boolean0);
  }

  @Test
  public void test31()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      // Undeclared exception!
      try {
        bayesNet0.getProbability((-1), (-1), (-1));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test32()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      // Undeclared exception!
      try {
        bayesNet0.getNrOfParents((-1));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test33()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      // Undeclared exception!
      try {
        bayesNet0.getNodeValue((-1), (-1));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test34()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      String string0 = bayesNet0.getBIFHeader();
      assertEquals(false, bayesNet0.m_bUseADTree);
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertEquals("<?xml version=\"1.0\"?>\n<!-- DTD for the XMLBIF 0.3 format -->\n<!DOCTYPE BIF [\n\t<!ELEMENT BIF ( NETWORK )*>\n\t      <!ATTLIST BIF VERSION CDATA #REQUIRED>\n\t<!ELEMENT NETWORK ( NAME, ( PROPERTY | VARIABLE | DEFINITION )* )>\n\t<!ELEMENT NAME (#PCDATA)>\n\t<!ELEMENT VARIABLE ( NAME, ( OUTCOME |  PROPERTY )* ) >\n\t      <!ATTLIST VARIABLE TYPE (nature|decision|utility) \"nature\">\n\t<!ELEMENT OUTCOME (#PCDATA)>\n\t<!ELEMENT DEFINITION ( FOR | GIVEN | TABLE | PROPERTY )* >\n\t<!ELEMENT FOR (#PCDATA)>\n\t<!ELEMENT GIVEN (#PCDATA)>\n\t<!ELEMENT TABLE (#PCDATA)>\n\t<!ELEMENT PROPERTY (#PCDATA)>\n]>\n", string0);
  }

  @Test
  public void test35()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      int[] intArray0 = new int[8];
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((double) (-1), intArray0, 0);
      try {
        bayesNet0.updateClassifier((Instance) binarySparseInstance0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test36()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      String string0 = bayesNet0.globalInfo();
      assertEquals(false, bayesNet0.m_bUseADTree);
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertEquals("Bayes Network learning using various search algorithms and quality measures.\nBase class for a Bayes Network classifier. Provides datastructures (network structure, conditional probability distributions, etc.) and facilities common to Bayes Network learning algorithms like K2 and B.\n\nFor more information see:\n\nhttp://www.cs.waikato.ac.nz/~remco/weka.pdf", string0);
  }

  @Test
  public void test37()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      bayesNet0.getParentSets();
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertEquals(false, bayesNet0.m_bUseADTree);
  }

  @Test
  public void test38()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      Enumeration<Object> enumeration0 = bayesNet0.listOptions();
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertEquals(false, bayesNet0.m_bUseADTree);
      assertNotNull(enumeration0);
      assertEquals("Bayes Network Classifier\nnot using ADTree: No model built yet.", bayesNet0.toString());
  }

  @Test
  public void test39()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("YeasureMDLScorV", arrayList0, 112);
      Instances instances1 = bayesNet0.normalizeDataSet(instances0);
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertEquals(false, bayesNet0.m_bUseADTree);
      assertNotNull(instances1);
  }

  @Test
  public void test40()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      double[] doubleArray0 = bayesNet0.countsForInstance((Instance) null);
      assertNotNull(doubleArray0);
      assertEquals(false, bayesNet0.m_bUseADTree);
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
  }

  @Test
  public void test41()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      assertEquals(false, bayesNet0.m_bUseADTree);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[2] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[6] = "";
      bayesNet0.setOptions(stringArray0);
      assertEquals(true, bayesNet0.m_bUseADTree);
      assertEquals("Bayes Network Classifier\nUsing ADTree: No model built yet.", bayesNet0.toString());
  }

  @Test
  public void test42()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      String[] stringArray1 = BayesNet.partitionOptions(stringArray0);
      assertFalse(stringArray0.equals(stringArray1));
  }

  @Test
  public void test43()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[0] = "s^CU,??-N$Y/;\"O'7q,";
      stringArray0[1] = "s^CU,??-N$Y/;\"O'7q,";
      stringArray0[2] = "s^CU,??-N$Y/;\"O'7q,";
      stringArray0[3] = "s^CU,??-N$Y/;\"O'7q,";
      stringArray0[4] = "s^CU,??-N$Y/;\"O'7q,";
      stringArray0[5] = "s^CU,??-N$Y/;\"O'7q,";
      stringArray0[6] = "s^CU,??-N$Y/;\"O'7q,";
      stringArray0[7] = "s^CU,??-N$Y/;\"O'7q,";
      stringArray0[8] = "s^CU,??-N$Y/;\"O'7q,";
      stringArray0[9] = "--";
      String[] stringArray1 = BayesNet.partitionOptions(stringArray0);
      assertFalse(stringArray1.equals(stringArray0));
  }

  @Test
  public void test44()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      String string0 = bayesNet0.getBIFFile();
      assertNotNull(string0);
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertEquals(false, bayesNet0.m_bUseADTree);
  }

  @Test
  public void test45()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      String string0 = bayesNet0.toString();
      assertNotNull(string0);
      assertEquals("Bayes Network Classifier\nnot using ADTree: No model built yet.", string0);
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
  }

  @Test
  public void test46()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      assertEquals(false, bayesNet0.m_bUseADTree);
      
      bayesNet0.setUseADTree(true);
      String string0 = bayesNet0.toString();
      assertEquals(true, bayesNet0.m_bUseADTree);
      assertEquals("Bayes Network Classifier\nUsing ADTree: No model built yet.", string0);
  }

  @Test
  public void test47()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      String string0 = bayesNet0.XMLNormalize(",6W%j*_<");
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertEquals(",6W%j*_&lt;", string0);
      assertNotNull(string0);
      assertEquals(false, bayesNet0.m_bUseADTree);
  }

  @Test
  public void test48()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      String string0 = bayesNet0.XMLNormalize("qHP'-@K&]\"Rp,/yD**");
      assertNotNull(string0);
      assertEquals(false, bayesNet0.m_bUseADTree);
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertEquals("qHP&apos;-@K&amp;]&quot;Rp,/yD**", string0);
  }

  @Test
  public void test49()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      String string0 = bayesNet0.XMLNormalize("-GE]g4g>");
      assertNotNull(string0);
      assertEquals("-GE]g4g&gt;", string0);
      assertEquals(false, bayesNet0.m_bUseADTree);
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
  }

  @Test
  public void test50()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      double double0 = bayesNet0.getMeasure("measureExtraArcs");
      assertEquals(0.0, double0, 0.01D);
      assertEquals(false, bayesNet0.m_bUseADTree);
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
  }

  @Test
  public void test51()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      double double0 = bayesNet0.getMeasure("measureReversedArcs");
      assertEquals(0.0, double0, 0.01D);
      assertEquals(false, bayesNet0.m_bUseADTree);
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
  }

  @Test
  public void test52()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      double double0 = bayesNet0.getMeasure("measureMissingArcs");
      assertEquals(false, bayesNet0.m_bUseADTree);
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertEquals(0.0, double0, 0.01D);
  }

  @Test
  public void test53()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      double double0 = bayesNet0.getMeasure("measureDivergence");
      assertEquals(false, bayesNet0.m_bUseADTree);
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
      assertEquals(0.0, double0, 0.01D);
  }

  @Test
  public void test54()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      bayesNet0.getMeasure("YeasureMDLScorV");
      assertEquals(false, bayesNet0.m_bUseADTree);
      assertEquals((-1), bayesNet0.m_nNonDiscreteAttribute);
  }
}
