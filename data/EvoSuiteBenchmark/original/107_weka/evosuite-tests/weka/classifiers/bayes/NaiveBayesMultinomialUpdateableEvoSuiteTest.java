/*
 * This file was automatically generated by EvoSuite
 */

package weka.classifiers.bayes;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import weka.classifiers.bayes.NaiveBayesMultinomialUpdateable;
import weka.core.Instance;

@RunWith(EvoSuiteRunner.class)
public class NaiveBayesMultinomialUpdateableEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      NaiveBayesMultinomialUpdateable naiveBayesMultinomialUpdateable0 = new NaiveBayesMultinomialUpdateable();
      String string0 = naiveBayesMultinomialUpdateable0.getRevision();
      assertEquals("8034", string0);
      assertNotNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      NaiveBayesMultinomialUpdateable naiveBayesMultinomialUpdateable0 = new NaiveBayesMultinomialUpdateable();
      String string0 = naiveBayesMultinomialUpdateable0.globalInfo();
      assertNotNull(string0);
      assertEquals("Class for building and using a multinomial Naive Bayes classifier. For more information see,\n\nAndrew Mccallum, Kamal Nigam: A Comparison of Event Models for Naive Bayes Text Classification. In: AAAI-98 Workshop on 'Learning for Text Categorization', 1998.\n\nThe core equation for this classifier:\n\nP[Ci|D] = (P[D|Ci] x P[Ci]) / P[D] (Bayes rule)\n\nwhere Ci is class i and D is a document.\n\nIncremental version of the algorithm.", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      NaiveBayesMultinomialUpdateable naiveBayesMultinomialUpdateable0 = new NaiveBayesMultinomialUpdateable();
      try {
        naiveBayesMultinomialUpdateable0.classifyInstance((Instance) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 0
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      NaiveBayesMultinomialUpdateable naiveBayesMultinomialUpdateable0 = new NaiveBayesMultinomialUpdateable();
      String string0 = naiveBayesMultinomialUpdateable0.toString();
      assertEquals("The independent probability of a class\n--------------------------------------\n\nThe probability of a word given the class\n-----------------------------------------\n\t\n", string0);
      assertNotNull(string0);
  }
}
