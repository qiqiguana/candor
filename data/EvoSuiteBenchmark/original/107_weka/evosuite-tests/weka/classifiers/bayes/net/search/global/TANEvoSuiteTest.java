/*
 * This file was automatically generated by EvoSuite
 */

package weka.classifiers.bayes.net.search.global;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Enumeration;
import org.junit.BeforeClass;
import weka.classifiers.bayes.net.search.global.TAN;

@RunWith(EvoSuiteRunner.class)
public class TANEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TAN tAN0 = new TAN();
      String string0 = tAN0.globalInfo();
      assertEquals("This Bayes Network learning algorithm determines the maximum weight spanning tree and returns a Naive Bayes network augmented with a tree.\n\nFor more information see:\n\nN. Friedman, D. Geiger, M. Goldszmidt (1997). Bayesian network classifiers. Machine Learning. 29(2-3):131-163.", string0);
      assertNotNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      TAN tAN0 = new TAN();
      String string0 = tAN0.getRevision();
      assertEquals("8034", string0);
      assertNotNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      TAN tAN0 = new TAN();
      String[] stringArray0 = tAN0.getOptions();
      tAN0.setOptions(stringArray0);
      assertEquals("Select cross validation strategy to be used in searching for networks.LOO-CV = Leave one out cross validation\nk-Fold-CV = k fold cross validation\nCumulative-CV = cumulative cross validation.", tAN0.CVTypeTipText());
  }

  @Test
  public void test3()  throws Throwable  {
      TAN tAN0 = new TAN();
      Enumeration<Object> enumeration0 = tAN0.listOptions();
      assertEquals(true, enumeration0.hasMoreElements());
  }
}
