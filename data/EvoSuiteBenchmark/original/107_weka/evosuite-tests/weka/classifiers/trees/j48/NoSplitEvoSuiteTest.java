/*
 * This file was automatically generated by EvoSuite
 */

package weka.classifiers.trees.j48;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import weka.classifiers.trees.j48.Distribution;
import weka.classifiers.trees.j48.NoSplit;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.SparseInstance;

@RunWith(EvoSuiteRunner.class)
public class NoSplitEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Distribution distribution0 = new Distribution(1, 1);
      NoSplit noSplit0 = new NoSplit(distribution0);
      try {
        noSplit0.buildClassifier((Instances) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Distribution distribution0 = new Distribution(1, 1);
      NoSplit noSplit0 = new NoSplit(distribution0);
      SparseInstance sparseInstance0 = new SparseInstance(2013);
      noSplit0.whichSubset((Instance) sparseInstance0);
  }

  @Test
  public void test2()  throws Throwable  {
      Distribution distribution0 = new Distribution(1, 1);
      NoSplit noSplit0 = new NoSplit(distribution0);
      noSplit0.leftSide((Instances) null);
      assertEquals(true, noSplit0.checkModel());
      assertEquals(1, noSplit0.numSubsets());
  }

  @Test
  public void test3()  throws Throwable  {
      Distribution distribution0 = new Distribution(1, 1);
      NoSplit noSplit0 = new NoSplit(distribution0);
      String string0 = noSplit0.sourceExpression(1, (Instances) null);
      assertEquals("true", string0);
      assertEquals(1, noSplit0.numSubsets());
  }

  @Test
  public void test4()  throws Throwable  {
      Distribution distribution0 = new Distribution(1, 1);
      NoSplit noSplit0 = new NoSplit(distribution0);
      noSplit0.rightSide((-264), (Instances) null);
      assertEquals(1, noSplit0.numSubsets());
      assertEquals(true, noSplit0.checkModel());
  }

  @Test
  public void test5()  throws Throwable  {
      Distribution distribution0 = new Distribution(1, 1);
      NoSplit noSplit0 = new NoSplit(distribution0);
      String string0 = noSplit0.getRevision();
      assertEquals("8034", string0);
      assertEquals(1, noSplit0.numSubsets());
      assertNotNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      Distribution distribution0 = new Distribution(1, 1);
      NoSplit noSplit0 = new NoSplit(distribution0);
      SparseInstance sparseInstance0 = new SparseInstance(2013);
      noSplit0.weights((Instance) sparseInstance0);
  }
}
