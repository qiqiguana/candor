/*
 * This file was automatically generated by EvoSuite
 */

package weka.classifiers.trees.j48;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import weka.classifiers.trees.j48.Distribution;
import weka.classifiers.trees.j48.EntropySplitCrit;

@RunWith(EvoSuiteRunner.class)
public class EntropySplitCritEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      EntropySplitCrit entropySplitCrit0 = new EntropySplitCrit();
      // Undeclared exception!
      try {
        entropySplitCrit0.splitCritValue((Distribution) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      EntropySplitCrit entropySplitCrit0 = new EntropySplitCrit();
      String string0 = entropySplitCrit0.getRevision();
      assertNotNull(string0);
      assertEquals("8034", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      EntropySplitCrit entropySplitCrit0 = new EntropySplitCrit();
      double[][] doubleArray0 = new double[3][3];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = 0.2;
      doubleArray0[0] = doubleArray1;
      Distribution distribution0 = new Distribution(doubleArray0);
      double double0 = entropySplitCrit0.splitCritValue(distribution0, distribution0);
      assertEquals(0.0, double0, 0.01D);
  }

  @Test
  public void test3()  throws Throwable  {
      EntropySplitCrit entropySplitCrit0 = new EntropySplitCrit();
      double[][] doubleArray0 = new double[3][3];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = 0.2;
      doubleArray0[0] = doubleArray1;
      Distribution distribution0 = new Distribution(doubleArray0);
      Distribution distribution1 = new Distribution(1863, 1267);
      entropySplitCrit0.splitCritValue(distribution1, distribution0);
  }
}
