/*
 * This file was automatically generated by EvoSuite
 */

package weka.classifiers.trees.j48;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import weka.classifiers.trees.j48.NBTreeNoSplit;
import weka.core.BinarySparseInstance;
import weka.core.Instance;
import weka.core.Instances;

@RunWith(EvoSuiteRunner.class)
public class NBTreeNoSplitEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      NBTreeNoSplit nBTreeNoSplit0 = new NBTreeNoSplit();
      String string0 = nBTreeNoSplit0.getRevision();
      assertNotNull(string0);
      assertEquals("8034", string0);
      assertEquals(1, nBTreeNoSplit0.numSubsets());
  }

  @Test
  public void test1()  throws Throwable  {
      NBTreeNoSplit nBTreeNoSplit0 = new NBTreeNoSplit();
      nBTreeNoSplit0.getNaiveBayesModel();
      assertEquals(1, nBTreeNoSplit0.numSubsets());
      assertEquals(true, nBTreeNoSplit0.checkModel());
  }

  @Test
  public void test2()  throws Throwable  {
      NBTreeNoSplit nBTreeNoSplit0 = new NBTreeNoSplit();
      double double0 = nBTreeNoSplit0.getErrors();
      assertEquals(0.0, double0, 0.01D);
      assertEquals(1, nBTreeNoSplit0.numSubsets());
  }

  @Test
  public void test3()  throws Throwable  {
      NBTreeNoSplit nBTreeNoSplit0 = new NBTreeNoSplit();
      String string0 = nBTreeNoSplit0.sourceExpression(12, (Instances) null);
      assertEquals("true", string0);
      assertEquals(true, nBTreeNoSplit0.checkModel());
  }

  @Test
  public void test4()  throws Throwable  {
      NBTreeNoSplit nBTreeNoSplit0 = new NBTreeNoSplit();
      try {
        nBTreeNoSplit0.dumpModel((Instances) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      NBTreeNoSplit nBTreeNoSplit0 = new NBTreeNoSplit();
      nBTreeNoSplit0.weights((Instance) null);
      assertEquals(1, nBTreeNoSplit0.numSubsets());
      assertEquals(true, nBTreeNoSplit0.checkModel());
  }

  @Test
  public void test6()  throws Throwable  {
      NBTreeNoSplit nBTreeNoSplit0 = new NBTreeNoSplit();
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(119);
      try {
        nBTreeNoSplit0.classProb(119, (Instance) binarySparseInstance0, 119);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      NBTreeNoSplit nBTreeNoSplit0 = new NBTreeNoSplit();
      try {
        nBTreeNoSplit0.classifyInstance((Instance) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      NBTreeNoSplit nBTreeNoSplit0 = new NBTreeNoSplit();
      // Undeclared exception!
      try {
        nBTreeNoSplit0.toString();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      NBTreeNoSplit nBTreeNoSplit0 = new NBTreeNoSplit();
      nBTreeNoSplit0.getDiscretizer();
      assertEquals(true, nBTreeNoSplit0.checkModel());
      assertEquals(1, nBTreeNoSplit0.numSubsets());
  }
}
