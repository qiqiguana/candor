/*
 * This file was automatically generated by EvoSuite
 */

package weka.classifiers.meta;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import weka.classifiers.meta.RandomCommittee;
import weka.core.Instances;

@RunWith(EvoSuiteRunner.class)
public class RandomCommitteeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RandomCommittee randomCommittee0 = new RandomCommittee();
      String string0 = randomCommittee0.globalInfo();
      assertEquals("Class for building an ensemble of randomizable base classifiers. Each base classifiers is built using a different random number seed (but based one the same data). The final prediction is a straight average of the predictions generated by the individual base classifiers.", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      RandomCommittee randomCommittee0 = new RandomCommittee();
      Instances instances0 = randomCommittee0.getTrainingSet(10);
      assertNull(instances0);
  }

  @Test
  public void test2()  throws Throwable  {
      RandomCommittee randomCommittee0 = new RandomCommittee();
      String string0 = randomCommittee0.defaultClassifierString();
      assertEquals("weka.classifiers.trees.RandomTree", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      RandomCommittee randomCommittee0 = new RandomCommittee();
      String string0 = randomCommittee0.getRevision();
      assertNotNull(string0);
      assertEquals("8034", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      RandomCommittee randomCommittee0 = new RandomCommittee();
      String string0 = randomCommittee0.toString();
      assertEquals("RandomCommittee: No model built yet.", string0);
      assertNotNull(string0);
  }
}
