/*
 * This file was automatically generated by EvoSuite
 */

package weka.classifiers.pmml.consumer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import javax.imageio.metadata.IIOMetadataNode;
import org.junit.BeforeClass;
import org.w3c.dom.Element;
import weka.classifiers.pmml.consumer.RuleSetModel;
import weka.core.Instances;
import weka.core.pmml.MiningSchema;
import weka.core.pmml.TransformationDictionary;

@RunWith(EvoSuiteRunner.class)
public class RuleSetModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("3atS");
      RuleSetModel.SimpleRule ruleSetModel_SimpleRule0 = null;
      try {
        ruleSetModel_SimpleRule0 = new RuleSetModel.SimpleRule((Element) iIOMetadataNode0, (MiningSchema) null);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
        /*
         * [Predicate] unknown or missing predicate type in node
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("FB]>C$!ogc:lOl");
      RuleSetModel.RuleSet ruleSetModel_RuleSet0 = null;
      try {
        ruleSetModel_RuleSet0 = new RuleSetModel.RuleSet((Element) iIOMetadataNode0, (MiningSchema) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      MiningSchema miningSchema0 = new MiningSchema((Element) iIOMetadataNode0, (Instances) null, (TransformationDictionary) null);
      RuleSetModel ruleSetModel0 = null;
      try {
        ruleSetModel0 = new RuleSetModel((Element) iIOMetadataNode0, (Instances) null, miningSchema0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
        /*
         * [RuleSetModel] Should only have a single RuleSet!
         */
      }
  }
}
