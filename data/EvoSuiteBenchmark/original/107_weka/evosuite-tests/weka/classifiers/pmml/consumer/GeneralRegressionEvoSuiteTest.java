/*
 * This file was automatically generated by EvoSuite
 */

package weka.classifiers.pmml.consumer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import javax.imageio.metadata.IIOMetadataNode;
import org.junit.BeforeClass;
import org.w3c.dom.Element;
import weka.classifiers.pmml.consumer.GeneralRegression;
import weka.core.Instances;
import weka.core.pmml.MiningSchema;

@RunWith(EvoSuiteRunner.class)
public class GeneralRegressionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      GeneralRegression generalRegression0 = null;
      try {
        generalRegression0 = new GeneralRegression((Element) iIOMetadataNode0, (Instances) null, (MiningSchema) null);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
        /*
         * [GeneralRegression] unknown model type: 
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      GeneralRegression.CumulativeLinkFunction generalRegression_CumulativeLinkFunction0 = GeneralRegression.CumulativeLinkFunction.LOGLOG;
      String string0 = generalRegression_CumulativeLinkFunction0.toString();
      assertEquals("loglog", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      GeneralRegression.Predictor generalRegression_Predictor0 = new GeneralRegression.Predictor();
      String string0 = generalRegression_Predictor0.toString();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      GeneralRegression.CumulativeLinkFunction generalRegression_CumulativeLinkFunction0 = GeneralRegression.CumulativeLinkFunction.CLOGLOG;
      double double0 = generalRegression_CumulativeLinkFunction0.eval(0.0, 0.0);
      assertEquals(0.6321205588285577, double0, 0.01D);
  }

  @Test
  public void test4()  throws Throwable  {
      GeneralRegression.CumulativeLinkFunction generalRegression_CumulativeLinkFunction0 = GeneralRegression.CumulativeLinkFunction.LOGLOG;
      double double0 = generalRegression_CumulativeLinkFunction0.eval(1640.712567260209, 1640.712567260209);
      assertEquals(1.0, double0, 0.01D);
  }

  @Test
  public void test5()  throws Throwable  {
      GeneralRegression.Parameter generalRegression_Parameter0 = new GeneralRegression.Parameter();
      assertNotNull(generalRegression_Parameter0);
  }

  @Test
  public void test6()  throws Throwable  {
      GeneralRegression.CumulativeLinkFunction generalRegression_CumulativeLinkFunction0 = GeneralRegression.CumulativeLinkFunction.CAUCHIT;
      double double0 = generalRegression_CumulativeLinkFunction0.eval((-158.6222249983336), (-158.6222249983336));
      assertEquals(0.001003355084541968, double0, 0.01D);
  }

  @Test
  public void test7()  throws Throwable  {
      GeneralRegression.CumulativeLinkFunction generalRegression_CumulativeLinkFunction0 = GeneralRegression.CumulativeLinkFunction.NONE;
      double double0 = generalRegression_CumulativeLinkFunction0.eval((-130.90956139931845), (-130.90956139931845));
      assertEquals(Double.NaN, double0, 0.01D);
  }

  @Test
  public void test8()  throws Throwable  {
      GeneralRegression.CumulativeLinkFunction generalRegression_CumulativeLinkFunction0 = GeneralRegression.CumulativeLinkFunction.LOGIT;
      double double0 = generalRegression_CumulativeLinkFunction0.eval((-1424.368072172764), (-1424.368072172764));
      assertEquals(0.0, double0, 0.01D);
  }

  @Test
  public void test9()  throws Throwable  {
      GeneralRegression.CumulativeLinkFunction generalRegression_CumulativeLinkFunction0 = GeneralRegression.CumulativeLinkFunction.PROBIT;
      double double0 = generalRegression_CumulativeLinkFunction0.eval(719.6493983240866, 719.6493983240866);
      assertEquals(1.0, double0, 0.01D);
  }

  @Test
  public void test10()  throws Throwable  {
      GeneralRegression.LinkFunction generalRegression_LinkFunction0 = GeneralRegression.LinkFunction.LOGC;
      String string0 = generalRegression_LinkFunction0.toString();
      assertEquals("logc", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      GeneralRegression.LinkFunction generalRegression_LinkFunction0 = GeneralRegression.LinkFunction.PROBIT;
      double double0 = generalRegression_LinkFunction0.eval((-1424.368072172764), (-1424.368072172764), (-1424.368072172764), (-1424.368072172764), (-1424.368072172764));
      assertEquals(-0.0, double0, 0.01D);
  }

  @Test
  public void test12()  throws Throwable  {
      GeneralRegression.PPCell generalRegression_PPCell0 = new GeneralRegression.PPCell();
      assertNotNull(generalRegression_PPCell0);
  }

  @Test
  public void test13()  throws Throwable  {
      GeneralRegression.Distribution generalRegression_Distribution0 = GeneralRegression.Distribution.INVGAUSSIAN;
      String string0 = generalRegression_Distribution0.toString();
      assertEquals("igauss", string0);
  }

  @Test
  public void test14()  throws Throwable  {
      GeneralRegression.LinkFunction generalRegression_LinkFunction0 = GeneralRegression.LinkFunction.IDENTITY;
      double double0 = generalRegression_LinkFunction0.eval(0.6321205588285577, 0.6321205588285577, 0.6321205588285577, 0.6321205588285577, 0.0);
      assertEquals(0.7991528017874561, double0, 0.01D);
  }

  @Test
  public void test15()  throws Throwable  {
      GeneralRegression.LinkFunction generalRegression_LinkFunction0 = GeneralRegression.LinkFunction.LOG;
      double double0 = generalRegression_LinkFunction0.eval(309.6969179006979, 309.6969179006979, 309.6969179006979, 309.6969179006979, 309.6969179006979);
      assertEquals(3.092159564696708E271, double0, 0.01D);
  }

  @Test
  public void test16()  throws Throwable  {
      GeneralRegression.LinkFunction generalRegression_LinkFunction0 = GeneralRegression.LinkFunction.LOGC;
      double double0 = generalRegression_LinkFunction0.eval(0.0, 0.0, 0.0, 0.0, 0.0);
      assertEquals(0.0, double0, 0.01D);
  }

  @Test
  public void test17()  throws Throwable  {
      GeneralRegression.LinkFunction generalRegression_LinkFunction0 = GeneralRegression.LinkFunction.LOGIT;
      double double0 = generalRegression_LinkFunction0.eval(1640.712567260209, 1640.712567260209, 1640.712567260209, 1640.712567260209, 1640.712567260209);
      assertEquals(1640.712567260209, double0, 0.01D);
  }

  @Test
  public void test18()  throws Throwable  {
      GeneralRegression.LinkFunction generalRegression_LinkFunction0 = GeneralRegression.LinkFunction.LOGLOG;
      double double0 = generalRegression_LinkFunction0.eval((double) 1537707164, (double) 1537707164, (double) 1537707164, (double) 1537707164, (double) 1537707164);
      assertEquals(1.537707164E9, double0, 0.01D);
  }

  @Test
  public void test19()  throws Throwable  {
      GeneralRegression.LinkFunction generalRegression_LinkFunction0 = GeneralRegression.LinkFunction.NEGBIN;
      double double0 = generalRegression_LinkFunction0.eval(0.0, 0.0, 0.0, 0.0, 0.0);
      assertEquals(Double.NaN, double0, 0.01D);
  }

  @Test
  public void test20()  throws Throwable  {
      GeneralRegression.PCell generalRegression_PCell0 = new GeneralRegression.PCell();
      assertNotNull(generalRegression_PCell0);
  }

  @Test
  public void test21()  throws Throwable  {
      GeneralRegression.LinkFunction generalRegression_LinkFunction0 = GeneralRegression.LinkFunction.NONE;
      double double0 = generalRegression_LinkFunction0.eval(0.0, 0.0, 0.0, (-1424.368072172764), (-1424.368072172764));
      assertEquals(Double.NaN, double0, 0.01D);
  }

  @Test
  public void test22()  throws Throwable  {
      GeneralRegression.LinkFunction generalRegression_LinkFunction0 = GeneralRegression.LinkFunction.CLOGLOG;
      double double0 = generalRegression_LinkFunction0.eval((-1574.8334365859946), (-1574.8334365859946), (-1574.8334365859946), (-1574.8334365859946), (-1574.8334365859946));
      assertEquals(-0.0, double0, 0.01D);
  }

  @Test
  public void test23()  throws Throwable  {
      GeneralRegression.LinkFunction generalRegression_LinkFunction0 = GeneralRegression.LinkFunction.ODDSPOWER;
      double double0 = generalRegression_LinkFunction0.eval(1729.0846567946237, 1729.0846567946237, 1729.0846567946237, 1729.0846567946237, (-991.1474511222211));
      assertEquals(Double.NaN, double0, 0.01D);
  }

  @Test
  public void test24()  throws Throwable  {
      GeneralRegression.LinkFunction generalRegression_LinkFunction0 = GeneralRegression.LinkFunction.ODDSPOWER;
      double double0 = generalRegression_LinkFunction0.eval(0.0, 0.0, 0.0, 0.0, 0.0);
      assertEquals(0.0, double0, 0.01D);
  }

  @Test
  public void test25()  throws Throwable  {
      GeneralRegression.LinkFunction generalRegression_LinkFunction0 = GeneralRegression.LinkFunction.POWER;
      double double0 = generalRegression_LinkFunction0.eval((-1574.8334365859946), (-1574.8334365859946), (-1574.8334365859946), (-1574.8334365859946), (-1574.8334365859946));
      assertEquals(Double.NaN, double0, 0.01D);
  }

  @Test
  public void test26()  throws Throwable  {
      GeneralRegression.LinkFunction generalRegression_LinkFunction0 = GeneralRegression.LinkFunction.POWER;
      double double0 = generalRegression_LinkFunction0.eval(-0.0, -0.0, -0.0, -0.0, -0.0);
      assertEquals(-0.0, double0, 0.01D);
  }

  @Test
  public void test27()  throws Throwable  {
      GeneralRegression.LinkFunction generalRegression_LinkFunction0 = GeneralRegression.LinkFunction.POWER;
      double double0 = generalRegression_LinkFunction0.eval(1096.5451692710787, 1096.5451692710787, 1096.5451692710787, 1096.5451692710787, 1096.5451692710787);
      assertEquals(1104.2652856806033, double0, 0.01D);
  }
}
