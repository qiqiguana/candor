/*
 * This file was automatically generated by EvoSuite
 */

package weka.experiment;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.beans.IntrospectionException;
import java.beans.PropertyDescriptor;
import java.lang.reflect.Method;
import org.junit.BeforeClass;
import weka.experiment.PropertyNode;

@RunWith(EvoSuiteRunner.class)
public class PropertyNodeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PropertyNode propertyNode0 = new PropertyNode((Object) "R;");
      String string0 = propertyNode0.getRevision();
      assertNotNull(string0);
      assertEquals("8034", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      PropertyDescriptor propertyDescriptor0 = new PropertyDescriptor("R;", (Method) null, (Method) null);
      PropertyNode propertyNode0 = new PropertyNode((Object) null, propertyDescriptor0, (Class) null);
      String string0 = propertyNode0.toString();
      assertEquals("R;", string0);
      assertNotNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      PropertyNode propertyNode0 = new PropertyNode((Object) "R;");
      String string0 = propertyNode0.toString();
      assertEquals("Available properties", string0);
      assertNotNull(string0);
  }
}
