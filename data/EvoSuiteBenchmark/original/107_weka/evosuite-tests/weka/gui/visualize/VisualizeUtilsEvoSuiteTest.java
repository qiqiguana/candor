/*
 * This file was automatically generated by EvoSuite
 */

package weka.gui.visualize;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Color;
import org.junit.BeforeClass;
import weka.gui.visualize.VisualizeUtils;

@RunWith(EvoSuiteRunner.class)
public class VisualizeUtilsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      VisualizeUtils visualizeUtils0 = new VisualizeUtils();
      assertNotNull(visualizeUtils0);
  }

  @Test
  public void test1()  throws Throwable  {
      Color color0 = Color.BLACK;
      Color color1 = VisualizeUtils.processColour("white", color0);
      assertEquals(255, color1.getRed());
  }

  @Test
  public void test2()  throws Throwable  {
      Color color0 = Color.BLACK;
      Color color1 = VisualizeUtils.processColour("/,>f", color0);
      assertEquals("java.awt.Color[r=0,g=0,b=0]", color1.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      Color color0 = Color.orange;
      Color color1 = VisualizeUtils.processColour("black", color0);
      assertEquals(0, color1.getGreen());
  }

  @Test
  public void test4()  throws Throwable  {
      Color color0 = Color.ORANGE;
      Color color1 = VisualizeUtils.processColour("blue", color0);
      assertEquals(0, color1.getGreen());
  }

  @Test
  public void test5()  throws Throwable  {
      Color color0 = Color.MAGENTA;
      Color color1 = VisualizeUtils.processColour("cyan", color0);
      assertEquals(0, color1.getRed());
  }

  @Test
  public void test6()  throws Throwable  {
      Color color0 = Color.orange;
      Color color1 = VisualizeUtils.processColour("darkGray", color0);
      assertEquals(64, color1.getRed());
  }

  @Test
  public void test7()  throws Throwable  {
      Color color0 = VisualizeUtils.processColour("magenta", (Color) null);
      Color color1 = VisualizeUtils.processColour("gray", color0);
      assertEquals(-8355712, color1.getRGB());
  }

  @Test
  public void test8()  throws Throwable  {
      Color color0 = Color.CYAN;
      Color color1 = VisualizeUtils.processColour("green", color0);
      assertEquals("java.awt.Color[r=0,g=255,b=0]", color1.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      Color color0 = Color.MAGENTA;
      Color color1 = VisualizeUtils.processColour("lightGray", color0);
      assertEquals(-4144960, color1.getRGB());
  }

  @Test
  public void test10()  throws Throwable  {
      Color color0 = Color.GREEN;
      Color color1 = VisualizeUtils.processColour("orange", color0);
      assertEquals("java.awt.Color[r=255,g=200,b=0]", color1.toString());
  }

  @Test
  public void test11()  throws Throwable  {
      Color color0 = Color.magenta;
      Color color1 = VisualizeUtils.processColour("pink", color0);
      assertEquals(175, color1.getBlue());
  }

  @Test
  public void test12()  throws Throwable  {
      Color color0 = Color.BLUE;
      Color color1 = VisualizeUtils.processColour("s?", color0);
      assertEquals(0, color1.getRed());
  }

  @Test
  public void test13()  throws Throwable  {
      Color color0 = Color.MAGENTA;
      Color color1 = VisualizeUtils.processColour("yellow", color0);
      assertEquals(-256, color1.getRGB());
  }
}
