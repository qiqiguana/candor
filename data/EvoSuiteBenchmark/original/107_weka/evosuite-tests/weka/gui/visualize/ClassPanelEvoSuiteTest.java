/*
 * This file was automatically generated by EvoSuite
 */

package weka.gui.visualize;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.event.ActionListener;
import javax.swing.Icon;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JInternalFrame;
import org.junit.BeforeClass;
import weka.core.Instances;
import weka.gui.visualize.ClassPanel;

@RunWith(EvoSuiteRunner.class)
public class ClassPanelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ClassPanel classPanel0 = new ClassPanel((Color) null);
      JInternalFrame jInternalFrame0 = new JInternalFrame("*8.91i*9C2}", false, false, false);
      Icon icon0 = jInternalFrame0.getFrameIcon();
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("*8.91i*9C2}", icon0, false);
      classPanel0.addRepaintNotify((Component) jCheckBoxMenuItem0);
      assertEquals(true, jCheckBoxMenuItem0.isOptimizedDrawingEnabled());
  }

  @Test
  public void test1()  throws Throwable  {
      ClassPanel classPanel0 = new ClassPanel();
      classPanel0.setInstances((Instances) null);
      assertEquals(false, classPanel0.isPreferredSizeSet());
  }

  @Test
  public void test2()  throws Throwable  {
      ClassPanel classPanel0 = new ClassPanel((Color) null);
      Color[] colorArray0 = new Color[1];
      classPanel0.setDefaultColourList(colorArray0);
      assertEquals(false, classPanel0.isPreferredSizeSet());
  }

  @Test
  public void test3()  throws Throwable  {
      ClassPanel classPanel0 = new ClassPanel();
      classPanel0.setNominal();
      assertEquals(false, classPanel0.requestDefaultFocus());
  }

  @Test
  public void test4()  throws Throwable  {
      ClassPanel classPanel0 = new ClassPanel();
      classPanel0.addActionListener((ActionListener) null);
      assertEquals(0, classPanel0.getComponentCount());
  }

  @Test
  public void test5()  throws Throwable  {
      ClassPanel classPanel0 = new ClassPanel((Color) null);
      // Undeclared exception!
      try {
        classPanel0.paintNominal((Graphics) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
