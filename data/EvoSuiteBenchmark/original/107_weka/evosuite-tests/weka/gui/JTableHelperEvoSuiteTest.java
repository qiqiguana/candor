/*
 * This file was automatically generated by EvoSuite
 */

package weka.gui;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import org.junit.BeforeClass;
import weka.gui.JTableHelper;

@RunWith(EvoSuiteRunner.class)
public class JTableHelperEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JTable jTable0 = new JTable();
      JTableHelper jTableHelper0 = new JTableHelper(jTable0);
      jTableHelper0.setOptimalHeaderWidth((-893));
  }

  @Test
  public void test1()  throws Throwable  {
      JTable jTable0 = new JTable();
      JTableHelper jTableHelper0 = new JTableHelper(jTable0);
      jTableHelper0.setOptimalColumnWidth((-575));
  }

  @Test
  public void test2()  throws Throwable  {
      JTable jTable0 = new JTable();
      JTableHelper jTableHelper0 = new JTableHelper(jTable0);
      jTableHelper0.scrollToVisible((-1111), (-1111));
  }

  @Test
  public void test3()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(1495, 142);
      JTable jTable0 = new JTable((TableModel) defaultTableModel0);
      JTableHelper jTableHelper0 = new JTableHelper(jTable0);
      jTableHelper0.setOptimalColumnWidth();
  }

  @Test
  public void test4()  throws Throwable  {
      JTable jTable0 = new JTable();
      JTableHelper jTableHelper0 = new JTableHelper(jTable0);
      int int0 = jTableHelper0.calcHeaderWidth((-1111));
      assertEquals((-1), int0);
  }

  @Test
  public void test5()  throws Throwable  {
      JTable jTable0 = new JTable();
      JTableHelper jTableHelper0 = new JTableHelper(jTable0);
      int int0 = jTableHelper0.calcColumnWidth(1);
      assertEquals((-1), int0);
  }

  @Test
  public void test6()  throws Throwable  {
      JTableHelper jTableHelper0 = new JTableHelper((JTable) null);
      int int0 = jTableHelper0.calcHeaderWidth((-1111));
      assertEquals((-1), int0);
  }

  @Test
  public void test7()  throws Throwable  {
      JTable jTable0 = new JTable();
      JTableHelper jTableHelper0 = new JTableHelper(jTable0);
      TableColumn tableColumn0 = new TableColumn((-893));
      DefaultTableCellRenderer defaultTableCellRenderer0 = new DefaultTableCellRenderer();
      tableColumn0.setHeaderRenderer((TableCellRenderer) defaultTableCellRenderer0);
      jTable0.addColumn(tableColumn0);
      jTableHelper0.setOptimalHeaderWidth();
  }

  @Test
  public void test8()  throws Throwable  {
      JTable jTable0 = new JTable();
      JTableHelper jTableHelper0 = new JTableHelper(jTable0);
      jTableHelper0.setOptimalColumnWidth(10);
  }

  @Test
  public void test9()  throws Throwable  {
      JTable jTable0 = new JTable();
      JTableHelper jTableHelper0 = new JTableHelper(jTable0);
      jTableHelper0.setOptimalHeaderWidth(10);
  }
}
