/*
 * This file was automatically generated by EvoSuite
 */

package weka.gui.graphvisualizer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import weka.gui.graphvisualizer.GraphNode;

@RunWith(EvoSuiteRunner.class)
public class GraphNodeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      GraphNode graphNode0 = new GraphNode("", "");
      boolean boolean0 = graphNode0.equals((Object) "");
      assertEquals(3, graphNode0.nodeType);
      assertEquals(false, boolean0);
      assertEquals(0, graphNode0.x);
      assertEquals(0, graphNode0.y);
  }

  @Test
  public void test1()  throws Throwable  {
      GraphNode graphNode0 = new GraphNode("iK#>.~26", "iK#>.~26", 0);
      boolean boolean0 = graphNode0.equals((Object) graphNode0);
      assertEquals(0, graphNode0.nodeType);
      assertEquals(0, graphNode0.y);
      assertEquals(0, graphNode0.x);
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      GraphNode graphNode0 = new GraphNode("on~k;_", "on~k;_", 0);
      GraphNode graphNode1 = new GraphNode("", "on~k;_", (-1995));
      boolean boolean0 = graphNode0.equals((Object) graphNode1);
      assertEquals((-1995), graphNode1.nodeType);
      assertEquals(0, graphNode0.y);
      assertEquals(0, graphNode0.x);
      assertFalse(graphNode1.equals(graphNode0));
      assertEquals(false, boolean0);
  }
}
