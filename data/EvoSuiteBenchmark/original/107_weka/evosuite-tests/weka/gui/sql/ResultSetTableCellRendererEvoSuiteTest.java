/*
 * This file was automatically generated by EvoSuite
 */

package weka.gui.sql;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.ResultSet;
import javax.swing.JTable;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import org.junit.BeforeClass;
import weka.gui.sql.ResultSetTableCellRenderer;
import weka.gui.sql.ResultSetTableModel;

@RunWith(EvoSuiteRunner.class)
public class ResultSetTableCellRendererEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ResultSetTableCellRenderer resultSetTableCellRenderer0 = new ResultSetTableCellRenderer();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      JTableHeader jTableHeader0 = new JTableHeader();
      DefaultTableColumnModel defaultTableColumnModel0 = (DefaultTableColumnModel)jTableHeader0.getColumnModel();
      JTable jTable0 = new JTable((TableModel) defaultTableModel0, (TableColumnModel) defaultTableColumnModel0);
      ResultSetTableCellRenderer resultSetTableCellRenderer1 = (ResultSetTableCellRenderer)resultSetTableCellRenderer0.getTableCellRendererComponent(jTable0, (Object) "select-all", false, false, (-1150), (-1150));
      assertEquals(true, resultSetTableCellRenderer1.isFocusable());
  }

  @Test
  public void test1()  throws Throwable  {
      ResultSetTableCellRenderer resultSetTableCellRenderer0 = new ResultSetTableCellRenderer();
      ResultSetTableModel resultSetTableModel0 = new ResultSetTableModel((ResultSet) null, 0);
      JTable jTable0 = new JTable((TableModel) resultSetTableModel0);
      resultSetTableCellRenderer0.getTableCellRendererComponent(jTable0, (Object) "anchorSelectionPath", false, false, 0, 0);
      assertEquals(4, resultSetTableCellRenderer0.getHorizontalAlignment());
  }

  @Test
  public void test2()  throws Throwable  {
      ResultSetTableCellRenderer resultSetTableCellRenderer0 = new ResultSetTableCellRenderer();
      ResultSetTableModel resultSetTableModel0 = new ResultSetTableModel((ResultSet) null, 85);
      JTable jTable0 = new JTable((TableModel) resultSetTableModel0);
      resultSetTableCellRenderer0.getTableCellRendererComponent(jTable0, (Object) "anchorSelectionPath", true, true, (-2039), (-2039));
      assertEquals(0, resultSetTableCellRenderer0.getHorizontalAlignment());
  }

  @Test
  public void test3()  throws Throwable  {
      ResultSetTableCellRenderer resultSetTableCellRenderer0 = new ResultSetTableCellRenderer();
      ResultSetTableModel resultSetTableModel0 = new ResultSetTableModel((ResultSet) null, 80);
      JTable jTable0 = new JTable((TableModel) resultSetTableModel0);
      ResultSetTableCellRenderer resultSetTableCellRenderer1 = (ResultSetTableCellRenderer)resultSetTableCellRenderer0.getTableCellRendererComponent(jTable0, (Object) "anchorSelectionPath", true, true, 80, 80);
      assertEquals(2, resultSetTableCellRenderer0.getHorizontalAlignment());
      assertEquals(2, resultSetTableCellRenderer1.getHorizontalAlignment());
  }
}
