/*
 * This file was automatically generated by EvoSuite
 */

package weka.gui.sql;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import javax.swing.JFrame;
import javax.swing.event.ChangeEvent;
import org.junit.BeforeClass;
import weka.gui.sql.QueryPanel;
import weka.gui.sql.ResultPanel;
import weka.gui.sql.event.ResultChangedListener;

@RunWith(EvoSuiteRunner.class)
public class ResultPanelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ResultPanel resultPanel0 = new ResultPanel((JFrame) null);
      assertNotNull(resultPanel0);
      
      resultPanel0.setFocus();
      assertEquals("Query2", resultPanel0.getNextTabName());
  }

  @Test
  public void test1()  throws Throwable  {
      ResultPanel resultPanel0 = new ResultPanel((JFrame) null);
      assertNotNull(resultPanel0);
      
      String string0 = resultPanel0.getNextTabName();
      assertNotNull(string0);
      assertEquals("Query3", resultPanel0.getNextTabName());
      assertEquals("Query2", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      ResultPanel resultPanel0 = new ResultPanel((JFrame) null);
      assertNotNull(resultPanel0);
      
      resultPanel0.addResultChangedListener((ResultChangedListener) null);
      // Undeclared exception!
      try {
        resultPanel0.notifyListeners("[^RR#KAr7Y \"h", "[^RR#KAr7Y \"h", "[^RR#KAr7Y \"h", "[^RR#KAr7Y \"h");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ResultPanel resultPanel0 = new ResultPanel((JFrame) null);
      assertNotNull(resultPanel0);
      
      resultPanel0.getQueryPanel();
      assertEquals(2, resultPanel0.getComponentCount());
      assertEquals("weka.gui.sql.ResultPanel[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=java.awt.Dimension[width=0,height=200]]", resultPanel0.toString());
      assertEquals(2, resultPanel0.countComponents());
  }

  @Test
  public void test4()  throws Throwable  {
      ResultPanel resultPanel0 = new ResultPanel((JFrame) null);
      assertNotNull(resultPanel0);
      
      resultPanel0.setQueryPanel((QueryPanel) null);
      assertEquals("Query2", resultPanel0.getNextTabName());
      assertEquals("weka.gui.sql.ResultPanel[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=java.awt.Dimension[width=0,height=200]]", resultPanel0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      ResultPanel resultPanel0 = new ResultPanel((JFrame) null);
      assertNotNull(resultPanel0);
      
      resultPanel0.clear();
      assertEquals("Query2", resultPanel0.getNextTabName());
      assertEquals("weka.gui.sql.ResultPanel[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=java.awt.Dimension[width=0,height=200]]", resultPanel0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      ResultPanel resultPanel0 = new ResultPanel((JFrame) null);
      assertNotNull(resultPanel0);
      
      resultPanel0.removeResultChangedListener((ResultChangedListener) null);
      assertEquals("Query2", resultPanel0.getNextTabName());
      assertEquals("weka.gui.sql.ResultPanel[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=java.awt.Dimension[width=0,height=200]]", resultPanel0.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      ResultPanel resultPanel0 = new ResultPanel((JFrame) null);
      assertNotNull(resultPanel0);
      
      resultPanel0.stateChanged((ChangeEvent) null);
      assertEquals("Query2", resultPanel0.getNextTabName());
      assertEquals("weka.gui.sql.ResultPanel[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=java.awt.Dimension[width=0,height=200]]", resultPanel0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      ResultPanel resultPanel0 = new ResultPanel((JFrame) null);
      assertNotNull(resultPanel0);
      
      resultPanel0.close();
      assertEquals("Query2", resultPanel0.getNextTabName());
      assertEquals(true, resultPanel0.isPreferredSizeSet());
  }

  @Test
  public void test9()  throws Throwable  {
      ResultPanel resultPanel0 = new ResultPanel((JFrame) null);
      assertNotNull(resultPanel0);
      
      resultPanel0.copyQuery();
      assertEquals("weka.gui.sql.ResultPanel[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=java.awt.Dimension[width=0,height=200]]", resultPanel0.toString());
      assertEquals(2, resultPanel0.countComponents());
  }

  @Test
  public void test10()  throws Throwable  {
      ResultPanel resultPanel0 = new ResultPanel((JFrame) null);
      assertNotNull(resultPanel0);
      
      resultPanel0.calcOptimalWidth();
      assertEquals("Query2", resultPanel0.getNextTabName());
      assertEquals("weka.gui.sql.ResultPanel[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=java.awt.Dimension[width=0,height=200]]", resultPanel0.toString());
  }

  @Test
  public void test11()  throws Throwable  {
      ResultPanel resultPanel0 = new ResultPanel((JFrame) null);
      assertNotNull(resultPanel0);
      
      resultPanel0.notifyListeners("HdDL:'`Uq|prT 4", "HdDL:'`Uq|prT 4", "HdDL:'`Uq|prT 4", "HdDL:'`Uq|prT 4");
      assertEquals("Query2", resultPanel0.getNextTabName());
      assertEquals(2, resultPanel0.getComponentCount());
  }
}
