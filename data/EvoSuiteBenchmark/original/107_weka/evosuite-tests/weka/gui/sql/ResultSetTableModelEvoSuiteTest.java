/*
 * This file was automatically generated by EvoSuite
 */

package weka.gui.sql;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.ResultSet;
import javax.swing.JTable;
import javax.swing.event.TableModelListener;
import org.junit.BeforeClass;
import weka.gui.sql.ResultSetTableModel;

@RunWith(EvoSuiteRunner.class)
public class ResultSetTableModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ResultSetTableModel resultSetTableModel0 = new ResultSetTableModel((ResultSet) null);
      resultSetTableModel0.setValueAt((Object) null, (-17), (-17));
      assertEquals(0, resultSetTableModel0.getRowCount());
  }

  @Test
  public void test1()  throws Throwable  {
      ResultSetTableModel resultSetTableModel0 = new ResultSetTableModel((ResultSet) null);
      assertNotNull(resultSetTableModel0);
      
      boolean boolean0 = resultSetTableModel0.isNullAt(0, 0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      ResultSetTableModel resultSetTableModel0 = new ResultSetTableModel((ResultSet) null, 1292);
      JTable jTable0 = new JTable();
      resultSetTableModel0.removeTableModelListener((TableModelListener) jTable0);
      assertEquals(0, resultSetTableModel0.getRowCount());
  }

  @Test
  public void test3()  throws Throwable  {
      ResultSetTableModel resultSetTableModel0 = new ResultSetTableModel((ResultSet) null);
      assertNotNull(resultSetTableModel0);
      
      boolean boolean0 = resultSetTableModel0.isCellEditable(0, 0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      ResultSetTableModel resultSetTableModel0 = new ResultSetTableModel((ResultSet) null);
      resultSetTableModel0.finalize();
      assertEquals(1, resultSetTableModel0.getColumnCount());
  }

  @Test
  public void test5()  throws Throwable  {
      ResultSetTableModel resultSetTableModel0 = new ResultSetTableModel((ResultSet) null, 1292);
      JTable jTable0 = new JTable();
      resultSetTableModel0.addTableModelListener((TableModelListener) jTable0);
      assertEquals(false, jTable0.isLightweight());
  }

  @Test
  public void test6()  throws Throwable  {
      ResultSetTableModel resultSetTableModel0 = new ResultSetTableModel((ResultSet) null);
      Class<Object> class0 = resultSetTableModel0.getColumnClass(0);
      assertNull(class0);
  }

  @Test
  public void test7()  throws Throwable  {
      ResultSetTableModel resultSetTableModel0 = new ResultSetTableModel((ResultSet) null);
      String string0 = resultSetTableModel0.getColumnName((-17));
      assertEquals("", string0);
  }

  @Test
  public void test8()  throws Throwable  {
      ResultSetTableModel resultSetTableModel0 = new ResultSetTableModel((ResultSet) null);
      Object object0 = resultSetTableModel0.getValueAt((-17), (-17));
      assertNull(object0);
  }

  @Test
  public void test9()  throws Throwable  {
      ResultSetTableModel resultSetTableModel0 = new ResultSetTableModel((ResultSet) null);
      assertNotNull(resultSetTableModel0);
      
      boolean boolean0 = resultSetTableModel0.isNumericAt((-17));
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      ResultSetTableModel resultSetTableModel0 = new ResultSetTableModel((ResultSet) null, 1292);
      assertNotNull(resultSetTableModel0);
      
      boolean boolean0 = resultSetTableModel0.isNumericAt(0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      ResultSetTableModel resultSetTableModel0 = new ResultSetTableModel((ResultSet) null, 1292);
      assertNotNull(resultSetTableModel0);
      
      boolean boolean0 = resultSetTableModel0.isNumericAt(1292);
      assertEquals(false, boolean0);
      assertEquals(1, resultSetTableModel0.getColumnCount());
  }
}
