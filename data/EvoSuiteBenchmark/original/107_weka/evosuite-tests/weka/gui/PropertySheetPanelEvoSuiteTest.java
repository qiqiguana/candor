/*
 * This file was automatically generated by EvoSuite
 */

package weka.gui;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.HeadlessException;
import java.beans.PropertyChangeEvent;
import javax.swing.JList;
import javax.swing.JToolTip;
import org.junit.BeforeClass;
import weka.core.Environment;
import weka.gui.PropertySheetPanel;

@RunWith(EvoSuiteRunner.class)
public class PropertySheetPanelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PropertySheetPanel propertySheetPanel0 = new PropertySheetPanel();
      int int0 = propertySheetPanel0.editableProperties();
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      PropertySheetPanel propertySheetPanel0 = new PropertySheetPanel();
      propertySheetPanel0.setTarget((Object) propertySheetPanel0);
      propertySheetPanel0.removeNotify();
  }

  @Test
  public void test2()  throws Throwable  {
      PropertySheetPanel propertySheetPanel0 = new PropertySheetPanel();
      propertySheetPanel0.getAboutPanel();
      assertEquals(0, propertySheetPanel0.editableProperties());
  }

  @Test
  public void test3()  throws Throwable  {
      PropertySheetPanel propertySheetPanel0 = new PropertySheetPanel();
      Environment environment0 = new Environment();
      propertySheetPanel0.setEnvironment(environment0);
      assertEquals(0, propertySheetPanel0.editableProperties());
  }

  @Test
  public void test4()  throws Throwable  {
      PropertySheetPanel propertySheetPanel0 = new PropertySheetPanel();
      propertySheetPanel0.setTarget((Object) propertySheetPanel0);
      propertySheetPanel0.addNotify();
      assertEquals(12, propertySheetPanel0.editableProperties());
      assertEquals(1, propertySheetPanel0.getComponentCount());
  }

  @Test
  public void test5()  throws Throwable  {
      PropertySheetPanel propertySheetPanel0 = new PropertySheetPanel();
      Object[] objectArray0 = new Object[8];
      JList jList0 = new JList(objectArray0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent((Object) jList0, "splitTipText", (Object) null, (Object) null);
      // Undeclared exception!
      try {
        propertySheetPanel0.propertyChange(propertyChangeEvent0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      PropertySheetPanel propertySheetPanel0 = new PropertySheetPanel();
      JList jList0 = new JList();
      JToolTip jToolTip0 = jList0.createToolTip();
      propertySheetPanel0.setTarget((Object) jToolTip0);
      assertEquals(1, propertySheetPanel0.countComponents());
      assertEquals(12, propertySheetPanel0.editableProperties());
  }

  @Test
  public void test7()  throws Throwable  {
      PropertySheetPanel propertySheetPanel0 = new PropertySheetPanel();
      propertySheetPanel0.setTarget((Object) ".json.gz");
      assertEquals(1, propertySheetPanel0.getComponentCount());
      assertEquals(0, propertySheetPanel0.editableProperties());
  }

  @Test
  public void test8()  throws Throwable  {
      PropertySheetPanel propertySheetPanel0 = new PropertySheetPanel();
      // Undeclared exception!
      try {
        propertySheetPanel0.openCapabilitiesHelpDialog();
        fail("Expecting exception: HeadlessException");
      } catch(HeadlessException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      PropertySheetPanel propertySheetPanel0 = new PropertySheetPanel();
      propertySheetPanel0.closingOK();
      assertEquals(0, propertySheetPanel0.editableProperties());
  }

  @Test
  public void test10()  throws Throwable  {
      PropertySheetPanel propertySheetPanel0 = new PropertySheetPanel();
      propertySheetPanel0.closingCancel();
      assertEquals(0, propertySheetPanel0.editableProperties());
  }
}
