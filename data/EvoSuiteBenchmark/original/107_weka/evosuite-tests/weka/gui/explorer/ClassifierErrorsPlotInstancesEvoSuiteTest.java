/*
 * This file was automatically generated by EvoSuite
 */

package weka.gui.explorer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.ArrayList;
import org.junit.BeforeClass;
import weka.classifiers.Classifier;
import weka.classifiers.Evaluation;
import weka.classifiers.functions.SGDText;
import weka.classifiers.meta.AdditiveRegression;
import weka.core.Attribute;
import weka.core.BinarySparseInstance;
import weka.core.Instance;
import weka.core.Instances;
import weka.gui.explorer.ClassifierErrorsPlotInstances;

@RunWith(EvoSuiteRunner.class)
public class ClassifierErrorsPlotInstancesEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      int int0 = classifierErrorsPlotInstances0.getClassIndex();
      assertEquals(true, classifierErrorsPlotInstances0.getSaveForVisualization());
      assertEquals((-1), int0);
  }

  @Test
  public void test1()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      classifierErrorsPlotInstances0.getClassifier();
      assertEquals(-1, classifierErrorsPlotInstances0.getClassIndex());
      assertEquals(true, classifierErrorsPlotInstances0.getSaveForVisualization());
  }

  @Test
  public void test2()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      classifierErrorsPlotInstances0.setClassIndex((-1278));
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      SGDText sGDText0 = new SGDText();
      classifierErrorsPlotInstances0.setClassifier((Classifier) sGDText0);
      Instances instances0 = new Instances(",C_xhU", arrayList0, 0);
      classifierErrorsPlotInstances0.setInstances(instances0);
      // Undeclared exception!
      try {
        classifierErrorsPlotInstances0.setUp();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * No evaluation set
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      classifierErrorsPlotInstances0.setEvaluation((Evaluation) null);
      assertEquals(true, classifierErrorsPlotInstances0.getSaveForVisualization());
      assertEquals(-1, classifierErrorsPlotInstances0.getClassIndex());
  }

  @Test
  public void test4()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      assertEquals(true, classifierErrorsPlotInstances0.getSaveForVisualization());
      
      classifierErrorsPlotInstances0.setSaveForVisualization(false);
      classifierErrorsPlotInstances0.determineFormat();
      assertEquals(false, classifierErrorsPlotInstances0.getSaveForVisualization());
      assertEquals(-1, classifierErrorsPlotInstances0.getClassIndex());
  }

  @Test
  public void test5()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      classifierErrorsPlotInstances0.getEvaluation();
      assertEquals(true, classifierErrorsPlotInstances0.getSaveForVisualization());
      assertEquals(-1, classifierErrorsPlotInstances0.getClassIndex());
  }

  @Test
  public void test6()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      boolean boolean0 = classifierErrorsPlotInstances0.getSaveForVisualization();
      assertEquals(-1, classifierErrorsPlotInstances0.getClassIndex());
      assertEquals(true, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      classifierErrorsPlotInstances0.cleanUp();
      assertEquals(-1, classifierErrorsPlotInstances0.getClassIndex());
      assertEquals(true, classifierErrorsPlotInstances0.getSaveForVisualization());
  }

  @Test
  public void test8()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      AdditiveRegression additiveRegression0 = new AdditiveRegression();
      classifierErrorsPlotInstances0.setClassifier((Classifier) additiveRegression0);
      Instances instances0 = new Instances("cDc{X]Co>", arrayList0, 0);
      classifierErrorsPlotInstances0.setInstances(instances0);
      // Undeclared exception!
      try {
        classifierErrorsPlotInstances0.setUp();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * No class index set!
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      // Undeclared exception!
      try {
        classifierErrorsPlotInstances0.determineFormat();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("z~", arrayList0, 1687);
      double[][] doubleArray0 = new double[4][2];
      classifierErrorsPlotInstances0.process(instances0, doubleArray0, (Evaluation) null);
      assertEquals(-1, classifierErrorsPlotInstances0.getClassIndex());
      assertEquals(true, classifierErrorsPlotInstances0.getSaveForVisualization());
  }

  @Test
  public void test11()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("", arrayList0, 124);
      double[][] doubleArray0 = new double[1][2];
      int[] intArray0 = new int[14];
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((double) 124, intArray0, 0);
      instances0.add((Instance) binarySparseInstance0);
      classifierErrorsPlotInstances0.process(instances0, doubleArray0, (Evaluation) null);
      assertEquals(-1, classifierErrorsPlotInstances0.getClassIndex());
      assertEquals(true, classifierErrorsPlotInstances0.getSaveForVisualization());
  }

  @Test
  public void test12()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      classifierErrorsPlotInstances0.scaleNumericPredictions();
      assertEquals(true, classifierErrorsPlotInstances0.getSaveForVisualization());
      assertEquals(-1, classifierErrorsPlotInstances0.getClassIndex());
  }

  @Test
  public void test13()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      // Undeclared exception!
      try {
        classifierErrorsPlotInstances0.finishUp();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      assertEquals(true, classifierErrorsPlotInstances0.getSaveForVisualization());
      
      classifierErrorsPlotInstances0.setSaveForVisualization(false);
      classifierErrorsPlotInstances0.getPlotInstances();
      assertEquals(false, classifierErrorsPlotInstances0.getSaveForVisualization());
      assertEquals(-1, classifierErrorsPlotInstances0.getClassIndex());
  }

  @Test
  public void test15()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      try {
        classifierErrorsPlotInstances0.createPlotData("~9ss8aM=");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      assertEquals(true, classifierErrorsPlotInstances0.getSaveForVisualization());
      
      classifierErrorsPlotInstances0.setSaveForVisualization(false);
      classifierErrorsPlotInstances0.createPlotData("/k~`HvAhn\"%DesY&@\"");
      assertEquals(false, classifierErrorsPlotInstances0.getSaveForVisualization());
      assertEquals(-1, classifierErrorsPlotInstances0.getClassIndex());
  }
}
