/*
 * This file was automatically generated by EvoSuite
 */

package weka.gui.explorer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.ArrayList;
import java.util.Enumeration;
import org.junit.BeforeClass;
import weka.core.Attribute;
import weka.core.Instances;
import weka.gui.explorer.ClassifierErrorsPlotInstances;
import weka.gui.explorer.ClustererAssignmentsPlotInstances;

@RunWith(EvoSuiteRunner.class)
public class AbstractPlotInstancesEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ClustererAssignmentsPlotInstances clustererAssignmentsPlotInstances0 = new ClustererAssignmentsPlotInstances();
      // Undeclared exception!
      try {
        clustererAssignmentsPlotInstances0.setUp();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * No instances set!
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      classifierErrorsPlotInstances0.cleanUp();
      assertEquals(-1, classifierErrorsPlotInstances0.getClassIndex());
      assertEquals(true, classifierErrorsPlotInstances0.getSaveForVisualization());
  }

  @Test
  public void test2()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      classifierErrorsPlotInstances0.getOptions();
      assertEquals(true, classifierErrorsPlotInstances0.getSaveForVisualization());
      assertEquals(-1, classifierErrorsPlotInstances0.getClassIndex());
  }

  @Test
  public void test3()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      Enumeration<Object> enumeration0 = classifierErrorsPlotInstances0.listOptions();
      assertNotNull(enumeration0);
      assertEquals(-1, classifierErrorsPlotInstances0.getClassIndex());
      assertEquals(true, classifierErrorsPlotInstances0.getSaveForVisualization());
  }

  @Test
  public void test4()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      classifierErrorsPlotInstances0.getInstances();
      assertEquals(true, classifierErrorsPlotInstances0.getSaveForVisualization());
      assertEquals(-1, classifierErrorsPlotInstances0.getClassIndex());
  }

  @Test
  public void test5()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      try {
        classifierErrorsPlotInstances0.getPlotData("NETi%S");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      String[] stringArray0 = new String[8];
      classifierErrorsPlotInstances0.setOptions(stringArray0);
      assertEquals(-1, classifierErrorsPlotInstances0.getClassIndex());
      assertEquals(true, classifierErrorsPlotInstances0.getSaveForVisualization());
  }

  @Test
  public void test7()  throws Throwable  {
      ClustererAssignmentsPlotInstances clustererAssignmentsPlotInstances0 = new ClustererAssignmentsPlotInstances();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances(",\"aR", arrayList0, 472);
      clustererAssignmentsPlotInstances0.setInstances(instances0);
      // Undeclared exception!
      try {
        clustererAssignmentsPlotInstances0.setUp();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * No clusterer set!
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      assertEquals(true, classifierErrorsPlotInstances0.getSaveForVisualization());
      
      classifierErrorsPlotInstances0.setSaveForVisualization(false);
      classifierErrorsPlotInstances0.getPlotInstances();
      classifierErrorsPlotInstances0.getPlotInstances();
      assertEquals(-1, classifierErrorsPlotInstances0.getClassIndex());
  }

  @Test
  public void test9()  throws Throwable  {
      ClassifierErrorsPlotInstances classifierErrorsPlotInstances0 = new ClassifierErrorsPlotInstances();
      assertEquals(true, classifierErrorsPlotInstances0.getSaveForVisualization());
      
      classifierErrorsPlotInstances0.setSaveForVisualization(false);
      classifierErrorsPlotInstances0.getPlotInstances();
      classifierErrorsPlotInstances0.getPlotData("$1/E6NuPCaAu0Wr");
      assertEquals(-1, classifierErrorsPlotInstances0.getClassIndex());
  }
}
