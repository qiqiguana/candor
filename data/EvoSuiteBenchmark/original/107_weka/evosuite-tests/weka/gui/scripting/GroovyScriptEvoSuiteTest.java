/*
 * This file was automatically generated by EvoSuite
 */

package weka.gui.scripting;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.File;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Document;
import javax.swing.text.StyleContext;
import org.junit.BeforeClass;
import weka.gui.ExtensionFileFilter;
import weka.gui.scripting.GroovyScript;
import weka.gui.scripting.JythonScript;
import weka.gui.scripting.Script;

@RunWith(EvoSuiteRunner.class)
public class GroovyScriptEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      JythonScript jythonScript0 = new JythonScript((Document) defaultStyledDocument0);
      String[] stringArray0 = new String[1];
      GroovyScript.GroovyThread groovyScript_GroovyThread0 = new GroovyScript.GroovyThread((Script) jythonScript0, stringArray0);
      groovyScript_GroovyThread0.run();
      assertEquals("Thread[Thread-9130,5,Test Execution]", groovyScript_GroovyThread0.toString());
      assertEquals("Thread-9130", groovyScript_GroovyThread0.getName());
  }

  @Test
  public void test1()  throws Throwable  {
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      GroovyScript groovyScript0 = new GroovyScript((Document) defaultStyledDocument0);
      assertEquals(false, groovyScript0.save());
  }

  @Test
  public void test2()  throws Throwable  {
      GroovyScript groovyScript0 = new GroovyScript((Document) null, (File) null);
      assertEquals(false, groovyScript0.save());
  }

  @Test
  public void test3()  throws Throwable  {
      GroovyScript groovyScript0 = new GroovyScript();
      ExtensionFileFilter[] extensionFileFilterArray0 = groovyScript0.getFilters();
      assertNotNull(extensionFileFilterArray0);
      assertEquals(".groovy", groovyScript0.getDefaultExtension());
  }

  @Test
  public void test4()  throws Throwable  {
      GroovyScript groovyScript0 = new GroovyScript();
      String[] stringArray0 = new String[7];
      GroovyScript.GroovyThread groovyScript_GroovyThread0 = (GroovyScript.GroovyThread)groovyScript0.newThread(stringArray0);
      assertEquals(false, groovyScript_GroovyThread0.interrupted());
  }

  @Test
  public void test5()  throws Throwable  {
      GroovyScript groovyScript0 = new GroovyScript();
      boolean boolean0 = groovyScript0.canExecuteScripts();
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      GroovyScript groovyScript0 = new GroovyScript();
      File file0 = new File(")<+DD", ")<+DD");
      String[] stringArray0 = new String[10];
      groovyScript0.run(file0, stringArray0);
      assertEquals(false, file0.canRead());
  }
}
