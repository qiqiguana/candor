/*
 * This file was automatically generated by EvoSuite
 */

package weka.gui.scripting.event;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import weka.gui.scripting.GroovyScript;
import weka.gui.scripting.JythonScript;
import weka.gui.scripting.Script;
import weka.gui.scripting.event.ScriptExecutionEvent;

@RunWith(EvoSuiteRunner.class)
public class ScriptExecutionEventEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JythonScript jythonScript0 = new JythonScript();
      ScriptExecutionEvent.Type scriptExecutionEvent_Type0 = ScriptExecutionEvent.Type.STOPPED;
      ScriptExecutionEvent scriptExecutionEvent0 = new ScriptExecutionEvent((Script) jythonScript0, scriptExecutionEvent_Type0, (Object) "[]");
      ScriptExecutionEvent.Type scriptExecutionEvent_Type1 = scriptExecutionEvent0.getType();
      assertSame(scriptExecutionEvent_Type0, scriptExecutionEvent_Type1);
  }

  @Test
  public void test1()  throws Throwable  {
      JythonScript jythonScript0 = new JythonScript();
      ScriptExecutionEvent.Type scriptExecutionEvent_Type0 = ScriptExecutionEvent.Type.ERROR;
      ScriptExecutionEvent scriptExecutionEvent0 = new ScriptExecutionEvent((Script) jythonScript0, scriptExecutionEvent_Type0, (Object) "text/plain");
      JythonScript jythonScript1 = (JythonScript)scriptExecutionEvent0.getScript();
      assertEquals("", jythonScript1.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      JythonScript jythonScript0 = new JythonScript();
      ScriptExecutionEvent.Type scriptExecutionEvent_Type0 = ScriptExecutionEvent.Type.STARTED;
      ScriptExecutionEvent scriptExecutionEvent0 = new ScriptExecutionEvent((Script) jythonScript0, scriptExecutionEvent_Type0);
      Object object0 = scriptExecutionEvent0.getAdditional();
      assertNull(object0);
  }

  @Test
  public void test3()  throws Throwable  {
      GroovyScript groovyScript0 = new GroovyScript();
      ScriptExecutionEvent.Type scriptExecutionEvent_Type0 = ScriptExecutionEvent.Type.STARTED;
      ScriptExecutionEvent scriptExecutionEvent0 = new ScriptExecutionEvent((Script) groovyScript0, scriptExecutionEvent_Type0);
      boolean boolean0 = scriptExecutionEvent0.hasAdditional();
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      JythonScript jythonScript0 = new JythonScript();
      ScriptExecutionEvent.Type scriptExecutionEvent_Type0 = ScriptExecutionEvent.Type.STOPPED;
      ScriptExecutionEvent scriptExecutionEvent0 = new ScriptExecutionEvent((Script) jythonScript0, scriptExecutionEvent_Type0, (Object) "[]");
      boolean boolean0 = scriptExecutionEvent0.hasAdditional();
      assertEquals(true, boolean0);
  }
}
