/*
 * This file was automatically generated by EvoSuite
 */

package weka.gui.beans;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.HeadlessException;
import java.beans.EventSetDescriptor;
import java.beans.PropertyChangeListener;
import java.beans.VetoableChangeListener;
import java.beans.beancontext.BeanContext;
import java.beans.beancontext.BeanContextServicesSupport;
import java.util.Enumeration;
import java.util.EventObject;
import java.util.List;
import javax.swing.JLayeredPane;
import javax.swing.table.DefaultTableColumnModel;
import org.junit.BeforeClass;
import weka.core.Instances;
import weka.gui.Logger;
import weka.gui.beans.BeanVisual;
import weka.gui.beans.TestSetEvent;
import weka.gui.beans.TextEvent;
import weka.gui.beans.TextListener;
import weka.gui.beans.TextViewer;
import weka.gui.beans.TrainingSetEvent;

@RunWith(EvoSuiteRunner.class)
public class TextViewerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      // Undeclared exception!
      try {
        textViewer0.visualize("Incompatible value for relation-valued attribute.\n", (-828), (-828));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      assertNotNull(textViewer0);
      
      String string0 = textViewer0.globalInfo();
      assertEquals("General purpose text display.", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      assertNotNull(textViewer0);
      
      BeanVisual beanVisual0 = new BeanVisual("zD^v8CaDdJm~", "zD^v8CaDdJm~", "zD^v8CaDdJm~");
      textViewer0.setVisual(beanVisual0);
      textViewer0.appearanceDesign();
      assertEquals("weka.gui.beans.TextViewer[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", textViewer0.toString());
      assertEquals("zD^v8CaDdJm~", textViewer0.getCustomName());
  }

  @Test
  public void test3()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      BeanContextServicesSupport beanContextServicesSupport0 = new BeanContextServicesSupport();
      textViewer0.removeVetoableChangeListener("W&_E", (VetoableChangeListener) beanContextServicesSupport0);
      assertEquals(false, textViewer0.isFocusTraversalPolicyProvider());
  }

  @Test
  public void test4()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      // Undeclared exception!
      try {
        textViewer0.getCustomName();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      BeanContextServicesSupport beanContextServicesSupport0 = new BeanContextServicesSupport();
      textViewer0.addVetoableChangeListener("", (VetoableChangeListener) beanContextServicesSupport0);
      assertEquals(true, textViewer0.isBackgroundSet());
  }

  @Test
  public void test6()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      BeanVisual beanVisual0 = textViewer0.getVisual();
      assertNull(beanVisual0);
  }

  @Test
  public void test7()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      assertNotNull(textViewer0);
      
      // Undeclared exception!
      try {
        textViewer0.appearanceFinal();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      textViewer0.removeTextListener((TextListener) textViewer0);
      assertEquals(false, textViewer0.getInheritsPopupMenu());
  }

  @Test
  public void test9()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      Enumeration<Object> enumeration0 = textViewer0.enumerateRequests();
      assertEquals(true, enumeration0.hasMoreElements());
  }

  @Test
  public void test10()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      // Undeclared exception!
      try {
        textViewer0.acceptTestSet((TestSetEvent) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      textViewer0.addTextListener((TextListener) textViewer0);
      assertEquals(true, textViewer0.isOpaque());
  }

  @Test
  public void test12()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      textViewer0.setLog((Logger) null);
      assertEquals(0, textViewer0.getWidth());
  }

  @Test
  public void test13()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      BeanContextServicesSupport beanContextServicesSupport0 = new BeanContextServicesSupport();
      textViewer0.addPropertyChangeListener("W&_E", (PropertyChangeListener) beanContextServicesSupport0);
      assertEquals(false, textViewer0.isFocusCycleRoot());
  }

  @Test
  public void test14()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      // Undeclared exception!
      try {
        textViewer0.setCustomName("text");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      textViewer0.stop();
      assertEquals(true, textViewer0.isOptimizedDrawingEnabled());
  }

  @Test
  public void test16()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      assertNotNull(textViewer0);
      
      boolean boolean0 = textViewer0.connectionAllowed("oYfU>*3/z&S(Q");
      assertEquals(true, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      assertNotNull(textViewer0);
      
      boolean boolean0 = textViewer0.isBusy();
      assertEquals(false, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      BeanContext beanContext0 = textViewer0.getBeanContext();
      assertNull(beanContext0);
  }

  @Test
  public void test19()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      TrainingSetEvent trainingSetEvent0 = new TrainingSetEvent((Object) integer0, (Instances) null);
      // Undeclared exception!
      try {
        textViewer0.acceptTrainingSet(trainingSetEvent0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test20()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      List<EventObject> list0 = textViewer0.retrieveHeadlessEvents();
      assertEquals(0, list0.size());
  }

  @Test
  public void test21()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      // Undeclared exception!
      try {
        textViewer0.connectionAllowed((EventSetDescriptor) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test22()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      textViewer0.disconnectionNotification("Class is missing: ", "verticalAlignment");
      assertEquals(0, textViewer0.getDebugGraphicsOptions());
  }

  @Test
  public void test23()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      textViewer0.removePropertyChangeListener("Lix}@~CisLe", (PropertyChangeListener) defaultTableColumnModel0);
      assertEquals(false, textViewer0.getInheritsPopupMenu());
  }

  @Test
  public void test24()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      // Undeclared exception!
      try {
        textViewer0.useDefaultVisual();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test25()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      textViewer0.connectionNotification("General purpose text display.", "-976");
      assertEquals(0, textViewer0.getComponentCount());
  }

  @Test
  public void test26()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      assertNotNull(textViewer0);
      
      textViewer0.appearanceDesign();
      assertEquals("weka.gui.beans.TextViewer[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", textViewer0.toString());
      assertEquals(1, textViewer0.countComponents());
  }

  @Test
  public void test27()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      // Undeclared exception!
      try {
        textViewer0.visualize((String) null, (-1707), (-1707));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test28()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      TextEvent textEvent0 = new TextEvent((Object) "selectedIcon", "selectedIcon", "");
      textViewer0.acceptText(textEvent0);
      assertEquals(false, textViewer0.isManagingFocus());
  }

  @Test
  public void test29()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      TextEvent textEvent0 = new TextEvent((Object) "deletion", "Incompatible value for relation-valued attribute.\n", "Incompatible value for relation-valued attribute.\n");
      textViewer0.acceptText(textEvent0);
      assertEquals(true, textViewer0.isEnabled());
  }

  @Test
  public void test30()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      textViewer0.processHeadlessEvents((List<EventObject>) null);
      assertEquals(false, textViewer0.isFocusOwner());
  }

  @Test
  public void test31()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      // Undeclared exception!
      try {
        textViewer0.showResults();
        fail("Expecting exception: HeadlessException");
      } catch(HeadlessException e) {
      }
  }

  @Test
  public void test32()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      // Undeclared exception!
      try {
        textViewer0.performRequest("JfA3LEwX7>");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * JfA3LEwX7> not supported (TextViewer)
         */
      }
  }

  @Test
  public void test33()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      assertNotNull(textViewer0);
      
      BeanContextServicesSupport beanContextServicesSupport0 = new BeanContextServicesSupport();
      textViewer0.setBeanContext((BeanContext) beanContextServicesSupport0);
      assertEquals("weka.gui.beans.TextViewer[,0,0,0x0,invalid,layout=java.awt.FlowLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", textViewer0.toString());
  }

  @Test
  public void test34()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      assertNotNull(textViewer0);
      
      boolean boolean0 = textViewer0.eventGeneratable("\"position\" is date");
      assertEquals(false, boolean0);
  }

  @Test
  public void test35()  throws Throwable  {
      TextViewer textViewer0 = new TextViewer();
      assertNotNull(textViewer0);
      
      boolean boolean0 = textViewer0.eventGeneratable("text");
      assertEquals(true, boolean0);
  }
}
