/*
 * This file was automatically generated by EvoSuite
 */

package weka.gui.beans;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Window;
import org.junit.BeforeClass;
import weka.gui.beans.BeanCustomizer;
import weka.gui.beans.NoteCustomizer;

@RunWith(EvoSuiteRunner.class)
public class NoteCustomizerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      NoteCustomizer noteCustomizer0 = new NoteCustomizer();
      assertNotNull(noteCustomizer0);
      
      noteCustomizer0.setModifiedListener((BeanCustomizer.ModifyListener) null);
      assertEquals("weka.gui.beans.NoteCustomizer[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", noteCustomizer0.toString());
      assertEquals(2, noteCustomizer0.countComponents());
      assertEquals(2, noteCustomizer0.getComponentCount());
  }

  @Test
  public void test1()  throws Throwable  {
      NoteCustomizer noteCustomizer0 = new NoteCustomizer();
      assertNotNull(noteCustomizer0);
      
      // Undeclared exception!
      try {
        noteCustomizer0.setObject((Object) "javax.swing.JInternalFrame[,0,0,0x0,invalid,hidden,layout=javax.swing.plaf.basic.BasicInternalFrameUI$Handler,alignmentX=0.0,alignmentY=0.0,border=javax.swing.plaf.metal.MetalBorders$InternalFrameBorder@6bd3cda7,flags=264,maximumSize=,minimumSize=,preferredSize=,closable=true,defaultCloseOperation=DISPOSE_ON_CLOSE,desktopIcon=javax.swing.JInternalFrame$JDesktopIcon[,0,0,160x31,invalid,hidden,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.plaf.BorderUIResource$CompoundBorderUIResource@228584d5,flags=8,maximumSize=,minimumSize=,preferredSize=],frameIcon=sun.swing.ImageIconUIResource@2c8835d2,iconable=false,isClosed=false,isIcon=false,isMaximum=false,isSelected=false,maximizable=false,opened=false,resizable=true,rootPane=javax.swing.JRootPane[,0,0,0x0,invalid,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=449,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true,title=p*2eq||VA0.r<]");
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * java.lang.String cannot be cast to weka.gui.beans.Note
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      NoteCustomizer noteCustomizer0 = new NoteCustomizer();
      assertNotNull(noteCustomizer0);
      
      noteCustomizer0.setParentWindow((Window) null);
      assertEquals(2, noteCustomizer0.getComponentCount());
      assertEquals("weka.gui.beans.NoteCustomizer[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", noteCustomizer0.toString());
      assertEquals(2, noteCustomizer0.countComponents());
  }

  @Test
  public void test3()  throws Throwable  {
      NoteCustomizer noteCustomizer0 = new NoteCustomizer();
      assertNotNull(noteCustomizer0);
      
      noteCustomizer0.customizerClosing();
      assertEquals("weka.gui.beans.NoteCustomizer[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", noteCustomizer0.toString());
      assertEquals(2, noteCustomizer0.getComponentCount());
      assertEquals(2, noteCustomizer0.countComponents());
  }
}
