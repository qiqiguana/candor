/*
 * This file was automatically generated by EvoSuite
 */

package weka.gui.beans;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Vector;
import org.junit.BeforeClass;
import weka.gui.beans.ChartEvent;

@RunWith(EvoSuiteRunner.class)
public class ChartEventEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ChartEvent chartEvent0 = new ChartEvent((Object) "");
      chartEvent0.setMin((-1.0));
      assertEquals((-1.0), chartEvent0.getMin(), 0.01D);
  }

  @Test
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      Vector<Integer> vector0 = new Vector<Integer>();
      ChartEvent chartEvent0 = new ChartEvent(object0);
      chartEvent0.setLegendText(vector0);
      assertEquals(0.0, chartEvent0.getMax(), 0.01D);
  }

  @Test
  public void test2()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      ChartEvent chartEvent0 = new ChartEvent((Object) "[]", (Vector) null, (-1.0), (-1.0), doubleArray0, true);
      assertEquals((-1.0), chartEvent0.getMax(), 0.01D);
      assertEquals(true, chartEvent0.getReset());
      assertEquals((-1.0), chartEvent0.getMin(), 0.01D);
  }

  @Test
  public void test3()  throws Throwable  {
      ChartEvent chartEvent0 = new ChartEvent((Object) "[]");
      double[] doubleArray0 = chartEvent0.getDataPoint();
      assertNull(doubleArray0);
  }

  @Test
  public void test4()  throws Throwable  {
      ChartEvent chartEvent0 = new ChartEvent((Object) "");
      chartEvent0.setMax(0.0);
      assertEquals(0.0, chartEvent0.getMax(), 0.01D);
  }

  @Test
  public void test5()  throws Throwable  {
      ChartEvent chartEvent0 = new ChartEvent((Object) "");
      boolean boolean0 = chartEvent0.getReset();
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      ChartEvent chartEvent0 = new ChartEvent((Object) "[]");
      double double0 = chartEvent0.getMax();
      assertEquals(0.0, double0, 0.01D);
  }

  @Test
  public void test7()  throws Throwable  {
      Object object0 = new Object();
      ChartEvent chartEvent0 = new ChartEvent(object0);
      double double0 = chartEvent0.getMin();
      assertEquals(0.0, double0, 0.01D);
  }

  @Test
  public void test8()  throws Throwable  {
      Object object0 = new Object();
      ChartEvent chartEvent0 = new ChartEvent(object0);
      chartEvent0.setReset(true);
      assertEquals(true, chartEvent0.getReset());
  }

  @Test
  public void test9()  throws Throwable  {
      ChartEvent chartEvent0 = new ChartEvent((Object) "[]");
      Vector<Object> vector0 = chartEvent0.getLegendText();
      assertNull(vector0);
  }

  @Test
  public void test10()  throws Throwable  {
      ChartEvent chartEvent0 = new ChartEvent((Object) "");
      double[] doubleArray0 = new double[8];
      chartEvent0.setDataPoint(doubleArray0);
      assertEquals("weka.gui.beans.ChartEvent[source=]", chartEvent0.toString());
  }
}
