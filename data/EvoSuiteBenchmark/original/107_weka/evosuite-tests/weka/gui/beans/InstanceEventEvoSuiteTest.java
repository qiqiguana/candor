/*
 * This file was automatically generated by EvoSuite
 */

package weka.gui.beans;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.ArrayList;
import org.junit.BeforeClass;
import weka.core.Attribute;
import weka.core.DenseInstance;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.SparseInstance;
import weka.gui.beans.InstanceEvent;

@RunWith(EvoSuiteRunner.class)
public class InstanceEventEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      double[] doubleArray0 = new double[8];
      SparseInstance sparseInstance0 = new SparseInstance(0.0, doubleArray0);
      InstanceEvent instanceEvent0 = new InstanceEvent(object0, (Instance) sparseInstance0, 0);
      instanceEvent0.getStructure();
      assertEquals(0, instanceEvent0.getStatus());
  }

  @Test
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      double[] doubleArray0 = new double[8];
      SparseInstance sparseInstance0 = new SparseInstance(0.0, doubleArray0);
      InstanceEvent instanceEvent0 = new InstanceEvent(object0, (Instance) sparseInstance0, 0);
      SparseInstance sparseInstance1 = (SparseInstance)instanceEvent0.getInstance();
      assertNotNull(sparseInstance1);
      assertEquals(0, instanceEvent0.getStatus());
  }

  @Test
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      double[] doubleArray0 = new double[8];
      SparseInstance sparseInstance0 = new SparseInstance(0.0, doubleArray0);
      InstanceEvent instanceEvent0 = new InstanceEvent(object0, (Instance) sparseInstance0, 0);
      DenseInstance denseInstance0 = new DenseInstance(0.0, doubleArray0);
      instanceEvent0.setInstance((Instance) denseInstance0);
      assertEquals(0, instanceEvent0.getStatus());
  }

  @Test
  public void test3()  throws Throwable  {
      InstanceEvent instanceEvent0 = new InstanceEvent((Object) "0");
      int int0 = instanceEvent0.getStatus();
      assertEquals(0, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      Object object0 = new Object();
      double[] doubleArray0 = new double[8];
      SparseInstance sparseInstance0 = new SparseInstance(0.0, doubleArray0);
      InstanceEvent instanceEvent0 = new InstanceEvent(object0, (Instance) sparseInstance0, 0);
      instanceEvent0.setStatus(255);
      assertEquals(255, instanceEvent0.getStatus());
  }

  @Test
  public void test5()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("kor", arrayList0, 1088);
      InstanceEvent instanceEvent0 = new InstanceEvent((Object) "kor", instances0);
      instanceEvent0.setStructure(instances0);
      assertEquals(0, instanceEvent0.getStatus());
  }
}
