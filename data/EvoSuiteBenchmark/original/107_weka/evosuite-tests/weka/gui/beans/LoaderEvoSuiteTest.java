/*
 * This file was automatically generated by EvoSuite
 */

package weka.gui.beans;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.beans.EventSetDescriptor;
import java.io.IOException;
import javax.swing.AbstractButton;
import org.junit.BeforeClass;
import weka.core.DenseInstance;
import weka.core.Environment;
import weka.core.Instance;
import weka.core.converters.ArffLoader;
import weka.core.converters.MatlabLoader;
import weka.core.converters.SerializedInstancesLoader;
import weka.gui.Logger;
import weka.gui.beans.ClassValuePicker;
import weka.gui.beans.DataSetEvent;
import weka.gui.beans.DataSourceListener;
import weka.gui.beans.Filter;
import weka.gui.beans.InstanceEvent;
import weka.gui.beans.InstanceListener;
import weka.gui.beans.InstanceStreamToBatchMaker;
import weka.gui.beans.Loader;
import weka.gui.beans.Saver;

@RunWith(EvoSuiteRunner.class)
public class LoaderEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      loader0.stop();
      assertEquals("ArffLoader", loader0.getCustomName());
      assertEquals(1, loader0.getComponentCount());
  }

  @Test
  public void test1()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      ArffLoader arffLoader0 = (ArffLoader)loader0.getWrappedAlgorithm();
      assertNotNull(arffLoader0);
      
      loader0.setWrappedAlgorithm((Object) arffLoader0);
      assertEquals(1, loader0.getComponentCount());
      assertEquals("ArffLoader", loader0.getCustomName());
  }

  @Test
  public void test2()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      String string0 = loader0.globalInfo();
      assertEquals("ArffLoader", loader0.getCustomName());
      assertEquals("<html><font color=blue>Reads a source that is in arff (attribute relation file format) format</font> <br></html>", string0);
      assertEquals(1, loader0.getComponentCount());
      assertNotNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      Logger logger0 = null;
      loader0.setLog(logger0);
      assertEquals("ArffLoader", loader0.getCustomName());
      assertEquals(1, loader0.getComponentCount());
  }

  @Test
  public void test4()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      loader0.appearanceDesign();
      assertEquals(1, loader0.getComponentCount());
      assertEquals("ArffLoader", loader0.getCustomName());
  }

  @Test
  public void test5()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      String string0 = "Xmd[:6KYXVrLfu\\u?n";
      String string1 = AbstractButton.MODEL_CHANGED_PROPERTY;
      loader0.disconnectionNotification(string0, string1);
      assertEquals(1, loader0.countComponents());
      assertEquals("ArffLoader", loader0.getCustomName());
  }

  @Test
  public void test6()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      loader0.setCustomName("ArffLoader");
      assertEquals("ArffLoader", loader0.getCustomName());
      assertEquals(1, loader0.getComponentCount());
      assertEquals(1, loader0.countComponents());
  }

  @Test
  public void test7()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      boolean boolean0 = loader0.connectionAllowed((EventSetDescriptor) null);
      assertEquals(false, boolean0);
      assertEquals("ArffLoader", loader0.getCustomName());
      assertEquals(1, loader0.countComponents());
  }

  @Test
  public void test8()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      Saver saver0 = new Saver();
      loader0.removeInstanceListener((InstanceListener) saver0);
      assertEquals(1, loader0.countComponents());
      assertEquals("ArffLoader", loader0.getCustomName());
  }

  @Test
  public void test9()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      loader0.connectionNotification("much", "Implements stochastic gradient descent for learning a linear binary class SVM or binary class logistic regression on text data. Operates directly (and only) on String attributes. Other types of input attributes are accepted but ignored during training and classification.");
      assertEquals("ArffLoader", loader0.getCustomName());
      assertEquals(1, loader0.countComponents());
      assertEquals(1, loader0.getComponentCount());
  }

  @Test
  public void test10()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      loader0.removeDataSourceListener((DataSourceListener) classValuePicker0);
      assertEquals("ArffLoader", loader0.getCustomName());
      assertEquals(1, loader0.countComponents());
  }

  @Test
  public void test11()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      loader0.start();
      assertEquals("ArffLoader", loader0.getCustomName());
      assertEquals("$Start loading", loader0.getStartMessage());
      assertEquals(1, loader0.getComponentCount());
  }

  @Test
  public void test12()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      loader0.setEnvironment((Environment) null);
      assertEquals("ArffLoader", loader0.getCustomName());
      assertEquals(1, loader0.countComponents());
  }

  @Test
  public void test13()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      String string0 = loader0.getCustomName();
      assertNotNull(string0);
      assertEquals("ArffLoader", string0);
      assertEquals(1, loader0.getComponentCount());
  }

  @Test
  public void test14()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      loader0.setDB(false);
      assertEquals("ArffLoader", loader0.getCustomName());
      assertEquals(1, loader0.getComponentCount());
  }

  @Test
  public void test15()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      loader0.setDB(true);
      assertEquals(1, loader0.countComponents());
      assertEquals("ArffLoader", loader0.getCustomName());
  }

  @Test
  public void test16()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      MatlabLoader matlabLoader0 = new MatlabLoader();
      loader0.setLoader((weka.core.converters.Loader) matlabLoader0);
      assertEquals("MatlabLoader", loader0.getCustomName());
      assertEquals("<html><font color=blue>Reads a Matlab file containing a single matrix in ASCII format</font><br></html>", loader0.globalInfo());
  }

  @Test
  public void test17()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      SerializedInstancesLoader serializedInstancesLoader0 = new SerializedInstancesLoader();
      loader0.setLoader((weka.core.converters.Loader) serializedInstancesLoader0);
      assertEquals("SerializedInstancesLoader", loader0.getCustomName());
      assertEquals("<html><font color=blue>Reads a source that contains serialized Instances</font><br></html>", loader0.globalInfo());
  }

  @Test
  public void test18()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      try {
        loader0.newFileSelected();
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * No source has been specified
         */
      }
  }

  @Test
  public void test19()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      loader0.getStructure("H*p97R,ky(,@QU~-S}Z");
      assertEquals("ArffLoader", loader0.getCustomName());
      assertEquals(1, loader0.getComponentCount());
  }

  @Test
  public void test20()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      // Undeclared exception!
      try {
        loader0.setWrappedAlgorithm((Object) "borderPainted");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * class java.lang.String : incorrect type of algorithm (Loader)
         */
      }
  }

  @Test
  public void test21()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      InstanceStreamToBatchMaker instanceStreamToBatchMaker0 = new InstanceStreamToBatchMaker();
      loader0.addInstanceListener((InstanceListener) instanceStreamToBatchMaker0);
      assertEquals(1, loader0.countComponents());
      assertEquals("ArffLoader", loader0.getCustomName());
  }

  @Test
  public void test22()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      Filter filter0 = new Filter();
      loader0.addDataSourceListener((DataSourceListener) filter0);
      loader0.notifyDataSetLoaded((DataSetEvent) null);
      assertEquals("ArffLoader", loader0.getCustomName());
      assertEquals(1, loader0.countComponents());
  }

  @Test
  public void test23()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      double[] doubleArray0 = new double[1];
      DenseInstance denseInstance0 = new DenseInstance(872.019682215647, doubleArray0);
      InstanceEvent instanceEvent0 = new InstanceEvent((Object) ".arff", (Instance) denseInstance0, 6);
      loader0.notifyInstanceLoaded(instanceEvent0);
      assertEquals(1, loader0.getComponentCount());
      assertEquals("ArffLoader", loader0.getCustomName());
  }

  @Test
  public void test24()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      String string0 = loader0.getStartMessage();
      assertEquals(1, loader0.countComponents());
      assertNotNull(string0);
      assertEquals("$Start loading", string0);
      assertEquals("ArffLoader", loader0.getCustomName());
  }

  @Test
  public void test25()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      boolean boolean0 = loader0.eventGeneratable("4`:");
      assertEquals(true, boolean0);
      assertEquals("ArffLoader", loader0.getCustomName());
      assertEquals(1, loader0.getComponentCount());
  }

  @Test
  public void test26()  throws Throwable  {
      Loader loader0 = new Loader();
      assertNotNull(loader0);
      
      boolean boolean0 = loader0.isBusy();
      assertEquals(1, loader0.getComponentCount());
      assertEquals("ArffLoader", loader0.getCustomName());
      assertEquals(false, boolean0);
  }
}
