/*
 * This file was automatically generated by EvoSuite
 */

package weka.gui.beans;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.beans.EventSetDescriptor;
import org.junit.BeforeClass;
import weka.gui.Logger;
import weka.gui.beans.BeanVisual;
import weka.gui.beans.Saver;

@RunWith(EvoSuiteRunner.class)
public class AbstractDataSinkEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Saver saver0 = new Saver();
      assertNotNull(saver0);
      
      BeanVisual beanVisual0 = saver0.getVisual();
      assertNotNull(beanVisual0);
      
      saver0.setVisual(beanVisual0);
      assertEquals("weka/gui/beans/icons/DefaultDataSink_animated.gif", beanVisual0.getAnimatedIconPath());
      assertEquals(1, saver0.countComponents());
      assertEquals("weka/gui/beans/icons/DefaultDataSink.gif", beanVisual0.getIconPath());
      assertEquals("weka.gui.beans.BeanVisual[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=java.awt.Dimension[width=67,height=68],minimumSize=java.awt.Dimension[width=67,height=68],preferredSize=java.awt.Dimension[width=67,height=68]]", beanVisual0.toString());
      assertEquals("weka.gui.beans.Saver[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", saver0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      Saver saver0 = new Saver();
      assertNotNull(saver0);
      
      // Undeclared exception!
      try {
        saver0.connectionAllowed((EventSetDescriptor) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Saver saver0 = new Saver();
      assertNotNull(saver0);
      
      saver0.setLog((Logger) null);
      assertEquals(1, saver0.countComponents());
      assertEquals("weka.gui.beans.Saver[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", saver0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      Saver saver0 = new Saver();
      assertNotNull(saver0);
      
      saver0.connectionNotification((String) null, "");
      saver0.connectionNotification((String) null, "java.awt.event.ContainerEvent[unknown type,child=null] on weka.gui.beans.Saver[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
      assertEquals(1, saver0.getComponentCount());
      assertEquals("weka.gui.beans.Saver[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", saver0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      Saver saver0 = new Saver();
      assertNotNull(saver0);
      
      saver0.disconnectionNotification("Matlab ASCII files", "model");
      assertEquals("weka.gui.beans.Saver[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", saver0.toString());
      assertEquals(1, saver0.countComponents());
      assertEquals(1, saver0.getComponentCount());
  }

  @Test
  public void test5()  throws Throwable  {
      Saver saver0 = new Saver();
      assertNotNull(saver0);
      
      saver0.disconnectionNotification("Matlab ASCII files", (Object) null);
      assertEquals("weka.gui.beans.Saver[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", saver0.toString());
      assertEquals(1, saver0.countComponents());
      assertEquals(1, saver0.getComponentCount());
  }
}
