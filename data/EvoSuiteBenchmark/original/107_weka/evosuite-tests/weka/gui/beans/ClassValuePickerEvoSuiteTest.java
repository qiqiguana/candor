/*
 * This file was automatically generated by EvoSuite
 */

package weka.gui.beans;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.beans.EventSetDescriptor;
import org.junit.BeforeClass;
import weka.core.Instances;
import weka.gui.Logger;
import weka.gui.SysErrLog;
import weka.gui.beans.BeanVisual;
import weka.gui.beans.ClassAssigner;
import weka.gui.beans.ClassAssignerCustomizer;
import weka.gui.beans.ClassValuePicker;
import weka.gui.beans.DataFormatListener;
import weka.gui.beans.DataSetEvent;
import weka.gui.beans.DataSourceListener;
import weka.gui.beans.SerializedModelSaver;
import weka.gui.beans.TextViewer;

@RunWith(EvoSuiteRunner.class)
public class ClassValuePickerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertNotNull(classValuePicker0);
      
      classValuePicker0.getConnectedFormat();
      assertEquals("weka.gui.beans.ClassValuePicker[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", classValuePicker0.toString());
      assertEquals("ClassValuePicker", classValuePicker0.getCustomName());
      assertEquals(1, classValuePicker0.getComponentCount());
  }

  @Test
  public void test1()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertNotNull(classValuePicker0);
      
      String string0 = classValuePicker0.globalInfo();
      assertEquals("weka.gui.beans.ClassValuePicker[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", classValuePicker0.toString());
      assertEquals("Designate which class value is to be considered the \"positive\" class value (useful for ROC style curves).", string0);
      assertEquals("ClassValuePicker", classValuePicker0.getCustomName());
      assertEquals(1, classValuePicker0.getComponentCount());
  }

  @Test
  public void test2()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertNotNull(classValuePicker0);
      
      String string0 = classValuePicker0.getCustomName();
      assertEquals("weka.gui.beans.ClassValuePicker[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", classValuePicker0.toString());
      assertEquals("ClassValuePicker", string0);
      assertEquals(1, classValuePicker0.getComponentCount());
      assertNotNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertNotNull(classValuePicker0);
      
      ClassAssignerCustomizer classAssignerCustomizer0 = new ClassAssignerCustomizer();
      classValuePicker0.removeDataFormatListener((DataFormatListener) classAssignerCustomizer0);
      assertEquals("ClassValuePicker", classValuePicker0.getCustomName());
      assertEquals(1, classValuePicker0.getComponentCount());
      assertEquals("weka.gui.beans.ClassValuePicker[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", classValuePicker0.toString());
      assertEquals(1, classValuePicker0.countComponents());
  }

  @Test
  public void test4()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertNotNull(classValuePicker0);
      assertEquals("ClassValuePicker", classValuePicker0.getCustomName());
      
      SerializedModelSaver serializedModelSaver0 = new SerializedModelSaver();
      BeanVisual beanVisual0 = serializedModelSaver0.getVisual();
      classValuePicker0.setVisual(beanVisual0);
      assertEquals(1, classValuePicker0.getComponentCount());
  }

  @Test
  public void test5()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertNotNull(classValuePicker0);
      
      // Undeclared exception!
      try {
        classValuePicker0.connectionAllowed((EventSetDescriptor) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertNotNull(classValuePicker0);
      
      ClassAssigner classAssigner0 = new ClassAssigner();
      classValuePicker0.removeDataSourceListener((DataSourceListener) classAssigner0);
      assertEquals("weka.gui.beans.ClassValuePicker[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", classValuePicker0.toString());
      assertEquals("ClassValuePicker", classValuePicker0.getCustomName());
      assertEquals(1, classValuePicker0.getComponentCount());
  }

  @Test
  public void test7()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertEquals("ClassValuePicker", classValuePicker0.getCustomName());
      assertNotNull(classValuePicker0);
      
      classValuePicker0.setCustomName((String) null);
      assertEquals("weka.gui.beans.ClassValuePicker[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", classValuePicker0.toString());
      assertEquals(1, classValuePicker0.countComponents());
      assertEquals(1, classValuePicker0.getComponentCount());
  }

  @Test
  public void test8()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertNotNull(classValuePicker0);
      
      TextViewer textViewer0 = new TextViewer();
      classValuePicker0.addDataSourceListener((DataSourceListener) textViewer0);
      // Undeclared exception!
      try {
        classValuePicker0.notifyDataListeners((DataSetEvent) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertNotNull(classValuePicker0);
      
      BeanVisual beanVisual0 = classValuePicker0.getVisual();
      assertEquals("ClassValuePicker", beanVisual0.getText());
      assertNotNull(beanVisual0);
      assertEquals("weka/gui/beans/icons/ClassValuePicker.gif", beanVisual0.getIconPath());
      assertEquals("weka.gui.beans.ClassValuePicker[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", classValuePicker0.toString());
      assertEquals("weka/gui/beans/icons/ClassValuePicker_animated.gif", beanVisual0.getAnimatedIconPath());
      assertEquals(1, classValuePicker0.countComponents());
  }

  @Test
  public void test10()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertNotNull(classValuePicker0);
      
      String string0 = classValuePicker0.getClassValue();
      assertEquals("ClassValuePicker", classValuePicker0.getCustomName());
      assertEquals("weka.gui.beans.ClassValuePicker[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", classValuePicker0.toString());
      assertNull(string0);
      assertEquals(1, classValuePicker0.countComponents());
      assertEquals(1, classValuePicker0.getComponentCount());
  }

  @Test
  public void test11()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertNotNull(classValuePicker0);
      
      classValuePicker0.useDefaultVisual();
      assertEquals("ClassValuePicker", classValuePicker0.getCustomName());
      assertEquals(1, classValuePicker0.countComponents());
      assertEquals("weka.gui.beans.ClassValuePicker[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", classValuePicker0.toString());
  }

  @Test
  public void test12()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertNotNull(classValuePicker0);
      
      ClassAssignerCustomizer classAssignerCustomizer0 = new ClassAssignerCustomizer();
      classValuePicker0.addDataFormatListener((DataFormatListener) classAssignerCustomizer0);
      classValuePicker0.notifyDataFormatListeners();
      assertEquals("weka.gui.beans.ClassValuePicker[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", classValuePicker0.toString());
      assertEquals(1, classValuePicker0.countComponents());
      assertEquals("ClassValuePicker", classValuePicker0.getCustomName());
  }

  @Test
  public void test13()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertNotNull(classValuePicker0);
      
      boolean boolean0 = classValuePicker0.isBusy();
      assertEquals("ClassValuePicker", classValuePicker0.getCustomName());
      assertEquals("weka.gui.beans.ClassValuePicker[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", classValuePicker0.toString());
      assertEquals(false, boolean0);
      assertEquals(1, classValuePicker0.getComponentCount());
  }

  @Test
  public void test14()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertNotNull(classValuePicker0);
      
      classValuePicker0.stop();
      assertEquals("ClassValuePicker", classValuePicker0.getCustomName());
      assertEquals("weka.gui.beans.ClassValuePicker[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", classValuePicker0.toString());
      assertEquals(1, classValuePicker0.countComponents());
      assertEquals(1, classValuePicker0.getComponentCount());
  }

  @Test
  public void test15()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertNotNull(classValuePicker0);
      
      SysErrLog sysErrLog0 = new SysErrLog();
      classValuePicker0.setLog((Logger) sysErrLog0);
      assertEquals("weka.gui.beans.ClassValuePicker[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", classValuePicker0.toString());
      assertEquals("ClassValuePicker", classValuePicker0.getCustomName());
      assertEquals(1, classValuePicker0.getComponentCount());
  }

  @Test
  public void test16()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertNotNull(classValuePicker0);
      
      classValuePicker0.getStructure("ClassValuePicker");
      assertEquals(1, classValuePicker0.countComponents());
      assertEquals("weka.gui.beans.ClassValuePicker[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", classValuePicker0.toString());
      assertEquals("ClassValuePicker", classValuePicker0.getCustomName());
  }

  @Test
  public void test17()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertNotNull(classValuePicker0);
      
      classValuePicker0.setClassValue("");
      assertEquals("", classValuePicker0.getClassValue());
      assertEquals("ClassValuePicker", classValuePicker0.getCustomName());
      assertEquals("weka.gui.beans.ClassValuePicker[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", classValuePicker0.toString());
      assertEquals(1, classValuePicker0.countComponents());
  }

  @Test
  public void test18()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertNotNull(classValuePicker0);
      
      DataSetEvent dataSetEvent0 = new DataSetEvent((Object) "8034", (Instances) null);
      // Undeclared exception!
      try {
        classValuePicker0.acceptDataSet(dataSetEvent0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test19()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertNotNull(classValuePicker0);
      
      DataSetEvent dataSetEvent0 = new DataSetEvent((Object) "", (Instances) null);
      classValuePicker0.notifyDataListeners(dataSetEvent0);
      assertEquals(1, classValuePicker0.getComponentCount());
      assertEquals("weka.gui.beans.ClassValuePicker[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", classValuePicker0.toString());
      assertEquals("ClassValuePicker", classValuePicker0.getCustomName());
  }

  @Test
  public void test20()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertNotNull(classValuePicker0);
      
      classValuePicker0.notifyDataFormatListeners();
      assertEquals("ClassValuePicker", classValuePicker0.getCustomName());
      assertEquals("weka.gui.beans.ClassValuePicker[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", classValuePicker0.toString());
      assertEquals(1, classValuePicker0.countComponents());
  }

  @Test
  public void test21()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertNotNull(classValuePicker0);
      
      classValuePicker0.connectionNotification("c)Ok", "9117");
      assertEquals("ClassValuePicker", classValuePicker0.getCustomName());
      assertEquals(1, classValuePicker0.getComponentCount());
      assertEquals("weka.gui.beans.ClassValuePicker[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", classValuePicker0.toString());
  }

  @Test
  public void test22()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertNotNull(classValuePicker0);
      
      classValuePicker0.disconnectionNotification("gz6@:6", (Object) null);
      assertEquals("ClassValuePicker", classValuePicker0.getCustomName());
      assertEquals("weka.gui.beans.ClassValuePicker[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", classValuePicker0.toString());
      assertEquals(1, classValuePicker0.countComponents());
  }

  @Test
  public void test23()  throws Throwable  {
      ClassValuePicker classValuePicker0 = new ClassValuePicker();
      assertNotNull(classValuePicker0);
      
      boolean boolean0 = classValuePicker0.eventGeneratable("lLb'i");
      assertEquals(1, classValuePicker0.getComponentCount());
      assertEquals(false, boolean0);
      assertEquals("ClassValuePicker", classValuePicker0.getCustomName());
      assertEquals("weka.gui.beans.ClassValuePicker[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", classValuePicker0.toString());
  }
}
