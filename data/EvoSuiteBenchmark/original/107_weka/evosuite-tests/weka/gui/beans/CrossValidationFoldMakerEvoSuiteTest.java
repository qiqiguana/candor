/*
 * This file was automatically generated by EvoSuite
 */

package weka.gui.beans;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Enumeration;
import org.junit.BeforeClass;
import weka.core.Instances;
import weka.gui.beans.CrossValidationFoldMaker;
import weka.gui.beans.TestSetEvent;
import weka.gui.beans.TrainingSetEvent;

@RunWith(EvoSuiteRunner.class)
public class CrossValidationFoldMakerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CrossValidationFoldMaker crossValidationFoldMaker0 = new CrossValidationFoldMaker();
      assertNotNull(crossValidationFoldMaker0);
      
      String string0 = crossValidationFoldMaker0.globalInfo();
      assertEquals("Split an incoming data set into cross validation folds. Separate train and test sets are produced for each of the k folds.", string0);
      assertEquals("CrossValidationFoldMaker", crossValidationFoldMaker0.getCustomName());
      assertEquals(10, crossValidationFoldMaker0.getFolds());
      assertEquals(false, crossValidationFoldMaker0.getPreserveOrder());
      assertEquals(1, crossValidationFoldMaker0.getSeed());
  }

  @Test
  public void test1()  throws Throwable  {
      CrossValidationFoldMaker crossValidationFoldMaker0 = new CrossValidationFoldMaker();
      assertNotNull(crossValidationFoldMaker0);
      
      crossValidationFoldMaker0.setFolds((-1624));
      assertEquals(-1624, crossValidationFoldMaker0.getFolds());
  }

  @Test
  public void test2()  throws Throwable  {
      CrossValidationFoldMaker crossValidationFoldMaker0 = new CrossValidationFoldMaker();
      assertNotNull(crossValidationFoldMaker0);
      
      int int0 = crossValidationFoldMaker0.getSeed();
      assertEquals(false, crossValidationFoldMaker0.getPreserveOrder());
      assertEquals(1, int0);
      assertEquals("CrossValidationFoldMaker", crossValidationFoldMaker0.getCustomName());
      assertEquals(10, crossValidationFoldMaker0.getFolds());
  }

  @Test
  public void test3()  throws Throwable  {
      CrossValidationFoldMaker crossValidationFoldMaker0 = new CrossValidationFoldMaker();
      assertNotNull(crossValidationFoldMaker0);
      
      TestSetEvent testSetEvent0 = new TestSetEvent((Object) "\"!v>7Anh']Ic", (Instances) null);
      // Undeclared exception!
      try {
        crossValidationFoldMaker0.acceptTestSet(testSetEvent0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      CrossValidationFoldMaker crossValidationFoldMaker0 = new CrossValidationFoldMaker();
      assertNotNull(crossValidationFoldMaker0);
      
      boolean boolean0 = crossValidationFoldMaker0.getPreserveOrder();
      assertEquals(10, crossValidationFoldMaker0.getFolds());
      assertEquals(1, crossValidationFoldMaker0.getSeed());
      assertEquals(false, boolean0);
      assertEquals("CrossValidationFoldMaker", crossValidationFoldMaker0.getCustomName());
  }

  @Test
  public void test5()  throws Throwable  {
      CrossValidationFoldMaker crossValidationFoldMaker0 = new CrossValidationFoldMaker();
      assertNotNull(crossValidationFoldMaker0);
      
      String string0 = crossValidationFoldMaker0.getCustomName();
      assertEquals(10, crossValidationFoldMaker0.getFolds());
      assertEquals(false, crossValidationFoldMaker0.getPreserveOrder());
      assertNotNull(string0);
      assertEquals(1, crossValidationFoldMaker0.getSeed());
      assertEquals("CrossValidationFoldMaker", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      CrossValidationFoldMaker crossValidationFoldMaker0 = new CrossValidationFoldMaker();
      assertNotNull(crossValidationFoldMaker0);
      
      crossValidationFoldMaker0.setSeed(345);
      assertEquals(345, crossValidationFoldMaker0.getSeed());
  }

  @Test
  public void test7()  throws Throwable  {
      CrossValidationFoldMaker crossValidationFoldMaker0 = new CrossValidationFoldMaker();
      assertNotNull(crossValidationFoldMaker0);
      
      int int0 = crossValidationFoldMaker0.getFolds();
      assertEquals("CrossValidationFoldMaker", crossValidationFoldMaker0.getCustomName());
      assertEquals(1, crossValidationFoldMaker0.getSeed());
      assertEquals(false, crossValidationFoldMaker0.getPreserveOrder());
      assertEquals(10, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      CrossValidationFoldMaker crossValidationFoldMaker0 = new CrossValidationFoldMaker();
      assertNotNull(crossValidationFoldMaker0);
      
      TrainingSetEvent trainingSetEvent0 = new TrainingSetEvent((Object) "SwingLargeIconKey", (Instances) null);
      // Undeclared exception!
      try {
        crossValidationFoldMaker0.acceptTrainingSet(trainingSetEvent0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      CrossValidationFoldMaker crossValidationFoldMaker0 = new CrossValidationFoldMaker();
      assertNotNull(crossValidationFoldMaker0);
      
      crossValidationFoldMaker0.setCustomName("test");
      assertEquals("test", crossValidationFoldMaker0.getCustomName());
  }

  @Test
  public void test10()  throws Throwable  {
      CrossValidationFoldMaker crossValidationFoldMaker0 = new CrossValidationFoldMaker();
      assertNotNull(crossValidationFoldMaker0);
      
      String string0 = crossValidationFoldMaker0.seedTipText();
      assertEquals("The randomization seed", string0);
      assertEquals(1, crossValidationFoldMaker0.getSeed());
      assertEquals("CrossValidationFoldMaker", crossValidationFoldMaker0.getCustomName());
      assertEquals(10, crossValidationFoldMaker0.getFolds());
      assertEquals(false, crossValidationFoldMaker0.getPreserveOrder());
  }

  @Test
  public void test11()  throws Throwable  {
      CrossValidationFoldMaker crossValidationFoldMaker0 = new CrossValidationFoldMaker();
      assertNotNull(crossValidationFoldMaker0);
      
      crossValidationFoldMaker0.setPreserveOrder(false);
      assertEquals(1, crossValidationFoldMaker0.getSeed());
      assertEquals(false, crossValidationFoldMaker0.getPreserveOrder());
      assertEquals(10, crossValidationFoldMaker0.getFolds());
      assertEquals("CrossValidationFoldMaker", crossValidationFoldMaker0.getCustomName());
  }

  @Test
  public void test12()  throws Throwable  {
      CrossValidationFoldMaker crossValidationFoldMaker0 = new CrossValidationFoldMaker();
      assertNotNull(crossValidationFoldMaker0);
      
      String string0 = crossValidationFoldMaker0.foldsTipText();
      assertEquals("The number of train and test splits to produce", string0);
      assertEquals("CrossValidationFoldMaker", crossValidationFoldMaker0.getCustomName());
      assertEquals(false, crossValidationFoldMaker0.getPreserveOrder());
      assertEquals(1, crossValidationFoldMaker0.getSeed());
      assertEquals(10, crossValidationFoldMaker0.getFolds());
  }

  @Test
  public void test13()  throws Throwable  {
      CrossValidationFoldMaker crossValidationFoldMaker0 = new CrossValidationFoldMaker();
      assertNotNull(crossValidationFoldMaker0);
      
      crossValidationFoldMaker0.getStructure(" ~v;U#-G\"");
      assertEquals("CrossValidationFoldMaker", crossValidationFoldMaker0.getCustomName());
      assertEquals(10, crossValidationFoldMaker0.getFolds());
      assertEquals(false, crossValidationFoldMaker0.getPreserveOrder());
      assertEquals(1, crossValidationFoldMaker0.getSeed());
  }

  @Test
  public void test14()  throws Throwable  {
      CrossValidationFoldMaker crossValidationFoldMaker0 = new CrossValidationFoldMaker();
      assertNotNull(crossValidationFoldMaker0);
      
      crossValidationFoldMaker0.connectionNotification("fe+ZS8s^", "caret-previous-word");
      crossValidationFoldMaker0.disconnectionNotification("caret-previous-word", (Object) null);
      assertEquals(false, crossValidationFoldMaker0.getPreserveOrder());
      assertEquals(10, crossValidationFoldMaker0.getFolds());
      assertEquals(1, crossValidationFoldMaker0.getSeed());
      assertEquals("CrossValidationFoldMaker", crossValidationFoldMaker0.getCustomName());
  }

  @Test
  public void test15()  throws Throwable  {
      CrossValidationFoldMaker crossValidationFoldMaker0 = new CrossValidationFoldMaker();
      assertNotNull(crossValidationFoldMaker0);
      
      crossValidationFoldMaker0.connectionNotification("", (Object) null);
      assertEquals("CrossValidationFoldMaker", crossValidationFoldMaker0.getCustomName());
      assertEquals(false, crossValidationFoldMaker0.getPreserveOrder());
      assertEquals(1, crossValidationFoldMaker0.getSeed());
      assertEquals(10, crossValidationFoldMaker0.getFolds());
  }

  @Test
  public void test16()  throws Throwable  {
      CrossValidationFoldMaker crossValidationFoldMaker0 = new CrossValidationFoldMaker();
      assertNotNull(crossValidationFoldMaker0);
      
      crossValidationFoldMaker0.disconnectionNotification("", "contentAreaFilled");
      assertEquals(false, crossValidationFoldMaker0.getPreserveOrder());
      assertEquals(10, crossValidationFoldMaker0.getFolds());
      assertEquals("CrossValidationFoldMaker", crossValidationFoldMaker0.getCustomName());
      assertEquals(1, crossValidationFoldMaker0.getSeed());
  }

  @Test
  public void test17()  throws Throwable  {
      CrossValidationFoldMaker crossValidationFoldMaker0 = new CrossValidationFoldMaker();
      assertNotNull(crossValidationFoldMaker0);
      
      TrainingSetEvent trainingSetEvent0 = new TrainingSetEvent((Object) "weka.gui.beans.CrossValidationFoldMaker[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", (Instances) null);
      crossValidationFoldMaker0.notifyTrainingSetProduced(trainingSetEvent0);
      assertEquals(10, crossValidationFoldMaker0.getFolds());
      assertEquals(1, crossValidationFoldMaker0.getSeed());
      assertEquals(false, crossValidationFoldMaker0.getPreserveOrder());
      assertEquals("CrossValidationFoldMaker", crossValidationFoldMaker0.getCustomName());
  }

  @Test
  public void test18()  throws Throwable  {
      CrossValidationFoldMaker crossValidationFoldMaker0 = new CrossValidationFoldMaker();
      assertNotNull(crossValidationFoldMaker0);
      
      boolean boolean0 = crossValidationFoldMaker0.isBusy();
      assertEquals(10, crossValidationFoldMaker0.getFolds());
      assertEquals("CrossValidationFoldMaker", crossValidationFoldMaker0.getCustomName());
      assertEquals(false, boolean0);
      assertEquals(false, crossValidationFoldMaker0.getPreserveOrder());
      assertEquals(1, crossValidationFoldMaker0.getSeed());
  }

  @Test
  public void test19()  throws Throwable  {
      CrossValidationFoldMaker crossValidationFoldMaker0 = new CrossValidationFoldMaker();
      assertNotNull(crossValidationFoldMaker0);
      
      crossValidationFoldMaker0.stop();
      assertEquals(false, crossValidationFoldMaker0.getPreserveOrder());
      assertEquals("CrossValidationFoldMaker", crossValidationFoldMaker0.getCustomName());
      assertEquals(10, crossValidationFoldMaker0.getFolds());
      assertEquals(1, crossValidationFoldMaker0.getSeed());
  }

  @Test
  public void test20()  throws Throwable  {
      CrossValidationFoldMaker crossValidationFoldMaker0 = new CrossValidationFoldMaker();
      assertNotNull(crossValidationFoldMaker0);
      
      Enumeration<Object> enumeration0 = crossValidationFoldMaker0.enumerateRequests();
      assertEquals(false, enumeration0.hasMoreElements());
      assertNotNull(enumeration0);
      assertEquals(false, crossValidationFoldMaker0.getPreserveOrder());
      assertEquals("CrossValidationFoldMaker", crossValidationFoldMaker0.getCustomName());
      assertEquals(1, crossValidationFoldMaker0.getSeed());
      assertEquals(10, crossValidationFoldMaker0.getFolds());
  }

  @Test
  public void test21()  throws Throwable  {
      CrossValidationFoldMaker crossValidationFoldMaker0 = new CrossValidationFoldMaker();
      assertNotNull(crossValidationFoldMaker0);
      
      // Undeclared exception!
      try {
        crossValidationFoldMaker0.performRequest("");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         *  not supported (CrossValidation)
         */
      }
  }

  @Test
  public void test22()  throws Throwable  {
      CrossValidationFoldMaker crossValidationFoldMaker0 = new CrossValidationFoldMaker();
      assertNotNull(crossValidationFoldMaker0);
      
      boolean boolean0 = crossValidationFoldMaker0.eventGeneratable("\"!v>7Anh']Ic");
      assertEquals(false, crossValidationFoldMaker0.getPreserveOrder());
      assertEquals(1, crossValidationFoldMaker0.getSeed());
      assertEquals(false, boolean0);
      assertEquals(10, crossValidationFoldMaker0.getFolds());
      assertEquals("CrossValidationFoldMaker", crossValidationFoldMaker0.getCustomName());
  }
}
