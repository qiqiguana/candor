/*
 * This file was automatically generated by EvoSuite
 */

package weka.gui.beans;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.junit.BeforeClass;
import weka.gui.beans.Note;

@RunWith(EvoSuiteRunner.class)
public class NoteEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Note note0 = new Note();
      assertNotNull(note0);
      
      note0.setFontSizeAdjust((-1));
      assertEquals("New note", note0.getNoteText());
      assertEquals(-1, note0.getFontSizeAdjust());
  }

  @Test
  public void test1()  throws Throwable  {
      Note note0 = new Note();
      assertNotNull(note0);
      
      String string0 = note0.getNoteText();
      assertNotNull(string0);
      assertEquals("New note", string0);
      assertEquals(-1, note0.getFontSizeAdjust());
  }

  @Test
  public void test2()  throws Throwable  {
      Note note0 = new Note();
      assertNotNull(note0);
      assertEquals("New note", note0.getNoteText());
      
      note0.setNoteText("");
      assertEquals(-1, note0.getFontSizeAdjust());
  }

  @Test
  public void test3()  throws Throwable  {
      Note note0 = new Note();
      assertNotNull(note0);
      
      note0.decreaseFontSize();
      assertEquals(-2, note0.getFontSizeAdjust());
  }

  @Test
  public void test4()  throws Throwable  {
      Note note0 = new Note();
      assertNotNull(note0);
      
      note0.increaseFontSize();
      assertEquals(0, note0.getFontSizeAdjust());
  }

  @Test
  public void test5()  throws Throwable  {
      Note note0 = new Note();
      assertNotNull(note0);
      
      int int0 = note0.getFontSizeAdjust();
      assertEquals((-1), int0);
      assertEquals("New note", note0.getNoteText());
  }

  @Test
  public void test6()  throws Throwable  {
      Note note0 = new Note();
      assertNotNull(note0);
      
      note0.setHighlighted(false);
      assertEquals("New note", note0.getNoteText());
      assertEquals(-1, note0.getFontSizeAdjust());
  }

  @Test
  public void test7()  throws Throwable  {
      Note note0 = new Note();
      assertNotNull(note0);
      
      note0.setHighlighted(true);
      assertEquals(-1, note0.getFontSizeAdjust());
      assertEquals("New note", note0.getNoteText());
  }
}
