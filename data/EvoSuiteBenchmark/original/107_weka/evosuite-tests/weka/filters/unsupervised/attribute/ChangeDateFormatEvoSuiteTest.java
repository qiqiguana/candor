/*
 * This file was automatically generated by EvoSuite
 */

package weka.filters.unsupervised.attribute;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.text.SimpleDateFormat;
import java.util.Enumeration;
import org.junit.BeforeClass;
import weka.core.DenseInstance;
import weka.core.Instance;
import weka.core.Instances;
import weka.filters.unsupervised.attribute.ChangeDateFormat;

@RunWith(EvoSuiteRunner.class)
public class ChangeDateFormatEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ChangeDateFormat changeDateFormat0 = new ChangeDateFormat();
      String[] stringArray0 = changeDateFormat0.getOptions();
      assertNotNull(stringArray0);
      
      changeDateFormat0.setOptions(stringArray0);
      assertEquals("last", changeDateFormat0.getAttributeIndex());
  }

  @Test
  public void test1()  throws Throwable  {
      ChangeDateFormat changeDateFormat0 = new ChangeDateFormat();
      String string0 = changeDateFormat0.dateFormatTipText();
      assertEquals("last", changeDateFormat0.getAttributeIndex());
      assertEquals("The date format to change to. This should be a format understood by Java's SimpleDateFormat class.", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      ChangeDateFormat changeDateFormat0 = new ChangeDateFormat();
      try {
        changeDateFormat0.setInputFormat((Instances) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ChangeDateFormat changeDateFormat0 = new ChangeDateFormat();
      String string0 = changeDateFormat0.attributeIndexTipText();
      assertEquals("last", changeDateFormat0.getAttributeIndex());
      assertEquals("Sets which attribute to process. This attribute must be of type date (\"first\" and \"last\" are valid values)", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      ChangeDateFormat changeDateFormat0 = new ChangeDateFormat();
      String string0 = changeDateFormat0.getRevision();
      assertEquals("last", changeDateFormat0.getAttributeIndex());
      assertNotNull(string0);
      assertEquals("8034", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      ChangeDateFormat changeDateFormat0 = new ChangeDateFormat();
      Enumeration<Object> enumeration0 = changeDateFormat0.listOptions();
      assertEquals("last", changeDateFormat0.getAttributeIndex());
      assertNotNull(enumeration0);
  }

  @Test
  public void test6()  throws Throwable  {
      ChangeDateFormat changeDateFormat0 = new ChangeDateFormat();
      String string0 = changeDateFormat0.globalInfo();
      assertEquals("last", changeDateFormat0.getAttributeIndex());
      assertEquals("Changes the date format used by a date attribute. This is most useful for converting to a format with less precision, for example, from an absolute date to day of year, etc. This changes the format string, and changes the date values to those that would be parsed by the new format.", string0);
  }

  @Test
  public void test7()  throws Throwable  {
      ChangeDateFormat changeDateFormat0 = new ChangeDateFormat();
      double[] doubleArray0 = new double[32];
      DenseInstance denseInstance0 = new DenseInstance(0.0, doubleArray0);
      try {
        changeDateFormat0.input((Instance) denseInstance0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * No input instance format defined
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      ChangeDateFormat changeDateFormat0 = new ChangeDateFormat();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      changeDateFormat0.setOptions(stringArray0);
      assertEquals("last", changeDateFormat0.getAttributeIndex());
  }

  @Test
  public void test9()  throws Throwable  {
      ChangeDateFormat changeDateFormat0 = new ChangeDateFormat();
      // Undeclared exception!
      try {
        changeDateFormat0.setDateFormat((SimpleDateFormat) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
