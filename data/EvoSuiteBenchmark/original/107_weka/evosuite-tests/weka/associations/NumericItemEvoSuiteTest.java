/*
 * This file was automatically generated by EvoSuite
 */

package weka.associations;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.List;
import org.junit.BeforeClass;
import weka.associations.NumericItem;
import weka.core.Attribute;

@RunWith(EvoSuiteRunner.class)
public class NumericItemEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      NumericItem.Comparison numericItem_Comparison0 = NumericItem.Comparison.GREATER_THAN;
      Attribute attribute0 = new Attribute("$", "$");
      NumericItem numericItem0 = new NumericItem(attribute0, (double) 1538632695, numericItem_Comparison0);
      assertNotNull(numericItem0);
      
      String string0 = numericItem0.getItemValueAsString();
      assertNotNull(string0);
      assertEquals("1538632695", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      Attribute attribute0 = new Attribute("");
      NumericItem.Comparison numericItem_Comparison0 = NumericItem.Comparison.GREATER_THAN;
      NumericItem numericItem0 = new NumericItem(attribute0, (-11.453218746847764), numericItem_Comparison0);
      assertNotNull(numericItem0);
      
      boolean boolean0 = numericItem0.equals((Object) numericItem0);
      assertEquals(true, boolean0);
      assertEquals("-11.453", numericItem0.getItemValueAsString());
  }

  @Test
  public void test2()  throws Throwable  {
      Attribute attribute0 = new Attribute("", (List<String>) null, (-15));
      NumericItem.Comparison numericItem_Comparison0 = NumericItem.Comparison.NONE;
      NumericItem numericItem0 = null;
      try {
        numericItem0 = new NumericItem(attribute0, (double) (-15), numericItem_Comparison0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
        /*
         * NumericItem must be constructed using a numeric attribute
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Attribute attribute0 = new Attribute("$", "$");
      NumericItem.Comparison numericItem_Comparison0 = NumericItem.Comparison.EQUAL;
      NumericItem numericItem0 = new NumericItem(attribute0, (double) 1538632695, numericItem_Comparison0);
      assertNotNull(numericItem0);
      
      String string0 = numericItem0.getComparisonAsString();
      assertEquals("=", string0);
      assertEquals("1538632695", numericItem0.getItemValueAsString());
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      Attribute attribute0 = new Attribute("");
      NumericItem.Comparison numericItem_Comparison0 = NumericItem.Comparison.GREATER_THAN;
      NumericItem numericItem0 = new NumericItem(attribute0, (-11.453218746847764), numericItem_Comparison0);
      assertNotNull(numericItem0);
      
      String string0 = numericItem0.getComparisonAsString();
      assertNotNull(string0);
      assertEquals(">", string0);
      assertEquals(" > -11.4532", numericItem0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      Attribute attribute0 = new Attribute("}KSBz^;7Mc:9m,t|J^");
      NumericItem.Comparison numericItem_Comparison0 = NumericItem.Comparison.LESS_THAN_OR_EQUAL_TO;
      NumericItem numericItem0 = new NumericItem(attribute0, (-13.371727760196123), numericItem_Comparison0);
      assertNotNull(numericItem0);
      
      String string0 = numericItem0.getComparisonAsString();
      assertEquals("<=", string0);
      assertEquals("-13.372", numericItem0.getItemValueAsString());
      assertNotNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      Attribute attribute0 = new Attribute("}KSBz^;7Mc:9m,t|J^");
      NumericItem.Comparison numericItem_Comparison0 = NumericItem.Comparison.NONE;
      NumericItem numericItem0 = new NumericItem(attribute0, (-13.371727760196123), numericItem_Comparison0);
      assertNotNull(numericItem0);
      
      numericItem0.getComparisonAsString();
      assertEquals((-13.371727760196123), numericItem0.getSplitPoint(), 0.01D);
      assertEquals("-13.372", numericItem0.getItemValueAsString());
  }

  @Test
  public void test7()  throws Throwable  {
      Attribute attribute0 = new Attribute("$", "$");
      NumericItem.Comparison numericItem_Comparison0 = NumericItem.Comparison.EQUAL;
      NumericItem numericItem0 = new NumericItem(attribute0, (double) 1538632695, numericItem_Comparison0);
      assertNotNull(numericItem0);
      
      String string0 = numericItem0.toString();
      assertNotNull(string0);
      assertEquals("$ = 1538632695", string0);
  }

  @Test
  public void test8()  throws Throwable  {
      Attribute attribute0 = new Attribute("");
      NumericItem.Comparison numericItem_Comparison0 = NumericItem.Comparison.GREATER_THAN;
      NumericItem numericItem0 = new NumericItem(attribute0, (-11.453218746847764), numericItem_Comparison0);
      assertNotNull(numericItem0);
      
      String string0 = numericItem0.toString();
      assertNotNull(string0);
      assertEquals(" > -11.4532", string0);
  }

  @Test
  public void test9()  throws Throwable  {
      Attribute attribute0 = new Attribute("M{s2s@S _", "M{s2s@S _", 27);
      NumericItem.Comparison numericItem_Comparison0 = NumericItem.Comparison.LESS_THAN_OR_EQUAL_TO;
      NumericItem numericItem0 = new NumericItem(attribute0, (double) 27, numericItem_Comparison0);
      assertNotNull(numericItem0);
      
      String string0 = numericItem0.toString(true);
      assertEquals("M{s2s@S _ <= 27", numericItem0.toString());
      assertNotNull(string0);
      assertEquals("M{s2s@S _ <= 27:0", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      Attribute attribute0 = new Attribute("}KSBz^;7Mc:9m,t|J^");
      NumericItem.Comparison numericItem_Comparison0 = NumericItem.Comparison.NONE;
      NumericItem numericItem0 = new NumericItem(attribute0, (-13.371727760196123), numericItem_Comparison0);
      assertNotNull(numericItem0);
      
      String string0 = numericItem0.toString(false);
      assertNotNull(string0);
      assertEquals("}KSBz^;7Mc:9m,t|J^  -13.3717", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      Attribute attribute0 = new Attribute("}KSBz^;7Mc:9m,t|J^");
      NumericItem.Comparison numericItem_Comparison0 = NumericItem.Comparison.NONE;
      NumericItem numericItem0 = new NumericItem(attribute0, (-13.371727760196123), numericItem_Comparison0);
      assertNotNull(numericItem0);
      
      boolean boolean0 = numericItem0.equals((Object) numericItem_Comparison0);
      assertEquals(false, boolean0);
      assertEquals((-13.371727760196123), numericItem0.getSplitPoint(), 0.01D);
  }
}
