/*
 * This file was automatically generated by EvoSuite
 */

package com.soops.CEN4010.JMCA;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.soops.CEN4010.JMCA.StatementDS;
import com.soops.CEN4010.JMCA.StatementElement;
import java.util.ArrayList;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class StatementDSEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      StatementDS statementDS0 = new StatementDS();
      ArrayList<StatementElement> arrayList0 = statementDS0.getRVals();
      assertNotNull(arrayList0);
      assertEquals(false, statementDS0.isInSelection());
      assertEquals(false, statementDS0.isInIteration());
  }

  @Test
  public void test1()  throws Throwable  {
      StatementDS statementDS0 = new StatementDS();
      statementDS0.getType();
      assertEquals(false, statementDS0.isInSelection());
      assertEquals(false, statementDS0.isInIteration());
  }

  @Test
  public void test2()  throws Throwable  {
      StatementDS statementDS0 = new StatementDS();
      statementDS0.addRVal((StatementElement) null);
      StatementDS.statementType statementDS_statementType0 = StatementDS.statementType.PostInc;
      statementDS0.setType(statementDS_statementType0);
      statementDS0.setLVal("");
      // Undeclared exception!
      try {
        statementDS0.toString();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      StatementDS statementDS0 = new StatementDS();
      statementDS0.setLVal((StatementElement) null);
      assertEquals(false, statementDS0.isInIteration());
      assertEquals(false, statementDS0.isInSelection());
  }

  @Test
  public void test4()  throws Throwable  {
      StatementDS statementDS0 = new StatementDS();
      assertEquals(false, statementDS0.isInIteration());
      
      StatementDS.statementType statementDS_statementType0 = StatementDS.statementType.PreInc;
      statementDS0.setInIteration(true);
      statementDS0.setType(statementDS_statementType0);
      statementDS0.setLVal(";)Czy;+eA_Voz");
      String string0 = statementDS0.toString();
      assertEquals(true, statementDS0.isInIteration());
      assertEquals(";)Czy;+eA_Voz : PreInc (Iteration) ", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      StatementDS statementDS0 = new StatementDS();
      StatementDS.statementType statementDS_statementType0 = StatementDS.statementType.PreInc;
      statementDS0.setType(statementDS_statementType0);
      assertEquals(false, statementDS0.isInSelection());
      
      statementDS0.setInSelection(true);
      statementDS0.setLVal(";)Czy;+eA_Voz");
      String string0 = statementDS0.toString();
      assertEquals(true, statementDS0.isInSelection());
      assertEquals(";)Czy;+eA_Voz : PreInc (Selection) ", string0);
  }
}
