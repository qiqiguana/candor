/*
 * This file was automatically generated by EvoSuite
 */

package com.soops.CEN4010.JMCA;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.soops.CEN4010.JMCA.ASTNode;
import com.soops.CEN4010.JMCA.JMCAAnalyzer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JMCAAnalyzerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JMCAAnalyzer jMCAAnalyzer0 = new JMCAAnalyzer();
      jMCAAnalyzer0.setFileName("+");
  }

  @Test
  public void test1()  throws Throwable  {
      JMCAAnalyzer jMCAAnalyzer0 = new JMCAAnalyzer();
      String string0 = jMCAAnalyzer0.analyze((ASTNode) null);
      assertNotNull(string0);
      assertEquals("File did not parse correctly", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      JMCAAnalyzer jMCAAnalyzer0 = new JMCAAnalyzer();
      ASTNode aSTNode0 = new ASTNode();
      aSTNode0.addChild(aSTNode0);
      aSTNode0.setIdentity("StatementExpression");
      aSTNode0.setType("MethodDeclaration");
      String string0 = jMCAAnalyzer0.analyze(aSTNode0);
      assertNotNull(string0);
      assertEquals("\nFile:  \n\nClass: StatementExpression\n\nMethod Name                             Cohesion Level\n--------------------------------------------------------------\nStatementExpression               No Class Level Assignments\n", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      JMCAAnalyzer jMCAAnalyzer0 = new JMCAAnalyzer();
      ASTNode aSTNode0 = new ASTNode();
      ASTNode aSTNode1 = new ASTNode("+", "+", aSTNode0);
      aSTNode0.addChild(aSTNode0);
      aSTNode0.addChild(aSTNode1);
      aSTNode0.setIdentity("StatementExpression");
      aSTNode0.addChild(aSTNode0);
      aSTNode0.setType("MethodDeclaration");
      aSTNode1.identity = "-=";
      String string0 = jMCAAnalyzer0.analyze(aSTNode0);
      assertNotNull(string0);
      assertEquals("\nFile:  \n\nClass: StatementExpression\n\nMethod Name                             Cohesion Level\n--------------------------------------------------------------\nStatementExpression               No Class Level Assignments\nStatementExpression               No Class Level Assignments\n\nClass: -=\n\nMethod Name                             Cohesion Level\n--------------------------------------------------------------\n\nClass: StatementExpression\n\nMethod Name                             Cohesion Level\n--------------------------------------------------------------\nStatementExpression               No Class Level Assignments\nStatementExpression               No Class Level Assignments\n", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      JMCAAnalyzer jMCAAnalyzer0 = new JMCAAnalyzer();
      ASTNode aSTNode0 = new ASTNode();
      aSTNode0.addChild(aSTNode0);
      aSTNode0.addChild(aSTNode0);
      aSTNode0.addChild(aSTNode0);
      aSTNode0.setIdentity("StatementExpression");
      aSTNode0.setType("MethodDeclaration");
      String string0 = jMCAAnalyzer0.analyze(aSTNode0);
      assertNotNull(string0);
      assertEquals("\nFile:  \n\nClass: StatementExpression\n\nMethod Name                             Cohesion Level\n--------------------------------------------------------------\nStatementExpression               No Class Level Assignments\nStatementExpression               No Class Level Assignments\nStatementExpression               No Class Level Assignments\n\nClass: StatementExpression\n\nMethod Name                             Cohesion Level\n--------------------------------------------------------------\nStatementExpression               No Class Level Assignments\nStatementExpression               No Class Level Assignments\nStatementExpression               No Class Level Assignments\n\nClass: StatementExpression\n\nMethod Name                             Cohesion Level\n--------------------------------------------------------------\nStatementExpression               No Class Level Assignments\nStatementExpression               No Class Level Assignments\nStatementExpression               No Class Level Assignments\n", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      JMCAAnalyzer jMCAAnalyzer0 = new JMCAAnalyzer();
      ASTNode aSTNode0 = new ASTNode();
      ASTNode aSTNode1 = new ASTNode("+", "+", aSTNode0);
      aSTNode0.addChild(aSTNode0);
      aSTNode0.addChild(aSTNode1);
      aSTNode0.addChild(aSTNode1);
      aSTNode0.setIdentity("StatementExpression");
      aSTNode0.setType("MethodDeclaration");
      String string0 = jMCAAnalyzer0.analyze(aSTNode0);
      assertEquals("\nFile:  \n\nClass: StatementExpression\n\nMethod Name                             Cohesion Level\n--------------------------------------------------------------\nStatementExpression               No Class Level Assignments\n\nClass: +\n\nMethod Name                             Cohesion Level\n--------------------------------------------------------------\n\nClass: +\n\nMethod Name                             Cohesion Level\n--------------------------------------------------------------\n", string0);
      assertNotNull(string0);
  }
}
