/*
 * This file was automatically generated by EvoSuite
 */

package com.soops.CEN4010.JMCA.JParser.xmlParser;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.soops.CEN4010.JMCA.JParser.xmlParser.LocalVar;
import com.soops.CEN4010.JMCA.JParser.xmlParser.XMLParser;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LocalVarEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LocalVar localVar0 = new LocalVar((XMLParser) null);
      localVar0.processState("identifier");
      assertEquals(false, localVar0.varDec);
  }

  @Test
  public void test1()  throws Throwable  {
      LocalVar localVar0 = new LocalVar((XMLParser) null);
      assertEquals(false, localVar0.varDec);
      
      localVar0.processState("VariableDeclaratorId");
      assertEquals(true, localVar0.varDec);
  }

  @Test
  public void test2()  throws Throwable  {
      LocalVar localVar0 = new LocalVar((XMLParser) null);
      localVar0.closeState("myG6H7");
      assertEquals(false, localVar0.varDec);
  }

  @Test
  public void test3()  throws Throwable  {
      LocalVar localVar0 = new LocalVar((XMLParser) null);
      // Undeclared exception!
      try {
        localVar0.closeState("LocalVariableDeclaration");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      LocalVar localVar0 = new LocalVar((XMLParser) null);
      localVar0.closeState("identifier");
      assertEquals(false, localVar0.varDec);
  }

  @Test
  public void test5()  throws Throwable  {
      LocalVar localVar0 = new LocalVar((XMLParser) null);
      localVar0.varDec = true;
      // Undeclared exception!
      try {
        localVar0.closeState("identifier");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
