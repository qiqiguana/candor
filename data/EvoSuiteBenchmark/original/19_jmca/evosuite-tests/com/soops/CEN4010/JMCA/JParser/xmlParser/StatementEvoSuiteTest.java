/*
 * This file was automatically generated by EvoSuite
 */

package com.soops.CEN4010.JMCA.JParser.xmlParser;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.soops.CEN4010.JMCA.JParser.xmlParser.Statement;
import com.soops.CEN4010.JMCA.JParser.xmlParser.XMLParser;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class StatementEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Statement statement0 = new Statement((XMLParser) null);
      statement0.processState("#+P}V|8d_L0");
  }

  @Test
  public void test1()  throws Throwable  {
      Statement statement0 = new Statement((XMLParser) null);
      // Undeclared exception!
      try {
        statement0.processState("StatementExpression");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Statement statement0 = new Statement((XMLParser) null);
      // Undeclared exception!
      try {
        statement0.processState("ReturnStatement");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Statement statement0 = new Statement((XMLParser) null);
      // Undeclared exception!
      try {
        statement0.processState("LocalVariableDeclaration");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Statement statement0 = new Statement((XMLParser) null);
      // Undeclared exception!
      try {
        statement0.processState("TryStatement");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      Statement statement0 = new Statement((XMLParser) null);
      // Undeclared exception!
      try {
        statement0.processState("IfStatement");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Statement statement0 = new Statement((XMLParser) null);
      // Undeclared exception!
      try {
        statement0.processState("ForStatement");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Statement statement0 = new Statement((XMLParser) null);
      // Undeclared exception!
      try {
        statement0.processState("DoStatement");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      Statement statement0 = new Statement((XMLParser) null);
      // Undeclared exception!
      try {
        statement0.processState("WhileStatement");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      Statement statement0 = new Statement((XMLParser) null);
      // Undeclared exception!
      try {
        statement0.closeState("Statement");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      Statement statement0 = new Statement((XMLParser) null);
      // Undeclared exception!
      try {
        statement0.closeState("ExplicitConstructorInvocation");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      Statement statement0 = new Statement((XMLParser) null);
      statement0.closeState("#+P}V|8d_L0");
  }
}
