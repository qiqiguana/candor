/*
 * This file was automatically generated by EvoSuite
 * Wed May 14 21:44:17 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.FilterBySubstring;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FilterBySubstring_ESTest extends FilterBySubstring_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        FilterBySubstring.filterBySubstring((List<Object>) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.FilterBySubstring", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      List<Object> list0 = List.of((Object) "V.i(N(J", (Object) "V.i(N(J", (Object) "V.i(N(J", (Object) "V.i(N(J", (Object) "V.i(N(J");
      List<Object> list1 = FilterBySubstring.filterBySubstring(list0, "V.i(N(J");
      assertFalse(list1.contains("V.i(N(J"));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      List<Object> list0 = List.of((Object) "", (Object) "");
      List<Object> list1 = FilterBySubstring.filterBySubstring(list0, "");
      assertEquals(2, list1.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FilterBySubstring filterBySubstring0 = new FilterBySubstring();
  }
}
