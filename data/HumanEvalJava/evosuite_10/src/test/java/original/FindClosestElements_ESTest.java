/*
 * This file was automatically generated by EvoSuite
 * Wed May 14 21:36:06 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.FindClosestElements;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class FindClosestElements_ESTest extends FindClosestElements_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Double double0 = Double.valueOf((-3779.79108));
      Double double1 = new Double(0.0);
      List<Double> list0 = List.of(double1, double1, double1, double0, double1, double1, double0, double1, double1, double1);
      List<Double> list1 = FindClosestElements.findClosestElements(list0);
      assertFalse(list1.contains((-3779.79108)));
      assertEquals(2, list1.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        FindClosestElements.findClosestElements((List<Double>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.FindClosestElements", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = Double.valueOf((-3779.79108));
      linkedList0.add(double0);
      List<Double> list0 = FindClosestElements.findClosestElements(linkedList0);
      assertFalse(list0.contains((-3779.79108)));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FindClosestElements findClosestElements0 = new FindClosestElements();
  }
}
