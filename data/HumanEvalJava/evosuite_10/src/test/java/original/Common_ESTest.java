/*
 * This file was automatically generated by EvoSuite
 * Wed May 14 20:05:50 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Common;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class Common_ESTest extends Common_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      List<Object> list0 = List.of((Object) linkedList0);
      List<Object> list1 = Common.common(linkedList0, list0);
      assertEquals(0, list1.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      // Undeclared exception!
      try { 
        Common.common(linkedList0, (List<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Common", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer(1122);
      Integer integer1 = Integer.valueOf(0);
      List<Integer> list0 = List.of(integer1, integer1, integer0, integer0, integer0);
      List<Object> list1 = List.of((Object) integer0, (Object) integer1, (Object) integer0, (Object) integer0, (Object) integer0, (Object) integer0, (Object) integer0);
      List<Object> list2 = Common.common(list0, list1);
      assertTrue(list2.contains(1122));
      assertEquals(2, list2.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer(1122);
      List<Integer> list0 = List.of(integer0, integer0, integer0, integer0, integer0);
      Integer integer1 = Integer.valueOf(0);
      List<Object> list1 = List.of((Object) integer1, (Object) integer0, (Object) integer0, (Object) integer0, (Object) integer1, (Object) integer1, (Object) integer0);
      List<Object> list2 = Common.common(list0, list1);
      assertTrue(list2.contains(1122));
      assertEquals(1, list2.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Common common0 = new Common();
  }
}
