package original;

import java.util.HashMap;

import java.util.Map;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
/**
* Test class of Histogram.
*/
class HistogramTest {
    @Test
    void test_histogram_should_return_expected_result_for_valid_input() {
        Map<String, Integer> expected = new HashMap<>();
        expected.put("a", 2);
        expected.put("b", 2);
        assertEquals(expected, Histogram.histogram("a b b a"));
    }
    
    @Test
        public void testNothing(){
            Histogram s = new Histogram();
            }
    @Test
    public void testEmptyString() {
        Map<String, Integer> result = (Map<String, Integer>) Histogram.histogram(" ");
        assertTrue(result.isEmpty());
    }
    @Test
    public void testSingleCharacter() {
        Map<String, Integer> result = (Map<String, Integer>) Histogram.histogram("a");
        assertEquals(1, (int) result.get("a"));
    }
    @Test
    public void testMultipleCharacters() {
        Map<String, Integer> result = (Map<String, Integer>) Histogram.histogram("a b c d e");
        assertEquals(1, (int) result.get("a"));
        assertEquals(1, (int) result.get("b"));
        assertEquals(1, (int) result.get("c"));
        assertEquals(1, (int) result.get("d"));
        assertEquals(1, (int) result.get("e"));
    }
    @Test
    public void testRepeatingCharactersFixed() {
        Map<String, Integer> result = (Map<String, Integer>) Histogram.histogram("a b a c d e");
        assertEquals(2, (int) result.get("a"));
    }
    @Test
    public void testNullInputFixed() {
        Map<String, Integer> result = (Map<String, Integer>) Histogram.histogram(null);
        assertTrue(result.isEmpty());
    }
                                    
}