<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="original.MonotonicTest" time="0.095" tests="79" errors="0" skipped="0" failures="0">
  <properties>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.specification.version" value="11"/>
    <property name="sun.cpu.isalist" value=""/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/qinghua/projects/matg/data/HumanEvalJava/matg_branch/target/test-classes:/home/qinghua/projects/matg/data/HumanEvalJava/matg_branch/target/classes:/home/qinghua/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.8.1/junit-jupiter-engine-5.8.1.jar:/home/qinghua/.m2/repository/org/junit/platform/junit-platform-engine/1.8.1/junit-platform-engine-1.8.1.jar:/home/qinghua/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/qinghua/.m2/repository/org/junit/platform/junit-platform-commons/1.8.1/junit-platform-commons-1.8.1.jar:/home/qinghua/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.8.1/junit-jupiter-api-5.8.1.jar:/home/qinghua/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:"/>
    <property name="java.vm.vendor" value="Ubuntu"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://ubuntu.com/"/>
    <property name="user.timezone" value=""/>
    <property name="java.vm.specification.version" value="11"/>
    <property name="os.name" value="Linux"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-11-openjdk-amd64/lib"/>
    <property name="sun.java.command" value="/home/qinghua/projects/matg/data/HumanEvalJava/matg_branch/target/surefire/surefirebooter-20250528154242447_3.jar /home/qinghua/projects/matg/data/HumanEvalJava/matg_branch/target/surefire 2025-05-28T15-42-42_387-jvmRun1 surefire-20250528154242447_1tmp surefire_0-20250528154242447_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/home/qinghua/projects/matg/data/HumanEvalJava/matg_branch/target/test-classes:/home/qinghua/projects/matg/data/HumanEvalJava/matg_branch/target/classes:/home/qinghua/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.8.1/junit-jupiter-engine-5.8.1.jar:/home/qinghua/.m2/repository/org/junit/platform/junit-platform-engine/1.8.1/junit-platform-engine-1.8.1.jar:/home/qinghua/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/qinghua/.m2/repository/org/junit/platform/junit-platform-commons/1.8.1/junit-platform-commons-1.8.1.jar:/home/qinghua/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.8.1/junit-jupiter-api-5.8.1.jar:/home/qinghua/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/qinghua"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-01-21"/>
    <property name="java.home" value="/usr/lib/jvm/java-11-openjdk-amd64"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/home/qinghua/projects/matg/data/HumanEvalJava/matg_branch"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="/home/qinghua/projects/matg/data/HumanEvalJava/matg_branch/target/surefire/surefirebooter-20250528154242447_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="11.0.26+4-post-Ubuntu-1ubuntu124.04"/>
    <property name="user.name" value="qinghua"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="6.11.0-21-generic"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="/home/qinghua/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://bugs.launchpad.net/ubuntu/+source/openjdk-lts"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="java.version" value="11.0.26"/>
    <property name="user.dir" value="/home/qinghua/projects/matg/data/HumanEvalJava/matg_branch"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.library.path" value="/usr/local/cuda-12.6/lib64::/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Ubuntu"/>
    <property name="java.vm.version" value="11.0.26+4-post-Ubuntu-1ubuntu124.04"/>
    <property name="java.specification.maintenance.version" value="3"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="55.0"/>
  </properties>
  <testcase name="testListWithSingleElement" classname="original.MonotonicTest" time="0.028"/>
  <testcase name="testMonotonicDecreasingListUnique" classname="original.MonotonicTest" time="0"/>
  <testcase name="testMonotonicIncreasing" classname="original.MonotonicTest" time="0"/>
  <testcase name="TestSingleElementList1" classname="original.MonotonicTest" time="0"/>
  <testcase name="testNonMonotonicList2Fixed" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="testMonotonicDecreasing" classname="original.MonotonicTest" time="0"/>
  <testcase name="testEmptyList2" classname="original.MonotonicTest" time="0.002"/>
  <testcase name="testNonMonotonicListWithDirectionChanges1" classname="original.MonotonicTest" time="0"/>
  <testcase name="testDuplicateElementsListFixed2" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="testEmptySequenceFixed" classname="original.MonotonicTest" time="0"/>
  <testcase name="testMonotonicDecreasingSequence" classname="original.MonotonicTest" time="0"/>
  <testcase name="TestMonotonicSingleElementList" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="testSequenceWithEqualElements" classname="original.MonotonicTest" time="0"/>
  <testcase name="testMonotonicDecreasingListWithEqualElements1" classname="original.MonotonicTest" time="0"/>
  <testcase name="testNullList" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="testNonMonotonicList2" classname="original.MonotonicTest" time="0"/>
  <testcase name="testNonMonotonicList3" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="test_single_element" classname="original.MonotonicTest" time="0"/>
  <testcase name="testListWithSameElements" classname="original.MonotonicTest" time="0"/>
  <testcase name="TestMonotonicConstantList" classname="original.MonotonicTest" time="0"/>
  <testcase name="testMonotonicDecreasingListCorrected" classname="original.MonotonicTest" time="0"/>
  <testcase name="testEmptySequenceFixed2" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="testEmptyList" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="test_Monotonic_IncreasingList_ReturnsTrue" classname="original.MonotonicTest" time="0.002"/>
  <testcase name="testNonMonotonicSequenceIncreasingThenDecreasing" classname="original.MonotonicTest" time="0"/>
  <testcase name="testMonotonicIncreasingSequence2" classname="original.MonotonicTest" time="0"/>
  <testcase name="testEmptyListFixed" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="test_Duplicate_Elements_Test_5" classname="original.MonotonicTest" time="0"/>
  <testcase name="test_Monotonic_Decreasing_Test_2" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="testMonotonicEqualElementsList" classname="original.MonotonicTest" time="0"/>
  <testcase name="testMonotonicIncreasingList2" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="testMonotonicIncreasingList3" classname="original.MonotonicTest" time="0"/>
  <testcase name="testSingleElementList" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="test_Non_Monotonic_Test_3" classname="original.MonotonicTest" time="0"/>
  <testcase name="test_equal_elements" classname="original.MonotonicTest" time="0"/>
  <testcase name="testSingleElementList_ReturnsTrue" classname="original.MonotonicTest" time="0"/>
  <testcase name="testMonotonicIncreasingList" classname="original.MonotonicTest" time="0"/>
  <testcase name="TestMonotonicIncreasing1" classname="original.MonotonicTest" time="0"/>
  <testcase name="testMonotonicDecreasing1" classname="original.MonotonicTest" time="0"/>
  <testcase name="testMonotonicDecreasing2" classname="original.MonotonicTest" time="0"/>
  <testcase name="testDuplicateElementsIncreasing" classname="original.MonotonicTest" time="0"/>
  <testcase name="TestMonotonicDecreasingList" classname="original.MonotonicTest" time="0"/>
  <testcase name="test_non_monotonic_increasing_decreasing" classname="original.MonotonicTest" time="0"/>
  <testcase name="testDuplicateElementsDecreasing" classname="original.MonotonicTest" time="0"/>
  <testcase name="TestEmptyList" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="TestMonotonicNullList" classname="original.MonotonicTest" time="0"/>
  <testcase name="TestMonotonicEmptyList" classname="original.MonotonicTest" time="0"/>
  <testcase name="testDuplicateElements" classname="original.MonotonicTest" time="0"/>
  <testcase name="TestMonotonicNonMonotonicList" classname="original.MonotonicTest" time="0"/>
  <testcase name="testNullPointer" classname="original.MonotonicTest" time="0"/>
  <testcase name="test_monotonic_decreasing" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="testMonotonicDecreasingList" classname="original.MonotonicTest" time="0"/>
  <testcase name="testMonotonicDecreasingList2" classname="original.MonotonicTest" time="0"/>
  <testcase name="testSingleElementListCorrected" classname="original.MonotonicTest" time="0"/>
  <testcase name="testNonMonotonic" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="test_Negative_Numbers_Test_6" classname="original.MonotonicTest" time="0"/>
  <testcase name="testMonotonicDecreasingWithDifferentValues" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="test_Single_Element_List_Test_4" classname="original.MonotonicTest" time="0"/>
  <testcase name="TestMonotonicDecreasing" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="testMonotonicIncreasingListUnique" classname="original.MonotonicTest" time="0"/>
  <testcase name="testSingleElementSequence" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="TestNonMonotonicList1Fixed" classname="original.MonotonicTest" time="0"/>
  <testcase name="testNullPointer2" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="TestSingleElementList" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="testNonMonotonicList" classname="original.MonotonicTest" time="0"/>
  <testcase name="TestEmptyList1" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="testMonotonicIncreasingSequence" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="testSingleElementList1" classname="original.MonotonicTest" time="0"/>
  <testcase name="testNonMonotonicListWithDirectionChange1" classname="original.MonotonicTest" time="0"/>
  <testcase name="test_Monotonic_Increasing_Test_1" classname="original.MonotonicTest" time="0"/>
  <testcase name="test_monotonic_increasing_1" classname="original.MonotonicTest" time="0"/>
  <testcase name="testSingleElementListUnique" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="TestNonMonotonicList" classname="original.MonotonicTest" time="0"/>
  <testcase name="testNullInput" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="testNothing" classname="original.MonotonicTest" time="0"/>
  <testcase name="test_two_elements" classname="original.MonotonicTest" time="0.001"/>
  <testcase name="testDuplicateElementsList" classname="original.MonotonicTest" time="0"/>
  <testcase name="TestMonotonicDecreasing1" classname="original.MonotonicTest" time="0"/>
  <testcase name="testNullListFixed" classname="original.MonotonicTest" time="0.001"/>
</testsuite>