/*
 * This file was automatically generated by EvoSuite
 * Wed May 14 22:03:45 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.SortedListSum;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class SortedListSum_ESTest extends SortedListSum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.offer("");
      linkedList0.add("");
      List<Object> list0 = SortedListSum.sortedListSum(linkedList0);
      assertEquals(2, list0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      List<Object> list0 = SortedListSum.sortedListSum(linkedList0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("");
      List<String> list0 = linkedList0.subList(1, 1);
      linkedList0.removeLast();
      // Undeclared exception!
      try { 
        SortedListSum.sortedListSum(list0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList$SubList", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        SortedListSum.sortedListSum((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.SortedListSum", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      List<String> list0 = List.of("", "2R>}O2hgfcw&}", "");
      List<Object> list1 = SortedListSum.sortedListSum(list0);
      assertEquals(2, list1.size());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SortedListSum sortedListSum0 = new SortedListSum();
  }
}
