/*
 * This file was automatically generated by EvoSuite
 * Wed May 14 19:50:20 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.MatchParens;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class MatchParens_ESTest extends MatchParens_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      List<String> list0 = List.of("Ay`bk}OD", "(DH", "&G;49", "Yes", "Ay`bk}OD", "No", "No", "");
      String string0 = MatchParens.matchParens(list0);
      assertEquals("No", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      List<String> list0 = List.of("\"!b+u|v($#lp_", "\"!b+u|v($#lp_");
      String string0 = MatchParens.matchParens(list0);
      assertEquals("No", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        MatchParens.matchParens((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.MatchParens", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      // Undeclared exception!
      try { 
        MatchParens.matchParens(linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      List<String> list0 = List.of();
      // Undeclared exception!
      try { 
        MatchParens.matchParens(list0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      List<String> list0 = List.of("4", "(");
      String string0 = MatchParens.matchParens(list0);
      assertEquals("Yes", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      List<String> list0 = List.of("(", "4");
      String string0 = MatchParens.matchParens(list0);
      assertEquals("Yes", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      List<String> list0 = List.of("(", "(");
      String string0 = MatchParens.matchParens(list0);
      assertEquals("No", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MatchParens matchParens0 = new MatchParens();
  }
}
