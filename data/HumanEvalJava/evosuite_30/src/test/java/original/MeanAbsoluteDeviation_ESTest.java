/*
 * This file was automatically generated by EvoSuite
 * Wed May 14 22:06:27 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.MeanAbsoluteDeviation;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class MeanAbsoluteDeviation_ESTest extends MeanAbsoluteDeviation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double((-2153.54945501027));
      linkedList0.add(double0);
      Double double1 = MeanAbsoluteDeviation.meanAbsoluteDeviation(linkedList0);
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double(28.54420929245982);
      linkedList0.add(double0);
      List<Double> list0 = linkedList0.subList(0, 0);
      linkedList0.pollFirst();
      // Undeclared exception!
      try { 
        MeanAbsoluteDeviation.meanAbsoluteDeviation(list0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList$SubList", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        MeanAbsoluteDeviation.meanAbsoluteDeviation((List<Double>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.MeanAbsoluteDeviation", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double(0.0);
      linkedList0.add(double0);
      Double double1 = MeanAbsoluteDeviation.meanAbsoluteDeviation(linkedList0);
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = MeanAbsoluteDeviation.meanAbsoluteDeviation(linkedList0);
      assertEquals(Double.NaN, (double)double0, 0.01);
      
      linkedList0.add(double0);
      Double double1 = MeanAbsoluteDeviation.meanAbsoluteDeviation(linkedList0);
      assertEquals(Double.NaN, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MeanAbsoluteDeviation meanAbsoluteDeviation0 = new MeanAbsoluteDeviation();
  }
}
