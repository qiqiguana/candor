package original;

import java.util.List;
import java.util.ArrayList;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
/**
* Test class of Intersection.
*/
class IntersectionTest {
    @Test
    void testIntersectionPrime() {
        List<Integer> interval1 = new ArrayList<>(List.of(-3, -1));
        List<Integer> interval2 = new ArrayList<>(List.of(-5, 5));
        String result = Intersection.intersection(interval1, interval2);
        assertEquals("YES", result);
    }
    
    @Test
        public void testNothing(){
            Intersection s = new Intersection();
            }
    @Test
    public void testIntersection_NoOverlap() {
    	List<Integer> interval1 = List.of(1, 2);
    	List<Integer> interval2 = List.of(3, 4);
    	String result = Intersection.intersection(interval1, interval2);
    	assertEquals("NO", result);
    }
    @Test
    public void testIntersection_SinglePointOverlap() {
    	List<Integer> interval1 = List.of(1, 2);
    	List<Integer> interval2 = List.of(2, 3);
    	String result = Intersection.intersection(interval1, interval2);
    	assertEquals("NO", result);
    }
    @Test
    public void testIntersection_NonPrimeLength() {
    	List<Integer> interval1 = List.of(1, 3);
    	List<Integer> interval2 = List.of(2, 4);
    	String result = Intersection.intersection(interval1, interval2);
    	assertEquals("NO", result);
    }
    @Test
    public void testIntersection_EmptyInterval() {
        List<Integer> interval1 = List.of();
        List<Integer> interval2 = List.of(1, 2);
        assertThrows(IndexOutOfBoundsException.class, () -> Intersection.intersection(interval1, interval2));
    }
    @Test
    public void testIntersection_ZeroLengthInterval() {
    	List<Integer> interval1 = List.of(0, 0);
    	List<Integer> interval2 = List.of(1, 2);
    	String result = Intersection.intersection(interval1, interval2);
    	assertEquals("NO", result);
    }
    @Test
    public void testIntersection_ValidInput_PrimeLength() {
        List<Integer> interval1 = List.of(-3, -1);
        List<Integer> interval2 = List.of(-5, 5);
        String result = Intersection.intersection(interval1, interval2);
        assertEquals("YES", result);
    }
    @Test
    public void test_isPrime_with_prime_number() {
        List<Integer> interval1 = List.of(1, 2);
        List<Integer> interval2 = List.of(1, 3);
        String result = Intersection.intersection(interval1, interval2);
        assertEquals("NO", result);
    }
                                    
}