package original;

import java.util.Arrays;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.ArrayList;

import java.util.List;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
/**
* Test class of ParseMusic.
*/
class ParseMusicTest {

    @Test
    void testParseMusic_EmptyString_ReturnsEmptyList() {
        String musicString = "";
        List<Object> expectedResult = new ArrayList<>();
        assertEquals(expectedResult, ParseMusic.parseMusic(musicString));
    }
    
    @Test
        public void testNothing(){
            ParseMusic s = new ParseMusic();
            }
    @Test
    public void testParseMusicEmptyString() {
    	List<Object> result = ParseMusic.parseMusic("");
    	assertTrue(result.isEmpty());
    }
    @Test
    public void testParseMusicWholeNote() {
    	List<Object> result = ParseMusic.parseMusic("o");
    	assertEquals(1, result.size());
    	assertEquals(4, result.get(0));
    }
    @Test
    public void testParseMusicHalfNote() {
    	List<Object> result = ParseMusic.parseMusic("o|");
    	assertEquals(1, result.size());
    	assertEquals(2, result.get(0));
    }
    @Test
    public void testParseMusicMultipleNotes2() {
        List<Object> result = ParseMusic.parseMusic("o|o|.|o");
        assertEquals(4, result.size());
        assertEquals(2, result.get(0));
        assertEquals(2, result.get(1));
        assertEquals(1, result.get(2));
        assertEquals(4, result.get(3));
    }
    @Test
    public void TestHalfNoteAtTheBeginningAndWholeNoteAtTheEndOfString2() {
        List<Object> result = ParseMusic.parseMusic("o| o");
        assertEquals(2, result.size());
        assertEquals(new ArrayList<>(Arrays.asList(2, 4)), result);
    }
    @Test
    public void TestHalfNoteFollowedByWholeNote() {
        List<Object> result = ParseMusic.parseMusic("o| o");
        assertEquals(new ArrayList<>(Arrays.asList(2, 4)), result);
    }
                                    
}