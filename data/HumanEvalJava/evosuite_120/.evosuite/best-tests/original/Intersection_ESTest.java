/*
 * This file was automatically generated by EvoSuite
 * Wed May 14 20:36:48 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Intersection;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Intersection_ESTest extends Intersection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer(2);
      Integer integer1 = new Integer(0);
      List<Integer> list0 = List.of(integer1, integer0, integer0);
      String string0 = Intersection.intersection(list0, list0);
      assertEquals("YES", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer(1);
      List<Integer> list0 = List.of(integer0, integer0, integer0, integer0, integer0, integer0, integer0, integer0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>(list0);
      String string0 = Intersection.intersection(linkedList0, list0);
      assertEquals("NO", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer((-1921866979));
      Integer integer1 = new Integer(2638);
      List<Integer> list0 = List.of(integer0, integer1, integer0);
      // Undeclared exception!
      Intersection.intersection(list0, list0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        Intersection.intersection((List<Integer>) null, (List<Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Intersection", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Integer integer0 = new Integer((-14));
      List<Integer> list0 = List.of(integer0, integer0, integer0, integer0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      // Undeclared exception!
      try { 
        Intersection.intersection(list0, linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      List<Integer> list0 = List.of();
      // Undeclared exception!
      try { 
        Intersection.intersection(list0, list0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Integer integer0 = new Integer((-14));
      Integer integer1 = new Integer(11);
      List<Integer> list0 = List.of(integer0, integer1, integer1, integer1);
      String string0 = Intersection.intersection(list0, list0);
      assertEquals("NO", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Integer integer0 = new Integer((-948));
      Integer integer1 = new Integer((-2703));
      List<Integer> list0 = List.of(integer0, integer1, integer0);
      String string0 = Intersection.intersection(list0, list0);
      assertEquals("NO", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Intersection intersection0 = new Intersection();
  }
}
