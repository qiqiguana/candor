/*
 * This file was automatically generated by EvoSuite
 * Wed May 14 22:23:38 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.OrderByPoints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OrderByPoints_ESTest extends OrderByPoints_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer(0);
      List<Integer> list0 = List.of(integer0, integer0, integer0, integer0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>(list0);
      List<Object> list1 = OrderByPoints.orderByPoints(linkedList0);
      assertEquals(4, list1.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      List<Object> list0 = OrderByPoints.orderByPoints(linkedList0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      List<Object> list0 = List.of();
      // Undeclared exception!
      try { 
        OrderByPoints.orderByPoints(list0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ImmutableCollections", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) null);
      Integer integer0 = new Integer(443);
      linkedList0.add((Object) integer0);
      // Undeclared exception!
      try { 
        OrderByPoints.orderByPoints(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.OrderByPoints$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Object object0 = new Object();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Integer integer0 = new Integer((-1370));
      linkedList0.add((Object) integer0);
      linkedList0.add(object0);
      // Undeclared exception!
      try { 
        OrderByPoints.orderByPoints(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class java.lang.Integer (java.lang.Object and java.lang.Integer are in module java.base of loader 'bootstrap')
         //
         verifyException("original.OrderByPoints$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Integer integer0 = new Integer((-1370));
      Integer integer1 = new Integer(211);
      linkedList0.add((Object) integer1);
      linkedList0.add((Object) integer0);
      List<Object> list0 = OrderByPoints.orderByPoints(linkedList0);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      OrderByPoints orderByPoints0 = new OrderByPoints();
  }
}
