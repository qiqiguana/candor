/*
 * This file was automatically generated by EvoSuite
 * Wed May 14 21:49:23 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.SortArray1;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SortArray1_ESTest extends SortArray1_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer(4);
      Integer integer1 = new Integer((-1));
      List<Object> list0 = List.of((Object) integer0, (Object) integer1);
      List<Object> list1 = SortArray1.sortArray(list0);
      assertFalse(list1.equals((Object)list0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer(1);
      List<Object> list0 = List.of((Object) integer0, (Object) integer0);
      List<Object> list1 = SortArray1.sortArray(list0);
      assertEquals(2, list1.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        SortArray1.sortArray((List<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.SortArray1", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer((-1435));
      List<Object> list0 = List.of((Object) integer0, (Object) integer1);
      List<Object> list1 = SortArray1.sortArray(list0);
      assertFalse(list1.equals((Object)list0));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      List<Object> list0 = SortArray1.sortArray(linkedList0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SortArray1 sortArray1_0 = new SortArray1();
      List<Object> list0 = List.of((Object) sortArray1_0, (Object) sortArray1_0, (Object) sortArray1_0, (Object) sortArray1_0);
      // Undeclared exception!
      try { 
        SortArray1.sortArray(list0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class original.SortArray1 cannot be cast to class java.lang.Integer (original.SortArray1 is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @a562130; java.lang.Integer is in module java.base of loader 'bootstrap')
         //
         verifyException("original.SortArray1", e);
      }
  }
}
