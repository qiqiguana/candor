/*
 * This file was automatically generated by EvoSuite
 * Sat May 24 20:12:59 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution0744;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class Solution0744_ESTest extends Solution0744_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution0744 solution0744_0 = new Solution0744();
      char[] charArray0 = new char[6];
      charArray0[4] = '@';
      char char0 = solution0744_0.nextGreatestLetter(charArray0, '?');
      assertEquals('@', char0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution0744 solution0744_0 = new Solution0744();
      char[] charArray0 = new char[1];
      charArray0[0] = '1';
      char char0 = solution0744_0.nextGreatestLetter(charArray0, '1');
      assertEquals('1', char0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution0744 solution0744_0 = new Solution0744();
      // Undeclared exception!
      try { 
        solution0744_0.nextGreatestLetter((char[]) null, '+');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution0744 solution0744_0 = new Solution0744();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        solution0744_0.nextGreatestLetter(charArray0, 'L');
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("original.Solution0744", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution0744 solution0744_0 = new Solution0744();
      char[] charArray0 = new char[6];
      charArray0[0] = 'K';
      charArray0[2] = 'f';
      char char0 = solution0744_0.nextGreatestLetter(charArray0, 'J');
      assertEquals('K', char0);
  }
}
