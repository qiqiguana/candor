/*
 * This file was automatically generated by EvoSuite
 * Sat May 24 19:01:24 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution3219;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class Solution3219_ESTest extends Solution3219_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution3219 solution3219_0 = new Solution3219();
      int[] intArray0 = new int[3];
      long long0 = solution3219_0.minimumCost(2, 2, intArray0, intArray0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution3219 solution3219_0 = new Solution3219();
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        solution3219_0.minimumCost(2, 684, intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 682 out of bounds for length 1
         //
         verifyException("original.Solution3219", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution3219 solution3219_0 = new Solution3219();
      int[] intArray0 = new int[3];
      // Undeclared exception!
      try { 
        solution3219_0.minimumCost(2410, 2448, intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2408 out of bounds for length 3
         //
         verifyException("original.Solution3219", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution3219 solution3219_0 = new Solution3219();
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        solution3219_0.minimumCost((-1), 1401, intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1399 out of bounds for length 1
         //
         verifyException("original.Solution3219", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution3219 solution3219_0 = new Solution3219();
      int[] intArray0 = new int[1];
      intArray0[0] = 977;
      long long0 = solution3219_0.minimumCost(2, 2, intArray0, intArray0);
      assertEquals(2931L, long0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Solution3219 solution3219_0 = new Solution3219();
      // Undeclared exception!
      try { 
        solution3219_0.minimumCost(3, (-452), (int[]) null, (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Solution3219 solution3219_0 = new Solution3219();
      int[] intArray0 = new int[3];
      int[] intArray1 = new int[4];
      intArray1[0] = (-1953);
      long long0 = solution3219_0.minimumCost(2, 2, intArray0, intArray1);
      assertEquals((-3906L), long0);
  }
}
