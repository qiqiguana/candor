/*
 * This file was automatically generated by EvoSuite
 * Sat May 24 20:00:18 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution3264;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class Solution3264_ESTest extends Solution3264_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution3264 solution3264_0 = new Solution3264();
      int[] intArray0 = new int[2];
      int[] intArray1 = solution3264_0.getFinalState(intArray0, 0, (-1106));
      assertSame(intArray1, intArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution3264 solution3264_0 = new Solution3264();
      int[] intArray0 = new int[9];
      intArray0[4] = (-318);
      int[] intArray1 = solution3264_0.getFinalState(intArray0, 188, 1);
      assertArrayEquals(new int[] {0, 0, 0, 0, (-318), 0, 0, 0, 0}, intArray1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution3264 solution3264_0 = new Solution3264();
      int[] intArray0 = new int[5];
      intArray0[1] = (-1);
      int[] intArray1 = solution3264_0.getFinalState(intArray0, (-1173), (-1));
      assertArrayEquals(new int[] {0, (-1), 0, 0, 0}, intArray1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution3264 solution3264_0 = new Solution3264();
      int[] intArray0 = new int[0];
      int[] intArray1 = solution3264_0.getFinalState(intArray0, 0, 0);
      assertArrayEquals(new int[] {}, intArray1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution3264 solution3264_0 = new Solution3264();
      int[] intArray0 = new int[4];
      // Undeclared exception!
      solution3264_0.getFinalState(intArray0, 1075788723, 1075788723);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Solution3264 solution3264_0 = new Solution3264();
      // Undeclared exception!
      try { 
        solution3264_0.getFinalState((int[]) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
