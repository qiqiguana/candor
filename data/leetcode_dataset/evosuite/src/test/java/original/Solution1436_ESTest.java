/*
 * This file was automatically generated by EvoSuite
 * Sat May 24 19:38:07 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution1436;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class Solution1436_ESTest extends Solution1436_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution1436 solution1436_0 = new Solution1436();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      List<List<String>> list0 = List.of((List<String>) linkedList0, (List<String>) linkedList0, (List<String>) linkedList0, (List<String>) linkedList0, (List<String>) linkedList0, (List<String>) linkedList0, (List<String>) linkedList0);
      linkedList0.add("");
      linkedList0.add((String) null);
      String string0 = solution1436_0.destCity(list0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution1436 solution1436_0 = new Solution1436();
      List<String> list0 = List.of("original.Solution1436", "^X+3", "original.Solution1436");
      List<List<String>> list1 = List.of(list0, list0, list0);
      String string0 = solution1436_0.destCity(list1);
      assertEquals("^X+3", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution1436 solution1436_0 = new Solution1436();
      // Undeclared exception!
      try { 
        solution1436_0.destCity((List<List<String>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution1436", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution1436 solution1436_0 = new Solution1436();
      LinkedList<List<String>> linkedList0 = new LinkedList<List<String>>();
      // Undeclared exception!
      try { 
        solution1436_0.destCity(linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution1436 solution1436_0 = new Solution1436();
      LinkedList<List<String>> linkedList0 = new LinkedList<List<String>>();
      List<String> list0 = List.of(" ", "", "", "", " ", "h", "$AX)u|)J9P:,-Wa");
      linkedList0.add(list0);
      String string0 = solution1436_0.destCity(linkedList0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Solution1436 solution1436_0 = new Solution1436();
      List<String> list0 = List.of("/bIAJZ$= >5[", "/bIAJZ$= >5[", "/bIAJZ$= >5[");
      List<List<String>> list1 = List.of(list0, list0, list0);
      // Undeclared exception!
      try { 
        solution1436_0.destCity(list1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
