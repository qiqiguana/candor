/*
 * This file was automatically generated by EvoSuite
 * Sat May 24 18:45:48 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution1478;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution1478_ESTest extends Solution1478_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution1478 solution1478_0 = new Solution1478();
      int[] intArray0 = new int[8];
      intArray0[0] = 1477;
      intArray0[1] = 1073741824;
      int int0 = solution1478_0.minDistance(intArray0, 8);
      assertEquals(Integer.MIN_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution1478 solution1478_0 = new Solution1478();
      int[] intArray0 = new int[33];
      // Undeclared exception!
      solution1478_0.minDistance(intArray0, 3455);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution1478 solution1478_0 = new Solution1478();
      // Undeclared exception!
      try { 
        solution1478_0.minDistance((int[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution1478 solution1478_0 = new Solution1478();
      int[] intArray0 = new int[7];
      // Undeclared exception!
      try { 
        solution1478_0.minDistance(intArray0, (-154));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -153
         //
         verifyException("original.Solution1478", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution1478 solution1478_0 = new Solution1478();
      int[] intArray0 = new int[4];
      // Undeclared exception!
      try { 
        solution1478_0.minDistance(intArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Solution1478 solution1478_0 = new Solution1478();
      int[] intArray0 = new int[8];
      int int0 = solution1478_0.minDistance(intArray0, 8);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Solution1478 solution1478_0 = new Solution1478();
      int[] intArray0 = new int[1];
      int int0 = solution1478_0.minDistance(intArray0, 1477);
      assertEquals(1073741824, int0);
  }
}
