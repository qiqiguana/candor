/*
 * This file was automatically generated by EvoSuite
 * Sat May 24 18:40:34 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution2115;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution2115_ESTest extends Solution2115_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution2115 solution2115_0 = new Solution2115();
      String[] stringArray0 = new String[2];
      List<String> list0 = List.of("", "t", "", "t", "'I-ER", "McR'1I]5lBkXeh>Iq'", "McR'1I]5lBkXeh>Iq'", "dief*2%V7}M VkXf");
      List<List<String>> list1 = List.of(list0, list0, list0, list0, list0, list0, list0, list0, list0);
      String[] stringArray1 = new String[2];
      // Undeclared exception!
      try { 
        solution2115_0.findAllRecipes(stringArray0, list1, stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayDeque", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution2115 solution2115_0 = new Solution2115();
      String[] stringArray0 = new String[1];
      LinkedList<List<String>> linkedList0 = new LinkedList<List<String>>();
      // Undeclared exception!
      try { 
        solution2115_0.findAllRecipes(stringArray0, linkedList0, stringArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[1];
      Solution2115 solution2115_0 = new Solution2115();
      List<List<String>> list0 = List.of();
      // Undeclared exception!
      try { 
        solution2115_0.findAllRecipes(stringArray0, list0, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution2115 solution2115_0 = new Solution2115();
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">1Kq5.Y'UJH8rR)rW|";
      List<String> list0 = List.of(">1Kq5.Y'UJH8rR)rW|", ">1Kq5.Y'UJH8rR)rW|");
      List<List<String>> list1 = List.of(list0, list0, list0, list0, list0, list0, list0, list0, list0, list0);
      List<String> list2 = solution2115_0.findAllRecipes(stringArray0, list1, stringArray0);
      assertTrue(list2.contains(">1Kq5.Y'UJH8rR)rW|"));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution2115 solution2115_0 = new Solution2115();
      String[] stringArray0 = new String[0];
      LinkedList<List<String>> linkedList0 = new LinkedList<List<String>>();
      List<String> list0 = solution2115_0.findAllRecipes(stringArray0, linkedList0, stringArray0);
      assertEquals(0, list0.size());
  }
}
