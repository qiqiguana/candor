/*
 * This file was automatically generated by EvoSuite
 * Sat May 24 18:38:01 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution1129;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution1129_ESTest extends Solution1129_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution1129 solution1129_0 = new Solution1129();
      int[][] intArray0 = new int[1][8];
      int[][] intArray1 = new int[1][4];
      int[] intArray2 = solution1129_0.shortestAlternatingPaths(450, intArray1, intArray0);
      assertEquals(450, intArray2.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution1129 solution1129_0 = new Solution1129();
      // Undeclared exception!
      try { 
        solution1129_0.shortestAlternatingPaths(2034, (int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution1129", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution1129 solution1129_0 = new Solution1129();
      int[][] intArray0 = new int[1][7];
      // Undeclared exception!
      try { 
        solution1129_0.shortestAlternatingPaths((-1567), intArray0, intArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1567
         //
         verifyException("original.Solution1129", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution1129 solution1129_0 = new Solution1129();
      int[][] intArray0 = new int[1][8];
      int[] intArray1 = new int[6];
      intArray1[0] = 450;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        solution1129_0.shortestAlternatingPaths(450, intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 450 out of bounds for length 450
         //
         verifyException("original.Solution1129", e);
      }
  }
}
