/*
 * This file was automatically generated by EvoSuite
 * Sat May 24 19:26:09 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution1901;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution1901_ESTest extends Solution1901_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution1901 solution1901_0 = new Solution1901();
      int[][] intArray0 = new int[3][4];
      int[] intArray1 = new int[0];
      intArray0[1] = intArray1;
      // Undeclared exception!
      try { 
        solution1901_0.findPeakGrid(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("original.Solution1901", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution1901 solution1901_0 = new Solution1901();
      int[] intArray0 = new int[6];
      intArray0[3] = 504;
      int[][] intArray1 = new int[3][7];
      intArray1[0] = intArray0;
      intArray1[1] = intArray1[0];
      int[] intArray2 = solution1901_0.findPeakGrid(intArray1);
      assertArrayEquals(new int[] {1, 3}, intArray2);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution1901 solution1901_0 = new Solution1901();
      int[][] intArray0 = new int[3][7];
      int[] intArray1 = solution1901_0.findPeakGrid(intArray0);
      assertArrayEquals(new int[] {2, 0}, intArray1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution1901 solution1901_0 = new Solution1901();
      // Undeclared exception!
      try { 
        solution1901_0.findPeakGrid((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution1901", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution1901 solution1901_0 = new Solution1901();
      int[][] intArray0 = new int[1][9];
      int[] intArray1 = new int[6];
      intArray1[3] = 504;
      intArray0[0] = intArray1;
      int[] intArray2 = solution1901_0.findPeakGrid(intArray0);
      assertArrayEquals(new int[] {0, 3}, intArray2);
      
      int[][] intArray3 = new int[3][7];
      intArray3[0] = intArray2;
      int[] intArray4 = new int[9];
      intArray4[1] = 504;
      intArray3[1] = intArray4;
      int[] intArray5 = solution1901_0.findPeakGrid(intArray3);
      assertArrayEquals(new int[] {1, 1}, intArray5);
  }
}
