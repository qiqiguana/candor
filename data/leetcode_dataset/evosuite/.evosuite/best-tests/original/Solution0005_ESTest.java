/*
 * This file was automatically generated by EvoSuite
 * Sat May 24 18:53:06 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution0005;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution0005_ESTest extends Solution0005_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution0005 solution0005_0 = new Solution0005();
      String string0 = solution0005_0.longestPalindrome("CC9]|VLSl^SsD ");
      assertEquals("CC", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution0005 solution0005_0 = new Solution0005();
      String string0 = solution0005_0.longestPalindrome("HJEbW``5V5ZuX=");
      assertEquals("5V5", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution0005 solution0005_0 = new Solution0005();
      // Undeclared exception!
      try { 
        solution0005_0.longestPalindrome("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution0005 solution0005_0 = new Solution0005();
      // Undeclared exception!
      try { 
        solution0005_0.longestPalindrome((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution0005", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution0005 solution0005_0 = new Solution0005();
      String string0 = solution0005_0.longestPalindrome("original.Solution0005");
      assertEquals("000", string0);
  }
}
