/*
 * This file was automatically generated by EvoSuite
 * Sat May 24 19:44:32 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution2538;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution2538_ESTest extends Solution2538_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution2538 solution2538_0 = new Solution2538();
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[2];
      intArray1[0] = 1;
      long long0 = solution2538_0.maxOutput(1, intArray0, intArray1);
      assertEquals(2L, long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution2538 solution2538_0 = new Solution2538();
      int[][] intArray0 = new int[50][9];
      // Undeclared exception!
      solution2538_0.maxOutput(1592, intArray0, intArray0[0]);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution2538 solution2538_0 = new Solution2538();
      // Undeclared exception!
      try { 
        solution2538_0.maxOutput(1222, (int[][]) null, (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution2538", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution2538 solution2538_0 = new Solution2538();
      int[][] intArray0 = new int[1][9];
      // Undeclared exception!
      try { 
        solution2538_0.maxOutput((-1919), intArray0, intArray0[0]);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1919
         //
         verifyException("original.Solution2538", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution2538 solution2538_0 = new Solution2538();
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[5];
      // Undeclared exception!
      try { 
        solution2538_0.maxOutput(0, intArray0, intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("original.Solution2538", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Solution2538 solution2538_0 = new Solution2538();
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      int[][] intArray1 = new int[4][7];
      intArray1[1] = intArray0;
      long long0 = solution2538_0.maxOutput(2545, intArray1, intArray0);
      assertEquals(3L, long0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Solution2538 solution2538_0 = new Solution2538();
      int[][] intArray0 = new int[2][9];
      long long0 = solution2538_0.maxOutput(1691, intArray0, intArray0[0]);
      assertEquals(0L, long0);
  }
}
