/*
 * This file was automatically generated by EvoSuite
 * Sat May 24 19:51:51 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution1466;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution1466_ESTest extends Solution1466_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution1466 solution1466_0 = new Solution1466();
      int[][] intArray0 = new int[2][3];
      int[] intArray1 = new int[4];
      intArray1[1] = 16;
      intArray0[1] = intArray1;
      solution1466_0.minReorder(27, intArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution1466 solution1466_0 = new Solution1466();
      int[][] intArray0 = new int[1][7];
      int[] intArray1 = new int[16];
      intArray1[0] = 154;
      intArray0[0] = intArray1;
      int int0 = solution1466_0.minReorder(348, intArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution1466 solution1466_0 = new Solution1466();
      // Undeclared exception!
      try { 
        solution1466_0.minReorder(1020, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution1466", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution1466 solution1466_0 = new Solution1466();
      int[][] intArray0 = new int[0][2];
      // Undeclared exception!
      try { 
        solution1466_0.minReorder((-1), intArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1
         //
         verifyException("original.Solution1466", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution1466 solution1466_0 = new Solution1466();
      int[][] intArray0 = new int[2][3];
      // Undeclared exception!
      try { 
        solution1466_0.minReorder(0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("original.Solution1466", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int[][] intArray0 = new int[52][6];
      Solution1466 solution1466_0 = new Solution1466();
      // Undeclared exception!
      solution1466_0.minReorder(1523, intArray0);
  }
}
