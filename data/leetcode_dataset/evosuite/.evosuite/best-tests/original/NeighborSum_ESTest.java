/*
 * This file was automatically generated by EvoSuite
 * Sat May 24 18:48:29 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.NeighborSum;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NeighborSum_ESTest extends NeighborSum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[][] intArray0 = new int[2][1];
      int[] intArray1 = new int[6];
      intArray1[4] = 3286;
      intArray0[0] = intArray1;
      intArray0[1] = intArray1;
      NeighborSum neighborSum0 = new NeighborSum(intArray0);
      int int0 = neighborSum0.diagonalSum(3286);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int[][] intArray0 = new int[2][1];
      int[] intArray1 = new int[6];
      intArray1[0] = (-1981);
      intArray1[1] = 5;
      intArray0[0] = intArray1;
      intArray0[1] = intArray1;
      NeighborSum neighborSum0 = new NeighborSum(intArray0);
      int int0 = neighborSum0.diagonalSum((-1981));
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      int[][] intArray0 = new int[2][1];
      int[] intArray1 = new int[6];
      intArray1[0] = (-1981);
      intArray1[1] = 5;
      intArray0[0] = intArray1;
      intArray0[1] = intArray1;
      NeighborSum neighborSum0 = new NeighborSum(intArray0);
      int int0 = neighborSum0.diagonalSum(5);
      assertEquals((-1981), int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int[][] intArray0 = new int[2][1];
      int[] intArray1 = new int[6];
      intArray1[4] = 3286;
      intArray0[0] = intArray1;
      intArray0[1] = intArray1;
      NeighborSum neighborSum0 = new NeighborSum(intArray0);
      int int0 = neighborSum0.adjacentSum(0);
      assertEquals(3286, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[5];
      intArray1[2] = (-1391);
      intArray1[4] = 991;
      intArray0[0] = intArray1;
      NeighborSum neighborSum0 = new NeighborSum(intArray0);
      int int0 = neighborSum0.adjacentSum(0);
      assertEquals((-400), int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int[][] intArray0 = new int[1][4];
      NeighborSum neighborSum0 = new NeighborSum(intArray0);
      // Undeclared exception!
      try { 
        neighborSum0.adjacentSum((-1645));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.NeighborSum", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NeighborSum neighborSum0 = null;
      try {
        neighborSum0 = new NeighborSum((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.NeighborSum", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      NeighborSum neighborSum0 = null;
      try {
        neighborSum0 = new NeighborSum(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("original.NeighborSum", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[5];
      intArray1[0] = (-261);
      intArray0[0] = intArray1;
      NeighborSum neighborSum0 = new NeighborSum(intArray0);
      int int0 = neighborSum0.adjacentSum((-261));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      int[][] intArray0 = new int[2][1];
      NeighborSum neighborSum0 = new NeighborSum(intArray0);
      // Undeclared exception!
      try { 
        neighborSum0.diagonalSum((-1981));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.NeighborSum", e);
      }
  }
}
