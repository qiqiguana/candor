/*
 * This file was automatically generated by EvoSuite
 * Sat May 24 17:40:34 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution1307;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution1307_ESTest extends Solution1307_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution1307 solution1307_0 = new Solution1307();
      assertNotNull(solution1307_0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "#beCS>]uZ)+@Tm";
      // Undeclared exception!
      solution1307_0.isSolvable(stringArray0, "#beCS>]uZ)+@Tm");
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution1307 solution1307_0 = new Solution1307();
      assertNotNull(solution1307_0);
      
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try { 
        solution1307_0.isSolvable(stringArray0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution1307", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution1307 solution1307_0 = new Solution1307();
      assertNotNull(solution1307_0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "H{";
      stringArray0[3] = "H{";
      stringArray0[4] = "H{";
      stringArray0[5] = "H{";
      stringArray0[6] = "H{";
      boolean boolean0 = solution1307_0.isSolvable(stringArray0, "j(5xn_d4NE]_/OfH");
      assertEquals(7, stringArray0.length);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution1307 solution1307_0 = new Solution1307();
      assertNotNull(solution1307_0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "H{";
      stringArray0[1] = "H{";
      boolean boolean0 = solution1307_0.isSolvable(stringArray0, "");
      assertEquals(2, stringArray0.length);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution1307 solution1307_0 = new Solution1307();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "f";
      boolean boolean0 = solution1307_0.isSolvable(stringArray0, "f");
      assertTrue(boolean0);
  }
}
