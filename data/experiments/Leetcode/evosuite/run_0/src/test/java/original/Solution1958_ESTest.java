/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 00:23:21 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution1958;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution1958_ESTest extends Solution1958_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution1958 solution1958_0 = new Solution1958();
      assertNotNull(solution1958_0);
      
      char[] charArray0 = new char[3];
      charArray0[0] = 'N';
      char[][] charArray1 = new char[8][8];
      charArray1[2] = charArray0;
      boolean boolean0 = solution1958_0.checkMove(charArray1, 0, 0, '0');
      assertFalse(boolean0);
      assertEquals(8, charArray1.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution1958 solution1958_0 = new Solution1958();
      assertNotNull(solution1958_0);
      
      char[][] charArray0 = new char[1][9];
      boolean boolean0 = solution1958_0.checkMove(charArray0, 86, 86, 'T');
      assertFalse(boolean0);
      assertEquals(1, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution1958 solution1958_0 = new Solution1958();
      assertNotNull(solution1958_0);
      
      char[][] charArray0 = new char[1][9];
      boolean boolean0 = solution1958_0.checkMove(charArray0, 0, 1814, '.');
      assertFalse(boolean0);
      assertEquals(1, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution1958 solution1958_0 = new Solution1958();
      assertNotNull(solution1958_0);
      
      // Undeclared exception!
      try { 
        solution1958_0.checkMove((char[][]) null, (-1), (-1), 'J');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution1958", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution1958 solution1958_0 = new Solution1958();
      char[][] charArray0 = new char[1][3];
      char[] charArray1 = new char[9];
      charArray1[2] = '.';
      charArray0[0] = charArray1;
      // Undeclared exception!
      try { 
        solution1958_0.checkMove(charArray0, 0, 0, '{');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("original.Solution1958", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Solution1958 solution1958_0 = new Solution1958();
      char[] charArray0 = new char[3];
      charArray0[1] = '0';
      char[][] charArray1 = new char[8][8];
      charArray1[0] = charArray0;
      boolean boolean0 = solution1958_0.checkMove(charArray1, 0, 0, '0');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Solution1958 solution1958_0 = new Solution1958();
      char[][] charArray0 = new char[1][3];
      char[] charArray1 = new char[9];
      charArray1[4] = '{';
      charArray0[0] = charArray1;
      boolean boolean0 = solution1958_0.checkMove(charArray0, 0, 0, '{');
      assertTrue(boolean0);
  }
}
