/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 00:52:58 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution1449;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution1449_ESTest extends Solution1449_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution1449 solution1449_0 = new Solution1449();
      int[] intArray0 = new int[9];
      // Undeclared exception!
      solution1449_0.largestNumber(intArray0, 1805);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution1449 solution1449_0 = new Solution1449();
      // Undeclared exception!
      try { 
        solution1449_0.largestNumber((int[]) null, 1061);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution1449", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution1449 solution1449_0 = new Solution1449();
      int[] intArray0 = new int[9];
      // Undeclared exception!
      try { 
        solution1449_0.largestNumber(intArray0, (-1073741824));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1073741823
         //
         verifyException("original.Solution1449", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution1449 solution1449_0 = new Solution1449();
      int[] intArray0 = new int[9];
      String string0 = solution1449_0.largestNumber(intArray0, 77);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution1449 solution1449_0 = new Solution1449();
      int[] intArray0 = new int[12];
      intArray0[0] = 230;
      String string0 = solution1449_0.largestNumber(intArray0, 230);
      assertEquals("1", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Solution1449 solution1449_0 = new Solution1449();
      int[] intArray0 = new int[9];
      String string0 = solution1449_0.largestNumber(intArray0, 0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Solution1449 solution1449_0 = new Solution1449();
      int[] intArray0 = new int[7];
      // Undeclared exception!
      try { 
        solution1449_0.largestNumber(intArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 7 out of bounds for length 7
         //
         verifyException("original.Solution1449", e);
      }
  }
}
