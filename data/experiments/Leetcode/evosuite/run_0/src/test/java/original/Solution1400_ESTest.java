/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 01:53:09 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution1400;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution1400_ESTest extends Solution1400_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution1400 solution1400_0 = new Solution1400();
      boolean boolean0 = solution1400_0.canConstruct("", 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution1400 solution1400_0 = new Solution1400();
      // Undeclared exception!
      try { 
        solution1400_0.canConstruct((String) null, (-701));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution1400", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution1400 solution1400_0 = new Solution1400();
      // Undeclared exception!
      try { 
        solution1400_0.canConstruct("original.Solution1400", 4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -51 out of bounds for length 26
         //
         verifyException("original.Solution1400", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution1400 solution1400_0 = new Solution1400();
      boolean boolean0 = solution1400_0.canConstruct("ck", 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution1400 solution1400_0 = new Solution1400();
      boolean boolean0 = solution1400_0.canConstruct("ENH~#=*P@(/h%x", 26);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Solution1400 solution1400_0 = new Solution1400();
      boolean boolean0 = solution1400_0.canConstruct("cxxi", 4);
      assertTrue(boolean0);
  }
}
