/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 02:15:01 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution3082;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution3082_ESTest extends Solution3082_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution3082 solution3082_0 = new Solution3082();
      // Undeclared exception!
      try { 
        solution3082_0.sumOfPower((int[]) null, (-2536));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution3082", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution3082 solution3082_0 = new Solution3082();
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        solution3082_0.sumOfPower(intArray0, (-27));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -26
         //
         verifyException("original.Solution3082", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution3082 solution3082_0 = new Solution3082();
      int[] intArray0 = new int[4];
      intArray0[1] = 3902;
      // Undeclared exception!
      solution3082_0.sumOfPower(intArray0, 3902);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution3082 solution3082_0 = new Solution3082();
      int[] intArray0 = new int[0];
      solution3082_0.sumOfPower(intArray0, 12);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution3082 solution3082_0 = new Solution3082();
      int[] intArray0 = new int[1];
      intArray0[0] = 8;
      solution3082_0.sumOfPower(intArray0, 8);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Solution3082 solution3082_0 = new Solution3082();
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        solution3082_0.sumOfPower(intArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("original.Solution3082", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Solution3082 solution3082_0 = new Solution3082();
      int[] intArray0 = new int[4];
      int int0 = 1;
      intArray0[0] = 1;
      intArray0[1] = 2771;
      int int1 = 0;
      intArray0[2] = 0;
      int int2 = 1950;
      intArray0[3] = 1950;
      solution3082_0.sumOfPower(intArray0, 0);
      solution3082_0.sumOfPower(intArray0, 24);
      solution3082_0.sumOfPower(intArray0, 0);
      solution3082_0.sumOfPower(intArray0, 1950);
      // Undeclared exception!
      solution3082_0.sumOfPower(intArray0, 1950);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Solution3082 solution3082_0 = new Solution3082();
      int[] intArray0 = new int[1];
      solution3082_0.sumOfPower(intArray0, 12);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Solution3082 solution3082_0 = new Solution3082();
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = (-950);
      int int0 = (-1015);
      intArray0[2] = (-1015);
      int int1 = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 732;
      int int2 = 175;
      intArray0[6] = 175;
      intArray0[7] = 5155;
      // Undeclared exception!
      try { 
        solution3082_0.sumOfPower(intArray0, 5155);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 5156 out of bounds for length 5156
         //
         verifyException("original.Solution3082", e);
      }
  }
}
