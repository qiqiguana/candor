/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 00:19:32 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution0321;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution0321_ESTest extends Solution0321_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[6];
      int int0 = 376;
      intArray0[0] = 376;
      intArray0[1] = 1;
      intArray0[2] = 914;
      intArray0[3] = (-1);
      intArray0[4] = 330;
      intArray0[5] = 0;
      int[] intArray1 = solution0321_0.maxNumber(intArray0, intArray0, 1);
      int[] intArray2 = solution0321_0.maxNumber(intArray1, intArray0, 1);
      int[] intArray3 = solution0321_0.maxNumber(intArray1, intArray2, 1);
      int[] intArray4 = solution0321_0.maxNumber(intArray2, intArray1, 430);
      solution0321_0.maxNumber(intArray1, intArray4, 1);
      int[] intArray5 = solution0321_0.maxNumber(intArray3, intArray4, 1);
      solution0321_0.maxNumber(intArray5, intArray5, 1);
      int[] intArray6 = solution0321_0.maxNumber(intArray3, intArray3, 378);
      int[] intArray7 = solution0321_0.maxNumber(intArray6, intArray6, 914);
      // Undeclared exception!
      solution0321_0.maxNumber(intArray6, intArray7, 1187);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[3];
      intArray0[0] = 379;
      intArray0[1] = 0;
      intArray0[2] = (-863);
      int[] intArray1 = solution0321_0.maxNumber(intArray0, intArray0, 379);
      int[] intArray2 = solution0321_0.maxNumber(intArray1, intArray0, 379);
      solution0321_0.maxNumber(intArray2, intArray0, 0);
      solution0321_0.maxNumber(intArray0, intArray2, 0);
      int[] intArray3 = new int[9];
      intArray3[0] = 0;
      intArray3[1] = 379;
      intArray3[2] = 379;
      intArray3[3] = (-863);
      intArray3[4] = 0;
      intArray3[5] = 379;
      intArray3[6] = 379;
      intArray3[7] = 379;
      intArray3[8] = 0;
      solution0321_0.maxNumber(intArray3, intArray0, 379);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[4];
      int[] intArray1 = solution0321_0.maxNumber(intArray0, intArray0, 550);
      // Undeclared exception!
      solution0321_0.maxNumber(intArray1, intArray1, 550);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[4];
      intArray0[0] = 1913;
      int int0 = (-450);
      intArray0[1] = (-450);
      int int1 = 335;
      intArray0[2] = 335;
      int int2 = 2797;
      intArray0[3] = 2797;
      int[] intArray1 = solution0321_0.maxNumber(intArray0, intArray0, 1913);
      int[] intArray2 = solution0321_0.maxNumber(intArray0, intArray1, 2797);
      solution0321_0.maxNumber(intArray1, intArray0, 335);
      // Undeclared exception!
      solution0321_0.maxNumber(intArray2, intArray0, 335);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[5];
      int int0 = 1340;
      intArray0[0] = 1340;
      intArray0[1] = (-446);
      intArray0[2] = 2555;
      intArray0[3] = 1;
      int int1 = 0;
      intArray0[4] = 0;
      int int2 = 0;
      int[] intArray1 = solution0321_0.maxNumber(intArray0, intArray0, 0);
      int int3 = 641;
      int[] intArray2 = solution0321_0.maxNumber(intArray0, intArray1, 641);
      int int4 = 1707;
      int[] intArray3 = solution0321_0.maxNumber(intArray2, intArray0, 1707);
      solution0321_0.maxNumber(intArray3, intArray1, 0);
      int int5 = (-1713);
      // Undeclared exception!
      try { 
        solution0321_0.maxNumber(intArray0, intArray1, (-1713));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1713
         //
         verifyException("original.Solution0321", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        solution0321_0.maxNumber(intArray0, intArray0, (-5));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -5
         //
         verifyException("original.Solution0321", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      // Undeclared exception!
      try { 
        solution0321_0.maxNumber((int[]) null, (int[]) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution0321", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[4];
      intArray0[0] = 1913;
      intArray0[3] = 2793;
      int[] intArray1 = solution0321_0.maxNumber(intArray0, intArray0, 1913);
      assertEquals(1913, intArray1.length);
      
      int[] intArray2 = solution0321_0.maxNumber(intArray1, intArray0, 1913);
      assertEquals(1913, intArray2.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[4];
      int[] intArray1 = solution0321_0.maxNumber(intArray0, intArray0, 1);
      assertArrayEquals(new int[] {0}, intArray1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 1;
      int[] intArray1 = solution0321_0.maxNumber(intArray0, intArray0, 1);
      assertArrayEquals(new int[] {1}, intArray1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[2];
      intArray0[0] = (-1067);
      intArray0[1] = 1;
      int[] intArray1 = solution0321_0.maxNumber(intArray0, intArray0, 1);
      int[] intArray2 = solution0321_0.maxNumber(intArray0, intArray1, 0);
      assertArrayEquals(new int[] {1}, intArray1);
      assertEquals(0, intArray2.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[1];
      int[] intArray1 = solution0321_0.maxNumber(intArray0, intArray0, 1);
      assertNotSame(intArray1, intArray0);
      assertArrayEquals(new int[] {0}, intArray1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[1];
      int[] intArray1 = solution0321_0.maxNumber(intArray0, intArray0, 0);
      assertEquals(0, intArray1.length);
  }
}
