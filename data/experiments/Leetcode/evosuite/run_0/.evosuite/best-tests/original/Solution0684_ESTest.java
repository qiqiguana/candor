/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 01:55:34 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution0684;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution0684_ESTest extends Solution0684_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution0684 solution0684_0 = new Solution0684();
      assertNotNull(solution0684_0);
      
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      intArray0[1] = 4;
      int[][] intArray1 = new int[7][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      int[] intArray2 = solution0684_0.findRedundantConnection(intArray1);
      assertNotNull(intArray2);
      assertEquals(7, intArray1.length);
      assertEquals(4, intArray2.length);
      assertSame(intArray2, intArray0);
      assertArrayEquals(new int[] {2, 4, 0, 0}, intArray2);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution0684 solution0684_0 = new Solution0684();
      assertNotNull(solution0684_0);
      
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      intArray0[1] = 4;
      int[][] intArray1 = new int[7][9];
      intArray1[0] = intArray0;
      // Undeclared exception!
      try { 
        solution0684_0.findRedundantConnection(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution0684 solution0684_0 = new Solution0684();
      assertNotNull(solution0684_0);
      
      // Undeclared exception!
      try { 
        solution0684_0.findRedundantConnection((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution0684", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution0684 solution0684_0 = new Solution0684();
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      intArray0[1] = 1;
      int[][] intArray1 = new int[7][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      int[] intArray2 = solution0684_0.findRedundantConnection(intArray1);
      assertEquals(4, intArray2.length);
  }
}
