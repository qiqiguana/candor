/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 01:51:46 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution2156;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution2156_ESTest extends Solution2156_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution2156 solution2156_0 = new Solution2156();
      // Undeclared exception!
      try { 
        solution2156_0.subStrHash("original.Solution2156", 4684, 1954, 945, 945);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution2156 solution2156_0 = new Solution2156();
      String string0 = solution2156_0.subStrHash("", 0, 0, 0, (-1166));
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution2156 solution2156_0 = new Solution2156();
      // Undeclared exception!
      try { 
        solution2156_0.subStrHash("", 3868, (-1), (-2424), (-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution2156 solution2156_0 = new Solution2156();
      // Undeclared exception!
      try { 
        solution2156_0.subStrHash((String) null, (-58), (-58), (-58), (-58));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution2156", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution2156 solution2156_0 = new Solution2156();
      // Undeclared exception!
      try { 
        solution2156_0.subStrHash("FkE)P", 1, 0, 1, 1);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("original.Solution2156", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Solution2156 solution2156_0 = new Solution2156();
      String string0 = solution2156_0.subStrHash("original.Solution2156", 14, (-2424), 14, (-1));
      assertEquals("l.Solution2156", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Solution2156 solution2156_0 = new Solution2156();
      String string0 = solution2156_0.subStrHash("}iFw!-{,qGTp+=urAgi", 1, 1, 1, 0);
      assertEquals("}", string0);
  }
}
