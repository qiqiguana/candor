/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 01:06:33 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution1851;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution1851_ESTest extends Solution1851_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution1851 solution1851_0 = new Solution1851();
      int[][] intArray0 = new int[5][8];
      int[] intArray1 = new int[6];
      intArray1[0] = 826;
      intArray0[0] = intArray1;
      int[] intArray2 = solution1851_0.minInterval(intArray0, intArray1);
      assertArrayEquals(new int[] {(-1), 1, 1, 1, 1, 1}, intArray2);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution1851 solution1851_0 = new Solution1851();
      int[][] intArray0 = new int[1][7];
      int[] intArray1 = new int[0];
      int[] intArray2 = solution1851_0.minInterval(intArray0, intArray1);
      assertEquals(0, intArray2.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution1851 solution1851_0 = new Solution1851();
      int[][] intArray0 = new int[0][4];
      // Undeclared exception!
      try { 
        solution1851_0.minInterval(intArray0, (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution1851", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution1851 solution1851_0 = new Solution1851();
      int[][] intArray0 = new int[1][7];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      // Undeclared exception!
      try { 
        solution1851_0.minInterval(intArray0, intArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("original.Solution1851", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution1851 solution1851_0 = new Solution1851();
      int[][] intArray0 = new int[9][6];
      int[] intArray1 = solution1851_0.minInterval(intArray0, intArray0[3]);
      int[] intArray2 = solution1851_0.minInterval(intArray0, intArray1);
      int[] intArray3 = solution1851_0.minInterval(intArray0, intArray2);
      assertArrayEquals(new int[] {(-1), (-1), (-1), (-1), (-1), (-1)}, intArray3);
      assertArrayEquals(new int[] {1, 1, 1, 1, 1, 1}, intArray1);
  }
}
