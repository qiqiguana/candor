/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 00:37:59 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution1102;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution1102_ESTest extends Solution1102_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution1102 solution1102_0 = new Solution1102();
      int[][] intArray0 = new int[4][3];
      int[] intArray1 = new int[2];
      intArray1[0] = 1217;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 1217;
      intArray2[1] = 1217;
      intArray0[1] = intArray2;
      intArray0[2] = intArray1;
      intArray0[3] = intArray2;
      solution1102_0.maximumMinimumPath(intArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution1102 solution1102_0 = new Solution1102();
      int[][] intArray0 = new int[5][3];
      int[] intArray1 = new int[1];
      intArray1[0] = (-1);
      intArray0[0] = intArray1;
      int int0 = solution1102_0.maximumMinimumPath(intArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution1102 solution1102_0 = new Solution1102();
      // Undeclared exception!
      try { 
        solution1102_0.maximumMinimumPath((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution1102", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution1102 solution1102_0 = new Solution1102();
      int[][] intArray0 = new int[3][5];
      int int0 = solution1102_0.maximumMinimumPath(intArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution1102 solution1102_0 = new Solution1102();
      int[][] intArray0 = new int[2][0];
      // Undeclared exception!
      try { 
        solution1102_0.maximumMinimumPath(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("original.Solution1102", e);
      }
  }
}
