/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 02:15:40 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution1466;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution1466_ESTest extends Solution1466_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution1466 solution1466_0 = new Solution1466();
      int[][] intArray0 = new int[2][5];
      int[] intArray1 = new int[6];
      intArray1[0] = 24;
      intArray0[0] = intArray1;
      int int0 = solution1466_0.minReorder(62, intArray0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution1466 solution1466_0 = new Solution1466();
      int[][] intArray0 = new int[0][2];
      int int0 = solution1466_0.minReorder(6, intArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution1466 solution1466_0 = new Solution1466();
      // Undeclared exception!
      try { 
        solution1466_0.minReorder(1, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution1466", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution1466 solution1466_0 = new Solution1466();
      int[][] intArray0 = new int[1][2];
      // Undeclared exception!
      try { 
        solution1466_0.minReorder((-4035), intArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -4035
         //
         verifyException("original.Solution1466", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int[][] intArray0 = new int[38][2];
      Solution1466 solution1466_0 = new Solution1466();
      solution1466_0.minReorder(22, intArray0);
      // Undeclared exception!
      solution1466_0.minReorder(38, intArray0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Solution1466 solution1466_0 = new Solution1466();
      int[][] intArray0 = new int[2][5];
      int[] intArray1 = new int[1];
      intArray0[1] = intArray1;
      // Undeclared exception!
      try { 
        solution1466_0.minReorder(62, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("original.Solution1466", e);
      }
  }
}
