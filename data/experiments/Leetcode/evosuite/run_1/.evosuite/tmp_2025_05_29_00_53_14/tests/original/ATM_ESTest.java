/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 01:45:57 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.ATM;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ATM_ESTest extends ATM_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ATM aTM0 = new ATM();
      int[] intArray0 = aTM0.withdraw(0);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ATM aTM0 = new ATM();
      // Undeclared exception!
      try { 
        aTM0.deposit((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.ATM", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ATM aTM0 = new ATM();
      int[] intArray0 = new int[8];
      // Undeclared exception!
      try { 
        aTM0.deposit(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 5 out of bounds for length 5
         //
         verifyException("original.ATM", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ATM aTM0 = new ATM();
      int[] intArray0 = aTM0.withdraw((-2199));
      assertArrayEquals(new int[] {(-2), (-1), (-1), 0, (-4)}, intArray0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ATM aTM0 = new ATM();
      int[] intArray0 = aTM0.withdraw(623);
      aTM0.deposit(intArray0);
      assertEquals(1, intArray0.length);
      assertArrayEquals(new int[] {(-1)}, intArray0);
  }
}
