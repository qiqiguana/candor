/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 02:35:55 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution3274;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution3274_ESTest extends Solution3274_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution3274 solution3274_0 = new Solution3274();
      boolean boolean0 = solution3274_0.checkTwoChessboards("Fhx}j^4[", "%l-i2D +-iY");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution3274 solution3274_0 = new Solution3274();
      // Undeclared exception!
      try { 
        solution3274_0.checkTwoChessboards("", "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution3274 solution3274_0 = new Solution3274();
      // Undeclared exception!
      try { 
        solution3274_0.checkTwoChessboards((String) null, "@pd");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution3274", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution3274 solution3274_0 = new Solution3274();
      boolean boolean0 = solution3274_0.checkTwoChessboards("ago3J@gwmj[", "ago3J@gwmj[");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution3274 solution3274_0 = new Solution3274();
      boolean boolean0 = solution3274_0.checkTwoChessboards("/qL1CIW", "original.Solution3274");
      assertFalse(boolean0);
  }
}
