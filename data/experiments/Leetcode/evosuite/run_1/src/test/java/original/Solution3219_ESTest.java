/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 01:25:07 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution3219;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution3219_ESTest extends Solution3219_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution3219 solution3219_0 = new Solution3219();
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      long long0 = solution3219_0.minimumCost(2, 2, intArray0, intArray0);
      assertEquals(6L, long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution3219 solution3219_0 = new Solution3219();
      int[] intArray0 = new int[3];
      int[] intArray1 = new int[1];
      intArray1[0] = 2;
      long long0 = solution3219_0.minimumCost(2, 2, intArray0, intArray1);
      assertEquals(2L, long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution3219 solution3219_0 = new Solution3219();
      int[] intArray0 = new int[9];
      long long0 = solution3219_0.minimumCost(8, 8, intArray0, intArray0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution3219 solution3219_0 = new Solution3219();
      int[] intArray0 = new int[2];
      // Undeclared exception!
      try { 
        solution3219_0.minimumCost(2253, (-101), intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2251 out of bounds for length 2
         //
         verifyException("original.Solution3219", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution3219 solution3219_0 = new Solution3219();
      int[] intArray0 = new int[7];
      int[] intArray1 = new int[7];
      intArray1[4] = (-161);
      long long0 = solution3219_0.minimumCost(2, 2, intArray0, intArray1);
      assertEquals((-322L), long0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Solution3219 solution3219_0 = new Solution3219();
      // Undeclared exception!
      try { 
        solution3219_0.minimumCost(2, (-3290), (int[]) null, (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Solution3219 solution3219_0 = new Solution3219();
      int[] intArray0 = new int[7];
      // Undeclared exception!
      try { 
        solution3219_0.minimumCost((-161), 1768, intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1766 out of bounds for length 7
         //
         verifyException("original.Solution3219", e);
      }
  }
}
