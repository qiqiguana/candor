/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 00:44:15 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution3171;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution3171_ESTest extends Solution3171_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution3171 solution3171_0 = new Solution3171();
      int[] intArray0 = new int[6];
      intArray0[1] = (-867);
      intArray0[3] = Integer.MAX_VALUE;
      int int0 = solution3171_0.minimumDifference(intArray0, Integer.MAX_VALUE);
      assertEquals(Integer.MIN_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution3171 solution3171_0 = new Solution3171();
      // Undeclared exception!
      try { 
        solution3171_0.minimumDifference((int[]) null, (-3542));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution3171", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution3171 solution3171_0 = new Solution3171();
      int[] intArray0 = new int[2];
      intArray0[0] = 708;
      intArray0[1] = 708;
      int int0 = solution3171_0.minimumDifference(intArray0, (-2026));
      assertEquals(2734, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution3171 solution3171_0 = new Solution3171();
      int[] intArray0 = new int[8];
      intArray0[4] = 1500;
      int int0 = solution3171_0.minimumDifference(intArray0, 0);
      assertEquals(0, int0);
  }
}
