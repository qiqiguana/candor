/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 00:00:27 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution3235;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution3235_ESTest extends Solution3235_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Solution3235 solution3235_0 = new Solution3235();
      int[][] intArray0 = new int[2][3];
      int[] intArray1 = new int[7];
      intArray1[0] = (-829);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[13];
      intArray2[0] = 1377;
      intArray2[1] = 1030;
      intArray2[2] = 1377;
      intArray0[1] = intArray2;
      boolean boolean0 = solution3235_0.canReachCorner(1377, 1717986918, intArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Solution3235 solution3235_0 = new Solution3235();
      int[][] intArray0 = new int[6][4];
      int[] intArray1 = new int[6];
      intArray1[0] = 2147483313;
      intArray0[0] = intArray1;
      intArray0[1] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[1] = 498;
      intArray0[2] = intArray2;
      int[] intArray3 = new int[7];
      intArray3[2] = 2146776308;
      intArray0[3] = intArray3;
      intArray3[1] = 2146776308;
      boolean boolean0 = solution3235_0.canReachCorner(477, 2146776308, intArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[][] intArray0 = new int[2][4];
      int[] intArray1 = new int[3];
      intArray1[1] = 1;
      intArray0[0] = intArray1;
      Solution3235 solution3235_0 = new Solution3235();
      boolean boolean0 = solution3235_0.canReachCorner(0, 5, intArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[1] = 1;
      Solution3235 solution3235_0 = new Solution3235();
      int[][] intArray1 = new int[2][0];
      intArray1[0] = intArray0;
      int[] intArray2 = new int[3];
      intArray2[0] = (-3408);
      intArray2[2] = 2146412049;
      intArray1[1] = intArray2;
      boolean boolean0 = solution3235_0.canReachCorner(2146412049, 482, intArray1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Solution3235 solution3235_0 = new Solution3235();
      // Undeclared exception!
      try { 
        solution3235_0.canReachCorner(2, 2, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution3235", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Solution3235 solution3235_0 = new Solution3235();
      int[][] intArray0 = new int[6][3];
      int[] intArray1 = new int[5];
      intArray1[1] = 4241;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray0[3] = intArray2;
      // Undeclared exception!
      try { 
        solution3235_0.canReachCorner(4241, 4241, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("original.Solution3235", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Solution3235 solution3235_0 = new Solution3235();
      int[][] intArray0 = new int[2][3];
      int[] intArray1 = new int[7];
      intArray1[0] = (-829);
      intArray1[1] = 1030;
      intArray1[2] = 1030;
      intArray0[0] = intArray1;
      intArray0[1] = intArray0[0];
      boolean boolean0 = solution3235_0.canReachCorner(2145451969, 1030, intArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Solution3235 solution3235_0 = new Solution3235();
      int[][] intArray0 = new int[2][6];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 1;
      intArray0[0] = intArray1;
      boolean boolean0 = solution3235_0.canReachCorner((-2062), 1, intArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Solution3235 solution3235_0 = new Solution3235();
      int[][] intArray0 = new int[4][7];
      int[] intArray1 = new int[5];
      intArray1[1] = 516;
      intArray1[2] = 516;
      intArray1[0] = 1;
      intArray0[0] = intArray1;
      boolean boolean0 = solution3235_0.canReachCorner(516, 1, intArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[1] = 1;
      Solution3235 solution3235_0 = new Solution3235();
      int[][] intArray1 = new int[5][2];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      int[] intArray2 = new int[3];
      intArray2[1] = (-1);
      intArray2[2] = 3293;
      intArray1[3] = intArray2;
      boolean boolean0 = solution3235_0.canReachCorner(1, 3293, intArray1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[][] intArray0 = new int[27][4];
      int[] intArray1 = new int[10];
      intArray1[1] = (-1);
      intArray0[0] = intArray1;
      Solution3235 solution3235_0 = new Solution3235();
      boolean boolean0 = solution3235_0.canReachCorner(111, (-1), intArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Solution3235 solution3235_0 = new Solution3235();
      int[][] intArray0 = new int[6][4];
      int[] intArray1 = new int[6];
      intArray1[0] = 2147483313;
      intArray0[0] = intArray1;
      intArray0[1] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[1] = 498;
      intArray0[2] = intArray2;
      int[] intArray3 = new int[7];
      intArray3[2] = 2146776308;
      intArray0[3] = intArray3;
      boolean boolean0 = solution3235_0.canReachCorner(477, 2146776308, intArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[1] = 1;
      Solution3235 solution3235_0 = new Solution3235();
      int[][] intArray1 = new int[2][0];
      intArray1[0] = intArray0;
      int[] intArray2 = new int[3];
      intArray2[0] = (-3408);
      intArray2[1] = 2146412049;
      intArray2[2] = 2146412049;
      intArray1[1] = intArray2;
      boolean boolean0 = solution3235_0.canReachCorner(2146412049, 2146412049, intArray1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[][] intArray0 = new int[15][4];
      int[] intArray1 = new int[5];
      intArray1[0] = 1;
      intArray0[0] = intArray1;
      Solution3235 solution3235_0 = new Solution3235();
      boolean boolean0 = solution3235_0.canReachCorner(1, 0, intArray0);
      assertFalse(boolean0);
  }
}
