/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 01:56:22 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution3317;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution3317_ESTest extends Solution3317_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution3317 solution3317_0 = new Solution3317();
      solution3317_0.numberOfWays(1, 1869, 1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution3317 solution3317_0 = new Solution3317();
      solution3317_0.numberOfWays(1, 1, (-1204));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution3317 solution3317_0 = new Solution3317();
      // Undeclared exception!
      solution3317_0.numberOfWays(1869, 1869, 1000000007);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution3317 solution3317_0 = new Solution3317();
      // Undeclared exception!
      try { 
        solution3317_0.numberOfWays((-2029), (-2029), 1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2028
         //
         verifyException("original.Solution3317", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution3317 solution3317_0 = new Solution3317();
      // Undeclared exception!
      try { 
        solution3317_0.numberOfWays(1, (-1), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("original.Solution3317", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Solution3317 solution3317_0 = new Solution3317();
      int int0 = solution3317_0.numberOfWays(0, 0, 0);
      assertEquals(0, int0);
  }
}
