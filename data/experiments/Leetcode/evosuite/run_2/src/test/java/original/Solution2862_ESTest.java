/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 01:58:18 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution2862;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution2862_ESTest extends Solution2862_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution2862 solution2862_0 = new Solution2862();
      Integer integer0 = new Integer(3095);
      List<Integer> list0 = List.of(integer0, integer0, integer0, integer0, integer0);
      long long0 = solution2862_0.maximumSum(list0);
      assertEquals(6190L, long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution2862 solution2862_0 = new Solution2862();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      long long0 = solution2862_0.maximumSum(linkedList0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      List<Integer> list0 = linkedList0.subList(0, 0);
      Integer integer0 = new Integer(0);
      linkedList0.add(integer0);
      Solution2862 solution2862_0 = new Solution2862();
      // Undeclared exception!
      try { 
        solution2862_0.maximumSum(list0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList$SubList", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution2862 solution2862_0 = new Solution2862();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      linkedList0.add((Integer) null);
      // Undeclared exception!
      try { 
        solution2862_0.maximumSum(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution2862", e);
      }
  }
}
