/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 00:00:17 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution3235;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution3235_ESTest extends Solution3235_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Solution3235 solution3235_0 = new Solution3235();
      int[][] intArray0 = new int[4][7];
      int[] intArray1 = new int[7];
      intArray1[1] = 2109;
      intArray1[2] = 1598;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 1598;
      intArray0[1] = intArray2;
      boolean boolean0 = solution3235_0.canReachCorner(2109, 1598, intArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Solution3235 solution3235_0 = new Solution3235();
      int[][] intArray0 = new int[1][6];
      int[] intArray1 = new int[22];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 1;
      intArray0[0] = intArray1;
      boolean boolean0 = solution3235_0.canReachCorner(1, 1525, intArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Solution3235 solution3235_0 = new Solution3235();
      int[] intArray0 = new int[43];
      intArray0[1] = 19;
      int[][] intArray1 = new int[6][7];
      intArray1[0] = intArray0;
      int[] intArray2 = new int[6];
      intArray2[1] = 1429;
      intArray2[2] = 2146862089;
      intArray1[5] = intArray2;
      boolean boolean0 = solution3235_0.canReachCorner(1429, 1429, intArray1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Solution3235 solution3235_0 = new Solution3235();
      // Undeclared exception!
      try { 
        solution3235_0.canReachCorner(0, 0, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution3235", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Solution3235 solution3235_0 = new Solution3235();
      int[][] intArray0 = new int[4][0];
      // Undeclared exception!
      try { 
        solution3235_0.canReachCorner(2, 2, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("original.Solution3235", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[1] = 1;
      Solution3235 solution3235_0 = new Solution3235();
      int[][] intArray1 = new int[4][3];
      intArray1[0] = intArray0;
      int[] intArray2 = new int[4];
      intArray2[2] = 1;
      intArray1[1] = intArray2;
      boolean boolean0 = solution3235_0.canReachCorner(1, 1, intArray1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Solution3235 solution3235_0 = new Solution3235();
      int[] intArray0 = new int[43];
      intArray0[1] = 19;
      int[][] intArray1 = new int[6][7];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      boolean boolean0 = solution3235_0.canReachCorner(19, 2146862089, intArray1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Solution3235 solution3235_0 = new Solution3235();
      int[][] intArray0 = new int[1][6];
      int[] intArray1 = new int[22];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 1;
      intArray0[0] = intArray1;
      boolean boolean0 = solution3235_0.canReachCorner((-1), 1, intArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Solution3235 solution3235_0 = new Solution3235();
      int[][] intArray0 = new int[1][3];
      int[] intArray1 = new int[3];
      intArray1[0] = (-1);
      intArray1[1] = 1;
      intArray1[2] = 1;
      intArray0[0] = intArray1;
      boolean boolean0 = solution3235_0.canReachCorner(1, 1, intArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Solution3235 solution3235_0 = new Solution3235();
      int[][] intArray0 = new int[1][5];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = 465;
      intArray1[2] = 465;
      intArray0[0] = intArray1;
      boolean boolean0 = solution3235_0.canReachCorner(465, 1, intArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Solution3235 solution3235_0 = new Solution3235();
      int[][] intArray0 = new int[31][8];
      int[] intArray1 = new int[3];
      intArray1[1] = (-2576);
      intArray1[2] = 85;
      intArray0[0] = intArray1;
      boolean boolean0 = solution3235_0.canReachCorner(85, (-2647), intArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[1] = 1;
      Solution3235 solution3235_0 = new Solution3235();
      int[][] intArray1 = new int[4][3];
      intArray1[0] = intArray0;
      int[] intArray2 = new int[4];
      intArray2[2] = 1;
      intArray1[1] = intArray2;
      boolean boolean0 = solution3235_0.canReachCorner(1, 1717986918, intArray1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Solution3235 solution3235_0 = new Solution3235();
      int[][] intArray0 = new int[2][7];
      int[] intArray1 = new int[9];
      intArray1[1] = 1610612736;
      intArray1[2] = 2;
      intArray0[0] = intArray1;
      intArray0[1] = intArray0[0];
      boolean boolean0 = solution3235_0.canReachCorner(1610612736, 2146650321, intArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Solution3235 solution3235_0 = new Solution3235();
      int[][] intArray0 = new int[7][3];
      int[] intArray1 = new int[5];
      intArray1[0] = 2146182142;
      intArray1[1] = 2569;
      intArray1[2] = 2146182142;
      intArray0[0] = intArray1;
      boolean boolean0 = solution3235_0.canReachCorner(2146182142, (-2927), intArray0);
      assertFalse(boolean0);
  }
}
