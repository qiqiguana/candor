/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 02:14:05 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution3070;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution3070_ESTest extends Solution3070_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution3070 solution3070_0 = new Solution3070();
      int[][] intArray0 = new int[5][5];
      int[] intArray1 = new int[3];
      intArray1[0] = (-2036);
      intArray0[0] = intArray1;
      int int0 = solution3070_0.countSubmatrices(intArray0, 0);
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution3070 solution3070_0 = new Solution3070();
      int[][] intArray0 = new int[8][3];
      int[] intArray1 = new int[6];
      intArray1[4] = 3576;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        solution3070_0.countSubmatrices(intArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3 out of bounds for length 3
         //
         verifyException("original.Solution3070", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution3070 solution3070_0 = new Solution3070();
      // Undeclared exception!
      try { 
        solution3070_0.countSubmatrices((int[][]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution3070", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution3070 solution3070_0 = new Solution3070();
      int[][] intArray0 = new int[1][4];
      int int0 = solution3070_0.countSubmatrices(intArray0, (-1));
      assertEquals(0, int0);
  }
}
