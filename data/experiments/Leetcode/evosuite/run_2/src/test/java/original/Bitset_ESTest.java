/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 01:44:58 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Bitset;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Bitset_ESTest extends Bitset_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Bitset bitset0 = new Bitset(1366);
      bitset0.flip();
      assertTrue(bitset0.one());
      
      bitset0.flip();
      assertEquals(0, bitset0.count());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Bitset bitset0 = new Bitset(0);
      String string0 = bitset0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Bitset bitset0 = new Bitset(1);
      bitset0.flip();
      int int0 = bitset0.count();
      assertTrue(bitset0.one());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Bitset bitset0 = new Bitset(2789);
      // Undeclared exception!
      try { 
        bitset0.unfix(2789);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2789 out of bounds for length 2789
         //
         verifyException("original.Bitset", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Bitset bitset0 = new Bitset(349);
      // Undeclared exception!
      try { 
        bitset0.fix(349);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 349 out of bounds for length 349
         //
         verifyException("original.Bitset", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Bitset bitset0 = null;
      try {
        bitset0 = new Bitset((-734));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -734
         //
         verifyException("original.Bitset", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Bitset bitset0 = new Bitset(0);
      boolean boolean0 = bitset0.one();
      assertFalse(boolean0);
      assertEquals("", bitset0.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Bitset bitset0 = new Bitset(0);
      boolean boolean0 = bitset0.all();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Bitset bitset0 = new Bitset(1);
      boolean boolean0 = bitset0.all();
      assertFalse(boolean0);
      assertEquals("0", bitset0.toString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Bitset bitset0 = new Bitset(2789);
      bitset0.flip();
      bitset0.unfix(1);
      assertTrue(bitset0.one());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Bitset bitset0 = new Bitset(348);
      bitset0.unfix(1);
      assertEquals("000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", bitset0.toString());
      assertEquals(0, bitset0.count());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Bitset bitset0 = new Bitset(348);
      int int0 = bitset0.count();
      assertEquals(0, int0);
      assertEquals("000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", bitset0.toString());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Bitset bitset0 = new Bitset(1);
      String string0 = bitset0.toString();
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Bitset bitset0 = new Bitset(1132);
      bitset0.flip();
      bitset0.fix(45);
      assertTrue(bitset0.one());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Bitset bitset0 = new Bitset(2789);
      bitset0.fix(0);
      boolean boolean0 = bitset0.one();
      assertEquals(1, bitset0.count());
      assertTrue(boolean0);
  }
}
