/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 01:21:12 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution1755;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution1755_ESTest extends Solution1755_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution1755 solution1755_0 = new Solution1755();
      int[] intArray0 = new int[6];
      intArray0[2] = (-1);
      solution1755_0.minAbsDifference(intArray0, Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution1755 solution1755_0 = new Solution1755();
      int[] intArray0 = new int[20];
      // Undeclared exception!
      solution1755_0.minAbsDifference(intArray0, 0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution1755 solution1755_0 = new Solution1755();
      // Undeclared exception!
      try { 
        solution1755_0.minAbsDifference((int[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution1755 solution1755_0 = new Solution1755();
      int[] intArray0 = new int[1];
      int int0 = solution1755_0.minAbsDifference(intArray0, (-1));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution1755 solution1755_0 = new Solution1755();
      int[] intArray0 = new int[4];
      int int0 = solution1755_0.minAbsDifference(intArray0, 0);
      assertEquals(0, int0);
  }
}
