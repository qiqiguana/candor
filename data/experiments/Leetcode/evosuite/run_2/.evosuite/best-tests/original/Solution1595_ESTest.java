/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 01:30:31 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution1595;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution1595_ESTest extends Solution1595_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution1595 solution1595_0 = new Solution1595();
      LinkedList<List<Integer>> linkedList0 = new LinkedList<List<Integer>>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Integer integer0 = new Integer(0);
      linkedList1.add(integer0);
      linkedList0.add((List<Integer>) linkedList1);
      int int0 = solution1595_0.connectTwoGroups(linkedList0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution1595 solution1595_0 = new Solution1595();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      List<List<Integer>> list0 = List.of((List<Integer>) linkedList0, (List<Integer>) linkedList0, (List<Integer>) linkedList0, (List<Integer>) linkedList0);
      int int0 = solution1595_0.connectTwoGroups(list0);
      assertEquals(1073741824, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution1595 solution1595_0 = new Solution1595();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      linkedList0.add((Integer) null);
      List<List<Integer>> list0 = List.of((List<Integer>) linkedList0, (List<Integer>) linkedList0, (List<Integer>) linkedList0, (List<Integer>) linkedList0);
      // Undeclared exception!
      try { 
        solution1595_0.connectTwoGroups(list0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution1595", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution1595 solution1595_0 = new Solution1595();
      Integer integer0 = new Integer((-1179));
      List<Integer> list0 = List.of(integer0, integer0, integer0, integer0, integer0, integer0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      List<List<Integer>> list1 = List.of(list0, list0, list0, (List<Integer>) linkedList0, list0, list0);
      // Undeclared exception!
      try { 
        solution1595_0.connectTwoGroups(list1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution1595 solution1595_0 = new Solution1595();
      List<List<Integer>> list0 = List.of();
      // Undeclared exception!
      try { 
        solution1595_0.connectTwoGroups(list0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Solution1595 solution1595_0 = new Solution1595();
      Integer integer0 = new Integer((-1179));
      List<Integer> list0 = List.of(integer0, integer0, integer0, integer0, integer0, integer0);
      List<List<Integer>> list1 = List.of(list0, list0, list0, list0, list0, list0, list0);
      solution1595_0.connectTwoGroups(list1);
      solution1595_0.connectTwoGroups(list1);
      solution1595_0.connectTwoGroups(list1);
      // Undeclared exception!
      solution1595_0.connectTwoGroups(list1);
  }
}
