/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 00:29:58 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution0780;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution0780_ESTest extends Solution0780_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Solution0780 solution0780_0 = new Solution0780();
      boolean boolean0 = solution0780_0.reachingPoints((-1), 2305, 1, (-1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Solution0780 solution0780_0 = new Solution0780();
      // Undeclared exception!
      solution0780_0.reachingPoints((-4752), (-4752), (-2741), (-3648));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Solution0780 solution0780_0 = new Solution0780();
      // Undeclared exception!
      try { 
        solution0780_0.reachingPoints((-256), (-1), 3763, 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("original.Solution0780", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Solution0780 solution0780_0 = new Solution0780();
      boolean boolean0 = solution0780_0.reachingPoints(0, 1235, 1909, 1235);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Solution0780 solution0780_0 = new Solution0780();
      boolean boolean0 = solution0780_0.reachingPoints(1517, 2305, (-1568), 2305);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Solution0780 solution0780_0 = new Solution0780();
      boolean boolean0 = solution0780_0.reachingPoints(3763, (-256), 3763, 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Solution0780 solution0780_0 = new Solution0780();
      boolean boolean0 = solution0780_0.reachingPoints(0, 3237, 0, 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Solution0780 solution0780_0 = new Solution0780();
      boolean boolean0 = solution0780_0.reachingPoints(1, (-1568), 1, 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Solution0780 solution0780_0 = new Solution0780();
      boolean boolean0 = solution0780_0.reachingPoints(0, 0, 508, 508);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Solution0780 solution0780_0 = new Solution0780();
      boolean boolean0 = solution0780_0.reachingPoints(1, 1, 3237, 2305);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Solution0780 solution0780_0 = new Solution0780();
      boolean boolean0 = solution0780_0.reachingPoints(3257, 3257, 3257, 3257);
      assertTrue(boolean0);
  }
}
