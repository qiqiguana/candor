/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 00:20:52 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution0321;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution0321_ESTest extends Solution0321_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[1];
      int int0 = 825;
      int[] intArray1 = solution0321_0.maxNumber(intArray0, intArray0, 825);
      // Undeclared exception!
      solution0321_0.maxNumber(intArray1, intArray1, 825);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[0];
      int int0 = 813;
      int[] intArray1 = solution0321_0.maxNumber(intArray0, intArray0, 813);
      // Undeclared exception!
      solution0321_0.maxNumber(intArray1, intArray1, 813);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[4];
      intArray0[0] = (-709);
      intArray0[1] = 0;
      intArray0[2] = 23;
      intArray0[3] = 2523;
      int[] intArray1 = solution0321_0.maxNumber(intArray0, intArray0, 0);
      int[] intArray2 = solution0321_0.maxNumber(intArray1, intArray0, 23);
      int[] intArray3 = solution0321_0.maxNumber(intArray2, intArray1, 0);
      int[] intArray4 = solution0321_0.maxNumber(intArray3, intArray0, 0);
      int[] intArray5 = solution0321_0.maxNumber(intArray4, intArray1, 0);
      int[] intArray6 = solution0321_0.maxNumber(intArray0, intArray2, 0);
      solution0321_0.maxNumber(intArray5, intArray2, 23);
      solution0321_0.maxNumber(intArray0, intArray6, 0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[0];
      int[] intArray1 = solution0321_0.maxNumber(intArray0, intArray0, 813);
      int[] intArray2 = new int[3];
      intArray2[0] = 813;
      intArray2[1] = 813;
      intArray2[2] = 813;
      solution0321_0.maxNumber(intArray1, intArray2, 813);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[7];
      int int0 = 478;
      intArray0[0] = 478;
      intArray0[1] = (-256);
      intArray0[2] = 0;
      intArray0[3] = (-1476);
      int int1 = 822;
      intArray0[4] = 822;
      int int2 = (-2720);
      intArray0[5] = (-2720);
      int int3 = 2322;
      intArray0[6] = 2322;
      int[] intArray1 = solution0321_0.maxNumber(intArray0, intArray0, 478);
      int[] intArray2 = solution0321_0.maxNumber(intArray1, intArray0, 0);
      int[] intArray3 = new int[5];
      intArray3[0] = 0;
      intArray3[1] = 822;
      intArray3[2] = (-1476);
      intArray3[3] = 0;
      intArray3[4] = 822;
      int[] intArray4 = solution0321_0.maxNumber(intArray1, intArray3, 478);
      int int4 = 1061;
      solution0321_0.maxNumber(intArray4, intArray2, 1061);
      solution0321_0.maxNumber(intArray2, intArray2, 0);
      // Undeclared exception!
      try { 
        solution0321_0.maxNumber(intArray2, intArray2, (-256));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -256
         //
         verifyException("original.Solution0321", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[1];
      intArray0[0] = 476;
      solution0321_0.maxNumber(intArray0, intArray0, 1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      intArray0[1] = 636;
      intArray0[2] = 1;
      intArray0[3] = 1995;
      int[] intArray1 = solution0321_0.maxNumber(intArray0, intArray0, 2);
      solution0321_0.maxNumber(intArray1, intArray1, 1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[8];
      intArray0[0] = (-133);
      intArray0[1] = 0;
      intArray0[2] = (-1);
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 1067;
      intArray0[6] = 0;
      intArray0[7] = 1;
      int[] intArray1 = solution0321_0.maxNumber(intArray0, intArray0, 1);
      int[] intArray2 = solution0321_0.maxNumber(intArray0, intArray0, 0);
      int[] intArray3 = solution0321_0.maxNumber(intArray2, intArray0, 1810);
      int[] intArray4 = solution0321_0.maxNumber(intArray2, intArray3, 0);
      int[] intArray5 = solution0321_0.maxNumber(intArray1, intArray4, 0);
      // Undeclared exception!
      try { 
        solution0321_0.maxNumber(intArray5, intArray0, (-28));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -28
         //
         verifyException("original.Solution0321", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[0];
      solution0321_0.maxNumber(intArray0, intArray0, 320);
      solution0321_0.maxNumber(intArray0, intArray0, 320);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[2];
      int int0 = (-3046);
      intArray0[0] = (-3046);
      int int1 = 0;
      intArray0[1] = 0;
      int[] intArray1 = solution0321_0.maxNumber(intArray0, intArray0, 0);
      // Undeclared exception!
      try { 
        solution0321_0.maxNumber(intArray1, intArray0, (-3046));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -3046
         //
         verifyException("original.Solution0321", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        solution0321_0.maxNumber(intArray0, intArray0, (-2165));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2165
         //
         verifyException("original.Solution0321", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[6];
      intArray0[0] = 1005;
      intArray0[1] = 0;
      intArray0[2] = 4546;
      intArray0[3] = (-86);
      intArray0[4] = 0;
      intArray0[5] = 0;
      // Undeclared exception!
      try { 
        solution0321_0.maxNumber(intArray0, intArray0, (-1594));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1594
         //
         verifyException("original.Solution0321", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      // Undeclared exception!
      try { 
        solution0321_0.maxNumber((int[]) null, (int[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution0321", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 60;
      intArray0[3] = (-798);
      intArray0[4] = 345;
      intArray0[5] = (-428);
      intArray0[6] = 1;
      intArray0[7] = 0;
      intArray0[8] = 3505;
      solution0321_0.maxNumber(intArray0, intArray0, 0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Solution0321 solution0321_0 = new Solution0321();
      int[] intArray0 = new int[0];
      int[] intArray1 = solution0321_0.maxNumber(intArray0, intArray0, 813);
      // Undeclared exception!
      solution0321_0.maxNumber(intArray1, intArray1, 813);
  }
}
