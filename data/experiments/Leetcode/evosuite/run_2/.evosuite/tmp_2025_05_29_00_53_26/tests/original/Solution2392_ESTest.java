/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 00:26:36 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution2392;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution2392_ESTest extends Solution2392_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution2392 solution2392_0 = new Solution2392();
      int[][] intArray0 = new int[0][8];
      int[][] intArray1 = solution2392_0.buildMatrix(4146, intArray0, intArray0);
      // Undeclared exception!
      solution2392_0.buildMatrix(4146, intArray1, intArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution2392 solution2392_0 = new Solution2392();
      // Undeclared exception!
      try { 
        solution2392_0.buildMatrix(726, (int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution2392 solution2392_0 = new Solution2392();
      int[][] intArray0 = new int[1][8];
      // Undeclared exception!
      try { 
        solution2392_0.buildMatrix((-11), intArray0, intArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -10
         //
         verifyException("original.Solution2392", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution2392 solution2392_0 = new Solution2392();
      int[][] intArray0 = new int[0][1];
      int[][] intArray1 = solution2392_0.buildMatrix(705, intArray0, intArray0);
      // Undeclared exception!
      try { 
        solution2392_0.buildMatrix((-1), intArray0, intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int[][] intArray0 = new int[7][9];
      Solution2392 solution2392_0 = new Solution2392();
      int[][] intArray1 = solution2392_0.buildMatrix(2, intArray0, intArray0);
      int[][] intArray2 = solution2392_0.buildMatrix(2, intArray0, intArray1);
      assertEquals(0, intArray2.length);
      assertEquals(2, intArray1.length);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Solution2392 solution2392_0 = new Solution2392();
      int[][] intArray0 = new int[1][9];
      int[][] intArray1 = solution2392_0.buildMatrix(2410, intArray0, intArray0);
      int[][] intArray2 = solution2392_0.buildMatrix(2410, intArray0, intArray1);
      assertEquals(2410, intArray1.length);
      assertEquals(0, intArray2.length);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Solution2392 solution2392_0 = new Solution2392();
      int[][] intArray0 = new int[1][9];
      int[][] intArray1 = solution2392_0.buildMatrix(1713, intArray0, intArray0);
      int[][] intArray2 = solution2392_0.buildMatrix(1713, intArray1, intArray0);
      assertEquals(0, intArray2.length);
      assertEquals(1713, intArray1.length);
  }
}
