/*
 * This file was automatically generated by EvoSuite
 * Thu May 29 01:59:11 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Solution2869;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution2869_ESTest extends Solution2869_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution2869 solution2869_0 = new Solution2869();
      Integer integer0 = new Integer(1);
      List<Integer> list0 = List.of(integer0, integer0, integer0);
      int int0 = solution2869_0.minOperations(list0, 1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution2869 solution2869_0 = new Solution2869();
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer(1463);
      List<Integer> list0 = List.of(integer0, integer1, integer1);
      // Undeclared exception!
      try { 
        solution2869_0.minOperations(list0, 1463);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution2869 solution2869_0 = new Solution2869();
      // Undeclared exception!
      try { 
        solution2869_0.minOperations((List<Integer>) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Solution2869", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution2869 solution2869_0 = new Solution2869();
      Integer integer0 = new Integer(1);
      List<Integer> list0 = List.of(integer0, integer0, integer0);
      // Undeclared exception!
      try { 
        solution2869_0.minOperations(list0, (-603));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -603
         //
         verifyException("original.Solution2869", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution2869 solution2869_0 = new Solution2869();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      // Undeclared exception!
      try { 
        solution2869_0.minOperations(linkedList0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Solution2869 solution2869_0 = new Solution2869();
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer(1463);
      List<Integer> list0 = List.of(integer0, integer0, integer1);
      int int0 = solution2869_0.minOperations(list0, 1);
      assertEquals(2, int0);
  }
}
