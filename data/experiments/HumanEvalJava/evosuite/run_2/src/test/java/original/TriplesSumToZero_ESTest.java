/*
 * This file was automatically generated by EvoSuite
 * Wed May 14 20:47:41 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.TriplesSumToZero;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class TriplesSumToZero_ESTest extends TriplesSumToZero_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer((-2271));
      linkedList0.addFirst(integer0);
      Integer integer1 = new Integer(2071);
      linkedList0.add(integer1);
      linkedList0.add(integer1);
      Boolean boolean0 = TriplesSumToZero.triplesSumToZero(linkedList0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      List<Integer> list0 = linkedList0.subList(0, 0);
      Integer integer0 = new Integer(0);
      linkedList0.push(integer0);
      // Undeclared exception!
      try { 
        TriplesSumToZero.triplesSumToZero(list0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList$SubList", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        TriplesSumToZero.triplesSumToZero((List<Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.TriplesSumToZero", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer(0);
      List<Integer> list0 = List.of(integer0, integer0, integer0);
      Boolean boolean0 = TriplesSumToZero.triplesSumToZero(list0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Integer integer0 = new Integer((-2252));
      List<Integer> list0 = List.of(integer0, integer0, integer0);
      Boolean boolean0 = TriplesSumToZero.triplesSumToZero(list0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TriplesSumToZero triplesSumToZero0 = new TriplesSumToZero();
  }
}
