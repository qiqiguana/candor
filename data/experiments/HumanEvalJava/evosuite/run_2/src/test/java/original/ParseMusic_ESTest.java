/*
 * This file was automatically generated by EvoSuite
 * Wed May 14 20:19:57 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.ParseMusic;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class ParseMusic_ESTest extends ParseMusic_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      List<Object> list0 = ParseMusic.parseMusic("mo}2eRxvqBs\rM");
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      List<Object> list0 = ParseMusic.parseMusic(")D17jB '*fFOq^I2 S.");
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      List<Object> list0 = ParseMusic.parseMusic("");
      assertFalse(list0.contains(""));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        ParseMusic.parseMusic((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.ParseMusic", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      List<Object> list0 = ParseMusic.parseMusic(")gJK3ko7");
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      List<Object> list0 = ParseMusic.parseMusic("qo");
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      List<Object> list0 = ParseMusic.parseMusic("[?'7>ZG)bzjv/;o|");
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ParseMusic parseMusic0 = new ParseMusic();
  }
}
