/*
 * This file was automatically generated by EvoSuite
 * Wed May 14 21:29:42 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.OddCount;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OddCount_ESTest extends OddCount_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      List<String> list0 = List.of();
      List<String> list1 = OddCount.oddCount(list0);
      assertEquals(0, list1.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      List<String> list0 = linkedList0.subList(0, 0);
      linkedList0.add("29kyRJ'3`A#dP{>Z");
      // Undeclared exception!
      try { 
        OddCount.oddCount(list0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList$SubList", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        OddCount.oddCount((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.OddCount", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      List<String> list0 = List.of("92}wQmzv~bDa.");
      // Undeclared exception!
      try { 
        OddCount.oddCount(list0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"}\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      List<String> list0 = List.of("", "", "", "");
      List<String> list1 = OddCount.oddCount(list0);
      assertFalse(list1.contains(""));
      assertEquals(4, list1.size());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OddCount oddCount0 = new OddCount();
  }
}
