package original;

import java.util.*;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
/**
* Test class of Maximum1.
*/
class Maximum1Test {
    @Test
    void testMaximum_KIsEqualToArraySize_ReturnsSortedArray() {
        // Arrange
        List<Integer> arr = new ArrayList<>(Arrays.asList(5, 15, 0, 3, -13, -8, 0));
        int k = 7;
        // Act
        List<Object> result = Maximum1.maximum(arr, k);
        // Assert
        assertEquals(Arrays.asList(-13, -8, 0, 0, 3, 5, 15), result);
    }
    
    @Test
        public void testNothing(){
            Maximum1 s = new Maximum1();
            }
    @Test
    public void testEmptyArrayAndKEqualsTo0() {
        List<Integer> input = new ArrayList<>();
        int k = 0;
        List<Object> result = original.Maximum1.maximum(input, k);
        assertEquals(Collections.emptyList(), result);
    }
    @Test
    public void testArrGetIGreaterThanHeapPeek2() {
        List<Integer> input = Arrays.asList(5, 4, 3, 2);
        int k = 3;
        List<Object> result = original.Maximum1.maximum(input, k);
        assertEquals(Arrays.asList(3, 4, 5), result);
    }
    @Test
    public void testPollFromHeapAndAddToResultDescOrder() {
        List<Integer> input = Arrays.asList(1, 2, 3);
        int k = 2;
        List<Object> result = Maximum1.maximum(input, k);
        Collections.sort(result, new Comparator<Object>() {
            public int compare(Object o1, Object o2) {
                return (int) o2 - (int) o1;
            }
        });
        assertEquals(Arrays.asList(3, 2), result);
    }
                                    
}