/*
 * This file was automatically generated by EvoSuite
 * Wed May 14 21:07:59 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.SortArray;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SortArray_ESTest extends SortArray_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer(2);
      Integer integer1 = new Integer((-1));
      List<Integer> list0 = List.of(integer0, integer0, integer0, integer0, integer0, integer1);
      LinkedList<Object> linkedList0 = new LinkedList<Object>(list0);
      List<Object> list1 = SortArray.sortArray(linkedList0);
      assertTrue(list1.contains(2));
      assertEquals(6, list1.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      List<Object> list0 = SortArray.sortArray(linkedList0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        SortArray.sortArray((List<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.SortArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer(2);
      Integer integer1 = new Integer(0);
      List<Integer> list0 = List.of(integer0, integer0, integer1, integer1, integer1, integer0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>(list0);
      List<Object> list1 = SortArray.sortArray(linkedList0);
      assertEquals(6, list1.size());
      assertTrue(list1.contains(0));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SortArray sortArray0 = new SortArray();
      List<Object> list0 = List.of((Object) sortArray0);
      // Undeclared exception!
      try { 
        SortArray.sortArray(list0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class original.SortArray cannot be cast to class java.lang.Number (original.SortArray is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @387423cc; java.lang.Number is in module java.base of loader 'bootstrap')
         //
         verifyException("original.SortArray", e);
      }
  }
}
