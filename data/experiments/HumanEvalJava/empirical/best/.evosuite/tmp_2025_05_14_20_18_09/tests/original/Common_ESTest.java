/*
 * This file was automatically generated by EvoSuite
 * Wed May 14 19:59:13 GMT 2025
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.Common;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Common_ESTest extends Common_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      // Undeclared exception!
      try { 
        Common.common(linkedList0, (List<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.Common", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer((-393));
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Object object0 = new Object();
      Integer integer1 = new Integer(980);
      List<Integer> list0 = List.of(integer0, integer0, integer0, integer0, integer0, integer1, integer0, integer0, integer0);
      Common common0 = new Common();
      List<Object> list1 = List.of(object0, object0, (Object) integer0, object0, (Object) list0, (Object) linkedList0, (Object) integer1, (Object) integer0, (Object) integer0, (Object) common0);
      List<Object> list2 = Common.common(list0, list1);
      assertTrue(list2.contains((-393)));
      assertEquals(2, list2.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer((-393));
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      Object object0 = new Object();
      Common common0 = new Common();
      List<Object> list0 = List.of(object0, object0, (Object) integer0, object0, (Object) linkedList0, (Object) linkedList1, (Object) integer0, (Object) integer0, (Object) integer0, (Object) common0);
      List<Object> list1 = Common.common(linkedList0, list0);
      assertFalse(list1.contains((-393)));
  }
}
