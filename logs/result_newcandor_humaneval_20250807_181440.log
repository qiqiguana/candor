nohup: ignoring input
2025-08-07 18:14:40,968   INFO : 

 Processing file 1/160: /home/qinghua/projects/matg/data/experiments/HumanEvalJava/candor_new/run_0/generate/src/main/java/original/id_150.java
2025-08-07 18:14:41.764093: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2025-08-07 18:14:41.774947: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1754586881.786631  509803 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
E0000 00:00:1754586881.789822  509803 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
W0000 00:00:1754586881.798952  509803 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1754586881.798974  509803 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1754586881.798977  509803 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1754586881.798978  509803 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
2025-08-07 18:14:41.801663: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX512F AVX512_VNNI AVX512_BF16 AVX512_FP16 AVX_VNNI AMX_TILE AMX_INT8 AMX_BF16 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2025-08-07 18:14:44,229   INFO : 



                ‚ñó‚ñÑ‚ñÑ‚ñÑ‚ññ  ‚ñó‚ñÑ‚ññ  ‚ñó‚ññ  ‚ñó‚ññ ‚ñó‚ñÑ‚ñÑ‚ñÑ    ‚ñó‚ñÑ‚ññ  ‚ñó‚ñÑ‚ñÑ‚ññ 
                ‚ñê‚ñå    ‚ñê‚ñå ‚ñê‚ñå ‚ñê‚ñõ‚ñö‚ññ‚ñê‚ñå ‚ñê‚ñå  ‚ñà  ‚ñê‚ñå ‚ñê‚ñå ‚ñê‚ñå ‚ñê‚ñå
                ‚ñê‚ñå    ‚ñê‚ñõ‚ñÄ‚ñú‚ñå ‚ñê‚ñå ‚ñù‚ñú‚ñå ‚ñê‚ñå  ‚ñà  ‚ñê‚ñå ‚ñê‚ñå ‚ñê‚ñõ‚ñÄ‚ñö‚ññ
                ‚ñù‚ñö‚ñÑ‚ñÑ‚ññ ‚ñê‚ñå ‚ñê‚ñå ‚ñê‚ñå  ‚ñê‚ñå ‚ñê‚ñô‚ñÑ‚ñÑ‚ñÄ  ‚ñù‚ñö‚ñÑ‚ñû‚ñò ‚ñê‚ñå ‚ñê‚ñå

2025-08-07 18:14:44,229   INFO : ======================================================================

2025-08-07 18:14:44,229   INFO : üöÄ Starting MATG: Multi-Agent LLM-Based Test Generation Framework
2025-08-07 18:14:44,229   INFO : üìò Purpose : Automated test generation for Java using LLM agents
2025-08-07 18:14:44,229   INFO : üß† Agents  : Planner, Generator, Executor, and Evaluator
2025-08-07 18:14:44,229   INFO : üõ†Ô∏è  Engine  : Powered by matg (Machine-Assisted Test Generation)
2025-08-07 18:14:44,229   INFO : ======================================================================


2025-08-07 18:14:47,631   INFO : Initial line coverage: 1.0
Initial branch coverage: 1.0
2025-08-07 18:14:47,635   INFO : Improving coverage for test file /home/qinghua/projects/matg/data/experiments/HumanEvalJava/candor_new/run_0/generate/src/test/java/original/id_150Test.java
2025-08-07 18:14:47,636   INFO : Final line coverage: 1.0
2025-08-07 18:14:47,636   INFO : Final branch coverage: 1.0
2025-08-07 18:14:47,636   INFO : Test generation process completed. Check the test file at /home/qinghua/projects/matg/data/experiments/HumanEvalJava/candor_new/run_0/generate/src/test/java/original/id_150Test.java
2025-08-07 18:14:47,636   INFO : Tensorboard logs saved at tensorboard_logs/id_150
2025-08-07 18:14:48,389   INFO : 

 Processing file 2/160: /home/qinghua/projects/matg/data/experiments/HumanEvalJava/candor_new/run_0/generate/src/main/java/original/id_130.java
2025-08-07 18:14:49.246733: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2025-08-07 18:14:49.257040: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1754586889.268529  510149 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
E0000 00:00:1754586889.271735  510149 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
W0000 00:00:1754586889.280565  510149 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1754586889.280586  510149 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1754586889.280588  510149 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1754586889.280590  510149 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
2025-08-07 18:14:49.283277: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX512F AVX512_VNNI AVX512_BF16 AVX512_FP16 AVX_VNNI AMX_TILE AMX_INT8 AMX_BF16 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2025-08-07 18:14:51,771   INFO : 



                ‚ñó‚ñÑ‚ñÑ‚ñÑ‚ññ  ‚ñó‚ñÑ‚ññ  ‚ñó‚ññ  ‚ñó‚ññ ‚ñó‚ñÑ‚ñÑ‚ñÑ    ‚ñó‚ñÑ‚ññ  ‚ñó‚ñÑ‚ñÑ‚ññ 
                ‚ñê‚ñå    ‚ñê‚ñå ‚ñê‚ñå ‚ñê‚ñõ‚ñö‚ññ‚ñê‚ñå ‚ñê‚ñå  ‚ñà  ‚ñê‚ñå ‚ñê‚ñå ‚ñê‚ñå ‚ñê‚ñå
                ‚ñê‚ñå    ‚ñê‚ñõ‚ñÄ‚ñú‚ñå ‚ñê‚ñå ‚ñù‚ñú‚ñå ‚ñê‚ñå  ‚ñà  ‚ñê‚ñå ‚ñê‚ñå ‚ñê‚ñõ‚ñÄ‚ñö‚ññ
                ‚ñù‚ñö‚ñÑ‚ñÑ‚ññ ‚ñê‚ñå ‚ñê‚ñå ‚ñê‚ñå  ‚ñê‚ñå ‚ñê‚ñô‚ñÑ‚ñÑ‚ñÄ  ‚ñù‚ñö‚ñÑ‚ñû‚ñò ‚ñê‚ñå ‚ñê‚ñå

2025-08-07 18:14:51,771   INFO : ======================================================================

2025-08-07 18:14:51,771   INFO : üöÄ Starting MATG: Multi-Agent LLM-Based Test Generation Framework
2025-08-07 18:14:51,771   INFO : üìò Purpose : Automated test generation for Java using LLM agents
2025-08-07 18:14:51,771   INFO : üß† Agents  : Planner, Generator, Executor, and Evaluator
2025-08-07 18:14:51,771   INFO : üõ†Ô∏è  Engine  : Powered by matg (Machine-Assisted Test Generation)
2025-08-07 18:14:51,771   INFO : ======================================================================


2025-08-07 18:14:55,150   INFO : Initial line coverage: 1.0
Initial branch coverage: 1.0
2025-08-07 18:14:55,154   INFO : Improving coverage for test file /home/qinghua/projects/matg/data/experiments/HumanEvalJava/candor_new/run_0/generate/src/test/java/original/id_130Test.java
2025-08-07 18:14:55,156   INFO : Final line coverage: 1.0
2025-08-07 18:14:55,156   INFO : Final branch coverage: 1.0
2025-08-07 18:14:55,156   INFO : Test generation process completed. Check the test file at /home/qinghua/projects/matg/data/experiments/HumanEvalJava/candor_new/run_0/generate/src/test/java/original/id_130Test.java
2025-08-07 18:14:55,156   INFO : Tensorboard logs saved at tensorboard_logs/id_130
2025-08-07 18:14:55,910   INFO : 

 Processing file 3/160: /home/qinghua/projects/matg/data/experiments/HumanEvalJava/candor_new/run_0/generate/src/main/java/original/id_146.java
2025-08-07 18:14:56.765998: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2025-08-07 18:14:56.776655: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1754586896.788321  510486 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
E0000 00:00:1754586896.791651  510486 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
W0000 00:00:1754586896.800636  510486 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1754586896.800657  510486 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1754586896.800659  510486 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1754586896.800661  510486 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
2025-08-07 18:14:56.803383: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX512F AVX512_VNNI AVX512_BF16 AVX512_FP16 AVX_VNNI AMX_TILE AMX_INT8 AMX_BF16 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2025-08-07 18:14:59,228   INFO : 



                ‚ñó‚ñÑ‚ñÑ‚ñÑ‚ññ  ‚ñó‚ñÑ‚ññ  ‚ñó‚ññ  ‚ñó‚ññ ‚ñó‚ñÑ‚ñÑ‚ñÑ    ‚ñó‚ñÑ‚ññ  ‚ñó‚ñÑ‚ñÑ‚ññ 
                ‚ñê‚ñå    ‚ñê‚ñå ‚ñê‚ñå ‚ñê‚ñõ‚ñö‚ññ‚ñê‚ñå ‚ñê‚ñå  ‚ñà  ‚ñê‚ñå ‚ñê‚ñå ‚ñê‚ñå ‚ñê‚ñå
                ‚ñê‚ñå    ‚ñê‚ñõ‚ñÄ‚ñú‚ñå ‚ñê‚ñå ‚ñù‚ñú‚ñå ‚ñê‚ñå  ‚ñà  ‚ñê‚ñå ‚ñê‚ñå ‚ñê‚ñõ‚ñÄ‚ñö‚ññ
                ‚ñù‚ñö‚ñÑ‚ñÑ‚ññ ‚ñê‚ñå ‚ñê‚ñå ‚ñê‚ñå  ‚ñê‚ñå ‚ñê‚ñô‚ñÑ‚ñÑ‚ñÄ  ‚ñù‚ñö‚ñÑ‚ñû‚ñò ‚ñê‚ñå ‚ñê‚ñå

2025-08-07 18:14:59,228   INFO : ======================================================================

2025-08-07 18:14:59,228   INFO : üöÄ Starting MATG: Multi-Agent LLM-Based Test Generation Framework
2025-08-07 18:14:59,228   INFO : üìò Purpose : Automated test generation for Java using LLM agents
2025-08-07 18:14:59,228   INFO : üß† Agents  : Planner, Generator, Executor, and Evaluator
2025-08-07 18:14:59,228   INFO : üõ†Ô∏è  Engine  : Powered by matg (Machine-Assisted Test Generation)
2025-08-07 18:14:59,228   INFO : ======================================================================


2025-08-07 18:15:02,560   INFO : Initial line coverage: 1.0
Initial branch coverage: 1.0
2025-08-07 18:15:02,563   INFO : Improving coverage for test file /home/qinghua/projects/matg/data/experiments/HumanEvalJava/candor_new/run_0/generate/src/test/java/original/id_146Test.java
2025-08-07 18:15:02,564   INFO : Final line coverage: 1.0
2025-08-07 18:15:02,564   INFO : Final branch coverage: 1.0
2025-08-07 18:15:02,564   INFO : Test generation process completed. Check the test file at /home/qinghua/projects/matg/data/experiments/HumanEvalJava/candor_new/run_0/generate/src/test/java/original/id_146Test.java
2025-08-07 18:15:02,564   INFO : Tensorboard logs saved at tensorboard_logs/id_146
2025-08-07 18:15:03,273   INFO : 

 Processing file 4/160: /home/qinghua/projects/matg/data/experiments/HumanEvalJava/candor_new/run_0/generate/src/main/java/original/id_39.java
2025-08-07 18:15:04.141164: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2025-08-07 18:15:04.151499: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1754586904.163039  510809 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
E0000 00:00:1754586904.166482  510809 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
W0000 00:00:1754586904.175753  510809 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1754586904.175775  510809 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1754586904.175777  510809 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1754586904.175778  510809 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
2025-08-07 18:15:04.178496: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX512F AVX512_VNNI AVX512_BF16 AVX512_FP16 AVX_VNNI AMX_TILE AMX_INT8 AMX_BF16 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2025-08-07 18:15:06,588   INFO : 



                ‚ñó‚ñÑ‚ñÑ‚ñÑ‚ññ  ‚ñó‚ñÑ‚ññ  ‚ñó‚ññ  ‚ñó‚ññ ‚ñó‚ñÑ‚ñÑ‚ñÑ    ‚ñó‚ñÑ‚ññ  ‚ñó‚ñÑ‚ñÑ‚ññ 
                ‚ñê‚ñå    ‚ñê‚ñå ‚ñê‚ñå ‚ñê‚ñõ‚ñö‚ññ‚ñê‚ñå ‚ñê‚ñå  ‚ñà  ‚ñê‚ñå ‚ñê‚ñå ‚ñê‚ñå ‚ñê‚ñå
                ‚ñê‚ñå    ‚ñê‚ñõ‚ñÄ‚ñú‚ñå ‚ñê‚ñå ‚ñù‚ñú‚ñå ‚ñê‚ñå  ‚ñà  ‚ñê‚ñå ‚ñê‚ñå ‚ñê‚ñõ‚ñÄ‚ñö‚ññ
                ‚ñù‚ñö‚ñÑ‚ñÑ‚ññ ‚ñê‚ñå ‚ñê‚ñå ‚ñê‚ñå  ‚ñê‚ñå ‚ñê‚ñô‚ñÑ‚ñÑ‚ñÄ  ‚ñù‚ñö‚ñÑ‚ñû‚ñò ‚ñê‚ñå ‚ñê‚ñå

2025-08-07 18:15:06,588   INFO : ======================================================================

2025-08-07 18:15:06,588   INFO : üöÄ Starting MATG: Multi-Agent LLM-Based Test Generation Framework
2025-08-07 18:15:06,588   INFO : üìò Purpose : Automated test generation for Java using LLM agents
2025-08-07 18:15:06,588   INFO : üß† Agents  : Planner, Generator, Executor, and Evaluator
2025-08-07 18:15:06,588   INFO : üõ†Ô∏è  Engine  : Powered by matg (Machine-Assisted Test Generation)
2025-08-07 18:15:06,588   INFO : ======================================================================


2025-08-07 18:15:10,557   INFO : Initial line coverage: 0.9444444444444444
Initial branch coverage: 0.9
2025-08-07 18:15:10,561   INFO : Improving coverage for test file /home/qinghua/projects/matg/data/experiments/HumanEvalJava/candor_new/run_0/generate/src/test/java/original/id_39Test.java
2025-08-07 18:15:10,562   INFO : üö®üö®üö® üöÄ üöÄ üöÄ ----- ü§ñ AGENT PLANNER: Generating test plan ----- üöÄ üöÄ üöÄ üö®üö®üö® 
Lines to cover: [57]
Lines with missing branches: [56]
Here is a test plan in JSON format that covers the uncovered lines and branches:
```json
{
  "$defs": {
    "TestCasePlan": {
      "properties": {
        "name": {"description": "The name of the test case", "title": "Name", "type": "string"},
        "description": {"description": "The description of the test case", "title": "Description", "type": "string"},
        "input": {"description": "Input parameters for the test case", "title": "Input", "type": "string"},
        "expected_result": {"description": "Expected result for the test case", "title": "Expected Result", "type": "string"}
      },
      "required": ["name", "description", "input", "expected_result"],
      "title": "TestCasePlan",
      "type": "object"
    }
  },
  "properties": {
    "test_cases_to_add": {
      "description": "List of new test cases to add",
      "items": {"$ref": "#/$defs/TestCasePlan"},
      "title": "Test Cases To Add",
      "type": "array"
    },
    "conventions": {
      "default": [],
      "description": "List of conventions followed in the test suite",
      "items": {"type": "string"},
      "title": "Conventions",
      "type": "array"
    },
    "test_framework": {
      "const": "JUnit5",
      "default": "JUnit5",
      "description": "The test framework used",
      "title": "Test Framework",
      "type": "string"
    },
    "language": {
      "const": "Java",
      "default": "Java",
      "description": "The programming language used for the tests",
      "title":2025-08-07 18:15:33,350   INFO : Final line coverage: 0.9444444444444444
2025-08-07 18:15:33,351   INFO : Final branch coverage: 0.9
2025-08-07 18:15:33,351   INFO : Test generation process completed. Check the test file at /home/qinghua/projects/matg/data/experiments/HumanEvalJava/candor_new/run_0/generate/src/test/java/original/id_39Test.java
2025-08-07 18:15:33,351   INFO : Tensorboard logs saved at tensorboard_logs/id_39
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/qinghua/projects/matg/main.py", line 87, in <module>
    main()
  File "/home/qinghua/projects/matg/main.py", line 80, in main
    test_generator.run()
  File "/home/qinghua/projects/matg/generate.py", line 117, in run
    test_plan=self._generate_test_plan()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/qinghua/projects/matg/generate.py", line 165, in _generate_test_plan
    plan=self.planner.invoke([("system", planner_system_prompt), ("user", planner_user_prompt)]).dict()
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/langchain_core/runnables/retry.py", line 201, in invoke
    return self._call_with_config(self._invoke, input, config, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/langchain_core/runnables/base.py", line 1940, in _call_with_config
    context.run(
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/langchain_core/runnables/config.py", line 428, in call_func_with_variable_args
    return func(input, **kwargs)  # type: ignore[call-arg]
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/langchain_core/runnables/retry.py", line 186, in _invoke
    for attempt in self._sync_retrying(reraise=True):
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/langchain_core/runnables/retry.py", line 188, in _invoke
    result = super().invoke(
             ^^^^^^^^^^^^^^^
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/langchain_core/runnables/base.py", line 5430, in invoke
    return self.bound.invoke(
           ^^^^^^^^^^^^^^^^^^
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/langchain_core/runnables/base.py", line 3045, in invoke
    input_ = context.run(step.invoke, input_, config, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py", line 371, in invoke
    self.generate_prompt(
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py", line 956, in generate_prompt
    return self.generate(prompt_messages, stop=stop, callbacks=callbacks, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py", line 775, in generate
    self._generate_with_cache(
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py", line 1021, in _generate_with_cache
    result = self._generate(
             ^^^^^^^^^^^^^^^
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/langchain_ollama/chat_models.py", line 701, in _generate
    final_chunk = self._chat_stream_with_aggregation(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/langchain_ollama/chat_models.py", line 602, in _chat_stream_with_aggregation
    for stream_resp in self._create_chat_stream(messages, stop, **kwargs):
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/langchain_ollama/chat_models.py", line 589, in _create_chat_stream
    yield from self._client.chat(**chat_params)
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/ollama/_client.py", line 170, in inner
    for line in r.iter_lines():
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/httpx/_models.py", line 929, in iter_lines
    for text in self.iter_text():
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/httpx/_models.py", line 916, in iter_text
    for byte_content in self.iter_bytes():
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/httpx/_models.py", line 897, in iter_bytes
    for raw_bytes in self.iter_raw():
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/httpx/_models.py", line 951, in iter_raw
    for raw_stream_bytes in self.stream:
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/httpx/_client.py", line 153, in __iter__
    for chunk in self._stream:
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/httpx/_transports/default.py", line 127, in __iter__
    for part in self._httpcore_stream:
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 407, in __iter__
    raise exc from None
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 403, in __iter__
    for part in self._stream:
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 342, in __iter__
    raise exc
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 334, in __iter__
    for chunk in self._connection._receive_response_body(**kwargs):
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 203, in _receive_response_body
    event = self._receive_event(timeout=timeout)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 217, in _receive_event
    data = self._network_stream.read(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/site-packages/httpcore/_backends/sync.py", line 128, in read
    return self._sock.recv(max_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/qinghua/projects/matg/run_experiments.py", line 86, in <module>
    subprocess.run(command, check=True)
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/subprocess.py", line 550, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/subprocess.py", line 1201, in communicate
    self.wait()
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/subprocess.py", line 1264, in wait
    return self._wait(timeout=timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/subprocess.py", line 2053, in _wait
    (pid, sts) = self._try_wait(0)
                 ^^^^^^^^^^^^^^^^^
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/subprocess.py", line 2011, in _try_wait
    (pid, sts) = os.waitpid(self.pid, wait_flags)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
