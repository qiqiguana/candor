nohup: ignoring input
2025-05-02 22:28:58,931   INFO : Processing file: /home/qinghua/projects/matg/data/HumanEvalJava/matg/src/main/java/original/id_150.java
2025-05-02 22:28:59,418   INFO : ======================================================================

2025-05-02 22:28:59,418   INFO : 🚀 Starting MATG: Multi-Agent LLM-Based Test Generation Framework
2025-05-02 22:28:59,418   INFO : 📘 Purpose : Automated test generation for Java using LLM agents
2025-05-02 22:28:59,418   INFO : 🧠 Agents  : Planner, Generator, Executor, and Evaluator
2025-05-02 22:28:59,418   INFO : 🛠️  Engine  : Powered by matg (Machine-Assisted Test Generation)
2025-05-02 22:28:59,418   INFO : ======================================================================

2025-05-02 22:28:59,432   INFO : Test file already exists at /home/qinghua/projects/matg/data/HumanEvalJava/matg/src/test/java/original/id_150Test.java


                                    ███    ███  █████   ███████     ██████  
                                    ████  ████ ██   ██    ███    ██    
                                    ██ ████ ██ ███████    ███    ██   ████
                                    ██  ██  ██ ██   ██    ███    ██     ██ 
                                    ██      ██ ██   ██    ███      ███████  

2025-05-02 22:29:02,059   INFO : Processing file: /home/qinghua/projects/matg/data/HumanEvalJava/matg/src/main/java/original/id_130.java
2025-05-02 22:29:02,544   INFO : ======================================================================

2025-05-02 22:29:02,544   INFO : 🚀 Starting MATG: Multi-Agent LLM-Based Test Generation Framework
2025-05-02 22:29:02,544   INFO : 📘 Purpose : Automated test generation for Java using LLM agents
2025-05-02 22:29:02,544   INFO : 🧠 Agents  : Planner, Generator, Executor, and Evaluator
2025-05-02 22:29:02,544   INFO : 🛠️  Engine  : Powered by matg (Machine-Assisted Test Generation)
2025-05-02 22:29:02,544   INFO : ======================================================================

2025-05-02 22:29:02,559   INFO : 🚨🚨🚨 🚀 🚀 🚀 ----- 🤖 AGENT Initializer: Generating initial test file ----- 🚀 🚀 🚀 🚨🚨🚨 


                                    ███    ███  █████   ███████     ██████  
                                    ████  ████ ██   ██    ███    ██    
                                    ██ ████ ██ ███████    ███    ██   ████
                                    ██  ██  ██ ██   ██    ███    ██     ██ 
                                    ██      ██ ██   ██    ███      ███████  

{"test_file_code": "package original;\n\nimport java.util.ArrayList;\n\nimport java.util.Arrays;\n\nimport java.util.List;\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n/**\n* Test class of Tri.\n*/\nclass TriTest {\n\n    @Test\n    void testTri_ForZeroInput_ReturnsOne() {\n        // Arrange and Act\n        List<Number> result = Tri.tri(0);\n\n        // Assert\n        assertEquals(Arrays.asList(1), result);\n    }\n}\n"}2025-05-02 22:29:14,833   INFO : Test passed!
2025-05-02 22:29:14,833   INFO : Test file created at /home/qinghua/projects/matg/data/HumanEvalJava/matg/src/test/java/original/id_130Test.java
2025-05-02 22:29:17,500   INFO : Processing file: /home/qinghua/projects/matg/data/HumanEvalJava/matg/src/main/java/original/id_146.java
2025-05-02 22:29:17,979   INFO : ======================================================================

2025-05-02 22:29:17,979   INFO : 🚀 Starting MATG: Multi-Agent LLM-Based Test Generation Framework
2025-05-02 22:29:17,979   INFO : 📘 Purpose : Automated test generation for Java using LLM agents
2025-05-02 22:29:17,979   INFO : 🧠 Agents  : Planner, Generator, Executor, and Evaluator
2025-05-02 22:29:17,979   INFO : 🛠️  Engine  : Powered by matg (Machine-Assisted Test Generation)
2025-05-02 22:29:17,979   INFO : ======================================================================

2025-05-02 22:29:17,995   INFO : 🚨🚨🚨 🚀 🚀 🚀 ----- 🤖 AGENT Initializer: Generating initial test file ----- 🚀 🚀 🚀 🚨🚨🚨 


                                    ███    ███  █████   ███████     ██████  
                                    ████  ████ ██   ██    ███    ██    
                                    ██ ████ ██ ███████    ███    ██   ████
                                    ██  ██  ██ ██   ██    ███    ██     ██ 
                                    ██      ██ ██   ██    ███      ███████  

{
  "test_file_code": "package original;\n\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Set;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n/**\n* Test class of Specialfilter.\n*/\nclass SpecialfilterTest {\n\n    @Test\n    void test_specialfilter_with_numbers_greater_than_10_and_both_first_and_last_digits_odd() {\n        List<Object> nums = Arrays.asList(33, -2, -3, 45, 21, 109);\n        assertEquals(2, Specialfilter.specialfilter(nums));\n    }\n}"
}2025-05-02 22:29:30,783   INFO : Test passed!
2025-05-02 22:29:30,783   INFO : Test file created at /home/qinghua/projects/matg/data/HumanEvalJava/matg/src/test/java/original/id_146Test.java
2025-05-02 22:29:33,482   INFO : Processing file: /home/qinghua/projects/matg/data/HumanEvalJava/matg/src/main/java/original/id_39.java
2025-05-02 22:29:33,962   INFO : ======================================================================

2025-05-02 22:29:33,962   INFO : 🚀 Starting MATG: Multi-Agent LLM-Based Test Generation Framework
2025-05-02 22:29:33,962   INFO : 📘 Purpose : Automated test generation for Java using LLM agents
2025-05-02 22:29:33,962   INFO : 🧠 Agents  : Planner, Generator, Executor, and Evaluator
2025-05-02 22:29:33,962   INFO : 🛠️  Engine  : Powered by matg (Machine-Assisted Test Generation)
2025-05-02 22:29:33,962   INFO : ======================================================================

2025-05-02 22:29:33,978   INFO : 🚨🚨🚨 🚀 🚀 🚀 ----- 🤖 AGENT Initializer: Generating initial test file ----- 🚀 🚀 🚀 🚨🚨🚨 


                                    ███    ███  █████   ███████     ██████  
                                    ████  ████ ██   ██    ███    ██    
                                    ██ ████ ██ ███████    ███    ██   ████
                                    ██  ██  ██ ██   ██    ███    ██     ██ 
                                    ██      ██ ██   ██    ███      ███████  

{"test_file_code": "package original;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n/**\n* Test class of PrimeFib.\n*/\nclass PrimeFibTest {\n    @Test\n    void testPrimeFib_1() {\n        assertEquals(2, PrimeFib.primeFib(1));\n    }\n}" }2025-05-02 22:29:43,275   INFO : Test passed!
2025-05-02 22:29:43,275   INFO : Test file created at /home/qinghua/projects/matg/data/HumanEvalJava/matg/src/test/java/original/id_39Test.java
2025-05-02 22:29:45,903   INFO : Processing file: /home/qinghua/projects/matg/data/HumanEvalJava/matg/src/main/java/original/id_53.java
2025-05-02 22:29:46,385   INFO : ======================================================================

2025-05-02 22:29:46,385   INFO : 🚀 Starting MATG: Multi-Agent LLM-Based Test Generation Framework
2025-05-02 22:29:46,385   INFO : 📘 Purpose : Automated test generation for Java using LLM agents
2025-05-02 22:29:46,385   INFO : 🧠 Agents  : Planner, Generator, Executor, and Evaluator
2025-05-02 22:29:46,385   INFO : 🛠️  Engine  : Powered by matg (Machine-Assisted Test Generation)
2025-05-02 22:29:46,385   INFO : ======================================================================

2025-05-02 22:29:46,400   INFO : 🚨🚨🚨 🚀 🚀 🚀 ----- 🤖 AGENT Initializer: Generating initial test file ----- 🚀 🚀 🚀 🚨🚨🚨 


                                    ███    ███  █████   ███████     ██████  
                                    ████  ████ ██   ██    ███    ██    
                                    ██ ████ ██ ███████    ███    ██   ████
                                    ██  ██  ██ ██   ██    ███    ██     ██ 
                                    ██      ██ ██   ██    ███      ███████  

{
  "test_file_code": "package original;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n/**\n* Test class of Add.\n*/\nclass AddTest {\n\n    @Test\n    void testAdd() {\n        assertEquals(3, add(1, 2));\n    }\n}"
}2025-05-02 22:29:57,233   INFO : Test passed!
2025-05-02 22:29:57,233   INFO : Test file created at /home/qinghua/projects/matg/data/HumanEvalJava/matg/src/test/java/original/id_53Test.java
Traceback (most recent call last):
  File "/home/qinghua/projects/matg/main.py", line 68, in <module>
    main()
  File "/home/qinghua/projects/matg/main.py", line 60, in main
    initializer.run()
  File "/home/qinghua/projects/matg/initialize.py", line 48, in run
    subprocess.run(self.config.test_command.split(),capture_output=True,text=True,cwd=os.getcwd(), check=True)
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/subprocess.py", line 571, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['mvn', '-f', '/home/qinghua/projects/matg/data/HumanEvalJava/matg/pom.xml', 'clean', 'test', 'jacoco:report']' returned non-zero exit status 1.
Traceback (most recent call last):
  File "/home/qinghua/projects/matg/experiments/preliminary/v0/run.py", line 26, in <module>
    subprocess.run(command, check=True)
  File "/home/qinghua/anaconda3/envs/llm4test/lib/python3.11/subprocess.py", line 571, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['python', '/home/qinghua/projects/matg/main.py', 'initialize', '--data-path', '/home/qinghua/projects/matg/data/HumanEvalJava/matg', '--relative-source-file-path', '/home/qinghua/projects/matg/data/HumanEvalJava/matg/src/main/java/original/id_53.java', '--relative-test-file-path', '/home/qinghua/projects/matg/data/HumanEvalJava/matg/src/test/java/original/id_53Test.java', '--coverage-report-path', '/home/qinghua/projects/matg/data/HumanEvalJava/matg/target/site/jacoco', '--test-command', 'mvn -f /home/qinghua/projects/matg/data/HumanEvalJava/matg/pom.xml clean test jacoco:report', '--generator', 'matg', '--max-attempts', '3']' returned non-zero exit status 1.
