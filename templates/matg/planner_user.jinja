# Test Plan Generation for {{ source_file_name }}
## Source File
Below is the source file for which you will write tests. Line numbers are added for reference only.
```Java
{{ source_file_numbered }}
```

{% if lines_to_cover | length >0 %}
## Uncovered Lines
Generate tests to cover these line numbers:
{{ lines_to_cover }}
{% endif %}

{% if missing_branches | length>0%}
## Uncovered Branches
## The branches in the following lines are not covered. Analyse why these branches are not covered and how to cover them with test cases. Make sure to cover them in your plan:
{{ missing_branches }}
{% endif%}
Analyze this file to understand existing tests, structure, and conventions:
```Java
{{ test_file }}
```
## Response Guidelines
1. Focus on covering uncovered lines
2. Analyze and follow existing test suite conventions
3. Provide only the formatted test plan, no additional explanations
4. Generate the input and expecteed result should be using Java data structures
5. Do NOT call or test private methods directly. In Java, private methods can only be accessed from within the same class â€” they are not accessible from unit test classes. Only generate tests for public methods. Focus on the public API of the class.
 

## Output Format
{{format_instructions}}